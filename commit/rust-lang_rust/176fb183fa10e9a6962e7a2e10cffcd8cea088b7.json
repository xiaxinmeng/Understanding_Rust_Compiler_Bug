{"sha": "176fb183fa10e9a6962e7a2e10cffcd8cea088b7", "node_id": "C_kwDOAAsO6NoAKDE3NmZiMTgzZmExMGU5YTY5NjJlN2EyZTEwY2ZmY2Q4Y2VhMDg4Yjc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-16T16:23:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-16T16:23:12Z"}, "message": "Rollup merge of #91987 - jsha:docdocgoose, r=jyn514\n\nAdd module documentation for rustdoc passes\n\nThese are currently documented at https://rustc-dev-guide.rust-lang.org/rustdoc-internals.html#hot-potato but can easily go out of date. We'd like to document them in place and link to https://doc.rust-lang.org/nightly/nightly-rustc/rustdoc/passes/index.html\n\n[Discussed on Zulip](https://rust-lang.zulipchat.com/#narrow/stream/266220-rustdoc/topic/moving.20pass.20docs/near/265058351).\n\nr? `@camelid`", "tree": {"sha": "105cb26a78bc694df1ca01a88e38e688af2748b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/105cb26a78bc694df1ca01a88e38e688af2748b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/176fb183fa10e9a6962e7a2e10cffcd8cea088b7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhu2fwCRBK7hj4Ov3rIwAA/dEIAD6hgUWEO7Jg2hrtoDDr7vfG\nRpgdNsv7ohbleZrl7BePeRNWvfBCIsugk9x3hzUdy20WCFgy7SBxpiSih5BQajzH\n2GDs3In95gP1sd2wx47e/TkefnqplgJh6PJUdPrcti0Zd3LGVr2mCxJfBCV09dzD\nXS4bhTCJh0ExUOKIQoBaFsZTgrwbyhW86L7Ka2QpdsNOgc0fsSsdp/d0MxJrtmSU\nzgXJFe+rC/CRK7pvRRT1CvwufWUCff/JivYpjvrtLutbSH0YHKq8jdm4dgY2otpO\nE4uvetb5MLlgSiV4vfocQSOqv2po2v53v92+CTMNtA6ZbBgIsqBpal6BHb48LPk=\n=6mVZ\n-----END PGP SIGNATURE-----\n", "payload": "tree 105cb26a78bc694df1ca01a88e38e688af2748b9\nparent 355ed988c475822eaed80a84b82f1bcc0dad76f0\nparent 1d10e1acf6cc8e519d4119cb61d266eb0e517268\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639671792 +0100\ncommitter GitHub <noreply@github.com> 1639671792 +0100\n\nRollup merge of #91987 - jsha:docdocgoose, r=jyn514\n\nAdd module documentation for rustdoc passes\n\nThese are currently documented at https://rustc-dev-guide.rust-lang.org/rustdoc-internals.html#hot-potato but can easily go out of date. We'd like to document them in place and link to https://doc.rust-lang.org/nightly/nightly-rustc/rustdoc/passes/index.html\n\n[Discussed on Zulip](https://rust-lang.zulipchat.com/#narrow/stream/266220-rustdoc/topic/moving.20pass.20docs/near/265058351).\n\nr? `@camelid`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/176fb183fa10e9a6962e7a2e10cffcd8cea088b7", "html_url": "https://github.com/rust-lang/rust/commit/176fb183fa10e9a6962e7a2e10cffcd8cea088b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "355ed988c475822eaed80a84b82f1bcc0dad76f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/355ed988c475822eaed80a84b82f1bcc0dad76f0", "html_url": "https://github.com/rust-lang/rust/commit/355ed988c475822eaed80a84b82f1bcc0dad76f0"}, {"sha": "1d10e1acf6cc8e519d4119cb61d266eb0e517268", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d10e1acf6cc8e519d4119cb61d266eb0e517268", "html_url": "https://github.com/rust-lang/rust/commit/1d10e1acf6cc8e519d4119cb61d266eb0e517268"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "3410f46e2a8d2d71d6e168c6664ed99a348232c9", "filename": "src/librustdoc/passes/bare_urls.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fbare_urls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fbare_urls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fbare_urls.rs?ref=176fb183fa10e9a6962e7a2e10cffcd8cea088b7", "patch": "@@ -1,3 +1,5 @@\n+//! Detects links that are not linkified, e.g., in Markdown such as `Go to https://example.com/.`\n+//! Suggests wrapping the link with angle brackets: `Go to <https://example.com/>.` to linkify it.\n use super::Pass;\n use crate::clean::*;\n use crate::core::DocContext;"}, {"sha": "6111c982de92253b51f52c65d86910dbaeaf5f35", "filename": "src/librustdoc/passes/calculate_doc_coverage.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fcalculate_doc_coverage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fcalculate_doc_coverage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcalculate_doc_coverage.rs?ref=176fb183fa10e9a6962e7a2e10cffcd8cea088b7", "patch": "@@ -1,3 +1,4 @@\n+//! Calculates information used for the --show-coverage flag.\n use crate::clean;\n use crate::core::DocContext;\n use crate::html::markdown::{find_testable_code, ErrorCodes};"}, {"sha": "a50bf558bf3d142489ffc7e38f2825b67b9d48bd", "filename": "src/librustdoc/passes/check_code_block_syntax.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs?ref=176fb183fa10e9a6962e7a2e10cffcd8cea088b7", "patch": "@@ -1,3 +1,4 @@\n+//! Validates syntax inside Rust code blocks (\\`\\`\\`rust).\n use rustc_data_structures::sync::{Lock, Lrc};\n use rustc_errors::{emitter::Emitter, Applicability, Diagnostic, Handler};\n use rustc_middle::lint::LintDiagnosticBuilder;"}, {"sha": "b86ec8abefaaea8e242b16cc79d4362ae32b8804", "filename": "src/librustdoc/passes/check_doc_test_visibility.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fcheck_doc_test_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fcheck_doc_test_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcheck_doc_test_visibility.rs?ref=176fb183fa10e9a6962e7a2e10cffcd8cea088b7", "patch": "@@ -1,3 +1,5 @@\n+//! Looks for items missing (or incorrectly having) doctests.\n+//!\n //! This pass is overloaded and runs two different lints.\n //!\n //! - MISSING_DOC_CODE_EXAMPLES: this lint is **UNSTABLE** and looks for public items missing doctests."}, {"sha": "baa0c7595eb869a75765d390fd185cc74ee8d9a2", "filename": "src/librustdoc/passes/collect_trait_impls.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs?ref=176fb183fa10e9a6962e7a2e10cffcd8cea088b7", "patch": "@@ -1,3 +1,6 @@\n+//! Collects trait impls for each item in the crate. For example, if a crate\n+//! defines a struct that implements a trait, this pass will note that the\n+//! struct implements that trait.\n use super::Pass;\n use crate::clean::*;\n use crate::core::DocContext;"}, {"sha": "f7a9a0899e390281e1f9faf705bec3da84c5fe8f", "filename": "src/librustdoc/passes/html_tags.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs?ref=176fb183fa10e9a6962e7a2e10cffcd8cea088b7", "patch": "@@ -1,3 +1,4 @@\n+//! Detects invalid HTML (like an unclosed `<span>`) in doc comments.\n use super::Pass;\n use crate::clean::*;\n use crate::core::DocContext;"}, {"sha": "d3df2d2794b4271819de9c5344d65a5dfcff9336", "filename": "src/librustdoc/passes/propagate_doc_cfg.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fpropagate_doc_cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fpropagate_doc_cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fpropagate_doc_cfg.rs?ref=176fb183fa10e9a6962e7a2e10cffcd8cea088b7", "patch": "@@ -1,3 +1,4 @@\n+//! Propagates [`#[doc(cfg(...))]`](https://github.com/rust-lang/rust/issues/43781) to child items.\n use std::sync::Arc;\n \n use crate::clean::cfg::Cfg;"}, {"sha": "e63534659add7836950c26917203fb312289a7e2", "filename": "src/librustdoc/passes/strip_hidden.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs?ref=176fb183fa10e9a6962e7a2e10cffcd8cea088b7", "patch": "@@ -1,3 +1,4 @@\n+//! Strip all doc(hidden) items from the output.\n use rustc_span::symbol::sym;\n use std::mem;\n "}, {"sha": "21ce9ae7a28e1f4387d42c9f319168743fbd9a67", "filename": "src/librustdoc/passes/strip_priv_imports.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fstrip_priv_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fstrip_priv_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstrip_priv_imports.rs?ref=176fb183fa10e9a6962e7a2e10cffcd8cea088b7", "patch": "@@ -1,3 +1,5 @@\n+//! Strips all private import statements (use, extern crate) from a\n+//! crate.\n use crate::clean;\n use crate::core::DocContext;\n use crate::fold::DocFolder;"}, {"sha": "c6b5bec4692dc3b4fbafb94bee7830d266c4289a", "filename": "src/librustdoc/passes/strip_private.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs?ref=176fb183fa10e9a6962e7a2e10cffcd8cea088b7", "patch": "@@ -1,3 +1,5 @@\n+//! Strip all private items from the output. Additionally implies strip_priv_imports.\n+//! Basically, the goal is to remove items that are not relevant for public documentation.\n use crate::clean::{self, ItemIdSet};\n use crate::core::DocContext;\n use crate::fold::DocFolder;"}, {"sha": "675443b48a206d509cd0cdcf58ca84ce5ef85fea", "filename": "src/librustdoc/passes/stripper.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fstripper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Fstripper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstripper.rs?ref=176fb183fa10e9a6962e7a2e10cffcd8cea088b7", "patch": "@@ -1,3 +1,4 @@\n+//! A collection of utility functions for the `strip_*` passes.\n use rustc_hir::def_id::DefId;\n use rustc_middle::middle::privacy::AccessLevels;\n use std::mem;"}, {"sha": "6cac31d2f90dcd1eb3dc0e53ada809678e3f6cce", "filename": "src/librustdoc/passes/unindent_comments.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Funindent_comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/176fb183fa10e9a6962e7a2e10cffcd8cea088b7/src%2Flibrustdoc%2Fpasses%2Funindent_comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Funindent_comments.rs?ref=176fb183fa10e9a6962e7a2e10cffcd8cea088b7", "patch": "@@ -1,3 +1,16 @@\n+//! Removes excess indentation on comments in order for the Markdown\n+//! to be parsed correctly. This is necessary because the convention for\n+//! writing documentation is to provide a space between the /// or //! marker\n+//! and the doc text, but Markdown is whitespace-sensitive. For example,\n+//! a block of text with four-space indentation is parsed as a code block,\n+//! so if we didn't unindent comments, these list items\n+//!\n+//! /// A list:\n+//! ///\n+//! ///    - Foo\n+//! ///    - Bar\n+//!\n+//! would be parsed as if they were in a code block, which is likely not what the user intended.\n use std::cmp;\n \n use rustc_span::symbol::kw;"}]}