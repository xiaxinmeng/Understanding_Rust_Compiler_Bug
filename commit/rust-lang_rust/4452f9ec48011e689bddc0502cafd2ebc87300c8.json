{"sha": "4452f9ec48011e689bddc0502cafd2ebc87300c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0NTJmOWVjNDgwMTFlNjg5YmRkYzA1MDJjYWZkMmViYzg3MzAwYzg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-08-30T12:55:40Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-08-30T12:55:40Z"}, "message": "internal: improve style\n\nGroup related stuff together, use only on path for parsing extern blocks\n(they actually have modifiers).\n\nPerhaps we should get rid of items_without_modifiers altogether? Better\nto handle these kinds on diagnostics in validation layer...", "tree": {"sha": "dde5ee4c33c3965bdb9d12a3319dbeafe050c3df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dde5ee4c33c3965bdb9d12a3319dbeafe050c3df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4452f9ec48011e689bddc0502cafd2ebc87300c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4452f9ec48011e689bddc0502cafd2ebc87300c8", "html_url": "https://github.com/rust-lang/rust/commit/4452f9ec48011e689bddc0502cafd2ebc87300c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4452f9ec48011e689bddc0502cafd2ebc87300c8/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8dc3b46017ad6477b5adb7c3b5dc40495fe81f73", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73", "html_url": "https://github.com/rust-lang/rust/commit/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73"}], "stats": {"total": 83, "additions": 40, "deletions": 43}, "files": [{"sha": "3421078bba6a3914b6e5f2325e9282f141234691", "filename": "crates/parser/src/grammar/items.rs", "status": "modified", "additions": 19, "deletions": 21, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/4452f9ec48011e689bddc0502cafd2ebc87300c8/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4452f9ec48011e689bddc0502cafd2ebc87300c8/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs?ref=4452f9ec48011e689bddc0502cafd2ebc87300c8", "patch": "@@ -213,8 +213,9 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker) -> Result<(), Marker> {\n             type_alias(p, m);\n         }\n \n-        // test unsafe_extern_block\n+        // test extern_block\n         // unsafe extern \"C\" {}\n+        // extern {}\n         T!['{'] if has_extern => {\n             extern_item_list(p);\n             m.complete(p, EXTERN_BLOCK);\n@@ -240,10 +241,11 @@ fn items_without_modifiers(p: &mut Parser, m: Marker) -> Result<(), Marker> {\n         // test extern_crate\n         // extern crate foo;\n         T![extern] if la == T![crate] => extern_crate(p, m),\n-        T![type] => {\n-            type_alias(p, m);\n-        }\n+        T![use] => use_item::use_(p, m),\n         T![mod] => mod_item(p, m),\n+\n+        T![type] => type_alias(p, m),\n+\n         T![struct] => {\n             // test struct_items\n             // struct Foo;\n@@ -256,14 +258,7 @@ fn items_without_modifiers(p: &mut Parser, m: Marker) -> Result<(), Marker> {\n             // }\n             adt::strukt(p, m);\n         }\n-        // test pub_macro_def\n-        // pub macro m($:ident) {}\n-        T![macro] => {\n-            macro_def(p, m);\n-        }\n-        IDENT if p.at_contextual_kw(\"macro_rules\") && p.nth(1) == BANG => {\n-            macro_rules(p, m);\n-        }\n+        T![enum] => adt::enum_(p, m),\n         IDENT if p.at_contextual_kw(\"union\") && p.nth(1) == IDENT => {\n             // test union_items\n             // union Foo {}\n@@ -273,17 +268,19 @@ fn items_without_modifiers(p: &mut Parser, m: Marker) -> Result<(), Marker> {\n             // }\n             adt::union(p, m);\n         }\n-        T![enum] => adt::enum_(p, m),\n-        T![use] => use_item::use_(p, m),\n+\n+        // test pub_macro_def\n+        // pub macro m($:ident) {}\n+        T![macro] => {\n+            macro_def(p, m);\n+        }\n+        IDENT if p.at_contextual_kw(\"macro_rules\") && p.nth(1) == BANG => {\n+            macro_rules(p, m);\n+        }\n+\n         T![const] if (la == IDENT || la == T![_] || la == T![mut]) => consts::konst(p, m),\n         T![static] => consts::static_(p, m),\n-        // test extern_block\n-        // extern {}\n-        T![extern] if la == T!['{'] || (la == STRING && p.nth(2) == T!['{']) => {\n-            abi(p);\n-            extern_item_list(p);\n-            m.complete(p, EXTERN_BLOCK);\n-        }\n+\n         _ => return Err(m),\n     };\n     Ok(())\n@@ -292,6 +289,7 @@ fn items_without_modifiers(p: &mut Parser, m: Marker) -> Result<(), Marker> {\n fn extern_crate(p: &mut Parser, m: Marker) {\n     assert!(p.at(T![extern]));\n     p.bump(T![extern]);\n+\n     assert!(p.at(T![crate]));\n     p.bump(T![crate]);\n "}, {"sha": "beac566e592ba3ed899a72cea2b20260dcfcb79c", "filename": "crates/syntax/test_data/parser/inline/ok/0010_extern_block.rast", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/4452f9ec48011e689bddc0502cafd2ebc87300c8/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0010_extern_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/4452f9ec48011e689bddc0502cafd2ebc87300c8/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0010_extern_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0010_extern_block.rast?ref=4452f9ec48011e689bddc0502cafd2ebc87300c8", "patch": "@@ -1,9 +1,21 @@\n-SOURCE_FILE@0..10\n-  EXTERN_BLOCK@0..9\n-    ABI@0..6\n-      EXTERN_KW@0..6 \"extern\"\n+SOURCE_FILE@0..31\n+  EXTERN_BLOCK@0..20\n+    UNSAFE_KW@0..6 \"unsafe\"\n     WHITESPACE@6..7 \" \"\n-    EXTERN_ITEM_LIST@7..9\n-      L_CURLY@7..8 \"{\"\n-      R_CURLY@8..9 \"}\"\n-  WHITESPACE@9..10 \"\\n\"\n+    ABI@7..17\n+      EXTERN_KW@7..13 \"extern\"\n+      WHITESPACE@13..14 \" \"\n+      STRING@14..17 \"\\\"C\\\"\"\n+    WHITESPACE@17..18 \" \"\n+    EXTERN_ITEM_LIST@18..20\n+      L_CURLY@18..19 \"{\"\n+      R_CURLY@19..20 \"}\"\n+  WHITESPACE@20..21 \"\\n\"\n+  EXTERN_BLOCK@21..30\n+    ABI@21..27\n+      EXTERN_KW@21..27 \"extern\"\n+    WHITESPACE@27..28 \" \"\n+    EXTERN_ITEM_LIST@28..30\n+      L_CURLY@28..29 \"{\"\n+      R_CURLY@29..30 \"}\"\n+  WHITESPACE@30..31 \"\\n\""}, {"sha": "bee5ac8453ed563effcddf3fa38a4a70fadb44a1", "filename": "crates/syntax/test_data/parser/inline/ok/0010_extern_block.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4452f9ec48011e689bddc0502cafd2ebc87300c8/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0010_extern_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4452f9ec48011e689bddc0502cafd2ebc87300c8/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0010_extern_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0010_extern_block.rs?ref=4452f9ec48011e689bddc0502cafd2ebc87300c8", "patch": "@@ -1 +1,2 @@\n+unsafe extern \"C\" {}\n extern {}"}, {"sha": "8044e6674dab2ddde70f9741f6f56c2a1e4dcb81", "filename": "crates/syntax/test_data/parser/inline/ok/0167_unsafe_extern_block.rast", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0167_unsafe_extern_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0167_unsafe_extern_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0167_unsafe_extern_block.rast?ref=8dc3b46017ad6477b5adb7c3b5dc40495fe81f73", "patch": "@@ -1,13 +0,0 @@\n-SOURCE_FILE@0..21\n-  EXTERN_BLOCK@0..20\n-    UNSAFE_KW@0..6 \"unsafe\"\n-    WHITESPACE@6..7 \" \"\n-    ABI@7..17\n-      EXTERN_KW@7..13 \"extern\"\n-      WHITESPACE@13..14 \" \"\n-      STRING@14..17 \"\\\"C\\\"\"\n-    WHITESPACE@17..18 \" \"\n-    EXTERN_ITEM_LIST@18..20\n-      L_CURLY@18..19 \"{\"\n-      R_CURLY@19..20 \"}\"\n-  WHITESPACE@20..21 \"\\n\""}, {"sha": "9475aec15c155c4e4160efea82706c48cb6ffd6b", "filename": "crates/syntax/test_data/parser/inline/ok/0167_unsafe_extern_block.rs", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0167_unsafe_extern_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dc3b46017ad6477b5adb7c3b5dc40495fe81f73/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0167_unsafe_extern_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0167_unsafe_extern_block.rs?ref=8dc3b46017ad6477b5adb7c3b5dc40495fe81f73", "patch": "@@ -1 +0,0 @@\n-unsafe extern \"C\" {}"}]}