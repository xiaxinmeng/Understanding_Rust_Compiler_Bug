{"sha": "52a4fc81300bef1d6c4a133a01aacfa91f736908", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyYTRmYzgxMzAwYmVmMWQ2YzRhMTMzYTAxYWFjZmE5MWY3MzY5MDg=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-12-03T10:07:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-12-03T10:07:16Z"}, "message": "Rollup merge of #56432 - ordovicia:shrink-to-issue, r=Centril\n\nUpdate issue number of `shrink_to` methods to point the tracking issue\n\nTracking issue: #56431", "tree": {"sha": "13acdd004111598f18c130aef319bc768d1e23ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13acdd004111598f18c130aef319bc768d1e23ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52a4fc81300bef1d6c4a133a01aacfa91f736908", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcBQBVCRBK7hj4Ov3rIwAAdHIIAAlzeTo1iaMG1BvBG7mDc2Yz\n7vAbLzmN69skzUloMBPgYnTYt++xiy5VVWaH+73tqOGeNK7k7E46BQgY06sw7BR5\nBzFQHwTiU/pgZNgR84htC3l7r7Da90iUSlqkSR1kAgCnofnhF4Asc9usH2/Yhrmh\n/CDAGo/UTHdQLIQlzKHLhiHedukKzXBEVilcK0MBe6TJzv5BwVHNmzzEZIxbj29N\niry4v283S/DMXEO2khFGjn6a4F9AtZUW1h/2Tj6IGy08UyQzmB822DZtJyKjimgH\nXR5tHpaXqy9i5C3AHnH8BlouXf3QbLJtUOEYRMzx4xa8UixPj13vbFSuivZuHf8=\n=PRtv\n-----END PGP SIGNATURE-----\n", "payload": "tree 13acdd004111598f18c130aef319bc768d1e23ed\nparent ca98bce303a2ed8f9b21eb6d2e602e76a7c00754\nparent 1e18cc916f653d5bea212bddded8960f548a975d\nauthor kennytm <kennytm@gmail.com> 1543831636 +0800\ncommitter GitHub <noreply@github.com> 1543831636 +0800\n\nRollup merge of #56432 - ordovicia:shrink-to-issue, r=Centril\n\nUpdate issue number of `shrink_to` methods to point the tracking issue\n\nTracking issue: #56431\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52a4fc81300bef1d6c4a133a01aacfa91f736908", "html_url": "https://github.com/rust-lang/rust/commit/52a4fc81300bef1d6c4a133a01aacfa91f736908", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52a4fc81300bef1d6c4a133a01aacfa91f736908/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca98bce303a2ed8f9b21eb6d2e602e76a7c00754", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca98bce303a2ed8f9b21eb6d2e602e76a7c00754", "html_url": "https://github.com/rust-lang/rust/commit/ca98bce303a2ed8f9b21eb6d2e602e76a7c00754"}, {"sha": "1e18cc916f653d5bea212bddded8960f548a975d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e18cc916f653d5bea212bddded8960f548a975d", "html_url": "https://github.com/rust-lang/rust/commit/1e18cc916f653d5bea212bddded8960f548a975d"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "8c36962a299c2eef03ac89c4dae89cbbb35db1de", "filename": "src/liballoc/collections/binary_heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52a4fc81300bef1d6c4a133a01aacfa91f736908/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a4fc81300bef1d6c4a133a01aacfa91f736908/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs?ref=52a4fc81300bef1d6c4a133a01aacfa91f736908", "patch": "@@ -529,7 +529,7 @@ impl<T: Ord> BinaryHeap<T> {\n     /// assert!(heap.capacity() >= 10);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"0\")]\n+    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"56431\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.data.shrink_to(min_capacity)\n     }"}, {"sha": "c8ee40f3d2735365560e037fc88977d847cbf305", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52a4fc81300bef1d6c4a133a01aacfa91f736908/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a4fc81300bef1d6c4a133a01aacfa91f736908/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=52a4fc81300bef1d6c4a133a01aacfa91f736908", "patch": "@@ -701,7 +701,7 @@ impl<T> VecDeque<T> {\n     /// buf.shrink_to(0);\n     /// assert!(buf.capacity() >= 4);\n     /// ```\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"0\")]\n+    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"56431\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         assert!(self.capacity() >= min_capacity, \"Tried to shrink to a larger capacity\");\n "}, {"sha": "662f8ae614fcbed729514b50ce9e70c897cd3c7a", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52a4fc81300bef1d6c4a133a01aacfa91f736908/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a4fc81300bef1d6c4a133a01aacfa91f736908/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=52a4fc81300bef1d6c4a133a01aacfa91f736908", "patch": "@@ -1050,7 +1050,7 @@ impl String {\n     /// assert!(s.capacity() >= 3);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"0\")]\n+    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"56431\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.vec.shrink_to(min_capacity)\n     }"}, {"sha": "ca7c766e413307a268a828212b31f84ae57db622", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52a4fc81300bef1d6c4a133a01aacfa91f736908/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a4fc81300bef1d6c4a133a01aacfa91f736908/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=52a4fc81300bef1d6c4a133a01aacfa91f736908", "patch": "@@ -613,7 +613,7 @@ impl<T> Vec<T> {\n     /// vec.shrink_to(0);\n     /// assert!(vec.capacity() >= 3);\n     /// ```\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"0\")]\n+    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"56431\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.buf.shrink_to_fit(cmp::max(self.len, min_capacity));\n     }"}, {"sha": "536ce2e16a09b5e03b84da937e6aa061669a791f", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52a4fc81300bef1d6c4a133a01aacfa91f736908/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a4fc81300bef1d6c4a133a01aacfa91f736908/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=52a4fc81300bef1d6c4a133a01aacfa91f736908", "patch": "@@ -1018,7 +1018,7 @@ impl<K, V, S> HashMap<K, V, S>\n     /// map.shrink_to(0);\n     /// assert!(map.capacity() >= 2);\n     /// ```\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"0\")]\n+    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"56431\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         assert!(self.capacity() >= min_capacity, \"Tried to shrink to a larger capacity\");\n "}, {"sha": "4bb3ce0cf4489e76b7417cb04a4acbe2e732500b", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52a4fc81300bef1d6c4a133a01aacfa91f736908/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a4fc81300bef1d6c4a133a01aacfa91f736908/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=52a4fc81300bef1d6c4a133a01aacfa91f736908", "patch": "@@ -315,7 +315,7 @@ impl<T, S> HashSet<T, S>\n     /// assert!(set.capacity() >= 2);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"0\")]\n+    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"56431\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.map.shrink_to(min_capacity)\n     }"}, {"sha": "9c40a31986cea69554febabb678d768cf9211fb4", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52a4fc81300bef1d6c4a133a01aacfa91f736908/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a4fc81300bef1d6c4a133a01aacfa91f736908/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=52a4fc81300bef1d6c4a133a01aacfa91f736908", "patch": "@@ -331,7 +331,7 @@ impl OsString {\n     /// assert!(s.capacity() >= 3);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"0\")]\n+    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"56431\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.inner.shrink_to(min_capacity)\n     }"}]}