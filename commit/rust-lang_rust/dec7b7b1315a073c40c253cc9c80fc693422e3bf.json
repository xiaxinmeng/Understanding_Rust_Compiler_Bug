{"sha": "dec7b7b1315a073c40c253cc9c80fc693422e3bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlYzdiN2IxMzE1YTA3M2M0MGMyNTNjYzljODBmYzY5MzQyMmUzYmY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-22T11:20:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-22T11:20:36Z"}, "message": "Rollup merge of #57813 - RalfJung:validation-range-printing, r=oli-obk\n\nfix validation range printing when encountering undef", "tree": {"sha": "e2182a704f4a04f4b8ffa34ff9c5235384884d0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2182a704f4a04f4b8ffa34ff9c5235384884d0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dec7b7b1315a073c40c253cc9c80fc693422e3bf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcRvyECRBK7hj4Ov3rIwAAdHIIAA7jYtxQZcASafYbMUL0W5aa\nelNViRaLgjt4Y6iERGWmprKmXOEpALYUP66U749QpshGWeIKMrZ9xfQpf4PJBfl+\ndIXj9dvKd9hmcU+FJc7mZy0gb+baSBGCUQ0SJ8kRVsEDVUCj3JOdry9JcL1u8Ce6\n5LCcPA8NV8uRiafOv4CNWn8w3OGBTs4Ows1Me5hTtfwYzKyJ2NcshzsjZyf6nUoP\nG7TKrvg3Tbr96lklyun8Ln2MHpKNW54yBaUZZeOn6IbKnLr21hb7E9tlfzm0rVBt\nTI3SyVRNVZ+zDBsuOJqieBHnTt98umWtVM6ZzICEnueErBtZTfy7A17nO/Esrd4=\n=IWR2\n-----END PGP SIGNATURE-----\n", "payload": "tree e2182a704f4a04f4b8ffa34ff9c5235384884d0a\nparent e3849cc8c9ccbd5bfb8e2938d83cc8505b1896ed\nparent 400e28d27af3c4e0f7fca2274cb1817651d7ba37\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1548156036 +0100\ncommitter GitHub <noreply@github.com> 1548156036 +0100\n\nRollup merge of #57813 - RalfJung:validation-range-printing, r=oli-obk\n\nfix validation range printing when encountering undef\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dec7b7b1315a073c40c253cc9c80fc693422e3bf", "html_url": "https://github.com/rust-lang/rust/commit/dec7b7b1315a073c40c253cc9c80fc693422e3bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dec7b7b1315a073c40c253cc9c80fc693422e3bf/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3849cc8c9ccbd5bfb8e2938d83cc8505b1896ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3849cc8c9ccbd5bfb8e2938d83cc8505b1896ed", "html_url": "https://github.com/rust-lang/rust/commit/e3849cc8c9ccbd5bfb8e2938d83cc8505b1896ed"}, {"sha": "400e28d27af3c4e0f7fca2274cb1817651d7ba37", "url": "https://api.github.com/repos/rust-lang/rust/commits/400e28d27af3c4e0f7fca2274cb1817651d7ba37", "html_url": "https://github.com/rust-lang/rust/commit/400e28d27af3c4e0f7fca2274cb1817651d7ba37"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "8f5a5bf8ee312d77dcbf27c6ebc9527aa484c340", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dec7b7b1315a073c40c253cc9c80fc693422e3bf/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dec7b7b1315a073c40c253cc9c80fc693422e3bf/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=dec7b7b1315a073c40c253cc9c80fc693422e3bf", "patch": "@@ -449,8 +449,13 @@ impl<'rt, 'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>>\n         }\n         // At least one value is excluded. Get the bits.\n         let value = try_validation!(value.not_undef(),\n-            value, self.path,\n-            format!(\"something in the range {:?}\", layout.valid_range));\n+            value,\n+            self.path,\n+            format!(\n+                \"something {}\",\n+                wrapping_range_format(&layout.valid_range, max_hi),\n+            )\n+        );\n         let bits = match value {\n             Scalar::Ptr(ptr) => {\n                 if lo == 1 && hi == max_hi {"}, {"sha": "3e0b0948ef3c3ff4b536809a261fb28bc50d6c72", "filename": "src/test/ui/consts/const-eval/ub-nonnull.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dec7b7b1315a073c40c253cc9c80fc693422e3bf/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dec7b7b1315a073c40c253cc9c80fc693422e3bf/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.rs?ref=dec7b7b1315a073c40c253cc9c80fc693422e3bf", "patch": "@@ -13,6 +13,13 @@ const NULL_U8: NonZeroU8 = unsafe { mem::transmute(0u8) };\n const NULL_USIZE: NonZeroUsize = unsafe { mem::transmute(0usize) };\n //~^ ERROR it is undefined behavior to use this value\n \n+union Transmute {\n+    uninit: (),\n+    out: NonZeroU8,\n+}\n+const UNINIT: NonZeroU8 = unsafe { Transmute { uninit: () }.out };\n+//~^ ERROR it is undefined behavior to use this value\n+\n // Also test other uses of rustc_layout_scalar_valid_range_start\n \n #[rustc_layout_scalar_valid_range_start(10)]"}, {"sha": "6230712ad6f232497c7123a6acf4d3b378470093", "filename": "src/test/ui/consts/const-eval/ub-nonnull.stderr", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/dec7b7b1315a073c40c253cc9c80fc693422e3bf/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dec7b7b1315a073c40c253cc9c80fc693422e3bf/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.stderr?ref=dec7b7b1315a073c40c253cc9c80fc693422e3bf", "patch": "@@ -23,21 +23,29 @@ LL | const NULL_USIZE: NonZeroUsize = unsafe { mem::transmute(0usize) };\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/ub-nonnull.rs:21:1\n+  --> $DIR/ub-nonnull.rs:20:1\n+   |\n+LL | const UNINIT: NonZeroU8 = unsafe { Transmute { uninit: () }.out };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered uninitialized bytes, but expected something greater or equal to 1\n+   |\n+   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\n+\n+error[E0080]: it is undefined behavior to use this value\n+  --> $DIR/ub-nonnull.rs:28:1\n    |\n LL | const BAD_RANGE1: RestrictedRange1 = unsafe { RestrictedRange1(42) };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered 42, but expected something in the range 10..=30\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/ub-nonnull.rs:27:1\n+  --> $DIR/ub-nonnull.rs:34:1\n    |\n LL | const BAD_RANGE2: RestrictedRange2 = unsafe { RestrictedRange2(20) };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered 20, but expected something less or equal to 10, or greater or equal to 30\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 6 previous errors\n \n For more information about this error, try `rustc --explain E0080`."}]}