{"sha": "ae8f39e4d467c4f9d21539070b7f82914f48eaa3", "node_id": "C_kwDOAAsO6NoAKGFlOGYzOWU0ZDQ2N2M0ZjlkMjE1MzkwNzBiN2Y4MjkxNGY0OGVhYTM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-18T03:42:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-18T03:42:03Z"}, "message": "Rollup merge of #92866 - maxwase:does_exist_typo, r=Mark-Simulacrum\n\n\"Does exists\" typos fix\n\nFixed some typos", "tree": {"sha": "a187a528cd425f880f0bc4222cd9202f57b76c1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a187a528cd425f880f0bc4222cd9202f57b76c1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae8f39e4d467c4f9d21539070b7f82914f48eaa3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh5jcLCRBK7hj4Ov3rIwAAz2QIAAbbRhABkQWISIxEoJ43tJNK\nd2FZfoBvMAKwVZ23FmtV6K7SZdv9WSNzcsttJ9B7yWR+hZZtpVuZLal8t+/NQgq5\nfk6aypJ+fEfxtOOuPdESJcaVfjoujl6J7p4YElECMM0+JCe0jryyyOpxNkTI59+A\nbrpl7jW9/JcDacOjE0LyyrKHVixQ0ali3/dg+2S4NNkL0bxjo6PUpW+27OIfQb42\nvhlmS4P2yKQJT8EURW1kX19eAn/+BOlcfcGgqXkk2NKn+J92KorVH2ftHD/K8wL5\n1yx/ZhLJDs2tGZBEM6sBYiaisryKTj+EfW1lTwypcyIJ0tPgl4B8ycqQt8nUZeA=\n=frqY\n-----END PGP SIGNATURE-----\n", "payload": "tree a187a528cd425f880f0bc4222cd9202f57b76c1d\nparent deee6f770f755e4f7c1c0001b353a72ca75b1902\nparent a7092f91a6015dd32aab978b05c4b346d790aaaa\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642477323 +0100\ncommitter GitHub <noreply@github.com> 1642477323 +0100\n\nRollup merge of #92866 - maxwase:does_exist_typo, r=Mark-Simulacrum\n\n\"Does exists\" typos fix\n\nFixed some typos\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae8f39e4d467c4f9d21539070b7f82914f48eaa3", "html_url": "https://github.com/rust-lang/rust/commit/ae8f39e4d467c4f9d21539070b7f82914f48eaa3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae8f39e4d467c4f9d21539070b7f82914f48eaa3/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "deee6f770f755e4f7c1c0001b353a72ca75b1902", "url": "https://api.github.com/repos/rust-lang/rust/commits/deee6f770f755e4f7c1c0001b353a72ca75b1902", "html_url": "https://github.com/rust-lang/rust/commit/deee6f770f755e4f7c1c0001b353a72ca75b1902"}, {"sha": "a7092f91a6015dd32aab978b05c4b346d790aaaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7092f91a6015dd32aab978b05c4b346d790aaaa", "html_url": "https://github.com/rust-lang/rust/commit/a7092f91a6015dd32aab978b05c4b346d790aaaa"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "5537ec18d34a93afe5206397d1f8d54fd747691d", "filename": "library/std/src/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae8f39e4d467c4f9d21539070b7f82914f48eaa3/library%2Fstd%2Fsrc%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae8f39e4d467c4f9d21539070b7f82914f48eaa3/library%2Fstd%2Fsrc%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ffs.rs?ref=ae8f39e4d467c4f9d21539070b7f82914f48eaa3", "patch": "@@ -1050,7 +1050,7 @@ impl Metadata {\n     ///\n     /// fn main() -> std::io::Result<()> {\n     ///     let link_path = Path::new(\"link\");\n-    ///     symlink(\"/origin_does_not_exists/\", link_path)?;\n+    ///     symlink(\"/origin_does_not_exist/\", link_path)?;\n     ///\n     ///     let metadata = fs::symlink_metadata(link_path)?;\n     ///"}, {"sha": "f509403fe2e43be99525793dd8cd2c93296b5d75", "filename": "library/std/src/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae8f39e4d467c4f9d21539070b7f82914f48eaa3/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae8f39e4d467c4f9d21539070b7f82914f48eaa3/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=ae8f39e4d467c4f9d21539070b7f82914f48eaa3", "patch": "@@ -2806,7 +2806,7 @@ impl Path {\n     /// use std::os::unix::fs::symlink;\n     ///\n     /// let link_path = Path::new(\"link\");\n-    /// symlink(\"/origin_does_not_exists/\", link_path).unwrap();\n+    /// symlink(\"/origin_does_not_exist/\", link_path).unwrap();\n     /// assert_eq!(link_path.is_symlink(), true);\n     /// assert_eq!(link_path.exists(), false);\n     /// ```"}, {"sha": "6d7ab15326c5fc194fd94670d26c5e692cb27d7a", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae8f39e4d467c4f9d21539070b7f82914f48eaa3/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/ae8f39e4d467c4f9d21539070b7f82914f48eaa3/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=ae8f39e4d467c4f9d21539070b7f82914f48eaa3", "patch": "@@ -863,7 +863,7 @@ def get_toml(self, key, section=None):\n         >>> rb.get_toml(\"key2\")\n         'value2'\n \n-        If the key does not exists, the result is None:\n+        If the key does not exist, the result is None:\n \n         >>> rb.get_toml(\"key3\") is None\n         True"}, {"sha": "06ca3ce21b395a2990329a8273c20b8fa91b2058", "filename": "src/bootstrap/bootstrap_test.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae8f39e4d467c4f9d21539070b7f82914f48eaa3/src%2Fbootstrap%2Fbootstrap_test.py", "raw_url": "https://github.com/rust-lang/rust/raw/ae8f39e4d467c4f9d21539070b7f82914f48eaa3/src%2Fbootstrap%2Fbootstrap_test.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap_test.py?ref=ae8f39e4d467c4f9d21539070b7f82914f48eaa3", "patch": "@@ -55,8 +55,8 @@ def setUp(self):\n     def tearDown(self):\n         rmtree(self.container)\n \n-    def test_stamp_path_does_not_exists(self):\n-        \"\"\"Return True when the stamp file does not exists\"\"\"\n+    def test_stamp_path_does_not_exist(self):\n+        \"\"\"Return True when the stamp file does not exist\"\"\"\n         if os.path.exists(self.rustc_stamp_path):\n             os.unlink(self.rustc_stamp_path)\n         self.assertTrue(self.build.program_out_of_date(self.rustc_stamp_path, self.key))"}]}