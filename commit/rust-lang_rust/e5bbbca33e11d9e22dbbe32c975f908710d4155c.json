{"sha": "e5bbbca33e11d9e22dbbe32c975f908710d4155c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1YmJiY2EzM2UxMWQ5ZTIyZGJiZTMyYzk3NWY5MDg3MTBkNDE1NWM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-06T16:12:18Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-07T03:00:16Z"}, "message": "rustdoc: Submit examples to play.rust-lang.org\n\nThis grows a new option inside of rustdoc to add the ability to submit examples\nto an external website. If the `--markdown-playground-url` command line option\nor crate doc attribute `html_playground_url` is present, then examples will have\na button on hover to submit the code to the playground specified.\n\nThis commit enables submission of example code to play.rust-lang.org. The code\nsubmitted is that which is tested by rustdoc, not necessarily the exact code\nshown in the example.\n\nCloses #14654", "tree": {"sha": "5095bb40b83e840f373b22f9fe62b0228d3a3453", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5095bb40b83e840f373b22f9fe62b0228d3a3453"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5bbbca33e11d9e22dbbe32c975f908710d4155c", "comment_count": 3, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5bbbca33e11d9e22dbbe32c975f908710d4155c", "html_url": "https://github.com/rust-lang/rust/commit/e5bbbca33e11d9e22dbbe32c975f908710d4155c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5bbbca33e11d9e22dbbe32c975f908710d4155c/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc63d4c61bb83fcbcef5ccfffcd9b26b1bf2d20a", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc63d4c61bb83fcbcef5ccfffcd9b26b1bf2d20a", "html_url": "https://github.com/rust-lang/rust/commit/cc63d4c61bb83fcbcef5ccfffcd9b26b1bf2d20a"}], "stats": {"total": 229, "additions": 186, "deletions": 43}, "files": [{"sha": "dab40cb1654317412d1060d57136a25848719f9d", "filename": "mk/docs.mk", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/mk%2Fdocs.mk", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/mk%2Fdocs.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdocs.mk?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -43,7 +43,9 @@ L10N_LANGS := ja\n \n # The options are passed to the documentation generators.\n RUSTDOC_HTML_OPTS_NO_CSS = --markdown-before-content=doc/version_info.html \\\n-\t--markdown-in-header=doc/favicon.inc --markdown-after-content=doc/footer.inc\n+\t--markdown-in-header=doc/favicon.inc \\\n+\t--markdown-after-content=doc/footer.inc \\\n+\t--markdown-playground-url='http://play.rust-lang.org/'\n \n RUSTDOC_HTML_OPTS = $(RUSTDOC_HTML_OPTS_NO_CSS) --markdown-css rust.css\n "}, {"sha": "4e7d60586f23d51eb1b66882559451d5ecac91fc", "filename": "src/doc/footer.inc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Fdoc%2Ffooter.inc", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Fdoc%2Ffooter.inc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ffooter.inc?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -5,3 +5,5 @@ or the <a href=\"http://opensource.org/licenses/MIT\">MIT license</a>, at your opt\n </p><p>\n This file may not be copied, modified, or distributed except according to those terms.\n </p></footer>\n+<script type=\"text/javascript\" src=\"jquery.js\"></script>\n+<script type=\"text/javascript\" src=\"playpen.js\"></script>"}, {"sha": "3957231a195a5eaccf07973bf2efbc9174926853", "filename": "src/doc/rust.css", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Fdoc%2Frust.css", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Fdoc%2Frust.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frust.css?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -313,6 +313,19 @@ table th {\n     padding: 5px;\n }\n \n+/* Code snippets */\n+\n+.rusttest { display: none; }\n+pre.rust { position: relative; }\n+pre.rust a { transform: scaleX(-1); }\n+.test-arrow {\n+    display: inline-block;\n+    position: absolute;\n+    top: 0;\n+    right: 10px;\n+    font-size: 150%;\n+}\n+\n @media (min-width: 1170px) {\n     pre {\n         font-size: 15px;"}, {"sha": "a65c06107ce3469268e9b036f4dcb31f849ce710", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -17,7 +17,8 @@\n #![license = \"MIT/ASL2\"]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n-       html_root_url = \"http://doc.rust-lang.org/\")]\n+       html_root_url = \"http://doc.rust-lang.org/\",\n+       html_playground_url = \"http://play.rust-lang.org/\")]\n \n #![feature(macro_rules, managed_boxes, default_type_params, phase, globs)]\n #![no_std]"}, {"sha": "2ccf431fc22e138fe1161601eeb8e6cbc7187bdd", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -50,7 +50,8 @@\n #![crate_type = \"rlib\"]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n-       html_root_url = \"http://doc.rust-lang.org/\")]\n+       html_root_url = \"http://doc.rust-lang.org/\",\n+       html_playground_url = \"http://play.rust-lang.org/\")]\n \n #![no_std]\n #![feature(globs, macro_rules, managed_boxes, phase, simd)]"}, {"sha": "10584223486c00a8dd9a495104727817d5383dc3", "filename": "src/libgetopts/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibgetopts%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibgetopts%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgetopts%2Flib.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -84,7 +84,8 @@\n #![license = \"MIT/ASL2\"]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n-       html_root_url = \"http://doc.rust-lang.org/\")]\n+       html_root_url = \"http://doc.rust-lang.org/\",\n+       html_playground_url = \"http://play.rust-lang.org/\")]\n #![feature(globs, phase)]\n #![deny(missing_doc)]\n #![deny(deprecated_owned_vector)]"}, {"sha": "f3e1da77ce5c773e05801b8e7cf436350343d8a5", "filename": "src/libglob/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibglob%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibglob%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibglob%2Flib.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -29,8 +29,8 @@\n #![license = \"MIT/ASL2\"]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n-       html_root_url = \"http://doc.rust-lang.org/\")]\n-\n+       html_root_url = \"http://doc.rust-lang.org/\",\n+       html_playground_url = \"http://play.rust-lang.org/\")]\n #![deny(deprecated_owned_vector)]\n \n use std::cell::Cell;"}, {"sha": "c75d69480ce0d99a90856796604709e589b75c57", "filename": "src/libgreen/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibgreen%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibgreen%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgreen%2Flib.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -203,7 +203,8 @@\n #![crate_type = \"dylib\"]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n-       html_root_url = \"http://doc.rust-lang.org/\")]\n+       html_root_url = \"http://doc.rust-lang.org/\",\n+       html_playground_url = \"http://play.rust-lang.org/\")]\n \n // NB this does *not* include globs, please keep it that way.\n #![feature(macro_rules, phase)]"}, {"sha": "daacf8b3c47610ff6294905ce7cbce2256eb83f1", "filename": "src/liblog/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Fliblog%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Fliblog%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblog%2Flib.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -111,7 +111,8 @@ if logging is disabled, none of the components of the log will be executed.\n #![crate_type = \"dylib\"]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n-       html_root_url = \"http://doc.rust-lang.org/\")]\n+       html_root_url = \"http://doc.rust-lang.org/\",\n+       html_playground_url = \"http://play.rust-lang.org/\")]\n \n #![feature(macro_rules)]\n #![deny(missing_doc, deprecated_owned_vector)]"}, {"sha": "fae21e80f307256101498420fc2459bc9109e80a", "filename": "src/libnum/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibnum%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibnum%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Flib.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -50,7 +50,8 @@\n #![license = \"MIT/ASL2\"]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n-       html_root_url = \"http://doc.rust-lang.org/\")]\n+       html_root_url = \"http://doc.rust-lang.org/\",\n+       html_playground_url = \"http://play.rust-lang.org/\")]\n \n #![deny(deprecated_owned_vector)]\n "}, {"sha": "7a12dcf9f7f319ffcf32b049c5b94c352dea6a37", "filename": "src/librand/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrand%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrand%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Flib.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -21,7 +21,8 @@\n #![crate_type = \"rlib\"]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n-       html_root_url = \"http://doc.rust-lang.org/\")]\n+       html_root_url = \"http://doc.rust-lang.org/\",\n+       html_playground_url = \"http://play.rust-lang.org/\")]\n \n #![feature(macro_rules, phase, globs)]\n #![no_std]"}, {"sha": "44c206162ab25f24cadc0d35fecc4b8a7edc301b", "filename": "src/libregex/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibregex%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibregex%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex%2Flib.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -360,7 +360,8 @@\n #![license = \"MIT/ASL2\"]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n-       html_root_url = \"http://doc.rust-lang.org/\")]\n+       html_root_url = \"http://doc.rust-lang.org/\",\n+       html_playground_url = \"http://play.rust-lang.org/\")]\n \n #![feature(macro_rules, phase)]\n #![deny(missing_doc, deprecated_owned_vector)]"}, {"sha": "3c9358b03a9837bd18de9adf30a836db9977fd08", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -25,7 +25,7 @@ use html::escape::Escape;\n use t = syntax::parse::token;\n \n /// Highlights some source code, returning the HTML output.\n-pub fn highlight(src: &str, class: Option<&str>) -> String {\n+pub fn highlight(src: &str, class: Option<&str>, id: Option<&str>) -> String {\n     debug!(\"highlighting: ================\\n{}\\n==============\", src);\n     let sess = parse::new_parse_sess();\n     let fm = parse::string_to_filemap(&sess,\n@@ -36,6 +36,7 @@ pub fn highlight(src: &str, class: Option<&str>) -> String {\n     doit(&sess,\n          lexer::StringReader::new(&sess.span_diagnostic, fm),\n          class,\n+         id,\n          &mut out).unwrap();\n     str::from_utf8_lossy(out.unwrap().as_slice()).to_string()\n }\n@@ -47,11 +48,17 @@ pub fn highlight(src: &str, class: Option<&str>) -> String {\n /// it's used. All source code emission is done as slices from the source map,\n /// not from the tokens themselves, in order to stay true to the original\n /// source.\n-fn doit(sess: &parse::ParseSess, mut lexer: lexer::StringReader, class: Option<&str>,\n+fn doit(sess: &parse::ParseSess, mut lexer: lexer::StringReader,\n+        class: Option<&str>, id: Option<&str>,\n         out: &mut Writer) -> io::IoResult<()> {\n     use syntax::parse::lexer::Reader;\n \n-    try!(write!(out, \"<pre class='rust {}'>\\n\", class.unwrap_or(\"\")));\n+    try!(write!(out, \"<pre \"));\n+    match id {\n+        Some(id) => try!(write!(out, \"id='{}' \", id)),\n+        None => {}\n+    }\n+    try!(write!(out, \"class='rust {}'>\\n\", class.unwrap_or(\"\")));\n     let mut last = BytePos(0);\n     let mut is_attribute = false;\n     let mut is_macro = false;"}, {"sha": "e2fa57148c2c7e25d072d4e10d70c293f2f0bb12", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -16,6 +16,7 @@ pub struct Layout {\n     pub logo: String,\n     pub favicon: String,\n     pub krate: String,\n+    pub playground_url: String,\n }\n \n pub struct Page<'a> {\n@@ -108,11 +109,13 @@ r##\"<!DOCTYPE html>\n     </div>\n \n     <script>\n-        var rootPath = \"{root_path}\";\n-        var currentCrate = \"{krate}\";\n+        window.rootPath = \"{root_path}\";\n+        window.currentCrate = \"{krate}\";\n+        window.playgroundUrl = \"{play_url}\";\n     </script>\n     <script src=\"{root_path}jquery.js\"></script>\n     <script src=\"{root_path}main.js\"></script>\n+    {play_js}\n     <script async src=\"{root_path}search-index.js\"></script>\n </body>\n </html>\"##,\n@@ -124,6 +127,12 @@ r##\"<!DOCTYPE html>\n     favicon   = nonestr(layout.favicon.as_slice()),\n     sidebar   = *sidebar,\n     krate     = layout.krate,\n+    play_url  = layout.playground_url,\n+    play_js   = if layout.playground_url.len() == 0 {\n+        \"\".to_string()\n+    } else {\n+        format!(r#\"<script src=\"{}playpen.js\"></script>\"#, page.root_path)\n+    },\n     )\n }\n "}, {"sha": "260d26c543736c754904730f634f791a7ce56e09", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 29, "deletions": 6, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -27,14 +27,16 @@\n #![allow(non_camel_case_types)]\n \n use libc;\n-use std::cell::RefCell;\n+use std::cell::{RefCell, Cell};\n use std::fmt;\n use std::slice;\n use std::str;\n use std::collections::HashMap;\n \n use html::toc::TocBuilder;\n use html::highlight;\n+use html::escape::Escape;\n+use test;\n \n /// A unit struct which has the `fmt::Show` trait implemented. When\n /// formatted, this struct will emit the HTML corresponding to the rendered\n@@ -139,6 +141,9 @@ fn stripped_filtered_line<'a>(s: &'a str) -> Option<&'a str> {\n }\n \n local_data_key!(used_header_map: RefCell<HashMap<String, uint>>)\n+local_data_key!(test_idx: Cell<uint>)\n+// None == render an example, but there's no crate name\n+local_data_key!(pub playground_krate: Option<String>)\n \n pub fn render(w: &mut fmt::Formatter, s: &str, print_toc: bool) -> fmt::Result {\n     extern fn block(ob: *mut hoedown_buffer, text: *hoedown_buffer,\n@@ -149,9 +154,9 @@ pub fn render(w: &mut fmt::Formatter, s: &str, print_toc: bool) -> fmt::Result {\n             let opaque = opaque as *mut hoedown_html_renderer_state;\n             let my_opaque: &MyOpaque = &*((*opaque).opaque as *MyOpaque);\n             slice::raw::buf_as_slice((*text).data, (*text).size as uint, |text| {\n-                let text = str::from_utf8(text).unwrap();\n+                let origtext = str::from_utf8(text).unwrap();\n                 debug!(\"docblock: ==============\\n{}\\n=======\", text);\n-                let mut lines = text.lines().filter(|l| {\n+                let mut lines = origtext.lines().filter(|l| {\n                     stripped_filtered_line(*l).is_none()\n                 });\n                 let text = lines.collect::<Vec<&str>>().connect(\"\\n\");\n@@ -180,9 +185,26 @@ pub fn render(w: &mut fmt::Formatter, s: &str, print_toc: bool) -> fmt::Result {\n                 };\n \n                 if !rendered {\n-                    let output = highlight::highlight(text.as_slice(),\n-                                                      None).as_slice()\n-                                                           .to_c_str();\n+                    let mut s = String::new();\n+                    let id = playground_krate.get().map(|krate| {\n+                        let idx = test_idx.get().unwrap();\n+                        let i = idx.get();\n+                        idx.set(i + 1);\n+\n+                        let test = origtext.lines().map(|l| {\n+                            stripped_filtered_line(l).unwrap_or(l)\n+                        }).collect::<Vec<&str>>().connect(\"\\n\");\n+                        let krate = krate.as_ref().map(|s| s.as_slice());\n+                        let test = test::maketest(test.as_slice(), krate, false);\n+                        s.push_str(format!(\"<span id='rust-example-raw-{}' \\\n+                                             class='rusttest'>{}</span>\",\n+                                           i, Escape(test.as_slice())).as_slice());\n+                        format!(\"rust-example-rendered-{}\", i)\n+                    });\n+                    let id = id.as_ref().map(|a| a.as_slice());\n+                    s.push_str(highlight::highlight(text.as_slice(), None, id)\n+                                         .as_slice());\n+                    let output = s.to_c_str();\n                     output.with_ref(|r| {\n                         hoedown_buffer_puts(ob, r)\n                     })\n@@ -377,6 +399,7 @@ fn parse_lang_string(string: &str) -> (bool,bool,bool,bool) {\n /// previous state (if any).\n pub fn reset_headers() {\n     used_header_map.replace(Some(RefCell::new(HashMap::new())));\n+    test_idx.replace(Some(Cell::new(0)));\n }\n \n impl<'a> fmt::Show for Markdown<'a> {"}, {"sha": "eab4a2c137a58786f8ad0f4ef10a6c6772f6edcc", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -230,6 +230,7 @@ pub fn run(mut krate: clean::Crate, dst: Path) -> io::IoResult<()> {\n             logo: \"\".to_string(),\n             favicon: \"\".to_string(),\n             krate: krate.name.clone(),\n+            playground_url: \"\".to_string(),\n         },\n         include_sources: true,\n         render_redirect_pages: false,\n@@ -250,6 +251,14 @@ pub fn run(mut krate: clean::Crate, dst: Path) -> io::IoResult<()> {\n                             if \"html_logo_url\" == x.as_slice() => {\n                         cx.layout.logo = s.to_string();\n                     }\n+                    clean::NameValue(ref x, ref s)\n+                            if \"html_playground_url\" == x.as_slice() => {\n+                        cx.layout.playground_url = s.to_string();\n+                        let name = krate.name.clone();\n+                        if markdown::playground_krate.get().is_none() {\n+                            markdown::playground_krate.replace(Some(Some(name)));\n+                        }\n+                    }\n                     clean::Word(ref x)\n                             if \"html_no_source\" == x.as_slice() => {\n                         cx.include_sources = false;\n@@ -450,6 +459,7 @@ fn write_shared(cx: &Context,\n     try!(write(cx.dst.join(\"jquery.js\"),\n                include_bin!(\"static/jquery-2.1.0.min.js\")));\n     try!(write(cx.dst.join(\"main.js\"), include_bin!(\"static/main.js\")));\n+    try!(write(cx.dst.join(\"playpen.js\"), include_bin!(\"static/playpen.js\")));\n     try!(write(cx.dst.join(\"main.css\"), include_bin!(\"static/main.css\")));\n     try!(write(cx.dst.join(\"normalize.css\"),\n                include_bin!(\"static/normalize.css\")));\n@@ -2055,14 +2065,15 @@ impl<'a> fmt::Show for Source<'a> {\n             try!(write!(fmt, \"<span id='{0:u}'>{0:1$u}</span>\\n\", i, cols));\n         }\n         try!(write!(fmt, \"</pre>\"));\n-        try!(write!(fmt, \"{}\", highlight::highlight(s.as_slice(), None)));\n+        try!(write!(fmt, \"{}\", highlight::highlight(s.as_slice(), None, None)));\n         Ok(())\n     }\n }\n \n fn item_macro(w: &mut fmt::Formatter, it: &clean::Item,\n               t: &clean::Macro) -> fmt::Result {\n-    try!(w.write(highlight::highlight(t.source.as_slice(), Some(\"macro\")).as_bytes()));\n+    try!(w.write(highlight::highlight(t.source.as_slice(), Some(\"macro\"),\n+                                      None).as_bytes()));\n     document(w, it)\n }\n "}, {"sha": "07dd1a6c173cc2af9cbbb9351ab0b6127c9a0714", "filename": "src/librustdoc/html/static/main.css", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.css", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.css?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -156,7 +156,7 @@ nav.sub {\n     padding: 0 10px;\n     margin-bottom: 10px;\n }\n-.block h2 { \n+.block h2 {\n     margin-top: 0;\n     text-align: center;\n }\n@@ -396,6 +396,17 @@ pre.rust .doccomment { color: #4D4D4C; }\n pre.rust .macro, pre.rust .macro-nonterminal { color: #3E999F; }\n pre.rust .lifetime { color: #B76514; }\n \n+.rusttest { display: none; }\n+pre.rust { position: relative; }\n+pre.rust a { transform: scaleX(-1); }\n+.test-arrow {\n+    display: inline-block;\n+    position: absolute;\n+    top: 0;\n+    right: 10px;\n+    font-size: 150%;\n+}\n+\n .methods .section-header {\n     /* Override parent class attributes. */\n     border-bottom: none !important;"}, {"sha": "195028c85bfa9869641c8d33d0211acbd87d52f3", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -678,7 +678,7 @@\n         window.register_implementors(window.pending_implementors);\n     }\n \n-    // See documentaiton in html/render.rs for what this is doing.\n+    // See documentation in html/render.rs for what this is doing.\n     var query = getQueryStringParams();\n     if (query['gotosrc']) {\n         window.location = $('#src-' + query['gotosrc']).attr('href');"}, {"sha": "5d2fe9c2166028e53f4000a4951145d95890e4ec", "filename": "src/librustdoc/html/static/playpen.js", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fplaypen.js", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fplaypen.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fplaypen.js?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+/*jslint browser: true, es5: true */\n+/*globals $: true, rootPath: true */\n+\n+(function() {\n+    if (window.playgroundUrl) {\n+        $('pre.rust').hover(function() {\n+            var id = '#' + $(this).attr('id').replace('rendered', 'raw');\n+            var a = $('<a>').text('\u21f1').attr('class', 'test-arrow');\n+            var code = $(id).text();\n+            a.attr('href', window.playgroundUrl + '?code=' +\n+                           encodeURIComponent(code));\n+            a.attr('target', '_blank');\n+            $(this).append(a);\n+        }, function() {\n+            $(this).find('a').remove();\n+        });\n+    }\n+}());\n+"}, {"sha": "e623d54675c25c820cddfe898067f9ebca0fe2fb", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -126,7 +126,9 @@ pub fn opts() -> Vec<getopts::OptGroup> {\n         optmulti(\"\", \"markdown-after-content\",\n                  \"files to include inline between the content and </body> of a rendered \\\n                  Markdown file\",\n-                 \"FILES\")\n+                 \"FILES\"),\n+        optopt(\"\", \"markdown-playground-url\",\n+               \"URL to send code snippets to\", \"URL\")\n     )\n }\n "}, {"sha": "3b6203ef668f7642ddef895919d87f1291f8aac1", "filename": "src/librustdoc/markdown.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -16,6 +16,7 @@ use getopts;\n use testing;\n \n use html::escape::Escape;\n+use html::markdown;\n use html::markdown::{MarkdownWithToc, find_testable_code, reset_headers};\n use test::Collector;\n \n@@ -84,6 +85,11 @@ pub fn render(input: &str, mut output: Path, matches: &getopts::Matches) -> int\n     }\n \n     let input_str = load_or_return!(input, 1, 2);\n+    let playground = matches.opt_str(\"markdown-playground-url\");\n+    if playground.is_some() {\n+        markdown::playground_krate.replace(Some(None));\n+    }\n+    let playground = playground.unwrap_or(\"\".to_string());\n \n     let (in_header, before_content, after_content) =\n         match (load_external_files(matches.opt_strs(\"markdown-in-header\")\n@@ -148,6 +154,9 @@ pub fn render(input: &str, mut output: Path, matches: &getopts::Matches) -> int\n     {before_content}\n     <h1 class=\"title\">{title}</h1>\n     {text}\n+    <script type=\"text/javascript\">\n+        window.playgroundUrl = \"{playground}\";\n+    </script>\n     {after_content}\n </body>\n </html>\"#,\n@@ -156,7 +165,9 @@ pub fn render(input: &str, mut output: Path, matches: &getopts::Matches) -> int\n         in_header = in_header,\n         before_content = before_content,\n         text = MarkdownWithToc(text),\n-        after_content = after_content);\n+        after_content = after_content,\n+        playground = playground,\n+        );\n \n     match err {\n         Err(e) => {"}, {"sha": "bc1da5b629e13030eac9690045178aa239f369d8", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -103,7 +103,7 @@ pub fn run(input: &str,\n \n fn runtest(test: &str, cratename: &str, libs: HashSet<Path>, should_fail: bool,\n            no_run: bool) {\n-    let test = maketest(test, cratename);\n+    let test = maketest(test, Some(cratename), true);\n     let input = driver::StrInput(test.to_string());\n \n     let sessopts = config::Options {\n@@ -200,23 +200,31 @@ fn runtest(test: &str, cratename: &str, libs: HashSet<Path>, should_fail: bool,\n     }\n }\n \n-pub fn maketest(s: &str, cratename: &str) -> String {\n-    let mut prog = String::from_str(r\"\n+pub fn maketest(s: &str, cratename: Option<&str>, lints: bool) -> String {\n+    let mut prog = String::new();\n+    if lints {\n+        prog.push_str(r\"\n #![deny(warnings)]\n #![allow(unused_variable, dead_assignment, unused_mut, attribute_usage, dead_code)]\n \");\n+    }\n \n     if !s.contains(\"extern crate\") {\n-        if s.contains(cratename) {\n-            prog.push_str(format!(\"extern crate {};\\n\",\n-                                  cratename).as_slice());\n+        match cratename {\n+            Some(cratename) => {\n+                if s.contains(cratename) {\n+                    prog.push_str(format!(\"extern crate {};\\n\",\n+                                          cratename).as_slice());\n+                }\n+            }\n+            None => {}\n         }\n     }\n     if s.contains(\"fn main\") {\n         prog.push_str(s);\n     } else {\n-        prog.push_str(\"fn main() {\\n\");\n-        prog.push_str(s);\n+        prog.push_str(\"fn main() {\\n    \");\n+        prog.push_str(s.replace(\"\\n\", \"\\n    \").as_slice());\n         prog.push_str(\"\\n}\");\n     }\n "}, {"sha": "08348c963338265c0812094ac2054a8d6e3ca0be", "filename": "src/libserialize/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibserialize%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibserialize%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Flib.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -20,7 +20,8 @@ Core encoding and decoding interfaces.\n #![license = \"MIT/ASL2\"]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n-       html_root_url = \"http://doc.rust-lang.org/\")]\n+       html_root_url = \"http://doc.rust-lang.org/\",\n+       html_playground_url = \"http://play.rust-lang.org/\")]\n #![feature(macro_rules, managed_boxes, default_type_params, phase)]\n \n // test harness access"}, {"sha": "109832b7c4795b88b0f99fa270dd5a694b103b24", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -101,7 +101,8 @@\n #![crate_type = \"dylib\"]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n-       html_root_url = \"http://doc.rust-lang.org/\")]\n+       html_root_url = \"http://doc.rust-lang.org/\",\n+       html_playground_url = \"http://play.rust-lang.org/\")]\n #![feature(macro_rules, globs, asm, managed_boxes, thread_local, link_args,\n            linkage, default_type_params, phase, concat_idents, quad_precision_float)]\n "}, {"sha": "fc4d5fec5f52a06e861232dce288da04ee610a2a", "filename": "src/libsync/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibsync%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibsync%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsync%2Flib.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -18,7 +18,8 @@\n #![license = \"MIT/ASL2\"]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n-       html_root_url = \"http://doc.rust-lang.org/\")]\n+       html_root_url = \"http://doc.rust-lang.org/\",\n+       html_playground_url = \"http://play.rust-lang.org/\")]\n #![feature(phase)]\n #![deny(deprecated_owned_vector)]\n "}, {"sha": "cc813262576ad9d7d28493a7198b4c434edd048f", "filename": "src/libterm/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibterm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibterm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Flib.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -45,7 +45,8 @@\n #![crate_type = \"dylib\"]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n-       html_root_url = \"http://doc.rust-lang.org/\")]\n+       html_root_url = \"http://doc.rust-lang.org/\",\n+       html_playground_url = \"http://play.rust-lang.org/\")]\n \n #![feature(macro_rules, phase)]\n "}, {"sha": "f087b9289c3d723432601ad54e92df23f8a34a4f", "filename": "src/libtime/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibtime%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibtime%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtime%2Flib.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -17,7 +17,8 @@\n #![license = \"MIT/ASL2\"]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n-       html_root_url = \"http://doc.rust-lang.org/\")]\n+       html_root_url = \"http://doc.rust-lang.org/\",\n+       html_playground_url = \"http://play.rust-lang.org/\")]\n #![feature(phase)]\n #![deny(deprecated_owned_vector)]\n "}, {"sha": "30054ea4c92384c1a320c2aa8b9abf13c31e9749", "filename": "src/liburl/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Fliburl%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Fliburl%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliburl%2Flib.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -16,7 +16,8 @@\n #![license = \"MIT/ASL2\"]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n-       html_root_url = \"http://doc.rust-lang.org/\")]\n+       html_root_url = \"http://doc.rust-lang.org/\",\n+       html_playground_url = \"http://play.rust-lang.org/\")]\n #![feature(default_type_params)]\n \n use std::collections::HashMap;"}, {"sha": "2459a7fc273a99cd046ec702e5aa171e7cf3e74a", "filename": "src/libuuid/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibuuid%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bbbca33e11d9e22dbbe32c975f908710d4155c/src%2Flibuuid%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibuuid%2Flib.rs?ref=e5bbbca33e11d9e22dbbe32c975f908710d4155c", "patch": "@@ -60,7 +60,8 @@ Examples of string representations:\n #![license = \"MIT/ASL2\"]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n-       html_root_url = \"http://doc.rust-lang.org/\")]\n+       html_root_url = \"http://doc.rust-lang.org/\",\n+       html_playground_url = \"http://play.rust-lang.org/\")]\n \n #![feature(default_type_params)]\n "}]}