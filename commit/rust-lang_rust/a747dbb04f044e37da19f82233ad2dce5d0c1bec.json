{"sha": "a747dbb04f044e37da19f82233ad2dce5d0c1bec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3NDdkYmIwNGYwNDRlMzdkYTE5ZjgyMjMzYWQyZGNlNWQwYzFiZWM=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-01-20T20:54:04Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-01-20T20:56:07Z"}, "message": "Fix breakage due to rust-lang/rust#57651", "tree": {"sha": "947addcd997129d1e8d8bfbef540b762d01d66c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/947addcd997129d1e8d8bfbef540b762d01d66c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a747dbb04f044e37da19f82233ad2dce5d0c1bec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a747dbb04f044e37da19f82233ad2dce5d0c1bec", "html_url": "https://github.com/rust-lang/rust/commit/a747dbb04f044e37da19f82233ad2dce5d0c1bec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a747dbb04f044e37da19f82233ad2dce5d0c1bec/comments", "author": null, "committer": null, "parents": [{"sha": "8747691bea639835e66c6cef0baf66063f0aae93", "url": "https://api.github.com/repos/rust-lang/rust/commits/8747691bea639835e66c6cef0baf66063f0aae93", "html_url": "https://github.com/rust-lang/rust/commit/8747691bea639835e66c6cef0baf66063f0aae93"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "49722e5ad71f2c07cc4a0dd0ab644f373c42a98f", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a747dbb04f044e37da19f82233ad2dce5d0c1bec/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a747dbb04f044e37da19f82233ad2dce5d0c1bec/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=a747dbb04f044e37da19f82233ad2dce5d0c1bec", "patch": "@@ -14,6 +14,7 @@ use std::convert::TryInto;\n use std::hash::{Hash, Hasher};\n use syntax::ast::{FloatTy, LitKind};\n use syntax::ptr::P;\n+use syntax_pos::symbol::Symbol;\n \n /// A `LitKind`-like enum to fold constant `Expr`s into.\n #[derive(Debug, Clone)]\n@@ -38,6 +39,8 @@ pub enum Constant {\n     Repeat(Box<Constant>, u64),\n     /// a tuple of constants\n     Tuple(Vec<Constant>),\n+    /// a literal with syntax error\n+    Err(Symbol),\n }\n \n impl PartialEq for Constant {\n@@ -103,6 +106,9 @@ impl Hash for Constant {\n                 c.hash(state);\n                 l.hash(state);\n             },\n+            Constant::Err(ref s) => {\n+                s.hash(state);\n+            },\n         }\n     }\n }\n@@ -155,6 +161,7 @@ pub fn lit_to_constant<'tcx>(lit: &LitKind, ty: Ty<'tcx>) -> Constant {\n             _ => bug!(),\n         },\n         LitKind::Bool(b) => Constant::Bool(b),\n+        LitKind::Err(s) => Constant::Err(s),\n     }\n }\n "}, {"sha": "9623c6cbdaddf94b6783d0d03e949b72fd28643b", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a747dbb04f044e37da19f82233ad2dce5d0c1bec/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a747dbb04f044e37da19f82233ad2dce5d0c1bec/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=a747dbb04f044e37da19f82233ad2dce5d0c1bec", "patch": "@@ -260,6 +260,7 @@ impl<'tcx> Visitor<'tcx> for PrintVisitor {\n                 match lit.node {\n                     LitKind::Bool(val) => println!(\"    if let LitKind::Bool({:?}) = {}.node;\", val, lit_pat),\n                     LitKind::Char(c) => println!(\"    if let LitKind::Char({:?}) = {}.node;\", c, lit_pat),\n+                    LitKind::Err(val) => println!(\"    if let LitKind::Err({}) = {}.node;\", val, lit_pat),\n                     LitKind::Byte(b) => println!(\"    if let LitKind::Byte({}) = {}.node;\", b, lit_pat),\n                     // FIXME: also check int type\n                     LitKind::Int(i, _) => println!(\"    if let LitKind::Int({}, _) = {}.node;\", i, lit_pat),"}]}