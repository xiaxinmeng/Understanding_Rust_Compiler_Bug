{"sha": "ca60826110dcba2014f439605c2100ae0b095394", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNjA4MjYxMTBkY2JhMjAxNGY0Mzk2MDVjMjEwMGFlMGIwOTUzOTQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-06T21:25:10Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-07T10:28:03Z"}, "message": "test approximations of the \"shorter side\" that resort to `'static`\n\nThis includes the additional case suggested by arielb1.", "tree": {"sha": "d3aa6f4faa9db879a98ac820ba4d0ca3cf70fdd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3aa6f4faa9db879a98ac820ba4d0ca3cf70fdd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca60826110dcba2014f439605c2100ae0b095394", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca60826110dcba2014f439605c2100ae0b095394", "html_url": "https://github.com/rust-lang/rust/commit/ca60826110dcba2014f439605c2100ae0b095394", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca60826110dcba2014f439605c2100ae0b095394/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c42f18c376663948e48ea7516762a0adfcd24a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c42f18c376663948e48ea7516762a0adfcd24a6", "html_url": "https://github.com/rust-lang/rust/commit/3c42f18c376663948e48ea7516762a0adfcd24a6"}], "stats": {"total": 131, "additions": 113, "deletions": 18}, "files": [{"sha": "f776ddc8b153f08e613814abbd23214ccbe4ab48", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-no-bound.rs", "status": "renamed", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ca60826110dcba2014f439605c2100ae0b095394/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca60826110dcba2014f439605c2100ae0b095394/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.rs?ref=ca60826110dcba2014f439605c2100ae0b095394", "patch": "@@ -8,8 +8,13 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// Test a case where we are forced to approximate one end-point with\n-// `'static`. Note that `'static` shows up in the stderr output as `'0`.\n+// Test a case where we are trying to prove `'x: 'y` and are forced to\n+// approximate the shorter end-point (`'y`) to with `'static`. This is\n+// because `'y` is higher-ranked but we know of no relations to other\n+// regions. Note that `'static` shows up in the stderr output as `'0`.\n+//\n+// FIXME(#45827) Because of shortcomings in the MIR type checker,\n+// these errors are not (yet) reported.\n \n // compile-flags:-Znll -Zborrowck=mir -Zverbose\n ", "previous_filename": "src/test/ui/nll/closure-requirements/propagate-approximated-to-static.rs"}, {"sha": "8d1b9a94ea6a123631b80640286dc234b66ca3cd", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-no-bound.stderr", "status": "renamed", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ca60826110dcba2014f439605c2100ae0b095394/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca60826110dcba2014f439605c2100ae0b095394/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr?ref=ca60826110dcba2014f439605c2100ae0b095394", "patch": "@@ -1,36 +1,36 @@\n warning: not reporting region error due to -Znll\n-  --> $DIR/propagate-approximated-to-static.rs:42:9\n+  --> $DIR/propagate-approximated-shorter-to-static-no-bound.rs:47:9\n    |\n-42 |         demand_y(x, y, x.get())\n+47 |         demand_y(x, y, x.get())\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n note: External requirements\n-  --> $DIR/propagate-approximated-to-static.rs:40:47\n+  --> $DIR/propagate-approximated-shorter-to-static-no-bound.rs:45:47\n    |\n-40 |       establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n+45 |       establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n    |  _______________________________________________^\n-41 | |         // Only works if 'x: 'y:\n-42 | |         demand_y(x, y, x.get())\n-43 | |     });\n+46 | |         // Only works if 'x: 'y:\n+47 | |         demand_y(x, y, x.get())\n+48 | |     });\n    | |_____^\n    |\n-   = note: defining type: DefId(0/1:18 ~ propagate_approximated_to_static[317d]::supply[0]::{{closure}}[0]) with closure substs [\n+   = note: defining type: DefId(0/1:18 ~ propagate_approximated_shorter_to_static_no_bound[317d]::supply[0]::{{closure}}[0]) with closure substs [\n                i16,\n                for<'r, 's, 't0, 't1, 't2> extern \"rust-call\" fn((&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 'r)) std::cell::Cell<&'_#1r &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't0)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't1)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't2)) u32>))\n            ]\n    = note: number of external vids: 2\n    = note: where '_#1r: '_#0r\n \n note: No external requirements\n-  --> $DIR/propagate-approximated-to-static.rs:39:1\n+  --> $DIR/propagate-approximated-shorter-to-static-no-bound.rs:44:1\n    |\n-39 | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n-40 | |     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n-41 | |         // Only works if 'x: 'y:\n-42 | |         demand_y(x, y, x.get())\n-43 | |     });\n-44 | | }\n+44 | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n+45 | |     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n+46 | |         // Only works if 'x: 'y:\n+47 | |         demand_y(x, y, x.get())\n+48 | |     });\n+49 | | }\n    | |_^\n    |\n-   = note: defining type: DefId(0/0:6 ~ propagate_approximated_to_static[317d]::supply[0]) with substs []\n+   = note: defining type: DefId(0/0:6 ~ propagate_approximated_shorter_to_static_no_bound[317d]::supply[0]) with substs []\n ", "previous_filename": "src/test/ui/nll/closure-requirements/propagate-approximated-to-static.stderr"}, {"sha": "54b501c9ab6be3fb640d9c6ebb6961645e9998a9", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-wrong-bound.rs", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/ca60826110dcba2014f439605c2100ae0b095394/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca60826110dcba2014f439605c2100ae0b095394/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.rs?ref=ca60826110dcba2014f439605c2100ae0b095394", "patch": "@@ -0,0 +1,54 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test a case where we are trying to prove `'x: 'y` and are forced to\n+// approximate the shorter end-point (`'y`) to with `'static`. This is\n+// because `'y` is higher-ranked but we know of only irrelevant\n+// relations to other regions. Note that `'static` shows up in the\n+// stderr output as `'0`.\n+//\n+// FIXME(#45827) Because of shortcomings in the MIR type checker,\n+// these errors are not (yet) reported.\n+\n+// compile-flags:-Znll -Zborrowck=mir -Zverbose\n+\n+#![feature(rustc_attrs)]\n+\n+use std::cell::Cell;\n+\n+// Callee knows that:\n+//\n+// 'x: 'a\n+// 'y: 'b\n+//\n+// so the only way we can ensure that `'x: 'y` is to show that\n+// `'a: 'static`.\n+fn establish_relationships<'a, 'b, F>(_cell_a: &Cell<&'a u32>, _cell_b: &Cell<&'b u32>, _closure: F)\n+where\n+    F: for<'x, 'y> FnMut(\n+        &Cell<&'a &'x u32>, // shows that 'x: 'a\n+        &Cell<&'b &'y u32>, // shows that 'y: 'b\n+        &Cell<&'x u32>,\n+        &Cell<&'y u32>,\n+    ),\n+{\n+}\n+\n+fn demand_y<'x, 'y>(_cell_x: &Cell<&'x u32>, _cell_y: &Cell<&'y u32>, _y: &'y u32) {}\n+\n+#[rustc_regions]\n+fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n+    establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n+        // Only works if 'x: 'y:\n+        demand_y(x, y, x.get())\n+    });\n+}\n+\n+fn main() {}"}, {"sha": "9d318a63d8fcba2fe990f7f56e1275f7e4898153", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-wrong-bound.stderr", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/ca60826110dcba2014f439605c2100ae0b095394/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca60826110dcba2014f439605c2100ae0b095394/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr?ref=ca60826110dcba2014f439605c2100ae0b095394", "patch": "@@ -0,0 +1,36 @@\n+warning: not reporting region error due to -Znll\n+  --> $DIR/propagate-approximated-shorter-to-static-wrong-bound.rs:50:9\n+   |\n+50 |         demand_y(x, y, x.get())\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+\n+note: External requirements\n+  --> $DIR/propagate-approximated-shorter-to-static-wrong-bound.rs:48:47\n+   |\n+48 |       establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n+   |  _______________________________________________^\n+49 | |         // Only works if 'x: 'y:\n+50 | |         demand_y(x, y, x.get())\n+51 | |     });\n+   | |_____^\n+   |\n+   = note: defining type: DefId(0/1:18 ~ propagate_approximated_shorter_to_static_wrong_bound[317d]::supply[0]::{{closure}}[0]) with closure substs [\n+               i16,\n+               for<'r, 's, 't0, 't1, 't2, 't3> extern \"rust-call\" fn((&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 'r)) std::cell::Cell<&'_#1r &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't0)) std::cell::Cell<&'_#2r &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't1)) u32>, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't2)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't3)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't1)) u32>))\n+           ]\n+   = note: number of external vids: 3\n+   = note: where '_#1r: '_#0r\n+\n+note: No external requirements\n+  --> $DIR/propagate-approximated-shorter-to-static-wrong-bound.rs:47:1\n+   |\n+47 | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n+48 | |     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n+49 | |         // Only works if 'x: 'y:\n+50 | |         demand_y(x, y, x.get())\n+51 | |     });\n+52 | | }\n+   | |_^\n+   |\n+   = note: defining type: DefId(0/0:6 ~ propagate_approximated_shorter_to_static_wrong_bound[317d]::supply[0]) with substs []\n+"}]}