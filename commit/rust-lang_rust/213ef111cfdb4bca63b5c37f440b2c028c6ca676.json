{"sha": "213ef111cfdb4bca63b5c37f440b2c028c6ca676", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxM2VmMTExY2ZkYjRiY2E2M2I1YzM3ZjQ0MGIyYzAyOGM2Y2E2NzY=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-03-12T17:28:53Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-04-06T10:14:08Z"}, "message": "Select upstream monomorphizations in a stable way.", "tree": {"sha": "debb32baf9a2bf8b5db46ee641eff4065100dc0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/debb32baf9a2bf8b5db46ee641eff4065100dc0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/213ef111cfdb4bca63b5c37f440b2c028c6ca676", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/213ef111cfdb4bca63b5c37f440b2c028c6ca676", "html_url": "https://github.com/rust-lang/rust/commit/213ef111cfdb4bca63b5c37f440b2c028c6ca676", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/213ef111cfdb4bca63b5c37f440b2c028c6ca676/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5316a458b2ebf12aab1922ce905d38df6496ac8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5316a458b2ebf12aab1922ce905d38df6496ac8a", "html_url": "https://github.com/rust-lang/rust/commit/5316a458b2ebf12aab1922ce905d38df6496ac8a"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "0f88e9cd7b799816b78ca3bd7dc08096448db2ec", "filename": "src/librustc_trans/back/symbol_export.rs", "status": "modified", "additions": 35, "deletions": 5, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/213ef111cfdb4bca63b5c37f440b2c028c6ca676/src%2Flibrustc_trans%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/213ef111cfdb4bca63b5c37f440b2c028c6ca676/src%2Flibrustc_trans%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fsymbol_export.rs?ref=213ef111cfdb4bca63b5c37f440b2c028c6ca676", "patch": "@@ -14,15 +14,18 @@ use std::sync::Arc;\n use monomorphize::Instance;\n use rustc::hir;\n use rustc::hir::TransFnAttrFlags;\n-use rustc::hir::def_id::CrateNum;\n-use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc::hir::def_id::{CrateNum, DefId, LOCAL_CRATE, CRATE_DEF_INDEX};\n+use rustc::ich::Fingerprint;\n use rustc::middle::exported_symbols::{SymbolExportLevel, ExportedSymbol, metadata_symbol_name};\n use rustc::session::config;\n use rustc::ty::{TyCtxt, SymbolName};\n use rustc::ty::maps::Providers;\n use rustc::ty::subst::Substs;\n use rustc::util::nodemap::{FxHashMap, DefIdMap};\n use rustc_allocator::ALLOCATOR_METHODS;\n+use rustc_data_structures::indexed_vec::IndexVec;\n+use syntax::attr;\n+use std::collections::hash_map::Entry::*;\n \n pub type ExportedSymbols = FxHashMap<\n     CrateNum,\n@@ -282,12 +285,39 @@ fn upstream_monomorphizations_provider<'a, 'tcx>(\n \n     let mut instances = DefIdMap();\n \n+    let cnum_stable_ids: IndexVec<CrateNum, Fingerprint> = {\n+        let mut cnum_stable_ids = IndexVec::from_elem_n(Fingerprint::ZERO,\n+                                                        cnums.len() + 1);\n+\n+        for &cnum in cnums.iter() {\n+            cnum_stable_ids[cnum] = tcx.def_path_hash(DefId {\n+                krate: cnum,\n+                index: CRATE_DEF_INDEX,\n+            }).0;\n+        }\n+\n+        cnum_stable_ids\n+    };\n+\n     for &cnum in cnums.iter() {\n         for &(ref exported_symbol, _) in tcx.exported_symbols(cnum).iter() {\n             if let &ExportedSymbol::Generic(def_id, substs) = exported_symbol {\n-                instances.entry(def_id)\n-                         .or_insert_with(|| FxHashMap())\n-                         .insert(substs, cnum);\n+                let substs_map = instances.entry(def_id)\n+                                          .or_insert_with(|| FxHashMap());\n+\n+                match substs_map.entry(substs) {\n+                    Occupied(mut e) => {\n+                        // If there are multiple monomorphizations available,\n+                        // we select one deterministically.\n+                        let other_cnum = *e.get();\n+                        if cnum_stable_ids[other_cnum] > cnum_stable_ids[cnum] {\n+                            e.insert(cnum);\n+                        }\n+                    }\n+                    Vacant(e) => {\n+                        e.insert(cnum);\n+                    }\n+                }\n             }\n         }\n     }"}]}