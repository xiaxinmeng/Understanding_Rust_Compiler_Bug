{"sha": "e2d558ad56d03bdc59ab2aaa28aaedf9172a0539", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyZDU1OGFkNTZkMDNiZGM1OWFiMmFhYTI4YWFlZGY5MTcyYTA1Mzk=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-01-25T05:23:01Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-01-26T20:47:24Z"}, "message": "A few more comments", "tree": {"sha": "52c8aafaa54a3b0eaaa5e542834a85ba00e94230", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52c8aafaa54a3b0eaaa5e542834a85ba00e94230"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2d558ad56d03bdc59ab2aaa28aaedf9172a0539", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2d558ad56d03bdc59ab2aaa28aaedf9172a0539", "html_url": "https://github.com/rust-lang/rust/commit/e2d558ad56d03bdc59ab2aaa28aaedf9172a0539", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2d558ad56d03bdc59ab2aaa28aaedf9172a0539/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02d1d92878181a1c99b6d6029f44fbbb91bff499", "url": "https://api.github.com/repos/rust-lang/rust/commits/02d1d92878181a1c99b6d6029f44fbbb91bff499", "html_url": "https://github.com/rust-lang/rust/commit/02d1d92878181a1c99b6d6029f44fbbb91bff499"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "af18801c97e6fa155803345cd5d5e91c7b367009", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2d558ad56d03bdc59ab2aaa28aaedf9172a0539/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2d558ad56d03bdc59ab2aaa28aaedf9172a0539/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=e2d558ad56d03bdc59ab2aaa28aaedf9172a0539", "patch": "@@ -289,11 +289,17 @@ pub enum NamedMatch {\n     MatchedNonterminal(Rc<Nonterminal>),\n }\n \n+/// Takes a sequence of token trees `ms` representing a matcher which successfully matched input\n+/// and an iterator of items that matched input and produces a `NamedParseResult`.\n fn nameize<I: Iterator<Item = NamedMatch>>(\n     sess: &ParseSess,\n     ms: &[TokenTree],\n     mut res: I,\n ) -> NamedParseResult {\n+    // Recursively descend into each type of matcher (e.g. sequences, delimited, metavars) and make\n+    // sure that each metavar has _exactly one_ binding. If a metavar does not have exactly one\n+    // binding, then there is an error. If it does, then we insert the binding into the\n+    // `NamedParseResult`.\n     fn n_rec<I: Iterator<Item = NamedMatch>>(\n         sess: &ParseSess,\n         m: &TokenTree,\n@@ -340,6 +346,8 @@ fn nameize<I: Iterator<Item = NamedMatch>>(\n     Success(ret_val)\n }\n \n+/// Generate an appropriate parsing failure message. For EOF, this is \"unexpected end...\". For\n+/// other tokens, this is \"unexpected token...\".\n pub fn parse_failure_msg(tok: Token) -> String {\n     match tok {\n         token::Eof => \"unexpected end of macro invocation\".to_string(),"}]}