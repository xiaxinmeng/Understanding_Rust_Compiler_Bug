{"sha": "8ea3f236dc45cd4bee67504ae4b1cf64ee5de7ad", "node_id": "C_kwDOAAsO6NoAKDhlYTNmMjM2ZGM0NWNkNGJlZTY3NTA0YWU0YjFjZjY0ZWU1ZGU3YWQ", "commit": {"author": {"name": "fee1-dead", "email": "ent3rm4n@gmail.com", "date": "2022-03-06T11:35:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-06T11:35:31Z"}, "message": "Rollup merge of #94649 - ChrisDenton:unix-absolute-fix, r=Dylan-DPC\n\nUnix path::absolute: Fix leading \".\" component\n\nTesting leading `.` and `..` components were missing from the unix tests.\n\nThis PR adds them and fixes the leading `.` case. It also fixes the test cases so that they do an exact comparison.\n\nThis problem reported by ``@axetroy``", "tree": {"sha": "b89494c840d78cf077479294aa42366e6f1cd068", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b89494c840d78cf077479294aa42366e6f1cd068"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ea3f236dc45cd4bee67504ae4b1cf64ee5de7ad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiJJyDCRBK7hj4Ov3rIwAAyZcIAKWMcnHokk4SzN4a9N63hJny\nrBt0PZHlJsKehkIwDRIcdXDIx3q9PgWmVTrvbWm03uvZV8W0EUxKwJdEJo0zhKwO\nNhllrrEV+zDe+m6/J3l8qDOSPbBnu7muesLGyVL6WpxG3mdMAMuQ9MD53c8zl6C7\nSIXkT2LgCGHVvGu+oIXZ0h5cYQrONeqnp4X7NfgaXOtcTxXf7VcDiLDuBJC63DpU\nLrsmiS7r6pYbuL2sW/GsD2Zs1AR7E4qi6HGhU9Gp+o7G6LDHRX6TS+kPbV2Vi4Wi\nc48CGyxgzkDpIqLsIFooV2a/cFzGJdAWWpx6XtndaZcNDZQZzzgjRoikZsEOnqE=\n=XM8v\n-----END PGP SIGNATURE-----\n", "payload": "tree b89494c840d78cf077479294aa42366e6f1cd068\nparent 02e8839cbd6d5df2019cd22cd42aea48c3aecf2a\nparent 0421af9a4626638c71d59feebd7a35136d53bfb9\nauthor fee1-dead <ent3rm4n@gmail.com> 1646566531 +1100\ncommitter GitHub <noreply@github.com> 1646566531 +1100\n\nRollup merge of #94649 - ChrisDenton:unix-absolute-fix, r=Dylan-DPC\n\nUnix path::absolute: Fix leading \".\" component\n\nTesting leading `.` and `..` components were missing from the unix tests.\n\nThis PR adds them and fixes the leading `.` case. It also fixes the test cases so that they do an exact comparison.\n\nThis problem reported by ``@axetroy``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ea3f236dc45cd4bee67504ae4b1cf64ee5de7ad", "html_url": "https://github.com/rust-lang/rust/commit/8ea3f236dc45cd4bee67504ae4b1cf64ee5de7ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ea3f236dc45cd4bee67504ae4b1cf64ee5de7ad/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02e8839cbd6d5df2019cd22cd42aea48c3aecf2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/02e8839cbd6d5df2019cd22cd42aea48c3aecf2a", "html_url": "https://github.com/rust-lang/rust/commit/02e8839cbd6d5df2019cd22cd42aea48c3aecf2a"}, {"sha": "0421af9a4626638c71d59feebd7a35136d53bfb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/0421af9a4626638c71d59feebd7a35136d53bfb9", "html_url": "https://github.com/rust-lang/rust/commit/0421af9a4626638c71d59feebd7a35136d53bfb9"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "6e863787b7f39bf1515c4217037acd43febff119", "filename": "library/std/src/path/tests.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8ea3f236dc45cd4bee67504ae4b1cf64ee5de7ad/library%2Fstd%2Fsrc%2Fpath%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ea3f236dc45cd4bee67504ae4b1cf64ee5de7ad/library%2Fstd%2Fsrc%2Fpath%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath%2Ftests.rs?ref=8ea3f236dc45cd4bee67504ae4b1cf64ee5de7ad", "patch": "@@ -1710,15 +1710,23 @@ fn test_unix_absolute() {\n     let relative = \"a/b\";\n     let mut expected = crate::env::current_dir().unwrap();\n     expected.push(relative);\n-    assert_eq!(absolute(relative).unwrap(), expected);\n+    assert_eq!(absolute(relative).unwrap().as_os_str(), expected.as_os_str());\n \n     // Test how components are collected.\n-    assert_eq!(absolute(\"/a/b/c\").unwrap(), Path::new(\"/a/b/c\"));\n-    assert_eq!(absolute(\"/a//b/c\").unwrap(), Path::new(\"/a/b/c\"));\n-    assert_eq!(absolute(\"//a/b/c\").unwrap(), Path::new(\"//a/b/c\"));\n-    assert_eq!(absolute(\"///a/b/c\").unwrap(), Path::new(\"/a/b/c\"));\n-    assert_eq!(absolute(\"/a/b/c/\").unwrap(), Path::new(\"/a/b/c/\"));\n-    assert_eq!(absolute(\"/a/./b/../c/.././..\").unwrap(), Path::new(\"/a/b/../c/../..\"));\n+    assert_eq!(absolute(\"/a/b/c\").unwrap().as_os_str(), Path::new(\"/a/b/c\").as_os_str());\n+    assert_eq!(absolute(\"/a//b/c\").unwrap().as_os_str(), Path::new(\"/a/b/c\").as_os_str());\n+    assert_eq!(absolute(\"//a/b/c\").unwrap().as_os_str(), Path::new(\"//a/b/c\").as_os_str());\n+    assert_eq!(absolute(\"///a/b/c\").unwrap().as_os_str(), Path::new(\"/a/b/c\").as_os_str());\n+    assert_eq!(absolute(\"/a/b/c/\").unwrap().as_os_str(), Path::new(\"/a/b/c/\").as_os_str());\n+    assert_eq!(\n+        absolute(\"/a/./b/../c/.././..\").unwrap().as_os_str(),\n+        Path::new(\"/a/b/../c/../..\").as_os_str()\n+    );\n+\n+    // Test leading `.` and `..` components\n+    let curdir = crate::env::current_dir().unwrap();\n+    assert_eq!(absolute(\"./a\").unwrap().as_os_str(), curdir.join(\"a\").as_os_str());\n+    assert_eq!(absolute(\"../a\").unwrap().as_os_str(), curdir.join(\"../a\").as_os_str()); // return /pwd/../a\n }\n \n #[test]"}, {"sha": "a98a69e2db8e12b49564f2f69bf399836b5e5cbe", "filename": "library/std/src/sys/unix/path.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ea3f236dc45cd4bee67504ae4b1cf64ee5de7ad/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ea3f236dc45cd4bee67504ae4b1cf64ee5de7ad/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fpath.rs?ref=8ea3f236dc45cd4bee67504ae4b1cf64ee5de7ad", "patch": "@@ -28,7 +28,8 @@ pub(crate) fn absolute(path: &Path) -> io::Result<PathBuf> {\n     // See 4.13 Pathname Resolution, IEEE Std 1003.1-2017\n     // https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap04.html#tag_04_13\n \n-    let mut components = path.components();\n+    // Get the components, skipping the redundant leading \".\" component if it exists.\n+    let mut components = path.strip_prefix(\".\").unwrap_or(path).components();\n     let path_os = path.as_os_str().bytes();\n \n     let mut normalized = if path.is_absolute() {"}]}