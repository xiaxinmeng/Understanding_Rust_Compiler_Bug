{"sha": "99c5388ce65568fc8517d401dbae9773a0272840", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5YzUzODhjZTY1NTY4ZmM4NTE3ZDQwMWRiYWU5NzczYTAyNzI4NDA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-23T17:42:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-23T17:42:30Z"}, "message": "Auto merge of #3582 - Arkweid:add-lints-aseert-checks, r=flip1995\n\nAdd assert(true) and assert(false) lints\n\nThis PR add two lints on assert!(true) and assert!(false).\n#3575", "tree": {"sha": "190cbe45129e7b8b0a85a9f42aaa8a3fbdc0eaf4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/190cbe45129e7b8b0a85a9f42aaa8a3fbdc0eaf4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99c5388ce65568fc8517d401dbae9773a0272840", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99c5388ce65568fc8517d401dbae9773a0272840", "html_url": "https://github.com/rust-lang/rust/commit/99c5388ce65568fc8517d401dbae9773a0272840", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99c5388ce65568fc8517d401dbae9773a0272840/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a069320fd7db67c864d9d77e9f446b7beb2b83e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/a069320fd7db67c864d9d77e9f446b7beb2b83e3", "html_url": "https://github.com/rust-lang/rust/commit/a069320fd7db67c864d9d77e9f446b7beb2b83e3"}, {"sha": "c771f339d73e2a02c5a61734ffa3106721407265", "url": "https://api.github.com/repos/rust-lang/rust/commits/c771f339d73e2a02c5a61734ffa3106721407265", "html_url": "https://github.com/rust-lang/rust/commit/c771f339d73e2a02c5a61734ffa3106721407265"}], "stats": {"total": 160, "additions": 154, "deletions": 6}, "files": [{"sha": "14c1b0e4d3f6b6247d462b05e78953f08567ca80", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/99c5388ce65568fc8517d401dbae9773a0272840/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/99c5388ce65568fc8517d401dbae9773a0272840/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=99c5388ce65568fc8517d401dbae9773a0272840", "patch": "@@ -616,6 +616,7 @@ All notable changes to this project will be documented in this file.\n [`absurd_extreme_comparisons`]: https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons\n [`almost_swapped`]: https://rust-lang.github.io/rust-clippy/master/index.html#almost_swapped\n [`approx_constant`]: https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant\n+[`assertions_on_constants`]: https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n [`assign_op_pattern`]: https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n [`assign_ops`]: https://rust-lang.github.io/rust-clippy/master/index.html#assign_ops\n [`bad_bit_mask`]: https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask"}, {"sha": "6473b8efc5480687c30ab99368afc6ed9c5b2da4", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/99c5388ce65568fc8517d401dbae9773a0272840/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/99c5388ce65568fc8517d401dbae9773a0272840/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=99c5388ce65568fc8517d401dbae9773a0272840", "patch": "@@ -7,7 +7,7 @@\n \n A collection of lints to catch common mistakes and improve your [Rust](https://github.com/rust-lang/rust) code.\n \n-[There are 291 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n+[There are 292 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n \n We have a bunch of lint categories to allow you to choose how much Clippy is supposed to ~~annoy~~ help you:\n "}, {"sha": "a148cb1c3a6f266c4703560baa4810ad2307c2cf", "filename": "clippy_lints/src/assertions_on_constants.rs", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/99c5388ce65568fc8517d401dbae9773a0272840/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99c5388ce65568fc8517d401dbae9773a0272840/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassertions_on_constants.rs?ref=99c5388ce65568fc8517d401dbae9773a0272840", "patch": "@@ -0,0 +1,78 @@\n+use crate::consts::{constant, Constant};\n+use crate::rustc::hir::{Expr, ExprKind};\n+use crate::rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use crate::rustc::{declare_tool_lint, lint_array};\n+use crate::syntax::ast::LitKind;\n+use crate::utils::{is_direct_expn_of, span_help_and_lint};\n+use if_chain::if_chain;\n+\n+/// **What it does:** Check to call assert!(true/false)\n+///\n+/// **Why is this bad?** Will be optimized out by the compiler or should probably be replaced by a\n+/// panic!() or unreachable!()\n+///\n+/// **Known problems:** None\n+///\n+/// **Example:**\n+/// ```rust\n+/// assert!(false)\n+/// // or\n+/// assert!(true)\n+/// // or\n+/// const B: bool = false;\n+/// assert!(B)\n+/// ```\n+declare_clippy_lint! {\n+    pub ASSERTIONS_ON_CONSTANTS,\n+    style,\n+    \"assert!(true/false) will be optimized out by the compiler/should probably be replaced by a panic!() or unreachable!()\"\n+}\n+\n+pub struct AssertionsOnConstants;\n+\n+impl LintPass for AssertionsOnConstants {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array![ASSERTIONS_ON_CONSTANTS]\n+    }\n+}\n+\n+impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AssertionsOnConstants {\n+    fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, e: &'tcx Expr) {\n+        if_chain! {\n+            if is_direct_expn_of(e.span, \"assert\").is_some();\n+            if let ExprKind::Unary(_, ref lit) = e.node;\n+            then {\n+                if let ExprKind::Lit(ref inner) = lit.node {\n+                    match inner.node {\n+                        LitKind::Bool(true) => {\n+                            span_help_and_lint(cx, ASSERTIONS_ON_CONSTANTS, e.span,\n+                                \"assert!(true) will be optimized out by the compiler\",\n+                                \"remove it\");\n+                        },\n+                        LitKind::Bool(false) => {\n+                            span_help_and_lint(\n+                                cx, ASSERTIONS_ON_CONSTANTS, e.span,\n+                                \"assert!(false) should probably be replaced\",\n+                                \"use panic!() or unreachable!()\");\n+                        },\n+                        _ => (),\n+                    }\n+                } else if let Some(bool_const) = constant(cx, cx.tables, lit) {\n+                    match bool_const.0 {\n+                        Constant::Bool(true) => {\n+                            span_help_and_lint(cx, ASSERTIONS_ON_CONSTANTS, e.span,\n+                                \"assert!(const: true) will be optimized out by the compiler\",\n+                                \"remove it\");\n+                        },\n+                        Constant::Bool(false) => {\n+                            span_help_and_lint(cx, ASSERTIONS_ON_CONSTANTS, e.span,\n+                                \"assert!(const: false) should probably be replaced\",\n+                                \"use panic!() or unreachable!()\");\n+                        },\n+                        _ => (),\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}"}, {"sha": "9d77c3c64a2abb917ad1cf71d03966786e299651", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/99c5388ce65568fc8517d401dbae9773a0272840/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99c5388ce65568fc8517d401dbae9773a0272840/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=99c5388ce65568fc8517d401dbae9773a0272840", "patch": "@@ -78,6 +78,7 @@ mod utils;\n // begin lints modules, do not remove this comment, it\u2019s used in `update_lints`\n pub mod approx_const;\n pub mod arithmetic;\n+pub mod assertions_on_constants;\n pub mod assign_ops;\n pub mod attrs;\n pub mod bit_mask;\n@@ -477,6 +478,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n     reg.register_late_lint_pass(box redundant_clone::RedundantClone);\n     reg.register_late_lint_pass(box slow_vector_initialization::Pass);\n     reg.register_late_lint_pass(box types::RefToMut);\n+    reg.register_late_lint_pass(box assertions_on_constants::AssertionsOnConstants);\n \n     reg.register_lint_group(\"clippy::restriction\", Some(\"clippy_restriction\"), vec![\n         arithmetic::FLOAT_ARITHMETIC,\n@@ -554,6 +556,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n \n     reg.register_lint_group(\"clippy::all\", Some(\"clippy\"), vec![\n         approx_const::APPROX_CONSTANT,\n+        assertions_on_constants::ASSERTIONS_ON_CONSTANTS,\n         assign_ops::ASSIGN_OP_PATTERN,\n         assign_ops::MISREFACTORED_ASSIGN_OP,\n         attrs::DEPRECATED_CFG_ATTR,\n@@ -776,6 +779,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n     ]);\n \n     reg.register_lint_group(\"clippy::style\", Some(\"clippy_style\"), vec![\n+        assertions_on_constants::ASSERTIONS_ON_CONSTANTS,\n         assign_ops::ASSIGN_OP_PATTERN,\n         attrs::UNKNOWN_CLIPPY_LINTS,\n         bit_mask::VERBOSE_BIT_MASK,"}, {"sha": "bd0cee7564442fd63a12d228ea4fdc06ddf1a7b8", "filename": "tests/missing-test-files.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/99c5388ce65568fc8517d401dbae9773a0272840/tests%2Fmissing-test-files.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99c5388ce65568fc8517d401dbae9773a0272840/tests%2Fmissing-test-files.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmissing-test-files.rs?ref=99c5388ce65568fc8517d401dbae9773a0272840", "patch": "@@ -1,3 +1,5 @@\n+#![allow(clippy::assertions_on_constants)]\n+\n use std::fs::{self, DirEntry};\n use std::path::Path;\n "}, {"sha": "daeceebd3a2c7ed3fb76e08b2f1e6734e80829e0", "filename": "tests/ui/assertions_on_constants.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/99c5388ce65568fc8517d401dbae9773a0272840/tests%2Fui%2Fassertions_on_constants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99c5388ce65568fc8517d401dbae9773a0272840/tests%2Fui%2Fassertions_on_constants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassertions_on_constants.rs?ref=99c5388ce65568fc8517d401dbae9773a0272840", "patch": "@@ -0,0 +1,12 @@\n+fn main() {\n+    assert!(true);\n+    assert!(false);\n+    assert!(true, \"true message\");\n+    assert!(false, \"false message\");\n+\n+    const B: bool = true;\n+    assert!(B);\n+\n+    const C: bool = false;\n+    assert!(C);\n+}"}, {"sha": "e8001acceb1ec6ef5d8122300577c33993bdbdfd", "filename": "tests/ui/assertions_on_constants.stderr", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/99c5388ce65568fc8517d401dbae9773a0272840/tests%2Fui%2Fassertions_on_constants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/99c5388ce65568fc8517d401dbae9773a0272840/tests%2Fui%2Fassertions_on_constants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassertions_on_constants.stderr?ref=99c5388ce65568fc8517d401dbae9773a0272840", "patch": "@@ -0,0 +1,51 @@\n+error: assert!(true) will be optimized out by the compiler\n+  --> $DIR/assertions_on_constants.rs:2:5\n+   |\n+LL |     assert!(true);\n+   |     ^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::assertions-on-constants` implied by `-D warnings`\n+   = help: remove it\n+\n+error: assert!(false) should probably be replaced\n+  --> $DIR/assertions_on_constants.rs:3:5\n+   |\n+LL |     assert!(false);\n+   |     ^^^^^^^^^^^^^^^\n+   |\n+   = help: use panic!() or unreachable!()\n+\n+error: assert!(true) will be optimized out by the compiler\n+  --> $DIR/assertions_on_constants.rs:4:5\n+   |\n+LL |     assert!(true, \"true message\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: remove it\n+\n+error: assert!(false) should probably be replaced\n+  --> $DIR/assertions_on_constants.rs:5:5\n+   |\n+LL |     assert!(false, \"false message\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: use panic!() or unreachable!()\n+\n+error: assert!(const: true) will be optimized out by the compiler\n+  --> $DIR/assertions_on_constants.rs:8:5\n+   |\n+LL |     assert!(B);\n+   |     ^^^^^^^^^^^\n+   |\n+   = help: remove it\n+\n+error: assert!(const: false) should probably be replaced\n+  --> $DIR/assertions_on_constants.rs:11:5\n+   |\n+LL |     assert!(C);\n+   |     ^^^^^^^^^^^\n+   |\n+   = help: use panic!() or unreachable!()\n+\n+error: aborting due to 6 previous errors\n+"}, {"sha": "91b65a43be77fa5fdb3aa2a1fe66f2227347a7cf", "filename": "tests/ui/attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/99c5388ce65568fc8517d401dbae9773a0272840/tests%2Fui%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99c5388ce65568fc8517d401dbae9773a0272840/tests%2Fui%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fattrs.rs?ref=99c5388ce65568fc8517d401dbae9773a0272840", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::inline_always, clippy::deprecated_semver)]\n-\n+#![allow(clippy::assertions_on_constants)]\n #[inline(always)]\n fn test_attr_lint() {\n     assert!(true)"}, {"sha": "3c7de56406eee1a827063bfca3f9c98968cc312c", "filename": "tests/ui/collapsible_if.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/99c5388ce65568fc8517d401dbae9773a0272840/tests%2Fui%2Fcollapsible_if.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/99c5388ce65568fc8517d401dbae9773a0272840/tests%2Fui%2Fcollapsible_if.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.fixed?ref=99c5388ce65568fc8517d401dbae9773a0272840", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n-#![allow(clippy::cyclomatic_complexity)]\n+#![allow(clippy::cyclomatic_complexity, clippy::assertions_on_constants)]\n \n #[rustfmt::skip]\n #[warn(clippy::collapsible_if)]"}, {"sha": "e46d7537577410cc1d30694df4d68b5ab69346bf", "filename": "tests/ui/collapsible_if.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/99c5388ce65568fc8517d401dbae9773a0272840/tests%2Fui%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99c5388ce65568fc8517d401dbae9773a0272840/tests%2Fui%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.rs?ref=99c5388ce65568fc8517d401dbae9773a0272840", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n-#![allow(clippy::cyclomatic_complexity)]\n+#![allow(clippy::cyclomatic_complexity, clippy::assertions_on_constants)]\n \n #[rustfmt::skip]\n #[warn(clippy::collapsible_if)]"}, {"sha": "b43dc200825237b55a7c8ca83009a2d585e8d511", "filename": "tests/ui/empty_line_after_outer_attribute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/99c5388ce65568fc8517d401dbae9773a0272840/tests%2Fui%2Fempty_line_after_outer_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99c5388ce65568fc8517d401dbae9773a0272840/tests%2Fui%2Fempty_line_after_outer_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_line_after_outer_attribute.rs?ref=99c5388ce65568fc8517d401dbae9773a0272840", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::empty_line_after_outer_attr)]\n-\n+#![allow(clippy::assertions_on_constants)]\n // This should produce a warning\n #[crate_type = \"lib\"]\n "}, {"sha": "92290da8a6ac0c1a495533196b98e8a65d856f86", "filename": "tests/ui/panic_unimplemented.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/99c5388ce65568fc8517d401dbae9773a0272840/tests%2Fui%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99c5388ce65568fc8517d401dbae9773a0272840/tests%2Fui%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanic_unimplemented.rs?ref=99c5388ce65568fc8517d401dbae9773a0272840", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::panic_params, clippy::unimplemented)]\n-\n+#![allow(clippy::assertions_on_constants)]\n fn missing() {\n     if true {\n         panic!(\"{}\");"}]}