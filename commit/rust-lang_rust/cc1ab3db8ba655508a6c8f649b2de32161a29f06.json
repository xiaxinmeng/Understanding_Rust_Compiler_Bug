{"sha": "cc1ab3db8ba655508a6c8f649b2de32161a29f06", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjMWFiM2RiOGJhNjU1NTA4YTZjOGY2NDliMmRlMzIxNjFhMjlmMDY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-12-10T19:50:18Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-12-10T20:02:18Z"}, "message": "Suggest setting type param on function call", "tree": {"sha": "156c23f1773bdd3c513eb4208d8188c81a28e143", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/156c23f1773bdd3c513eb4208d8188c81a28e143"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc1ab3db8ba655508a6c8f649b2de32161a29f06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc1ab3db8ba655508a6c8f649b2de32161a29f06", "html_url": "https://github.com/rust-lang/rust/commit/cc1ab3db8ba655508a6c8f649b2de32161a29f06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc1ab3db8ba655508a6c8f649b2de32161a29f06/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2924d38dd9ba0502264d5b8652ffd65f3f43f0df", "url": "https://api.github.com/repos/rust-lang/rust/commits/2924d38dd9ba0502264d5b8652ffd65f3f43f0df", "html_url": "https://github.com/rust-lang/rust/commit/2924d38dd9ba0502264d5b8652ffd65f3f43f0df"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "b8200a8e1733192d4ded8236a1ec746ff59a2764", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/cc1ab3db8ba655508a6c8f649b2de32161a29f06/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc1ab3db8ba655508a6c8f649b2de32161a29f06/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=cc1ab3db8ba655508a6c8f649b2de32161a29f06", "patch": "@@ -1994,6 +1994,30 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                 }\n                 let mut err = self.need_type_info_err(body_id, span, self_ty, ErrorCode::E0283);\n                 err.note(&format!(\"cannot resolve `{}`\", predicate));\n+                if let (Ok(ref snippet), ObligationCauseCode::BindingObligation(ref def_id, _)) = (\n+                    self.tcx.sess.source_map().span_to_snippet(span),\n+                    &obligation.cause.code,\n+                ) {\n+                    let generics = self.tcx.generics_of(*def_id);\n+                    if !generics.params.is_empty() {\n+                        err.span_suggestion(\n+                            span,\n+                            &format!(\n+                                \"consider specifying the type argument{} in the function call\",\n+                                if generics.params.len() > 1 {\n+                                    \"s\"\n+                                } else {\n+                                    \"\"\n+                                },\n+                            ),\n+                            format!(\"{}::<{}>\", snippet, generics.params.iter()\n+                                .map(|p| p.name.to_string())\n+                                .collect::<Vec<String>>()\n+                                .join(\", \")),\n+                            Applicability::HasPlaceholders,\n+                        );\n+                    }\n+                }\n                 err\n             }\n "}, {"sha": "5b7d6ba16d02d394c1073d388cbde75225f6b27b", "filename": "src/test/ui/type/type-annotation-needed.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cc1ab3db8ba655508a6c8f649b2de32161a29f06/src%2Ftest%2Fui%2Ftype%2Ftype-annotation-needed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc1ab3db8ba655508a6c8f649b2de32161a29f06/src%2Ftest%2Fui%2Ftype%2Ftype-annotation-needed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-annotation-needed.stderr?ref=cc1ab3db8ba655508a6c8f649b2de32161a29f06", "patch": "@@ -5,7 +5,10 @@ LL | fn foo<T: Into<String>>(x: i32) {}\n    |    ---    ------------ required by this bound in `foo`\n ...\n LL |     foo(42);\n-   |     ^^^ cannot infer type for `T`\n+   |     ^^^\n+   |     |\n+   |     cannot infer type for `T`\n+   |     help: consider specifying the type argument in the function call: `foo::<T>`\n    |\n    = note: cannot resolve `_: std::convert::Into<std::string::String>`\n "}]}