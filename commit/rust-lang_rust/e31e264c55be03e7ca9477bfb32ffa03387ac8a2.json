{"sha": "e31e264c55be03e7ca9477bfb32ffa03387ac8a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMWUyNjRjNTViZTAzZTdjYTk0NzdiZmIzMmZmYTAzMzg3YWM4YTI=", "commit": {"author": {"name": "Tatsuyuki Ishi", "email": "ishitatsuyuki@gmail.com", "date": "2017-03-09T08:49:37Z"}, "committer": {"name": "Tatsuyuki Ishi", "email": "ishitatsuyuki@gmail.com", "date": "2017-03-11T11:00:05Z"}, "message": "rustbuild: Make save-analysis an option", "tree": {"sha": "db9bbf539a6b6e5706697965e6bdda9349fdad13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db9bbf539a6b6e5706697965e6bdda9349fdad13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e31e264c55be03e7ca9477bfb32ffa03387ac8a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e31e264c55be03e7ca9477bfb32ffa03387ac8a2", "html_url": "https://github.com/rust-lang/rust/commit/e31e264c55be03e7ca9477bfb32ffa03387ac8a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e31e264c55be03e7ca9477bfb32ffa03387ac8a2/comments", "author": {"login": "ishitatsuyuki", "id": 12389383, "node_id": "MDQ6VXNlcjEyMzg5Mzgz", "avatar_url": "https://avatars.githubusercontent.com/u/12389383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishitatsuyuki", "html_url": "https://github.com/ishitatsuyuki", "followers_url": "https://api.github.com/users/ishitatsuyuki/followers", "following_url": "https://api.github.com/users/ishitatsuyuki/following{/other_user}", "gists_url": "https://api.github.com/users/ishitatsuyuki/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishitatsuyuki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishitatsuyuki/subscriptions", "organizations_url": "https://api.github.com/users/ishitatsuyuki/orgs", "repos_url": "https://api.github.com/users/ishitatsuyuki/repos", "events_url": "https://api.github.com/users/ishitatsuyuki/events{/privacy}", "received_events_url": "https://api.github.com/users/ishitatsuyuki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ishitatsuyuki", "id": 12389383, "node_id": "MDQ6VXNlcjEyMzg5Mzgz", "avatar_url": "https://avatars.githubusercontent.com/u/12389383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishitatsuyuki", "html_url": "https://github.com/ishitatsuyuki", "followers_url": "https://api.github.com/users/ishitatsuyuki/followers", "following_url": "https://api.github.com/users/ishitatsuyuki/following{/other_user}", "gists_url": "https://api.github.com/users/ishitatsuyuki/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishitatsuyuki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishitatsuyuki/subscriptions", "organizations_url": "https://api.github.com/users/ishitatsuyuki/orgs", "repos_url": "https://api.github.com/users/ishitatsuyuki/repos", "events_url": "https://api.github.com/users/ishitatsuyuki/events{/privacy}", "received_events_url": "https://api.github.com/users/ishitatsuyuki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c72b7651f231f589bc81d78fb9602d5a0899213", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c72b7651f231f589bc81d78fb9602d5a0899213", "html_url": "https://github.com/rust-lang/rust/commit/8c72b7651f231f589bc81d78fb9602d5a0899213"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "fae457e9c0b159d08fea816e75775b295f0a0e0c", "filename": "configure", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e31e264c55be03e7ca9477bfb32ffa03387ac8a2/configure", "raw_url": "https://github.com/rust-lang/rust/raw/e31e264c55be03e7ca9477bfb32ffa03387ac8a2/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=e31e264c55be03e7ca9477bfb32ffa03387ac8a2", "patch": "@@ -645,6 +645,7 @@ opt dist-host-only 0 \"only install bins for the host architecture\"\n opt inject-std-version 1 \"inject the current compiler version of libstd into programs\"\n opt llvm-version-check 1 \"check if the LLVM version is supported, build anyway\"\n opt codegen-tests 1 \"run the src/test/codegen tests\"\n+opt save-analysis 0 \"save API analysis data\"\n opt option-checking 1 \"complain about unrecognized options in this configure script\"\n opt ninja 0 \"build LLVM using the Ninja generator (for MSVC, requires building in the correct environment)\"\n opt locked-deps 0 \"force Cargo.lock to be up to date\""}, {"sha": "b65277035498948f99c87d93c5cb9c7ff5afbe7c", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e31e264c55be03e7ca9477bfb32ffa03387ac8a2/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e31e264c55be03e7ca9477bfb32ffa03387ac8a2/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=e31e264c55be03e7ca9477bfb32ffa03387ac8a2", "patch": "@@ -73,6 +73,7 @@ pub struct Config {\n     pub rustc_default_ar: Option<String>,\n     pub rust_optimize_tests: bool,\n     pub rust_debuginfo_tests: bool,\n+    pub rust_save_analysis: bool,\n     pub rust_dist_src: bool,\n \n     pub build: String,\n@@ -223,6 +224,7 @@ struct Rust {\n     optimize_tests: Option<bool>,\n     debuginfo_tests: Option<bool>,\n     codegen_tests: Option<bool>,\n+    save_analysis: Option<bool>,\n }\n \n /// TOML representation of how each build target is configured.\n@@ -347,6 +349,7 @@ impl Config {\n             set(&mut config.rust_optimize_tests, rust.optimize_tests);\n             set(&mut config.rust_debuginfo_tests, rust.debuginfo_tests);\n             set(&mut config.codegen_tests, rust.codegen_tests);\n+            set(&mut config.rust_save_analysis, rust.save_analysis);\n             set(&mut config.rust_rpath, rust.rpath);\n             set(&mut config.debug_jemalloc, rust.debug_jemalloc);\n             set(&mut config.use_jemalloc, rust.use_jemalloc);\n@@ -453,6 +456,7 @@ impl Config {\n                 (\"LOCAL_REBUILD\", self.local_rebuild),\n                 (\"NINJA\", self.ninja),\n                 (\"CODEGEN_TESTS\", self.codegen_tests),\n+                (\"SAVE_ANALYSIS\", self.rust_save_analysis),\n                 (\"LOCKED_DEPS\", self.locked_deps),\n                 (\"VENDOR\", self.vendor),\n                 (\"FULL_BOOTSTRAP\", self.full_bootstrap),"}, {"sha": "42cf3dcabf4eafa4d82acaddd3e4788c69937f99", "filename": "src/bootstrap/config.toml.example", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e31e264c55be03e7ca9477bfb32ffa03387ac8a2/src%2Fbootstrap%2Fconfig.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/e31e264c55be03e7ca9477bfb32ffa03387ac8a2/src%2Fbootstrap%2Fconfig.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.toml.example?ref=e31e264c55be03e7ca9477bfb32ffa03387ac8a2", "patch": "@@ -229,6 +229,9 @@\n # saying that the FileCheck executable is missing, you may want to disable this.\n #codegen-tests = true\n \n+# Flag indicating whether the API analysis data should be saved.\n+#save-analysis = false\n+\n # =============================================================================\n # Options for specific targets\n #"}, {"sha": "30f4f6b33df4a98bef23e0d16dd7747f4306979e", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e31e264c55be03e7ca9477bfb32ffa03387ac8a2/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e31e264c55be03e7ca9477bfb32ffa03387ac8a2/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=e31e264c55be03e7ca9477bfb32ffa03387ac8a2", "patch": "@@ -313,16 +313,8 @@ pub fn rust_src_location(build: &Build) -> PathBuf {\n pub fn analysis(build: &Build, compiler: &Compiler, target: &str) {\n     println!(\"Dist analysis\");\n \n-    if build.config.channel != \"nightly\" {\n-        println!(\"\\tskipping - not on nightly channel\");\n-        return;\n-    }\n     if compiler.host != build.config.build {\n-        println!(\"\\tskipping - not a build host\");\n-        return\n-    }\n-    if compiler.stage != 2 {\n-        println!(\"\\tskipping - not stage2\");\n+        println!(\"\\tskipping, not a build host\");\n         return\n     }\n "}, {"sha": "f234db98bc3f454596d271b9c92356a6552618dc", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e31e264c55be03e7ca9477bfb32ffa03387ac8a2/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e31e264c55be03e7ca9477bfb32ffa03387ac8a2/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=e31e264c55be03e7ca9477bfb32ffa03387ac8a2", "patch": "@@ -524,7 +524,7 @@ impl Build {\n                  .env(format!(\"CFLAGS_{}\", target), self.cflags(target).join(\" \"));\n         }\n \n-        if self.config.channel == \"nightly\" && compiler.is_final_stage(self) {\n+        if self.config.rust_save_analysis && compiler.is_final_stage(self) {\n             cargo.env(\"RUSTC_SAVE_ANALYSIS\", \"api\".to_string());\n         }\n "}, {"sha": "55c6196b1ae732e3951a2e7ed94d7d6b213c67f3", "filename": "src/ci/run.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e31e264c55be03e7ca9477bfb32ffa03387ac8a2/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/e31e264c55be03e7ca9477bfb32ffa03387ac8a2/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=e31e264c55be03e7ca9477bfb32ffa03387ac8a2", "patch": "@@ -42,6 +42,7 @@ fi\n if [ \"$DEPLOY$DEPLOY_ALT\" != \"\" ]; then\n   RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --release-channel=nightly\"\n   RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-llvm-static-stdcpp\"\n+  RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-save-analysis\"\n \n   if [ \"$NO_LLVM_ASSERTIONS\" = \"1\" ]; then\n     RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --disable-llvm-assertions\""}]}