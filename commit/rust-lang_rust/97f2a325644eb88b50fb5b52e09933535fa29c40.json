{"sha": "97f2a325644eb88b50fb5b52e09933535fa29c40", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3ZjJhMzI1NjQ0ZWI4OGI1MGZiNWI1MmUwOTkzMzUzNWZhMjljNDA=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2015-09-23T14:33:36Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2015-09-24T12:47:33Z"}, "message": "Optimize `Vec::clone_from`\n\nBefore:\n\ntest dst_bigger::src_100_dst_1000::clone      ... bench:  34 ns/iter (+/- 1)\ntest dst_bigger::src_100_dst_1000::clone_from ... bench:  75 ns/iter (+/- 3)\n\ntest dst_bigger::src_10_dst_100::clone        ... bench:  25 ns/iter (+/- 0)\ntest dst_bigger::src_10_dst_100::clone_from   ... bench:   9 ns/iter (+/- 1)\n\ntest eq::src_1000_dst_1000::clone             ... bench: 105 ns/iter (+/- 2)\ntest eq::src_1000_dst_1000::clone_from        ... bench: 593 ns/iter (+/- 21)\n\ntest eq::src_100_dst_100::clone               ... bench:  34 ns/iter (+/- 1)\ntest eq::src_100_dst_100::clone_from          ... bench:  75 ns/iter (+/- 1)\n\ntest src_bigger::src_1000_dst_100::clone      ... bench: 103 ns/iter (+/- 5)\ntest src_bigger::src_1000_dst_100::clone_from ... bench: 148 ns/iter (+/- 5)\n\ntest src_bigger::src_100_dst_10::clone        ... bench:  34 ns/iter (+/- 1)\ntest src_bigger::src_100_dst_10::clone_from   ... bench:  20 ns/iter (+/- 0)\n\nAfter:\n\ntest dst_bigger::src_100_dst_1000::clone      ... bench:  34 ns/iter (+/- 2)\ntest dst_bigger::src_100_dst_1000::clone_from ... bench:  15 ns/iter (+/- 1)\n\ntest dst_bigger::src_10_dst_100::clone        ... bench:  26 ns/iter (+/- 1)\ntest dst_bigger::src_10_dst_100::clone_from   ... bench:   7 ns/iter (+/- 0)\n\ntest eq::src_1000_dst_1000::clone             ... bench: 103 ns/iter (+/- 1)\ntest eq::src_1000_dst_1000::clone_from        ... bench:  85 ns/iter (+/- 4)\n\ntest eq::src_100_dst_100::clone               ... bench:  34 ns/iter (+/- 2)\ntest eq::src_100_dst_100::clone_from          ... bench:  15 ns/iter (+/- 1)\n\ntest src_bigger::src_1000_dst_100::clone      ... bench: 103 ns/iter (+/- 4)\ntest src_bigger::src_1000_dst_100::clone_from ... bench:  90 ns/iter (+/- 2)\n\ntest src_bigger::src_100_dst_10::clone        ... bench:  34 ns/iter (+/- 2)\ntest src_bigger::src_100_dst_10::clone_from   ... bench:  20 ns/iter (+/- 0)\n\nCloses #28601.", "tree": {"sha": "f321a01830973b1e86540fe97e302cea2a00f811", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f321a01830973b1e86540fe97e302cea2a00f811"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97f2a325644eb88b50fb5b52e09933535fa29c40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97f2a325644eb88b50fb5b52e09933535fa29c40", "html_url": "https://github.com/rust-lang/rust/commit/97f2a325644eb88b50fb5b52e09933535fa29c40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97f2a325644eb88b50fb5b52e09933535fa29c40/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9946f99b97fa1efda39b657448aae0238b66220", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9946f99b97fa1efda39b657448aae0238b66220", "html_url": "https://github.com/rust-lang/rust/commit/e9946f99b97fa1efda39b657448aae0238b66220"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "03ee8ba31b1d21d6648561651a6ccb2fd7ddb07a", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97f2a325644eb88b50fb5b52e09933535fa29c40/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97f2a325644eb88b50fb5b52e09933535fa29c40/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=97f2a325644eb88b50fb5b52e09933535fa29c40", "patch": "@@ -62,7 +62,7 @@\n #![feature(unsafe_no_drop_flag, filling_drop)]\n #![feature(decode_utf16)]\n #![feature(utf8_error)]\n-#![cfg_attr(test, feature(rand, test))]\n+#![cfg_attr(test, feature(clone_from_slice, rand, test))]\n \n #![feature(no_std)]\n #![no_std]"}, {"sha": "de3e6f94e874645abc6ff7c0d823ae9c32adad31", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/97f2a325644eb88b50fb5b52e09933535fa29c40/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97f2a325644eb88b50fb5b52e09933535fa29c40/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=97f2a325644eb88b50fb5b52e09933535fa29c40", "patch": "@@ -1007,19 +1007,15 @@ impl<T:Clone> Clone for Vec<T> {\n \n     fn clone_from(&mut self, other: &Vec<T>) {\n         // drop anything in self that will not be overwritten\n-        if self.len() > other.len() {\n-            self.truncate(other.len())\n-        }\n+        self.truncate(other.len());\n+        let len = self.len();\n \n         // reuse the contained values' allocations/resources.\n-        for (place, thing) in self.iter_mut().zip(other) {\n-            place.clone_from(thing)\n-        }\n+        self.clone_from_slice(&other[..len]);\n \n         // self.len <= other.len due to the truncate above, so the\n         // slice here is always in-bounds.\n-        let slice = &other[self.len()..];\n-        self.push_all(slice);\n+        self.push_all(&other[len..]);\n     }\n }\n "}]}