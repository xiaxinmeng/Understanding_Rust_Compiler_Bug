{"sha": "a4b99c6d6881b7e2149320d86794db0a9cdaed85", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0Yjk5YzZkNjg4MWI3ZTIxNDkzMjBkODY3OTRkYjBhOWNkYWVkODU=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2019-01-05T07:21:56Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2019-01-05T07:21:56Z"}, "message": "rustup https://github.com/rust-lang/rust/pull/56837", "tree": {"sha": "1b72e29707ad906dff7d6268af96683534792d27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b72e29707ad906dff7d6268af96683534792d27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4b99c6d6881b7e2149320d86794db0a9cdaed85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4b99c6d6881b7e2149320d86794db0a9cdaed85", "html_url": "https://github.com/rust-lang/rust/commit/a4b99c6d6881b7e2149320d86794db0a9cdaed85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4b99c6d6881b7e2149320d86794db0a9cdaed85/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33ec4e5220b004e2d491cce7cc9ab95a5c140370", "url": "https://api.github.com/repos/rust-lang/rust/commits/33ec4e5220b004e2d491cce7cc9ab95a5c140370", "html_url": "https://github.com/rust-lang/rust/commit/33ec4e5220b004e2d491cce7cc9ab95a5c140370"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "233bea77e03bab948f99fecd8e52cfc87206dd3a", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a4b99c6d6881b7e2149320d86794db0a9cdaed85/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4b99c6d6881b7e2149320d86794db0a9cdaed85/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=a4b99c6d6881b7e2149320d86794db0a9cdaed85", "patch": "@@ -302,10 +302,15 @@ fn has_is_empty(cx: &LateContext<'_, '_>, expr: &Expr) -> bool {\n \n     let ty = &walk_ptrs_ty(cx.tables.expr_ty(expr));\n     match ty.sty {\n-        ty::Dynamic(ref tt, ..) => cx\n-            .tcx\n-            .associated_items(tt.principal().def_id())\n-            .any(|item| is_is_empty(cx, &item)),\n+        ty::Dynamic(ref tt, ..) => {\n+            if let Some(principal) = tt.principal() {\n+                cx.tcx\n+                    .associated_items(principal.def_id())\n+                    .any(|item| is_is_empty(cx, &item))\n+            } else {\n+                false\n+            }\n+        },\n         ty::Projection(ref proj) => has_is_empty_impl(cx, proj.item_def_id),\n         ty::Adt(id, _) => has_is_empty_impl(cx, id.did),\n         ty::Array(..) | ty::Slice(..) | ty::Str => true,"}]}