{"sha": "dd7483c750945b554e2d18f0d54674d32b054b85", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNzQ4M2M3NTA5NDViNTU0ZTJkMThmMGQ1NDY3NGQzMmIwNTRiODU=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-04-02T14:57:12Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-04-03T17:18:07Z"}, "message": "Remove TyKind arg from report_bin_hex_error function", "tree": {"sha": "62595e508ec8ebaf872e0c997ab35c87519fdbaf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62595e508ec8ebaf872e0c997ab35c87519fdbaf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd7483c750945b554e2d18f0d54674d32b054b85", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAlyk6s8ACgkQaTCGhp1Q\nZjeYDw/9H7zddzt2GuQtYutZ/6rCCvLXoy+RW6XZGcqqMUqrv6ojThBzpH7tmDmk\n7UEgsueZ9nKAECLdTs6Mmy06Vi13xM2HVjpaxu7esK+XxRB9gzBGkznyGe+FJ1Ja\n2G3UImuoWvUducxO5aa4yG3/PCuZX8yLOu12rW/Uytksav7VIDEB+Qfk4Pa+Sxzk\n8PiL8diVqC1jDGaokdyQc2xXpGpfnzVWjiX35cH/DkE2INi5mw/zxMZyewKpaQfY\nrFUbYM14Dwwzead5pUwUmmUItHXudDCttKCdo1qQkGdfZxyZfRJZ5m1SBpafBSax\nsnclRlN+q1LP9Dni0GDVnxFhLl+s9whVtvFbZnBbelwIAx0bXLBrCkSSzwLLlpww\netLU1hOvkoUbDDyMk4tnVBKEoGvaPOi5wwj9b9YZj6kohdYKuABFKBpjcMuLtg1x\ntkUVOviFb2pnEIneXTngUVhNaGIBdX4y2Z+XPZEAd3kh2wIHpfo6fbUUiUlKHuH0\nqV0sH4UkZg0jbehgtgMeFzlWe5UwUT5R5DXaAtGhTQfrnbZeNQ1tzpoxVcMAp9kr\ng0y1u6Sdacxyq3mQ0dl97068PWwNsNHg9kRFakumeIQE9rZUD0e3jLQHTGBYfGbw\nCMuTyXLUCkZfJ5J+GyHkOgZA85O/+tGCeqab40I73kuVSRlx8+8=\n=jq9T\n-----END PGP SIGNATURE-----", "payload": "tree 62595e508ec8ebaf872e0c997ab35c87519fdbaf\nparent 4d2a3bb13bb04d3ad6c0a3add4883c64200fa96c\nauthor flip1995 <hello@philkrones.com> 1554217032 +0200\ncommitter flip1995 <hello@philkrones.com> 1554311887 +0200\n\nRemove TyKind arg from report_bin_hex_error function\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd7483c750945b554e2d18f0d54674d32b054b85", "html_url": "https://github.com/rust-lang/rust/commit/dd7483c750945b554e2d18f0d54674d32b054b85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd7483c750945b554e2d18f0d54674d32b054b85/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d2a3bb13bb04d3ad6c0a3add4883c64200fa96c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d2a3bb13bb04d3ad6c0a3add4883c64200fa96c", "html_url": "https://github.com/rust-lang/rust/commit/4d2a3bb13bb04d3ad6c0a3add4883c64200fa96c"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "c82985b549e8ee33513fcf83a4bb59233db227fc", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/dd7483c750945b554e2d18f0d54674d32b054b85/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd7483c750945b554e2d18f0d54674d32b054b85/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=dd7483c750945b554e2d18f0d54674d32b054b85", "patch": "@@ -104,7 +104,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TypeLimits {\n                                         report_bin_hex_error(\n                                             cx,\n                                             e,\n-                                            ty::Int(t),\n+                                            attr::IntType::SignedInt(t),\n                                             repr_str,\n                                             v,\n                                             negative,\n@@ -159,7 +159,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TypeLimits {\n                                 report_bin_hex_error(\n                                     cx,\n                                     e,\n-                                    ty::Uint(t),\n+                                    attr::IntType::UnsignedInt(t),\n                                     repr_str,\n                                     lit_val,\n                                     false,\n@@ -364,29 +364,24 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TypeLimits {\n             }\n         }\n \n-        #[cfg_attr(not(stage0), allow(usage_of_ty_tykind))]\n         fn report_bin_hex_error(\n             cx: &LateContext<'_, '_>,\n             expr: &hir::Expr,\n-            ty: ty::TyKind<'_>,\n+            ty: attr::IntType,\n             repr_str: String,\n             val: u128,\n             negative: bool,\n         ) {\n+            let size = layout::Integer::from_attr(&cx.tcx, ty).size();\n             let (t, actually) = match ty {\n-                ty::Int(t) => {\n-                    let ity = attr::IntType::SignedInt(t);\n-                    let size = layout::Integer::from_attr(&cx.tcx, ity).size();\n+                attr::IntType::SignedInt(t) => {\n                     let actually = sign_extend(val, size) as i128;\n                     (format!(\"{:?}\", t), actually.to_string())\n                 }\n-                ty::Uint(t) => {\n-                    let ity = attr::IntType::UnsignedInt(t);\n-                    let size = layout::Integer::from_attr(&cx.tcx, ity).size();\n+                attr::IntType::UnsignedInt(t) => {\n                     let actually = truncate(val, size);\n                     (format!(\"{:?}\", t), actually.to_string())\n                 }\n-                _ => bug!(),\n             };\n             let mut err = cx.struct_span_lint(\n                 OVERFLOWING_LITERALS,"}]}