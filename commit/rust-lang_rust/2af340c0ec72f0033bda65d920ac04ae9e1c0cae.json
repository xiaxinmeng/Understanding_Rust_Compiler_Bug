{"sha": "2af340c0ec72f0033bda65d920ac04ae9e1c0cae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhZjM0MGMwZWM3MmYwMDMzYmRhNjVkOTIwYWMwNGFlOWUxYzBjYWU=", "commit": {"author": {"name": "Andrew", "email": "amiller4421@gmail.com", "date": "2016-07-09T02:05:10Z"}, "committer": {"name": "Andrew", "email": "amiller4421@gmail.com", "date": "2016-07-09T02:09:51Z"}, "message": "Check for data in Receiver::try_recv before reporting disconnect", "tree": {"sha": "590ec7642be482f5c036663b0a28b843be0c1d19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/590ec7642be482f5c036663b0a28b843be0c1d19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2af340c0ec72f0033bda65d920ac04ae9e1c0cae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2af340c0ec72f0033bda65d920ac04ae9e1c0cae", "html_url": "https://github.com/rust-lang/rust/commit/2af340c0ec72f0033bda65d920ac04ae9e1c0cae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2af340c0ec72f0033bda65d920ac04ae9e1c0cae/comments", "author": {"login": "GGist", "id": 5248583, "node_id": "MDQ6VXNlcjUyNDg1ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/5248583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GGist", "html_url": "https://github.com/GGist", "followers_url": "https://api.github.com/users/GGist/followers", "following_url": "https://api.github.com/users/GGist/following{/other_user}", "gists_url": "https://api.github.com/users/GGist/gists{/gist_id}", "starred_url": "https://api.github.com/users/GGist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GGist/subscriptions", "organizations_url": "https://api.github.com/users/GGist/orgs", "repos_url": "https://api.github.com/users/GGist/repos", "events_url": "https://api.github.com/users/GGist/events{/privacy}", "received_events_url": "https://api.github.com/users/GGist/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GGist", "id": 5248583, "node_id": "MDQ6VXNlcjUyNDg1ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/5248583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GGist", "html_url": "https://github.com/GGist", "followers_url": "https://api.github.com/users/GGist/followers", "following_url": "https://api.github.com/users/GGist/following{/other_user}", "gists_url": "https://api.github.com/users/GGist/gists{/gist_id}", "starred_url": "https://api.github.com/users/GGist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GGist/subscriptions", "organizations_url": "https://api.github.com/users/GGist/orgs", "repos_url": "https://api.github.com/users/GGist/repos", "events_url": "https://api.github.com/users/GGist/events{/privacy}", "received_events_url": "https://api.github.com/users/GGist/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e18b4bad8450622aef8e077d3470f5626403588", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e18b4bad8450622aef8e077d3470f5626403588", "html_url": "https://github.com/rust-lang/rust/commit/5e18b4bad8450622aef8e077d3470f5626403588"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "d96fd6228e62ebe57a1388159b8431699bfa1edc", "filename": "src/libstd/sync/mpsc/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2af340c0ec72f0033bda65d920ac04ae9e1c0cae/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2af340c0ec72f0033bda65d920ac04ae9e1c0cae/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs?ref=2af340c0ec72f0033bda65d920ac04ae9e1c0cae", "patch": "@@ -2180,6 +2180,15 @@ mod sync_tests {\n         assert!(rx.recv().is_err());\n     }\n \n+    #[test]\n+    fn oneshot_single_thread_try_recv_closed_with_data() {\n+        let (tx, rx) = sync_channel::<i32>(1);\n+        tx.send(10).unwrap();\n+        drop(tx);\n+        assert_eq!(rx.try_recv(), Ok(10));\n+        assert_eq!(rx.try_recv(), Err(TryRecvError::Disconnected));\n+    }\n+\n     #[test]\n     fn oneshot_single_thread_peek_data() {\n         let (tx, rx) = sync_channel::<i32>(1);"}, {"sha": "9d13a71ff95ee29098873374f2e50ec7a9274a38", "filename": "src/libstd/sync/mpsc/sync.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2af340c0ec72f0033bda65d920ac04ae9e1c0cae/src%2Flibstd%2Fsync%2Fmpsc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2af340c0ec72f0033bda65d920ac04ae9e1c0cae/src%2Flibstd%2Fsync%2Fmpsc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fsync.rs?ref=2af340c0ec72f0033bda65d920ac04ae9e1c0cae", "patch": "@@ -309,7 +309,7 @@ impl<T> Packet<T> {\n         let mut guard = self.lock.lock().unwrap();\n \n         // Easy cases first\n-        if guard.disconnected { return Err(Disconnected) }\n+        if guard.disconnected && guard.buf.size() == 0 { return Err(Disconnected) }\n         if guard.buf.size() == 0 { return Err(Empty) }\n \n         // Be sure to wake up neighbors"}]}