{"sha": "266428845d02252815e16ccfe48b5ba2f808faca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2NjQyODg0NWQwMjI1MjgxNWUxNmNjZmU0OGI1YmEyZjgwOGZhY2E=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-19T09:01:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-19T09:01:20Z"}, "message": "Auto merge of #27099 - AlisdairO:diagnostics3, r=Manishearth\n\nPer the title.  I've linked to the reference at http://doc.rust-lang.org/reference.html#type-parameters-1, but I'm not sure that's such a good link - but there doesn't seem to be a great deal of explanation elsewhere in the reference either...", "tree": {"sha": "b5aa8e583133c5e06de1ad7ea228969c0621716c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5aa8e583133c5e06de1ad7ea228969c0621716c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/266428845d02252815e16ccfe48b5ba2f808faca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/266428845d02252815e16ccfe48b5ba2f808faca", "html_url": "https://github.com/rust-lang/rust/commit/266428845d02252815e16ccfe48b5ba2f808faca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/266428845d02252815e16ccfe48b5ba2f808faca/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b10efcc8b2cf9813efca5c0be3aaebf848fb82f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b10efcc8b2cf9813efca5c0be3aaebf848fb82f", "html_url": "https://github.com/rust-lang/rust/commit/6b10efcc8b2cf9813efca5c0be3aaebf848fb82f"}, {"sha": "91f0301aa521e057ab180d8d0c6b2ca98796f095", "url": "https://api.github.com/repos/rust-lang/rust/commits/91f0301aa521e057ab180d8d0c6b2ca98796f095", "html_url": "https://github.com/rust-lang/rust/commit/91f0301aa521e057ab180d8d0c6b2ca98796f095"}], "stats": {"total": 61, "additions": 60, "deletions": 1}, "files": [{"sha": "a002ed311e8c52a94d732247f0473b58777e38c5", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 60, "deletions": 1, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/266428845d02252815e16ccfe48b5ba2f808faca/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/266428845d02252815e16ccfe48b5ba2f808faca/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=266428845d02252815e16ccfe48b5ba2f808faca", "patch": "@@ -2109,6 +2109,66 @@ E0380: r##\"\n Default impls are only allowed for traits with no methods or associated items.\n For more information see the [opt-in builtin traits RFC](https://github.com/rust\n -lang/rfcs/blob/master/text/0019-opt-in-builtin-traits.md).\n+\"##,\n+\n+E0392: r##\"\n+This error indicates that a type or lifetime parameter has been declared\n+but not actually used.  Here is an example that demonstrates the error:\n+\n+```\n+enum Foo<T> {\n+    Bar\n+}\n+```\n+\n+If the type parameter was included by mistake, this error can be fixed\n+by simply removing the type parameter, as shown below:\n+\n+```\n+enum Foo {\n+    Bar\n+}\n+```\n+\n+Alternatively, if the type parameter was intentionally inserted, it must be\n+used. A simple fix is shown below:\n+\n+```\n+enum Foo<T> {\n+    Bar(T)\n+}\n+```\n+\n+This error may also commonly be found when working with unsafe code. For\n+example, when using raw pointers one may wish to specify the lifetime for\n+which the pointed-at data is valid. An initial attempt (below) causes this\n+error:\n+\n+```\n+struct Foo<'a, T> {\n+    x: *const T\n+}\n+```\n+\n+We want to express the constraint that Foo should not outlive `'a`, because\n+the data pointed to by `T` is only valid for that lifetime. The problem is\n+that there are no actual uses of `'a`. It's possible to work around this\n+by adding a PhantomData type to the struct, using it to tell the compiler\n+to act as if the struct contained a borrowed reference `&'a T`:\n+\n+```\n+use std::marker::PhantomData;\n+\n+struct Foo<'a, T: 'a> {\n+    x: *const T,\n+    phantom: PhantomData<&'a T>\n+}\n+```\n+\n+PhantomData can also be used to express information about unused type\n+parameters. You can read more about it in the API documentation:\n+\n+https://doc.rust-lang.org/std/marker/struct.PhantomData.html\n \"##\n \n }\n@@ -2211,7 +2271,6 @@ register_diagnostics! {\n     E0390, // only a single inherent implementation marked with\n            // `#[lang = \\\"{}\\\"]` is allowed for the `{}` primitive\n     E0391, // unsupported cyclic reference between types/traits detected\n-    E0392, // parameter `{}` is never used\n     E0393, // the type parameter `{}` must be explicitly specified in an object\n            // type because its default value `{}` references the type `Self`\"\n     E0399, // trait items need to be implemented because the associated"}]}