{"sha": "4fd4a98d4788bc987d7f7add9df5f5ead6a1c15e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmZDRhOThkNDc4OGJjOTg3ZDdmN2FkZDlkZjVmNWVhZDZhMWMxNWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-08T08:51:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-08T08:51:51Z"}, "message": "Auto merge of #79806 - LeSeulArtichaut:fixup-filter-is-none, r=jyn514\n\nFixup: `filter().is_none()` -> `!any()`", "tree": {"sha": "378707e6768914edfd3d36dfd2d108f64777e9d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/378707e6768914edfd3d36dfd2d108f64777e9d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fd4a98d4788bc987d7f7add9df5f5ead6a1c15e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fd4a98d4788bc987d7f7add9df5f5ead6a1c15e", "html_url": "https://github.com/rust-lang/rust/commit/4fd4a98d4788bc987d7f7add9df5f5ead6a1c15e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fd4a98d4788bc987d7f7add9df5f5ead6a1c15e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e48ea9a40d94441d76748297bdb565e8fb3db23", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e48ea9a40d94441d76748297bdb565e8fb3db23", "html_url": "https://github.com/rust-lang/rust/commit/5e48ea9a40d94441d76748297bdb565e8fb3db23"}, {"sha": "9cc563b70b1e99c26404b059c36f2c66cc91e5f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cc563b70b1e99c26404b059c36f2c66cc91e5f8", "html_url": "https://github.com/rust-lang/rust/commit/9cc563b70b1e99c26404b059c36f2c66cc91e5f8"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "5fc573a57ad0bac366b511e2242e4f22aec0080a", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4fd4a98d4788bc987d7f7add9df5f5ead6a1c15e/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fd4a98d4788bc987d7f7add9df5f5ead6a1c15e/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=4fd4a98d4788bc987d7f7add9df5f5ead6a1c15e", "patch": "@@ -1174,7 +1174,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         }\n \n         let mut unmentioned_err = None;\n-        // Report an error if incorrect number of the fields were specified.\n+        // Report an error if an incorrect number of fields was specified.\n         if adt.is_union() {\n             if fields.len() != 1 {\n                 tcx.sess\n@@ -1185,12 +1185,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 tcx.sess.struct_span_err(pat.span, \"`..` cannot be used in union patterns\").emit();\n             }\n         } else if !etc && !unmentioned_fields.is_empty() {\n-            let no_accessible_unmentioned_fields = unmentioned_fields\n-                .iter()\n-                .find(|(field, _)| {\n-                    field.vis.is_accessible_from(tcx.parent_module(pat.hir_id).to_def_id(), tcx)\n-                })\n-                .is_none();\n+            let no_accessible_unmentioned_fields = !unmentioned_fields.iter().any(|(field, _)| {\n+                field.vis.is_accessible_from(tcx.parent_module(pat.hir_id).to_def_id(), tcx)\n+            });\n \n             if no_accessible_unmentioned_fields {\n                 unmentioned_err = Some(self.error_no_accessible_fields(pat, &fields));"}]}