{"sha": "dcee327c355e0289600ab4b0ae224645363bb858", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjZWUzMjdjMzU1ZTAyODk2MDBhYjRiMGFlMjI0NjQ1MzYzYmI4NTg=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-19T14:31:39Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-19T14:31:39Z"}, "message": "rustc: remove some unnecessary `transmute`s.\n\nThese can all be done by implicit or explicit &T -> *T casts, which are\nmore restricted and so are safer.", "tree": {"sha": "8a5711e8251b2fa39747fdfc6a63f31163bf5705", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a5711e8251b2fa39747fdfc6a63f31163bf5705"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcee327c355e0289600ab4b0ae224645363bb858", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcee327c355e0289600ab4b0ae224645363bb858", "html_url": "https://github.com/rust-lang/rust/commit/dcee327c355e0289600ab4b0ae224645363bb858", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcee327c355e0289600ab4b0ae224645363bb858/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4afcf44d2c70b2c176bdf283082a7bdd4be5826", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4afcf44d2c70b2c176bdf283082a7bdd4be5826", "html_url": "https://github.com/rust-lang/rust/commit/c4afcf44d2c70b2c176bdf283082a7bdd4be5826"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "e8424bcde603c78fccfd2fb64658eb47bcc9532e", "filename": "src/librustc/middle/trans/build.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dcee327c355e0289600ab4b0ae224645363bb858/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcee327c355e0289600ab4b0ae224645363bb858/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs?ref=dcee327c355e0289600ab4b0ae224645363bb858", "patch": "@@ -20,7 +20,6 @@ use syntax::codemap::Span;\n use middle::trans::builder::Builder;\n use middle::trans::type_::Type;\n \n-use std::cast;\n use std::libc::{c_uint, c_ulonglong, c_char};\n \n pub fn terminate(cx: &Block, _: &str) {\n@@ -623,9 +622,7 @@ pub fn Phi(cx: &Block, Ty: Type, vals: &[ValueRef], bbs: &[BasicBlockRef]) -> Va\n pub fn AddIncomingToPhi(phi: ValueRef, val: ValueRef, bb: BasicBlockRef) {\n     unsafe {\n         if llvm::LLVMIsUndef(phi) == lib::llvm::True { return; }\n-        let valptr = cast::transmute(&val);\n-        let bbptr = cast::transmute(&bb);\n-        llvm::LLVMAddIncoming(phi, valptr, bbptr, 1 as c_uint);\n+        llvm::LLVMAddIncoming(phi, &val, &bb, 1 as c_uint);\n     }\n }\n "}, {"sha": "9dd92fbc45c731d5a5238bb871a89a575e7216a6", "filename": "src/librustc/middle/trans/builder.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dcee327c355e0289600ab4b0ae224645363bb858/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcee327c355e0289600ab4b0ae224645363bb858/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuilder.rs?ref=dcee327c355e0289600ab4b0ae224645363bb858", "patch": "@@ -17,7 +17,6 @@ use middle::trans::base;\n use middle::trans::common::*;\n use middle::trans::machine::llalign_of_pref;\n use middle::trans::type_::Type;\n-use std::cast;\n use std::hashmap::HashMap;\n use std::libc::{c_uint, c_ulonglong, c_char};\n use syntax::codemap::Span;\n@@ -30,10 +29,8 @@ pub struct Builder<'a> {\n // This is a really awful way to get a zero-length c-string, but better (and a\n // lot more efficient) than doing str::as_c_str(\"\", ...) every time.\n pub fn noname() -> *c_char {\n-    unsafe {\n-        static cnull: uint = 0u;\n-        cast::transmute(&cnull)\n-    }\n+    static cnull: c_char = 0;\n+    &cnull as *c_char\n }\n \n impl<'a> Builder<'a> {"}, {"sha": "27ad5998d8cf7a21ed13959c3c45a2eb48dff520", "filename": "src/librustc/middle/trans/common.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dcee327c355e0289600ab4b0ae224645363bb858/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcee327c355e0289600ab4b0ae224645363bb858/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=dcee327c355e0289600ab4b0ae224645363bb858", "patch": "@@ -30,8 +30,6 @@ use util::ppaux::Repr;\n \n use arena::TypedArena;\n use std::c_str::ToCStr;\n-use std::cast::transmute;\n-use std::cast;\n use std::cell::{Cell, RefCell};\n use std::hashmap::HashMap;\n use std::libc::{c_uint, c_longlong, c_ulonglong, c_char};\n@@ -668,7 +666,7 @@ pub fn C_array(ty: Type, elts: &[ValueRef]) -> ValueRef {\n \n pub fn C_bytes(bytes: &[u8]) -> ValueRef {\n     unsafe {\n-        let ptr = cast::transmute(bytes.as_ptr());\n+        let ptr = bytes.as_ptr() as *c_char;\n         return llvm::LLVMConstStringInContext(base::task_llcx(), ptr, bytes.len() as c_uint, True);\n     }\n }"}]}