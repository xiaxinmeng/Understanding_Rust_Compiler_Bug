{"sha": "53cc2c16e7a53660fb7322d96284ef199699e250", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzY2MyYzE2ZTdhNTM2NjBmYjczMjJkOTYyODRlZjE5OTY5OWUyNTA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-09T09:52:45Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-09T09:52:45Z"}, "message": "Unwrap block works with match arms", "tree": {"sha": "0518ce43bd9b06fe4f298d4407e69d9b4f516f34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0518ce43bd9b06fe4f298d4407e69d9b4f516f34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53cc2c16e7a53660fb7322d96284ef199699e250", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53cc2c16e7a53660fb7322d96284ef199699e250", "html_url": "https://github.com/rust-lang/rust/commit/53cc2c16e7a53660fb7322d96284ef199699e250", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53cc2c16e7a53660fb7322d96284ef199699e250/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5233766ce51d7593bb02d041bd63fa3aad44f666", "url": "https://api.github.com/repos/rust-lang/rust/commits/5233766ce51d7593bb02d041bd63fa3aad44f666", "html_url": "https://github.com/rust-lang/rust/commit/5233766ce51d7593bb02d041bd63fa3aad44f666"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "1fb13f48141911eee4544679cd257f39755e7ae3", "filename": "crates/ra_assists/src/handlers/unwrap_block.rs", "status": "modified", "additions": 40, "deletions": 4, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/53cc2c16e7a53660fb7322d96284ef199699e250/crates%2Fra_assists%2Fsrc%2Fhandlers%2Funwrap_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53cc2c16e7a53660fb7322d96284ef199699e250/crates%2Fra_assists%2Fsrc%2Fhandlers%2Funwrap_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Funwrap_block.rs?ref=53cc2c16e7a53660fb7322d96284ef199699e250", "patch": "@@ -1,5 +1,11 @@\n use ra_fmt::unwrap_trivial_block;\n-use ra_syntax::{ast, AstNode, TextRange, T};\n+use ra_syntax::{\n+    ast::{\n+        self,\n+        edit::{AstNodeEdit, IndentLevel},\n+    },\n+    AstNode, TextRange, T,\n+};\n \n use crate::{AssistContext, AssistId, Assists};\n \n@@ -21,15 +27,21 @@ use crate::{AssistContext, AssistId, Assists};\n // }\n // ```\n pub(crate) fn unwrap_block(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n-    let l_curly_token = ctx.find_token_at_offset(T!['{'])?;\n-    let block = ast::BlockExpr::cast(l_curly_token.parent())?;\n-    let parent = block.syntax().parent()?;\n     let assist_id = AssistId(\"unwrap_block\");\n     let assist_label = \"Unwrap block\";\n+\n+    let l_curly_token = ctx.find_token_at_offset(T!['{'])?;\n+    let mut block = ast::BlockExpr::cast(l_curly_token.parent())?;\n+    let mut parent = block.syntax().parent()?;\n+    if ast::MatchArm::can_cast(parent.kind()) {\n+        parent = parent.ancestors().find(|it| ast::MatchExpr::can_cast(it.kind()))?\n+    }\n+\n     let parent = ast::Expr::cast(parent)?;\n \n     match parent.clone() {\n         ast::Expr::ForExpr(_) | ast::Expr::WhileExpr(_) | ast::Expr::LoopExpr(_) => (),\n+        ast::Expr::MatchExpr(_) => block = block.dedent(IndentLevel(1)),\n         ast::Expr::IfExpr(if_expr) => {\n             let then_branch = if_expr.then_branch()?;\n             if then_branch == block {\n@@ -459,6 +471,30 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn unwrap_match_arm() {\n+        check_assist(\n+            unwrap_block,\n+            r#\"\n+fn main() {\n+    match rel_path {\n+        Ok(rel_path) => {<|>\n+            let rel_path = RelativePathBuf::from_path(rel_path).ok()?;\n+            Some((*id, rel_path))\n+        }\n+        Err(_) => None,\n+    }\n+}\n+\"#,\n+            r#\"\n+fn main() {\n+    let rel_path = RelativePathBuf::from_path(rel_path).ok()?;\n+    Some((*id, rel_path))\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn simple_if_in_while_bad_cursor_position() {\n         check_assist_not_applicable("}]}