{"sha": "571a624aa92a0f1f1a0276d42262a6d2ad89ba7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3MWE2MjRhYTkyYTBmMWYxYTAyNzZkNDIyNjJhNmQyYWQ4OWJhN2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-31T22:44:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-31T22:44:17Z"}, "message": "Auto merge of #53755 - llogiq:fix-unsound-16bit-range, r=nagisa\n\nfix u32 steps_between for 16-bit systems\n\nThis fixes #48006.", "tree": {"sha": "4f9fdd004a96c102cd0bbef5ecf4c87cecb5bd76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f9fdd004a96c102cd0bbef5ecf4c87cecb5bd76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/571a624aa92a0f1f1a0276d42262a6d2ad89ba7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/571a624aa92a0f1f1a0276d42262a6d2ad89ba7b", "html_url": "https://github.com/rust-lang/rust/commit/571a624aa92a0f1f1a0276d42262a6d2ad89ba7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/571a624aa92a0f1f1a0276d42262a6d2ad89ba7b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aaa170bebe31d03e2eea14e8cb06dc2e8891216b", "url": "https://api.github.com/repos/rust-lang/rust/commits/aaa170bebe31d03e2eea14e8cb06dc2e8891216b", "html_url": "https://github.com/rust-lang/rust/commit/aaa170bebe31d03e2eea14e8cb06dc2e8891216b"}, {"sha": "9dab56c4a262ea5e0f4ab1939904a0eb7008b083", "url": "https://api.github.com/repos/rust-lang/rust/commits/9dab56c4a262ea5e0f4ab1939904a0eb7008b083", "html_url": "https://github.com/rust-lang/rust/commit/9dab56c4a262ea5e0f4ab1939904a0eb7008b083"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "55addd86bc1cef81810c8830952fc5a4e2a11c55", "filename": "src/libcore/iter/range.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/571a624aa92a0f1f1a0276d42262a6d2ad89ba7b/src%2Flibcore%2Fiter%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/571a624aa92a0f1f1a0276d42262a6d2ad89ba7b/src%2Flibcore%2Fiter%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Frange.rs?ref=571a624aa92a0f1f1a0276d42262a6d2ad89ba7b", "patch": "@@ -165,8 +165,16 @@ macro_rules! step_impl_no_between {\n     )*)\n }\n \n-step_impl_unsigned!(usize u8 u16 u32);\n-step_impl_signed!([isize: usize] [i8: u8] [i16: u16] [i32: u32]);\n+step_impl_unsigned!(usize u8 u16);\n+#[cfg(not(target_pointer_witdth = \"16\"))]\n+step_impl_unsigned!(u32);\n+#[cfg(target_pointer_witdth = \"16\")]\n+step_impl_no_between!(u32);\n+step_impl_signed!([isize: usize] [i8: u8] [i16: u16]);\n+#[cfg(not(target_pointer_witdth = \"16\"))]\n+step_impl_signed!([i32: u32]);\n+#[cfg(target_pointer_witdth = \"16\")]\n+step_impl_no_between!(i32);\n #[cfg(target_pointer_width = \"64\")]\n step_impl_unsigned!(u64);\n #[cfg(target_pointer_width = \"64\")]"}, {"sha": "d5887bb64cd25830b5ce0b710de3618c521abee2", "filename": "src/test/run-pass/issue-48006.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/571a624aa92a0f1f1a0276d42262a6d2ad89ba7b/src%2Ftest%2Frun-pass%2Fissue-48006.rs", "raw_url": "https://github.com/rust-lang/rust/raw/571a624aa92a0f1f1a0276d42262a6d2ad89ba7b/src%2Ftest%2Frun-pass%2Fissue-48006.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-48006.rs?ref=571a624aa92a0f1f1a0276d42262a6d2ad89ba7b", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(step_trait)]\n+\n+use std::iter::Step;\n+\n+#[cfg(target_pointer_width = \"16\")]\n+fn main() {\n+    assert!(Step::steps_between(&0u32, &::std::u32::MAX).is_none());\n+}\n+\n+#[cfg(any(target_pointer_width = \"32\", target_pointer_width = \"64\"))]\n+fn main() {\n+    assert!(Step::steps_between(&0u32, &::std::u32::MAX).is_some());\n+}"}]}