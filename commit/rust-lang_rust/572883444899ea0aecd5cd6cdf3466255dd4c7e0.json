{"sha": "572883444899ea0aecd5cd6cdf3466255dd4c7e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3Mjg4MzQ0NDg5OWVhMGFlY2Q1Y2Q2Y2RmMzQ2NjI1NWRkNGM3ZTA=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-06-24T00:47:16Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-09-18T19:23:01Z"}, "message": "Fix rebase fallout", "tree": {"sha": "d330240fcc833c681e2ccbb343cf2806bd1378e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d330240fcc833c681e2ccbb343cf2806bd1378e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/572883444899ea0aecd5cd6cdf3466255dd4c7e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/572883444899ea0aecd5cd6cdf3466255dd4c7e0", "html_url": "https://github.com/rust-lang/rust/commit/572883444899ea0aecd5cd6cdf3466255dd4c7e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/572883444899ea0aecd5cd6cdf3466255dd4c7e0/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "484db5b08a83bd8875e0e938a0f78ce0a220bb17", "url": "https://api.github.com/repos/rust-lang/rust/commits/484db5b08a83bd8875e0e938a0f78ce0a220bb17", "html_url": "https://github.com/rust-lang/rust/commit/484db5b08a83bd8875e0e938a0f78ce0a220bb17"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "f9071ab9d802cb6762c1adac6760b7bf11d7f1b7", "filename": "compiler/rustc_mir/src/transform/dest_prop.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/572883444899ea0aecd5cd6cdf3466255dd4c7e0/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdest_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/572883444899ea0aecd5cd6cdf3466255dd4c7e0/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdest_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdest_prop.rs?ref=572883444899ea0aecd5cd6cdf3466255dd4c7e0", "patch": "@@ -585,12 +585,17 @@ impl Conflicts<'a> {\n \n     fn record_terminator_conflicts(&mut self, term: &Terminator<'_>) {\n         match &term.kind {\n-            TerminatorKind::DropAndReplace { location, value, target: _, unwind: _ } => {\n+            TerminatorKind::DropAndReplace {\n+                place: dropped_place,\n+                value,\n+                target: _,\n+                unwind: _,\n+            } => {\n                 if let Some(place) = value.place() {\n-                    if !place.is_indirect() && !location.is_indirect() {\n+                    if !place.is_indirect() && !dropped_place.is_indirect() {\n                         self.record_local_conflict(\n                             place.local,\n-                            location.local,\n+                            dropped_place.local,\n                             \"DropAndReplace operand overlap\",\n                         );\n                     }\n@@ -613,6 +618,7 @@ impl Conflicts<'a> {\n                 destination: Some((dest_place, _)),\n                 cleanup: _,\n                 from_hir_call: _,\n+                fn_span: _,\n             } => {\n                 // No arguments may overlap with the destination.\n                 for arg in args.iter().chain(Some(func)) {\n@@ -701,7 +707,7 @@ impl Conflicts<'a> {\n                                     InlineAsmOperand::Out { reg: _, late: _, place: None }\n                                     | InlineAsmOperand::Const { value: _ }\n                                     | InlineAsmOperand::SymFn { value: _ }\n-                                    | InlineAsmOperand::SymStatic { value: _ } => {}\n+                                    | InlineAsmOperand::SymStatic { def_id: _ } => {}\n                                 }\n                             }\n                         }\n@@ -717,7 +723,7 @@ impl Conflicts<'a> {\n                         | InlineAsmOperand::In { reg: _, value: _ }\n                         | InlineAsmOperand::Out { reg: _, late: _, place: None }\n                         | InlineAsmOperand::SymFn { value: _ }\n-                        | InlineAsmOperand::SymStatic { value: _ } => {}\n+                        | InlineAsmOperand::SymStatic { def_id: _ } => {}\n                     }\n                 }\n             }\n@@ -732,7 +738,7 @@ impl Conflicts<'a> {\n             | TerminatorKind::Drop { .. }\n             | TerminatorKind::Assert { .. }\n             | TerminatorKind::GeneratorDrop\n-            | TerminatorKind::FalseEdges { .. }\n+            | TerminatorKind::FalseEdge { .. }\n             | TerminatorKind::FalseUnwind { .. } => {}\n         }\n     }\n@@ -759,7 +765,7 @@ impl Conflicts<'a> {\n     }\n \n     /// Merges the conflicts of `a` and `b`, so that each one inherits all conflicts of the other.\n-    /// \n+    ///\n     /// `can_unify` must have returned `true` for the same locals, or this may panic or lead to\n     /// miscompiles.\n     ///"}]}