{"sha": "8da2c9e34e836e12bfa9912c5df4e62afc21b634", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkYTJjOWUzNGU4MzZlMTJiZmE5OTEyYzVkZjRlNjJhZmMyMWI2MzQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-03T10:03:53Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-03T10:03:53Z"}, "message": "fix adding default arguments", "tree": {"sha": "739e01739a2e9adaffcd537e950b7dc87c67e2e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/739e01739a2e9adaffcd537e950b7dc87c67e2e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8da2c9e34e836e12bfa9912c5df4e62afc21b634", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8da2c9e34e836e12bfa9912c5df4e62afc21b634", "html_url": "https://github.com/rust-lang/rust/commit/8da2c9e34e836e12bfa9912c5df4e62afc21b634", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8da2c9e34e836e12bfa9912c5df4e62afc21b634/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f42aa61d578c8bb2f41ea6e5baf29565d8ee32a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f42aa61d578c8bb2f41ea6e5baf29565d8ee32a", "html_url": "https://github.com/rust-lang/rust/commit/5f42aa61d578c8bb2f41ea6e5baf29565d8ee32a"}], "stats": {"total": 18, "additions": 6, "deletions": 12}, "files": [{"sha": "69c4f122544a5818f09175ab93d6ff2cfe3a4a7f", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8da2c9e34e836e12bfa9912c5df4e62afc21b634/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8da2c9e34e836e12bfa9912c5df4e62afc21b634/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=8da2c9e34e836e12bfa9912c5df4e62afc21b634", "patch": "@@ -173,6 +173,7 @@ fn main() {\n                 .chain(Some(sys_root))\n                 .collect()\n         };\n+        args.splice(0..0, miri::miri_default_args().iter().map(ToString::to_string));\n \n         // this check ensures that dependencies are built but not interpreted and the final crate is\n         // interpreted but not built\n@@ -186,7 +187,6 @@ fn main() {\n             Command::new(\"rustc\")\n         };\n \n-        miri::add_miri_default_args(&mut args);\n         args.extend_from_slice(&[\"--cfg\".to_owned(), r#\"feature=\"cargo-miri\"\"#.to_owned()]);\n \n         match command.args(&args).status() {"}, {"sha": "6fa9b817ffee73df16a46f4a456f56235f981e83", "filename": "src/bin/miri-rustc-tests.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8da2c9e34e836e12bfa9912c5df4e62afc21b634/src%2Fbin%2Fmiri-rustc-tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8da2c9e34e836e12bfa9912c5df4e62afc21b634/src%2Fbin%2Fmiri-rustc-tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri-rustc-tests.rs?ref=8da2c9e34e836e12bfa9912c5df4e62afc21b634", "patch": "@@ -156,6 +156,7 @@ fn main() {\n                 true\n             }\n         }).collect();\n+        args.splice(1..1, miri::miri_default_args().iter().map(ToString::to_string));\n         // file to process\n         args.push(path.display().to_string());\n \n@@ -165,8 +166,6 @@ fn main() {\n             args.push(Path::new(&std::env::var(\"HOME\").unwrap()).join(\".xargo\").join(\"HOST\").display().to_string());\n         }\n \n-        miri::add_miri_default_args(&mut args);\n-\n         // A threadsafe buffer for writing.\n         #[derive(Default, Clone)]\n         struct BufWriter(Arc<Mutex<Vec<u8>>>);"}, {"sha": "1bbf3c8c4a4a8e136242ee7730b273b81fe4d8ef", "filename": "src/bin/miri.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8da2c9e34e836e12bfa9912c5df4e62afc21b634/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8da2c9e34e836e12bfa9912c5df4e62afc21b634/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=8da2c9e34e836e12bfa9912c5df4e62afc21b634", "patch": "@@ -232,8 +232,8 @@ fn main() {\n         args.push(sysroot_flag);\n         args.push(find_sysroot());\n     }\n-    // Finally, add the default flags all the way in the beginning.\n-    miri::add_miri_default_args(&mut args);\n+    // Finally, add the default flags all the way in the beginning, but after the binary name.\n+    args.splice(1..1, miri::miri_default_args().iter().map(ToString::to_string));\n \n     trace!(\"rustc arguments: {:?}\", args);\n     let result = rustc_driver::run(move || {"}, {"sha": "6445dca1e80a18c05f77e267c6c09c835a90a38e", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8da2c9e34e836e12bfa9912c5df4e62afc21b634/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8da2c9e34e836e12bfa9912c5df4e62afc21b634/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=8da2c9e34e836e12bfa9912c5df4e62afc21b634", "patch": "@@ -52,16 +52,11 @@ pub use crate::stacked_borrows::{Borrow, Stack, Stacks, Mut as MutBorrow, BorSta\n \n /// Insert rustc arguments at the beginning of the argument listthat miri wants to be\n /// set per default, for maximal validation power.\n-pub fn add_miri_default_args(args: &mut Vec<String>) {\n+pub fn miri_default_args() -> &'static [&'static str] {\n     // The flags here should be kept in sync with what bootstrap adds when `test-miri` is\n     // set, which happens in `bootstrap/bin/rustc.rs` in the rustc sources; and also\n     // kept in sync with `xargo/build.sh` in this repo and `appveyor.yml`.\n-\n-    // Inserting at index 1, after the binary name\n-    args.splice(1..1,\n-        [\"-Zalways-encode-mir\", \"-Zmir-emit-retag\", \"-Zmir-opt-level=0\"]\n-        .iter().map(|s| s.to_string())\n-    );\n+    &[\"-Zalways-encode-mir\", \"-Zmir-emit-retag\", \"-Zmir-opt-level=0\"]\n }\n \n // Used by priroda"}]}