{"sha": "7c439355ce5337002fe83d940329596f75400696", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjNDM5MzU1Y2U1MzM3MDAyZmU4M2Q5NDAzMjk1OTZmNzU0MDA2OTY=", "commit": {"author": {"name": "Steffen Lyngbaek", "email": "steffenlyngbaek@gmail.com", "date": "2020-03-08T10:24:34Z"}, "committer": {"name": "Steffen Lyngbaek", "email": "steffenlyngbaek@gmail.com", "date": "2020-03-08T10:24:34Z"}, "message": "Don't allow nested completions", "tree": {"sha": "fa2014e593237feff6c0b9174fd303087856f52d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa2014e593237feff6c0b9174fd303087856f52d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c439355ce5337002fe83d940329596f75400696", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c439355ce5337002fe83d940329596f75400696", "html_url": "https://github.com/rust-lang/rust/commit/7c439355ce5337002fe83d940329596f75400696", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c439355ce5337002fe83d940329596f75400696/comments", "author": {"login": "slyngbaek", "id": 1216902, "node_id": "MDQ6VXNlcjEyMTY5MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1216902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slyngbaek", "html_url": "https://github.com/slyngbaek", "followers_url": "https://api.github.com/users/slyngbaek/followers", "following_url": "https://api.github.com/users/slyngbaek/following{/other_user}", "gists_url": "https://api.github.com/users/slyngbaek/gists{/gist_id}", "starred_url": "https://api.github.com/users/slyngbaek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slyngbaek/subscriptions", "organizations_url": "https://api.github.com/users/slyngbaek/orgs", "repos_url": "https://api.github.com/users/slyngbaek/repos", "events_url": "https://api.github.com/users/slyngbaek/events{/privacy}", "received_events_url": "https://api.github.com/users/slyngbaek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "slyngbaek", "id": 1216902, "node_id": "MDQ6VXNlcjEyMTY5MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1216902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slyngbaek", "html_url": "https://github.com/slyngbaek", "followers_url": "https://api.github.com/users/slyngbaek/followers", "following_url": "https://api.github.com/users/slyngbaek/following{/other_user}", "gists_url": "https://api.github.com/users/slyngbaek/gists{/gist_id}", "starred_url": "https://api.github.com/users/slyngbaek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slyngbaek/subscriptions", "organizations_url": "https://api.github.com/users/slyngbaek/orgs", "repos_url": "https://api.github.com/users/slyngbaek/repos", "events_url": "https://api.github.com/users/slyngbaek/events{/privacy}", "received_events_url": "https://api.github.com/users/slyngbaek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15ed114a4935684ded93c717f6a3240888b58985", "url": "https://api.github.com/repos/rust-lang/rust/commits/15ed114a4935684ded93c717f6a3240888b58985", "html_url": "https://github.com/rust-lang/rust/commit/15ed114a4935684ded93c717f6a3240888b58985"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "a4e1045fceb51aa4bb93c12a61da537c2f03fb0a", "filename": "crates/ra_ide/src/completion/complete_trait_impl.rs", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/7c439355ce5337002fe83d940329596f75400696/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c439355ce5337002fe83d940329596f75400696/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs?ref=7c439355ce5337002fe83d940329596f75400696", "patch": "@@ -48,23 +48,28 @@ use crate::{\n \n pub(crate) fn complete_trait_impl(acc: &mut Completions, ctx: &CompletionContext) {\n     let mut tokens = ctx.token.ancestors();\n-    let trigger = tokens.find(|p| match p.kind() {\n-        SyntaxKind::FN_DEF\n-        | SyntaxKind::TYPE_ALIAS_DEF\n-        | SyntaxKind::CONST_DEF\n-        | SyntaxKind::NAME_REF\n-        | SyntaxKind::BLOCK_EXPR => true,\n-        _ => false,\n-    });\n-\n-    let impl_def = tokens\n+    let completion_match = tokens\n         .find(|p| match p.kind() {\n-            SyntaxKind::IMPL_DEF => true,\n+            SyntaxKind::FN_DEF\n+            | SyntaxKind::TYPE_ALIAS_DEF\n+            | SyntaxKind::CONST_DEF\n+            | SyntaxKind::NAME_REF\n+            | SyntaxKind::BLOCK_EXPR => true,\n             _ => false,\n         })\n-        .and_then(|n| ast::ImplDef::cast(n));\n+        .and_then(|trigger| {\n+            for p in tokens {\n+                match p.kind() {\n+                    // No nested completions\n+                    SyntaxKind::FN_DEF | SyntaxKind::BLOCK => return None,\n+                    SyntaxKind::IMPL_DEF => return ast::ImplDef::cast(p).map(|p| (trigger, p)),\n+                    _ => {}\n+                }\n+            }\n+            None\n+        });\n \n-    if let (Some(trigger), Some(impl_def)) = (trigger, impl_def) {\n+    if let Some((trigger, impl_def)) = completion_match {\n         match trigger.kind() {\n             SyntaxKind::NAME_REF => {\n                 get_missing_impl_items(&ctx.sema, &impl_def).iter().for_each(|item| match item {"}]}