{"sha": "ac468b67bffc6c386dd04b7955eec013ef99dc39", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjNDY4YjY3YmZmYzZjMzg2ZGQwNGI3OTU1ZWVjMDEzZWY5OWRjMzk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-10-24T03:10:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-24T03:10:16Z"}, "message": "Auto merge of #37322 - nnethercote:CombineFields-instantiate, r=eddyb\n\nUse `SmallVector` in `CombineFields::instantiate`.\n\nThis avoids 4% of malloc calls when compiling\nrustc-benchmarks/issue-32278-big-array-of-strings, and 1--2% for other\nbenchmarks. A small win, but an easy one.", "tree": {"sha": "73e4c8f257f74731fd0e7d934a70a3ed44b2135b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73e4c8f257f74731fd0e7d934a70a3ed44b2135b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac468b67bffc6c386dd04b7955eec013ef99dc39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac468b67bffc6c386dd04b7955eec013ef99dc39", "html_url": "https://github.com/rust-lang/rust/commit/ac468b67bffc6c386dd04b7955eec013ef99dc39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac468b67bffc6c386dd04b7955eec013ef99dc39/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e5dab1da04143a454a4f3d7e3f835ce990b437a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e5dab1da04143a454a4f3d7e3f835ce990b437a", "html_url": "https://github.com/rust-lang/rust/commit/1e5dab1da04143a454a4f3d7e3f835ce990b437a"}, {"sha": "9270a9217a5c44455ec8e5e7b36920ab71816004", "url": "https://api.github.com/repos/rust-lang/rust/commits/9270a9217a5c44455ec8e5e7b36920ab71816004", "html_url": "https://github.com/rust-lang/rust/commit/9270a9217a5c44455ec8e5e7b36920ab71816004"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "fda08eba0213521cdafd89c2446ae08c2e589f3b", "filename": "src/librustc/infer/combine.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ac468b67bffc6c386dd04b7955eec013ef99dc39/src%2Flibrustc%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac468b67bffc6c386dd04b7955eec013ef99dc39/src%2Flibrustc%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fcombine.rs?ref=ac468b67bffc6c386dd04b7955eec013ef99dc39", "patch": "@@ -49,6 +49,7 @@ use ty::relate::{RelateResult, TypeRelation};\n use traits::PredicateObligations;\n \n use syntax::ast;\n+use syntax::util::small_vector::SmallVector;\n use syntax_pos::Span;\n \n #[derive(Clone)]\n@@ -181,7 +182,9 @@ impl<'infcx, 'gcx, 'tcx> CombineFields<'infcx, 'gcx, 'tcx> {\n                        a_is_expected: bool)\n                        -> RelateResult<'tcx, ()>\n     {\n-        let mut stack = Vec::new();\n+        // We use SmallVector here instead of Vec because this code is hot and\n+        // it's rare that the stack length exceeds 1.\n+        let mut stack = SmallVector::zero();\n         stack.push((a_ty, dir, b_vid));\n         loop {\n             // For each turn of the loop, we extract a tuple"}, {"sha": "3856ea420b0f30c73d4a5e1be4c72972445fedfd", "filename": "src/librustc/infer/type_variable.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ac468b67bffc6c386dd04b7955eec013ef99dc39/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac468b67bffc6c386dd04b7955eec013ef99dc39/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ftype_variable.rs?ref=ac468b67bffc6c386dd04b7955eec013ef99dc39", "patch": "@@ -12,8 +12,9 @@ pub use self::RelationDir::*;\n use self::TypeVariableValue::*;\n use self::UndoEntry::*;\n use hir::def_id::{DefId};\n-use ty::{self, Ty};\n+use syntax::util::small_vector::SmallVector;\n use syntax_pos::Span;\n+use ty::{self, Ty};\n \n use std::cmp::min;\n use std::marker::PhantomData;\n@@ -149,7 +150,7 @@ impl<'tcx> TypeVariableTable<'tcx> {\n         &mut self,\n         vid: ty::TyVid,\n         ty: Ty<'tcx>,\n-        stack: &mut Vec<(Ty<'tcx>, RelationDir, ty::TyVid)>)\n+        stack: &mut SmallVector<(Ty<'tcx>, RelationDir, ty::TyVid)>)\n     {\n         debug_assert!(self.root_var(vid) == vid);\n         let old_value = {"}]}