{"sha": "bb65219df487fc23a2901fba25ad472b0b257219", "node_id": "C_kwDOAAsO6NoAKGJiNjUyMTlkZjQ4N2ZjMjNhMjkwMWZiYTI1YWQ0NzJiMGIyNTcyMTk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-25T07:03:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-25T07:03:09Z"}, "message": "Auto merge of #2854 - oli-obk:filter_backtrace, r=oli-obk\n\nHide backtrace from stderr files\n\nfixes #2853\n\nseems not very important to test in this detail. I could try to keep a few lines at the start around so we know what's going on (they should be fairly reliable)", "tree": {"sha": "5ee0f5ebf1ae2cff9d79ea62a448314ad21be83e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ee0f5ebf1ae2cff9d79ea62a448314ad21be83e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb65219df487fc23a2901fba25ad472b0b257219", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb65219df487fc23a2901fba25ad472b0b257219", "html_url": "https://github.com/rust-lang/rust/commit/bb65219df487fc23a2901fba25ad472b0b257219", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb65219df487fc23a2901fba25ad472b0b257219/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "197f3a05dc6deb1b9503f116d3b64a8708f21ba3", "url": "https://api.github.com/repos/rust-lang/rust/commits/197f3a05dc6deb1b9503f116d3b64a8708f21ba3", "html_url": "https://github.com/rust-lang/rust/commit/197f3a05dc6deb1b9503f116d3b64a8708f21ba3"}, {"sha": "6f5554bdef72e859380f2b6f6da7f830f66c905a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f5554bdef72e859380f2b6f6da7f830f66c905a", "html_url": "https://github.com/rust-lang/rust/commit/6f5554bdef72e859380f2b6f6da7f830f66c905a"}], "stats": {"total": 64, "additions": 2, "deletions": 62}, "files": [{"sha": "c9501d90b3b144f46e89ad30f4c464d01bfa6164", "filename": "src/tools/miri/tests/fail/panic/double_panic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb65219df487fc23a2901fba25ad472b0b257219/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fdouble_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb65219df487fc23a2901fba25ad472b0b257219/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fdouble_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fdouble_panic.rs?ref=bb65219df487fc23a2901fba25ad472b0b257219", "patch": "@@ -1,6 +1,8 @@\n //@error-pattern: the program aborted\n //@normalize-stderr-test: \"\\| +\\^+\" -> \"| ^\"\n //@normalize-stderr-test: \"unsafe \\{ libc::abort\\(\\) \\}|crate::intrinsics::abort\\(\\);\" -> \"ABORT();\"\n+//@normalize-stderr-test: \"\\n  +[0-9]+:[^\\n]+\" -> \"$1\"\n+//@normalize-stderr-test: \"\\n at [^\\n]+\" -> \"$1\"\n \n struct Foo;\n impl Drop for Foo {"}, {"sha": "5384f6f6716ff7292733aca22c520359c4efdca0", "filename": "src/tools/miri/tests/fail/panic/double_panic.stderr", "status": "modified", "additions": 0, "deletions": 62, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/bb65219df487fc23a2901fba25ad472b0b257219/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fdouble_panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb65219df487fc23a2901fba25ad472b0b257219/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fdouble_panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fdouble_panic.stderr?ref=bb65219df487fc23a2901fba25ad472b0b257219", "patch": "@@ -2,68 +2,6 @@ thread 'main' panicked at 'first', $DIR/double_panic.rs:LL:CC\n note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n thread 'main' panicked at 'second', $DIR/double_panic.rs:LL:CC\n stack backtrace:\n-   0: std::backtrace_rs::backtrace::miri::trace_unsynchronized\n- at RUSTLIB/std/src/../../backtrace/src/backtrace/miri.rs:LL:CC\n-   1: std::backtrace_rs::backtrace::miri::trace\n- at RUSTLIB/std/src/../../backtrace/src/backtrace/miri.rs:LL:CC\n-   2: std::backtrace_rs::backtrace::trace_unsynchronized\n- at RUSTLIB/std/src/../../backtrace/src/backtrace/mod.rs:LL:CC\n-   3: std::sys_common::backtrace::_print_fmt\n- at RUSTLIB/std/src/sys_common/backtrace.rs:LL:CC\n-   4: <std::sys_common::backtrace::_print::DisplayBacktrace as std::fmt::Display>::fmt\n- at RUSTLIB/std/src/sys_common/backtrace.rs:LL:CC\n-   5: std::fmt::write\n- at RUSTLIB/core/src/fmt/mod.rs:LL:CC\n-   6: <std::sys::PLATFORM::stdio::Stderr as std::io::Write>::write_fmt\n- at RUSTLIB/std/src/io/mod.rs:LL:CC\n-   7: std::sys_common::backtrace::_print\n- at RUSTLIB/std/src/sys_common/backtrace.rs:LL:CC\n-   8: std::sys_common::backtrace::print\n- at RUSTLIB/std/src/sys_common/backtrace.rs:LL:CC\n-   9: std::panicking::default_hook::{closure#1}\n- at RUSTLIB/std/src/panicking.rs:LL:CC\n-  10: std::panicking::default_hook\n- at RUSTLIB/std/src/panicking.rs:LL:CC\n-  11: std::panicking::rust_panic_with_hook\n- at RUSTLIB/std/src/panicking.rs:LL:CC\n-  12: std::rt::begin_panic::{closure#0}\n- at RUSTLIB/std/src/panicking.rs:LL:CC\n-  13: std::sys_common::backtrace::__rust_end_short_backtrace\n- at RUSTLIB/std/src/sys_common/backtrace.rs:LL:CC\n-  14: std::rt::begin_panic\n- at RUSTLIB/std/src/panicking.rs:LL:CC\n-  15: <Foo as std::ops::Drop>::drop\n- at $DIR/double_panic.rs:LL:CC\n-  16: std::ptr::drop_in_place - shim(Some(Foo))\n- at RUSTLIB/core/src/ptr/mod.rs:LL:CC\n-  17: main\n- at $DIR/double_panic.rs:LL:CC\n-  18: <fn() as std::ops::FnOnce<()>>::call_once - shim(fn())\n- at RUSTLIB/core/src/ops/function.rs:LL:CC\n-  19: std::sys_common::backtrace::__rust_begin_short_backtrace\n- at RUSTLIB/std/src/sys_common/backtrace.rs:LL:CC\n-  20: std::rt::lang_start::{closure#0}\n- at RUSTLIB/std/src/rt.rs:LL:CC\n-  21: std::ops::function::impls::call_once\n- at RUSTLIB/core/src/ops/function.rs:LL:CC\n-  22: std::panicking::r#try::do_call\n- at RUSTLIB/std/src/panicking.rs:LL:CC\n-  23: std::panicking::r#try\n- at RUSTLIB/std/src/panicking.rs:LL:CC\n-  24: std::panic::catch_unwind\n- at RUSTLIB/std/src/panic.rs:LL:CC\n-  25: std::rt::lang_start_internal::{closure#2}\n- at RUSTLIB/std/src/rt.rs:LL:CC\n-  26: std::panicking::r#try::do_call\n- at RUSTLIB/std/src/panicking.rs:LL:CC\n-  27: std::panicking::r#try\n- at RUSTLIB/std/src/panicking.rs:LL:CC\n-  28: std::panic::catch_unwind\n- at RUSTLIB/std/src/panic.rs:LL:CC\n-  29: std::rt::lang_start_internal\n- at RUSTLIB/std/src/rt.rs:LL:CC\n-  30: std::rt::lang_start\n- at RUSTLIB/std/src/rt.rs:LL:CC\n thread panicked while panicking. aborting.\n error: abnormal termination: the program aborted execution\n   --> RUSTLIB/std/src/sys/PLATFORM/mod.rs:LL:CC"}]}