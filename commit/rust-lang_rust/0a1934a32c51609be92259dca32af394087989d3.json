{"sha": "0a1934a32c51609be92259dca32af394087989d3", "node_id": "C_kwDOAAsO6NoAKDBhMTkzNGEzMmM1MTYwOWJlOTIyNTlkY2EzMmFmMzk0MDg3OTg5ZDM", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-01-12T18:59:03Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-01-12T18:59:03Z"}, "message": "Add FIXME comments about asm and format_args ast_pretty.", "tree": {"sha": "40f5843f2e2286deeb6bc0794159cf228afef1bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40f5843f2e2286deeb6bc0794159cf228afef1bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a1934a32c51609be92259dca32af394087989d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a1934a32c51609be92259dca32af394087989d3", "html_url": "https://github.com/rust-lang/rust/commit/0a1934a32c51609be92259dca32af394087989d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a1934a32c51609be92259dca32af394087989d3/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "298e160dc88dab90a83799973e121a18fed2ea38", "url": "https://api.github.com/repos/rust-lang/rust/commits/298e160dc88dab90a83799973e121a18fed2ea38", "html_url": "https://github.com/rust-lang/rust/commit/298e160dc88dab90a83799973e121a18fed2ea38"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "500dc9da8aef8111f501dbc6f14aa72cc738bfbf", "filename": "compiler/rustc_ast_pretty/src/pprust/state/expr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a1934a32c51609be92259dca32af394087989d3/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a1934a32c51609be92259dca32af394087989d3/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fexpr.rs?ref=0a1934a32c51609be92259dca32af394087989d3", "patch": "@@ -527,10 +527,12 @@ impl<'a> State<'a> {\n                 }\n             }\n             ast::ExprKind::InlineAsm(a) => {\n+                // FIXME: This should have its own syntax, distinct from a macro invocation.\n                 self.word(\"asm!\");\n                 self.print_inline_asm(a);\n             }\n             ast::ExprKind::FormatArgs(fmt) => {\n+                // FIXME: This should have its own syntax, distinct from a macro invocation.\n                 self.word(\"format_args!\");\n                 self.popen();\n                 self.rbox(0, Inconsistent);"}]}