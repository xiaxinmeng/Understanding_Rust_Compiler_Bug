{"sha": "052e9faa90050947dc24847ecfb15eb8168c8e5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1MmU5ZmFhOTAwNTA5NDdkYzI0ODQ3ZWNmYjE1ZWI4MTY4YzhlNWI=", "commit": {"author": {"name": "Leander Tentrup", "email": "leander.tentrup@gmail.com", "date": "2020-04-28T07:44:20Z"}, "committer": {"name": "Leander Tentrup", "email": "leander.tentrup@gmail.com", "date": "2020-04-28T09:13:12Z"}, "message": "Introduce new semantic highlight token for format specifier", "tree": {"sha": "889b51242a6a3fd547d6adc5e8940361191264b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/889b51242a6a3fd547d6adc5e8940361191264b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/052e9faa90050947dc24847ecfb15eb8168c8e5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/052e9faa90050947dc24847ecfb15eb8168c8e5b", "html_url": "https://github.com/rust-lang/rust/commit/052e9faa90050947dc24847ecfb15eb8168c8e5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/052e9faa90050947dc24847ecfb15eb8168c8e5b/comments", "author": {"login": "ltentrup", "id": 201808, "node_id": "MDQ6VXNlcjIwMTgwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/201808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ltentrup", "html_url": "https://github.com/ltentrup", "followers_url": "https://api.github.com/users/ltentrup/followers", "following_url": "https://api.github.com/users/ltentrup/following{/other_user}", "gists_url": "https://api.github.com/users/ltentrup/gists{/gist_id}", "starred_url": "https://api.github.com/users/ltentrup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ltentrup/subscriptions", "organizations_url": "https://api.github.com/users/ltentrup/orgs", "repos_url": "https://api.github.com/users/ltentrup/repos", "events_url": "https://api.github.com/users/ltentrup/events{/privacy}", "received_events_url": "https://api.github.com/users/ltentrup/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ltentrup", "id": 201808, "node_id": "MDQ6VXNlcjIwMTgwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/201808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ltentrup", "html_url": "https://github.com/ltentrup", "followers_url": "https://api.github.com/users/ltentrup/followers", "following_url": "https://api.github.com/users/ltentrup/following{/other_user}", "gists_url": "https://api.github.com/users/ltentrup/gists{/gist_id}", "starred_url": "https://api.github.com/users/ltentrup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ltentrup/subscriptions", "organizations_url": "https://api.github.com/users/ltentrup/orgs", "repos_url": "https://api.github.com/users/ltentrup/repos", "events_url": "https://api.github.com/users/ltentrup/events{/privacy}", "received_events_url": "https://api.github.com/users/ltentrup/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da1f316b0246ce41d7cb8560181e294089f06ef3", "url": "https://api.github.com/repos/rust-lang/rust/commits/da1f316b0246ce41d7cb8560181e294089f06ef3", "html_url": "https://github.com/rust-lang/rust/commit/da1f316b0246ce41d7cb8560181e294089f06ef3"}], "stats": {"total": 85, "additions": 48, "deletions": 37}, "files": [{"sha": "ea026d7a046439ded1ab209a00c8e44fd7dff28c", "filename": "crates/ra_ide/src/snapshots/highlight_injection.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/052e9faa90050947dc24847ecfb15eb8168c8e5b/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_injection.html", "raw_url": "https://github.com/rust-lang/rust/raw/052e9faa90050947dc24847ecfb15eb8168c8e5b/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_injection.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_injection.html?ref=052e9faa90050947dc24847ecfb15eb8168c8e5b", "patch": "@@ -20,6 +20,7 @@\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n .variable           { color: #DCDCCC; }\n+.format_specifier   { color: #CC696B; }\n .mutable            { text-decoration: underline; }\n \n .keyword            { color: #F0DFAF; font-weight: bold; }"}, {"sha": "de06daf72b089302f822f98efec42db1d5966191", "filename": "crates/ra_ide/src/snapshots/highlight_strings.html", "status": "modified", "additions": 36, "deletions": 35, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/052e9faa90050947dc24847ecfb15eb8168c8e5b/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_strings.html", "raw_url": "https://github.com/rust-lang/rust/raw/052e9faa90050947dc24847ecfb15eb8168c8e5b/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_strings.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_strings.html?ref=052e9faa90050947dc24847ecfb15eb8168c8e5b", "patch": "@@ -20,6 +20,7 @@\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n .variable           { color: #DCDCCC; }\n+.format_specifier   { color: #CC696B; }\n .mutable            { text-decoration: underline; }\n \n .keyword            { color: #F0DFAF; font-weight: bold; }\n@@ -40,43 +41,43 @@\n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span>() {\n     <span class=\"comment\">// from https://doc.rust-lang.org/std/fmt/index.html</span>\n     <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello\"</span>);                 <span class=\"comment\">// =&gt; \"Hello\"</span>\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello, </span><span class=\"attribute\">{</span><span class=\"attribute\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"string_literal\">\"world\"</span>);   <span class=\"comment\">// =&gt; \"Hello, world!\"</span>\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"The number is </span><span class=\"attribute\">{</span><span class=\"attribute\">}</span><span class=\"string_literal\">\"</span>, <span class=\"numeric_literal\">1</span>);   <span class=\"comment\">// =&gt; \"The number is 1\"</span>\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"attribute\">{</span><span class=\"attribute\">:</span><span class=\"attribute\">?</span><span class=\"attribute\">}</span><span class=\"string_literal\">\"</span>, (<span class=\"numeric_literal\">3</span>, <span class=\"numeric_literal\">4</span>));          <span class=\"comment\">// =&gt; \"(3, 4)\"</span>\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"attribute\">{</span><span class=\"variable\">value</span><span class=\"attribute\">}</span><span class=\"string_literal\">\"</span>, value=<span class=\"numeric_literal\">4</span>);      <span class=\"comment\">// =&gt; \"4\"</span>\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"attribute\">{</span><span class=\"attribute\">}</span><span class=\"string_literal\"> </span><span class=\"attribute\">{</span><span class=\"attribute\">}</span><span class=\"string_literal\">\"</span>, <span class=\"numeric_literal\">1</span>, <span class=\"numeric_literal\">2</span>);           <span class=\"comment\">// =&gt; \"1 2\"</span>\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"attribute\">{</span><span class=\"attribute\">:</span><span class=\"numeric_literal\">0</span><span class=\"numeric_literal\">4</span><span class=\"attribute\">}</span><span class=\"string_literal\">\"</span>, <span class=\"numeric_literal\">42</span>);             <span class=\"comment\">// =&gt; \"0042\" with leading zerosV</span>\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"attribute\">{</span><span class=\"numeric_literal\">1</span><span class=\"attribute\">}</span><span class=\"string_literal\"> </span><span class=\"attribute\">{</span><span class=\"attribute\">}</span><span class=\"string_literal\"> </span><span class=\"attribute\">{</span><span class=\"numeric_literal\">0</span><span class=\"attribute\">}</span><span class=\"string_literal\"> </span><span class=\"attribute\">{</span><span class=\"attribute\">}</span><span class=\"string_literal\">\"</span>, <span class=\"numeric_literal\">1</span>, <span class=\"numeric_literal\">2</span>);   <span class=\"comment\">// =&gt; \"2 1 1 2\"</span>\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"attribute\">{</span><span class=\"variable\">argument</span><span class=\"attribute\">}</span><span class=\"string_literal\">\"</span>, argument = <span class=\"string_literal\">\"test\"</span>);   <span class=\"comment\">// =&gt; \"test\"</span>\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"attribute\">{</span><span class=\"variable\">name</span><span class=\"attribute\">}</span><span class=\"string_literal\"> </span><span class=\"attribute\">{</span><span class=\"attribute\">}</span><span class=\"string_literal\">\"</span>, <span class=\"numeric_literal\">1</span>, name = <span class=\"numeric_literal\">2</span>);          <span class=\"comment\">// =&gt; \"2 1\"</span>\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"attribute\">{</span><span class=\"variable\">a</span><span class=\"attribute\">}</span><span class=\"string_literal\"> </span><span class=\"attribute\">{</span><span class=\"variable\">c</span><span class=\"attribute\">}</span><span class=\"string_literal\"> </span><span class=\"attribute\">{</span><span class=\"variable\">b</span><span class=\"attribute\">}</span><span class=\"string_literal\">\"</span>, a=<span class=\"string_literal\">\"a\"</span>, b=<span class=\"char_literal\">'b'</span>, c=<span class=\"numeric_literal\">3</span>);  <span class=\"comment\">// =&gt; \"a 3 b\"</span>\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"attribute\">{</span><span class=\"attribute\">:</span><span class=\"numeric_literal\">5</span><span class=\"attribute\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"string_literal\">\"x\"</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"attribute\">{</span><span class=\"attribute\">:</span><span class=\"numeric_literal\">1</span><span class=\"attribute\">$</span><span class=\"attribute\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"string_literal\">\"x\"</span>, <span class=\"numeric_literal\">5</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"attribute\">{</span><span class=\"numeric_literal\">1</span><span class=\"attribute\">:</span><span class=\"numeric_literal\">0</span><span class=\"attribute\">$</span><span class=\"attribute\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"numeric_literal\">5</span>, <span class=\"string_literal\">\"x\"</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"attribute\">{</span><span class=\"attribute\">:</span><span class=\"variable\">width</span><span class=\"attribute\">$</span><span class=\"attribute\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"string_literal\">\"x\"</span>, width = <span class=\"numeric_literal\">5</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"attribute\">{</span><span class=\"attribute\">:</span><span class=\"attribute\">&lt;</span><span class=\"numeric_literal\">5</span><span class=\"attribute\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"string_literal\">\"x\"</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"attribute\">{</span><span class=\"attribute\">:</span><span class=\"attribute\">-</span><span class=\"attribute\">&lt;</span><span class=\"numeric_literal\">5</span><span class=\"attribute\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"string_literal\">\"x\"</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"attribute\">{</span><span class=\"attribute\">:</span><span class=\"attribute\">^</span><span class=\"numeric_literal\">5</span><span class=\"attribute\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"string_literal\">\"x\"</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"attribute\">{</span><span class=\"attribute\">:</span><span class=\"attribute\">&gt;</span><span class=\"numeric_literal\">5</span><span class=\"attribute\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"string_literal\">\"x\"</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"attribute\">{</span><span class=\"attribute\">:</span><span class=\"attribute\">+</span><span class=\"attribute\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"numeric_literal\">5</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"attribute\">{</span><span class=\"attribute\">:</span><span class=\"attribute\">#</span><span class=\"variable\">x</span><span class=\"string_literal\">}!\"</span>, <span class=\"numeric_literal\">27</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"attribute\">{</span><span class=\"attribute\">:</span><span class=\"numeric_literal\">0</span><span class=\"numeric_literal\">5</span><span class=\"attribute\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"numeric_literal\">5</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"attribute\">{</span><span class=\"attribute\">:</span><span class=\"numeric_literal\">0</span><span class=\"numeric_literal\">5</span><span class=\"attribute\">}</span><span class=\"string_literal\">!\"</span>, -<span class=\"numeric_literal\">5</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"attribute\">{</span><span class=\"attribute\">:</span><span class=\"attribute\">#</span><span class=\"numeric_literal\">0</span><span class=\"numeric_literal\">10</span><span class=\"variable\">x</span><span class=\"attribute\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"numeric_literal\">27</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"attribute\">{</span><span class=\"numeric_literal\">0</span><span class=\"attribute\">}</span><span class=\"string_literal\"> is </span><span class=\"attribute\">{</span><span class=\"numeric_literal\">1</span><span class=\"attribute\">:</span><span class=\"attribute\">.</span><span class=\"numeric_literal\">5</span><span class=\"attribute\">}</span><span class=\"string_literal\">\"</span>, <span class=\"string_literal\">\"x\"</span>, <span class=\"numeric_literal\">0.01</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"attribute\">{</span><span class=\"numeric_literal\">1</span><span class=\"attribute\">}</span><span class=\"string_literal\"> is </span><span class=\"attribute\">{</span><span class=\"numeric_literal\">2</span><span class=\"attribute\">:</span><span class=\"attribute\">.</span><span class=\"numeric_literal\">0</span><span class=\"attribute\">$</span><span class=\"attribute\">}</span><span class=\"string_literal\">\"</span>, <span class=\"numeric_literal\">5</span>, <span class=\"string_literal\">\"x\"</span>, <span class=\"numeric_literal\">0.01</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"attribute\">{</span><span class=\"numeric_literal\">0</span><span class=\"attribute\">}</span><span class=\"string_literal\"> is </span><span class=\"attribute\">{</span><span class=\"numeric_literal\">2</span><span class=\"attribute\">:</span><span class=\"attribute\">.</span><span class=\"numeric_literal\">1</span><span class=\"attribute\">$</span><span class=\"attribute\">}</span><span class=\"string_literal\">\"</span>, <span class=\"string_literal\">\"x\"</span>, <span class=\"numeric_literal\">5</span>, <span class=\"numeric_literal\">0.01</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"attribute\">{</span><span class=\"attribute\">}</span><span class=\"string_literal\"> is </span><span class=\"attribute\">{</span><span class=\"attribute\">:</span><span class=\"attribute\">.</span><span class=\"attribute\">*</span><span class=\"attribute\">}</span><span class=\"string_literal\">\"</span>,    <span class=\"string_literal\">\"x\"</span>, <span class=\"numeric_literal\">5</span>, <span class=\"numeric_literal\">0.01</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"attribute\">{</span><span class=\"attribute\">}</span><span class=\"string_literal\"> is </span><span class=\"attribute\">{</span><span class=\"numeric_literal\">2</span><span class=\"attribute\">:</span><span class=\"attribute\">.</span><span class=\"attribute\">*</span><span class=\"attribute\">}</span><span class=\"string_literal\">\"</span>,   <span class=\"string_literal\">\"x\"</span>, <span class=\"numeric_literal\">5</span>, <span class=\"numeric_literal\">0.01</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"attribute\">{</span><span class=\"attribute\">}</span><span class=\"string_literal\"> is </span><span class=\"attribute\">{</span><span class=\"variable\">number</span><span class=\"attribute\">:</span><span class=\"attribute\">.</span><span class=\"variable\">prec</span><span class=\"attribute\">$</span><span class=\"attribute\">}</span><span class=\"string_literal\">\"</span>, <span class=\"string_literal\">\"x\"</span>, prec = <span class=\"numeric_literal\">5</span>, number = <span class=\"numeric_literal\">0.01</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"attribute\">{</span><span class=\"attribute\">}</span><span class=\"string_literal\">, `</span><span class=\"attribute\">{</span><span class=\"variable\">name</span><span class=\"attribute\">:</span><span class=\"attribute\">.</span><span class=\"attribute\">*</span><span class=\"attribute\">}</span><span class=\"string_literal\">` has 3 fractional digits\"</span>, <span class=\"string_literal\">\"Hello\"</span>, <span class=\"numeric_literal\">3</span>, name=<span class=\"numeric_literal\">1234.56</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"attribute\">{</span><span class=\"attribute\">}</span><span class=\"string_literal\">, `</span><span class=\"attribute\">{</span><span class=\"variable\">name</span><span class=\"attribute\">:</span><span class=\"attribute\">.</span><span class=\"attribute\">*</span><span class=\"attribute\">}</span><span class=\"string_literal\">` has 3 characters\"</span>, <span class=\"string_literal\">\"Hello\"</span>, <span class=\"numeric_literal\">3</span>, name=<span class=\"string_literal\">\"1234.56\"</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"attribute\">{</span><span class=\"attribute\">}</span><span class=\"string_literal\">, `</span><span class=\"attribute\">{</span><span class=\"variable\">name</span><span class=\"attribute\">:</span><span class=\"attribute\">&gt;</span><span class=\"numeric_literal\">8</span><span class=\"attribute\">.</span><span class=\"attribute\">*</span><span class=\"attribute\">}</span><span class=\"string_literal\">` has 3 right-aligned characters\"</span>, <span class=\"string_literal\">\"Hello\"</span>, <span class=\"numeric_literal\">3</span>, name=<span class=\"string_literal\">\"1234.56\"</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello, </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"string_literal\">\"world\"</span>);   <span class=\"comment\">// =&gt; \"Hello, world!\"</span>\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"The number is </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>, <span class=\"numeric_literal\">1</span>);   <span class=\"comment\">// =&gt; \"The number is 1\"</span>\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">?</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>, (<span class=\"numeric_literal\">3</span>, <span class=\"numeric_literal\">4</span>));          <span class=\"comment\">// =&gt; \"(3, 4)\"</span>\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">value</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>, value=<span class=\"numeric_literal\">4</span>);      <span class=\"comment\">// =&gt; \"4\"</span>\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>, <span class=\"numeric_literal\">1</span>, <span class=\"numeric_literal\">2</span>);           <span class=\"comment\">// =&gt; \"1 2\"</span>\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">0</span><span class=\"numeric_literal\">4</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>, <span class=\"numeric_literal\">42</span>);             <span class=\"comment\">// =&gt; \"0042\" with leading zerosV</span>\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>, <span class=\"numeric_literal\">1</span>, <span class=\"numeric_literal\">2</span>);   <span class=\"comment\">// =&gt; \"2 1 1 2\"</span>\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">argument</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>, argument = <span class=\"string_literal\">\"test\"</span>);   <span class=\"comment\">// =&gt; \"test\"</span>\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>, <span class=\"numeric_literal\">1</span>, name = <span class=\"numeric_literal\">2</span>);          <span class=\"comment\">// =&gt; \"2 1\"</span>\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">a</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"variable\">c</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"variable\">b</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>, a=<span class=\"string_literal\">\"a\"</span>, b=<span class=\"char_literal\">'b'</span>, c=<span class=\"numeric_literal\">3</span>);  <span class=\"comment\">// =&gt; \"a 3 b\"</span>\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"string_literal\">\"x\"</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"string_literal\">\"x\"</span>, <span class=\"numeric_literal\">5</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"numeric_literal\">5</span>, <span class=\"string_literal\">\"x\"</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"variable\">width</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"string_literal\">\"x\"</span>, width = <span class=\"numeric_literal\">5</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">&lt;</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"string_literal\">\"x\"</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">-</span><span class=\"format_specifier\">&lt;</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"string_literal\">\"x\"</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">^</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"string_literal\">\"x\"</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">&gt;</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"string_literal\">\"x\"</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">+</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"numeric_literal\">5</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">#</span><span class=\"variable\">x</span><span class=\"string_literal\">}!\"</span>, <span class=\"numeric_literal\">27</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">0</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"numeric_literal\">5</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">0</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span>, -<span class=\"numeric_literal\">5</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">#</span><span class=\"numeric_literal\">0</span><span class=\"numeric_literal\">10</span><span class=\"variable\">x</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"numeric_literal\">27</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>, <span class=\"string_literal\">\"x\"</span>, <span class=\"numeric_literal\">0.01</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">2</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>, <span class=\"numeric_literal\">5</span>, <span class=\"string_literal\">\"x\"</span>, <span class=\"numeric_literal\">0.01</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">2</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>, <span class=\"string_literal\">\"x\"</span>, <span class=\"numeric_literal\">5</span>, <span class=\"numeric_literal\">0.01</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>,    <span class=\"string_literal\">\"x\"</span>, <span class=\"numeric_literal\">5</span>, <span class=\"numeric_literal\">0.01</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">2</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>,   <span class=\"string_literal\">\"x\"</span>, <span class=\"numeric_literal\">5</span>, <span class=\"numeric_literal\">0.01</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"variable\">number</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"variable\">prec</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>, <span class=\"string_literal\">\"x\"</span>, prec = <span class=\"numeric_literal\">5</span>, number = <span class=\"numeric_literal\">0.01</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">, `</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">` has 3 fractional digits\"</span>, <span class=\"string_literal\">\"Hello\"</span>, <span class=\"numeric_literal\">3</span>, name=<span class=\"numeric_literal\">1234.56</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">, `</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">` has 3 characters\"</span>, <span class=\"string_literal\">\"Hello\"</span>, <span class=\"numeric_literal\">3</span>, name=<span class=\"string_literal\">\"1234.56\"</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">, `</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">&gt;</span><span class=\"numeric_literal\">8</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">` has 3 right-aligned characters\"</span>, <span class=\"string_literal\">\"Hello\"</span>, <span class=\"numeric_literal\">3</span>, name=<span class=\"string_literal\">\"1234.56\"</span>);\n     <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello {{}}\"</span>);\n     <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"{{ Hello\"</span>);\n \n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">r\"Hello, </span><span class=\"attribute\">{</span><span class=\"attribute\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"string_literal\">\"world\"</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">r\"Hello, </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span>, <span class=\"string_literal\">\"world\"</span>);\n \n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"attribute\">{</span><span class=\"variable\">\\x41</span><span class=\"attribute\">}</span><span class=\"string_literal\">\"</span>, A = <span class=\"numeric_literal\">92</span>);\n-    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"attribute\">{</span><span class=\"variable\">\u043d\u0438\u0447\u043e\u0441\u0438</span><span class=\"attribute\">}</span><span class=\"string_literal\">\"</span>, \u043d\u0438\u0447\u043e\u0441\u0438 = <span class=\"numeric_literal\">92</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">\\x41</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>, A = <span class=\"numeric_literal\">92</span>);\n+    <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">\u043d\u0438\u0447\u043e\u0441\u0438</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span>, \u043d\u0438\u0447\u043e\u0441\u0438 = <span class=\"numeric_literal\">92</span>);\n }</code></pre>\n\\ No newline at end of file"}, {"sha": "4b12fe8238cf910c52d18abc65fdabfa47f98a49", "filename": "crates/ra_ide/src/snapshots/highlighting.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/052e9faa90050947dc24847ecfb15eb8168c8e5b/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/052e9faa90050947dc24847ecfb15eb8168c8e5b/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html?ref=052e9faa90050947dc24847ecfb15eb8168c8e5b", "patch": "@@ -20,6 +20,7 @@\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n .variable           { color: #DCDCCC; }\n+.format_specifier   { color: #CC696B; }\n .mutable            { text-decoration: underline; }\n \n .keyword            { color: #F0DFAF; font-weight: bold; }"}, {"sha": "11e1f3e44e59607faa5df4a03d59d0ce09499890", "filename": "crates/ra_ide/src/snapshots/rainbow_highlighting.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/052e9faa90050947dc24847ecfb15eb8168c8e5b/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/052e9faa90050947dc24847ecfb15eb8168c8e5b/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html?ref=052e9faa90050947dc24847ecfb15eb8168c8e5b", "patch": "@@ -20,6 +20,7 @@\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n .variable           { color: #DCDCCC; }\n+.format_specifier   { color: #CC696B; }\n .mutable            { text-decoration: underline; }\n \n .keyword            { color: #F0DFAF; font-weight: bold; }"}, {"sha": "6658c7bb270e93cea27bdc126276475ad59cd6d3", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/052e9faa90050947dc24847ecfb15eb8168c8e5b/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/052e9faa90050947dc24847ecfb15eb8168c8e5b/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=052e9faa90050947dc24847ecfb15eb8168c8e5b", "patch": "@@ -290,7 +290,7 @@ fn highlight_format_specifier(kind: FormatSpecifier) -> Option<HighlightTag> {\n         | FormatSpecifier::DollarSign\n         | FormatSpecifier::Dot\n         | FormatSpecifier::Asterisk\n-        | FormatSpecifier::QuestionMark => HighlightTag::Attribute,\n+        | FormatSpecifier::QuestionMark => HighlightTag::FormatSpecifier,\n         FormatSpecifier::Integer | FormatSpecifier::Zero => HighlightTag::NumericLiteral,\n         FormatSpecifier::Identifier => HighlightTag::Local,\n     })"}, {"sha": "ff0eeeb52c062eeca8ad2800cdf0f171c6831431", "filename": "crates/ra_ide/src/syntax_highlighting/html.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/052e9faa90050947dc24847ecfb15eb8168c8e5b/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/052e9faa90050947dc24847ecfb15eb8168c8e5b/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs?ref=052e9faa90050947dc24847ecfb15eb8168c8e5b", "patch": "@@ -79,6 +79,7 @@ pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padd\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n .variable           { color: #DCDCCC; }\n+.format_specifier   { color: #CC696B; }\n .mutable            { text-decoration: underline; }\n \n .keyword            { color: #F0DFAF; font-weight: bold; }"}, {"sha": "be1a0f12b25bfaeb044e28f2d07ff4d4c0fbe80e", "filename": "crates/ra_ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/052e9faa90050947dc24847ecfb15eb8168c8e5b/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/052e9faa90050947dc24847ecfb15eb8168c8e5b/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=052e9faa90050947dc24847ecfb15eb8168c8e5b", "patch": "@@ -39,6 +39,7 @@ pub enum HighlightTag {\n     Union,\n     Local,\n     UnresolvedReference,\n+    FormatSpecifier,\n }\n \n #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]\n@@ -81,6 +82,7 @@ impl HighlightTag {\n             HighlightTag::Union => \"union\",\n             HighlightTag::Local => \"variable\",\n             HighlightTag::UnresolvedReference => \"unresolved_reference\",\n+            HighlightTag::FormatSpecifier => \"format_specifier\",\n         }\n     }\n }"}, {"sha": "ffe3ea84d759a25fbf959aaf11a87c74c7d950d8", "filename": "crates/rust-analyzer/src/conv.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/052e9faa90050947dc24847ecfb15eb8168c8e5b/crates%2Frust-analyzer%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/052e9faa90050947dc24847ecfb15eb8168c8e5b/crates%2Frust-analyzer%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconv.rs?ref=052e9faa90050947dc24847ecfb15eb8168c8e5b", "patch": "@@ -25,7 +25,8 @@ use crate::{\n     Result,\n };\n use semantic_tokens::{\n-    ATTRIBUTE, BUILTIN_TYPE, ENUM_MEMBER, LIFETIME, TYPE_ALIAS, UNION, UNRESOLVED_REFERENCE,\n+    ATTRIBUTE, BUILTIN_TYPE, ENUM_MEMBER, FORMAT_SPECIFIER, LIFETIME, TYPE_ALIAS, UNION,\n+    UNRESOLVED_REFERENCE,\n };\n \n pub trait Conv {\n@@ -381,6 +382,7 @@ impl Conv for Highlight {\n             HighlightTag::Attribute => ATTRIBUTE,\n             HighlightTag::Keyword => SemanticTokenType::KEYWORD,\n             HighlightTag::UnresolvedReference => UNRESOLVED_REFERENCE,\n+            HighlightTag::FormatSpecifier => FORMAT_SPECIFIER,\n         };\n \n         for modifier in self.modifiers.iter() {"}, {"sha": "71f4f58a32b085ef53094edc3e89a5a5d734e156", "filename": "crates/rust-analyzer/src/semantic_tokens.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/052e9faa90050947dc24847ecfb15eb8168c8e5b/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/052e9faa90050947dc24847ecfb15eb8168c8e5b/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs?ref=052e9faa90050947dc24847ecfb15eb8168c8e5b", "patch": "@@ -12,6 +12,7 @@ pub(crate) const TYPE_ALIAS: SemanticTokenType = SemanticTokenType::new(\"typeAli\n pub(crate) const UNION: SemanticTokenType = SemanticTokenType::new(\"union\");\n pub(crate) const UNRESOLVED_REFERENCE: SemanticTokenType =\n     SemanticTokenType::new(\"unresolvedReference\");\n+pub(crate) const FORMAT_SPECIFIER: SemanticTokenType = SemanticTokenType::new(\"formatSpecifier\");\n \n pub(crate) const CONSTANT: SemanticTokenModifier = SemanticTokenModifier::new(\"constant\");\n pub(crate) const CONTROL_FLOW: SemanticTokenModifier = SemanticTokenModifier::new(\"controlFlow\");\n@@ -46,6 +47,7 @@ pub(crate) const SUPPORTED_TYPES: &[SemanticTokenType] = &[\n     TYPE_ALIAS,\n     UNION,\n     UNRESOLVED_REFERENCE,\n+    FORMAT_SPECIFIER,\n ];\n \n pub(crate) const SUPPORTED_MODIFIERS: &[SemanticTokenModifier] = &["}]}