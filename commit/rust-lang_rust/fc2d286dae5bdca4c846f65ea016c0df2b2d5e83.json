{"sha": "fc2d286dae5bdca4c846f65ea016c0df2b2d5e83", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjMmQyODZkYWU1YmRjYTRjODQ2ZjY1ZWEwMTZjMGRmMmIyZDVlODM=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-06-07T12:34:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-07T12:34:41Z"}, "message": "Clarify label documentation\n\nAlso some other cleanups while I'm there.", "tree": {"sha": "76c37292537685f37df64a03a85e7460cfe92292", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76c37292537685f37df64a03a85e7460cfe92292"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc2d286dae5bdca4c846f65ea016c0df2b2d5e83", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgvhJhCRBK7hj4Ov3rIwAAIrAIAGl+UJ7y5RhAAsREsbKLxFP1\nsiR0x7wRTOfu0Pq/3hgstug/b2TIScQsCIdF93U90gD8jTcY0f7NxwEWrK6mOahf\nRbChh1Q7mTB3LGKIvCIhkPZZo/vu0sJwGEXG6kvnOPUhFnV+LaYgJXAaOtiG1oWy\n14BNWU655SGMN+V2FKjzXBx4gWzFwrU0/c6jtsPGkUGB0FSUnZCWha+i/gRa9uGR\nyZTs3oUxi6IG8vzUv09V/i/vI6sV2TULuep+ObF3ftcSXG1l64uSr5toRrjEDqso\nlYG1szUF+VmCVgPBuk1Kq/r2GMFD06B5w5uTw3cDqcBOVdgKrQMeq0U4xyfD8+Q=\n=1dTx\n-----END PGP SIGNATURE-----\n", "payload": "tree 76c37292537685f37df64a03a85e7460cfe92292\nparent 5f7fc5ae68ff5debead06e377153e100b6e9951d\nauthor Florian Diebold <flodiebold@gmail.com> 1623069281 +0200\ncommitter GitHub <noreply@github.com> 1623069281 +0200\n\nClarify label documentation\n\nAlso some other cleanups while I'm there."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc2d286dae5bdca4c846f65ea016c0df2b2d5e83", "html_url": "https://github.com/rust-lang/rust/commit/fc2d286dae5bdca4c846f65ea016c0df2b2d5e83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc2d286dae5bdca4c846f65ea016c0df2b2d5e83/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f7fc5ae68ff5debead06e377153e100b6e9951d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f7fc5ae68ff5debead06e377153e100b6e9951d", "html_url": "https://github.com/rust-lang/rust/commit/5f7fc5ae68ff5debead06e377153e100b6e9951d"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "c727c16bd22acbe469934b76a90c0091f23f076f", "filename": "docs/dev/README.md", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fc2d286dae5bdca4c846f65ea016c0df2b2d5e83/docs%2Fdev%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/fc2d286dae5bdca4c846f65ea016c0df2b2d5e83/docs%2Fdev%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2FREADME.md?ref=fc2d286dae5bdca4c846f65ea016c0df2b2d5e83", "patch": "@@ -1,6 +1,6 @@\n # Contributing Quick Start\n \n-Rust Analyzer is an ordinary Rust project, which is organized as a Cargo workspace, builds on stable and doesn't depend on C libraries.\n+rust-analyzer is an ordinary Rust project, which is organized as a Cargo workspace, builds on stable and doesn't depend on C libraries.\n So, just\n \n ```\n@@ -9,18 +9,18 @@ $ cargo test\n \n should be enough to get you started!\n \n-To learn more about how rust-analyzer works, see [./architecture.md](./architecture.md) document.\n+To learn more about how rust-analyzer works, see [./architecture.md](./architecture.md).\n It also explains the high-level layout of the source code.\n Do skim through that document.\n \n We also publish rustdoc docs to pages: https://rust-analyzer.github.io/rust-analyzer/ide/.\n-Note though, that internal documentation is very incomplete.\n+Note though, that the internal documentation is very incomplete.\n \n Various organizational and process issues are discussed in this document.\n \n # Getting in Touch\n \n-Rust Analyzer is a part of [RLS-2.0 working\n+rust-analyzer is a part of [RLS-2.0 working\n group](https://github.com/rust-lang/compiler-team/tree/6a769c13656c0a6959ebc09e7b1f7c09b86fb9c0/working-groups/rls-2.0).\n Discussion happens in this Zulip stream:\n \n@@ -33,7 +33,7 @@ https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Frust-analyzer\n * [E-has-instructions](https://github.com/rust-analyzer/rust-analyzer/issues?q=is%3Aopen+is%3Aissue+label%3AE-has-instructions)\n   issues have links to the code in question and tests.\n * [Broken Window](https://github.com/rust-analyzer/rust-analyzer/issues?q=is:issue+is:open+label:%22Broken+Window%22)\n-  are issues which are not critical by themselves, but which should be fixed ASAP regardless, to avoid accumulation of technical debt.\n+  are issues which are not necessarily critical by themselves, but which should be fixed ASAP regardless, to avoid accumulation of technical debt.\n * [E-easy](https://github.com/rust-analyzer/rust-analyzer/issues?q=is%3Aopen+is%3Aissue+label%3AE-easy),\n   [E-medium](https://github.com/rust-analyzer/rust-analyzer/issues?q=is%3Aopen+is%3Aissue+label%3AE-medium),\n   [E-hard](https://github.com/rust-analyzer/rust-analyzer/issues?q=is%3Aopen+is%3Aissue+label%3AE-hard),\n@@ -42,7 +42,8 @@ https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Frust-analyzer\n * [S-actionable](https://github.com/rust-analyzer/rust-analyzer/issues?q=is%3Aopen+is%3Aissue+label%3AS-actionable) and\n   [S-unactionable](https://github.com/rust-analyzer/rust-analyzer/issues?q=is%3Aopen+is%3Aissue+label%3AS-unactionable)\n   specify if there are concrete steps to resolve or advance an issue. Roughly, actionable issues need only work to be fixed,\n-  while unactionable ones are effectively wont-fix. Each triaged issue should have one of these labels.\n+  while unactionable ones are blocked either on user feedback (providing a reproducible example), or on larger architectural \n+  work or decisions. Each triaged issue should have one of these labels.\n * [fun](https://github.com/rust-analyzer/rust-analyzer/issues?q=is%3Aopen+is%3Aissue+label%3Afun)\n   is for cool, but probably hard stuff.\n * [Design](https://github.com/rust-analyzer/rust-analyzer/issues?q=is%3Aopen+is%3Aissue+label%Design)\n@@ -206,7 +207,7 @@ Release process is handled by `release`, `dist` and `promote` xtasks, `release`\n ./rust-rust-analyzer  # Note the name!\n ```\n \n-Additionally, it assumes that remote for `rust-analyzer` is called `upstream` (I use `origin` to point to my fork).\n+Additionally, it assumes that the remote for `rust-analyzer` is called `upstream` (I use `origin` to point to my fork).\n \n `release` calls the GitHub API calls to scrape pull request comments and categorize them in the changelog.\n This step uses the `curl` and `jq` applications, which need to be available in `PATH`."}]}