{"sha": "28293d370ffc4270bb6244579166f0df18962951", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MjkzZDM3MGZmYzQyNzBiYjYyNDQ1NzkxNjZmMGRmMTg5NjI5NTE=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2021-05-03T15:16:35Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2021-05-03T15:16:35Z"}, "message": "Add docs and use better naming", "tree": {"sha": "fe1261ad5d053b5f1a60b98456c2f3ecca7452e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe1261ad5d053b5f1a60b98456c2f3ecca7452e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28293d370ffc4270bb6244579166f0df18962951", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28293d370ffc4270bb6244579166f0df18962951", "html_url": "https://github.com/rust-lang/rust/commit/28293d370ffc4270bb6244579166f0df18962951", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28293d370ffc4270bb6244579166f0df18962951/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1679a376f30c5ad8971c0f855074a3f489fee5fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/1679a376f30c5ad8971c0f855074a3f489fee5fa", "html_url": "https://github.com/rust-lang/rust/commit/1679a376f30c5ad8971c0f855074a3f489fee5fa"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "8e5b7204496884bb2131d230763c2c8b00951883", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/28293d370ffc4270bb6244579166f0df18962951/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28293d370ffc4270bb6244579166f0df18962951/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=28293d370ffc4270bb6244579166f0df18962951", "patch": "@@ -87,7 +87,9 @@ pub use crate::{\n     },\n };\n pub use hir::{Documentation, Semantics};\n-pub use ide_assists::{Assist, AssistConfig, AssistId, AssistKind, AssistResolveStrategy};\n+pub use ide_assists::{\n+    Assist, AssistConfig, AssistId, AssistKind, AssistResolveStrategy, SingleResolve,\n+};\n pub use ide_completion::{\n     CompletionConfig, CompletionItem, CompletionItemKind, CompletionRelevance, ImportEdit,\n     InsertTextFormat,"}, {"sha": "5a0047f03731c8f7f84e95b4da805876e816df62", "filename": "crates/ide_assists/src/lib.rs", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/28293d370ffc4270bb6244579166f0df18962951/crates%2Fide_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28293d370ffc4270bb6244579166f0df18962951/crates%2Fide_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Flib.rs?ref=28293d370ffc4270bb6244579166f0df18962951", "patch": "@@ -94,21 +94,36 @@ impl FromStr for AssistKind {\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct AssistId(pub &'static str, pub AssistKind);\n \n-// TODO kb docs\n-#[derive(Debug, Clone)]\n+/// A way to control how many asssist to resolve during the assist resolution.\n+/// When an assist is resolved, its edits are calculated that might be costly to always do by default.\n+#[derive(Debug)]\n pub enum AssistResolveStrategy {\n+    /// No assists should be resolved.\n     None,\n+    /// All assists should be resolved.\n     All,\n-    Single(String, AssistKind),\n+    /// Only a certain assists should be resolved.\n+    Single(SingleResolve),\n+}\n+\n+/// Hold the [`AssistId`] data of a certain assist to resolve.\n+/// The original id object cannot be used due to a `'static` lifetime\n+/// and the requirement to construct this struct dynamically during the resolve handling.\n+#[derive(Debug)]\n+pub struct SingleResolve {\n+    /// The id of the assist.\n+    pub assist_id: String,\n+    // The kind of the assist.\n+    pub assist_kind: AssistKind,\n }\n \n impl AssistResolveStrategy {\n     pub fn should_resolve(&self, id: &AssistId) -> bool {\n         match self {\n             AssistResolveStrategy::None => false,\n             AssistResolveStrategy::All => true,\n-            AssistResolveStrategy::Single(id_to_resolve, kind) => {\n-                id_to_resolve == id.0 && kind == &id.1\n+            AssistResolveStrategy::Single(single_resolve) => {\n+                single_resolve.assist_id == id.0 && single_resolve.assist_kind == id.1\n             }\n         }\n     }"}, {"sha": "304951b7d23f0973e91ed7bbee59da4a7081b4fa", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/28293d370ffc4270bb6244579166f0df18962951/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28293d370ffc4270bb6244579166f0df18962951/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=28293d370ffc4270bb6244579166f0df18962951", "patch": "@@ -10,7 +10,7 @@ use std::{\n use ide::{\n     AnnotationConfig, AssistKind, AssistResolveStrategy, FileId, FilePosition, FileRange,\n     HoverAction, HoverGotoTypeData, Query, RangeInfo, Runnable, RunnableKind, SearchScope,\n-    SourceChange, TextEdit,\n+    SingleResolve, SourceChange, TextEdit,\n };\n use ide_db::SymbolKind;\n use itertools::Itertools;\n@@ -1072,7 +1072,7 @@ pub(crate) fn handle_code_action_resolve(\n     let assists = snap.analysis.assists_with_fixes(\n         &assists_config,\n         &snap.config.diagnostics(),\n-        AssistResolveStrategy::Single(params.id.clone(), assist_kind),\n+        AssistResolveStrategy::Single(SingleResolve { assist_id: params.id.clone(), assist_kind }),\n         frange,\n     )?;\n "}]}