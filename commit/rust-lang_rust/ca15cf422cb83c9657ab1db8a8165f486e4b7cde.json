{"sha": "ca15cf422cb83c9657ab1db8a8165f486e4b7cde", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhMTVjZjQyMmNiODNjOTY1N2FiMWRiOGE4MTY1ZjQ4NmU0YjdjZGU=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-12-24T20:45:58Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-12-26T15:23:40Z"}, "message": "Add visibility in code model for fields", "tree": {"sha": "d276c9dcb29f8f7392c25e89032fe2131ce50dd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d276c9dcb29f8f7392c25e89032fe2131ce50dd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca15cf422cb83c9657ab1db8a8165f486e4b7cde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca15cf422cb83c9657ab1db8a8165f486e4b7cde", "html_url": "https://github.com/rust-lang/rust/commit/ca15cf422cb83c9657ab1db8a8165f486e4b7cde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca15cf422cb83c9657ab1db8a8165f486e4b7cde/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ce809d0fa59ade71b13c200870b1fd5f74ceff4", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ce809d0fa59ade71b13c200870b1fd5f74ceff4", "html_url": "https://github.com/rust-lang/rust/commit/1ce809d0fa59ade71b13c200870b1fd5f74ceff4"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "c5114742bd06bf877cd1439df6a3585772061dcc", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ca15cf422cb83c9657ab1db8a8165f486e4b7cde/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca15cf422cb83c9657ab1db8a8165f486e4b7cde/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=ca15cf422cb83c9657ab1db8a8165f486e4b7cde", "patch": "@@ -118,7 +118,7 @@ impl_froms!(\n     BuiltinType\n );\n \n-pub use hir_def::attr::Attrs;\n+pub use hir_def::{attr::Attrs, visibility::ResolvedVisibility};\n \n impl Module {\n     pub(crate) fn new(krate: Crate, crate_module_id: LocalModuleId) -> Module {\n@@ -255,6 +255,15 @@ impl StructField {\n     }\n }\n \n+impl HasVisibility for StructField {\n+    fn visibility(&self, db: &impl HirDatabase) -> ResolvedVisibility {\n+        let struct_field_id: hir_def::StructFieldId = (*self).into();\n+        let visibility = db.visibility(struct_field_id.into());\n+        let parent_id: hir_def::VariantId = self.parent.into();\n+        visibility.resolve(db, &parent_id.resolver(db))\n+    }\n+}\n+\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct Struct {\n     pub(crate) id: StructId,\n@@ -1041,3 +1050,11 @@ impl<T: Into<AttrDef> + Copy> Docs for T {\n         db.documentation(def.into())\n     }\n }\n+\n+pub trait HasVisibility {\n+    fn visibility(&self, db: &impl HirDatabase) -> ResolvedVisibility;\n+    fn visible_from(&self, db: &impl HirDatabase, module: Module) -> bool {\n+        let vis = self.visibility(db);\n+        vis.visible_from(db, module.id)\n+    }\n+}"}, {"sha": "3d13978d459a4012bdcfb55dcf06b1bb19bc177f", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca15cf422cb83c9657ab1db8a8165f486e4b7cde/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca15cf422cb83c9657ab1db8a8165f486e4b7cde/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=ca15cf422cb83c9657ab1db8a8165f486e4b7cde", "patch": "@@ -40,8 +40,8 @@ mod from_source;\n pub use crate::{\n     code_model::{\n         Adt, AssocItem, AttrDef, Const, Crate, CrateDependency, DefWithBody, Docs, Enum,\n-        EnumVariant, FieldSource, Function, GenericDef, HasAttrs, ImplBlock, Local, MacroDef,\n-        Module, ModuleDef, ScopeDef, Static, Struct, StructField, Trait, Type, TypeAlias,\n+        EnumVariant, FieldSource, Function, GenericDef, HasAttrs, HasVisibility, ImplBlock, Local,\n+        MacroDef, Module, ModuleDef, ScopeDef, Static, Struct, StructField, Trait, Type, TypeAlias,\n         TypeParam, Union, VariantDef,\n     },\n     from_source::FromSource,"}]}