{"sha": "9bfeac708d33056b37d780b948cb1f117cac19af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliZmVhYzcwOGQzMzA1NmIzN2Q3ODBiOTQ4Y2IxZjExN2NhYzE5YWY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-30T16:03:05Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-30T18:07:59Z"}, "message": "Move parentModule to the new Ctx", "tree": {"sha": "b8c6c457728fdf360cae10de9ef5b68ee2548f65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8c6c457728fdf360cae10de9ef5b68ee2548f65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9bfeac708d33056b37d780b948cb1f117cac19af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9bfeac708d33056b37d780b948cb1f117cac19af", "html_url": "https://github.com/rust-lang/rust/commit/9bfeac708d33056b37d780b948cb1f117cac19af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9bfeac708d33056b37d780b948cb1f117cac19af/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5aebf1081dced95a71c674aba65fb5b3e40e6ff1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5aebf1081dced95a71c674aba65fb5b3e40e6ff1", "html_url": "https://github.com/rust-lang/rust/commit/5aebf1081dced95a71c674aba65fb5b3e40e6ff1"}], "stats": {"total": 74, "additions": 37, "deletions": 37}, "files": [{"sha": "03ca582105b8fdbd53f3e6b62047efc13c5213b2", "filename": "editors/code/src/commands/index.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9bfeac708d33056b37d780b948cb1f117cac19af/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "raw_url": "https://github.com/rust-lang/rust/raw/9bfeac708d33056b37d780b948cb1f117cac19af/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts?ref=9bfeac708d33056b37d780b948cb1f117cac19af", "patch": "@@ -4,9 +4,9 @@ import { analyzerStatus } from './analyzer_status';\n import { matchingBrace } from './matching_brace';\n import { joinLines } from './join_lines';\n import { onEnter } from './on_enter';\n+import { parentModule } from './parent_module';\n import * as expandMacro from './expand_macro';\n import * as inlayHints from './inlay_hints';\n-import * as parentModule from './parent_module';\n import * as runnables from './runnables';\n import * as syntaxTree from './syntaxTree';\n "}, {"sha": "2f986009e5601cda80273195a5b2e18fa424906f", "filename": "editors/code/src/commands/parent_module.ts", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/9bfeac708d33056b37d780b948cb1f117cac19af/editors%2Fcode%2Fsrc%2Fcommands%2Fparent_module.ts", "raw_url": "https://github.com/rust-lang/rust/raw/9bfeac708d33056b37d780b948cb1f117cac19af/editors%2Fcode%2Fsrc%2Fcommands%2Fparent_module.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fparent_module.ts?ref=9bfeac708d33056b37d780b948cb1f117cac19af", "patch": "@@ -1,32 +1,32 @@\n import * as vscode from 'vscode';\n \n import * as lc from 'vscode-languageclient';\n-import { Server } from '../server';\n+import { Ctx, Cmd } from '../ctx';\n \n-export async function handle() {\n-    const editor = vscode.window.activeTextEditor;\n-    if (editor == null || editor.document.languageId !== 'rust') {\n-        return;\n-    }\n-    const request: lc.TextDocumentPositionParams = {\n-        textDocument: { uri: editor.document.uri.toString() },\n-        position: Server.client.code2ProtocolConverter.asPosition(\n-            editor.selection.active,\n-        ),\n-    };\n-    const response = await Server.client.sendRequest<lc.Location[]>(\n-        'rust-analyzer/parentModule',\n-        request,\n-    );\n-    const loc = response[0];\n-    if (loc == null) {\n-        return;\n-    }\n-    const uri = Server.client.protocol2CodeConverter.asUri(loc.uri);\n-    const range = Server.client.protocol2CodeConverter.asRange(loc.range);\n+export function parentModule(ctx: Ctx): Cmd {\n+    return async () => {\n+        const editor = ctx.activeRustEditor;\n+        if (!editor) return;\n+\n+        const request: lc.TextDocumentPositionParams = {\n+            textDocument: { uri: editor.document.uri.toString() },\n+            position: ctx.client.code2ProtocolConverter.asPosition(\n+                editor.selection.active,\n+            ),\n+        };\n+        const response = await ctx.client.sendRequest<lc.Location[]>(\n+            'rust-analyzer/parentModule',\n+            request,\n+        );\n+        const loc = response[0];\n+        if (loc == null) return;\n \n-    const doc = await vscode.workspace.openTextDocument(uri);\n-    const e = await vscode.window.showTextDocument(doc);\n-    e.selection = new vscode.Selection(range.start, range.start);\n-    e.revealRange(range, vscode.TextEditorRevealType.InCenter);\n+        const uri = ctx.client.protocol2CodeConverter.asUri(loc.uri);\n+        const range = ctx.client.protocol2CodeConverter.asRange(loc.range);\n+\n+        const doc = await vscode.workspace.openTextDocument(uri);\n+        const e = await vscode.window.showTextDocument(doc);\n+        e.selection = new vscode.Selection(range.start, range.start);\n+        e.revealRange(range, vscode.TextEditorRevealType.InCenter);\n+    }\n }"}, {"sha": "55fedd8bba06eeaf07dd21441edfaf4d29e91b5b", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9bfeac708d33056b37d780b948cb1f117cac19af/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/9bfeac708d33056b37d780b948cb1f117cac19af/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=9bfeac708d33056b37d780b948cb1f117cac19af", "patch": "@@ -19,6 +19,7 @@ export async function activate(context: vscode.ExtensionContext) {\n     ctx.registerCommand('collectGarbage', commands.collectGarbage);\n     ctx.registerCommand('matchingBrace', commands.matchingBrace);\n     ctx.registerCommand('joinLines', commands.joinLines);\n+    ctx.registerCommand('parentModule', commands.parentModule);\n \n     function disposeOnDeactivation(disposable: vscode.Disposable) {\n         context.subscriptions.push(disposable);\n@@ -29,7 +30,6 @@ export async function activate(context: vscode.ExtensionContext) {\n     }\n \n     // Commands are requests from vscode to the language server\n-    registerCommand('rust-analyzer.parentModule', commands.parentModule.handle);\n     registerCommand('rust-analyzer.run', commands.runnables.handle);\n     // Unlike the above this does not send requests to the language server\n     registerCommand('rust-analyzer.runSingle', commands.runnables.handleSingle);\n@@ -59,15 +59,15 @@ export async function activate(context: vscode.ExtensionContext) {\n         string,\n         lc.GenericNotificationHandler,\n     ]> = [\n-            [\n-                'rust-analyzer/publishDecorations',\n-                notifications.publishDecorations.handle,\n-            ],\n-            [\n-                '$/progress',\n-                params => watchStatus.handleProgressNotification(params),\n-            ],\n-        ];\n+        [\n+            'rust-analyzer/publishDecorations',\n+            notifications.publishDecorations.handle,\n+        ],\n+        [\n+            '$/progress',\n+            params => watchStatus.handleProgressNotification(params),\n+        ],\n+    ];\n     const syntaxTreeContentProvider = new SyntaxTreeContentProvider();\n     const expandMacroContentProvider = new ExpandMacroContentProvider();\n "}]}