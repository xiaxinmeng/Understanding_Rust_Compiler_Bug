{"sha": "7cbcbccc7888b9a515cbebe2cd20fd3eebec463b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjYmNiY2NjNzg4OGI5YTUxNWNiZWJlMmNkMjBmZDNlZWJlYzQ2M2I=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-15T20:11:53Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-15T20:11:53Z"}, "message": "internal: switch some tests to minicore", "tree": {"sha": "9511e5d7155419ca9c2974869e8fd7225e1fc140", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9511e5d7155419ca9c2974869e8fd7225e1fc140"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cbcbccc7888b9a515cbebe2cd20fd3eebec463b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cbcbccc7888b9a515cbebe2cd20fd3eebec463b", "html_url": "https://github.com/rust-lang/rust/commit/7cbcbccc7888b9a515cbebe2cd20fd3eebec463b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cbcbccc7888b9a515cbebe2cd20fd3eebec463b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0798cce9e564774b663fd965aaf2ef7e5778cb3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0798cce9e564774b663fd965aaf2ef7e5778cb3f", "html_url": "https://github.com/rust-lang/rust/commit/0798cce9e564774b663fd965aaf2ef7e5778cb3f"}], "stats": {"total": 27, "additions": 9, "deletions": 18}, "files": [{"sha": "14cf94d607763de31f3762773b7ce0c80d7d6964", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7cbcbccc7888b9a515cbebe2cd20fd3eebec463b/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cbcbccc7888b9a515cbebe2cd20fd3eebec463b/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=7cbcbccc7888b9a515cbebe2cd20fd3eebec463b", "patch": "@@ -3000,29 +3000,24 @@ fn foo(ar$0g: &impl Foo + Bar<S>) {}\n     fn test_hover_async_block_impl_trait_has_goto_type_action() {\n         check_actions(\n             r#\"\n+//- minicore: future\n struct S;\n fn foo() {\n     let fo$0o = async { S };\n }\n-\n-#[prelude_import] use future::*;\n-mod future {\n-    #[lang = \"future_trait\"]\n-    pub trait Future { type Output; }\n-}\n \"#,\n             expect![[r#\"\n                 [\n                     GoToType(\n                         [\n                             HoverGotoTypeData {\n-                                mod_path: \"test::future::Future\",\n+                                mod_path: \"core::future::Future\",\n                                 nav: NavigationTarget {\n                                     file_id: FileId(\n-                                        0,\n+                                        1,\n                                     ),\n-                                    full_range: 101..163,\n-                                    focus_range: 140..146,\n+                                    full_range: 244..426,\n+                                    focus_range: 283..289,\n                                     name: \"Future\",\n                                     kind: Trait,\n                                     description: \"pub trait Future\","}, {"sha": "3eb51e80b3f94dfb528e01ba472363c37bbc3a38", "filename": "crates/ide_completion/src/render.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7cbcbccc7888b9a515cbebe2cd20fd3eebec463b/crates%2Fide_completion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cbcbccc7888b9a515cbebe2cd20fd3eebec463b/crates%2Fide_completion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender.rs?ref=7cbcbccc7888b9a515cbebe2cd20fd3eebec463b", "patch": "@@ -1152,16 +1152,11 @@ fn main() {\n     fn suggest_deref() {\n         check_relevance(\n             r#\"\n-#[lang = \"deref\"]\n-trait Deref {\n-    type Target;\n-    fn deref(&self) -> &Self::Target;\n-}\n-\n+//- minicore: deref\n struct S;\n struct T(S);\n \n-impl Deref for T {\n+impl core::ops::Deref for T {\n     type Target = S;\n \n     fn deref(&self) -> &Self::Target {\n@@ -1185,8 +1180,9 @@ fn main() {\n                 st T []\n                 st S []\n                 fn main() []\n-                tt Deref []\n                 fn foo(\u2026) []\n+                md core []\n+                tt Sized []\n             \"#]],\n         )\n     }"}]}