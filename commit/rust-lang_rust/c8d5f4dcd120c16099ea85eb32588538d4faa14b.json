{"sha": "c8d5f4dcd120c16099ea85eb32588538d4faa14b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4ZDVmNGRjZDEyMGMxNjA5OWVhODVlYjMyNTg4NTM4ZDRmYWExNGI=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-01-27T11:50:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-27T11:50:47Z"}, "message": "Rollup merge of #67928 - XAMPPRocky:relnotes-1.41.0, r=pietroalbini\n\nUpdate RELEASES.md for 1.41.0\n\n### [Rendered](https://github.com/XAMPPRocky/rust/blob/relnotes-1.41.0/RELEASES.md)\n\ncc @rust-lang/release", "tree": {"sha": "632475966caec7c326b27efa4c577e4b4588e594", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/632475966caec7c326b27efa4c577e4b4588e594"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8d5f4dcd120c16099ea85eb32588538d4faa14b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeLs6YCRBK7hj4Ov3rIwAAdHIIAEh5xF3WflWJ8q2h/7fSmVvl\nnM2yIS3SQCXiPZnMNwzxYyh3yZmqlKzG6AudCjq5dQ7i7fiB30qVQerelMj05FQW\nzloN/UNLZy6Tc5LTEhZzJCpp0A5klMVPQsKUOwDvkbFZ+TN+vt9ubT38J+9TdKfG\nkc+yH2uSa5bPOXOSlR4POgQAA0n1JF9LjA1T+qMW82PjzJdmDUaGFovwQ/CUk8YH\nsDpdq8LXI4NzOa6HFwsBFKGDUTJRNCAukd4A6jgppHq3rbHHW1eFbEAUA8Z54703\nhWUbxd0CtaSJiBY60F6varzTQCROsO64gW87GzRiePOiCCNOlEiXBmd6/EL8xk8=\n=jNGH\n-----END PGP SIGNATURE-----\n", "payload": "tree 632475966caec7c326b27efa4c577e4b4588e594\nparent 320ada6479b3e29c7d9a66bc56ac44c2d2b57566\nparent 5918e9f02595a4b9ffacc4ecf5a0d470528a3824\nauthor Pietro Albini <pietro@pietroalbini.org> 1580125847 +0100\ncommitter GitHub <noreply@github.com> 1580125847 +0100\n\nRollup merge of #67928 - XAMPPRocky:relnotes-1.41.0, r=pietroalbini\n\nUpdate RELEASES.md for 1.41.0\n\n### [Rendered](https://github.com/XAMPPRocky/rust/blob/relnotes-1.41.0/RELEASES.md)\n\ncc @rust-lang/release\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8d5f4dcd120c16099ea85eb32588538d4faa14b", "html_url": "https://github.com/rust-lang/rust/commit/c8d5f4dcd120c16099ea85eb32588538d4faa14b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8d5f4dcd120c16099ea85eb32588538d4faa14b/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "320ada6479b3e29c7d9a66bc56ac44c2d2b57566", "url": "https://api.github.com/repos/rust-lang/rust/commits/320ada6479b3e29c7d9a66bc56ac44c2d2b57566", "html_url": "https://github.com/rust-lang/rust/commit/320ada6479b3e29c7d9a66bc56ac44c2d2b57566"}, {"sha": "5918e9f02595a4b9ffacc4ecf5a0d470528a3824", "url": "https://api.github.com/repos/rust-lang/rust/commits/5918e9f02595a4b9ffacc4ecf5a0d470528a3824", "html_url": "https://github.com/rust-lang/rust/commit/5918e9f02595a4b9ffacc4ecf5a0d470528a3824"}], "stats": {"total": 115, "additions": 115, "deletions": 0}, "files": [{"sha": "02edb0cf83c985361888559f5782ebf0a792ef1c", "filename": "RELEASES.md", "status": "modified", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/c8d5f4dcd120c16099ea85eb32588538d4faa14b/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/c8d5f4dcd120c16099ea85eb32588538d4faa14b/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=c8d5f4dcd120c16099ea85eb32588538d4faa14b", "patch": "@@ -1,3 +1,118 @@\n+Version 1.41.0 (2020-01-30)\n+===========================\n+\n+Language\n+--------\n+\n+- [You can now pass type parameters to foreign items when implementing\n+  traits.][65879] E.g. You can now write `impl<T> From<Foo> for Vec<T> {}`.\n+- [You can now arbitrarily nest receiver types in the `self` position.][64325] E.g. you can\n+  now write `fn foo(self: Box<Box<Self>>) {}`. Previously only `Self`, `&Self`,\n+  `&mut Self`, `Arc<Self>`, `Rc<Self>`, and `Box<Self>` were allowed.\n+- [You can now use any valid identifier in a `format_args` macro.][66847]\n+  Previously identifiers starting with an underscore were not allowed.\n+- [Visibility modifiers (e.g. `pub`) are now syntactically allowed on trait items and\n+  enum variants.][66183] These are still rejected semantically, but\n+  can be seen and parsed by procedural macros and conditional compilation.\n+\n+Compiler\n+--------\n+\n+- [Rustc will now warn if you have unused loop `'label`s.][66325]\n+- [Removed support for the `i686-unknown-dragonfly` target.][67255]\n+- [Added tier 3 support\\* for the `riscv64gc-unknown-linux-gnu` target.][66661]\n+- [You can now pass an arguments file passing the `@path` syntax\n+  to rustc.][66172] Note that the format differs somewhat from what is\n+  found in other tooling; please see [the documentation][argfile-docs] for\n+  more information.\n+- [You can now provide `--extern` flag without a path, indicating that it is\n+  available from the search path or specified with an `-L` flag.][64882]\n+\n+\\* Refer to Rust's [platform support page][forge-platform-support] for more\n+information on Rust's tiered platform support.\n+\n+[argfile-docs]: https://doc.rust-lang.org/nightly/rustc/command-line-arguments.html#path-load-command-line-flags-from-a-path\n+\n+Libraries\n+---------\n+\n+- [The `core::panic` module is now stable.][66771] It was already stable\n+  through `std`.\n+- [`NonZero*` numerics now implement `From<NonZero*>` if it's a smaller integer\n+  width.][66277] E.g. `NonZeroU16` now implements `From<NonZeroU8>`.\n+- [`MaybeUninit<T>` now implements `fmt::Debug`.][65013]\n+\n+Stabilized APIs\n+---------------\n+\n+- [`Result::map_or`]\n+- [`Result::map_or_else`]\n+- [`std::rc::Weak::weak_count`]\n+- [`std::rc::Weak::strong_count`]\n+- [`std::sync::Weak::weak_count`]\n+- [`std::sync::Weak::strong_count`]\n+\n+Cargo\n+-----\n+\n+- [Cargo will now document all the private items for binary crates\n+  by default.][cargo/7593]\n+- [`cargo-install` will now reinstall the package if it detects that it is out\n+  of date.][cargo/7560]\n+- [Cargo.lock now uses a more git friendly format that should help to reduce\n+  merge conflicts.][cargo/7579]\n+- [You can now override specific dependencies's build settings][cargo/7591] E.g.\n+  `[profile.dev.overrides.image] opt-level = 2` sets the `image` crate's\n+  optimisation level to `2` for debug builds. You can also use\n+  `[profile.<profile>.build_overrides]` to override build scripts and\n+  their dependencies.\n+\n+Misc\n+----\n+\n+- [You can now specify `edition` in documentation code blocks to compile the block\n+  for that edition.][66238] E.g. `edition2018` tells rustdoc that the code sample\n+  should be compiled the 2018 edition of Rust.\n+- [You can now provide custom themes to rustdoc with `--theme`, and check the\n+  current theme with `--check-theme`.][54733]\n+- [You can use `#[cfg(doc)]` to compile an item when building documentation.][61351]\n+\n+Compatibility Notes\n+-------------------\n+\n+- [As previously announced 1.41.0 will be the last tier 1 release for 32-bit\n+  Apple targets.][apple-32bit-drop] This means that the source code is still\n+  available to build, but the targets are no longer being tested and release\n+  binaries for those platforms will no longer be distributed by the Rust project.\n+  Please refer to the linked blog post for more information.\n+\n+[54733]: https://github.com/rust-lang/rust/pull/54733/\n+[61351]: https://github.com/rust-lang/rust/pull/61351/\n+[67255]: https://github.com/rust-lang/rust/pull/67255/\n+[66661]: https://github.com/rust-lang/rust/pull/66661/\n+[66771]: https://github.com/rust-lang/rust/pull/66771/\n+[66847]: https://github.com/rust-lang/rust/pull/66847/\n+[66238]: https://github.com/rust-lang/rust/pull/66238/\n+[66277]: https://github.com/rust-lang/rust/pull/66277/\n+[66325]: https://github.com/rust-lang/rust/pull/66325/\n+[66172]: https://github.com/rust-lang/rust/pull/66172/\n+[66183]: https://github.com/rust-lang/rust/pull/66183/\n+[65879]: https://github.com/rust-lang/rust/pull/65879/\n+[65013]: https://github.com/rust-lang/rust/pull/65013/\n+[64882]: https://github.com/rust-lang/rust/pull/64882/\n+[64325]: https://github.com/rust-lang/rust/pull/64325/\n+[cargo/7560]: https://github.com/rust-lang/cargo/pull/7560/\n+[cargo/7579]: https://github.com/rust-lang/cargo/pull/7579/\n+[cargo/7591]: https://github.com/rust-lang/cargo/pull/7591/\n+[cargo/7593]: https://github.com/rust-lang/cargo/pull/7593/\n+[`Result::map_or_else`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.map_or_else\n+[`Result::map_or`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.map_or\n+[`std::rc::Weak::weak_count`]: https://doc.rust-lang.org/std/rc/struct.Weak.html#method.weak_count\n+[`std::rc::Weak::strong_count`]: https://doc.rust-lang.org/std/rc/struct.Weak.html#method.strong_count\n+[`std::sync::Weak::weak_count`]: https://doc.rust-lang.org/std/sync/struct.Weak.html#method.weak_count\n+[`std::sync::Weak::strong_count`]: https://doc.rust-lang.org/std/sync/struct.Weak.html#method.strong_count\n+[apple-32bit-drop]: https://blog.rust-lang.org/2020/01/03/reducing-support-for-32-bit-apple-targets.html\n+\n Version 1.40.0 (2019-12-19)\n ===========================\n "}]}