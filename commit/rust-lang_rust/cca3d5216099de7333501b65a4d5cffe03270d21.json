{"sha": "cca3d5216099de7333501b65a4d5cffe03270d21", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjYTNkNTIxNjA5OWRlNzMzMzUwMWI2NWE0ZDVjZmZlMDMyNzBkMjE=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-03-06T23:15:46Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-03-07T20:48:17Z"}, "message": "libtest: declare variables as floats instead of casting them (clippy::unnecessary_cast)", "tree": {"sha": "cee89fecf93c354c3d5e8b367f367801bd2e75bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cee89fecf93c354c3d5e8b367f367801bd2e75bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cca3d5216099de7333501b65a4d5cffe03270d21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cca3d5216099de7333501b65a4d5cffe03270d21", "html_url": "https://github.com/rust-lang/rust/commit/cca3d5216099de7333501b65a4d5cffe03270d21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cca3d5216099de7333501b65a4d5cffe03270d21/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d7faaf6bd3bae11ac8098f2c0d931994b791875", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d7faaf6bd3bae11ac8098f2c0d931994b791875", "html_url": "https://github.com/rust-lang/rust/commit/0d7faaf6bd3bae11ac8098f2c0d931994b791875"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "077005371c0cf1c70573a890a510500852aaf9b0", "filename": "src/libtest/stats.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/cca3d5216099de7333501b65a4d5cffe03270d21/src%2Flibtest%2Fstats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cca3d5216099de7333501b65a4d5cffe03270d21/src%2Flibtest%2Fstats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Fstats.rs?ref=cca3d5216099de7333501b65a4d5cffe03270d21", "patch": "@@ -204,7 +204,7 @@ impl Stats for [f64] {\n     }\n \n     fn median(&self) -> f64 {\n-        self.percentile(50 as f64)\n+        self.percentile(50_f64)\n     }\n \n     fn var(&self) -> f64 {\n@@ -230,7 +230,7 @@ impl Stats for [f64] {\n     }\n \n     fn std_dev_pct(&self) -> f64 {\n-        let hundred = 100 as f64;\n+        let hundred = 100_f64;\n         (self.std_dev() / self.mean()) * hundred\n     }\n \n@@ -244,7 +244,7 @@ impl Stats for [f64] {\n     }\n \n     fn median_abs_dev_pct(&self) -> f64 {\n-        let hundred = 100 as f64;\n+        let hundred = 100_f64;\n         (self.median_abs_dev() / self.median()) * hundred\n     }\n \n@@ -257,11 +257,11 @@ impl Stats for [f64] {\n     fn quartiles(&self) -> (f64, f64, f64) {\n         let mut tmp = self.to_vec();\n         local_sort(&mut tmp);\n-        let first = 25f64;\n+        let first = 25_f64;\n         let a = percentile_of_sorted(&tmp, first);\n-        let second = 50f64;\n+        let second = 50_f64;\n         let b = percentile_of_sorted(&tmp, second);\n-        let third = 75f64;\n+        let third = 75_f64;\n         let c = percentile_of_sorted(&tmp, third);\n         (a, b, c)\n     }\n@@ -281,7 +281,7 @@ fn percentile_of_sorted(sorted_samples: &[f64], pct: f64) -> f64 {\n     }\n     let zero: f64 = 0.0;\n     assert!(zero <= pct);\n-    let hundred = 100f64;\n+    let hundred = 100_f64;\n     assert!(pct <= hundred);\n     if pct == hundred {\n         return sorted_samples[sorted_samples.len() - 1];\n@@ -307,7 +307,7 @@ pub fn winsorize(samples: &mut [f64], pct: f64) {\n     let mut tmp = samples.to_vec();\n     local_sort(&mut tmp);\n     let lo = percentile_of_sorted(&tmp, pct);\n-    let hundred = 100 as f64;\n+    let hundred = 100_f64;\n     let hi = percentile_of_sorted(&tmp, hundred - pct);\n     for samp in samples {\n         if *samp > hi {"}]}