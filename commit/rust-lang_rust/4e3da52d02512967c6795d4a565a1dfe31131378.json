{"sha": "4e3da52d02512967c6795d4a565a1dfe31131378", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlM2RhNTJkMDI1MTI5NjdjNjc5NWQ0YTU2NWExZGZlMzExMzEzNzg=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-03T08:11:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-03T08:11:26Z"}, "message": "Rollup merge of #50302 - GuillaumeGomez:add-query-search-order-check, r=QuietMisdreavus\n\nAdd query search order check\n\nFixes #50180.\n\nr? @QuietMisdreavus", "tree": {"sha": "d1035211d2e75df78c2fe8248833acdc4725f6d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1035211d2e75df78c2fe8248833acdc4725f6d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e3da52d02512967c6795d4a565a1dfe31131378", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa6sQuCRBK7hj4Ov3rIwAAdHIIACMqH2rmEizPREK7yi0yjgBg\n/zdm5ufShQcvIT6VfAbV22Z4ylGAiDktUq0lovMCc7gj21Crr7cCjiI1A47K4Ki5\naoStiZWrUEzNFtAUvnsf7hnYAs7L7ULq9gebgJ/bSt3f+hiyxu7RykGcaHuDUzdN\ncZdEATf5YI8aujLwwKfU92YTjESRnn6sYZlkWLqJpaU3DDaZUB7d3MnKblsJjEHp\nlNv08qsr+m6G27xiVwHcFappHiE6eZ8i51ETVuYfF1buKFqu+U0tPICoUNxaejBL\nqxHoQx+NoghomtorSsjCwdFpECZV9676CSZRrTBOqdgN5Z9J6ZBypfp6tOP4+R8=\n=w0Jd\n-----END PGP SIGNATURE-----\n", "payload": "tree d1035211d2e75df78c2fe8248833acdc4725f6d5\nparent 427c5487493fbd5e96e81b7d3ba54784e0805df7\nparent 00bbda16a72eab1cf3418f9021329915eddb267c\nauthor kennytm <kennytm@gmail.com> 1525335086 +0800\ncommitter GitHub <noreply@github.com> 1525335086 +0800\n\nRollup merge of #50302 - GuillaumeGomez:add-query-search-order-check, r=QuietMisdreavus\n\nAdd query search order check\n\nFixes #50180.\n\nr? @QuietMisdreavus\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e3da52d02512967c6795d4a565a1dfe31131378", "html_url": "https://github.com/rust-lang/rust/commit/4e3da52d02512967c6795d4a565a1dfe31131378", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e3da52d02512967c6795d4a565a1dfe31131378/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "427c5487493fbd5e96e81b7d3ba54784e0805df7", "url": "https://api.github.com/repos/rust-lang/rust/commits/427c5487493fbd5e96e81b7d3ba54784e0805df7", "html_url": "https://github.com/rust-lang/rust/commit/427c5487493fbd5e96e81b7d3ba54784e0805df7"}, {"sha": "00bbda16a72eab1cf3418f9021329915eddb267c", "url": "https://api.github.com/repos/rust-lang/rust/commits/00bbda16a72eab1cf3418f9021329915eddb267c", "html_url": "https://github.com/rust-lang/rust/commit/00bbda16a72eab1cf3418f9021329915eddb267c"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "93a04e31985bac705acb4cb8713c71d92dba1f69", "filename": "src/test/rustdoc-js/alias.js", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e3da52d02512967c6795d4a565a1dfe31131378/src%2Ftest%2Frustdoc-js%2Falias.js", "raw_url": "https://github.com/rust-lang/rust/raw/4e3da52d02512967c6795d4a565a1dfe31131378/src%2Ftest%2Frustdoc-js%2Falias.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js%2Falias.js?ref=4e3da52d02512967c6795d4a565a1dfe31131378", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-order\n+\n const QUERY = '[';\n \n const EXPECTED = {"}, {"sha": "d7ba1253eabe0ddb377353944d65e89f949ae058", "filename": "src/test/rustdoc-js/basic.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e3da52d02512967c6795d4a565a1dfe31131378/src%2Ftest%2Frustdoc-js%2Fbasic.js", "raw_url": "https://github.com/rust-lang/rust/raw/4e3da52d02512967c6795d4a565a1dfe31131378/src%2Ftest%2Frustdoc-js%2Fbasic.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js%2Fbasic.js?ref=4e3da52d02512967c6795d4a565a1dfe31131378", "patch": "@@ -13,8 +13,8 @@ const QUERY = 'String';\n const EXPECTED = {\n     'others': [\n         { 'path': 'std::string', 'name': 'String' },\n-        { 'path': 'std::ffi', 'name': 'OsString' },\n         { 'path': 'std::ffi', 'name': 'CString' },\n+        { 'path': 'std::ffi', 'name': 'OsString' },\n     ],\n     'in_args': [\n         { 'path': 'std::str', 'name': 'eq' },"}, {"sha": "1c79443dedf35551319ea138ec6580470e3162af", "filename": "src/tools/rustdoc-js/tester.js", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4e3da52d02512967c6795d4a565a1dfe31131378/src%2Ftools%2Frustdoc-js%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/4e3da52d02512967c6795d4a565a1dfe31131378/src%2Ftools%2Frustdoc-js%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-js%2Ftester.js?ref=4e3da52d02512967c6795d4a565a1dfe31131378", "patch": "@@ -87,6 +87,7 @@ function loadContent(content) {\n     var Module = module.constructor;\n     var m = new Module();\n     m._compile(content, \"tmp.js\");\n+    m.exports.ignore_order = content.indexOf(\"\\n// ignore-order\\n\") !== -1;\n     return m.exports;\n }\n \n@@ -130,10 +131,10 @@ function lookForEntry(entry, data) {\n             }\n         }\n         if (allGood === true) {\n-            return true;\n+            return i;\n         }\n     }\n-    return false;\n+    return null;\n }\n \n function main(argv) {\n@@ -177,6 +178,7 @@ function main(argv) {\n                                'exports.QUERY = QUERY;exports.EXPECTED = EXPECTED;');\n         const expected = loadedFile.EXPECTED;\n         const query = loadedFile.QUERY;\n+        const ignore_order = loadedFile.ignore_order;\n         var results = loaded.execSearch(loaded.getQuery(query), index);\n         process.stdout.write('Checking \"' + file + '\" ... ');\n         var error_text = [];\n@@ -189,13 +191,17 @@ function main(argv) {\n                 break;\n             }\n             var entry = expected[key];\n-            var found = false;\n+            var prev_pos = 0;\n             for (var i = 0; i < entry.length; ++i) {\n-                if (lookForEntry(entry[i], results[key]) === true) {\n-                    found = true;\n-                } else {\n+                var entry_pos = lookForEntry(entry[i], results[key]);\n+                if (entry_pos === null) {\n                     error_text.push(\"==> Result not found in '\" + key + \"': '\" +\n                                     JSON.stringify(entry[i]) + \"'\");\n+                } else if (entry_pos < prev_pos && ignore_order === false) {\n+                    error_text.push(\"==> '\" + JSON.stringify(entry[i]) + \"' was supposed to be \" +\n+                                    \" before '\" + JSON.stringify(results[key][entry_pos]) + \"'\");\n+                } else {\n+                    prev_pos = entry_pos;\n                 }\n             }\n         }"}]}