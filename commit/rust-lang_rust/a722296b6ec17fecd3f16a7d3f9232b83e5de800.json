{"sha": "a722296b6ec17fecd3f16a7d3f9232b83e5de800", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3MjIyOTZiNmVjMTdmZWNkM2YxNmE3ZDNmOTIzMmI4M2U1ZGU4MDA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-18T17:17:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-18T17:17:35Z"}, "message": "Auto merge of #50653 - oli-obk:bad_const, r=cramertj\n\nMake the `const_err` lint `deny`-by-default\n\nAt best these things are runtime panics (debug mode) or overflows (release mode). More likely they are public constants that are unused in the crate declaring them.\n\nThis is not a breaking change, as dependencies won't break and root crates can `#![warn(const_err)]`, though I don't know why anyone would do that.", "tree": {"sha": "521e4fcc893a2063b165a556ee86d72788ce02a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/521e4fcc893a2063b165a556ee86d72788ce02a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a722296b6ec17fecd3f16a7d3f9232b83e5de800", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a722296b6ec17fecd3f16a7d3f9232b83e5de800", "html_url": "https://github.com/rust-lang/rust/commit/a722296b6ec17fecd3f16a7d3f9232b83e5de800", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a722296b6ec17fecd3f16a7d3f9232b83e5de800/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba64edb3edb9d54f24507255d6aaca5a567e2f40", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba64edb3edb9d54f24507255d6aaca5a567e2f40", "html_url": "https://github.com/rust-lang/rust/commit/ba64edb3edb9d54f24507255d6aaca5a567e2f40"}, {"sha": "1788af357a425b9c8139b2e3861f6ac6810fa008", "url": "https://api.github.com/repos/rust-lang/rust/commits/1788af357a425b9c8139b2e3861f6ac6810fa008", "html_url": "https://github.com/rust-lang/rust/commit/1788af357a425b9c8139b2e3861f6ac6810fa008"}], "stats": {"total": 153, "additions": 95, "deletions": 58}, "files": [{"sha": "c55c71f85dab78582fd0c433c28d74846a96bcc3", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -27,7 +27,7 @@ declare_lint! {\n \n declare_lint! {\n     pub CONST_ERR,\n-    Warn,\n+    Deny,\n     \"constant evaluation detected erroneous expression\"\n }\n "}, {"sha": "91007fcd63a28b3d6c0cb0b1585215449bdd0287", "filename": "src/test/compile-fail/array_const_index-0.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fcompile-fail%2Farray_const_index-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fcompile-fail%2Farray_const_index-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farray_const_index-0.rs?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -10,9 +10,8 @@\n \n const A: &'static [i32] = &[];\n const B: i32 = (&A)[1];\n-//~^ ERROR constant evaluation error\n-//~| index out of bounds: the len is 0 but the index is 1\n-//~| WARN this constant cannot be used\n+//~^ index out of bounds: the len is 0 but the index is 1\n+//~| ERROR this constant cannot be used\n \n fn main() {\n     let _ = B;"}, {"sha": "66739d308a70fd99b1c3bbb528f16d0ed9e3aff4", "filename": "src/test/compile-fail/array_const_index-1.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fcompile-fail%2Farray_const_index-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fcompile-fail%2Farray_const_index-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farray_const_index-1.rs?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -10,9 +10,8 @@\n \n const A: [i32; 0] = [];\n const B: i32 = A[1];\n-//~^ ERROR constant evaluation error\n-//~| index out of bounds: the len is 0 but the index is 1\n-//~| WARN this constant cannot be used\n+//~^ index out of bounds: the len is 0 but the index is 1\n+//~| ERROR this constant cannot be used\n \n fn main() {\n     let _ = B;"}, {"sha": "6d51ff30998096abdc88cbee8f975af62ec8000d", "filename": "src/test/compile-fail/const-slice-oob.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fcompile-fail%2Fconst-slice-oob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fcompile-fail%2Fconst-slice-oob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-slice-oob.rs?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -12,9 +12,8 @@\n \n const FOO: &'static[u32] = &[1, 2, 3];\n const BAR: u32 = FOO[5];\n-//~^ ERROR constant evaluation error [E0080]\n-//~| index out of bounds: the len is 3 but the index is 5\n-//~| WARN this constant cannot be used\n+//~^ index out of bounds: the len is 3 but the index is 5\n+//~| ERROR this constant cannot be used\n \n fn main() {\n     let _ = BAR;"}, {"sha": "7315616860293c17389097a4ebbce2e4de8aab85", "filename": "src/test/compile-fail/eval-enum.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fcompile-fail%2Feval-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fcompile-fail%2Feval-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Feval-enum.rs?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -12,11 +12,11 @@ enum Test {\n     DivZero = 1/0,\n     //~^ attempt to divide by zero\n     //~| ERROR constant evaluation error\n-    //~| WARN constant evaluation error\n+    //~| ERROR constant evaluation error\n     RemZero = 1%0,\n     //~^ attempt to calculate the remainder with a divisor of zero\n     //~| ERROR constant evaluation error\n-    //~| WARN constant evaluation error\n+    //~| ERROR constant evaluation error\n }\n \n fn main() {}"}, {"sha": "1ea436d8ad19200fb9873f4a99e7522e2a615886", "filename": "src/test/incremental/warnings-reemitted.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fincremental%2Fwarnings-reemitted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fincremental%2Fwarnings-reemitted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fwarnings-reemitted.rs?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -13,6 +13,7 @@\n // compile-pass\n \n #![allow(warnings)]\n+#![warn(const_err)]\n \n fn main() {\n     255u8 + 1; //~ WARNING this expression will panic at run-time"}, {"sha": "584701410ef83a4fff8b623876b80d1807f7bb58", "filename": "src/test/run-fail/overflowing-add.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Frun-fail%2Foverflowing-add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Frun-fail%2Foverflowing-add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-add.rs?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -11,6 +11,8 @@\n // error-pattern:thread 'main' panicked at 'attempt to add with overflow'\n // compile-flags: -C debug-assertions\n \n+#![allow(const_err)]\n+\n fn main() {\n     let _x = 200u8 + 200u8 + 200u8;\n }"}, {"sha": "5d6f59e02296b3d60a4cf960ce0463de1a24bb38", "filename": "src/test/run-fail/overflowing-mul.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Frun-fail%2Foverflowing-mul.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Frun-fail%2Foverflowing-mul.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-mul.rs?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -11,6 +11,8 @@\n // error-pattern:thread 'main' panicked at 'attempt to multiply with overflow'\n // compile-flags: -C debug-assertions\n \n+#![allow(const_err)]\n+\n fn main() {\n     let x = 200u8 * 4;\n }"}, {"sha": "e7c518f1286fb08ed68dec5b3533c46f4448fc7a", "filename": "src/test/run-fail/overflowing-neg.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Frun-fail%2Foverflowing-neg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Frun-fail%2Foverflowing-neg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-neg.rs?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -11,6 +11,8 @@\n // error-pattern:thread 'main' panicked at 'attempt to negate with overflow'\n // compile-flags: -C debug-assertions\n \n+#![allow(const_err)]\n+\n fn main() {\n     let _x = -std::i8::MIN;\n }"}, {"sha": "404921a1af5525a2ed58c7c49e12d84381d2ca02", "filename": "src/test/run-fail/overflowing-sub.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Frun-fail%2Foverflowing-sub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Frun-fail%2Foverflowing-sub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Foverflowing-sub.rs?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -11,6 +11,8 @@\n // error-pattern:thread 'main' panicked at 'attempt to subtract with overflow'\n // compile-flags: -C debug-assertions\n \n+#![allow(const_err)]\n+\n fn main() {\n     let _x = 42u8 - (42u8 + 1);\n }"}, {"sha": "63f33cafaf827f9440d3e3411a85dee82a3e678d", "filename": "src/test/ui/const-eval-overflow-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval-overflow-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval-overflow-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval-overflow-2.rs?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -11,7 +11,7 @@\n // Evaluation of constants in refutable patterns goes through\n // different compiler control-flow paths.\n \n-#![allow(unused_imports, warnings)]\n+#![allow(unused_imports, warnings, const_err)]\n \n use std::fmt;\n use std::{i8, i16, i32, i64, isize};"}, {"sha": "ed14036b0b4cb85d47e6325ae5702bf5d2b4f4b1", "filename": "src/test/ui/const-eval-overflow-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval-overflow-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval-overflow-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval-overflow-4.rs?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -22,7 +22,7 @@ use std::{u8, u16, u32, u64, usize};\n const A_I8_T\n     : [u32; (i8::MAX as i8 + 1i8) as usize]\n     //~^ ERROR E0080\n-    //~| WARN attempt to add with overflow\n+    //~| ERROR attempt to add with overflow\n     = [0; (i8::MAX as usize) + 1];\n \n fn main() {"}, {"sha": "fc4762f0554f7828e09c9133e3befac80052f3bb", "filename": "src/test/ui/const-eval-overflow-4.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval-overflow-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval-overflow-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval-overflow-4.stderr?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -1,17 +1,17 @@\n-warning: attempt to add with overflow\n+error: attempt to add with overflow\n   --> $DIR/const-eval-overflow-4.rs:23:13\n    |\n LL |     : [u32; (i8::MAX as i8 + 1i8) as usize]\n    |             ^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: #[warn(const_err)] on by default\n+   = note: #[deny(const_err)] on by default\n \n error[E0080]: constant evaluation error\n   --> $DIR/const-eval-overflow-4.rs:23:13\n    |\n LL |     : [u32; (i8::MAX as i8 + 1i8) as usize]\n    |             ^^^^^^^^^^^^^^^^^^^^^ attempt to add with overflow\n \n-error: aborting due to previous error\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "8952a8386d7b8100bbcdb5f4d89796fc8343d214", "filename": "src/test/ui/const-eval/conditional_array_execution.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fconditional_array_execution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fconditional_array_execution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fconditional_array_execution.rs?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-pass\n+#![warn(const_err)]\n \n const X: u32 = 5;\n const Y: u32 = 6;"}, {"sha": "5cf73b9fad66df9e23b5c416a71e728d753cc4d9", "filename": "src/test/ui/const-eval/conditional_array_execution.stderr", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fconditional_array_execution.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fconditional_array_execution.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fconditional_array_execution.stderr?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -1,19 +1,23 @@\n warning: attempt to subtract with overflow\n-  --> $DIR/conditional_array_execution.rs:15:19\n+  --> $DIR/conditional_array_execution.rs:16:19\n    |\n LL | const FOO: u32 = [X - Y, Y - X][(X < Y) as usize];\n    |                   ^^^^^\n    |\n-   = note: #[warn(const_err)] on by default\n+note: lint level defined here\n+  --> $DIR/conditional_array_execution.rs:12:9\n+   |\n+LL | #![warn(const_err)]\n+   |         ^^^^^^^^^\n \n warning: this constant cannot be used\n-  --> $DIR/conditional_array_execution.rs:15:1\n+  --> $DIR/conditional_array_execution.rs:16:1\n    |\n LL | const FOO: u32 = [X - Y, Y - X][(X < Y) as usize];\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attempt to subtract with overflow\n \n warning: constant evaluation error\n-  --> $DIR/conditional_array_execution.rs:20:20\n+  --> $DIR/conditional_array_execution.rs:21:20\n    |\n LL |     println!(\"{}\", FOO);\n    |                    ^^^ referenced constant has errors"}, {"sha": "7ec100e411b36d6b26222398d6acb0729ff8b626", "filename": "src/test/ui/const-eval/issue-43197.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.rs?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-pass\n+#![warn(const_err)]\n \n #![feature(const_fn)]\n "}, {"sha": "d0e13d5657e754866e6d497eab91e7137b1fc700", "filename": "src/test/ui/const-eval/issue-43197.stderr", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.stderr?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -1,37 +1,41 @@\n warning: attempt to subtract with overflow\n-  --> $DIR/issue-43197.rs:20:20\n+  --> $DIR/issue-43197.rs:21:20\n    |\n LL |     const X: u32 = 0-1;\n    |                    ^^^\n    |\n-   = note: #[warn(const_err)] on by default\n+note: lint level defined here\n+  --> $DIR/issue-43197.rs:12:9\n+   |\n+LL | #![warn(const_err)]\n+   |         ^^^^^^^^^\n \n warning: this constant cannot be used\n-  --> $DIR/issue-43197.rs:20:5\n+  --> $DIR/issue-43197.rs:21:5\n    |\n LL |     const X: u32 = 0-1;\n    |     ^^^^^^^^^^^^^^^^^^^ attempt to subtract with overflow\n \n warning: attempt to subtract with overflow\n-  --> $DIR/issue-43197.rs:23:24\n+  --> $DIR/issue-43197.rs:24:24\n    |\n LL |     const Y: u32 = foo(0-1);\n    |                        ^^^\n \n warning: this constant cannot be used\n-  --> $DIR/issue-43197.rs:23:5\n+  --> $DIR/issue-43197.rs:24:5\n    |\n LL |     const Y: u32 = foo(0-1);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ attempt to subtract with overflow\n \n warning: constant evaluation error\n-  --> $DIR/issue-43197.rs:26:23\n+  --> $DIR/issue-43197.rs:27:23\n    |\n LL |     println!(\"{} {}\", X, Y);\n    |                       ^ referenced constant has errors\n \n warning: constant evaluation error\n-  --> $DIR/issue-43197.rs:26:26\n+  --> $DIR/issue-43197.rs:27:26\n    |\n LL |     println!(\"{} {}\", X, Y);\n    |                          ^ referenced constant has errors"}, {"sha": "4133a8864f619b39088ed3ad696be37be27c1787", "filename": "src/test/ui/const-eval/issue-44578.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fissue-44578.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fissue-44578.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fissue-44578.rs?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-pass\n+#![warn(const_err)]\n \n trait Foo {\n     const AMT: usize;"}, {"sha": "ce6ff86610aa5d4a08f0dcb9aee512bfecd26c74", "filename": "src/test/ui/const-eval/issue-44578.stderr", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fissue-44578.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fissue-44578.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fissue-44578.stderr?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -1,13 +1,17 @@\n warning: constant evaluation error\n-  --> $DIR/issue-44578.rs:35:20\n+  --> $DIR/issue-44578.rs:36:20\n    |\n LL |     println!(\"{}\", <Bar<u16, u8> as Foo>::AMT); //~ WARN const_err\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ referenced constant has errors\n    |\n-   = note: #[warn(const_err)] on by default\n+note: lint level defined here\n+  --> $DIR/issue-44578.rs:12:9\n+   |\n+LL | #![warn(const_err)]\n+   |         ^^^^^^^^^\n \n warning: constant evaluation error\n-  --> $DIR/issue-44578.rs:35:20\n+  --> $DIR/issue-44578.rs:36:20\n    |\n LL |     println!(\"{}\", <Bar<u16, u8> as Foo>::AMT); //~ WARN const_err\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ referenced constant has errors"}, {"sha": "7385860abae28020fd8921fc92b4aa63166959ed", "filename": "src/test/ui/const-eval/promoted_errors.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fpromoted_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fpromoted_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fpromoted_errors.rs?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![warn(const_err)]\n+\n // compile-pass\n // compile-flags: -O\n fn main() {"}, {"sha": "8e9a0ea43a43b8aae62f7e92984834ae0d33b9cd", "filename": "src/test/ui/const-eval/promoted_errors.stderr", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fpromoted_errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fpromoted_errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fpromoted_errors.stderr?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -1,49 +1,53 @@\n warning: constant evaluation error\n-  --> $DIR/promoted_errors.rs:14:20\n+  --> $DIR/promoted_errors.rs:16:20\n    |\n LL |     println!(\"{}\", 0u32 - 1);\n    |                    ^^^^^^^^ attempt to subtract with overflow\n    |\n-   = note: #[warn(const_err)] on by default\n+note: lint level defined here\n+  --> $DIR/promoted_errors.rs:11:9\n+   |\n+LL | #![warn(const_err)]\n+   |         ^^^^^^^^^\n \n warning: constant evaluation error\n-  --> $DIR/promoted_errors.rs:14:20\n+  --> $DIR/promoted_errors.rs:16:20\n    |\n LL |     println!(\"{}\", 0u32 - 1);\n    |                    ^^^^^^^^ attempt to subtract with overflow\n \n warning: constant evaluation error\n-  --> $DIR/promoted_errors.rs:17:14\n+  --> $DIR/promoted_errors.rs:19:14\n    |\n LL |     let _x = 0u32 - 1;\n    |              ^^^^^^^^ attempt to subtract with overflow\n \n warning: attempt to divide by zero\n-  --> $DIR/promoted_errors.rs:19:20\n+  --> $DIR/promoted_errors.rs:21:20\n    |\n LL |     println!(\"{}\", 1/(1-1));\n    |                    ^^^^^^^\n \n warning: constant evaluation error\n-  --> $DIR/promoted_errors.rs:19:20\n+  --> $DIR/promoted_errors.rs:21:20\n    |\n LL |     println!(\"{}\", 1/(1-1));\n    |                    ^^^^^^^ attempt to divide by zero\n \n warning: attempt to divide by zero\n-  --> $DIR/promoted_errors.rs:22:14\n+  --> $DIR/promoted_errors.rs:24:14\n    |\n LL |     let _x = 1/(1-1);\n    |              ^^^^^^^\n \n warning: constant evaluation error\n-  --> $DIR/promoted_errors.rs:22:14\n+  --> $DIR/promoted_errors.rs:24:14\n    |\n LL |     let _x = 1/(1-1);\n    |              ^^^^^^^ attempt to divide by zero\n \n warning: constant evaluation error\n-  --> $DIR/promoted_errors.rs:25:20\n+  --> $DIR/promoted_errors.rs:27:20\n    |\n LL |     println!(\"{}\", 1/(false as u32));\n    |                    ^^^^^^^^^^^^^^^^ attempt to divide by zero"}, {"sha": "ef8fdb33d748aa578dc66abfc348905e45716c81", "filename": "src/test/ui/const-eval/pub_const_err.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err.rs?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-pass\n+#![warn(const_err)]\n \n #![crate_type = \"lib\"]\n "}, {"sha": "068825f1cd3106871f62c388bf84df8e9927fe37", "filename": "src/test/ui/const-eval/pub_const_err.stderr", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err.stderr?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -1,25 +1,29 @@\n warning: attempt to subtract with overflow\n-  --> $DIR/pub_const_err.rs:15:20\n+  --> $DIR/pub_const_err.rs:16:20\n    |\n LL | pub const Z: u32 = 0 - 1;\n    |                    ^^^^^\n    |\n-   = note: #[warn(const_err)] on by default\n+note: lint level defined here\n+  --> $DIR/pub_const_err.rs:12:9\n+   |\n+LL | #![warn(const_err)]\n+   |         ^^^^^^^^^\n \n warning: this constant cannot be used\n-  --> $DIR/pub_const_err.rs:15:1\n+  --> $DIR/pub_const_err.rs:16:1\n    |\n LL | pub const Z: u32 = 0 - 1;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^ attempt to subtract with overflow\n \n warning: attempt to subtract with overflow\n-  --> $DIR/pub_const_err.rs:19:22\n+  --> $DIR/pub_const_err.rs:20:22\n    |\n LL | pub type Foo = [i32; 0 - 1];\n    |                      ^^^^^\n \n warning: this array length cannot be used\n-  --> $DIR/pub_const_err.rs:19:22\n+  --> $DIR/pub_const_err.rs:20:22\n    |\n LL | pub type Foo = [i32; 0 - 1];\n    |                      ^^^^^ attempt to subtract with overflow"}, {"sha": "f65da1d8674a29105b1a1d6b0af4d9a6ae9327ac", "filename": "src/test/ui/const-eval/pub_const_err_bin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err_bin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err_bin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err_bin.rs?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-pass\n+#![warn(const_err)]\n \n pub const Z: u32 = 0 - 1;\n //~^ WARN attempt to subtract with overflow"}, {"sha": "dcb8125fc55bcf4aee646145d33a44fde4850e09", "filename": "src/test/ui/const-eval/pub_const_err_bin.stderr", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err_bin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err_bin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err_bin.stderr?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -1,25 +1,29 @@\n warning: attempt to subtract with overflow\n-  --> $DIR/pub_const_err_bin.rs:13:20\n+  --> $DIR/pub_const_err_bin.rs:14:20\n    |\n LL | pub const Z: u32 = 0 - 1;\n    |                    ^^^^^\n    |\n-   = note: #[warn(const_err)] on by default\n+note: lint level defined here\n+  --> $DIR/pub_const_err_bin.rs:12:9\n+   |\n+LL | #![warn(const_err)]\n+   |         ^^^^^^^^^\n \n warning: this constant cannot be used\n-  --> $DIR/pub_const_err_bin.rs:13:1\n+  --> $DIR/pub_const_err_bin.rs:14:1\n    |\n LL | pub const Z: u32 = 0 - 1;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^ attempt to subtract with overflow\n \n warning: attempt to subtract with overflow\n-  --> $DIR/pub_const_err_bin.rs:17:22\n+  --> $DIR/pub_const_err_bin.rs:18:22\n    |\n LL | pub type Foo = [i32; 0 - 1];\n    |                      ^^^^^\n \n warning: this array length cannot be used\n-  --> $DIR/pub_const_err_bin.rs:17:22\n+  --> $DIR/pub_const_err_bin.rs:18:22\n    |\n LL | pub type Foo = [i32; 0 - 1];\n    |                      ^^^^^ attempt to subtract with overflow"}, {"sha": "453e332a903c7bbdffe559e55fc1d553f033702b", "filename": "src/test/ui/const-len-underflow-separate-spans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-len-underflow-separate-spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-len-underflow-separate-spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-len-underflow-separate-spans.rs?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -16,7 +16,7 @@ const ONE: usize = 1;\n const TWO: usize = 2;\n const LEN: usize = ONE - TWO;\n //~^ ERROR E0080\n-//~| WARN attempt to subtract with overflow\n+//~| ERROR attempt to subtract with overflow\n \n fn main() {\n     let a: [i8; LEN] = unimplemented!();"}, {"sha": "48ff7a81c24ee1fe491f94316e51dc2b952b77a3", "filename": "src/test/ui/const-len-underflow-separate-spans.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-len-underflow-separate-spans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Fconst-len-underflow-separate-spans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-len-underflow-separate-spans.stderr?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -1,10 +1,10 @@\n-warning: attempt to subtract with overflow\n+error: attempt to subtract with overflow\n   --> $DIR/const-len-underflow-separate-spans.rs:17:20\n    |\n LL | const LEN: usize = ONE - TWO;\n    |                    ^^^^^^^^^\n    |\n-   = note: #[warn(const_err)] on by default\n+   = note: #[deny(const_err)] on by default\n \n error[E0080]: constant evaluation error\n   --> $DIR/const-len-underflow-separate-spans.rs:17:20\n@@ -18,6 +18,6 @@ error[E0080]: constant evaluation error\n LL |     let a: [i8; LEN] = unimplemented!();\n    |                 ^^^ referenced constant has errors\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "25ec5c458312d8eb21cce4f1c8d6f56e7568ce54", "filename": "src/test/ui/error-codes/E0080.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Ferror-codes%2FE0080.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a722296b6ec17fecd3f16a7d3f9232b83e5de800/src%2Ftest%2Fui%2Ferror-codes%2FE0080.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0080.stderr?ref=a722296b6ec17fecd3f16a7d3f9232b83e5de800", "patch": "@@ -12,15 +12,15 @@ error[E0080]: constant evaluation error\n LL |     X = (1 << 500), //~ ERROR E0080\n    |         ^^^^^^^^^^ attempt to shift left with overflow\n \n-warning: attempt to divide by zero\n+error: attempt to divide by zero\n   --> $DIR/E0080.rs:14:9\n    |\n LL |     Y = (1 / 0) //~ ERROR E0080\n    |         ^^^^^^^\n    |\n-   = note: #[warn(const_err)] on by default\n+   = note: #[deny(const_err)] on by default\n \n-warning: constant evaluation error\n+error: constant evaluation error\n   --> $DIR/E0080.rs:14:9\n    |\n LL |     Y = (1 / 0) //~ ERROR E0080\n@@ -32,6 +32,6 @@ error[E0080]: constant evaluation error\n LL |     Y = (1 / 0) //~ ERROR E0080\n    |         ^^^^^^^ attempt to divide by zero\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 5 previous errors\n \n For more information about this error, try `rustc --explain E0080`."}]}