{"sha": "e1010424dccf684dcf4225b3c6574bb1a9bacf6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxMDEwNDI0ZGNjZjY4NGRjZjQyMjViM2M2NTc0YmIxYTliYWNmNmE=", "commit": {"author": {"name": "Skgland", "email": "bb-github@t-online.de", "date": "2021-01-26T14:04:09Z"}, "committer": {"name": "Skgland", "email": "bb-github@t-online.de", "date": "2021-02-09T12:42:35Z"}, "message": "add method to construct def site path as a vec of idents\n\nlike std_path but used dummy span for all path elements and does not perpend kw:DollarCrate", "tree": {"sha": "74f9eb455dd71c2c97694a167cbf6a2396f2fa4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74f9eb455dd71c2c97694a167cbf6a2396f2fa4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1010424dccf684dcf4225b3c6574bb1a9bacf6a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEExK/X7hjj1qyNARZpO+Gho8vDz5kFAmAigzsACgkQO+Gho8vD\nz5ktDQf+K6IlL5kACn0lVdx3rn6Zit+pKKT8pib7qWcPUkF1ebp6Riegy4UkXPzg\nuxXtPg0izt0n2+4xiGxmx7uuVuFhTAPeGHOVjTT4TrzVaLq0Kzjhu+U6nGwsDghF\nOiowtZf4j4gCsTiqtRG+C17MAL6Z+KrW3NFX65ApmOjq2VFQtuZ/0aqjCRfKiPCG\nr1sCkyc53SeQFlFvF8SMcH6yUtnFUYEyGqiVL9JPpWmGec9urOxZxsPQdXI3V6Ca\nEDhjvvzSh40KrQSEBhBv45e1ZHqwa6Vhcy3HIhSQnZtAeGVi0f7woGlGp8SW4+SH\nwBbUjTvecFx5Rh1KcLCNHUBPlF5dnw==\n=DWDk\n-----END PGP SIGNATURE-----", "payload": "tree 74f9eb455dd71c2c97694a167cbf6a2396f2fa4a\nparent 2c33b070ad51c5a80e963beebc5c35ce976f05b5\nauthor Skgland <bb-github@t-online.de> 1611669849 +0100\ncommitter Skgland <bb-github@t-online.de> 1612874555 +0100\n\nadd method to construct def site path as a vec of idents\n\nlike std_path but used dummy span for all path elements and does not perpend kw:DollarCrate\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1010424dccf684dcf4225b3c6574bb1a9bacf6a", "html_url": "https://github.com/rust-lang/rust/commit/e1010424dccf684dcf4225b3c6574bb1a9bacf6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1010424dccf684dcf4225b3c6574bb1a9bacf6a/comments", "author": {"login": "Skgland", "id": 3877590, "node_id": "MDQ6VXNlcjM4Nzc1OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3877590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Skgland", "html_url": "https://github.com/Skgland", "followers_url": "https://api.github.com/users/Skgland/followers", "following_url": "https://api.github.com/users/Skgland/following{/other_user}", "gists_url": "https://api.github.com/users/Skgland/gists{/gist_id}", "starred_url": "https://api.github.com/users/Skgland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Skgland/subscriptions", "organizations_url": "https://api.github.com/users/Skgland/orgs", "repos_url": "https://api.github.com/users/Skgland/repos", "events_url": "https://api.github.com/users/Skgland/events{/privacy}", "received_events_url": "https://api.github.com/users/Skgland/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Skgland", "id": 3877590, "node_id": "MDQ6VXNlcjM4Nzc1OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3877590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Skgland", "html_url": "https://github.com/Skgland", "followers_url": "https://api.github.com/users/Skgland/followers", "following_url": "https://api.github.com/users/Skgland/following{/other_user}", "gists_url": "https://api.github.com/users/Skgland/gists{/gist_id}", "starred_url": "https://api.github.com/users/Skgland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Skgland/subscriptions", "organizations_url": "https://api.github.com/users/Skgland/orgs", "repos_url": "https://api.github.com/users/Skgland/repos", "events_url": "https://api.github.com/users/Skgland/events{/privacy}", "received_events_url": "https://api.github.com/users/Skgland/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c33b070ad51c5a80e963beebc5c35ce976f05b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c33b070ad51c5a80e963beebc5c35ce976f05b5", "html_url": "https://github.com/rust-lang/rust/commit/2c33b070ad51c5a80e963beebc5c35ce976f05b5"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "e3dc793a7fac456f0946503160dc6110b60d89ad", "filename": "compiler/rustc_expand/src/base.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e1010424dccf684dcf4225b3c6574bb1a9bacf6a/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1010424dccf684dcf4225b3c6574bb1a9bacf6a/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fbase.rs?ref=e1010424dccf684dcf4225b3c6574bb1a9bacf6a", "patch": "@@ -1043,6 +1043,10 @@ impl<'a> ExtCtxt<'a> {\n             .chain(components.iter().map(|&s| Ident::with_dummy_span(s)))\n             .collect()\n     }\n+    pub fn def_site_path(&self, components: &[Symbol]) -> Vec<Ident> {\n+        let def_site = self.with_def_site_ctxt(DUMMY_SP);\n+        components.iter().map(|&s| Ident::new(s, def_site)).collect()\n+    }\n \n     pub fn check_unused_macros(&mut self) {\n         self.resolver.check_unused_macros();"}]}