{"sha": "61e1fbc659103513e68eae29ea830d798e2ec2d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxZTFmYmM2NTkxMDM1MTNlNjhlYWUyOWVhODMwZDc5OGUyZWMyZDU=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-03-19T01:36:53Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-03-20T11:49:30Z"}, "message": "Make compiletest do exact matching on triples\n\nThis avoids the issues of the previous substring matching, ensuring\n`ARCH_TABLE` and `OS_TABLE` will no longer contain redundant entries.", "tree": {"sha": "51dbe4fa8ed4a3a7bb738e9322ce13e009e6e543", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51dbe4fa8ed4a3a7bb738e9322ce13e009e6e543"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61e1fbc659103513e68eae29ea830d798e2ec2d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61e1fbc659103513e68eae29ea830d798e2ec2d5", "html_url": "https://github.com/rust-lang/rust/commit/61e1fbc659103513e68eae29ea830d798e2ec2d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61e1fbc659103513e68eae29ea830d798e2ec2d5/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eae6d512f0549307947e5fe1b8ee646916b82320", "url": "https://api.github.com/repos/rust-lang/rust/commits/eae6d512f0549307947e5fe1b8ee646916b82320", "html_url": "https://github.com/rust-lang/rust/commit/eae6d512f0549307947e5fe1b8ee646916b82320"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "c612f0117aaf7f311365369302807cea21eef268", "filename": "src/tools/compiletest/src/util.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/61e1fbc659103513e68eae29ea830d798e2ec2d5/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61e1fbc659103513e68eae29ea830d798e2ec2d5/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs?ref=61e1fbc659103513e68eae29ea830d798e2ec2d5", "patch": "@@ -75,16 +75,18 @@ pub fn matches_os(triple: &str, name: &str) -> bool {\n     if triple == \"wasm32-unknown-unknown\" {\n         return name == \"emscripten\" || name == \"wasm32-bare\"\n     }\n+    let triple: Vec<_> = triple.split('-').collect();\n     for &(triple_os, os) in OS_TABLE {\n-        if triple.contains(triple_os) {\n+        if triple.contains(&triple_os) {\n             return os == name;\n         }\n     }\n     panic!(\"Cannot determine OS from triple\");\n }\n pub fn get_arch(triple: &str) -> &'static str {\n+    let triple: Vec<_> = triple.split('-').collect();\n     for &(triple_arch, arch) in ARCH_TABLE {\n-        if triple.contains(triple_arch) {\n+        if triple.contains(&triple_arch) {\n             return arch;\n         }\n     }"}]}