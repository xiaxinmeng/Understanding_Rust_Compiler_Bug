{"sha": "dd3be7823722503df0496b606f258e14e04e9607", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkM2JlNzgyMzcyMjUwM2RmMDQ5NmI2MDZmMjU4ZTE0ZTA0ZTk2MDc=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-10-13T11:46:12Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-10-14T08:25:55Z"}, "message": "Handle multi-line HTML comments", "tree": {"sha": "d498b417023e28b33a3ebb6d448f3345fa86823c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d498b417023e28b33a3ebb6d448f3345fa86823c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd3be7823722503df0496b606f258e14e04e9607", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd3be7823722503df0496b606f258e14e04e9607", "html_url": "https://github.com/rust-lang/rust/commit/dd3be7823722503df0496b606f258e14e04e9607", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd3be7823722503df0496b606f258e14e04e9607/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0009cbaabd6f2ba986e7631905612aa83d5970f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0009cbaabd6f2ba986e7631905612aa83d5970f8", "html_url": "https://github.com/rust-lang/rust/commit/0009cbaabd6f2ba986e7631905612aa83d5970f8"}], "stats": {"total": 54, "additions": 28, "deletions": 26}, "files": [{"sha": "1d9be619ec91af2e110fec0fa1ab632ff06fb2a2", "filename": "src/librustdoc/passes/html_tags.rs", "status": "modified", "additions": 22, "deletions": 24, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/dd3be7823722503df0496b606f258e14e04e9607/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd3be7823722503df0496b606f258e14e04e9607/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs?ref=dd3be7823722503df0496b606f258e14e04e9607", "patch": "@@ -142,39 +142,30 @@ fn extract_html_tag(\n     }\n }\n \n-fn extract_html_comment(\n-    text: &str,\n-    range: &Range<usize>,\n-    start_pos: usize,\n-    iter: &mut Peekable<CharIndices<'_>>,\n-    f: &impl Fn(&str, &Range<usize>),\n-) {\n-    // We first skip the \"!--\" part.\n-    let mut iter = iter.skip(3);\n-    while let Some((pos, c)) = iter.next() {\n-        if c == '-' && text[pos..].starts_with(\"-->\") {\n-            // All good, we can leave!\n-            return;\n-        }\n-    }\n-    f(\n-        \"Unclosed HTML comment\",\n-        &Range { start: range.start + start_pos, end: range.start + start_pos + 3 },\n-    );\n-}\n-\n fn extract_tags(\n     tags: &mut Vec<(String, Range<usize>)>,\n     text: &str,\n     range: Range<usize>,\n+    is_in_comment: &mut Option<Range<usize>>,\n     f: &impl Fn(&str, &Range<usize>),\n ) {\n     let mut iter = text.char_indices().peekable();\n \n     while let Some((start_pos, c)) = iter.next() {\n-        if c == '<' {\n+        if is_in_comment.is_some() {\n+            if text[start_pos..].starts_with(\"-->\") {\n+                *is_in_comment = None;\n+            }\n+        } else if c == '<' {\n             if text[start_pos..].starts_with(\"<!--\") {\n-                extract_html_comment(text, &range, start_pos, &mut iter, f);\n+                // We skip the \"!--\" part. (Once `advance_by` is stable, might be nice to use it!)\n+                iter.next();\n+                iter.next();\n+                iter.next();\n+                *is_in_comment = Some(Range {\n+                    start: range.start + start_pos,\n+                    end: range.start + start_pos + 3,\n+                });\n             } else {\n                 extract_html_tag(tags, text, &range, start_pos, &mut iter, f);\n             }\n@@ -205,12 +196,15 @@ impl<'a, 'tcx> DocFolder for InvalidHtmlTagsLinter<'a, 'tcx> {\n             };\n \n             let mut tags = Vec::new();\n+            let mut is_in_comment = None;\n \n             let p = Parser::new_ext(&dox, opts()).into_offset_iter();\n \n             for (event, range) in p {\n                 match event {\n-                    Event::Html(text) => extract_tags(&mut tags, &text, range, &report_diag),\n+                    Event::Html(text) | Event::Text(text) => {\n+                        extract_tags(&mut tags, &text, range, &mut is_in_comment, &report_diag)\n+                    }\n                     _ => {}\n                 }\n             }\n@@ -221,6 +215,10 @@ impl<'a, 'tcx> DocFolder for InvalidHtmlTagsLinter<'a, 'tcx> {\n             }) {\n                 report_diag(&format!(\"unclosed HTML tag `{}`\", tag), range);\n             }\n+\n+            if let Some(range) = is_in_comment {\n+                report_diag(\"Unclosed HTML comment\", &range);\n+            }\n         }\n \n         self.fold_item_recur(item)"}, {"sha": "56ca7e79d435838c0bd655b5386e5fb54650bb79", "filename": "src/test/rustdoc-ui/invalid-html-tags.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dd3be7823722503df0496b606f258e14e04e9607/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd3be7823722503df0496b606f258e14e04e9607/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.rs?ref=dd3be7823722503df0496b606f258e14e04e9607", "patch": "@@ -81,5 +81,9 @@ pub fn f() {}\n pub fn g() {}\n \n /// <!--\n-//~^ ERROR Unclosed HTML comment\n+/// -->\n pub fn h() {}\n+\n+/// <!--\n+//~^ ERROR Unclosed HTML comment\n+pub fn i() {}"}, {"sha": "aa9ace006bd1ad8dfb6bc1e76ef686687c34f6bd", "filename": "src/test/rustdoc-ui/invalid-html-tags.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dd3be7823722503df0496b606f258e14e04e9607/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dd3be7823722503df0496b606f258e14e04e9607/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.stderr?ref=dd3be7823722503df0496b606f258e14e04e9607", "patch": "@@ -77,7 +77,7 @@ LL | /// <div></div\n    |     ^^^^^\n \n error: Unclosed HTML comment\n-  --> $DIR/invalid-html-tags.rs:83:5\n+  --> $DIR/invalid-html-tags.rs:87:5\n    |\n LL | /// <!--\n    |     ^^^"}]}