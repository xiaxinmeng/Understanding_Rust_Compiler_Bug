{"sha": "7a9c4a4941932b003590c6416619bbf5556c366a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhOWM0YTQ5NDE5MzJiMDAzNTkwYzY0MTY2MTliYmY1NTU2YzM2NmE=", "commit": {"author": {"name": "Jonathan S", "email": "gereeter+code@gmail.com", "date": "2016-01-17T17:26:11Z"}, "committer": {"name": "Jonathan S", "email": "gereeter+code@gmail.com", "date": "2016-01-17T17:26:11Z"}, "message": "Expand the macro in variance-btree-invariant-types.rs to make compiletest recognize that it should error", "tree": {"sha": "db2be52b21eb6dd69f76b89fbba02689c69f85b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db2be52b21eb6dd69f76b89fbba02689c69f85b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a9c4a4941932b003590c6416619bbf5556c366a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a9c4a4941932b003590c6416619bbf5556c366a", "html_url": "https://github.com/rust-lang/rust/commit/7a9c4a4941932b003590c6416619bbf5556c366a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a9c4a4941932b003590c6416619bbf5556c366a/comments", "author": {"login": "gereeter", "id": 2328242, "node_id": "MDQ6VXNlcjIzMjgyNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2328242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gereeter", "html_url": "https://github.com/gereeter", "followers_url": "https://api.github.com/users/gereeter/followers", "following_url": "https://api.github.com/users/gereeter/following{/other_user}", "gists_url": "https://api.github.com/users/gereeter/gists{/gist_id}", "starred_url": "https://api.github.com/users/gereeter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gereeter/subscriptions", "organizations_url": "https://api.github.com/users/gereeter/orgs", "repos_url": "https://api.github.com/users/gereeter/repos", "events_url": "https://api.github.com/users/gereeter/events{/privacy}", "received_events_url": "https://api.github.com/users/gereeter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gereeter", "id": 2328242, "node_id": "MDQ6VXNlcjIzMjgyNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2328242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gereeter", "html_url": "https://github.com/gereeter", "followers_url": "https://api.github.com/users/gereeter/followers", "following_url": "https://api.github.com/users/gereeter/following{/other_user}", "gists_url": "https://api.github.com/users/gereeter/gists{/gist_id}", "starred_url": "https://api.github.com/users/gereeter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gereeter/subscriptions", "organizations_url": "https://api.github.com/users/gereeter/orgs", "repos_url": "https://api.github.com/users/gereeter/repos", "events_url": "https://api.github.com/users/gereeter/events{/privacy}", "received_events_url": "https://api.github.com/users/gereeter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fae75c93b3df9c99f10aee03acf5e5570d6fc3af", "url": "https://api.github.com/repos/rust-lang/rust/commits/fae75c93b3df9c99f10aee03acf5e5570d6fc3af", "html_url": "https://github.com/rust-lang/rust/commit/fae75c93b3df9c99f10aee03acf5e5570d6fc3af"}], "stats": {"total": 79, "additions": 43, "deletions": 36}, "files": [{"sha": "e9607de00a34f0bac195bd437dea2ec5948d9f11", "filename": "src/test/compile-fail/variance-btree-invariant-types.rs", "status": "modified", "additions": 43, "deletions": 36, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/7a9c4a4941932b003590c6416619bbf5556c366a/src%2Ftest%2Fcompile-fail%2Fvariance-btree-invariant-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a9c4a4941932b003590c6416619bbf5556c366a/src%2Ftest%2Fcompile-fail%2Fvariance-btree-invariant-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariance-btree-invariant-types.rs?ref=7a9c4a4941932b003590c6416619bbf5556c366a", "patch": "@@ -12,45 +12,52 @@\n \n use std::collections::btree_map::{IterMut, OccupiedEntry, VacantEntry};\n \n-macro_rules! test_invariant {\n-    { $m:ident $t:ident } => {\n-        mod $m {\n-            use std::collections::btree_map::{IterMut, OccupiedEntry, VacantEntry};\n-\n-            fn not_covariant_key<'a, 'min,'max>(v: $t<'a, &'max (), ()>)\n-                                                -> $t<'a, &'min (), ()>\n-                where 'max : 'min\n-            {\n-                v //~ ERROR mismatched types\n-            }\n-\n-            fn not_contravariant_key<'a, 'min,'max>(v: $t<'a, &'min (), ()>)\n-                                                    -> $t<'a, &'max (), ()>\n-                where 'max : 'min\n-            {\n-                v //~ ERROR mismatched types\n-            }\n-\n-            fn not_covariant_val<'a, 'min,'max>(v: $t<'a, (), &'max ()>)\n-                                                -> $t<'a, (), &'min ()>\n-                where 'max : 'min\n-            {\n-                v //~ ERROR mismatched types\n-            }\n+fn iter_cov_key<'a, 'new>(v: IterMut<'a, &'static (), ()>) -> IterMut<'a, &'new (), ()> {\n+    v //~ ERROR mismatched types\n+}\n+fn iter_cov_val<'a, 'new>(v: IterMut<'a, (), &'static ()>) -> IterMut<'a, (), &'new ()> {\n+    v //~ ERROR mismatched types\n+}\n+fn iter_contra_key<'a, 'new>(v: IterMut<'a, &'new (), ()>) -> IterMut<'a, &'static (), ()> {\n+    v //~ ERROR mismatched types\n+}\n+fn iter_contra_val<'a, 'new>(v: IterMut<'a, (), &'new ()>) -> IterMut<'a, (), &'static ()> {\n+    v //~ ERROR mismatched types\n+}\n \n-            fn not_contravariant_val<'a, 'min,'max>(v: $t<'a, (), &'min ()>)\n-                                                    -> $t<'a, (), &'max ()>\n-                where 'max : 'min\n-            {\n-                v //~ ERROR mismatched types\n-            }\n-        }\n-    }\n+fn occ_cov_key<'a, 'new>(v: OccupiedEntry<'a, &'static (), ()>)\n+                         -> OccupiedEntry<'a, &'new (), ()> {\n+    v //~ ERROR mismatched types\n+}\n+fn occ_cov_val<'a, 'new>(v: OccupiedEntry<'a, (), &'static ()>)\n+                         -> OccupiedEntry<'a, (), &'new ()> {\n+    v //~ ERROR mismatched types\n+}\n+fn occ_contra_key<'a, 'new>(v: OccupiedEntry<'a, &'new (), ()>)\n+                            -> OccupiedEntry<'a, &'static (), ()> {\n+    v //~ ERROR mismatched types\n+}\n+fn occ_contra_val<'a, 'new>(v: OccupiedEntry<'a, (), &'new ()>)\n+                            -> OccupiedEntry<'a, (), &'static ()> {\n+    v //~ ERROR mismatched types\n }\n \n-test_invariant! { foo IterMut }\n-test_invariant! { bar OccupiedEntry }\n-test_invariant! { baz VacantEntry }\n+fn vac_cov_key<'a, 'new>(v: VacantEntry<'a, &'static (), ()>)\n+                         -> VacantEntry<'a, &'new (), ()> {\n+    v //~ ERROR mismatched types\n+}\n+fn vac_cov_val<'a, 'new>(v: VacantEntry<'a, (), &'static ()>)\n+                         -> VacantEntry<'a, (), &'new ()> {\n+    v //~ ERROR mismatched types\n+}\n+fn vac_contra_key<'a, 'new>(v: VacantEntry<'a, &'new (), ()>)\n+                            -> VacantEntry<'a, &'static (), ()> {\n+    v //~ ERROR mismatched types\n+}\n+fn vac_contra_val<'a, 'new>(v: VacantEntry<'a, (), &'new ()>)\n+                            -> VacantEntry<'a, (), &'static ()> {\n+    v //~ ERROR mismatched types\n+}\n \n #[rustc_error]\n fn main() { }"}]}