{"sha": "2f22c861a925b6851540430ede0b87fe83c5374c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMjJjODYxYTkyNWI2ODUxNTQwNDMwZWRlMGI4N2ZlODNjNTM3NGM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-02T15:11:49Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-02T15:11:49Z"}, "message": "remove some methods from analysis impl", "tree": {"sha": "801061ea610de645b9ce7826d7af39f843ae20aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/801061ea610de645b9ce7826d7af39f843ae20aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f22c861a925b6851540430ede0b87fe83c5374c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f22c861a925b6851540430ede0b87fe83c5374c", "html_url": "https://github.com/rust-lang/rust/commit/2f22c861a925b6851540430ede0b87fe83c5374c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f22c861a925b6851540430ede0b87fe83c5374c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a94530afb354d2f9a3e3864c678aa496c8de6a23", "url": "https://api.github.com/repos/rust-lang/rust/commits/a94530afb354d2f9a3e3864c678aa496c8de6a23", "html_url": "https://github.com/rust-lang/rust/commit/a94530afb354d2f9a3e3864c678aa496c8de6a23"}], "stats": {"total": 35, "additions": 13, "deletions": 22}, "files": [{"sha": "248b77f5a070863374c8166b633a5b3ba8d5e917", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2f22c861a925b6851540430ede0b87fe83c5374c/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f22c861a925b6851540430ede0b87fe83c5374c/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=2f22c861a925b6851540430ede0b87fe83c5374c", "patch": "@@ -9,7 +9,7 @@ use hir::{\n     self, FnSignatureInfo, Problem, source_binder,\n };\n use ra_db::{FilesDatabase, SourceRoot, SourceRootId, SyntaxDatabase};\n-use ra_editor::{self, find_node_at_offset, LineIndex, LocalEdit, Severity};\n+use ra_editor::{self, find_node_at_offset, LocalEdit, Severity};\n use ra_syntax::{\n     algo::find_covering_node,\n     ast::{self, ArgListOwner, Expr, FnDef, NameOwner},\n@@ -139,15 +139,6 @@ impl fmt::Debug for AnalysisImpl {\n }\n \n impl AnalysisImpl {\n-    pub fn file_text(&self, file_id: FileId) -> Arc<String> {\n-        self.db.file_text(file_id)\n-    }\n-    pub fn file_syntax(&self, file_id: FileId) -> SourceFileNode {\n-        self.db.source_file(file_id)\n-    }\n-    pub fn file_line_index(&self, file_id: FileId) -> Arc<LineIndex> {\n-        self.db.file_lines(file_id)\n-    }\n     pub(crate) fn module_path(&self, position: FilePosition) -> Cancelable<Option<String>> {\n         let descr = match source_binder::module_from_position(&*self.db, position)? {\n             None => return Ok(None),\n@@ -400,7 +391,7 @@ impl AnalysisImpl {\n     }\n \n     pub fn assists(&self, frange: FileRange) -> Vec<SourceChange> {\n-        let file = self.file_syntax(frange.file_id);\n+        let file = self.db.source_file(frange.file_id);\n         let offset = frange.range.start();\n         let actions = vec![\n             ra_editor::flip_comma(&file, offset).map(|f| f()),"}, {"sha": "ef08a721cd05c1be76ab8dd90d990c95ad69e1b3", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2f22c861a925b6851540430ede0b87fe83c5374c/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f22c861a925b6851540430ede0b87fe83c5374c/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=2f22c861a925b6851540430ede0b87fe83c5374c", "patch": "@@ -44,7 +44,7 @@ pub use hir::FnSignatureInfo;\n \n pub use ra_db::{\n     Canceled, Cancelable, FilePosition, FileRange,\n-    CrateGraph, CrateId, SourceRootId, FileId\n+    CrateGraph, CrateId, SourceRootId, FileId, SyntaxDatabase, FilesDatabase\n };\n \n #[derive(Default)]\n@@ -298,13 +298,13 @@ pub struct Analysis {\n \n impl Analysis {\n     pub fn file_text(&self, file_id: FileId) -> Arc<String> {\n-        self.imp.file_text(file_id)\n+        self.imp.db.file_text(file_id)\n     }\n     pub fn file_syntax(&self, file_id: FileId) -> SourceFileNode {\n-        self.imp.file_syntax(file_id).clone()\n+        self.imp.db.source_file(file_id).clone()\n     }\n     pub fn file_line_index(&self, file_id: FileId) -> Arc<LineIndex> {\n-        self.imp.file_line_index(file_id)\n+        self.imp.db.file_lines(file_id)\n     }\n     pub fn extend_selection(&self, frange: FileRange) -> TextRange {\n         extend_selection::extend_selection(&self.imp.db, frange)\n@@ -313,32 +313,32 @@ impl Analysis {\n         ra_editor::matching_brace(file, offset)\n     }\n     pub fn syntax_tree(&self, file_id: FileId) -> String {\n-        let file = self.imp.file_syntax(file_id);\n+        let file = self.imp.db.source_file(file_id);\n         ra_editor::syntax_tree(&file)\n     }\n     pub fn join_lines(&self, frange: FileRange) -> SourceChange {\n-        let file = self.imp.file_syntax(frange.file_id);\n+        let file = self.imp.db.source_file(frange.file_id);\n         SourceChange::from_local_edit(frange.file_id, ra_editor::join_lines(&file, frange.range))\n     }\n     pub fn on_enter(&self, position: FilePosition) -> Option<SourceChange> {\n-        let file = self.imp.file_syntax(position.file_id);\n+        let file = self.imp.db.source_file(position.file_id);\n         let edit = ra_editor::on_enter(&file, position.offset)?;\n         let res = SourceChange::from_local_edit(position.file_id, edit);\n         Some(res)\n     }\n     pub fn on_eq_typed(&self, position: FilePosition) -> Option<SourceChange> {\n-        let file = self.imp.file_syntax(position.file_id);\n+        let file = self.imp.db.source_file(position.file_id);\n         Some(SourceChange::from_local_edit(\n             position.file_id,\n             ra_editor::on_eq_typed(&file, position.offset)?,\n         ))\n     }\n     pub fn file_structure(&self, file_id: FileId) -> Vec<StructureNode> {\n-        let file = self.imp.file_syntax(file_id);\n+        let file = self.imp.db.source_file(file_id);\n         ra_editor::file_structure(&file)\n     }\n     pub fn folding_ranges(&self, file_id: FileId) -> Vec<Fold> {\n-        let file = self.imp.file_syntax(file_id);\n+        let file = self.imp.db.source_file(file_id);\n         ra_editor::folding_ranges(&file)\n     }\n     pub fn symbol_search(&self, query: Query) -> Cancelable<Vec<NavigationTarget>> {\n@@ -373,7 +373,7 @@ impl Analysis {\n         Ok(self.imp.crate_root(crate_id))\n     }\n     pub fn runnables(&self, file_id: FileId) -> Cancelable<Vec<Runnable>> {\n-        let file = self.imp.file_syntax(file_id);\n+        let file = self.imp.db.source_file(file_id);\n         Ok(runnables::runnables(self, &file, file_id))\n     }\n     pub fn highlight(&self, file_id: FileId) -> Cancelable<Vec<HighlightedRange>> {"}]}