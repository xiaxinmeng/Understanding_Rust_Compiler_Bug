{"sha": "a73d552f3ad357cf2950a4ffee9717bc360b4b7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3M2Q1NTJmM2FkMzU3Y2YyOTUwYTRmZmVlOTcxN2JjMzYwYjRiN2I=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-20T11:03:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-06-20T11:03:37Z"}, "message": "Merge pull request #2859 from 0ndorio/fix/false_positive_on_assert_in_neg_cmp_partial\n\nAllows neg_cmp_op_on_partial_ord for external macros (fixes #2856).", "tree": {"sha": "45d3b64a9999d11503dd301555f3319cbe3e2098", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45d3b64a9999d11503dd301555f3319cbe3e2098"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a73d552f3ad357cf2950a4ffee9717bc360b4b7b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbKjSJCRBK7hj4Ov3rIwAAdHIIAACmFLhr2GcU1qFZrGUZicNJ\nesqwZ8np4W0d67Ork6izgsttGbyaE2d+zWwGBXoylK32XIREaLi24wX/awE/JxKz\nx4IKXlJ10c0YBScaeTjzS0uHK50YFWb9UsG+CCBxV3z0KSXybfEsS3Uyz/KCHj7Y\nm5PaqnJXSNjB1vCPZIJdeEmzPFpQEBwtnyMqJ71c7QbPhxF2hlF0PcoepUPeDCSj\nFVu0RJvIGcEcdpZBBtQOxxSXQ8MfU9PMEB//8CbzvrPPSZb+Fm/Bb8UVfWUzkFSI\nwxLIGKku/J4ErNkidWxqKMHRXbuErbTvo2RyfIDnxoj+XfmniNrqC7z4mqLGxpk=\n=c7om\n-----END PGP SIGNATURE-----\n", "payload": "tree 45d3b64a9999d11503dd301555f3319cbe3e2098\nparent e4d31ab86cba04c10dfda41bd27cee337cdd000f\nparent fedd3ef71182e0502c74ec9fa1e3b11a66832141\nauthor Oliver Schneider <github35764891676564198441@oli-obk.de> 1529492617 +0200\ncommitter GitHub <noreply@github.com> 1529492617 +0200\n\nMerge pull request #2859 from 0ndorio/fix/false_positive_on_assert_in_neg_cmp_partial\n\nAllows neg_cmp_op_on_partial_ord for external macros (fixes #2856)."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a73d552f3ad357cf2950a4ffee9717bc360b4b7b", "html_url": "https://github.com/rust-lang/rust/commit/a73d552f3ad357cf2950a4ffee9717bc360b4b7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a73d552f3ad357cf2950a4ffee9717bc360b4b7b/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4d31ab86cba04c10dfda41bd27cee337cdd000f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4d31ab86cba04c10dfda41bd27cee337cdd000f", "html_url": "https://github.com/rust-lang/rust/commit/e4d31ab86cba04c10dfda41bd27cee337cdd000f"}, {"sha": "fedd3ef71182e0502c74ec9fa1e3b11a66832141", "url": "https://api.github.com/repos/rust-lang/rust/commits/fedd3ef71182e0502c74ec9fa1e3b11a66832141", "html_url": "https://github.com/rust-lang/rust/commit/fedd3ef71182e0502c74ec9fa1e3b11a66832141"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "013bab69d798ba0657ea347639e7d6a6dc6c2a97", "filename": "clippy_lints/src/neg_cmp_op_on_partial_ord.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a73d552f3ad357cf2950a4ffee9717bc360b4b7b/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a73d552f3ad357cf2950a4ffee9717bc360b4b7b/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs?ref=a73d552f3ad357cf2950a4ffee9717bc360b4b7b", "patch": "@@ -1,7 +1,7 @@\n use rustc::hir::*;\n use rustc::lint::*;\n \n-use crate::utils::{self, paths};\n+use crate::utils::{self, paths, span_lint, in_external_macro};\n \n /// **What it does:**\n /// Checks for the usage of negated comparision operators on types which only implement\n@@ -53,6 +53,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NoNegCompOpForPartialOrd {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr) {\n         if_chain! {\n \n+            if !in_external_macro(cx, expr.span);\n             if let Expr_::ExprUnary(UnOp::UnNot, ref inner) = expr.node;\n             if let Expr_::ExprBinary(ref op, ref left, _) = inner.node;\n             if let BinOp_::BiLe | BinOp_::BiGe | BinOp_::BiLt | BinOp_::BiGt = op.node;\n@@ -78,7 +79,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NoNegCompOpForPartialOrd {\n                 };\n \n                 if implements_partial_ord && !implements_ord {\n-                    cx.span_lint(\n+                    span_lint(\n+                        cx,\n                         NEG_CMP_OP_ON_PARTIAL_ORD,\n                         expr.span,\n                         \"The use of negated comparision operators on partially orded \\"}, {"sha": "483972bb41b3ba982128898f497b5db55725b3bc", "filename": "tests/ui/neg_cmp_op_on_partial_ord.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a73d552f3ad357cf2950a4ffee9717bc360b4b7b/tests%2Fui%2Fneg_cmp_op_on_partial_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a73d552f3ad357cf2950a4ffee9717bc360b4b7b/tests%2Fui%2Fneg_cmp_op_on_partial_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneg_cmp_op_on_partial_ord.rs?ref=a73d552f3ad357cf2950a4ffee9717bc360b4b7b", "patch": "@@ -1,6 +1,6 @@\n-/// This test case utilizes `f64` an easy example for `PartialOrd` only types\n-/// but the lint itself actually validates any expression where the left\n-/// operand implements `PartialOrd` but not `Ord`.\n+//! This test case utilizes `f64` an easy example for `PartialOrd` only types\n+//! but the lint itself actually validates any expression where the left\n+//! operand implements `PartialOrd` but not `Ord`.\n \n use std::cmp::Ordering;\n \n@@ -54,5 +54,14 @@ fn main() {\n     let _ = a_value <= another_value;\n     let _ = a_value > another_value;\n     let _ = a_value >= another_value;\n-}\n \n+    // --- regression tests ---\n+\n+    // Issue 2856: False positive on assert!()\n+    //\n+    // The macro always negates the result of the given comparision in its\n+    // internal check which automatically triggered the lint. As it's an\n+    // external macro there was no chance to do anything about it which lead\n+    // to a whitelisting of all external macros.\n+    assert!(a_value < another_value);\n+}"}]}