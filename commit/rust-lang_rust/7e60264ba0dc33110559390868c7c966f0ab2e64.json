{"sha": "7e60264ba0dc33110559390868c7c966f0ab2e64", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlNjAyNjRiYTBkYzMzMTEwNTU5MzkwODY4YzdjOTY2ZjBhYjJlNjQ=", "commit": {"author": {"name": "Craig Disselkoen", "email": "craigdissel@gmail.com", "date": "2020-05-05T21:07:52Z"}, "committer": {"name": "Craig Disselkoen", "email": "craigdissel@gmail.com", "date": "2020-05-05T23:12:56Z"}, "message": "cargo fmt", "tree": {"sha": "e3c82afa372e2a13916e93e2b3eb6abb695d2df3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3c82afa372e2a13916e93e2b3eb6abb695d2df3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e60264ba0dc33110559390868c7c966f0ab2e64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e60264ba0dc33110559390868c7c966f0ab2e64", "html_url": "https://github.com/rust-lang/rust/commit/7e60264ba0dc33110559390868c7c966f0ab2e64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e60264ba0dc33110559390868c7c966f0ab2e64/comments", "author": {"login": "cdisselkoen", "id": 4458638, "node_id": "MDQ6VXNlcjQ0NTg2Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4458638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdisselkoen", "html_url": "https://github.com/cdisselkoen", "followers_url": "https://api.github.com/users/cdisselkoen/followers", "following_url": "https://api.github.com/users/cdisselkoen/following{/other_user}", "gists_url": "https://api.github.com/users/cdisselkoen/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdisselkoen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdisselkoen/subscriptions", "organizations_url": "https://api.github.com/users/cdisselkoen/orgs", "repos_url": "https://api.github.com/users/cdisselkoen/repos", "events_url": "https://api.github.com/users/cdisselkoen/events{/privacy}", "received_events_url": "https://api.github.com/users/cdisselkoen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cdisselkoen", "id": 4458638, "node_id": "MDQ6VXNlcjQ0NTg2Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4458638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdisselkoen", "html_url": "https://github.com/cdisselkoen", "followers_url": "https://api.github.com/users/cdisselkoen/followers", "following_url": "https://api.github.com/users/cdisselkoen/following{/other_user}", "gists_url": "https://api.github.com/users/cdisselkoen/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdisselkoen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdisselkoen/subscriptions", "organizations_url": "https://api.github.com/users/cdisselkoen/orgs", "repos_url": "https://api.github.com/users/cdisselkoen/repos", "events_url": "https://api.github.com/users/cdisselkoen/events{/privacy}", "received_events_url": "https://api.github.com/users/cdisselkoen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "303b444dbb66019fc916dd350e54f7675aa3007f", "url": "https://api.github.com/repos/rust-lang/rust/commits/303b444dbb66019fc916dd350e54f7675aa3007f", "html_url": "https://github.com/rust-lang/rust/commit/303b444dbb66019fc916dd350e54f7675aa3007f"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "df20f783d8dcf84a8d1b88f696d9d23fc2dfc148", "filename": "crates/ra_env/src/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7e60264ba0dc33110559390868c7c966f0ab2e64/crates%2Fra_env%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e60264ba0dc33110559390868c7c966f0ab2e64/crates%2Fra_env%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_env%2Fsrc%2Flib.rs?ref=7e60264ba0dc33110559390868c7c966f0ab2e64", "patch": "@@ -23,7 +23,10 @@ pub fn get_path_for_executable(executable_name: impl AsRef<str>) -> Result<Strin\n         if is_valid_executable(&path) {\n             Ok(path)\n         } else {\n-            Err(Error::msg(format!(\"`{}` environment variable points to something that's not a valid executable\", env_var)))\n+            Err(Error::msg(format!(\n+                \"`{}` environment variable points to something that's not a valid executable\",\n+                env_var\n+            )))\n         }\n     } else {\n         let final_path: Option<String> = if is_valid_executable(executable_name) {"}]}