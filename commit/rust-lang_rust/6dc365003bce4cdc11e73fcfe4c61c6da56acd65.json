{"sha": "6dc365003bce4cdc11e73fcfe4c61c6da56acd65", "node_id": "C_kwDOAAsO6NoAKDZkYzM2NTAwM2JjZTRjZGMxMWU3M2ZjZmU0YzYxYzZkYTU2YWNkNjU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-16T18:12:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-16T18:12:17Z"}, "message": "Rollup merge of #111573 - compiler-errors:erase-re-error, r=WaffleLapkin\n\nErase `ReError` properly\n\nFixes #111341\n\nSince we check whether a type has free regions before erasing (to short circuit unnecesary folding), we need to consider `ReError` as a free region, or else we'll skip it when erasing a type that only mentions `ReError`.\n\ncc `@nnethercote`", "tree": {"sha": "5ba226a580143e2e73db8d6628432780fe322a8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ba226a580143e2e73db8d6628432780fe322a8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6dc365003bce4cdc11e73fcfe4c61c6da56acd65", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkY8eBCRBK7hj4Ov3rIwAAhpcIAFgH9a18UCILpDqX7Xv5tqF8\nYJs+BLKNcIG92EybsjIVOPEeKC4WiZJgZTqYip0WeYKn5EXmLF7VXMAjFlepeW7z\ni8cNl/YmMaPwcSjFdw14O+QOjDRgvfSykjNjjoDsIAD5Z4eBbngxUc24+aTHhL+8\n/E1S38o/Dl+PEa5oKr7iRIF80PkZI3duwfkRU2JMSUwvFZaZu69uSLNzB5YjfZNH\nFVUhOyRNYrPD8kBFDxlzABZGpmqo9YCHDReyxRPdTe+Fccd8BAsOv6himElPOdz/\nfrq+uej1sGmjVmN4z0LAQFr9cM9110rCv4cTyurtGnsLBDXwfmC7GW0p8JVhbkc=\n=fGnx\n-----END PGP SIGNATURE-----\n", "payload": "tree 5ba226a580143e2e73db8d6628432780fe322a8a\nparent 426dbcdf9208ff7c58b248e8adb4e933babd8ab1\nparent bd31d9ee9c772e10fb256ba177b738170862ac9e\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1684260737 +0200\ncommitter GitHub <noreply@github.com> 1684260737 +0200\n\nRollup merge of #111573 - compiler-errors:erase-re-error, r=WaffleLapkin\n\nErase `ReError` properly\n\nFixes #111341\n\nSince we check whether a type has free regions before erasing (to short circuit unnecesary folding), we need to consider `ReError` as a free region, or else we'll skip it when erasing a type that only mentions `ReError`.\n\ncc `@nnethercote`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6dc365003bce4cdc11e73fcfe4c61c6da56acd65", "html_url": "https://github.com/rust-lang/rust/commit/6dc365003bce4cdc11e73fcfe4c61c6da56acd65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6dc365003bce4cdc11e73fcfe4c61c6da56acd65/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "426dbcdf9208ff7c58b248e8adb4e933babd8ab1", "url": "https://api.github.com/repos/rust-lang/rust/commits/426dbcdf9208ff7c58b248e8adb4e933babd8ab1", "html_url": "https://github.com/rust-lang/rust/commit/426dbcdf9208ff7c58b248e8adb4e933babd8ab1"}, {"sha": "bd31d9ee9c772e10fb256ba177b738170862ac9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd31d9ee9c772e10fb256ba177b738170862ac9e", "html_url": "https://github.com/rust-lang/rust/commit/bd31d9ee9c772e10fb256ba177b738170862ac9e"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "e6d51c4ec9770f2f3f5bd176d0c1380c617ef88c", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6dc365003bce4cdc11e73fcfe4c61c6da56acd65/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dc365003bce4cdc11e73fcfe4c61c6da56acd65/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=6dc365003bce4cdc11e73fcfe4c61c6da56acd65", "patch": "@@ -1708,7 +1708,9 @@ impl<'tcx> Region<'tcx> {\n             ty::ReErased => {\n                 flags = flags | TypeFlags::HAS_RE_ERASED;\n             }\n-            ty::ReError(_) => {}\n+            ty::ReError(_) => {\n+                flags = flags | TypeFlags::HAS_FREE_REGIONS;\n+            }\n         }\n \n         debug!(\"type_flags({:?}) = {:?}\", self, flags);"}, {"sha": "addbe5d658aee5e10fe67db2a75f8a55e99ee5cd", "filename": "tests/ui/borrowck/erase-error-in-mir-drop-tracking.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6dc365003bce4cdc11e73fcfe4c61c6da56acd65/tests%2Fui%2Fborrowck%2Ferase-error-in-mir-drop-tracking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dc365003bce4cdc11e73fcfe4c61c6da56acd65/tests%2Fui%2Fborrowck%2Ferase-error-in-mir-drop-tracking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Ferase-error-in-mir-drop-tracking.rs?ref=6dc365003bce4cdc11e73fcfe4c61c6da56acd65", "patch": "@@ -0,0 +1,23 @@\n+// compile-flags: -Zdrop-tracking-mir\n+// edition:2021\n+\n+use std::future::Future;\n+\n+trait Client {\n+    type Connecting<'a>: Future + Send\n+    where\n+        Self: 'a;\n+\n+    fn connect(&'_ self) -> Self::Connecting<'a>;\n+    //~^ ERROR use of undeclared lifetime name `'a`\n+}\n+\n+fn call_connect<C>(c: &'_ C) -> impl '_ + Future + Send\n+where\n+    C: Client + Send + Sync,\n+{\n+    async move { c.connect().await }\n+    //~^ ERROR `C` does not live long enough\n+}\n+\n+fn main() {}"}, {"sha": "53abe3dc9521d2d6c31af99aa8e46369f3061fc0", "filename": "tests/ui/borrowck/erase-error-in-mir-drop-tracking.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6dc365003bce4cdc11e73fcfe4c61c6da56acd65/tests%2Fui%2Fborrowck%2Ferase-error-in-mir-drop-tracking.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6dc365003bce4cdc11e73fcfe4c61c6da56acd65/tests%2Fui%2Fborrowck%2Ferase-error-in-mir-drop-tracking.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Ferase-error-in-mir-drop-tracking.stderr?ref=6dc365003bce4cdc11e73fcfe4c61c6da56acd65", "patch": "@@ -0,0 +1,24 @@\n+error[E0261]: use of undeclared lifetime name `'a`\n+  --> $DIR/erase-error-in-mir-drop-tracking.rs:11:46\n+   |\n+LL |     fn connect(&'_ self) -> Self::Connecting<'a>;\n+   |                                              ^^ undeclared lifetime\n+   |\n+help: consider introducing lifetime `'a` here\n+   |\n+LL |     fn connect<'a>(&'_ self) -> Self::Connecting<'a>;\n+   |               ++++\n+help: consider introducing lifetime `'a` here\n+   |\n+LL | trait Client<'a> {\n+   |             ++++\n+\n+error: `C` does not live long enough\n+  --> $DIR/erase-error-in-mir-drop-tracking.rs:19:5\n+   |\n+LL |     async move { c.connect().await }\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0261`."}]}