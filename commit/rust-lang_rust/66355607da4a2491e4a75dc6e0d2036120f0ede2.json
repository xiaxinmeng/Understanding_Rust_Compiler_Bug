{"sha": "66355607da4a2491e4a75dc6e0d2036120f0ede2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2MzU1NjA3ZGE0YTI0OTFlNGE3NWRjNmUwZDIwMzYxMjBmMGVkZTI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-12-06T23:55:11Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-12-07T03:55:46Z"}, "message": "hack for now: map uint hashes into a u32, which helps x86_64 perf.", "tree": {"sha": "804d5bfda61813dee5401108478f02b594ad6174", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/804d5bfda61813dee5401108478f02b594ad6174"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66355607da4a2491e4a75dc6e0d2036120f0ede2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66355607da4a2491e4a75dc6e0d2036120f0ede2", "html_url": "https://github.com/rust-lang/rust/commit/66355607da4a2491e4a75dc6e0d2036120f0ede2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66355607da4a2491e4a75dc6e0d2036120f0ede2/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa99bfa170971b14bb72a10ef153480ec4caaa46", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa99bfa170971b14bb72a10ef153480ec4caaa46", "html_url": "https://github.com/rust-lang/rust/commit/aa99bfa170971b14bb72a10ef153480ec4caaa46"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "a4ef467401742b6a55fe635f5ab261000c3f1a62", "filename": "src/libstd/map.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/66355607da4a2491e4a75dc6e0d2036120f0ede2/src%2Flibstd%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66355607da4a2491e4a75dc6e0d2036120f0ede2/src%2Flibstd%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmap.rs?ref=66355607da4a2491e4a75dc6e0d2036120f0ede2", "patch": "@@ -137,21 +137,25 @@ fn mk_hashmap<copy K, copy V>(hasher: hashfn<K>, eqer: eqfn<K>)\n     // is always a power of 2), so that all buckets are probed for a\n     // fixed key.\n \n-    fn hashl(n: uint, _nbkts: uint) -> uint { ret (n >>> 16u) * 2u + 1u; }\n-    fn hashr(n: uint, _nbkts: uint) -> uint { ret 0x0000_ffff_u & n; }\n-    fn hash(h: uint, nbkts: uint, i: uint) -> uint {\n-        ret (hashl(h, nbkts) * i + hashr(h, nbkts)) % nbkts;\n+    fn hashl(n: u32) -> u32 { ret (n >>> 16u32) * 2u32 + 1u32; }\n+    fn hashr(n: u32) -> u32 { ret 0x0000_ffff_u32 & n; }\n+    fn hash(h: u32, nbkts: uint, i: uint) -> uint {\n+        ret ((hashl(h) as uint) * i + (hashr(h) as uint)) % nbkts;\n     }\n+\n+    fn to_u64(h: uint) -> u32 {\n+        ret (h as u32) ^ ((h >>> 16u) as u32);\n+    }\n+\n     /**\n      * We attempt to never call this with a full table.  If we do, it\n      * will fail.\n      */\n-\n     fn insert_common<copy K, copy V>(hasher: hashfn<K>, eqer: eqfn<K>,\n                                      bkts: [mutable bucket<K, V>],\n                                      nbkts: uint, key: K, val: V) -> bool {\n         let i: uint = 0u;\n-        let h: uint = hasher(key);\n+        let h = to_u64(hasher(key));\n         while i < nbkts {\n             let j: uint = hash(h, nbkts, i);\n             alt bkts[j] {\n@@ -171,7 +175,7 @@ fn mk_hashmap<copy K, copy V>(hasher: hashfn<K>, eqer: eqfn<K>)\n                                    bkts: [mutable bucket<K, V>],\n                                    nbkts: uint, key: K) -> option::t<V> {\n         let i: uint = 0u;\n-        let h: uint = hasher(key);\n+        let h = to_u64(hasher(key));\n         while i < nbkts {\n             let j: uint = hash(h, nbkts, i);\n             alt bkts[j] {\n@@ -244,7 +248,7 @@ fn mk_hashmap<copy K, copy V>(hasher: hashfn<K>, eqer: eqfn<K>)\n         }\n         fn remove(key: K) -> option::t<V> {\n             let i: uint = 0u;\n-            let h: uint = hasher(key);\n+            let h = to_u64(hasher(key));\n             while i < nbkts {\n                 let j: uint = hash(h, nbkts, i);\n                 alt bkts[j] {"}]}