{"sha": "a2f861730e5b33391c97fe7ec91470d1c9b96ba9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyZjg2MTczMGU1YjMzMzkxYzk3ZmU3ZWM5MTQ3MGQxYzliOTZiYTk=", "commit": {"author": {"name": "moe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-03-08T09:05:39Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-03-08T09:05:39Z"}, "message": "fix adds a trailing comma to struct-like macro (#2490)\n\n* fix adds a trailing comma to struct-like macro", "tree": {"sha": "4597e3a63f6cd25332f3612cc13f88e7db0ad2fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4597e3a63f6cd25332f3612cc13f88e7db0ad2fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2f861730e5b33391c97fe7ec91470d1c9b96ba9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2f861730e5b33391c97fe7ec91470d1c9b96ba9", "html_url": "https://github.com/rust-lang/rust/commit/a2f861730e5b33391c97fe7ec91470d1c9b96ba9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2f861730e5b33391c97fe7ec91470d1c9b96ba9/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06d509c25cf5b3d33c7f30335f4cf9af759665a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/06d509c25cf5b3d33c7f30335f4cf9af759665a7", "html_url": "https://github.com/rust-lang/rust/commit/06d509c25cf5b3d33c7f30335f4cf9af759665a7"}], "stats": {"total": 81, "additions": 68, "deletions": 13}, "files": [{"sha": "481baa80de60c2e7d38a08a677554d1edf76c27d", "filename": "src/expr.rs", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/a2f861730e5b33391c97fe7ec91470d1c9b96ba9/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2f861730e5b33391c97fe7ec91470d1c9b96ba9/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=a2f861730e5b33391c97fe7ec91470d1c9b96ba9", "patch": "@@ -20,7 +20,7 @@ use chains::rewrite_chain;\n use closures;\n use codemap::{LineRangeUtils, SpanUtils};\n use comment::{combine_strs_with_missing_comments, contains_comment, recover_comment_removed,\n-              rewrite_comment, rewrite_missing_comment, FindUncommented};\n+              rewrite_comment, rewrite_missing_comment, CharClasses, FindUncommented};\n use config::{Config, ControlBraceStyle, IndentStyle};\n use lists::{definitive_tactic, itemize_list, shape_for_tactic, struct_lit_formatting,\n             struct_lit_shape, struct_lit_tactic, write_list, ListFormatting, ListItem, Separator};\n@@ -2411,20 +2411,20 @@ pub fn wrap_args_with_parens(\n /// trailing comma. This function is used when rewriting macro, as adding or removing a trailing\n /// comma from macro can potentially break the code.\n fn span_ends_with_comma(context: &RewriteContext, span: Span) -> bool {\n-    let mut encountered_closing_paren = false;\n-    for c in context.snippet(span).chars().rev() {\n+    let mut result: bool = Default::default();\n+    let mut prev_char: char = Default::default();\n+\n+    for (kind, c) in CharClasses::new(context.snippet(span).chars()) {\n         match c {\n-            ',' => return true,\n-            ')' => if encountered_closing_paren {\n-                return false;\n-            } else {\n-                encountered_closing_paren = true;\n-            },\n-            _ if c.is_whitespace() => continue,\n-            _ => return false,\n+            _ if kind.is_comment() || c.is_whitespace() => continue,\n+            ')' | '}' => result = result && prev_char != c,\n+            ',' => result = true,\n+            _ => result = false,\n         }\n+        prev_char = c;\n     }\n-    false\n+\n+    result\n }\n \n fn rewrite_paren(context: &RewriteContext, subexpr: &ast::Expr, shape: Shape) -> Option<String> {\n@@ -2608,7 +2608,20 @@ fn rewrite_struct_lit<'a>(\n \n         let tactic = struct_lit_tactic(h_shape, context, &item_vec);\n         let nested_shape = shape_for_tactic(tactic, h_shape, v_shape);\n-        let fmt = struct_lit_formatting(nested_shape, tactic, context, base.is_some());\n+\n+        let ends_with_comma = span_ends_with_comma(context, span);\n+        let force_no_trailing_comma = if context.inside_macro && !ends_with_comma {\n+            true\n+        } else {\n+            false\n+        };\n+\n+        let fmt = struct_lit_formatting(\n+            nested_shape,\n+            tactic,\n+            context,\n+            force_no_trailing_comma || base.is_some(),\n+        );\n \n         write_list(&item_vec, &fmt)?\n     };"}, {"sha": "84ce6e647b83c876590cdeab8d8f7f4b42cf09ca", "filename": "tests/source/issue-2445.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a2f861730e5b33391c97fe7ec91470d1c9b96ba9/tests%2Fsource%2Fissue-2445.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2f861730e5b33391c97fe7ec91470d1c9b96ba9/tests%2Fsource%2Fissue-2445.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-2445.rs?ref=a2f861730e5b33391c97fe7ec91470d1c9b96ba9", "patch": "@@ -0,0 +1,21 @@\n+test!(RunPassPretty {\n+            // comment\n+    path: \"src/test/run-pass/pretty\",\n+    mode: \"pretty\",\n+    suite: \"run-pass\",\n+    default: false,\n+    host: true  // should, force, , no trailing comma here\n+});\n+\n+test!(RunPassPretty {\n+            // comment\n+    path: \"src/test/run-pass/pretty\",\n+    mode: \"pretty\",\n+    suite: \"run-pass\",\n+    default: false,\n+    host: true,         // should, , preserve, the trailing comma\n+});\n+\n+test!(Test{\n+    field: i32, // comment\n+});"}, {"sha": "1bc7752fd1619b8a24cad81fcd30b1eb2ab1ed2b", "filename": "tests/target/issue-2445.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a2f861730e5b33391c97fe7ec91470d1c9b96ba9/tests%2Ftarget%2Fissue-2445.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2f861730e5b33391c97fe7ec91470d1c9b96ba9/tests%2Ftarget%2Fissue-2445.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2445.rs?ref=a2f861730e5b33391c97fe7ec91470d1c9b96ba9", "patch": "@@ -0,0 +1,21 @@\n+test!(RunPassPretty {\n+    // comment\n+    path: \"src/test/run-pass/pretty\",\n+    mode: \"pretty\",\n+    suite: \"run-pass\",\n+    default: false,\n+    host: true // should, force, , no trailing comma here\n+});\n+\n+test!(RunPassPretty {\n+    // comment\n+    path: \"src/test/run-pass/pretty\",\n+    mode: \"pretty\",\n+    suite: \"run-pass\",\n+    default: false,\n+    host: true, // should, , preserve, the trailing comma\n+});\n+\n+test!(Test {\n+    field: i32, // comment\n+});"}]}