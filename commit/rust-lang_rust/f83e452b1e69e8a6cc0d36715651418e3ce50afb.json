{"sha": "f83e452b1e69e8a6cc0d36715651418e3ce50afb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4M2U0NTJiMWU2OWU4YTZjYzBkMzY3MTU2NTE0MThlM2NlNTBhZmI=", "commit": {"author": {"name": "Unreal Hoang", "email": "unrealhoang@gmail.com", "date": "2019-05-01T15:42:00Z"}, "committer": {"name": "Unreal Hoang", "email": "unrealhoang@gmail.com", "date": "2019-05-01T15:42:00Z"}, "message": "move guard to arm body assist.", "tree": {"sha": "86fd12fa64612e07295aeba7990b6bfc302b5038", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86fd12fa64612e07295aeba7990b6bfc302b5038"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f83e452b1e69e8a6cc0d36715651418e3ce50afb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE5FNMeJ7UuhhqQiT99mIXvcbzfPoFAlzJvkkACgkQ9mIXvcbz\nfPqX9A//a94PeyYl2Yrgyj9OPsCEgs/CSW1u5CU/JZuQo6iqrYNc4epZRZ/mrLan\n/6UasTq7iGXTeYqOsV6sPZZA0X/JHd8jHZy7r6LdO4uv8Mno+T7xwNZvk0n34cNI\nhoCn4LsYHUnPuUBUr0WyWgHabYIl8kw3F3a0OKBQ2GBkSCmxcoJYAvxod/xseB9k\nwcijgayWuD42eVn/Mg3zjkpPG3PwGcxXrdzGu6G+9XCzYilHUUmozEcnBhHVdt4+\noLzLHlqMe3+V8TY5pWfOgAir+2vGL+59rokQkI4xpzJAgJc40e5oRWa4W2qgmD5A\nnu1u7IhC8Zh2pIItXurnIO81lx5u7tXooaNDP19QggvU1QZVic+v/AN0mCa3afH5\nl/aMVrGuh2BqPLG5SlRxzh4nRZvJ7uI9s/TkJsmZt6jFohETtyUBBmAGKtl/9l5B\n4PDzOhtUwTfj8jok7m3iIn3oExotgCrx3dHyu8BmxGgX9xK3pvAUAV6u5yI5YbGD\nEnX7EsHrTuEA/WdyUz5qqJ3vsvMZe3cozW2X4Mf3weLCmxXpXATWke2OxtuHNlbD\nJ5FrWRazdNfn17mQSyOD8/5j0ayfkJh0bGs8TVYvhR7L6etJaR5xyqyXspxSPPFC\ncQ/1QhUUNkkyMLJHkpcbH24U5lCG0WlvMI8lEyZLMpLBYe2wv7I=\n=IlXA\n-----END PGP SIGNATURE-----", "payload": "tree 86fd12fa64612e07295aeba7990b6bfc302b5038\nparent 43524a39cd6ac26dc6489f6481220179149c5f08\nauthor Unreal Hoang <unrealhoang@gmail.com> 1556725320 +0900\ncommitter Unreal Hoang <unrealhoang@gmail.com> 1556725320 +0900\n\nmove guard to arm body assist.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f83e452b1e69e8a6cc0d36715651418e3ce50afb", "html_url": "https://github.com/rust-lang/rust/commit/f83e452b1e69e8a6cc0d36715651418e3ce50afb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f83e452b1e69e8a6cc0d36715651418e3ce50afb/comments", "author": {"login": "unrealhoang", "id": 1218094, "node_id": "MDQ6VXNlcjEyMTgwOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1218094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unrealhoang", "html_url": "https://github.com/unrealhoang", "followers_url": "https://api.github.com/users/unrealhoang/followers", "following_url": "https://api.github.com/users/unrealhoang/following{/other_user}", "gists_url": "https://api.github.com/users/unrealhoang/gists{/gist_id}", "starred_url": "https://api.github.com/users/unrealhoang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unrealhoang/subscriptions", "organizations_url": "https://api.github.com/users/unrealhoang/orgs", "repos_url": "https://api.github.com/users/unrealhoang/repos", "events_url": "https://api.github.com/users/unrealhoang/events{/privacy}", "received_events_url": "https://api.github.com/users/unrealhoang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "unrealhoang", "id": 1218094, "node_id": "MDQ6VXNlcjEyMTgwOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1218094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unrealhoang", "html_url": "https://github.com/unrealhoang", "followers_url": "https://api.github.com/users/unrealhoang/followers", "following_url": "https://api.github.com/users/unrealhoang/following{/other_user}", "gists_url": "https://api.github.com/users/unrealhoang/gists{/gist_id}", "starred_url": "https://api.github.com/users/unrealhoang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unrealhoang/subscriptions", "organizations_url": "https://api.github.com/users/unrealhoang/orgs", "repos_url": "https://api.github.com/users/unrealhoang/repos", "events_url": "https://api.github.com/users/unrealhoang/events{/privacy}", "received_events_url": "https://api.github.com/users/unrealhoang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43524a39cd6ac26dc6489f6481220179149c5f08", "url": "https://api.github.com/repos/rust-lang/rust/commits/43524a39cd6ac26dc6489f6481220179149c5f08", "html_url": "https://github.com/rust-lang/rust/commit/43524a39cd6ac26dc6489f6481220179149c5f08"}], "stats": {"total": 101, "additions": 101, "deletions": 0}, "files": [{"sha": "a2998ae598d9de0e8a23e7562112b1ebec42a5b4", "filename": "crates/ra_assists/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f83e452b1e69e8a6cc0d36715651418e3ce50afb/crates%2Fra_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f83e452b1e69e8a6cc0d36715651418e3ce50afb/crates%2Fra_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Flib.rs?ref=f83e452b1e69e8a6cc0d36715651418e3ce50afb", "patch": "@@ -101,6 +101,7 @@ mod split_import;\n mod remove_dbg;\n pub mod auto_import;\n mod add_missing_impl_members;\n+mod move_guard_to_arm_body;\n \n fn all_assists<DB: HirDatabase>() -> &'static [fn(AssistCtx<DB>) -> Option<Assist>] {\n     &[\n@@ -120,6 +121,7 @@ fn all_assists<DB: HirDatabase>() -> &'static [fn(AssistCtx<DB>) -> Option<Assis\n         add_missing_impl_members::add_missing_impl_members,\n         add_missing_impl_members::add_missing_default_members,\n         inline_local_variable::inline_local_varialbe,\n+        move_guard_to_arm_body::move_guard_to_arm_body,\n     ]\n }\n "}, {"sha": "d6240527f87de91b412efe9380fed8dc38addbbf", "filename": "crates/ra_assists/src/move_guard_to_arm_body.rs", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/f83e452b1e69e8a6cc0d36715651418e3ce50afb/crates%2Fra_assists%2Fsrc%2Fmove_guard_to_arm_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f83e452b1e69e8a6cc0d36715651418e3ce50afb/crates%2Fra_assists%2Fsrc%2Fmove_guard_to_arm_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fmove_guard_to_arm_body.rs?ref=f83e452b1e69e8a6cc0d36715651418e3ce50afb", "patch": "@@ -0,0 +1,99 @@\n+use hir::{\n+    db::HirDatabase,\n+};\n+use ra_syntax::{\n+    TextUnit,\n+    SyntaxElement,\n+    ast::{MatchArm, AstNode, AstToken},\n+    ast,\n+};\n+\n+use crate::{AssistCtx, Assist, AssistId};\n+\n+pub(crate) fn move_guard_to_arm_body(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n+    let match_arm = ctx.node_at_offset::<MatchArm>()?;\n+    let guard = match_arm.guard()?;\n+    let space_before_guard = guard.syntax().prev_sibling_or_token();\n+\n+    let guard_conditions = guard.expr()?;\n+    let arm_expr = match_arm.expr()?;\n+    let buf = format!(\"if {} {{ {} }}\",\n+                          guard_conditions.syntax().text(),\n+                          arm_expr.syntax().text());\n+\n+    ctx.add_action(AssistId(\"move_guard_to_arm_body\"), \"move guard to arm body\", |edit| {\n+        edit.target(guard.syntax().range());\n+        let offseting_amount = match space_before_guard {\n+            Some(SyntaxElement::Token(tok)) => {\n+                if let Some(_) = ast::Whitespace::cast(tok) {\n+                    let ele = space_before_guard.unwrap().range();\n+                    edit.delete(ele);\n+                    ele.len()\n+                } else {\n+                    TextUnit::from(0)\n+                }\n+            },\n+            _ => TextUnit::from(0)\n+        };\n+\n+        edit.delete(guard.syntax().range());\n+        edit.replace_node_and_indent(arm_expr.syntax(), buf);\n+        edit.set_cursor(\n+            arm_expr.syntax().range().start() +\n+            TextUnit::from(3) -\n+            offseting_amount);\n+    });\n+    ctx.build()\n+}\n+\n+#[cfg(test)]\n+mod tests {\n+    use super::*;\n+\n+    use crate::helpers::{ check_assist, check_assist_target };\n+\n+    #[test]\n+    fn move_guard_to_arm_body_target() {\n+        check_assist_target(\n+            move_guard_to_arm_body,\n+            r#\"\n+            fn f() {\n+                let t = 'a';\n+                let chars = \"abcd\";\n+                match t {\n+                    '\\r' <|>if chars.clone().next() == Some('\\n') => false,\n+                    _ => true\n+                }\n+            }\n+            \"#,\n+            r#\"if chars.clone().next() == Some('\\n')\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn move_guard_to_arm_body_works() {\n+        check_assist(\n+            move_guard_to_arm_body,\n+            r#\"\n+            fn f() {\n+                let t = 'a';\n+                let chars = \"abcd\";\n+                match t {\n+                    '\\r' <|>if chars.clone().next() == Some('\\n') => false,\n+                    _ => true\n+                }\n+            }\n+            \"#,\n+            r#\"\n+            fn f() {\n+                let t = 'a';\n+                let chars = \"abcd\";\n+                match t {\n+                    '\\r' => if chars.clone().next() == Some('\\n') { <|>false },\n+                    _ => true\n+                }\n+            }\n+            \"#\n+        );\n+    }\n+}"}]}