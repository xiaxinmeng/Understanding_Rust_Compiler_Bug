{"sha": "2f371774ef632f2dcc4548a39e8b6b98422a725b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMzcxNzc0ZWY2MzJmMmRjYzQ1NDhhMzllOGI2Yjk4NDIyYTcyNWI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-23T18:43:03Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-23T18:43:03Z"}, "message": "fix conditional compilation condition for os_str <-> bytes conversion", "tree": {"sha": "7ed98753c152792cdda883b8228b20485f00ae3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ed98753c152792cdda883b8228b20485f00ae3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f371774ef632f2dcc4548a39e8b6b98422a725b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f371774ef632f2dcc4548a39e8b6b98422a725b", "html_url": "https://github.com/rust-lang/rust/commit/2f371774ef632f2dcc4548a39e8b6b98422a725b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f371774ef632f2dcc4548a39e8b6b98422a725b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aaa16a5f4b8caabf8e044e6dd1c48330dfb7900d", "url": "https://api.github.com/repos/rust-lang/rust/commits/aaa16a5f4b8caabf8e044e6dd1c48330dfb7900d", "html_url": "https://github.com/rust-lang/rust/commit/aaa16a5f4b8caabf8e044e6dd1c48330dfb7900d"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "b4706f04d9b87d11afe117c0f8c0ed014aae62b7", "filename": "src/helpers.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2f371774ef632f2dcc4548a39e8b6b98422a725b/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f371774ef632f2dcc4548a39e8b6b98422a725b/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=2f371774ef632f2dcc4548a39e8b6b98422a725b", "patch": "@@ -463,11 +463,11 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         'tcx: 'a,\n         'mir: 'a,\n     {\n-        #[cfg(target_os = \"unix\")]\n+        #[cfg(unix)]\n         fn bytes_to_os_str<'tcx, 'a>(bytes: &'a [u8]) -> InterpResult<'tcx, &'a OsStr> {\n-            Ok(std::os::unix::ffi::OsStringExt::from_bytes(bytes))\n+            Ok(std::os::unix::ffi::OsStrExt::from_bytes(bytes))\n         }\n-        #[cfg(not(target_os = \"unix\"))]\n+        #[cfg(not(unix))]\n         fn bytes_to_os_str<'tcx, 'a>(bytes: &'a [u8]) -> InterpResult<'tcx, &'a OsStr> {\n             let s = std::str::from_utf8(bytes)\n                 .map_err(|_| err_unsup_format!(\"{:?} is not a valid utf-8 string\", bytes))?;\n@@ -490,11 +490,11 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         scalar: Scalar<Tag>,\n         size: u64,\n     ) -> InterpResult<'tcx, (bool, u64)> {\n-        #[cfg(target_os = \"unix\")]\n+        #[cfg(unix)]\n         fn os_str_to_bytes<'tcx, 'a>(os_str: &'a OsStr) -> InterpResult<'tcx, &'a [u8]> {\n-            std::os::unix::ffi::OsStringExt::into_bytes(os_str)\n+            Ok(std::os::unix::ffi::OsStrExt::as_bytes(os_str))\n         }\n-        #[cfg(not(target_os = \"unix\"))]\n+        #[cfg(not(unix))]\n         fn os_str_to_bytes<'tcx, 'a>(os_str: &'a OsStr) -> InterpResult<'tcx, &'a [u8]> {\n             // On non-unix platforms the best we can do to transform bytes from/to OS strings is to do the\n             // intermediate transformation into strings. Which invalidates non-utf8 paths that are actually"}]}