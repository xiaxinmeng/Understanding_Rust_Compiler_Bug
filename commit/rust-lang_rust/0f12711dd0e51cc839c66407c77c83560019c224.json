{"sha": "0f12711dd0e51cc839c66407c77c83560019c224", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmMTI3MTFkZDBlNTFjYzgzOWM2NjQwN2M3N2M4MzU2MDAxOWMyMjQ=", "commit": {"author": {"name": "Remy Rakic", "email": "remy.rakic@gmail.com", "date": "2019-12-05T13:59:56Z"}, "committer": {"name": "Remy Rakic", "email": "remy.rakic@gmail.com", "date": "2019-12-05T13:59:56Z"}, "message": "make const-qualif look at more `const fn`s\n\nthe unstables ones in libcore, with the unstable feature disabled, were not checked", "tree": {"sha": "b8a4a97342c3665b5442bf380d2c237d70c04b30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8a4a97342c3665b5442bf380d2c237d70c04b30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f12711dd0e51cc839c66407c77c83560019c224", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f12711dd0e51cc839c66407c77c83560019c224", "html_url": "https://github.com/rust-lang/rust/commit/0f12711dd0e51cc839c66407c77c83560019c224", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f12711dd0e51cc839c66407c77c83560019c224/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d825e35ee8325146e6c175a4c61bcb645b347d5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d825e35ee8325146e6c175a4c61bcb645b347d5e", "html_url": "https://github.com/rust-lang/rust/commit/d825e35ee8325146e6c175a4c61bcb645b347d5e"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "abad622289005760ba8a84ef529d3c8c765b7692", "filename": "src/librustc_mir/transform/check_consts/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0f12711dd0e51cc839c66407c77c83560019c224/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f12711dd0e51cc839c66407c77c83560019c224/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fmod.rs?ref=0f12711dd0e51cc839c66407c77c83560019c224", "patch": "@@ -77,7 +77,11 @@ impl ConstKind {\n         let mode = match tcx.hir().body_owner_kind(hir_id) {\n             HirKind::Closure => return None,\n \n-            HirKind::Fn if tcx.is_const_fn(def_id) => ConstKind::ConstFn,\n+            // Note: this is deliberately checking for `is_const_fn_raw`, as the `is_const_fn`\n+            // checks take into account the `rustc_const_unstable` attribute combined with enabled\n+            // feature gates. An unstable `const fn` could otherwise be considered \"not const\"\n+            // by const qualification. See issue #67053 for more details.\n+            HirKind::Fn if tcx.is_const_fn_raw(def_id) => ConstKind::ConstFn,\n             HirKind::Fn => return None,\n \n             HirKind::Const => ConstKind::Const,"}]}