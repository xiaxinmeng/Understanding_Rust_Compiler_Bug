{"sha": "a21b43c6bbb0edcf4dfe9913a084f28eb950b364", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyMWI0M2M2YmJiMGVkY2Y0ZGZlOTkxM2EwODRmMjhlYjk1MGIzNjQ=", "commit": {"author": {"name": "Ben Striegel", "email": "ben.striegel@gmail.com", "date": "2013-03-12T02:46:16Z"}, "committer": {"name": "Ben Striegel", "email": "ben.striegel@gmail.com", "date": "2013-03-12T02:46:16Z"}, "message": "Implement Add on Option types\n\nThis will allow you to use the + operator to add together any two\nOptions, assuming that the contents of each Option likewise implement\n+. So Some(4) + Some(1) == Some(5), and adding with None leaves the\nother value unchanged.\n\nThis might be monoidic? I don't know what that word means!", "tree": {"sha": "c1a6875ae71cc13fb24aa4a3ac6a642a9e95c577", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1a6875ae71cc13fb24aa4a3ac6a642a9e95c577"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a21b43c6bbb0edcf4dfe9913a084f28eb950b364", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a21b43c6bbb0edcf4dfe9913a084f28eb950b364", "html_url": "https://github.com/rust-lang/rust/commit/a21b43c6bbb0edcf4dfe9913a084f28eb950b364", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a21b43c6bbb0edcf4dfe9913a084f28eb950b364/comments", "author": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6bb4a0f1a61ab00e09c4cb24dfff95c6c2481c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6bb4a0f1a61ab00e09c4cb24dfff95c6c2481c7", "html_url": "https://github.com/rust-lang/rust/commit/a6bb4a0f1a61ab00e09c4cb24dfff95c6c2481c7"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "9947888601773fdadefb7af92947bc84c17a8e1f", "filename": "src/libcore/option.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a21b43c6bbb0edcf4dfe9913a084f28eb950b364/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a21b43c6bbb0edcf4dfe9913a084f28eb950b364/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=a21b43c6bbb0edcf4dfe9913a084f28eb950b364", "patch": "@@ -42,6 +42,7 @@ let unwrapped_msg = match msg {\n */\n \n use cmp::{Eq,Ord};\n+use ops::Add;\n use kinds::Copy;\n use util;\n use num::Zero;\n@@ -85,6 +86,18 @@ impl<T:Ord> Ord for Option<T> {\n     }\n }\n \n+impl<T: Copy + Add<T,T>> Add<Option<T>, Option<T>> for Option<T> {\n+    #[inline(always)]\n+    pure fn add(&self, other: &Option<T>) -> Option<T> {\n+        match (*self, *other) {\n+            (None, None) => None,\n+            (_, None) => *self,\n+            (None, _) => *other,\n+            (Some(ref lhs), Some(ref rhs)) => Some(*lhs + *rhs)\n+        }\n+    }\n+}\n+\n #[inline(always)]\n pub pure fn get<T:Copy>(opt: Option<T>) -> T {\n     /*!"}, {"sha": "9242056270691d04ca2e4f9a52cc0fc01f44cea5", "filename": "src/test/run-pass/option_addition.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a21b43c6bbb0edcf4dfe9913a084f28eb950b364/src%2Ftest%2Frun-pass%2Foption_addition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a21b43c6bbb0edcf4dfe9913a084f28eb950b364/src%2Ftest%2Frun-pass%2Foption_addition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Foption_addition.rs?ref=a21b43c6bbb0edcf4dfe9913a084f28eb950b364", "patch": "@@ -0,0 +1,27 @@\n+fn main() {\n+    let foo = 1;\n+    let bar = 2;\n+    let foobar = foo + bar;\n+\n+    let nope = optint(0) + optint(0);\n+    let somefoo = optint(foo) + optint(0);\n+    let somebar = optint(bar) + optint(0);\n+    let somefoobar = optint(foo) + optint(bar);\n+\n+    match nope {\n+        None => (),\n+        Some(foo) => fail!(fmt!(\"expected None, but found %?\", foo))\n+    }\n+    fail_unless!(foo == somefoo.get());\n+    fail_unless!(bar == somebar.get());\n+    fail_unless!(foobar == somefoobar.get());\n+}\n+\n+fn optint(in: int) -> Option<int> {\n+    if in == 0 {\n+        return None;\n+    }\n+    else {\n+        return Some(in);\n+    }\n+}"}]}