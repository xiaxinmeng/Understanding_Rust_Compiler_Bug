{"sha": "ca99d51b6d459500d43a1ffb52188c54041fc754", "node_id": "C_kwDOAAsO6NoAKGNhOTlkNTFiNmQ0NTk1MDBkNDNhMWZmYjUyMTg4YzU0MDQxZmM3NTQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-12T21:29:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-12T21:29:47Z"}, "message": "Rollup merge of #107842 - fee1-dead-contrib:patch_rustfmt_nixos, r=Mark-Simulacrum\n\nPatch `build/rustfmt/lib/*.so` for NixOS\n\nfixes #107676.", "tree": {"sha": "376b8158f89dfec0fe1d8c0b10f42b9608400862", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/376b8158f89dfec0fe1d8c0b10f42b9608400862"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca99d51b6d459500d43a1ffb52188c54041fc754", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj6VpLCRBK7hj4Ov3rIwAA+fUIAKk5+N0Xgcdg8S1O7tu11smC\nEbFwUDGm0SXFOgS/ImPNGqDUl/bmjDqvyriRbVjPcbz30anBGFdLxGyGnlfNhmd2\nOsecir4UgElEVvk9whrOCQWmRLAmLN7u0uPtvIe1AxY0eNKE0kzf91mqPvkkpM2T\n8K/apHaY3CCPIzM1s2pEmOPA3UojVm73fDbjxW801E6kITWl7hGNdJ5mGsxMyGh4\nCpmJ+0CUcRqgkvIyJ49RdWtlFnyTVF+JrE+8t9Oj47SRJGoAHcdYeLsOTxq5soPF\nDH/kwtLQzSKBGe7tBNsu+9vtql08b2ms3d8lT1KFeqf85E3GcoUuRbEqTE8P2Pk=\n=aCHK\n-----END PGP SIGNATURE-----\n", "payload": "tree 376b8158f89dfec0fe1d8c0b10f42b9608400862\nparent d29aba19d01e51a05dafb6c4a064d11979f6f7aa\nparent 2e1b78ddb9146d0f2ad96a08d664ae08d69cf341\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1676237387 +0100\ncommitter GitHub <noreply@github.com> 1676237387 +0100\n\nRollup merge of #107842 - fee1-dead-contrib:patch_rustfmt_nixos, r=Mark-Simulacrum\n\nPatch `build/rustfmt/lib/*.so` for NixOS\n\nfixes #107676.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca99d51b6d459500d43a1ffb52188c54041fc754", "html_url": "https://github.com/rust-lang/rust/commit/ca99d51b6d459500d43a1ffb52188c54041fc754", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca99d51b6d459500d43a1ffb52188c54041fc754/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d29aba19d01e51a05dafb6c4a064d11979f6f7aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/d29aba19d01e51a05dafb6c4a064d11979f6f7aa", "html_url": "https://github.com/rust-lang/rust/commit/d29aba19d01e51a05dafb6c4a064d11979f6f7aa"}, {"sha": "2e1b78ddb9146d0f2ad96a08d664ae08d69cf341", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e1b78ddb9146d0f2ad96a08d664ae08d69cf341", "html_url": "https://github.com/rust-lang/rust/commit/2e1b78ddb9146d0f2ad96a08d664ae08d69cf341"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "d6592d2d77116507d9c54a3b8c0c0709f36a3025", "filename": "src/bootstrap/download.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ca99d51b6d459500d43a1ffb52188c54041fc754/src%2Fbootstrap%2Fdownload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca99d51b6d459500d43a1ffb52188c54041fc754/src%2Fbootstrap%2Fdownload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdownload.rs?ref=ca99d51b6d459500d43a1ffb52188c54041fc754", "patch": "@@ -181,8 +181,7 @@ impl Config {\n             // appear to have this (even when `../lib` is redundant).\n             // NOTE: there are only two paths here, delimited by a `:`\n             let mut entries = OsString::from(\"$ORIGIN/../lib:\");\n-            entries.push(t!(fs::canonicalize(nix_deps_dir)));\n-            entries.push(\"/lib\");\n+            entries.push(t!(fs::canonicalize(nix_deps_dir)).join(\"lib\"));\n             entries\n         };\n         patchelf.args(&[OsString::from(\"--set-rpath\"), rpath_entries]);\n@@ -370,6 +369,13 @@ impl Config {\n         if self.should_fix_bins_and_dylibs() {\n             self.fix_bin_or_dylib(&bin_root.join(\"bin\").join(\"rustfmt\"));\n             self.fix_bin_or_dylib(&bin_root.join(\"bin\").join(\"cargo-fmt\"));\n+            let lib_dir = bin_root.join(\"lib\");\n+            for lib in t!(fs::read_dir(&lib_dir), lib_dir.display().to_string()) {\n+                let lib = t!(lib);\n+                if lib.path().extension() == Some(OsStr::new(\"so\")) {\n+                    self.fix_bin_or_dylib(&lib.path());\n+                }\n+            }\n         }\n \n         self.create(&rustfmt_stamp, &channel);"}]}