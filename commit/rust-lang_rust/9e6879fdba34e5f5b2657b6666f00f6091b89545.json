{"sha": "9e6879fdba34e5f5b2657b6666f00f6091b89545", "node_id": "C_kwDOAAsO6NoAKDllNjg3OWZkYmEzNGU1ZjViMjY1N2I2NjY2ZjAwZjYwOTFiODk1NDU", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-04-20T04:04:22Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-04-20T04:04:22Z"}, "message": "Only record `fallback_span` when necessary.", "tree": {"sha": "2f593cc6f402fe000e4a3ea3feec3abf07472a1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f593cc6f402fe000e4a3ea3feec3abf07472a1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e6879fdba34e5f5b2657b6666f00f6091b89545", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e6879fdba34e5f5b2657b6666f00f6091b89545", "html_url": "https://github.com/rust-lang/rust/commit/9e6879fdba34e5f5b2657b6666f00f6091b89545", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e6879fdba34e5f5b2657b6666f00f6091b89545/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b653c1a43b88d39a127b4b24dac327080151268", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b653c1a43b88d39a127b4b24dac327080151268", "html_url": "https://github.com/rust-lang/rust/commit/5b653c1a43b88d39a127b4b24dac327080151268"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "28be9f4b592df06a3e784e4ab05ee8a905112dda", "filename": "compiler/rustc_parse/src/parser/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e6879fdba34e5f5b2657b6666f00f6091b89545/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e6879fdba34e5f5b2657b6666f00f6091b89545/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs?ref=9e6879fdba34e5f5b2657b6666f00f6091b89545", "patch": "@@ -1000,7 +1000,6 @@ impl<'a> Parser<'a> {\n \n     /// Advance the parser by one token.\n     pub fn bump(&mut self) {\n-        let fallback_span = self.token.span;\n         let (mut next, spacing) = self.token_cursor.inlined_next(self.desugar_doc_comments);\n         self.token_cursor.num_next_calls += 1;\n         // We've retrieved an token from the underlying\n@@ -1009,6 +1008,7 @@ impl<'a> Parser<'a> {\n         self.token_cursor.break_last_token = false;\n         if next.span.is_dummy() {\n             // Tweak the location for better diagnostics, but keep syntactic context intact.\n+            let fallback_span = self.token.span;\n             next.span = fallback_span.with_ctxt(next.span.ctxt());\n         }\n         debug_assert!(!matches!("}]}