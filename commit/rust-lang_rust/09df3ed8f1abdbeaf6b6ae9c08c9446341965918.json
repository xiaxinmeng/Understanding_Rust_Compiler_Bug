{"sha": "09df3ed8f1abdbeaf6b6ae9c08c9446341965918", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5ZGYzZWQ4ZjFhYmRiZWFmNmI2YWU5YzA4Yzk0NDYzNDE5NjU5MTg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-10-05T03:03:40Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-10-05T03:04:13Z"}, "message": "docs: Explain a little bit about dtors", "tree": {"sha": "cabc842e0fa976e0d11540bb39f162422e6bff12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cabc842e0fa976e0d11540bb39f162422e6bff12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09df3ed8f1abdbeaf6b6ae9c08c9446341965918", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09df3ed8f1abdbeaf6b6ae9c08c9446341965918", "html_url": "https://github.com/rust-lang/rust/commit/09df3ed8f1abdbeaf6b6ae9c08c9446341965918", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09df3ed8f1abdbeaf6b6ae9c08c9446341965918/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fc60af441a1375ee73a0efe4524b54ff039e69a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fc60af441a1375ee73a0efe4524b54ff039e69a", "html_url": "https://github.com/rust-lang/rust/commit/8fc60af441a1375ee73a0efe4524b54ff039e69a"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "dd16e88329f564a73576fb754ee70b78f796beff", "filename": "doc/tutorial.md", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/09df3ed8f1abdbeaf6b6ae9c08c9446341965918/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/09df3ed8f1abdbeaf6b6ae9c08c9446341965918/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=09df3ed8f1abdbeaf6b6ae9c08c9446341965918", "patch": "@@ -734,6 +734,7 @@ omitted from the type, such an assignment would result in a type error.\n \n Structs can be destructured in `match` patterns. The basic syntax is\n `Name {fieldname: pattern, ...}`:\n+\n ~~~~\n # struct Point { x: float, y: float }\n # let mypoint = Point { x: 0.0, y: 0.0 };\n@@ -747,6 +748,35 @@ In general, the field names of a struct do not have to appear in the same\n order they appear in the type. When you are not interested in all\n the fields of a struct, a struct pattern may end with `, _` (as in\n `Name {field1, _}`) to indicate that you're ignoring all other fields.\n+Additionally, struct fields have a shorthand matching form that simply\n+reuses the field name as the binding name.\n+\n+~~~\n+# struct Point { x: float, y: float }\n+# let mypoint = Point { x: 0.0, y: 0.0 };\n+match mypoint {\n+    Point { x, _ } => { io::println(x.to_str()) }\n+}\n+~~~\n+\n+Structs are the only type in Rust that may have user-defined destructors,\n+using `drop` blocks, inside of which the struct's value may be referred\n+to with the name `self`.\n+\n+~~~\n+struct TimeBomb {\n+    explosivity: uint,\n+\n+    drop {\n+        for iter::repeat(explosivity) {\n+            io::println(fmt!(\"blam!\"));\n+        }\n+    }\n+}\n+~~~\n+\n+> ***Note***: This destructor syntax is temporary. Eventually destructors\n+> will be defined for any type using [traits](#traits).\n \n ## Enums\n "}]}