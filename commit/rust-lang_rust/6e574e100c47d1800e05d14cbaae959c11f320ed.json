{"sha": "6e574e100c47d1800e05d14cbaae959c11f320ed", "node_id": "C_kwDOAAsO6NoAKDZlNTc0ZTEwMGM0N2QxODAwZTA1ZDE0Y2JhYWU5NTljMTFmMzIwZWQ", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-08-11T21:04:01Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-08-14T11:31:46Z"}, "message": "Update rustdoc tests", "tree": {"sha": "d2abde56c792f96d596d1ba0a29e482e021024ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2abde56c792f96d596d1ba0a29e482e021024ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e574e100c47d1800e05d14cbaae959c11f320ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e574e100c47d1800e05d14cbaae959c11f320ed", "html_url": "https://github.com/rust-lang/rust/commit/6e574e100c47d1800e05d14cbaae959c11f320ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e574e100c47d1800e05d14cbaae959c11f320ed/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33df8a96553fc99f9792c70a8a28491f0519718c", "url": "https://api.github.com/repos/rust-lang/rust/commits/33df8a96553fc99f9792c70a8a28491f0519718c", "html_url": "https://github.com/rust-lang/rust/commit/33df8a96553fc99f9792c70a8a28491f0519718c"}], "stats": {"total": 81, "additions": 41, "deletions": 40}, "files": [{"sha": "2184897872153b6fb7573a0292ffb3c6973738d8", "filename": "src/librustdoc/html/highlight/fixtures/decorations.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6e574e100c47d1800e05d14cbaae959c11f320ed/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fdecorations.html", "raw_url": "https://github.com/rust-lang/rust/raw/6e574e100c47d1800e05d14cbaae959c11f320ed/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fdecorations.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fdecorations.html?ref=6e574e100c47d1800e05d14cbaae959c11f320ed", "patch": "@@ -1,2 +1,2 @@\n-<span class=\"example\"><span class=\"kw\">let</span> <span class=\"ident\">x</span> = <span class=\"number\">1</span>;</span>\n-<span class=\"kw\">let</span> <span class=\"ident\">y</span> = <span class=\"number\">2</span>;\n\\ No newline at end of file\n+<span class=\"example\"><span class=\"kw\">let </span>x = <span class=\"number\">1</span>;</span>\n+<span class=\"kw\">let </span>y = <span class=\"number\">2</span>;\n\\ No newline at end of file"}, {"sha": "30b50ca7c662c23a5e6b2ba69d2fcc9e41b0c45b", "filename": "src/librustdoc/html/highlight/fixtures/dos_line.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e574e100c47d1800e05d14cbaae959c11f320ed/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fdos_line.html", "raw_url": "https://github.com/rust-lang/rust/raw/6e574e100c47d1800e05d14cbaae959c11f320ed/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fdos_line.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fdos_line.html?ref=6e574e100c47d1800e05d14cbaae959c11f320ed", "patch": "@@ -1,3 +1,3 @@\n-<span class=\"kw\">pub</span> <span class=\"kw\">fn</span> <span class=\"ident\">foo</span>() {\n+<span class=\"kw\">pub fn </span>foo() {\n <span class=\"macro\">println!</span>(<span class=\"string\">&quot;foo&quot;</span>);\n }"}, {"sha": "9f73e03f95e41440025db3435d6df38b159d849c", "filename": "src/librustdoc/html/highlight/fixtures/highlight.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6e574e100c47d1800e05d14cbaae959c11f320ed/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fhighlight.html", "raw_url": "https://github.com/rust-lang/rust/raw/6e574e100c47d1800e05d14cbaae959c11f320ed/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fhighlight.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fhighlight.html?ref=6e574e100c47d1800e05d14cbaae959c11f320ed", "patch": "@@ -1,4 +1,4 @@\n-<span class=\"kw\">use</span> <span class=\"ident\"><span class=\"kw\">crate</span>::a::foo</span>;\n-<span class=\"kw\">use</span> <span class=\"ident\"><span class=\"self\">self</span>::whatever</span>;\n-<span class=\"kw\">let</span> <span class=\"ident\">x</span> = <span class=\"ident\"><span class=\"kw\">super</span>::b::foo</span>;\n-<span class=\"kw\">let</span> <span class=\"ident\">y</span> = <span class=\"ident\"><span class=\"self\">Self</span>::whatever</span>;\n\\ No newline at end of file\n+<span class=\"kw\">use </span><span class=\"kw\">crate</span>::a::foo;\n+<span class=\"kw\">use </span><span class=\"self\">self</span>::whatever;\n+<span class=\"kw\">let </span>x = <span class=\"kw\">super</span>::b::foo;\n+<span class=\"kw\">let </span>y = <span class=\"self\">Self</span>::whatever;\n\\ No newline at end of file"}, {"sha": "ae2650528eb723c742f598f3e5cd77ff0128fb23", "filename": "src/librustdoc/html/highlight/fixtures/sample.html", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/6e574e100c47d1800e05d14cbaae959c11f320ed/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fsample.html", "raw_url": "https://github.com/rust-lang/rust/raw/6e574e100c47d1800e05d14cbaae959c11f320ed/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fsample.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fsample.html?ref=6e574e100c47d1800e05d14cbaae959c11f320ed", "patch": "@@ -8,30 +8,30 @@\n .lifetime { color: #B76514; }\n .question-mark { color: #ff9011; }\n </style>\n-<pre><code><span class=\"attribute\">#![<span class=\"ident\">crate_type</span> = <span class=\"string\">&quot;lib&quot;</span>]</span>\n+<pre><code><span class=\"attribute\">#![crate_type = <span class=\"string\">&quot;lib&quot;</span>]</span>\n \n-<span class=\"kw\">use</span> <span class=\"ident\">std::path</span>::{<span class=\"ident\">Path</span>, <span class=\"ident\">PathBuf</span>};\n+<span class=\"kw\">use </span>std::path::{Path, PathBuf};\n \n-<span class=\"attribute\">#[<span class=\"ident\">cfg</span>(<span class=\"ident\">target_os</span> = <span class=\"string\">&quot;linux&quot;</span>)]</span>\n-<span class=\"kw\">fn</span> <span class=\"ident\">main</span>() -&gt; () {\n-    <span class=\"kw\">let</span> <span class=\"ident\">foo</span> = <span class=\"bool-val\">true</span> &amp;&amp; <span class=\"bool-val\">false</span> || <span class=\"bool-val\">true</span>;\n-    <span class=\"kw\">let</span> <span class=\"kw\">_</span>: <span class=\"kw-2\">*const</span> () = <span class=\"number\">0</span>;\n-    <span class=\"kw\">let</span> <span class=\"kw\">_</span> = <span class=\"kw-2\">&amp;</span><span class=\"ident\">foo</span>;\n-    <span class=\"kw\">let</span> <span class=\"kw\">_</span> = &amp;&amp;<span class=\"ident\">foo</span>;\n-    <span class=\"kw\">let</span> <span class=\"kw\">_</span> = <span class=\"kw-2\">*</span><span class=\"ident\">foo</span>;\n-    <span class=\"macro\">mac!</span>(<span class=\"ident\">foo</span>, <span class=\"kw-2\">&amp;mut</span> <span class=\"ident\">bar</span>);\n-    <span class=\"macro\">assert!</span>(<span class=\"self\">self</span>.<span class=\"ident\">length</span> &lt; <span class=\"ident\">N</span> &amp;&amp; <span class=\"ident\">index</span> &lt;= <span class=\"self\">self</span>.<span class=\"ident\">length</span>);\n-    <span class=\"ident\">::std::env::var</span>(<span class=\"string\">&quot;gateau&quot;</span>).<span class=\"ident\">is_ok</span>();\n-    <span class=\"attribute\">#[<span class=\"ident\">rustfmt::skip</span>]</span>\n-    <span class=\"kw\">let</span> <span class=\"ident\">s</span>:<span class=\"ident\">std::path::PathBuf</span> = <span class=\"ident\">std::path::PathBuf::new</span>();\n-    <span class=\"kw\">let</span> <span class=\"kw-2\">mut</span> <span class=\"ident\">s</span> = <span class=\"ident\">String::new</span>();\n+<span class=\"attribute\">#[cfg(target_os = <span class=\"string\">&quot;linux&quot;</span>)]</span>\n+<span class=\"kw\">fn </span>main() -&gt; () {\n+    <span class=\"kw\">let </span>foo = <span class=\"bool-val\">true </span>&amp;&amp; <span class=\"bool-val\">false </span>|| <span class=\"bool-val\">true</span>;\n+    <span class=\"kw\">let _</span>: <span class=\"kw-2\">*const </span>() = <span class=\"number\">0</span>;\n+    <span class=\"kw\">let _ </span>= <span class=\"kw-2\">&amp;</span>foo;\n+    <span class=\"kw\">let _ </span>= &amp;&amp;foo;\n+    <span class=\"kw\">let _ </span>= <span class=\"kw-2\">*</span>foo;\n+    <span class=\"macro\">mac!</span>(foo, <span class=\"kw-2\">&amp;mut </span>bar);\n+    <span class=\"macro\">assert!</span>(<span class=\"self\">self</span>.length &lt; N &amp;&amp; index &lt;= <span class=\"self\">self</span>.length);\n+    ::std::env::var(<span class=\"string\">&quot;gateau&quot;</span>).is_ok();\n+    <span class=\"attribute\">#[rustfmt::skip]</span>\n+    <span class=\"kw\">let </span>s:std::path::PathBuf = std::path::PathBuf::new();\n+    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>s = String::new();\n \n-    <span class=\"kw\">match</span> <span class=\"kw-2\">&amp;</span><span class=\"ident\">s</span> {\n-        <span class=\"kw-2\">ref</span> <span class=\"kw-2\">mut</span> <span class=\"ident\">x</span> =&gt; {}\n+    <span class=\"kw\">match </span><span class=\"kw-2\">&amp;</span>s {\n+        <span class=\"kw-2\">ref mut </span>x =&gt; {}\n     }\n }\n \n-<span class=\"macro\">macro_rules!</span> <span class=\"ident\">bar</span> {\n-    (<span class=\"macro-nonterminal\">$</span><span class=\"macro-nonterminal\">foo</span>:<span class=\"ident\">tt</span>) =&gt; {};\n+<span class=\"macro\">macro_rules!</span> bar {\n+    (<span class=\"macro-nonterminal\">$foo</span>:tt) =&gt; {};\n }\n </code></pre>"}, {"sha": "9f8915282642dd8bf78d41f9a67b99c09a5dd151", "filename": "src/librustdoc/html/highlight/fixtures/union.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6e574e100c47d1800e05d14cbaae959c11f320ed/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Funion.html", "raw_url": "https://github.com/rust-lang/rust/raw/6e574e100c47d1800e05d14cbaae959c11f320ed/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Funion.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Funion.html?ref=6e574e100c47d1800e05d14cbaae959c11f320ed", "patch": "@@ -1,8 +1,8 @@\n-<span class=\"kw\">union</span> <span class=\"ident\">Foo</span> {\n-    <span class=\"ident\">i</span>: <span class=\"ident\">i8</span>,\n-    <span class=\"ident\">u</span>: <span class=\"ident\">i8</span>,\n+<span class=\"kw\">union </span>Foo {\n+    i: i8,\n+    u: i8,\n }\n \n-<span class=\"kw\">fn</span> <span class=\"ident\">main</span>() {\n-    <span class=\"kw\">let</span> <span class=\"ident\">union</span> = <span class=\"number\">0</span>;\n+<span class=\"kw\">fn </span>main() {\n+    <span class=\"kw\">let </span>union = <span class=\"number\">0</span>;\n }"}, {"sha": "b919935e4b47a3b73ed5fb82b5db4932720a200d", "filename": "src/test/rustdoc/issue-41783.codeblock.html", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6e574e100c47d1800e05d14cbaae959c11f320ed/src%2Ftest%2Frustdoc%2Fissue-41783.codeblock.html", "raw_url": "https://github.com/rust-lang/rust/raw/6e574e100c47d1800e05d14cbaae959c11f320ed/src%2Ftest%2Frustdoc%2Fissue-41783.codeblock.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-41783.codeblock.html?ref=6e574e100c47d1800e05d14cbaae959c11f320ed", "patch": "@@ -0,0 +1,5 @@\n+<code># single\n+## double\n+### triple\n+<span class=\"attribute\">#[outer]</span>\n+<span class=\"attribute\">#![inner]</span></code>\n\\ No newline at end of file"}, {"sha": "d67716028799b6e8f5785ebe1b5582d13689830f", "filename": "src/test/rustdoc/issue-41783.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6e574e100c47d1800e05d14cbaae959c11f320ed/src%2Ftest%2Frustdoc%2Fissue-41783.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e574e100c47d1800e05d14cbaae959c11f320ed/src%2Ftest%2Frustdoc%2Fissue-41783.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-41783.rs?ref=6e574e100c47d1800e05d14cbaae959c11f320ed", "patch": "@@ -1,11 +1,9 @@\n // @has issue_41783/struct.Foo.html\n // @!hasraw - 'space'\n // @!hasraw - 'comment'\n-// @hasraw - '# <span class=\"ident\">single'\n-// @hasraw - '## <span class=\"ident\">double</span>'\n-// @hasraw - '### <span class=\"ident\">triple</span>'\n-// @hasraw - '<span class=\"attribute\">#[<span class=\"ident\">outer</span>]</span>'\n-// @hasraw - '<span class=\"attribute\">#![<span class=\"ident\">inner</span>]</span>'\n+// @hasraw - '<span class=\"attribute\">#[outer]</span>'\n+// @hasraw - '<span class=\"attribute\">#![inner]</span>'\n+// @snapshot 'codeblock' - '//*[@class=\"rustdoc-toggle top-doc\"]/*[@class=\"docblock\"]//pre/code'\n \n /// ```no_run\n /// # # space"}, {"sha": "96f4126c7c277f06e3e450eaa99cf2e6b3e20667", "filename": "src/test/rustdoc/macro_rules-matchers.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6e574e100c47d1800e05d14cbaae959c11f320ed/src%2Ftest%2Frustdoc%2Fmacro_rules-matchers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e574e100c47d1800e05d14cbaae959c11f320ed/src%2Ftest%2Frustdoc%2Fmacro_rules-matchers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmacro_rules-matchers.rs?ref=6e574e100c47d1800e05d14cbaae959c11f320ed", "patch": "@@ -5,14 +5,12 @@\n \n // @has 'foo/macro.todo.html'\n // @has - '//span[@class=\"macro\"]' 'macro_rules!'\n-// @has - '//span[@class=\"ident\"]' 'todo'\n+// @hasraw - ' todo {'\n \n // @hasraw - '{ () =&gt; { ... }; ($('\n // @has - '//span[@class=\"macro-nonterminal\"]' '$'\n // @has - '//span[@class=\"macro-nonterminal\"]' 'arg'\n-// @hasraw - ':'\n-// @has - '//span[@class=\"ident\"]' 'tt'\n-// @hasraw - ')+'\n+// @hasraw - ':tt)+'\n // @hasraw - ') =&gt; { ... }; }'\n pub use std::todo;\n "}]}