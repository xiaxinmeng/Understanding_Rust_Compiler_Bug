{"sha": "3c968e1e38781001b2023ea6921287a16a3e7b02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjOTY4ZTFlMzg3ODEwMDFiMjAyM2VhNjkyMTI4N2ExNmEzZTdiMDI=", "commit": {"author": {"name": "Mark Story", "email": "mark@mark-story.com", "date": "2016-01-09T03:38:27Z"}, "committer": {"name": "Mark Story", "email": "mark@mark-story.com", "date": "2016-01-14T02:02:50Z"}, "message": "Update based on pull request feedback.\n\n* Extract duplicated logic.\n* Make checkstyle errors into warnings.", "tree": {"sha": "26dda743e99cc6424a5651315511f0c0c58f4d82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26dda743e99cc6424a5651315511f0c0c58f4d82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c968e1e38781001b2023ea6921287a16a3e7b02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c968e1e38781001b2023ea6921287a16a3e7b02", "html_url": "https://github.com/rust-lang/rust/commit/3c968e1e38781001b2023ea6921287a16a3e7b02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c968e1e38781001b2023ea6921287a16a3e7b02/comments", "author": {"login": "markstory", "id": 24086, "node_id": "MDQ6VXNlcjI0MDg2", "avatar_url": "https://avatars.githubusercontent.com/u/24086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markstory", "html_url": "https://github.com/markstory", "followers_url": "https://api.github.com/users/markstory/followers", "following_url": "https://api.github.com/users/markstory/following{/other_user}", "gists_url": "https://api.github.com/users/markstory/gists{/gist_id}", "starred_url": "https://api.github.com/users/markstory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markstory/subscriptions", "organizations_url": "https://api.github.com/users/markstory/orgs", "repos_url": "https://api.github.com/users/markstory/repos", "events_url": "https://api.github.com/users/markstory/events{/privacy}", "received_events_url": "https://api.github.com/users/markstory/received_events", "type": "User", "site_admin": false}, "committer": {"login": "markstory", "id": 24086, "node_id": "MDQ6VXNlcjI0MDg2", "avatar_url": "https://avatars.githubusercontent.com/u/24086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markstory", "html_url": "https://github.com/markstory", "followers_url": "https://api.github.com/users/markstory/followers", "following_url": "https://api.github.com/users/markstory/following{/other_user}", "gists_url": "https://api.github.com/users/markstory/gists{/gist_id}", "starred_url": "https://api.github.com/users/markstory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markstory/subscriptions", "organizations_url": "https://api.github.com/users/markstory/orgs", "repos_url": "https://api.github.com/users/markstory/repos", "events_url": "https://api.github.com/users/markstory/events{/privacy}", "received_events_url": "https://api.github.com/users/markstory/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de10545906899084162b6511f15771db491551cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/de10545906899084162b6511f15771db491551cc", "html_url": "https://github.com/rust-lang/rust/commit/de10545906899084162b6511f15771db491551cc"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "436f5501882ca6f5b2c61952eeba1cc3b823c327", "filename": "src/filemap.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/3c968e1e38781001b2023ea6921287a16a3e7b02/src%2Ffilemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c968e1e38781001b2023ea6921287a16a3e7b02/src%2Ffilemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffilemap.rs?ref=3c968e1e38781001b2023ea6921287a16a3e7b02", "patch": "@@ -87,7 +87,7 @@ pub fn output_checkstyle_file<T>(mut writer: T,\n                     let message = xml_escape_str(&str);\n                     // TODO XML encode str here.\n                     try!(write!(writer,\n-                                \"<error line=\\\"{}\\\" severity=\\\"error\\\" message=\\\"Should be \\\n+                                \"<error line=\\\"{}\\\" severity=\\\"warning\\\" message=\\\"Should be \\\n                                  `{}`\\\" />\",\n                                 mismatch.line_number,\n                                 message));\n@@ -174,6 +174,14 @@ pub fn write_file(text: &StringBuffer,\n         Ok((ori_text, fmt_text))\n     }\n \n+    fn create_diff(filename: &str,\n+                   text: &StringBuffer,\n+                   config: &Config)\n+                   -> Result<Vec<Mismatch>, io::Error> {\n+        let ori_text, fmt_text = try!(source_and_formatted_text(text, filename, config));\n+        Ok(make_diff(&ori_text, &fmt_text, 3))\n+    }\n+\n     match mode {\n         WriteMode::Replace => {\n             if let Ok((ori, fmt)) = source_and_formatted_text(text, filename, config) {\n@@ -223,16 +231,9 @@ pub fn write_file(text: &StringBuffer,\n         WriteMode::Checkstyle => {\n             let stdout = stdout();\n             let stdout = stdout.lock();\n-            // Generate the diff for the current file.\n-            let mut f = try!(File::open(filename));\n-            let mut ori_text = String::new();\n-            try!(f.read_to_string(&mut ori_text));\n-            let mut v = Vec::new();\n-            try!(write_system_newlines(&mut v, text, config));\n-            let fmt_text = String::from_utf8(v).unwrap();\n-            let diff = make_diff(&ori_text, &fmt_text, 3);\n+            let diff = try!(create_diff(filename, text, config));\n             // Output the XML tags for the lines that are different.\n-            output_checkstyle_file(stdout, filename, diff).unwrap();\n+            try!(output_checkstyle_file(stdout, filename, diff));\n         }\n         WriteMode::Return => {\n             // io::Write is not implemented for String, working around with"}]}