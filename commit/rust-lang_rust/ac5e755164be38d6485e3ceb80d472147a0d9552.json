{"sha": "ac5e755164be38d6485e3ceb80d472147a0d9552", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjNWU3NTUxNjRiZTM4ZDY0ODVlM2NlYjgwZDQ3MjE0N2EwZDk1NTI=", "commit": {"author": {"name": "Chris Gregory", "email": "czipperz@gmail.com", "date": "2019-04-12T04:57:29Z"}, "committer": {"name": "Chris Gregory", "email": "czipperz@gmail.com", "date": "2019-04-12T04:57:29Z"}, "message": "Make BufWriter use get_mut instead of manipulating inner in Write implementation\n\nget_mut allows us to abstract over the implementation detail of inner being\noptional.", "tree": {"sha": "54c34bba3094e1fea5e9c73bff4fb0ec14beb95b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54c34bba3094e1fea5e9c73bff4fb0ec14beb95b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac5e755164be38d6485e3ceb80d472147a0d9552", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac5e755164be38d6485e3ceb80d472147a0d9552", "html_url": "https://github.com/rust-lang/rust/commit/ac5e755164be38d6485e3ceb80d472147a0d9552", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac5e755164be38d6485e3ceb80d472147a0d9552/comments", "author": {"login": "czipperz", "id": 10054343, "node_id": "MDQ6VXNlcjEwMDU0MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/10054343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czipperz", "html_url": "https://github.com/czipperz", "followers_url": "https://api.github.com/users/czipperz/followers", "following_url": "https://api.github.com/users/czipperz/following{/other_user}", "gists_url": "https://api.github.com/users/czipperz/gists{/gist_id}", "starred_url": "https://api.github.com/users/czipperz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czipperz/subscriptions", "organizations_url": "https://api.github.com/users/czipperz/orgs", "repos_url": "https://api.github.com/users/czipperz/repos", "events_url": "https://api.github.com/users/czipperz/events{/privacy}", "received_events_url": "https://api.github.com/users/czipperz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "czipperz", "id": 10054343, "node_id": "MDQ6VXNlcjEwMDU0MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/10054343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czipperz", "html_url": "https://github.com/czipperz", "followers_url": "https://api.github.com/users/czipperz/followers", "following_url": "https://api.github.com/users/czipperz/following{/other_user}", "gists_url": "https://api.github.com/users/czipperz/gists{/gist_id}", "starred_url": "https://api.github.com/users/czipperz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czipperz/subscriptions", "organizations_url": "https://api.github.com/users/czipperz/orgs", "repos_url": "https://api.github.com/users/czipperz/repos", "events_url": "https://api.github.com/users/czipperz/events{/privacy}", "received_events_url": "https://api.github.com/users/czipperz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3de0106789468b211bcc3a25c09c0cf07119186d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3de0106789468b211bcc3a25c09c0cf07119186d", "html_url": "https://github.com/rust-lang/rust/commit/3de0106789468b211bcc3a25c09c0cf07119186d"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "bf406bb9b0ba791c2dc6959164357d673ef27497", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac5e755164be38d6485e3ceb80d472147a0d9552/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac5e755164be38d6485e3ceb80d472147a0d9552/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=ac5e755164be38d6485e3ceb80d472147a0d9552", "patch": "@@ -601,7 +601,7 @@ impl<W: Write> Write for BufWriter<W> {\n         }\n         if buf.len() >= self.buf.capacity() {\n             self.panicked = true;\n-            let r = self.inner.as_mut().unwrap().write(buf);\n+            let r = self.get_mut().write(buf);\n             self.panicked = false;\n             r\n         } else {\n@@ -616,7 +616,7 @@ impl<W: Write> Write for BufWriter<W> {\n         }\n         if total_len >= self.buf.capacity() {\n             self.panicked = true;\n-            let r = self.inner.as_mut().unwrap().write_vectored(bufs);\n+            let r = self.get_mut().write_vectored(bufs);\n             self.panicked = false;\n             r\n         } else {"}]}