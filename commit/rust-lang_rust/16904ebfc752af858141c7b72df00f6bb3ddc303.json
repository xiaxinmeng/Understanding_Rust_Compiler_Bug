{"sha": "16904ebfc752af858141c7b72df00f6bb3ddc303", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2OTA0ZWJmYzc1MmFmODU4MTQxYzdiNzJkZjAwZjZiYjNkZGMzMDM=", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2021-02-13T05:49:51Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2021-02-13T05:49:51Z"}, "message": "Add missing type bounds", "tree": {"sha": "fef3cd0ec6133e5143d476809ee64a8ccfbfb095", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fef3cd0ec6133e5143d476809ee64a8ccfbfb095"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16904ebfc752af858141c7b72df00f6bb3ddc303", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16904ebfc752af858141c7b72df00f6bb3ddc303", "html_url": "https://github.com/rust-lang/rust/commit/16904ebfc752af858141c7b72df00f6bb3ddc303", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16904ebfc752af858141c7b72df00f6bb3ddc303/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6362540f11aaa2f133c12cbb0b3ee903ea6f7f0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6362540f11aaa2f133c12cbb0b3ee903ea6f7f0e", "html_url": "https://github.com/rust-lang/rust/commit/6362540f11aaa2f133c12cbb0b3ee903ea6f7f0e"}], "stats": {"total": 63, "additions": 49, "deletions": 14}, "files": [{"sha": "ee232e2b2225af91383f9e552c72b4499ad0720e", "filename": "crates/core_simd/src/round.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fround.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fround.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fround.rs?ref=16904ebfc752af858141c7b72df00f6bb3ddc303", "patch": "@@ -2,7 +2,10 @@ macro_rules! implement {\n     {\n         $type:ident, $int_type:ident\n     } => {\n-        impl<const LANES: usize> crate::$type<LANES> {\n+        impl<const LANES: usize> crate::$type<LANES>\n+        where\n+            Self: crate::LanesAtMost64,\n+        {\n             /// Returns the largest integer less than or equal to each lane.\n             #[must_use = \"method returns a new vector and does not mutate the original value\"]\n             #[inline]\n@@ -16,7 +19,13 @@ macro_rules! implement {\n             pub fn ceil(self) -> Self {\n                 unsafe { crate::intrinsics::simd_ceil(self) }\n             }\n+        }\n \n+        impl<const LANES: usize> crate::$type<LANES>\n+        where\n+            Self: crate::LanesAtMost64,\n+            crate::$int_type<LANES>: crate::LanesAtMost64,\n+        {\n             /// Rounds toward zero and converts to the same-width integer type, assuming that\n             /// the value is finite and fits in that type.\n             ///"}, {"sha": "5bb8f3a1c34d04b92dbf88aa7b1e70373f1ff669", "filename": "crates/core_simd/src/vectors_f32.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_f32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_f32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_f32.rs?ref=16904ebfc752af858141c7b72df00f6bb3ddc303", "patch": "@@ -2,7 +2,9 @@\n \n /// A SIMD vector of containing `LANES` `f32` values.\n #[repr(simd)]\n-pub struct SimdF32<const LANES: usize>([f32; LANES]);\n+pub struct SimdF32<const LANES: usize>([f32; LANES])\n+where\n+    Self: crate::LanesAtMost64;\n \n impl_float_vector! { SimdF32, f32, SimdU32 }\n "}, {"sha": "c0dca6a52ac621b63fad65aa49f307214bce1b27", "filename": "crates/core_simd/src/vectors_f64.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_f64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_f64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_f64.rs?ref=16904ebfc752af858141c7b72df00f6bb3ddc303", "patch": "@@ -2,7 +2,9 @@\n \n /// A SIMD vector of containing `LANES` `f64` values.\n #[repr(simd)]\n-pub struct SimdF64<const LANES: usize>([f64; LANES]);\n+pub struct SimdF64<const LANES: usize>([f64; LANES])\n+where\n+    Self: crate::LanesAtMost64;\n \n impl_float_vector! { SimdF64, f64, SimdU64 }\n "}, {"sha": "568fa81da80edf0937fdc7b3de9408ab4296d741", "filename": "crates/core_simd/src/vectors_i128.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_i128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_i128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_i128.rs?ref=16904ebfc752af858141c7b72df00f6bb3ddc303", "patch": "@@ -2,7 +2,9 @@\n \n /// A SIMD vector of containing `LANES` `i128` values.\n #[repr(simd)]\n-pub struct SimdI128<const LANES: usize>([i128; LANES]);\n+pub struct SimdI128<const LANES: usize>([i128; LANES])\n+where\n+    Self: crate::LanesAtMost64;\n \n impl_integer_vector! { SimdI128, i128 }\n "}, {"sha": "d77e593a2edc46b40065499c7ab233765bcc0667", "filename": "crates/core_simd/src/vectors_i16.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_i16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_i16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_i16.rs?ref=16904ebfc752af858141c7b72df00f6bb3ddc303", "patch": "@@ -2,7 +2,9 @@\n \n /// A SIMD vector of containing `LANES` `i16` values.\n #[repr(simd)]\n-pub struct SimdI16<const LANES: usize>([i16; LANES]);\n+pub struct SimdI16<const LANES: usize>([i16; LANES])\n+where\n+    Self: crate::LanesAtMost64;\n \n impl_integer_vector! { SimdI16, i16 }\n "}, {"sha": "0a89eeda3b2f844fb45bc40b9f9614ea3ea2b515", "filename": "crates/core_simd/src/vectors_i32.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_i32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_i32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_i32.rs?ref=16904ebfc752af858141c7b72df00f6bb3ddc303", "patch": "@@ -2,7 +2,9 @@\n \n /// A SIMD vector of containing `LANES` `i32` values.\n #[repr(simd)]\n-pub struct SimdI32<const LANES: usize>([i32; LANES]);\n+pub struct SimdI32<const LANES: usize>([i32; LANES])\n+where\n+    Self: crate::LanesAtMost64;\n \n impl_integer_vector! { SimdI32, i32 }\n "}, {"sha": "017140654a515375f5988f35fbe4bc25e778d715", "filename": "crates/core_simd/src/vectors_i64.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_i64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_i64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_i64.rs?ref=16904ebfc752af858141c7b72df00f6bb3ddc303", "patch": "@@ -2,7 +2,9 @@\n \n /// A SIMD vector of containing `LANES` `i64` values.\n #[repr(simd)]\n-pub struct SimdI64<const LANES: usize>([i64; LANES]);\n+pub struct SimdI64<const LANES: usize>([i64; LANES])\n+where\n+    Self: crate::LanesAtMost64;\n \n impl_integer_vector! { SimdI64, i64 }\n "}, {"sha": "e21126533b8846b3708d3cf91af65030b94ff41e", "filename": "crates/core_simd/src/vectors_i8.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_i8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_i8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_i8.rs?ref=16904ebfc752af858141c7b72df00f6bb3ddc303", "patch": "@@ -2,7 +2,9 @@\n \n /// A SIMD vector of containing `LANES` `i8` values.\n #[repr(simd)]\n-pub struct SimdI8<const LANES: usize>([i8; LANES]);\n+pub struct SimdI8<const LANES: usize>([i8; LANES])\n+where\n+    Self: crate::LanesAtMost64;\n \n impl_integer_vector! { SimdI8, i8 }\n "}, {"sha": "ee23dfe7d865e831179220f43fa02ba1802f1598", "filename": "crates/core_simd/src/vectors_isize.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_isize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_isize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_isize.rs?ref=16904ebfc752af858141c7b72df00f6bb3ddc303", "patch": "@@ -2,7 +2,9 @@\n \n /// A SIMD vector of containing `LANES` `isize` values.\n #[repr(simd)]\n-pub struct SimdIsize<const LANES: usize>([isize; LANES]);\n+pub struct SimdIsize<const LANES: usize>([isize; LANES])\n+where\n+    Self: crate::LanesAtMost64;\n \n impl_integer_vector! { SimdIsize, isize }\n "}, {"sha": "7931b9e088f6fb516d0fc635f2253e96982c978e", "filename": "crates/core_simd/src/vectors_u128.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_u128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_u128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_u128.rs?ref=16904ebfc752af858141c7b72df00f6bb3ddc303", "patch": "@@ -2,7 +2,9 @@\n \n /// A SIMD vector of containing `LANES` `u128` values.\n #[repr(simd)]\n-pub struct SimdU128<const LANES: usize>([u128; LANES]);\n+pub struct SimdU128<const LANES: usize>([u128; LANES])\n+where\n+    Self: crate::LanesAtMost64;\n \n impl_integer_vector! { SimdU128, u128 }\n "}, {"sha": "91c0e6168089971bf3c27c1f6439cf61473013f2", "filename": "crates/core_simd/src/vectors_u16.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_u16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_u16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_u16.rs?ref=16904ebfc752af858141c7b72df00f6bb3ddc303", "patch": "@@ -2,7 +2,9 @@\n \n /// A SIMD vector of containing `LANES` `u16` values.\n #[repr(simd)]\n-pub struct SimdU16<const LANES: usize>([u16; LANES]);\n+pub struct SimdU16<const LANES: usize>([u16; LANES])\n+where\n+    Self: crate::LanesAtMost64;\n \n impl_integer_vector! { SimdU16, u16 }\n "}, {"sha": "b0400b5ba3a948fb6a6238b54d6e1fe1c32429af", "filename": "crates/core_simd/src/vectors_u32.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_u32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_u32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_u32.rs?ref=16904ebfc752af858141c7b72df00f6bb3ddc303", "patch": "@@ -2,7 +2,9 @@\n \n /// A SIMD vector of containing `LANES` `u32` values.\n #[repr(simd)]\n-pub struct SimdU32<const LANES: usize>([u32; LANES]);\n+pub struct SimdU32<const LANES: usize>([u32; LANES])\n+where\n+    Self: crate::LanesAtMost64;\n \n impl_integer_vector! { SimdU32, u32 }\n "}, {"sha": "0f3712241fe7714ddf2dbf018ddf20b0eaf30ab5", "filename": "crates/core_simd/src/vectors_u64.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_u64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_u64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_u64.rs?ref=16904ebfc752af858141c7b72df00f6bb3ddc303", "patch": "@@ -2,7 +2,9 @@\n \n /// A SIMD vector of containing `LANES` `u64` values.\n #[repr(simd)]\n-pub struct SimdU64<const LANES: usize>([u64; LANES]);\n+pub struct SimdU64<const LANES: usize>([u64; LANES])\n+where\n+    Self: crate::LanesAtMost64;\n \n impl_integer_vector! { SimdU64, u64 }\n "}, {"sha": "ea089aeb9d3cbeed69792d8e356420c1d5004605", "filename": "crates/core_simd/src/vectors_usize.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_usize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16904ebfc752af858141c7b72df00f6bb3ddc303/crates%2Fcore_simd%2Fsrc%2Fvectors_usize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_usize.rs?ref=16904ebfc752af858141c7b72df00f6bb3ddc303", "patch": "@@ -2,7 +2,9 @@\n \n /// A SIMD vector of containing `LANES` `usize` values.\n #[repr(simd)]\n-pub struct SimdUsize<const LANES: usize>([usize; LANES]);\n+pub struct SimdUsize<const LANES: usize>([usize; LANES])\n+where\n+    Self: crate::LanesAtMost64;\n \n impl_integer_vector! { SimdUsize, usize }\n "}]}