{"sha": "5cfa70f76088f973dd66f5bea9c6b0867378c16d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjZmE3MGY3NjA4OGY5NzNkZDY2ZjViZWE5YzZiMDg2NzM3OGMxNmQ=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-05-04T21:26:59Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-06-03T11:59:08Z"}, "message": "Add `is_ref_for_guard` method", "tree": {"sha": "cf6aab1bdf2303501a45cd41e07ad5ed33bb4a6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf6aab1bdf2303501a45cd41e07ad5ed33bb4a6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cfa70f76088f973dd66f5bea9c6b0867378c16d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cfa70f76088f973dd66f5bea9c6b0867378c16d", "html_url": "https://github.com/rust-lang/rust/commit/5cfa70f76088f973dd66f5bea9c6b0867378c16d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cfa70f76088f973dd66f5bea9c6b0867378c16d/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da9ebc828c982d2ed49396886da85011e1b0a6c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/da9ebc828c982d2ed49396886da85011e1b0a6c0", "html_url": "https://github.com/rust-lang/rust/commit/da9ebc828c982d2ed49396886da85011e1b0a6c0"}], "stats": {"total": 29, "additions": 13, "deletions": 16}, "files": [{"sha": "c2b4a765c59fe7192e19df9e9888981838f2ac6d", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5cfa70f76088f973dd66f5bea9c6b0867378c16d/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cfa70f76088f973dd66f5bea9c6b0867378c16d/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=5cfa70f76088f973dd66f5bea9c6b0867378c16d", "patch": "@@ -913,6 +913,16 @@ impl<'tcx> LocalDecl<'tcx> {\n         }\n     }\n \n+    /// Returns `true` if this is a reference to a variable bound in a `match`\n+    /// expression that is used to access said variable for the guard of the\n+    /// match arm.\n+    pub fn is_ref_for_guard(&self) -> bool {\n+        match self.is_user_variable {\n+            Some(ClearCrossCrate::Set(BindingForm::RefForGuard)) => true,\n+            _ => false,\n+        }\n+    }\n+\n     /// Returns `true` is the local is from a compiler desugaring, e.g.,\n     /// `__next` from a `for` loop.\n     #[inline]"}, {"sha": "dea755411cc8602b0c9375aa65dcdd7664133d36", "filename": "src/librustc_mir/borrow_check/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5cfa70f76088f973dd66f5bea9c6b0867378c16d/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cfa70f76088f973dd66f5bea9c6b0867378c16d/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs?ref=5cfa70f76088f973dd66f5bea9c6b0867378c16d", "patch": "@@ -180,9 +180,7 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                                     &including_downcast,\n                                 )?;\n                             } else if let Place::Base(PlaceBase::Local(local)) = proj.base {\n-                                if let Some(ClearCrossCrate::Set(BindingForm::RefForGuard)) =\n-                                    self.mir.local_decls[local].is_user_variable\n-                                {\n+                                if self.mir.local_decls[local].is_ref_for_guard() {\n                                     self.append_place_to_string(\n                                         &proj.base,\n                                         buf,"}, {"sha": "cbab84c2961a906dc20f97a2c3dfa1059ca5291b", "filename": "src/librustc_mir/borrow_check/mutability_errors.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5cfa70f76088f973dd66f5bea9c6b0867378c16d/src%2Flibrustc_mir%2Fborrow_check%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cfa70f76088f973dd66f5bea9c6b0867378c16d/src%2Flibrustc_mir%2Fborrow_check%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmutability_errors.rs?ref=5cfa70f76088f973dd66f5bea9c6b0867378c16d", "patch": "@@ -95,12 +95,7 @@ impl<'a, 'gcx, 'tcx> MirBorrowckCtxt<'a, 'gcx, 'tcx> {\n                     }\n                 } else if {\n                     if let Place::Base(PlaceBase::Local(local)) = *base {\n-                        if let Some(ClearCrossCrate::Set(BindingForm::RefForGuard))\n-                            = self.mir.local_decls[local].is_user_variable {\n-                                true\n-                        } else {\n-                            false\n-                        }\n+                        self.mir.local_decls[local].is_ref_for_guard()\n                     } else {\n                         false\n                     }"}, {"sha": "87e2118094cafe8e39de407c0813eed72aa67f50", "filename": "src/librustc_mir/build/expr/as_rvalue.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5cfa70f76088f973dd66f5bea9c6b0867378c16d/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cfa70f76088f973dd66f5bea9c6b0867378c16d/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=5cfa70f76088f973dd66f5bea9c6b0867378c16d", "patch": "@@ -503,13 +503,7 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n                 elem: ProjectionElem::Deref,\n             }) => {\n                 debug_assert!(\n-                    if let Some(ClearCrossCrate::Set(BindingForm::RefForGuard)) =\n-                        this.local_decls[local].is_user_variable\n-                    {\n-                        true\n-                    } else {\n-                        false\n-                    },\n+                    this.local_decls[local].is_ref_for_guard(),\n                     \"Unexpected capture place\",\n                 );\n                 this.local_decls[local].mutability"}]}