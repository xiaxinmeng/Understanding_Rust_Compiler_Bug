{"sha": "c64c7766787e6d9d5b80b95832155a11cadcbe40", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2NGM3NzY2Nzg3ZTZkOWQ1YjgwYjk1ODMyMTU1YTExY2FkY2JlNDA=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-05-01T15:45:51Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-05-01T15:45:51Z"}, "message": "Remove a comment that made only sense in the original position of this cycle check.", "tree": {"sha": "4e134e6ffc8880a05bedc162d775c099ec6cb470", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e134e6ffc8880a05bedc162d775c099ec6cb470"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c64c7766787e6d9d5b80b95832155a11cadcbe40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c64c7766787e6d9d5b80b95832155a11cadcbe40", "html_url": "https://github.com/rust-lang/rust/commit/c64c7766787e6d9d5b80b95832155a11cadcbe40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c64c7766787e6d9d5b80b95832155a11cadcbe40/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba26df099846165de7bb24486cced1cdfb40132b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba26df099846165de7bb24486cced1cdfb40132b", "html_url": "https://github.com/rust-lang/rust/commit/ba26df099846165de7bb24486cced1cdfb40132b"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "6832701e1a5ad330f38e2ec893a1de7161de07c5", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c64c7766787e6d9d5b80b95832155a11cadcbe40/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c64c7766787e6d9d5b80b95832155a11cadcbe40/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=c64c7766787e6d9d5b80b95832155a11cadcbe40", "patch": "@@ -244,9 +244,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                     // We may be reading from a static.\n                     // In order to ensure that `static FOO: Type = FOO;` causes a cycle error\n                     // instead of magically pulling *any* ZST value from the ether, we need to\n-                    // actually access the referenced allocation. The caller is likely\n-                    // to short-circuit on `None`, so we trigger the access here to\n-                    // make sure it happens.\n+                    // actually access the referenced allocation.\n                     self.memory.get_raw(ptr.alloc_id)?;\n                 }\n                 return Ok(Some(ImmTy {"}]}