{"sha": "7ebcc786b829cf96e1eeeb6e1a1c01b74832b940", "node_id": "C_kwDOAAsO6NoAKDdlYmNjNzg2YjgyOWNmOTZlMWVlZWI2ZTFhMWMwMWI3NDgzMmI5NDA", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-12-29T15:38:46Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-12-29T16:00:08Z"}, "message": "fix #106261, formater should not try to format non-Rust files", "tree": {"sha": "db37c88818db27c8b8bd3d6904baf49bfac859ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db37c88818db27c8b8bd3d6904baf49bfac859ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ebcc786b829cf96e1eeeb6e1a1c01b74832b940", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ebcc786b829cf96e1eeeb6e1a1c01b74832b940", "html_url": "https://github.com/rust-lang/rust/commit/7ebcc786b829cf96e1eeeb6e1a1c01b74832b940", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ebcc786b829cf96e1eeeb6e1a1c01b74832b940/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c0b403f19fc6febcd1e36a83fc307ecc11de943", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c0b403f19fc6febcd1e36a83fc307ecc11de943", "html_url": "https://github.com/rust-lang/rust/commit/0c0b403f19fc6febcd1e36a83fc307ecc11de943"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "1d57c6ecbbb8d93167cc195b38b44d6f2f5fd8a2", "filename": "src/bootstrap/format.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7ebcc786b829cf96e1eeeb6e1a1c01b74832b940/src%2Fbootstrap%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ebcc786b829cf96e1eeeb6e1a1c01b74832b940/src%2Fbootstrap%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fformat.rs?ref=7ebcc786b829cf96e1eeeb6e1a1c01b74832b940", "patch": "@@ -74,11 +74,11 @@ fn update_rustfmt_version(build: &Builder<'_>) {\n     t!(std::fs::write(stamp_file, version))\n }\n \n-/// Returns the files modified between the `merge-base` of HEAD and\n+/// Returns the Rust files modified between the `merge-base` of HEAD and\n /// rust-lang/master and what is now on the disk.\n ///\n /// Returns `None` if all files should be formatted.\n-fn get_modified_files(build: &Builder<'_>) -> Option<Vec<String>> {\n+fn get_modified_rs_files(build: &Builder<'_>) -> Option<Vec<String>> {\n     let Ok(remote) = get_rust_lang_rust_remote() else {return None;};\n     if !verify_rustfmt_version(build) {\n         return None;\n@@ -95,6 +95,7 @@ fn get_modified_files(build: &Builder<'_>) -> Option<Vec<String>> {\n         )\n         .lines()\n         .map(|s| s.trim().to_owned())\n+        .filter(|f| Path::new(f).extension().map_or(false, |ext| ext == \"rs\"))\n         .collect(),\n     )\n }\n@@ -195,7 +196,7 @@ pub fn format(build: &Builder<'_>, check: bool, paths: &[PathBuf]) {\n                 ignore_fmt.add(&format!(\"!/{}\", untracked_path)).expect(&untracked_path);\n             }\n             if !check && paths.is_empty() {\n-                if let Some(files) = get_modified_files(build) {\n+                if let Some(files) = get_modified_rs_files(build) {\n                     for file in files {\n                         println!(\"formatting modified file {file}\");\n                         ignore_fmt.add(&format!(\"/{file}\")).expect(&file);"}]}