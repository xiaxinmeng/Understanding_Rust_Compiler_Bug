{"sha": "ab72611d8f664684dbd5dd2efe6fd7edff53ee5d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiNzI2MTFkOGY2NjQ2ODRkYmQ1ZGQyZWZlNmZkN2VkZmY1M2VlNWQ=", "commit": {"author": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2017-06-04T05:10:14Z"}, "committer": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2017-06-07T03:15:39Z"}, "message": "Replace some matches with try.", "tree": {"sha": "be15f7c11d1cc858e8286a57851374cf9d1cbceb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be15f7c11d1cc858e8286a57851374cf9d1cbceb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab72611d8f664684dbd5dd2efe6fd7edff53ee5d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJZN2/bAAoJEHynqF4EmoLoqjEP/34i+3LBkVKUt64jdu2sHlw/\ntfTykonX7vUYMfvTVFvNU1eSezk5qnJsvVJn+U8/HpPT9VMe2iwRQiUUS+ES9jjK\nt/dlcGAWWAb4uL5eC/CYGk+IhxIfPp1HbGfALdalf+oB6ECjWI/ckcBCxHBXWazy\nOwicIfXPGfn5CqRHmDYbapCiXTZp9wogud+RSLdSnhllbc4N+NWTQfSEubPIyHel\nLh1p/UvqTzU/GHQYcWePa4qO8WOMXaP9I1boK6M5/uc2qb7X49OJjPmeInFf9TzC\nA+mdAXm3qizyCcLKyccWvZjEK2Uchx4ze6W3aPJPdrmTDHthEknHk3EE+gJ5PzGS\nALqYnQ+v+U1J2IKnuf+Wn99uXFJc12GVcBrm0QyMAYmNoSqJNsKaAX4uIMGPPrr/\nQmTCy1opVLBpej/dTMrKVTeyMWaBFo0psXxzV40ZY9TTxJSw4mQ1hNLcMVxuOUNy\nFojFVkhYT61+DzTVTqLgRKexXFrX6KmajOrE78wFqnxltIzCncW7hWYJp8a1DEKD\nyNyY1uqDwUEINQgcJlQvUpSAQmu3l7V3r9ve+O35sbiYwrCMBmvgJUmYexcf7hZY\nVs9t9m/Z8ASyxWGom3hrf8LGpoOjqZQ9gNhn6o+nG0tfvzRqSiQosGjGgHk6Zd6j\nGd5W+MC/qUCYo09Sb6GG\n=JzJv\n-----END PGP SIGNATURE-----", "payload": "tree be15f7c11d1cc858e8286a57851374cf9d1cbceb\nparent 76242aebb9d47558124c991a6faf0eb706d35703\nauthor Masaki Hara <ackie.h.gmai@gmail.com> 1496553014 +0900\ncommitter Masaki Hara <ackie.h.gmai@gmail.com> 1496805339 +0900\n\nReplace some matches with try.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab72611d8f664684dbd5dd2efe6fd7edff53ee5d", "html_url": "https://github.com/rust-lang/rust/commit/ab72611d8f664684dbd5dd2efe6fd7edff53ee5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab72611d8f664684dbd5dd2efe6fd7edff53ee5d/comments", "author": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76242aebb9d47558124c991a6faf0eb706d35703", "url": "https://api.github.com/repos/rust-lang/rust/commits/76242aebb9d47558124c991a6faf0eb706d35703", "html_url": "https://github.com/rust-lang/rust/commit/76242aebb9d47558124c991a6faf0eb706d35703"}], "stats": {"total": 15, "additions": 3, "deletions": 12}, "files": [{"sha": "60c07eda4d5c515b3e374032926a4d33552b2576", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ab72611d8f664684dbd5dd2efe6fd7edff53ee5d/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab72611d8f664684dbd5dd2efe6fd7edff53ee5d/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=ab72611d8f664684dbd5dd2efe6fd7edff53ee5d", "patch": "@@ -285,10 +285,7 @@ impl<'a> base::Resolver for Resolver<'a> {\n                      -> Result<Option<Rc<SyntaxExtension>>, Determinacy> {\n         let def = match invoc.kind {\n             InvocationKind::Attr { attr: None, .. } => return Ok(None),\n-            _ => match self.resolve_invoc_to_def(invoc, scope, force) {\n-                Ok(def) => def,\n-                Err(determinacy) => return Err(determinacy),\n-            },\n+            _ => self.resolve_invoc_to_def(invoc, scope, force)?,\n         };\n \n         self.macro_defs.insert(invoc.expansion_data.mark, def.def_id());"}, {"sha": "1e156ed07b0cefac319ecf15cb143bd7f80055fa", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ab72611d8f664684dbd5dd2efe6fd7edff53ee5d/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab72611d8f664684dbd5dd2efe6fd7edff53ee5d/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=ab72611d8f664684dbd5dd2efe6fd7edff53ee5d", "patch": "@@ -1249,10 +1249,7 @@ impl<'a> Parser<'a> {\n             let mac = respan(lo.to(self.prev_span), Mac_ { path: pth, tts: tts });\n             (keywords::Invalid.ident(), ast::TraitItemKind::Macro(mac))\n         } else {\n-            let (constness, unsafety, abi) = match self.parse_fn_front_matter() {\n-                Ok(cua) => cua,\n-                Err(e) => return Err(e),\n-            };\n+            let (constness, unsafety, abi) = self.parse_fn_front_matter()?;\n \n             let ident = self.parse_ident()?;\n             let mut generics = self.parse_generics()?;"}, {"sha": "d51ff9860ac8495ec85c8095fabd15536d1da03a", "filename": "src/libsyntax/ptr.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ab72611d8f664684dbd5dd2efe6fd7edff53ee5d/src%2Flibsyntax%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab72611d8f664684dbd5dd2efe6fd7edff53ee5d/src%2Flibsyntax%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fptr.rs?ref=ab72611d8f664684dbd5dd2efe6fd7edff53ee5d", "patch": "@@ -211,10 +211,7 @@ impl<T: Encodable> Encodable for P<[T]> {\n \n impl<T: Decodable> Decodable for P<[T]> {\n     fn decode<D: Decoder>(d: &mut D) -> Result<P<[T]>, D::Error> {\n-        Ok(P::from_vec(match Decodable::decode(d) {\n-            Ok(t) => t,\n-            Err(e) => return Err(e)\n-        }))\n+        Ok(P::from_vec(Decodable::decode(d)?))\n     }\n }\n "}]}