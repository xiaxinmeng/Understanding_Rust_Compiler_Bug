{"sha": "94d9fc2a28ea5d97e3a9293b9dac05bdb00304cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0ZDlmYzJhMjhlYTVkOTdlM2E5MjkzYjlkYWMwNWJkYjAwMzA0Y2M=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-04-08T15:43:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-08T15:43:30Z"}, "message": "Merge #8421\n\n8421: Reduce allocations in \"Expand macro\" formatter r=edwin0cheng a=lnicola\n\n\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "fa143881504d30df6f13d59ab5dd5805129d5690", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa143881504d30df6f13d59ab5dd5805129d5690"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94d9fc2a28ea5d97e3a9293b9dac05bdb00304cc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgbySiCRBK7hj4Ov3rIwAAdHIIAFrF72ga/ze9fNkQx28+stNV\n1kRKbCMFrAn8017QZSqQqyNPXGyuwnHR+D44ju+gQ12Be+TjWTAhKxMg1ZhYB6dO\n464qHvcLC4X8c7Svdl2aQilqenI3v0bw1OVe4BtIQX+KbDrkFunQCVmrVNOEHASP\n3zfFqyD2vKa5+EsxzAe1YELM+o89b4XWeAdHZ7exZALIE/5xqSi3EaDAGO8Jfvy0\nA5x28v5E9D9BOr/QiiCDw8AwlQZ6b5BRpnrtxK5PKynOBvKGoFZt/xtOSun30yjS\novHJDjPYYfLYwe2EJyYUzQceg+9p2YYbYk9eG8NlnOgz94GUSxuB+M6KYHO0KWQ=\n=0WVN\n-----END PGP SIGNATURE-----\n", "payload": "tree fa143881504d30df6f13d59ab5dd5805129d5690\nparent 72ad5cbe16a170d3c8a4c9d1bc04640b9e8404e0\nparent 48b946bde16a6f7b89064005f70ea475960e0521\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1617896610 +0000\ncommitter GitHub <noreply@github.com> 1617896610 +0000\n\nMerge #8421\n\n8421: Reduce allocations in \"Expand macro\" formatter r=edwin0cheng a=lnicola\n\n\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94d9fc2a28ea5d97e3a9293b9dac05bdb00304cc", "html_url": "https://github.com/rust-lang/rust/commit/94d9fc2a28ea5d97e3a9293b9dac05bdb00304cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94d9fc2a28ea5d97e3a9293b9dac05bdb00304cc/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72ad5cbe16a170d3c8a4c9d1bc04640b9e8404e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/72ad5cbe16a170d3c8a4c9d1bc04640b9e8404e0", "html_url": "https://github.com/rust-lang/rust/commit/72ad5cbe16a170d3c8a4c9d1bc04640b9e8404e0"}, {"sha": "48b946bde16a6f7b89064005f70ea475960e0521", "url": "https://api.github.com/repos/rust-lang/rust/commits/48b946bde16a6f7b89064005f70ea475960e0521", "html_url": "https://github.com/rust-lang/rust/commit/48b946bde16a6f7b89064005f70ea475960e0521"}], "stats": {"total": 43, "additions": 30, "deletions": 13}, "files": [{"sha": "be0ee03bf8f8cf09dbc8bcae5c80b0061cbe547b", "filename": "crates/ide/src/expand_macro.rs", "status": "modified", "additions": 30, "deletions": 13, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/94d9fc2a28ea5d97e3a9293b9dac05bdb00304cc/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94d9fc2a28ea5d97e3a9293b9dac05bdb00304cc/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fexpand_macro.rs?ref=94d9fc2a28ea5d97e3a9293b9dac05bdb00304cc", "patch": "@@ -1,3 +1,5 @@\n+use std::iter;\n+\n use hir::Semantics;\n use ide_db::RootDatabase;\n use syntax::{\n@@ -91,27 +93,42 @@ fn insert_whitespaces(syn: SyntaxNode) -> String {\n         let is_last =\n             |f: fn(SyntaxKind) -> bool, default| -> bool { last.map(f).unwrap_or(default) };\n \n-        res += &match token.kind() {\n-            k if is_text(k) && is_next(|it| !it.is_punct(), true) => token.text().to_string() + \" \",\n+        match token.kind() {\n+            k if is_text(k) && is_next(|it| !it.is_punct(), true) => {\n+                res.push_str(token.text());\n+                res.push(' ');\n+            }\n             L_CURLY if is_next(|it| it != R_CURLY, true) => {\n                 indent += 1;\n-                let leading_space = if is_last(is_text, false) { \" \" } else { \"\" };\n-                format!(\"{}{{\\n{}\", leading_space, \"  \".repeat(indent))\n+                if is_last(is_text, false) {\n+                    res.push(' ');\n+                }\n+                res.push_str(\"{\\n\");\n+                res.extend(iter::repeat(\" \").take(2 * indent));\n             }\n             R_CURLY if is_last(|it| it != L_CURLY, true) => {\n                 indent = indent.saturating_sub(1);\n-                format!(\"\\n{}}}\", \"  \".repeat(indent))\n+                res.push('\\n');\n+                res.extend(iter::repeat(\" \").take(2 * indent));\n+                res.push_str(\"}\");\n+            }\n+            R_CURLY => {\n+                res.push_str(\"}\\n\");\n+                res.extend(iter::repeat(\" \").take(2 * indent));\n             }\n-            R_CURLY => format!(\"}}\\n{}\", \"  \".repeat(indent)),\n             LIFETIME_IDENT if is_next(|it| it == IDENT, true) => {\n-                format!(\"{} \", token.text().to_string())\n+                res.push_str(token.text());\n+                res.push(' ');\n             }\n-            T![;] => format!(\";\\n{}\", \"  \".repeat(indent)),\n-            T![->] => \" -> \".to_string(),\n-            T![=] => \" = \".to_string(),\n-            T![=>] => \" => \".to_string(),\n-            _ => token.text().to_string(),\n-        };\n+            T![;] => {\n+                res.push_str(\";\\n\");\n+                res.extend(iter::repeat(\" \").take(2 * indent));\n+            }\n+            T![->] => res.push_str(\" -> \"),\n+            T![=] => res.push_str(\" = \"),\n+            T![=>] => res.push_str(\" => \"),\n+            _ => res.push_str(token.text()),\n+        }\n \n         last = Some(token.kind());\n     }"}]}