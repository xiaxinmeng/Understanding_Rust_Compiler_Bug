{"sha": "9b19cc0c215217e2423173bf8ef346f882238f8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliMTljYzBjMjE1MjE3ZTI0MjMxNzNiZjhlZjM0NmY4ODIyMzhmOGM=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-04-06T13:55:24Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-11-03T08:17:06Z"}, "message": "Revert \"Fix invalid bounds string generation in rustdoc\"\n\nThis reverts commit ddd034aa6f04e7f452bca398e3982c4a5ef6c0bc.", "tree": {"sha": "0fcd8fa2c39c508620637ba5ac5a874c25b9b104", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fcd8fa2c39c508620637ba5ac5a874c25b9b104"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b19cc0c215217e2423173bf8ef346f882238f8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b19cc0c215217e2423173bf8ef346f882238f8c", "html_url": "https://github.com/rust-lang/rust/commit/9b19cc0c215217e2423173bf8ef346f882238f8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b19cc0c215217e2423173bf8ef346f882238f8c/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c1b220fd747bf244f04b380e4d4ae005068f706", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c1b220fd747bf244f04b380e4d4ae005068f706", "html_url": "https://github.com/rust-lang/rust/commit/6c1b220fd747bf244f04b380e4d4ae005068f706"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "e07f0ffdc34645a365931ba4b59dce1bc5289f17", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9b19cc0c215217e2423173bf8ef346f882238f8c/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b19cc0c215217e2423173bf8ef346f882238f8c/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=9b19cc0c215217e2423173bf8ef346f882238f8c", "patch": "@@ -2071,10 +2071,7 @@ fn explicit_predicates_of(\n         }\n     }\n \n-    let hir_id = match tcx.hir().as_local_hir_id(def_id) {\n-        Some(hir_id) => hir_id,\n-        None => return tcx.predicates_of(def_id),\n-    };\n+    let hir_id = tcx.hir().as_local_hir_id(def_id).unwrap();\n     let node = tcx.hir().get(hir_id);\n \n     let mut is_trait = None;"}]}