{"sha": "9d33ce58b104f1f0e29a69b30c6b4353f1e28c52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkMzNjZTU4YjEwNGYxZjBlMjlhNjliMzBjNmI0MzUzZjFlMjhjNTI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-07-13T08:35:58Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-07-13T08:35:58Z"}, "message": "evaluate the array length of fixed size array types in rustdoc", "tree": {"sha": "ab3c5a70f0593207f7735e8dadb1e3f80781c2dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab3c5a70f0593207f7735e8dadb1e3f80781c2dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d33ce58b104f1f0e29a69b30c6b4353f1e28c52", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXhf1uAAoJEFbW7qD8Z6xGWAgP/i0q8+Hf11C4xGfCMRivrhFu\nY7gsd6oaFkTtLaR42ymNfqGZ+xeWSfknY+6nzMe8CE0Y7OpAe/ElITSFnh8r9z4N\nQxpguiChYs+ggqkuhVohLkSt/+B0XJSVsSlcNeluVVgOCgD4Rf8AiE9ye6Os/uK4\nzNz1ozAWC2mW7n8nub2ivjlylJZWUYPmyOvmMgGu73FH6YEpA7wvFyfpLfRf4k2Y\nWYbV4A1+hbdOugv6ZaS1N3vheL952ZZ1DpMYyLf9iaqfXSqxYuN0vVnKgpWlE3py\ntBaLD11Z74JGD4gp7ZckY52DLJkReQGrVDFg6JW63HUiMwVVF6M1l08/CQG0TeJj\njZDbU6DYE/AcB4EE3nN1VpP9wG5wLDJcz5jfWwB6n5JFEHGgd8sGQm5qF0+PMLX0\n6jsKtb1kOoWecGHfzAoWuqZAb5NiUHKGsvzT8qiwQg65PtcmUWP1InUvKF7sLD3Y\nugMgsCw13vKL1rqxXyQDNLvNVkt8skg2ZsfFKthqR06/AgpjitW1GbxR5JO0iLqC\nFR0SAn+KfYJm0MOyt35fNxx9nW0S9zWB8VqYOOFiRpiBT53mPnEoPtgPYqAUZZCF\nO52/EsGjUBVRcxMA2v04y+zyfB6/luFXltMClbSiQwmgCIeR1vQxB+3VTbXTrMc6\nhNFlmRI/B6ZgnLdNXzhK\n=2w4h\n-----END PGP SIGNATURE-----", "payload": "tree ab3c5a70f0593207f7735e8dadb1e3f80781c2dd\nparent b4e11c2af8fce4f72fc896bfb6215c446d593cda\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1468398958 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1468398958 +0200\n\nevaluate the array length of fixed size array types in rustdoc"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d33ce58b104f1f0e29a69b30c6b4353f1e28c52", "html_url": "https://github.com/rust-lang/rust/commit/9d33ce58b104f1f0e29a69b30c6b4353f1e28c52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d33ce58b104f1f0e29a69b30c6b4353f1e28c52/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4e11c2af8fce4f72fc896bfb6215c446d593cda", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4e11c2af8fce4f72fc896bfb6215c446d593cda", "html_url": "https://github.com/rust-lang/rust/commit/b4e11c2af8fce4f72fc896bfb6215c446d593cda"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "a41d3b0253a3668c794bb72e74fb02120de9c5d0", "filename": "src/librustdoc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d33ce58b104f1f0e29a69b30c6b4353f1e28c52/src%2Flibrustdoc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9d33ce58b104f1f0e29a69b30c6b4353f1e28c52/src%2Flibrustdoc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2FCargo.toml?ref=9d33ce58b104f1f0e29a69b30c6b4353f1e28c52", "patch": "@@ -14,6 +14,7 @@ arena = { path = \"../libarena\" }\n rustc = { path = \"../librustc\" }\n rustc_back = { path = \"../librustc_back\" }\n rustc_const_eval = { path = \"../librustc_const_eval\" }\n+rustc_const_math = { path = \"../librustc_const_math\" }\n rustc_driver = { path = \"../librustc_driver\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_lint = { path = \"../librustc_lint\" }"}, {"sha": "0e9edb4dda8cee44195ae40f6d048b4e8e41a739", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/9d33ce58b104f1f0e29a69b30c6b4353f1e28c52/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d33ce58b104f1f0e29a69b30c6b4353f1e28c52/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=9d33ce58b104f1f0e29a69b30c6b4353f1e28c52", "patch": "@@ -1624,8 +1624,25 @@ impl Clean<Type> for hir::Ty {\n                 BorrowedRef {lifetime: l.clean(cx), mutability: m.mutbl.clean(cx),\n                              type_: box m.ty.clean(cx)},\n             TyVec(ref ty) => Vector(box ty.clean(cx)),\n-            TyFixedLengthVec(ref ty, ref e) =>\n-                FixedVector(box ty.clean(cx), pprust::expr_to_string(e)),\n+            TyFixedLengthVec(ref ty, ref e) => {\n+                let n = if let Some(tcx) = cx.tcx_opt() {\n+                    use rustc_const_math::{ConstInt, ConstUsize};\n+                    use rustc_const_eval::eval_const_expr;\n+                    use rustc::middle::const_val::ConstVal;\n+                    match eval_const_expr(tcx, e) {\n+                        ConstVal::Integral(ConstInt::Usize(u)) => match u {\n+                            ConstUsize::Us16(u) => u.to_string(),\n+                            ConstUsize::Us32(u) => u.to_string(),\n+                            ConstUsize::Us64(u) => u.to_string(),\n+                        },\n+                        // after type checking this can't fail\n+                        _ => unreachable!(),\n+                    }\n+                } else {\n+                    pprust::expr_to_string(e)\n+                };\n+                FixedVector(box ty.clean(cx), n)\n+            },\n             TyTup(ref tys) => Tuple(tys.clean(cx)),\n             TyPath(None, ref p) => {\n                 resolve_type(cx, p.clean(cx), self.id)"}, {"sha": "d0c4f126550ca177356b4032497309372d3cb436", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d33ce58b104f1f0e29a69b30c6b4353f1e28c52/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d33ce58b104f1f0e29a69b30c6b4353f1e28c52/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=9d33ce58b104f1f0e29a69b30c6b4353f1e28c52", "patch": "@@ -34,6 +34,7 @@ extern crate getopts;\n extern crate libc;\n extern crate rustc;\n extern crate rustc_const_eval;\n+extern crate rustc_const_math;\n extern crate rustc_trans;\n extern crate rustc_driver;\n extern crate rustc_resolve;"}, {"sha": "4def60e485f7e0a05635c3648f5edf0669ea535a", "filename": "src/rustc/Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d33ce58b104f1f0e29a69b30c6b4353f1e28c52/src%2Frustc%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/9d33ce58b104f1f0e29a69b30c6b4353f1e28c52/src%2Frustc%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2FCargo.lock?ref=9d33ce58b104f1f0e29a69b30c6b4353f1e28c52", "patch": "@@ -350,6 +350,7 @@ dependencies = [\n  \"rustc 0.0.0\",\n  \"rustc_back 0.0.0\",\n  \"rustc_const_eval 0.0.0\",\n+ \"rustc_const_math 0.0.0\",\n  \"rustc_driver 0.0.0\",\n  \"rustc_errors 0.0.0\",\n  \"rustc_lint 0.0.0\","}, {"sha": "c6da6b0575b87c3bef842f051525a3ae3df97920", "filename": "src/test/rustdoc/issue-33302.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9d33ce58b104f1f0e29a69b30c6b4353f1e28c52/src%2Ftest%2Frustdoc%2Fissue-33302.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d33ce58b104f1f0e29a69b30c6b4353f1e28c52/src%2Ftest%2Frustdoc%2Fissue-33302.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-33302.rs?ref=9d33ce58b104f1f0e29a69b30c6b4353f1e28c52", "patch": "@@ -34,8 +34,8 @@ macro_rules! make {\n         }\n \n         // @has issue_33302/struct.S.html \\\n-        //        '//h3[@class=\"impl\"]' 'impl T<[i32; 4 * 4]> for S'\n-        // @has - '//*[@id=\"associatedconstant.C\"]' 'const C: [i32; 4 * 4] = [0; 4 * 4]'\n+        //        '//h3[@class=\"impl\"]' 'impl T<[i32; 16]> for S'\n+        // @has - '//*[@id=\"associatedconstant.C\"]' 'const C: [i32; 16] = [0; 4 * 4]'\n         // @has - '//*[@id=\"associatedconstant.D\"]' 'const D: i32 = 4 * 4'\n         impl T<[i32; ($n * $n)]> for S {\n             const C: [i32; ($n * $n)] = [0; ($n * $n)];"}]}