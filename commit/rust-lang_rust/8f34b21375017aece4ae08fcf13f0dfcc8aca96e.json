{"sha": "8f34b21375017aece4ae08fcf13f0dfcc8aca96e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmMzRiMjEzNzUwMTdhZWNlNGFlMDhmY2YxM2YwZGZjYzhhY2E5NmU=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2014-07-07T22:12:31Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2014-07-08T23:27:34Z"}, "message": "test case for expansion of method macro", "tree": {"sha": "53aa0d5a303888dc7025f801f6298ffa8febc1a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53aa0d5a303888dc7025f801f6298ffa8febc1a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f34b21375017aece4ae08fcf13f0dfcc8aca96e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f34b21375017aece4ae08fcf13f0dfcc8aca96e", "html_url": "https://github.com/rust-lang/rust/commit/8f34b21375017aece4ae08fcf13f0dfcc8aca96e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f34b21375017aece4ae08fcf13f0dfcc8aca96e/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ee9c49cb4823c5bddbd9ec1ece6dfafa9e833ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ee9c49cb4823c5bddbd9ec1ece6dfafa9e833ea", "html_url": "https://github.com/rust-lang/rust/commit/9ee9c49cb4823c5bddbd9ec1ece6dfafa9e833ea"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "47c86f1c9f5c2f487e962f5f5240ba25677129c3", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8f34b21375017aece4ae08fcf13f0dfcc8aca96e/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f34b21375017aece4ae08fcf13f0dfcc8aca96e/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=8f34b21375017aece4ae08fcf13f0dfcc8aca96e", "patch": "@@ -512,8 +512,10 @@ fn expand_item_mac(it: Gc<ast::Item>, fld: &mut MacroExpander)\n \n     let items = match expanded.make_def() {\n         Some(MacroDef { name, ext }) => {\n-            // yikes... no idea how to apply the mark to this. I'm afraid\n-            // we're going to have to wait-and-see on this one.\n+            // hidden invariant: this should only be possible as the\n+            // result of expanding a LetSyntaxTT, and thus doesn't\n+            // need to be marked. Not that it could be marked anyway.\n+            // create issue to recommend refactoring here?\n             fld.extsbox.insert(intern(name.as_slice()), ext);\n             if attr::contains_name(it.attrs.as_slice(), \"macro_export\") {\n                 SmallVector::one(it)\n@@ -1466,6 +1468,15 @@ mod test {\n             0)\n     }\n \n+    // macro_rules in method position\n+    #[test] fn macro_in_method_posn(){\n+        expand_crate_str(\n+            \"macro_rules! my_method (() => fn thirteen(&self) -> int {13})\n+            struct A;\n+            impl A{ my_method!()}\n+            fn f(){A.thirteen;}\".to_string());\n+    }\n+\n     // run one of the renaming tests\n     fn run_renaming_test(t: &RenamingTest, test_idx: uint) {\n         let invalid_name = token::special_idents::invalid.name;"}]}