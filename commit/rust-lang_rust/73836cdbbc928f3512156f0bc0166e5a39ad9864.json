{"sha": "73836cdbbc928f3512156f0bc0166e5a39ad9864", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczODM2Y2RiYmM5MjhmMzUxMjE1NmYwYmMwMTY2ZTVhMzlhZDk4NjQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-20T18:05:01Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-20T18:05:01Z"}, "message": "extend selection expands macros and can totally panic", "tree": {"sha": "0cdaf64f538467c3f5a974cac51413f495250f06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cdaf64f538467c3f5a974cac51413f495250f06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73836cdbbc928f3512156f0bc0166e5a39ad9864", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73836cdbbc928f3512156f0bc0166e5a39ad9864", "html_url": "https://github.com/rust-lang/rust/commit/73836cdbbc928f3512156f0bc0166e5a39ad9864", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73836cdbbc928f3512156f0bc0166e5a39ad9864/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "171f6e6d00d1fc99395b7b92c8a40b47d6bd6962", "url": "https://api.github.com/repos/rust-lang/rust/commits/171f6e6d00d1fc99395b7b92c8a40b47d6bd6962", "html_url": "https://github.com/rust-lang/rust/commit/171f6e6d00d1fc99395b7b92c8a40b47d6bd6962"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "718b4def557c542f327cf2996a066fa303f670ca", "filename": "crates/ra_ide_api/src/extend_selection.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73836cdbbc928f3512156f0bc0166e5a39ad9864/crates%2Fra_ide_api%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73836cdbbc928f3512156f0bc0166e5a39ad9864/crates%2Fra_ide_api%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fextend_selection.rs?ref=73836cdbbc928f3512156f0bc0166e5a39ad9864", "patch": "@@ -51,7 +51,7 @@ mod tests {\n             }\n         \",\n         );\n-        let r = analysis.extend_selection(frange);\n+        let r = analysis.extend_selection(frange).unwrap();\n         assert_eq!(r, TextRange::from_to(51.into(), 56.into()));\n     }\n }"}, {"sha": "919d248e2cd03ff7db87b566925390633d7a9107", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73836cdbbc928f3512156f0bc0166e5a39ad9864/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73836cdbbc928f3512156f0bc0166e5a39ad9864/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=73836cdbbc928f3512156f0bc0166e5a39ad9864", "patch": "@@ -310,8 +310,8 @@ impl Analysis {\n     }\n \n     /// Selects the next syntactic nodes encopasing the range.\n-    pub fn extend_selection(&self, frange: FileRange) -> TextRange {\n-        extend_selection::extend_selection(&self.db, frange)\n+    pub fn extend_selection(&self, frange: FileRange) -> Cancelable<TextRange> {\n+        self.with_db(|db| extend_selection::extend_selection(db, frange))\n     }\n \n     /// Returns position of the mathcing brace (all types of braces are"}, {"sha": "02393f728b1444ab259465b334bb641edacd4b4c", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/73836cdbbc928f3512156f0bc0166e5a39ad9864/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73836cdbbc928f3512156f0bc0166e5a39ad9864/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=73836cdbbc928f3512156f0bc0166e5a39ad9864", "patch": "@@ -8,7 +8,7 @@ use lsp_types::{\n     WorkspaceEdit\n };\n use ra_ide_api::{\n-    FileId, FilePosition, FileRange, FoldKind, Query, RangeInfo, RunnableKind, Severity,\n+    FileId, FilePosition, FileRange, FoldKind, Query, RangeInfo, RunnableKind, Severity, Cancelable,\n };\n use ra_syntax::{AstNode, TextUnit};\n use rustc_hash::FxHashMap;\n@@ -40,9 +40,13 @@ pub fn handle_extend_selection(\n         .into_iter()\n         .map_conv_with(&line_index)\n         .map(|range| FileRange { file_id, range })\n-        .map(|frange| world.analysis().extend_selection(frange))\n-        .map_conv_with(&line_index)\n-        .collect();\n+        .map(|frange| {\n+            world\n+                .analysis()\n+                .extend_selection(frange)\n+                .map(|it| it.conv_with(&line_index))\n+        })\n+        .collect::<Cancelable<Vec<_>>>()?;\n     Ok(req::ExtendSelectionResult { selections })\n }\n "}]}