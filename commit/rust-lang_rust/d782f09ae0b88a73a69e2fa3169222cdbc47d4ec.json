{"sha": "d782f09ae0b88a73a69e2fa3169222cdbc47d4ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ODJmMDlhZTBiODhhNzNhNjllMmZhMzE2OTIyMmNkYmM0N2Q0ZWM=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-09-17T21:10:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-17T21:10:54Z"}, "message": "Rollup merge of #64529 - taiki-e:docs-pin-as-mut, r=RalfJung\n\nAdd an example to Pin::as_mut\n\nhttps://github.com/taiki-e/pin-project/issues/89#issuecomment-531701172\n\nr? @RalfJung", "tree": {"sha": "e0e7d5687d66d2fce38a29ef5958ee237e2643a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0e7d5687d66d2fce38a29ef5958ee237e2643a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d782f09ae0b88a73a69e2fa3169222cdbc47d4ec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdgUveCRBK7hj4Ov3rIwAAdHIIACwW4vTBlwl9rhcc7CZpg4C/\nXS7hV8gipH8BKTL2r19ltpMOYhUPPiujhATQs38KPQ87g5WTjvrDrNeZHXTDM5up\n5Axh1HMEkkNH7VJ782SkJzUZgTMh98h4TM//mbXIxtoA2gyJ6uAaxj56taMLgtvi\nxM9YujIUlQM/ssCB632J7vZUNm7SP6mza5hOLdHq+lOERls6t14rKLEZLb8jw3nC\ncFsFkWXydzSI9D63A4pQkjB++zebiUfKtkaVMD8PoSJdqVoN2V/d58gRV2MN4O63\naLog7TrSONf8S1FUN0MTzvOgzN1+BYzWfNbPJUYe5FGG6ns0qtqKFh+fgBMl4xE=\n=LPBU\n-----END PGP SIGNATURE-----\n", "payload": "tree e0e7d5687d66d2fce38a29ef5958ee237e2643a2\nparent b544284315cdf9dcbdd41c0851d15962baf0dc34\nparent a22e9ee8d0801f9738533b76a492e94065767cbc\nauthor Tyler Mandry <tmandry@gmail.com> 1568754654 -0700\ncommitter GitHub <noreply@github.com> 1568754654 -0700\n\nRollup merge of #64529 - taiki-e:docs-pin-as-mut, r=RalfJung\n\nAdd an example to Pin::as_mut\n\nhttps://github.com/taiki-e/pin-project/issues/89#issuecomment-531701172\n\nr? @RalfJung\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d782f09ae0b88a73a69e2fa3169222cdbc47d4ec", "html_url": "https://github.com/rust-lang/rust/commit/d782f09ae0b88a73a69e2fa3169222cdbc47d4ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d782f09ae0b88a73a69e2fa3169222cdbc47d4ec/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b544284315cdf9dcbdd41c0851d15962baf0dc34", "url": "https://api.github.com/repos/rust-lang/rust/commits/b544284315cdf9dcbdd41c0851d15962baf0dc34", "html_url": "https://github.com/rust-lang/rust/commit/b544284315cdf9dcbdd41c0851d15962baf0dc34"}, {"sha": "a22e9ee8d0801f9738533b76a492e94065767cbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a22e9ee8d0801f9738533b76a492e94065767cbc", "html_url": "https://github.com/rust-lang/rust/commit/a22e9ee8d0801f9738533b76a492e94065767cbc"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "1dc6d54b08a5aa7700a48f674487bbf1d89755b8", "filename": "src/libcore/pin.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d782f09ae0b88a73a69e2fa3169222cdbc47d4ec/src%2Flibcore%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d782f09ae0b88a73a69e2fa3169222cdbc47d4ec/src%2Flibcore%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpin.rs?ref=d782f09ae0b88a73a69e2fa3169222cdbc47d4ec", "patch": "@@ -584,6 +584,27 @@ impl<P: DerefMut> Pin<P> {\n     /// the pointee cannot move after `Pin<Pointer<T>>` got created.\n     /// \"Malicious\" implementations of `Pointer::DerefMut` are likewise\n     /// ruled out by the contract of `Pin::new_unchecked`.\n+    ///\n+    /// This method is useful when doing multiple calls to functions that consume the pinned type.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// use std::pin::Pin;\n+    ///\n+    /// # struct Type {}\n+    /// impl Type {\n+    ///     fn method(self: Pin<&mut Self>) {\n+    ///         // do something\n+    ///     }\n+    ///\n+    ///     fn call_method_twice(mut self: Pin<&mut Self>) {\n+    ///         // `method` consumes `self`, so reborrow the `Pin<&mut Self>` via `as_mut`.\n+    ///         self.as_mut().method();\n+    ///         self.as_mut().method();\n+    ///     }\n+    /// }\n+    /// ```\n     #[stable(feature = \"pin\", since = \"1.33.0\")]\n     #[inline(always)]\n     pub fn as_mut(&mut self) -> Pin<&mut P::Target> {"}]}