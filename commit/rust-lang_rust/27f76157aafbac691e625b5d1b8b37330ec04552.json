{"sha": "27f76157aafbac691e625b5d1b8b37330ec04552", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3Zjc2MTU3YWFmYmFjNjkxZTYyNWI1ZDFiOGIzNzMzMGVjMDQ1NTI=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2017-01-17T12:18:16Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2017-01-17T12:18:16Z"}, "message": "fix style nits", "tree": {"sha": "b954ed24cc8ade04414b41ff7f3349b592579a07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b954ed24cc8ade04414b41ff7f3349b592579a07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27f76157aafbac691e625b5d1b8b37330ec04552", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27f76157aafbac691e625b5d1b8b37330ec04552", "html_url": "https://github.com/rust-lang/rust/commit/27f76157aafbac691e625b5d1b8b37330ec04552", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27f76157aafbac691e625b5d1b8b37330ec04552/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c940893e58ad141ec8e3eaf2c65741d15d9eb93", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c940893e58ad141ec8e3eaf2c65741d15d9eb93", "html_url": "https://github.com/rust-lang/rust/commit/6c940893e58ad141ec8e3eaf2c65741d15d9eb93"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "ea98265ef8de0904d04012821bf27db5bbfd7dba", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/27f76157aafbac691e625b5d1b8b37330ec04552/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27f76157aafbac691e625b5d1b8b37330ec04552/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=27f76157aafbac691e625b5d1b8b37330ec04552", "patch": "@@ -1086,7 +1086,7 @@ impl<I: Iterator, P> Iterator for Filter<I, P> where P: FnMut(&I::Item) -> bool\n \n     #[inline]\n     fn next(&mut self) -> Option<I::Item> {\n-        for x in self.iter.by_ref() {\n+        for x in &mut self.iter {\n             if (self.predicate)(&x) {\n                 return Some(x);\n             }\n@@ -1101,13 +1101,12 @@ impl<I: Iterator, P> Iterator for Filter<I, P> where P: FnMut(&I::Item) -> bool\n     }\n \n     #[inline]\n-    fn count(self) -> usize {\n-        let (mut c, mut predicate, mut iter) = (0, self.predicate, self.iter);\n-        for x in iter.by_ref() {\n-            // branchless count\n-            c += (&mut predicate)(&x) as usize;\n+    fn count(mut self) -> usize {\n+        let mut count = 0;\n+        for x in &mut self.iter {\n+            count += (self.predicate)(&x) as usize;\n         }\n-        c\n+        count\n     }\n }\n "}]}