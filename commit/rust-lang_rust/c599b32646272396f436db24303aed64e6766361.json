{"sha": "c599b32646272396f436db24303aed64e6766361", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1OTliMzI2NDYyNzIzOTZmNDM2ZGIyNDMwM2FlZDY0ZTY3NjYzNjE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-12T17:28:23Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-12T17:28:23Z"}, "message": "Kill old parser support for type-parametric modules. We don't support those.", "tree": {"sha": "87e59c510844b2ae5305c856d1a13bedc00a0076", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87e59c510844b2ae5305c856d1a13bedc00a0076"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c599b32646272396f436db24303aed64e6766361", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c599b32646272396f436db24303aed64e6766361", "html_url": "https://github.com/rust-lang/rust/commit/c599b32646272396f436db24303aed64e6766361", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c599b32646272396f436db24303aed64e6766361/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5297582ba2e639368fe2ac65036408441cf8a25c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5297582ba2e639368fe2ac65036408441cf8a25c", "html_url": "https://github.com/rust-lang/rust/commit/5297582ba2e639368fe2ac65036408441cf8a25c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "b5a8bb7aa59910a98a8cfea9b30047408a593dd0", "filename": "src/boot/fe/item.ml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c599b32646272396f436db24303aed64e6766361/src%2Fboot%2Ffe%2Fitem.ml", "raw_url": "https://github.com/rust-lang/rust/raw/c599b32646272396f436db24303aed64e6766361/src%2Fboot%2Ffe%2Fitem.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Fitem.ml?ref=c599b32646272396f436db24303aed64e6766361", "patch": "@@ -840,14 +840,14 @@ and parse_mod_item (ps:pstate) : (Ast.ident * Ast.mod_item) =\n                 | _ -> CONV_cdecl\n             in\n               expect ps MOD;\n-              let (ident, params) = parse_ident_and_params ps \"native mod\" in\n+              let ident = Pexp.parse_ident ps in\n               let path = parse_lib_name ident in\n               let items = parse_mod_items_from_signature ps in\n               let bpos = lexpos ps in\n               let rlib = REQUIRED_LIB_c { required_libname = path;\n                                           required_prefix = ps.pstate_depth }\n               in\n-              let item = decl params (Ast.MOD_ITEM_mod items) in\n+              let item = decl [||] (Ast.MOD_ITEM_mod items) in\n               let item = span ps apos bpos item in\n                 note_required_mod ps {lo=apos; hi=bpos} conv rlib item;\n                 (ident, item)"}]}