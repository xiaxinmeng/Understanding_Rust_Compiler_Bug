{"sha": "eefe02ce6e1750b771cf99125429358e87485745", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlZmUwMmNlNmUxNzUwYjc3MWNmOTkxMjU0MjkzNThlODc0ODU3NDU=", "commit": {"author": {"name": "Florian Diebold", "email": "florian.diebold@freiheit.com", "date": "2020-02-07T17:27:54Z"}, "committer": {"name": "Florian Diebold", "email": "florian.diebold@freiheit.com", "date": "2020-02-07T17:28:11Z"}, "message": "Add two more tests", "tree": {"sha": "d51fc01b2e85b0a85b22e49e830c541c827badca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d51fc01b2e85b0a85b22e49e830c541c827badca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eefe02ce6e1750b771cf99125429358e87485745", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eefe02ce6e1750b771cf99125429358e87485745", "html_url": "https://github.com/rust-lang/rust/commit/eefe02ce6e1750b771cf99125429358e87485745", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eefe02ce6e1750b771cf99125429358e87485745/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d6061f3bb935c914a6d58df803dd42770f2f7e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d6061f3bb935c914a6d58df803dd42770f2f7e2", "html_url": "https://github.com/rust-lang/rust/commit/9d6061f3bb935c914a6d58df803dd42770f2f7e2"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "17611ddbfa4217338b6792ee31ac43f17c20b199", "filename": "crates/ra_hir_ty/src/tests/traits.rs", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/eefe02ce6e1750b771cf99125429358e87485745/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eefe02ce6e1750b771cf99125429358e87485745/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs?ref=eefe02ce6e1750b771cf99125429358e87485745", "patch": "@@ -1013,6 +1013,31 @@ fn test() {\n     );\n }\n \n+#[test]\n+fn argument_impl_trait_to_fn_pointer() {\n+    assert_snapshot!(\n+        infer_with_mismatches(r#\"\n+trait Trait {}\n+fn foo(x: impl Trait) { loop {} }\n+struct S;\n+impl Trait for S {}\n+\n+fn test() {\n+    let f: fn(S) -> () = foo;\n+}\n+\"#, true),\n+        @r###\"\n+    [23; 24) 'x': impl Trait\n+    [38; 49) '{ loop {} }': ()\n+    [40; 47) 'loop {}': !\n+    [45; 47) '{}': ()\n+    [91; 124) '{     ...foo; }': ()\n+    [101; 102) 'f': fn(S) -> ()\n+    [118; 121) 'foo': fn foo(S) -> ()\n+    \"###\n+    );\n+}\n+\n #[test]\n #[ignore]\n fn impl_trait() {\n@@ -1376,6 +1401,32 @@ fn test<T: Trait1, U: Trait2>(x: T, y: U) {\n     );\n }\n \n+#[test]\n+fn super_trait_impl_trait_method_resolution() {\n+    assert_snapshot!(\n+        infer(r#\"\n+mod foo {\n+    trait SuperTrait {\n+        fn foo(&self) -> u32 {}\n+    }\n+}\n+trait Trait1: foo::SuperTrait {}\n+\n+fn test(x: &impl Trait1) {\n+    x.foo();\n+}\n+\"#),\n+        @r###\"\n+    [50; 54) 'self': &Self\n+    [63; 65) '{}': ()\n+    [116; 117) 'x': &impl Trait1\n+    [133; 149) '{     ...o(); }': ()\n+    [139; 140) 'x': &impl Trait1\n+    [139; 146) 'x.foo()': u32\n+    \"###\n+    );\n+}\n+\n #[test]\n fn super_trait_cycle() {\n     // This just needs to not crash"}]}