{"sha": "8a28eaa3fcbc4fa960b26ed47dbad207b5ce63c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhMjhlYWEzZmNiYzRmYTk2MGIyNmVkNDdkYmFkMjA3YjVjZTYzYzc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-01T12:20:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-01T12:20:45Z"}, "message": "Auto merge of #1494 - RalfJung:stack-unwind-top, r=RalfJung\n\ntest unwinding past topmost frame of a stack\n\nThis tests https://github.com/rust-lang/rust/pull/74984", "tree": {"sha": "09e8cf5cf9752ff2a5c924d9b00511cb53a9cc67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09e8cf5cf9752ff2a5c924d9b00511cb53a9cc67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a28eaa3fcbc4fa960b26ed47dbad207b5ce63c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a28eaa3fcbc4fa960b26ed47dbad207b5ce63c7", "html_url": "https://github.com/rust-lang/rust/commit/8a28eaa3fcbc4fa960b26ed47dbad207b5ce63c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a28eaa3fcbc4fa960b26ed47dbad207b5ce63c7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b970ef05eef62ca562b11e0d80d1e66dd09f8d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b970ef05eef62ca562b11e0d80d1e66dd09f8d0", "html_url": "https://github.com/rust-lang/rust/commit/7b970ef05eef62ca562b11e0d80d1e66dd09f8d0"}, {"sha": "5d221450690cc0a31da829563042762dff3139df", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d221450690cc0a31da829563042762dff3139df", "html_url": "https://github.com/rust-lang/rust/commit/5d221450690cc0a31da829563042762dff3139df"}], "stats": {"total": 48, "additions": 37, "deletions": 11}, "files": [{"sha": "7c4b8a50cc28709ac50027f39bf3308c41e0def2", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a28eaa3fcbc4fa960b26ed47dbad207b5ce63c7/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/8a28eaa3fcbc4fa960b26ed47dbad207b5ce63c7/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=8a28eaa3fcbc4fa960b26ed47dbad207b5ce63c7", "patch": "@@ -1 +1 @@\n-21867225a74d3b07c2b65e32c67f45197db36896\n+dfe1e3b641abbede6230e3931d14f0d43e5b8e54"}, {"sha": "93b15202fc385208ab8a6a21a1be6525f8552ca1", "filename": "tests/compile-fail/concurrency/unwind_top_of_stack.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8a28eaa3fcbc4fa960b26ed47dbad207b5ce63c7/tests%2Fcompile-fail%2Fconcurrency%2Funwind_top_of_stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a28eaa3fcbc4fa960b26ed47dbad207b5ce63c7/tests%2Fcompile-fail%2Fconcurrency%2Funwind_top_of_stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fconcurrency%2Funwind_top_of_stack.rs?ref=8a28eaa3fcbc4fa960b26ed47dbad207b5ce63c7", "patch": "@@ -0,0 +1,24 @@\n+// ignore-windows: Concurrency on Windows is not supported yet.\n+// error-pattern: unwinding past the topmost frame of the stack\n+\n+//! Unwinding past the top frame of a stack is Undefined Behavior.\n+\n+#![feature(rustc_private)]\n+\n+extern crate libc;\n+\n+use std::{mem, ptr};\n+\n+extern \"C\" fn thread_start(_null: *mut libc::c_void) -> *mut libc::c_void {\n+    panic!()\n+}\n+\n+fn main() {\n+    unsafe {\n+        let mut native: libc::pthread_t = mem::zeroed();\n+        let attr: libc::pthread_attr_t = mem::zeroed();\n+        // assert_eq!(libc::pthread_attr_init(&mut attr), 0); FIXME: this function is not yet implemented.\n+        assert_eq!(libc::pthread_create(&mut native, &attr, thread_start, ptr::null_mut()), 0);\n+        assert_eq!(libc::pthread_join(native, ptr::null_mut()), 0);\n+    }\n+}"}, {"sha": "976a35da6061d52fedf0a3238153e49223a04d11", "filename": "tests/run-pass/linked-list.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8a28eaa3fcbc4fa960b26ed47dbad207b5ce63c7/tests%2Frun-pass%2Flinked-list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a28eaa3fcbc4fa960b26ed47dbad207b5ce63c7/tests%2Frun-pass%2Flinked-list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Flinked-list.rs?ref=8a28eaa3fcbc4fa960b26ed47dbad207b5ce63c7", "patch": "@@ -1,4 +1,4 @@\n-#![feature(linked_list_extras)]\n+#![feature(linked_list_cursors)]\n use std::collections::LinkedList;\n \n fn list_from<T: Clone>(v: &[T]) -> LinkedList<T> {\n@@ -9,25 +9,27 @@ fn main() {\n     let mut m = list_from(&[0, 2, 4, 6, 8]);\n     let len = m.len();\n     {\n-        let mut it = m.iter_mut();\n-        it.insert_next(-2);\n+        let mut it = m.cursor_front_mut();\n+        it.insert_before(-2);\n         loop {\n-            match it.next() {\n+            match it.current().copied() {\n                 None => break,\n                 Some(elt) => {\n-                    it.insert_next(*elt + 1);\n                     match it.peek_next() {\n-                        Some(x) => assert_eq!(*x, *elt + 2),\n-                        None => assert_eq!(8, *elt),\n+                        Some(x) => assert_eq!(*x, elt + 2),\n+                        None => assert_eq!(8, elt),\n                     }\n+                    it.insert_after(elt + 1);\n+                    it.move_next(); // Move by 2 to skip the one we inserted.\n+                    it.move_next();\n                 }\n             }\n         }\n-        it.insert_next(0);\n-        it.insert_next(1);\n+        it.insert_before(99);\n+        it.insert_after(-10);\n     }\n \n     assert_eq!(m.len(), 3 + len * 2);\n     assert_eq!(m.into_iter().collect::<Vec<_>>(),\n-               [-2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1]);\n+               [-10, -2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 99]);\n }"}]}