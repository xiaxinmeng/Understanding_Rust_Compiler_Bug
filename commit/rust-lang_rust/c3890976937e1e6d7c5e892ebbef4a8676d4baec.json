{"sha": "c3890976937e1e6d7c5e892ebbef4a8676d4baec", "node_id": "C_kwDOAAsO6NoAKGMzODkwOTc2OTM3ZTFlNmQ3YzVlODkyZWJiZWY0YTg2NzZkNGJhZWM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-14T18:26:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-14T18:26:19Z"}, "message": "Rollup merge of #104378 - compiler-errors:chalk-up, r=jackh726\n\nBump chalk to v0.87\n\n1. Removes `ReEmpty` from chalk\n2. Adds support for the `std::marker::Tuple` trait", "tree": {"sha": "f6d479b9534f6cfaf8d4352d5c0291c2ac5ee66f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6d479b9534f6cfaf8d4352d5c0291c2ac5ee66f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3890976937e1e6d7c5e892ebbef4a8676d4baec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjcohLCRBK7hj4Ov3rIwAAtYYIAJNKKqOw878TmX38ySKWmTC3\n3Y5wte7ok8mF3SFqlajzo2BuLEp/pLboYn46rhrXgab7Q4grU8618zcM4QiKKGOI\ndWBJyV5kyVyZEIf+NcGGR68T/s5ztRPafOscDve8ryL+QD5+VxMj6w6SfdfUDkv5\nsRsWA/wLb5Icpm6ZY6T+D7Yc4rl3lf28ULIh8JngSucECyzq1LgRuVS2p7esfkO+\nxs3kHDuSI2zW3LK1+EH+3KHr5i6UonIsxYEsUPJWqBuszZ3+NOXp95igmIa2EgPP\n71spkuHl4z2rtzIwxwNzxnKZI7cRfii9d7sgwmjpJBkbsL7iljhvnxK6GcE8IyA=\n=wUco\n-----END PGP SIGNATURE-----\n", "payload": "tree f6d479b9534f6cfaf8d4352d5c0291c2ac5ee66f\nparent dc869fcfb22bfabae187578dcd10ba68348fdc93\nparent 36a106891a1e410656c8fcbe2109ca53c35759ce\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1668450379 +0100\ncommitter GitHub <noreply@github.com> 1668450379 +0100\n\nRollup merge of #104378 - compiler-errors:chalk-up, r=jackh726\n\nBump chalk to v0.87\n\n1. Removes `ReEmpty` from chalk\n2. Adds support for the `std::marker::Tuple` trait\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3890976937e1e6d7c5e892ebbef4a8676d4baec", "html_url": "https://github.com/rust-lang/rust/commit/c3890976937e1e6d7c5e892ebbef4a8676d4baec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3890976937e1e6d7c5e892ebbef4a8676d4baec/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc869fcfb22bfabae187578dcd10ba68348fdc93", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc869fcfb22bfabae187578dcd10ba68348fdc93", "html_url": "https://github.com/rust-lang/rust/commit/dc869fcfb22bfabae187578dcd10ba68348fdc93"}, {"sha": "36a106891a1e410656c8fcbe2109ca53c35759ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/36a106891a1e410656c8fcbe2109ca53c35759ce", "html_url": "https://github.com/rust-lang/rust/commit/36a106891a1e410656c8fcbe2109ca53c35759ce"}], "stats": {"total": 157, "additions": 32, "deletions": 125}, "files": [{"sha": "9f64aa44314db553a78cacab3826a95a45e66f22", "filename": "Cargo.lock", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c3890976937e1e6d7c5e892ebbef4a8676d4baec/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/c3890976937e1e6d7c5e892ebbef4a8676d4baec/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=c3890976937e1e6d7c5e892ebbef4a8676d4baec", "patch": "@@ -502,9 +502,9 @@ dependencies = [\n \n [[package]]\n name = \"chalk-derive\"\n-version = \"0.80.0\"\n+version = \"0.87.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d0001adf0cf12361e08b65e1898ea138f8f77d8f5177cbf29b6b3b3532252bd6\"\n+checksum = \"d552b2fa341f5fc35c6b917b1d289d3c3a34d0b74e579390ea6192d6152a8cdb\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -514,9 +514,9 @@ dependencies = [\n \n [[package]]\n name = \"chalk-engine\"\n-version = \"0.80.0\"\n+version = \"0.87.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c44ee96f2d67cb5193d1503f185db1abad9933a1c6e6b4169c176f90baecd393\"\n+checksum = \"7e54ac43048cb31c470d7b3e3acd409090ef4a5abddfe02455187aebc3d6879f\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-ir\",\n@@ -527,9 +527,9 @@ dependencies = [\n \n [[package]]\n name = \"chalk-ir\"\n-version = \"0.80.0\"\n+version = \"0.87.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"92d8a95548f23618fda86426e4304e563ec2bb7ba0216139f0748d63c107b5f1\"\n+checksum = \"43aa55deff4e7fbdb09fa014543372f2c95a06835ac487b9ce57b5099b950838\"\n dependencies = [\n  \"bitflags\",\n  \"chalk-derive\",\n@@ -538,9 +538,9 @@ dependencies = [\n \n [[package]]\n name = \"chalk-solve\"\n-version = \"0.80.0\"\n+version = \"0.87.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"f37f492dacfafe2e21319b80827da2779932909bb392f0cc86b2bd5c07c1b4e1\"\n+checksum = \"61213deefc36ba265ad01c4d997e18bcddf7922862a4594a47ca4575afb3dab4\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-ir\","}, {"sha": "5f6e498dbeaa23bb0c8811f4be9d9605955c5edd", "filename": "compiler/rustc_middle/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3890976937e1e6d7c5e892ebbef4a8676d4baec/compiler%2Frustc_middle%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c3890976937e1e6d7c5e892ebbef4a8676d4baec/compiler%2Frustc_middle%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2FCargo.toml?ref=c3890976937e1e6d7c5e892ebbef4a8676d4baec", "patch": "@@ -8,7 +8,7 @@ doctest = false\n \n [dependencies]\n bitflags = \"1.2.1\"\n-chalk-ir = \"0.80.0\"\n+chalk-ir = \"0.87.0\"\n either = \"1.5.0\"\n gsgdt = \"0.1.2\"\n polonius-engine = \"0.13.0\""}, {"sha": "9474e6df5677b9e4500eedaee7500d861eb569ea", "filename": "compiler/rustc_traits/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c3890976937e1e6d7c5e892ebbef4a8676d4baec/compiler%2Frustc_traits%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c3890976937e1e6d7c5e892ebbef4a8676d4baec/compiler%2Frustc_traits%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2FCargo.toml?ref=c3890976937e1e6d7c5e892ebbef4a8676d4baec", "patch": "@@ -12,9 +12,9 @@ rustc_hir = { path = \"../rustc_hir\" }\n rustc_index = { path = \"../rustc_index\" }\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_span = { path = \"../rustc_span\" }\n-chalk-ir = \"0.80.0\"\n-chalk-engine = \"0.80.0\"\n-chalk-solve = \"0.80.0\"\n+chalk-ir = \"0.87.0\"\n+chalk-engine = \"0.87.0\"\n+chalk-solve = \"0.87.0\"\n smallvec = { version = \"1.8.1\", features = [\"union\", \"may_dangle\"] }\n rustc_infer = { path = \"../rustc_infer\" }\n rustc_trait_selection = { path = \"../rustc_trait_selection\" }"}, {"sha": "d15707e5ceddb694b16f2fc4aee5d90bbca99d7d", "filename": "compiler/rustc_traits/src/chalk/db.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c3890976937e1e6d7c5e892ebbef4a8676d4baec/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3890976937e1e6d7c5e892ebbef4a8676d4baec/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fdb.rs?ref=c3890976937e1e6d7c5e892ebbef4a8676d4baec", "patch": "@@ -142,6 +142,8 @@ impl<'tcx> chalk_solve::RustIrDatabase<RustInterner<'tcx>> for RustIrDatabase<'t\n             Some(CoerceUnsized)\n         } else if lang_items.dispatch_from_dyn_trait() == Some(def_id) {\n             Some(DispatchFromDyn)\n+        } else if lang_items.tuple_trait() == Some(def_id) {\n+            Some(Tuple)\n         } else {\n             None\n         };\n@@ -570,6 +572,7 @@ impl<'tcx> chalk_solve::RustIrDatabase<RustInterner<'tcx>> for RustIrDatabase<'t\n             CoerceUnsized => lang_items.coerce_unsized_trait(),\n             DiscriminantKind => lang_items.discriminant_kind_trait(),\n             DispatchFromDyn => lang_items.dispatch_from_dyn_trait(),\n+            Tuple => lang_items.tuple_trait(),\n         };\n         def_id.map(chalk_ir::TraitId)\n     }"}, {"sha": "25cedefa26127b70d40f8be46b74877f57d4411c", "filename": "compiler/rustc_traits/src/chalk/lowering.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c3890976937e1e6d7c5e892ebbef4a8676d4baec/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3890976937e1e6d7c5e892ebbef4a8676d4baec/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Flowering.rs?ref=c3890976937e1e6d7c5e892ebbef4a8676d4baec", "patch": "@@ -507,9 +507,6 @@ impl<'tcx> LowerInto<'tcx, Region<'tcx>> for &chalk_ir::Lifetime<RustInterner<'t\n                 name: ty::BoundRegionKind::BrAnon(p.idx as u32, None),\n             }),\n             chalk_ir::LifetimeData::Static => return interner.tcx.lifetimes.re_static,\n-            chalk_ir::LifetimeData::Empty(_) => {\n-                bug!(\"Chalk should not have been passed an empty lifetime.\")\n-            }\n             chalk_ir::LifetimeData::Erased => return interner.tcx.lifetimes.re_erased,\n             chalk_ir::LifetimeData::Phantom(void, _) => match *void {},\n         };"}, {"sha": "568e2e30c418ca7c91ca3b714c1f42717c0712f4", "filename": "src/test/ui/chalkify/closure.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c3890976937e1e6d7c5e892ebbef4a8676d4baec/src%2Ftest%2Fui%2Fchalkify%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3890976937e1e6d7c5e892ebbef4a8676d4baec/src%2Ftest%2Fui%2Fchalkify%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Fclosure.rs?ref=c3890976937e1e6d7c5e892ebbef4a8676d4baec", "patch": "@@ -1,5 +1,3 @@\n-// known-bug: unknown\n-// FIXME(chalk): Chalk needs support for the Tuple trait\n // compile-flags: -Z chalk\n \n fn main() -> () {\n@@ -26,7 +24,7 @@ fn main() -> () {\n     let mut c = b;\n \n     c();\n-    b(); // FIXME: reenable when this is fixed ~ ERROR\n+    b(); //~ ERROR\n \n     // FIXME(chalk): this doesn't quite work\n     /*"}, {"sha": "a33c0ba0d37c900e57f51169f0015b668bbd1b40", "filename": "src/test/ui/chalkify/closure.stderr", "status": "modified", "additions": 15, "deletions": 73, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/c3890976937e1e6d7c5e892ebbef4a8676d4baec/src%2Ftest%2Fui%2Fchalkify%2Fclosure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c3890976937e1e6d7c5e892ebbef4a8676d4baec/src%2Ftest%2Fui%2Fchalkify%2Fclosure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Fclosure.stderr?ref=c3890976937e1e6d7c5e892ebbef4a8676d4baec", "patch": "@@ -1,80 +1,22 @@\n-error[E0277]: `()` is not a tuple\n-  --> $DIR/closure.rs:7:5\n-   |\n-LL |     t();\n-   |     ^^^ the trait `Tuple` is not implemented for `()`\n-   |\n-help: consider introducing a `where` clause, but there might be an alternative better way to express this requirement\n-   |\n-LL | fn main() -> () where (): Tuple {\n-   |                 +++++++++++++++\n-\n-error[E0277]: `()` is not a tuple\n-  --> $DIR/closure.rs:13:5\n-   |\n-LL |     b();\n-   |     ^^^ the trait `Tuple` is not implemented for `()`\n-   |\n-help: consider introducing a `where` clause, but there might be an alternative better way to express this requirement\n-   |\n-LL | fn main() -> () where (): Tuple {\n-   |                 +++++++++++++++\n-\n-error[E0277]: `()` is not a tuple\n-  --> $DIR/closure.rs:17:5\n-   |\n-LL |     c();\n-   |     ^^^ the trait `Tuple` is not implemented for `()`\n-   |\n-help: consider introducing a `where` clause, but there might be an alternative better way to express this requirement\n-   |\n-LL | fn main() -> () where (): Tuple {\n-   |                 +++++++++++++++\n-\n-error[E0277]: `()` is not a tuple\n-  --> $DIR/closure.rs:18:5\n+error[E0382]: borrow of moved value: `b`\n+  --> $DIR/closure.rs:27:5\n    |\n+LL |     let mut c = b;\n+   |                 - value moved here\n+...\n LL |     b();\n-   |     ^^^ the trait `Tuple` is not implemented for `()`\n-   |\n-help: consider introducing a `where` clause, but there might be an alternative better way to express this requirement\n-   |\n-LL | fn main() -> () where (): Tuple {\n-   |                 +++++++++++++++\n-\n-error[E0277]: `()` is not a tuple\n-  --> $DIR/closure.rs:24:5\n-   |\n-LL |     b();\n-   |     ^^^ the trait `Tuple` is not implemented for `()`\n-   |\n-help: consider introducing a `where` clause, but there might be an alternative better way to express this requirement\n-   |\n-LL | fn main() -> () where (): Tuple {\n-   |                 +++++++++++++++\n-\n-error[E0277]: `()` is not a tuple\n-  --> $DIR/closure.rs:28:5\n-   |\n-LL |     c();\n-   |     ^^^ the trait `Tuple` is not implemented for `()`\n-   |\n-help: consider introducing a `where` clause, but there might be an alternative better way to express this requirement\n-   |\n-LL | fn main() -> () where (): Tuple {\n-   |                 +++++++++++++++\n-\n-error[E0277]: `()` is not a tuple\n-  --> $DIR/closure.rs:29:5\n+   |     ^ value borrowed here after move\n    |\n-LL |     b(); // FIXME: reenable when this is fixed ~ ERROR\n-   |     ^^^ the trait `Tuple` is not implemented for `()`\n+note: closure cannot be moved more than once as it is not `Copy` due to moving the variable `a` out of its environment\n+  --> $DIR/closure.rs:20:9\n    |\n-help: consider introducing a `where` clause, but there might be an alternative better way to express this requirement\n+LL |         a = 1;\n+   |         ^\n+help: consider mutably borrowing `b`\n    |\n-LL | fn main() -> () where (): Tuple {\n-   |                 +++++++++++++++\n+LL |     let mut c = &mut b;\n+   |                 ++++\n \n-error: aborting due to 7 previous errors\n+error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0277`.\n+For more information about this error, try `rustc --explain E0382`."}, {"sha": "d56abc42bf540c048951ac55830e97e3c50bf309", "filename": "src/test/ui/chalkify/trait-objects.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c3890976937e1e6d7c5e892ebbef4a8676d4baec/src%2Ftest%2Fui%2Fchalkify%2Ftrait-objects.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3890976937e1e6d7c5e892ebbef4a8676d4baec/src%2Ftest%2Fui%2Fchalkify%2Ftrait-objects.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Ftrait-objects.rs?ref=c3890976937e1e6d7c5e892ebbef4a8676d4baec", "patch": "@@ -1,5 +1,4 @@\n-// known-bug: unknown\n-// FIXME(chalk): Chalk needs support for the Tuple trait\n+// check-pass\n // compile-flags: -Z chalk\n \n use std::fmt::Display;"}, {"sha": "422d39742eb552c3be5bb82da23b193fc778a877", "filename": "src/test/ui/chalkify/trait-objects.stderr", "status": "removed", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/dc869fcfb22bfabae187578dcd10ba68348fdc93/src%2Ftest%2Fui%2Fchalkify%2Ftrait-objects.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc869fcfb22bfabae187578dcd10ba68348fdc93/src%2Ftest%2Fui%2Fchalkify%2Ftrait-objects.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Ftrait-objects.stderr?ref=dc869fcfb22bfabae187578dcd10ba68348fdc93", "patch": "@@ -1,32 +0,0 @@\n-error: the type `&dyn Fn(i32) -> _` is not well-formed (chalk)\n-  --> $DIR/trait-objects.rs:11:12\n-   |\n-LL |     let f: &dyn Fn(i32) -> _ = &|x| x + x;\n-   |            ^^^^^^^^^^^^^^^^^\n-\n-error[E0277]: `(i32,)` is not a tuple\n-  --> $DIR/trait-objects.rs:12:5\n-   |\n-LL |     f(2);\n-   |     ^^^^ the trait `Tuple` is not implemented for `(i32,)`\n-   |\n-help: consider introducing a `where` clause, but there might be an alternative better way to express this requirement\n-   |\n-LL | fn main() where (i32,): Tuple {\n-   |           +++++++++++++++++++\n-\n-error[E0277]: expected a `Fn<(i32,)>` closure, found `dyn Fn(i32) -> i32`\n-  --> $DIR/trait-objects.rs:12:5\n-   |\n-LL |     f(2);\n-   |     ^^^^ expected an `Fn<(i32,)>` closure, found `dyn Fn(i32) -> i32`\n-   |\n-   = help: the trait `Fn<(i32,)>` is not implemented for `dyn Fn(i32) -> i32`\n-help: consider introducing a `where` clause, but there might be an alternative better way to express this requirement\n-   |\n-LL | fn main() where dyn Fn(i32) -> i32: Fn<(i32,)> {\n-   |           ++++++++++++++++++++++++++++++++++++\n-\n-error: aborting due to 3 previous errors\n-\n-For more information about this error, try `rustc --explain E0277`."}]}