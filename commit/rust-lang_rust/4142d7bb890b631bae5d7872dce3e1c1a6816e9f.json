{"sha": "4142d7bb890b631bae5d7872dce3e1c1a6816e9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxNDJkN2JiODkwYjYzMWJhZTVkNzg3MmRjZTNlMWMxYTY4MTZlOWY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-06-01T06:48:19Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-06-01T06:48:19Z"}, "message": "Use callsite's span for macro calls on suggestion\n\nWhen suggesting an appropriate mutability for a macro call, use the call\nspan instead of the expanded macro's span.", "tree": {"sha": "f72b559e7103bc886e7a036bb4a1806f2611aaf8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f72b559e7103bc886e7a036bb4a1806f2611aaf8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4142d7bb890b631bae5d7872dce3e1c1a6816e9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4142d7bb890b631bae5d7872dce3e1c1a6816e9f", "html_url": "https://github.com/rust-lang/rust/commit/4142d7bb890b631bae5d7872dce3e1c1a6816e9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4142d7bb890b631bae5d7872dce3e1c1a6816e9f/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ed2edaafe82fb8d44e81e00ca3e4f7659855ba2", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ed2edaafe82fb8d44e81e00ca3e4f7659855ba2", "html_url": "https://github.com/rust-lang/rust/commit/4ed2edaafe82fb8d44e81e00ca3e4f7659855ba2"}], "stats": {"total": 43, "additions": 36, "deletions": 7}, "files": [{"sha": "f820ea4c5e17827e9da683548844bd845d8009ec", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4142d7bb890b631bae5d7872dce3e1c1a6816e9f/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4142d7bb890b631bae5d7872dce3e1c1a6816e9f/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=4142d7bb890b631bae5d7872dce3e1c1a6816e9f", "patch": "@@ -705,11 +705,9 @@ impl EmitterWriter {\n                 if *sp == DUMMY_SP {\n                     continue;\n                 }\n-                if cm.span_to_filename(sp.clone()).contains(\"macros>\") {\n-                    let v = sp.macro_backtrace();\n-                    if let Some(use_site) = v.last() {\n-                        before_after.push((sp.clone(), use_site.call_site.clone()));\n-                    }\n+                let call_sp = cm.call_span_if_macro(*sp);\n+                if call_sp != *sp {\n+                    before_after.push((sp.clone(), call_sp));\n                 }\n                 for trace in sp.macro_backtrace().iter().rev() {\n                     // Only show macro locations that are local"}, {"sha": "8d5e9e776ed23ec05d8e7e6f77b27dcc7b9a6961", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4142d7bb890b631bae5d7872dce3e1c1a6816e9f/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4142d7bb890b631bae5d7872dce3e1c1a6816e9f/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=4142d7bb890b631bae5d7872dce3e1c1a6816e9f", "patch": "@@ -102,6 +102,7 @@ pub trait CodeMapper {\n     fn span_to_string(&self, sp: Span) -> String;\n     fn span_to_filename(&self, sp: Span) -> FileName;\n     fn merge_spans(&self, sp_lhs: Span, sp_rhs: Span) -> Option<Span>;\n+    fn call_span_if_macro(&self, sp: Span) -> Span;\n }\n \n impl CodeSuggestion {"}, {"sha": "ff541d1071dce393ddc72b566feab57b232560cc", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4142d7bb890b631bae5d7872dce3e1c1a6816e9f/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4142d7bb890b631bae5d7872dce3e1c1a6816e9f/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=4142d7bb890b631bae5d7872dce3e1c1a6816e9f", "patch": "@@ -18,7 +18,7 @@ use syntax_pos::{self, Span};\n use rustc::hir;\n use rustc::hir::def::Def;\n use rustc::ty::{self, Ty, AssociatedItem};\n-use errors::DiagnosticBuilder;\n+use errors::{DiagnosticBuilder, CodeMapper};\n \n use super::method::probe;\n \n@@ -187,7 +187,9 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                                        checked_ty),\n                 };\n                 if self.can_coerce(ref_ty, expected) {\n-                    if let Ok(src) = self.tcx.sess.codemap().span_to_snippet(expr.span) {\n+                    // Use the callsite's span if this is a macro call. #41858\n+                    let sp = self.sess().codemap().call_span_if_macro(expr.span);\n+                    if let Ok(src) = self.tcx.sess.codemap().span_to_snippet(sp) {\n                         return Some(format!(\"try with `{}{}`\",\n                                             match mutability.mutbl {\n                                                 hir::Mutability::MutMutable => \"&mut \","}, {"sha": "830a457df748eeefaaf19b28f9623317d3798511", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4142d7bb890b631bae5d7872dce3e1c1a6816e9f/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4142d7bb890b631bae5d7872dce3e1c1a6816e9f/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=4142d7bb890b631bae5d7872dce3e1c1a6816e9f", "patch": "@@ -563,6 +563,15 @@ impl CodeMapper for CodeMap {\n     fn merge_spans(&self, sp_lhs: Span, sp_rhs: Span) -> Option<Span> {\n         self.merge_spans(sp_lhs, sp_rhs)\n     }\n+    fn call_span_if_macro(&self, sp: Span) -> Span {\n+        if self.span_to_filename(sp.clone()).contains(\"macros>\") {\n+            let v = sp.macro_backtrace();\n+            if let Some(use_site) = v.last() {\n+                return use_site.call_site;\n+            }\n+        }\n+        sp\n+    }\n }\n \n #[derive(Clone)]"}, {"sha": "32d80069f0087eb23836c5858a6b76a598fb3a56", "filename": "src/test/ui/span/coerce-suggestions.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4142d7bb890b631bae5d7872dce3e1c1a6816e9f/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4142d7bb890b631bae5d7872dce3e1c1a6816e9f/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.rs?ref=4142d7bb890b631bae5d7872dce3e1c1a6816e9f", "patch": "@@ -43,4 +43,12 @@ fn main() {\n     //~| NOTE cyclic type of infinite size\n     //~| NOTE expected type `_`\n     //~| NOTE found type `Box<_>`\n+\n+    let s = &mut String::new();\n+    s = format!(\"foo\");\n+    //~^ ERROR E0308\n+    //~| NOTE expected mutable reference, found struct `std::string::String`\n+    //~| NOTE expected type `&mut std::string::String`\n+    //~| HELP try with `&mut format!(\"foo\")`\n+    //~| NOTE this error originates in a macro outside of the current crate\n }"}, {"sha": "e3bc64a2cfd416054826d1ab120a790f0f24758f", "filename": "src/test/ui/span/coerce-suggestions.stderr", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4142d7bb890b631bae5d7872dce3e1c1a6816e9f/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4142d7bb890b631bae5d7872dce3e1c1a6816e9f/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.stderr?ref=4142d7bb890b631bae5d7872dce3e1c1a6816e9f", "patch": "@@ -47,5 +47,16 @@ error[E0308]: mismatched types\n    = note: expected type `_`\n               found type `std::boxed::Box<_>`\n \n+error[E0308]: mismatched types\n+  --> $DIR/coerce-suggestions.rs:48:9\n+   |\n+48 |     s = format!(\"foo\");\n+   |         ^^^^^^^^^^^^^^ expected mutable reference, found struct `std::string::String`\n+   |\n+   = note: expected type `&mut std::string::String`\n+              found type `std::string::String`\n+   = help: try with `&mut format!(\"foo\")`\n+   = note: this error originates in a macro outside of the current crate\n+\n error: aborting due to previous error(s)\n "}]}