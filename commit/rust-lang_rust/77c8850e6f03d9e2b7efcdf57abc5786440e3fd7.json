{"sha": "77c8850e6f03d9e2b7efcdf57abc5786440e3fd7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3Yzg4NTBlNmYwM2Q5ZTJiN2VmY2RmNTdhYmM1Nzg2NDQwZTNmZDc=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2016-02-06T03:37:21Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2016-02-08T12:49:06Z"}, "message": "regression tests for issue #30438.\n\nFix #30438.", "tree": {"sha": "2eb09583d36143f05cf2d53bd4eae466176574ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2eb09583d36143f05cf2d53bd4eae466176574ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77c8850e6f03d9e2b7efcdf57abc5786440e3fd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77c8850e6f03d9e2b7efcdf57abc5786440e3fd7", "html_url": "https://github.com/rust-lang/rust/commit/77c8850e6f03d9e2b7efcdf57abc5786440e3fd7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77c8850e6f03d9e2b7efcdf57abc5786440e3fd7/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8801bdb6b09569b187bb4c83f6121533afc69820", "url": "https://api.github.com/repos/rust-lang/rust/commits/8801bdb6b09569b187bb4c83f6121533afc69820", "html_url": "https://github.com/rust-lang/rust/commit/8801bdb6b09569b187bb4c83f6121533afc69820"}], "stats": {"total": 97, "additions": 97, "deletions": 0}, "files": [{"sha": "441815de81d30b54f04ee649b97ca62b1fa3636f", "filename": "src/test/compile-fail/issue-30438-a.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/77c8850e6f03d9e2b7efcdf57abc5786440e3fd7/src%2Ftest%2Fcompile-fail%2Fissue-30438-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77c8850e6f03d9e2b7efcdf57abc5786440e3fd7/src%2Ftest%2Fcompile-fail%2Fissue-30438-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-30438-a.rs?ref=77c8850e6f03d9e2b7efcdf57abc5786440e3fd7", "patch": "@@ -0,0 +1,33 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Original regression test for Issue #30438.\n+\n+use std::ops::Index;\n+\n+struct Test<'a> {\n+    s: &'a String\n+}\n+\n+impl <'a> Index<usize> for Test<'a> {\n+    type Output = Test<'a>;\n+    fn index(&self, _: usize) -> &Self::Output {\n+        return &Test { s: &self.s};\n+        //~^ ERROR: borrowed value does not live long enough\n+    }\n+}\n+\n+fn main() {\n+    let s = \"Hello World\".to_string();\n+    let test = Test{s: &s};\n+    let r = &test[0];\n+    println!(\"{}\", test.s); // OK since test is valid\n+    println!(\"{}\", r.s); // Segfault since value pointed by r has already been dropped\n+}"}, {"sha": "981b196c4aeb2e20acc03c4e4a439aab8759a6cf", "filename": "src/test/compile-fail/issue-30438-b.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/77c8850e6f03d9e2b7efcdf57abc5786440e3fd7/src%2Ftest%2Fcompile-fail%2Fissue-30438-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77c8850e6f03d9e2b7efcdf57abc5786440e3fd7/src%2Ftest%2Fcompile-fail%2Fissue-30438-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-30438-b.rs?ref=77c8850e6f03d9e2b7efcdf57abc5786440e3fd7", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Modified regression test for Issue #30438 that exposed an\n+// independent issue (see discussion on ticket).\n+\n+use std::ops::Index;\n+\n+struct Test<'a> {\n+    s: &'a String\n+}\n+\n+impl <'a> Index<usize> for Test<'a> {\n+    type Output = Test<'a>;\n+    fn index(&self, _: usize) -> &Self::Output {\n+        &Test { s: &self.s}\n+        //~^ ERROR: borrowed value does not live long enough\n+    }\n+}\n+\n+fn main() {\n+    let s = \"Hello World\".to_string();\n+    let test = Test{s: &s};\n+    let r = &test[0];\n+    println!(\"{}\", test.s); // OK since test is valid\n+    println!(\"{}\", r.s); // Segfault since value pointed by r has already been dropped\n+}"}, {"sha": "06d391af559cce42836f46770ff8e893ad69e1f9", "filename": "src/test/compile-fail/issue-30438-c.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/77c8850e6f03d9e2b7efcdf57abc5786440e3fd7/src%2Ftest%2Fcompile-fail%2Fissue-30438-c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77c8850e6f03d9e2b7efcdf57abc5786440e3fd7/src%2Ftest%2Fcompile-fail%2Fissue-30438-c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-30438-c.rs?ref=77c8850e6f03d9e2b7efcdf57abc5786440e3fd7", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Simplfied regression test for #30438, inspired by arielb1.\n+\n+trait Trait { type Out; }\n+\n+struct Test<'a> { s: &'a str }\n+\n+fn silly<'y, 'z>(_s: &'y Test<'z>) -> &'y <Test<'z> as Trait>::Out where 'z: 'static {\n+    let x = Test { s: \"this cannot last\" };\n+    &x\n+    //~^ ERROR: `x` does not live long enough\n+}\n+\n+impl<'b> Trait for Test<'b> { type Out = Test<'b>; }\n+\n+fn main() {\n+    let orig = Test { s: \"Hello World\" };\n+    let r = silly(&orig);\n+    println!(\"{}\", orig.s); // OK since `orig` is valid\n+    println!(\"{}\", r.s); // Segfault (method does not return a sane value)\n+}"}]}