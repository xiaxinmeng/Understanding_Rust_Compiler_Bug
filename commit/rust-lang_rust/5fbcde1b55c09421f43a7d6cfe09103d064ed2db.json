{"sha": "5fbcde1b55c09421f43a7d6cfe09103d064ed2db", "node_id": "C_kwDOAAsO6NoAKDVmYmNkZTFiNTVjMDk0MjFmNDNhN2Q2Y2ZlMDkxMDNkMDY0ZWQyZGI", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-08-12T10:58:14Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-08-12T11:04:29Z"}, "message": "fill-in tracking issue for `feature(iter_array_chunks)`", "tree": {"sha": "e749e9807fbf36ba0c85d6fe01ddb2ed6925b55d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e749e9807fbf36ba0c85d6fe01ddb2ed6925b55d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fbcde1b55c09421f43a7d6cfe09103d064ed2db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fbcde1b55c09421f43a7d6cfe09103d064ed2db", "html_url": "https://github.com/rust-lang/rust/commit/5fbcde1b55c09421f43a7d6cfe09103d064ed2db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fbcde1b55c09421f43a7d6cfe09103d064ed2db/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb6b729545af68fb39398eea6073f740cb12da50", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb6b729545af68fb39398eea6073f740cb12da50", "html_url": "https://github.com/rust-lang/rust/commit/eb6b729545af68fb39398eea6073f740cb12da50"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "9b479a9f8adfb9d478610e7ca03cfa7b045d10c5", "filename": "library/core/src/iter/adapters/array_chunks.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5fbcde1b55c09421f43a7d6cfe09103d064ed2db/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Farray_chunks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fbcde1b55c09421f43a7d6cfe09103d064ed2db/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Farray_chunks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Farray_chunks.rs?ref=5fbcde1b55c09421f43a7d6cfe09103d064ed2db", "patch": "@@ -11,7 +11,7 @@ use crate::ops::{ControlFlow, NeverShortCircuit, Try};\n /// method on [`Iterator`]. See its documentation for more.\n #[derive(Debug, Clone)]\n #[must_use = \"iterators are lazy and do nothing unless consumed\"]\n-#[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue = \"none\")]\n+#[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue = \"100450\")]\n pub struct ArrayChunks<I: Iterator, const N: usize> {\n     iter: I,\n     remainder: Option<array::IntoIter<I::Item, N>>,\n@@ -30,14 +30,14 @@ where\n     /// Returns an iterator over the remaining elements of the original iterator\n     /// that are not going to be returned by this iterator. The returned\n     /// iterator will yield at most `N-1` elements.\n-    #[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue = \"none\")]\n+    #[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue = \"100450\")]\n     #[inline]\n     pub fn into_remainder(self) -> Option<array::IntoIter<I::Item, N>> {\n         self.remainder\n     }\n }\n \n-#[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue = \"none\")]\n+#[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue = \"100450\")]\n impl<I, const N: usize> Iterator for ArrayChunks<I, N>\n where\n     I: Iterator,\n@@ -91,7 +91,7 @@ where\n     }\n }\n \n-#[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue = \"none\")]\n+#[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue = \"100450\")]\n impl<I, const N: usize> DoubleEndedIterator for ArrayChunks<I, N>\n where\n     I: DoubleEndedIterator + ExactSizeIterator,\n@@ -162,10 +162,10 @@ where\n     }\n }\n \n-#[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue = \"none\")]\n+#[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue = \"100450\")]\n impl<I, const N: usize> FusedIterator for ArrayChunks<I, N> where I: FusedIterator {}\n \n-#[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue = \"none\")]\n+#[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue = \"100450\")]\n impl<I, const N: usize> ExactSizeIterator for ArrayChunks<I, N>\n where\n     I: ExactSizeIterator,"}, {"sha": "bf4fabad32a373e333c4f06443a3df6f0d5f0c1c", "filename": "library/core/src/iter/adapters/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5fbcde1b55c09421f43a7d6cfe09103d064ed2db/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fbcde1b55c09421f43a7d6cfe09103d064ed2db/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs?ref=5fbcde1b55c09421f43a7d6cfe09103d064ed2db", "patch": "@@ -33,7 +33,7 @@ pub use self::{\n     scan::Scan, skip::Skip, skip_while::SkipWhile, take::Take, take_while::TakeWhile, zip::Zip,\n };\n \n-#[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue = \"none\")]\n+#[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue = \"100450\")]\n pub use self::array_chunks::ArrayChunks;\n \n #[unstable(feature = \"std_internals\", issue = \"none\")]"}, {"sha": "9514466bd0c050d9969a64a6d161fdd9310fd498", "filename": "library/core/src/iter/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5fbcde1b55c09421f43a7d6cfe09103d064ed2db/library%2Fcore%2Fsrc%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fbcde1b55c09421f43a7d6cfe09103d064ed2db/library%2Fcore%2Fsrc%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fmod.rs?ref=5fbcde1b55c09421f43a7d6cfe09103d064ed2db", "patch": "@@ -398,7 +398,7 @@ pub use self::traits::{\n \n #[stable(feature = \"iter_zip\", since = \"1.59.0\")]\n pub use self::adapters::zip;\n-#[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue = \"none\")]\n+#[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue = \"100450\")]\n pub use self::adapters::ArrayChunks;\n #[unstable(feature = \"std_internals\", issue = \"none\")]\n pub use self::adapters::ByRefSized;"}, {"sha": "b2d08f4b0f67bf456692e0c34fdf954ef357c1c0", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5fbcde1b55c09421f43a7d6cfe09103d064ed2db/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fbcde1b55c09421f43a7d6cfe09103d064ed2db/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=5fbcde1b55c09421f43a7d6cfe09103d064ed2db", "patch": "@@ -3351,7 +3351,7 @@ pub trait Iterator {\n     /// }\n     /// ```\n     #[track_caller]\n-    #[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue = \"none\")]\n+    #[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue = \"100450\")]\n     fn array_chunks<const N: usize>(self) -> ArrayChunks<Self, N>\n     where\n         Self: Sized,"}]}