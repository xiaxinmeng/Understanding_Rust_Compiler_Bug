{"sha": "e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "node_id": "C_kwDOAAsO6NoAKGU1Y2U2ZDE4ZGY4ODNmNTkzZTcyZjc5NThiZWJkYzNlYmNkYmU4NWU", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-09-26T11:00:29Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-09-27T08:37:23Z"}, "message": "rustc_typeck to rustc_hir_analysis", "tree": {"sha": "acd805104d4bcb77e428d43d3b96e5b339b65a56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/acd805104d4bcb77e428d43d3b96e5b339b65a56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "html_url": "https://github.com/rust-lang/rust/commit/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06568fd6c707b878ae69ede1532b82c7ba47e07e", "url": "https://api.github.com/repos/rust-lang/rust/commits/06568fd6c707b878ae69ede1532b82c7ba47e07e", "html_url": "https://github.com/rust-lang/rust/commit/06568fd6c707b878ae69ede1532b82c7ba47e07e"}], "stats": {"total": 62, "additions": 31, "deletions": 31}, "files": [{"sha": "3905a6c2e211998f0cfb8a2fdd33948c03402d41", "filename": "clippy_lints/src/default_union_representation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fdefault_union_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fdefault_union_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault_union_representation.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -4,7 +4,7 @@ use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty::layout::LayoutOf;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::sym;\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n declare_clippy_lint! {\n     /// ### What it does"}, {"sha": "8ccc969646ec5f4aa2b29d1459664c0b21ca34af", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -10,7 +10,7 @@ use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::kw;\n use rustc_target::spec::abi::Abi;\n-use rustc_typeck::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n+use rustc_hir_analysis::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n \n #[derive(Copy, Clone)]\n pub struct BoxedLocal {\n@@ -177,7 +177,7 @@ impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n         }\n     }\n \n-    fn fake_read(&mut self, _: &rustc_typeck::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n+    fn fake_read(&mut self, _: &rustc_hir_analysis::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n }\n \n impl<'a, 'tcx> EscapeDelegate<'a, 'tcx> {"}, {"sha": "a920c3bba2aedaee0c9de062ba9cb5041f6d1fd3", "filename": "clippy_lints/src/implicit_hasher.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fimplicit_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fimplicit_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fimplicit_hasher.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -12,7 +12,7 @@ use rustc_middle::ty::{Ty, TypeckResults};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::sym;\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n use if_chain::if_chain;\n "}, {"sha": "d6eb53ae29b5afdbee434cb6042f59aedce9f8cd", "filename": "clippy_lints/src/large_const_arrays.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Flarge_const_arrays.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Flarge_const_arrays.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_const_arrays.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -7,7 +7,7 @@ use rustc_middle::ty::layout::LayoutOf;\n use rustc_middle::ty::{self, ConstKind};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::{BytePos, Pos, Span};\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n declare_clippy_lint! {\n     /// ### What it does"}, {"sha": "c3db194c4ad85cfbfdb6b39b0a4fd71707a37853", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -43,7 +43,7 @@ extern crate rustc_session;\n extern crate rustc_span;\n extern crate rustc_target;\n extern crate rustc_trait_selection;\n-extern crate rustc_typeck;\n+extern crate rustc_hir_analysis;\n \n #[macro_use]\n extern crate clippy_utils;"}, {"sha": "6d585c2e45de6ba52d213a8330ef61dbbe4f2d2b", "filename": "clippy_lints/src/loops/mut_range_bound.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Floops%2Fmut_range_bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Floops%2Fmut_range_bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmut_range_bound.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -8,7 +8,7 @@ use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::LateContext;\n use rustc_middle::{mir::FakeReadCause, ty};\n use rustc_span::source_map::Span;\n-use rustc_typeck::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n+use rustc_hir_analysis::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n \n pub(super) fn check(cx: &LateContext<'_>, arg: &Expr<'_>, body: &Expr<'_>) {\n     if_chain! {\n@@ -114,7 +114,7 @@ impl<'tcx> Delegate<'tcx> for MutatePairDelegate<'_, 'tcx> {\n         }\n     }\n \n-    fn fake_read(&mut self, _: &rustc_typeck::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n+    fn fake_read(&mut self, _: &rustc_hir_analysis::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n }\n \n impl MutatePairDelegate<'_, '_> {"}, {"sha": "f1f58db80b306e52537cde492ce943ba131a02f9", "filename": "clippy_lints/src/loops/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Floops%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Floops%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Futils.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -10,7 +10,7 @@ use rustc_middle::hir::nested_filter;\n use rustc_middle::ty::{self, Ty};\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::{sym, Symbol};\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n use std::iter::Iterator;\n \n #[derive(Debug, PartialEq, Eq)]"}, {"sha": "58ea43e69d9b1fa2f6ddbd3674d673b4735e5a85", "filename": "clippy_lints/src/matches/needless_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fmatches%2Fneedless_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fmatches%2Fneedless_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Fneedless_match.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -11,7 +11,7 @@ use rustc_hir::LangItem::OptionNone;\n use rustc_hir::{Arm, BindingAnnotation, ByRef, Expr, ExprKind, FnRetTy, Guard, Node, Pat, PatKind, Path, QPath};\n use rustc_lint::LateContext;\n use rustc_span::sym;\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n pub(crate) fn check_match(cx: &LateContext<'_>, ex: &Expr<'_>, arms: &[Arm<'_>], expr: &Expr<'_>) {\n     if arms.len() > 1 && expr_ty_matches_p_ty(cx, ex, expr) && check_all_arms(cx, ex, arms) {"}, {"sha": "428a354ec6b1ea4f2651423d299310d63ed7dd57", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -115,7 +115,7 @@ use rustc_middle::ty::{self, TraitRef, Ty};\n use rustc_semver::RustcVersion;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::{sym, Span};\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n declare_clippy_lint! {\n     /// ### What it does"}, {"sha": "559f32a563ed90f0b77355f686d2c636a5db86ab", "filename": "clippy_lints/src/methods/unnecessary_to_owned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -18,7 +18,7 @@ use rustc_middle::ty::{self, ParamTy, PredicateKind, ProjectionPredicate, TraitP\n use rustc_semver::RustcVersion;\n use rustc_span::{sym, Symbol};\n use rustc_trait_selection::traits::{query::evaluate_obligation::InferCtxtExt as _, Obligation, ObligationCause};\n-use rustc_typeck::check::{FnCtxt, Inherited};\n+use rustc_hir_analysis::check::{FnCtxt, Inherited};\n use std::cmp::max;\n \n use super::UNNECESSARY_TO_OWNED;"}, {"sha": "00376f0d79022396d63edfa9890ab913da680474", "filename": "clippy_lints/src/missing_const_for_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -13,7 +13,7 @@ use rustc_middle::lint::in_external_macro;\n use rustc_semver::RustcVersion;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::Span;\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n declare_clippy_lint! {\n     /// ### What it does"}, {"sha": "4f46872439c3c5d867d8e98787bd31849c881b45", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -22,7 +22,7 @@ use rustc_span::{sym, Span};\n use rustc_target::spec::abi::Abi;\n use rustc_trait_selection::traits;\n use rustc_trait_selection::traits::misc::can_type_implement_copy;\n-use rustc_typeck::expr_use_visitor as euv;\n+use rustc_hir_analysis::expr_use_visitor as euv;\n use std::borrow::Cow;\n \n declare_clippy_lint! {\n@@ -341,5 +341,5 @@ impl<'tcx> euv::Delegate<'tcx> for MovedVariablesCtxt {\n \n     fn mutate(&mut self, _: &euv::PlaceWithHirId<'tcx>, _: HirId) {}\n \n-    fn fake_read(&mut self, _: &rustc_typeck::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n+    fn fake_read(&mut self, _: &rustc_hir_analysis::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n }"}, {"sha": "48ff737dae7bc764e354b8019bceb3cba97d26c8", "filename": "clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -20,7 +20,7 @@ use rustc_middle::ty::adjustment::Adjust;\n use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::{sym, InnerSpan, Span, DUMMY_SP};\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n // FIXME: this is a correctness problem but there's no suitable\n // warn-by-default category."}, {"sha": "f134c6c4cdba5c884b918e5446f0b532579a1e4f", "filename": "clippy_lints/src/operators/assign_op_pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Foperators%2Fassign_op_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Foperators%2Fassign_op_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foperators%2Fassign_op_pattern.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -11,7 +11,7 @@ use rustc_lint::LateContext;\n use rustc_middle::mir::FakeReadCause;\n use rustc_middle::ty::BorrowKind;\n use rustc_trait_selection::infer::TyCtxtInferExt;\n-use rustc_typeck::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n+use rustc_hir_analysis::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n \n use super::ASSIGN_OP_PATTERN;\n "}, {"sha": "fdf847bf44593514cfc701881d56bcc2bfecdd4f", "filename": "clippy_lints/src/transmute/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Ftransmute%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Ftransmute%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Futils.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -2,7 +2,7 @@ use rustc_hir::Expr;\n use rustc_lint::LateContext;\n use rustc_middle::ty::{cast::CastKind, Ty};\n use rustc_span::DUMMY_SP;\n-use rustc_typeck::check::{cast::{self, CastCheckResult}, FnCtxt, Inherited};\n+use rustc_hir_analysis::check::{cast::{self, CastCheckResult}, FnCtxt, Inherited};\n \n // check if the component types of the transmuted collection and the result have different ABI,\n // size or alignment"}, {"sha": "d81c5c83845d852f759d6ef551eb9f6c9551f22a", "filename": "clippy_lints/src/types/redundant_allocation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Ftypes%2Fredundant_allocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Ftypes%2Fredundant_allocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Fredundant_allocation.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -5,7 +5,7 @@ use rustc_errors::Applicability;\n use rustc_hir::{self as hir, def_id::DefId, QPath, TyKind};\n use rustc_lint::LateContext;\n use rustc_span::symbol::sym;\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n use super::{utils, REDUNDANT_ALLOCATION};\n "}, {"sha": "236f9955722d02726eb04e82050c0d550772deda", "filename": "clippy_lints/src/types/vec_box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -8,7 +8,7 @@ use rustc_lint::LateContext;\n use rustc_middle::ty::layout::LayoutOf;\n use rustc_middle::ty::TypeVisitable;\n use rustc_span::symbol::sym;\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n use super::VEC_BOX;\n "}, {"sha": "6a767967ef4093068e2b2f12d39590676765cd51", "filename": "clippy_lints/src/use_self.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuse_self.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -16,7 +16,7 @@ use rustc_lint::{LateContext, LateLintPass};\n use rustc_semver::RustcVersion;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::Span;\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n declare_clippy_lint! {\n     /// ### What it does"}, {"sha": "78c036186f506d7cc7a5fbb6d8415564f22a64b4", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -32,7 +32,7 @@ use rustc_session::{declare_lint_pass, declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::Symbol;\n use rustc_span::{sym, BytePos, Span};\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n use std::borrow::{Borrow, Cow};\n "}, {"sha": "703ba2ef4b054d106ec3d6810e8964659cbd0d47", "filename": "clippy_lints/src/zero_sized_map_values.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fzero_sized_map_values.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_lints%2Fsrc%2Fzero_sized_map_values.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fzero_sized_map_values.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -7,7 +7,7 @@ use rustc_middle::ty::layout::LayoutOf as _;\n use rustc_middle::ty::{Adt, Ty, TypeVisitable};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::sym;\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n declare_clippy_lint! {\n     /// ### What it does"}, {"sha": "627d6b51944a6d5026576321558bb157a1c5029b", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -32,7 +32,7 @@ extern crate rustc_session;\n extern crate rustc_span;\n extern crate rustc_target;\n extern crate rustc_trait_selection;\n-extern crate rustc_typeck;\n+extern crate rustc_hir_analysis;\n \n #[macro_use]\n pub mod sym_helper;\n@@ -1386,7 +1386,7 @@ pub fn is_integer_literal(expr: &Expr<'_>, value: u128) -> bool {\n /// Examples of coercions can be found in the Nomicon at\n /// <https://doc.rust-lang.org/nomicon/coercions.html>.\n ///\n-/// See `rustc_middle::ty::adjustment::Adjustment` and `rustc_typeck::check::coercion` for more\n+/// See `rustc_middle::ty::adjustment::Adjustment` and `rustc_hir_analysis::check::coercion` for more\n /// information on adjustments and coercions.\n pub fn is_adjusted(cx: &LateContext<'_>, e: &Expr<'_>) -> bool {\n     cx.typeck_results().adjustments().get(e.hir_id).is_some()"}, {"sha": "e53c40e95760be06f4a4ca0193bfb288624856ba", "filename": "clippy_utils/src/sugg.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_utils%2Fsrc%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_utils%2Fsrc%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fsugg.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -16,7 +16,7 @@ use rustc_middle::hir::place::ProjectionKind;\n use rustc_middle::mir::{FakeReadCause, Mutability};\n use rustc_middle::ty;\n use rustc_span::source_map::{BytePos, CharPos, Pos, Span, SyntaxContext};\n-use rustc_typeck::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n+use rustc_hir_analysis::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n use std::borrow::Cow;\n use std::fmt::{Display, Write as _};\n use std::ops::{Add, Neg, Not, Sub};\n@@ -1056,7 +1056,7 @@ impl<'tcx> Delegate<'tcx> for DerefDelegate<'_, 'tcx> {\n \n     fn mutate(&mut self, _: &PlaceWithHirId<'tcx>, _: HirId) {}\n \n-    fn fake_read(&mut self, _: &rustc_typeck::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n+    fn fake_read(&mut self, _: &rustc_hir_analysis::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n }\n \n #[cfg(test)]"}, {"sha": "76bfec75726dfc7fcf942de82491e56e6e0d411b", "filename": "clippy_utils/src/usage.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_utils%2Fsrc%2Fusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/clippy_utils%2Fsrc%2Fusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fusage.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -9,7 +9,7 @@ use rustc_lint::LateContext;\n use rustc_middle::hir::nested_filter;\n use rustc_middle::mir::FakeReadCause;\n use rustc_middle::ty;\n-use rustc_typeck::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n+use rustc_hir_analysis::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n \n /// Returns a set of mutated local variable IDs, or `None` if mutations could not be determined.\n pub fn mutated_variables<'tcx>(expr: &'tcx Expr<'_>, cx: &LateContext<'tcx>) -> Option<HirIdSet> {\n@@ -73,7 +73,7 @@ impl<'tcx> Delegate<'tcx> for MutVarsDelegate {\n         self.update(cmt);\n     }\n \n-    fn fake_read(&mut self, _: &rustc_typeck::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n+    fn fake_read(&mut self, _: &rustc_hir_analysis::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n }\n \n pub struct ParamBindingIdCollector {"}, {"sha": "7263abac15dfb96978597c5af32f24a4fb12ad25", "filename": "tests/ui/transmutes_expressible_as_ptr_casts.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/tests%2Fui%2Ftransmutes_expressible_as_ptr_casts.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/tests%2Fui%2Ftransmutes_expressible_as_ptr_casts.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutes_expressible_as_ptr_casts.fixed?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -8,7 +8,7 @@\n \n use std::mem::{size_of, transmute};\n \n-// rustc_typeck::check::cast contains documentation about when a cast `e as U` is\n+// rustc_hir_analysis::check::cast contains documentation about when a cast `e as U` is\n // valid, which we quote from below.\n fn main() {\n     // We should see an error message for each transmute, and no error messages for"}, {"sha": "d8e4421d4c18e2a3743100bc15e037d3b8525e24", "filename": "tests/ui/transmutes_expressible_as_ptr_casts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/tests%2Fui%2Ftransmutes_expressible_as_ptr_casts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ce6d18df883f593e72f7958bebdc3ebcdbe85e/tests%2Fui%2Ftransmutes_expressible_as_ptr_casts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutes_expressible_as_ptr_casts.rs?ref=e5ce6d18df883f593e72f7958bebdc3ebcdbe85e", "patch": "@@ -8,7 +8,7 @@\n \n use std::mem::{size_of, transmute};\n \n-// rustc_typeck::check::cast contains documentation about when a cast `e as U` is\n+// rustc_hir_analysis::check::cast contains documentation about when a cast `e as U` is\n // valid, which we quote from below.\n fn main() {\n     // We should see an error message for each transmute, and no error messages for"}]}