{"sha": "d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwMDcwZTg1ZGIyYmQyZWU0ZjQwZjFjZTc1NzFlMDExZDAwZWUxZmE=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-09-01T06:43:00Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-09-13T04:18:45Z"}, "message": "Build and test Rustfmt", "tree": {"sha": "d3dae29535a3f07e7c59f43fe0878a185209717c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3dae29535a3f07e7c59f43fe0878a185209717c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa", "html_url": "https://github.com/rust-lang/rust/commit/d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4508e12263d77565a6eab7097fb4720b64e8f21", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4508e12263d77565a6eab7097fb4720b64e8f21", "html_url": "https://github.com/rust-lang/rust/commit/c4508e12263d77565a6eab7097fb4720b64e8f21"}], "stats": {"total": 84, "additions": 79, "deletions": 5}, "files": [{"sha": "8a87a4eb7da1d1fb0b03bc415e453292500779a1", "filename": "src/Cargo.lock", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa", "patch": "@@ -1339,7 +1339,7 @@ dependencies = [\n  \"rls-rustc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rls-span 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rls-vfs 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustfmt-nightly 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustfmt-nightly 0.2.5\",\n  \"serde 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1810,7 +1810,6 @@ dependencies = [\n [[package]]\n name = \"rustfmt-nightly\"\n version = \"0.2.5\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"diff 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"env_logger 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2549,7 +2548,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum rls-vfs 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ffd34691a510938bb67fe0444fb363103c73ffb31c121d1e16bc92d8945ea8ff\"\n \"checksum rustc-demangle 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"aee45432acc62f7b9a108cc054142dac51f979e69e71ddce7d6fc7adf29e817e\"\n \"checksum rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dcf128d1287d2ea9d80910b5f1120d0b8eede3fbf1abe91c40d39ea7d51e6fda\"\n-\"checksum rustfmt-nightly 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7d6dbb39239e54df780a850721fba87b3fdb2e645b39041742ec111369cec6af\"\n \"checksum same-file 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d931a44fdaa43b8637009e7632a02adc4f2b2e0733c08caa4cf00e8da4a117a7\"\n \"checksum scoped-tls 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f417c22df063e9450888a7561788e9bd46d3bb3c1466435b4eccb903807f147d\"\n \"checksum scopeguard 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"59a076157c1e2dc561d8de585151ee6965d910dd4dcb5dabb7ae3e83981a6c57\""}, {"sha": "7ff0154bf8bb30532bfbedc8710421e4b87b1134", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa", "patch": "@@ -249,11 +249,11 @@ impl<'a> Builder<'a> {\n                 tool::UnstableBookGen, tool::Tidy, tool::Linkchecker, tool::CargoTest,\n                 tool::Compiletest, tool::RemoteTestServer, tool::RemoteTestClient,\n                 tool::RustInstaller, tool::Cargo, tool::Rls, tool::Rustdoc, tool::Clippy,\n-                native::Llvm),\n+                native::Llvm, tool::Rustfmt),\n             Kind::Test => describe!(check::Tidy, check::Bootstrap, check::DefaultCompiletest,\n                 check::HostCompiletest, check::Crate, check::CrateLibrustc, check::Rustdoc,\n                 check::Linkcheck, check::Cargotest, check::Cargo, check::Rls, check::Docs,\n-                check::ErrorIndex, check::Distcheck),\n+                check::ErrorIndex, check::Distcheck, check::Rustfmt),\n             Kind::Bench => describe!(check::Crate, check::CrateLibrustc),\n             Kind::Doc => describe!(doc::UnstableBook, doc::UnstableBookGen, doc::TheBook,\n                 doc::Standalone, doc::Std, doc::Test, doc::Rustc, doc::ErrorIndex, doc::Nomicon,"}, {"sha": "7be5c31e27d12aaf04fd71d3ef53314ffdf86e83", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa", "patch": "@@ -253,6 +253,47 @@ impl Step for Rls {\n     }\n }\n \n+#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n+pub struct Rustfmt {\n+    stage: u32,\n+    host: Interned<String>,\n+}\n+\n+impl Step for Rustfmt {\n+    type Output = ();\n+    const ONLY_HOSTS: bool = true;\n+\n+    fn should_run(run: ShouldRun) -> ShouldRun {\n+        run.path(\"src/tools/rustfmt\")\n+    }\n+\n+    fn make_run(run: RunConfig) {\n+        run.builder.ensure(Rustfmt {\n+            stage: run.builder.top_stage,\n+            host: run.target,\n+        });\n+    }\n+\n+    /// Runs `cargo test` for rustfmt.\n+    fn run(self, builder: &Builder) {\n+        let build = builder.build;\n+        let stage = self.stage;\n+        let host = self.host;\n+        let compiler = builder.compiler(stage, host);\n+\n+        builder.ensure(tool::Rustfmt { compiler, target: self.host });\n+        let mut cargo = builder.cargo(compiler, Mode::Tool, host, \"test\");\n+        cargo.arg(\"--manifest-path\").arg(build.src.join(\"src/tools/rustfmt/Cargo.toml\"));\n+\n+        // Don't build tests dynamically, just a pain to work with\n+        cargo.env(\"RUSTC_NO_PREFER_DYNAMIC\", \"1\");\n+\n+        builder.add_rustc_lib_path(compiler, &mut cargo);\n+\n+        try_run(build, &mut cargo);\n+    }\n+}\n+\n fn path_for_cargo(builder: &Builder, compiler: Compiler) -> OsString {\n     // Configure PATH to find the right rustc. NB. we have to use PATH\n     // and not RUSTC because the Cargo test suite has tests that will"}, {"sha": "e8de8d52b670f86dd0be9c982c5d1d6d4b2bbc73", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa", "patch": "@@ -431,6 +431,40 @@ impl Step for Rls {\n     }\n }\n \n+#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n+pub struct Rustfmt {\n+    pub compiler: Compiler,\n+    pub target: Interned<String>,\n+}\n+\n+impl Step for Rustfmt {\n+    type Output = PathBuf;\n+    const DEFAULT: bool = true;\n+    const ONLY_HOSTS: bool = true;\n+\n+    fn should_run(run: ShouldRun) -> ShouldRun {\n+        let builder = run.builder;\n+        run.path(\"src/tools/rustfmt\").default_condition(builder.build.config.extended)\n+    }\n+\n+    fn make_run(run: RunConfig) {\n+        run.builder.ensure(Rustfmt {\n+            compiler: run.builder.compiler(run.builder.top_stage, run.builder.build.build),\n+            target: run.target,\n+        });\n+    }\n+\n+    fn run(self, builder: &Builder) -> PathBuf {\n+        builder.ensure(ToolBuild {\n+            compiler: self.compiler,\n+            target: self.target,\n+            tool: \"rustfmt\",\n+            mode: Mode::Librustc,\n+            path: \"src/tools/rustfmt\",\n+        })\n+    }\n+}\n+\n impl<'a> Builder<'a> {\n     /// Get a `Command` which is ready to run `tool` in `stage` built for\n     /// `host`."}, {"sha": "56c0b21cd53c7b7e1a1f25aa392033b29cf52573", "filename": "src/tools/tidy/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs?ref=d0070e85db2bd2ee4f40f1ce7571e011d00ee1fa", "patch": "@@ -64,6 +64,7 @@ fn filter_dirs(path: &Path) -> bool {\n         \"src/tools/rls\",\n         \"src/tools/clippy\",\n         \"src/tools/rust-installer\",\n+        \"src/tools/rustfmt\",\n     ];\n     skip.iter().any(|p| path.ends_with(p))\n }"}]}