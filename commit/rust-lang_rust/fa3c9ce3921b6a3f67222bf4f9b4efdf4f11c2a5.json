{"sha": "fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhM2M5Y2UzOTIxYjZhM2Y2NzIyMmJmNGY5YjRlZmRmNGYxMWMyYTU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-08T19:30:32Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-08T19:30:32Z"}, "message": "fix usages after rename", "tree": {"sha": "7c31b3941d011c475141e92104464ec4cced6ad8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c31b3941d011c475141e92104464ec4cced6ad8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5", "html_url": "https://github.com/rust-lang/rust/commit/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1967884d6836219ee78a754ca5c66ac781351559", "url": "https://api.github.com/repos/rust-lang/rust/commits/1967884d6836219ee78a754ca5c66ac781351559", "html_url": "https://github.com/rust-lang/rust/commit/1967884d6836219ee78a754ca5c66ac781351559"}], "stats": {"total": 107, "additions": 62, "deletions": 45}, "files": [{"sha": "f99a0342432e7cde06adf0cbaf6b1f161e366507", "filename": "Cargo.lock", "status": "modified", "additions": 34, "deletions": 24, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5", "patch": "@@ -171,7 +171,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"crossbeam-utils 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rand 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smallvec 0.6.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -548,7 +548,7 @@ version = \"0.4.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rand 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smallvec 0.6.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -645,8 +645,8 @@ dependencies = [\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_db 0.1.0\",\n- \"ra_editor 0.1.0\",\n  \"ra_hir 0.1.0\",\n+ \"ra_ide_api_light 0.1.0\",\n  \"ra_syntax 0.1.0\",\n  \"ra_text_edit 0.1.0\",\n  \"rayon 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -668,7 +668,7 @@ dependencies = [\n  \"clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"join_to_string 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"ra_editor 0.1.0\",\n+ \"ra_ide_api_light 0.1.0\",\n  \"ra_syntax 0.1.0\",\n  \"tools 0.1.0\",\n ]\n@@ -686,20 +686,6 @@ dependencies = [\n  \"test_utils 0.1.0\",\n ]\n \n-[[package]]\n-name = \"ra_editor\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"join_to_string 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"proptest 0.8.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"ra_syntax 0.1.0\",\n- \"ra_text_edit 0.1.0\",\n- \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"superslice 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"test_utils 0.1.0\",\n-]\n-\n [[package]]\n name = \"ra_hir\"\n version = \"0.1.0\"\n@@ -718,6 +704,20 @@ dependencies = [\n  \"test_utils 0.1.0\",\n ]\n \n+[[package]]\n+name = \"ra_ide_api_light\"\n+version = \"0.1.0\"\n+dependencies = [\n+ \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"join_to_string 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"proptest 0.8.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"ra_syntax 0.1.0\",\n+ \"ra_text_edit 0.1.0\",\n+ \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"superslice 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"test_utils 0.1.0\",\n+]\n+\n [[package]]\n name = \"ra_lsp_server\"\n version = \"0.1.0\"\n@@ -806,7 +806,7 @@ dependencies = [\n \n [[package]]\n name = \"rand\"\n-version = \"0.6.3\"\n+version = \"0.6.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"autocfg 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -815,7 +815,7 @@ dependencies = [\n  \"rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rand_os 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_os 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_pcg 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -861,13 +861,14 @@ dependencies = [\n \n [[package]]\n name = \"rand_os\"\n-version = \"0.1.0\"\n+version = \"0.1.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -909,6 +910,14 @@ dependencies = [\n  \"num_cpus 1.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"rdrand\"\n+version = \"0.4.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"redox_syscall\"\n version = \"0.1.50\"\n@@ -1164,7 +1173,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rand 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.50 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"remove_dir_all 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1551,17 +1560,18 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9274b940887ce9addde99c4eee6b5c44cc494b182b97e73dc8ffdcb3397fd3f0\"\n \"checksum quote 0.6.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"53fa22a1994bd0f9372d7a816207d8a2677ad0325b073f5c5332760f0fb62b5c\"\n \"checksum rand 0.5.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e464cd887e869cddcae8792a4ee31d23c7edd516700695608f5b98c67ee0131c\"\n-\"checksum rand 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b65e163105a6284f841bd23100a015895f54340e88a5ffc9ca7b8b33827cfce0\"\n+\"checksum rand 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3906503e80ac6cbcacb2c2973fa8e473f24d7e2747c8c92bb230c2441cad96b5\"\n \"checksum rand_chacha 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"556d3a1ca6600bfcbab7c7c91ccb085ac7fbbcd70e008a98742e7847f4f7bcef\"\n \"checksum rand_core 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1961a422c4d189dfb50ffa9320bf1f2a9bd54ecb92792fb9477f99a1045f3372\"\n \"checksum rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0905b6b7079ec73b314d4c748701f6931eb79fd97c668caa3f1899b22b32c6db\"\n \"checksum rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7b40677c7be09ae76218dc623efbf7b18e34bced3f38883af07bb75630a21bc4\"\n \"checksum rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ded997c9d5f13925be2a6fd7e66bf1872597f759fd9dd93513dd7e92e5a5ee08\"\n-\"checksum rand_os 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"de5ac4de1c2973e1391dc305cb0fbf8788cb58068e98255439b7485a77022273\"\n+\"checksum rand_os 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f46fbd5550acf75b0c2730f5dd1873751daf9beb8f11b44027778fae50d7feca\"\n \"checksum rand_pcg 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"086bd09a33c7044e56bb44d5bdde5a60e7f119a9e95b0775f545de759a32fe05\"\n \"checksum rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cbf7e9e623549b0e21f6e97cf8ecf247c1a8fd2e8a992ae265314300b2455d5c\"\n \"checksum rayon 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"373814f27745b2686b350dd261bfd24576a6fb0e2c5919b3a2b6005f820b0473\"\n \"checksum rayon-core 1.4.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b055d1e92aba6877574d8fe604a63c8b5df60f60e5982bf7ccbb1338ea527356\"\n+\"checksum rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"678054eb77286b51581ba43620cc911abf02758c91f93f479767aed0f90458b2\"\n \"checksum redox_syscall 0.1.50 (registry+https://github.com/rust-lang/crates.io-index)\" = \"52ee9a534dc1301776eff45b4fa92d2c39b1d8c3d3357e6eb593e0d795506fc2\"\n \"checksum redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7e891cfe48e9100a70a3b6eb652fef28920c117d366339687bd5576160db0f76\"\n \"checksum regex 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"37e7cbbd370869ce2e8dff25c7018702d10b21a20ef7135316f8daecd6c25b7f\""}, {"sha": "3c08142795c3355f92a4fedff2ab0a00b016af71", "filename": "crates/ra_analysis/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/crates%2Fra_analysis%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/crates%2Fra_analysis%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2FCargo.toml?ref=fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5", "patch": "@@ -16,7 +16,7 @@ parking_lot = \"0.7.0\"\n unicase = \"2.2.0\"\n \n ra_syntax = { path = \"../ra_syntax\" }\n-ra_editor = { path = \"../ra_editor\" }\n+ra_ide_api_light = { path = \"../ra_ide_api_light\" }\n ra_text_edit = { path = \"../ra_text_edit\" }\n ra_db = { path = \"../ra_db\" }\n hir = { path = \"../ra_hir\", package = \"ra_hir\" }"}, {"sha": "c3c809c9fe3369c09af8d9ade57ad9e97821fc76", "filename": "crates/ra_analysis/src/extend_selection.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/crates%2Fra_analysis%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/crates%2Fra_analysis%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fextend_selection.rs?ref=fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5", "patch": "@@ -14,7 +14,7 @@ pub(crate) fn extend_selection(db: &RootDatabase, frange: FileRange) -> TextRang\n     if let Some(range) = extend_selection_in_macro(db, &source_file, frange) {\n         return range;\n     }\n-    ra_editor::extend_selection(source_file.syntax(), frange.range).unwrap_or(frange.range)\n+    ra_ide_api_light::extend_selection(source_file.syntax(), frange.range).unwrap_or(frange.range)\n }\n \n fn extend_selection_in_macro(\n@@ -25,7 +25,7 @@ fn extend_selection_in_macro(\n     let macro_call = find_macro_call(source_file.syntax(), frange.range)?;\n     let (off, exp) = hir::MacroDef::ast_expand(macro_call)?;\n     let dst_range = exp.map_range_forward(frange.range - off)?;\n-    let dst_range = ra_editor::extend_selection(&exp.syntax(), dst_range)?;\n+    let dst_range = ra_ide_api_light::extend_selection(&exp.syntax(), dst_range)?;\n     let src_range = exp.map_range_back(dst_range)? + off;\n     Some(src_range)\n }"}, {"sha": "7c60ab7d6f4ec1b0c65df96a08bb22440b8cd967", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5", "patch": "@@ -6,7 +6,7 @@ use hir::{\n     self, Problem, source_binder,\n };\n use ra_db::{FilesDatabase, SourceRoot, SourceRootId, SyntaxDatabase};\n-use ra_editor::{self, assists, LocalEdit, Severity};\n+use ra_ide_api_light::{self, assists, LocalEdit, Severity};\n use ra_syntax::{\n     TextRange, AstNode, SourceFile,\n     ast::{self, NameOwner},\n@@ -194,7 +194,7 @@ impl db::RootDatabase {\n     pub(crate) fn diagnostics(&self, file_id: FileId) -> Cancelable<Vec<Diagnostic>> {\n         let syntax = self.source_file(file_id);\n \n-        let mut res = ra_editor::diagnostics(&syntax)\n+        let mut res = ra_ide_api_light::diagnostics(&syntax)\n             .into_iter()\n             .map(|d| Diagnostic {\n                 range: d.range,"}, {"sha": "183e3670691e7f6fa134a58820a8a3465967f015", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5", "patch": "@@ -44,7 +44,7 @@ pub use crate::{\n     completion::{CompletionItem, CompletionItemKind, InsertText},\n     runnables::{Runnable, RunnableKind},\n };\n-pub use ra_editor::{\n+pub use ra_ide_api_light::{\n     Fold, FoldKind, HighlightedRange, Severity, StructureNode,\n     LineIndex, LineCol, translate_offset_with_edit,\n };\n@@ -336,51 +336,54 @@ impl Analysis {\n     /// Returns position of the mathcing brace (all types of braces are\n     /// supported).\n     pub fn matching_brace(&self, file: &SourceFile, offset: TextUnit) -> Option<TextUnit> {\n-        ra_editor::matching_brace(file, offset)\n+        ra_ide_api_light::matching_brace(file, offset)\n     }\n     /// Returns a syntax tree represented as `String`, for debug purposes.\n     // FIXME: use a better name here.\n     pub fn syntax_tree(&self, file_id: FileId) -> String {\n         let file = self.db.source_file(file_id);\n-        ra_editor::syntax_tree(&file)\n+        ra_ide_api_light::syntax_tree(&file)\n     }\n     /// Returns an edit to remove all newlines in the range, cleaning up minor\n     /// stuff like trailing commas.\n     pub fn join_lines(&self, frange: FileRange) -> SourceChange {\n         let file = self.db.source_file(frange.file_id);\n-        SourceChange::from_local_edit(frange.file_id, ra_editor::join_lines(&file, frange.range))\n+        SourceChange::from_local_edit(\n+            frange.file_id,\n+            ra_ide_api_light::join_lines(&file, frange.range),\n+        )\n     }\n     /// Returns an edit which should be applied when opening a new line, fixing\n     /// up minor stuff like continuing the comment.\n     pub fn on_enter(&self, position: FilePosition) -> Option<SourceChange> {\n         let file = self.db.source_file(position.file_id);\n-        let edit = ra_editor::on_enter(&file, position.offset)?;\n+        let edit = ra_ide_api_light::on_enter(&file, position.offset)?;\n         Some(SourceChange::from_local_edit(position.file_id, edit))\n     }\n     /// Returns an edit which should be applied after `=` was typed. Primarily,\n     /// this works when adding `let =`.\n     // FIXME: use a snippet completion instead of this hack here.\n     pub fn on_eq_typed(&self, position: FilePosition) -> Option<SourceChange> {\n         let file = self.db.source_file(position.file_id);\n-        let edit = ra_editor::on_eq_typed(&file, position.offset)?;\n+        let edit = ra_ide_api_light::on_eq_typed(&file, position.offset)?;\n         Some(SourceChange::from_local_edit(position.file_id, edit))\n     }\n     /// Returns an edit which should be applied when a dot ('.') is typed on a blank line, indenting the line appropriately.\n     pub fn on_dot_typed(&self, position: FilePosition) -> Option<SourceChange> {\n         let file = self.db.source_file(position.file_id);\n-        let edit = ra_editor::on_dot_typed(&file, position.offset)?;\n+        let edit = ra_ide_api_light::on_dot_typed(&file, position.offset)?;\n         Some(SourceChange::from_local_edit(position.file_id, edit))\n     }\n     /// Returns a tree representation of symbols in the file. Useful to draw a\n     /// file outline.\n     pub fn file_structure(&self, file_id: FileId) -> Vec<StructureNode> {\n         let file = self.db.source_file(file_id);\n-        ra_editor::file_structure(&file)\n+        ra_ide_api_light::file_structure(&file)\n     }\n     /// Returns the set of folding ranges.\n     pub fn folding_ranges(&self, file_id: FileId) -> Vec<Fold> {\n         let file = self.db.source_file(file_id);\n-        ra_editor::folding_ranges(&file)\n+        ra_ide_api_light::folding_ranges(&file)\n     }\n     /// Fuzzy searches for a symbol.\n     pub fn symbol_search(&self, query: Query) -> Cancelable<Vec<NavigationTarget>> {"}, {"sha": "cb19e9515a14f1e4ca34d136b79b073dd753afe7", "filename": "crates/ra_analysis/src/syntax_highlighting.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/crates%2Fra_analysis%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/crates%2Fra_analysis%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fsyntax_highlighting.rs?ref=fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5", "patch": "@@ -1,22 +1,21 @@\n use ra_syntax::{ast, AstNode,};\n-use ra_editor::HighlightedRange;\n use ra_db::SyntaxDatabase;\n \n use crate::{\n+    FileId, Cancelable, HighlightedRange,\n     db::RootDatabase,\n-    FileId, Cancelable,\n };\n \n pub(crate) fn highlight(db: &RootDatabase, file_id: FileId) -> Cancelable<Vec<HighlightedRange>> {\n     let source_file = db.source_file(file_id);\n-    let mut res = ra_editor::highlight(source_file.syntax());\n+    let mut res = ra_ide_api_light::highlight(source_file.syntax());\n     for macro_call in source_file\n         .syntax()\n         .descendants()\n         .filter_map(ast::MacroCall::cast)\n     {\n         if let Some((off, exp)) = hir::MacroDef::ast_expand(macro_call) {\n-            let mapped_ranges = ra_editor::highlight(&exp.syntax())\n+            let mapped_ranges = ra_ide_api_light::highlight(&exp.syntax())\n                 .into_iter()\n                 .filter_map(|r| {\n                     let mapped_range = exp.map_range_back(r.range)?;"}, {"sha": "eb1722d5e77e1fd47bcb86d96a6d0bb202b8cb2c", "filename": "crates/ra_cli/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/crates%2Fra_cli%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/crates%2Fra_cli%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2FCargo.toml?ref=fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5", "patch": "@@ -10,5 +10,5 @@ clap = \"2.32.0\"\n failure = \"0.1.4\"\n join_to_string = \"0.1.1\"\n ra_syntax = { path = \"../ra_syntax\" }\n-ra_editor = { path = \"../ra_editor\" }\n+ra_ide_api_light = { path = \"../ra_ide_api_light\" }\n tools = { path = \"../tools\" }"}, {"sha": "43fb2fc4ce03e36de9b959154f23603bcbcc6247", "filename": "crates/ra_cli/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/crates%2Fra_cli%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/crates%2Fra_cli%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fmain.rs?ref=fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5", "patch": "@@ -2,7 +2,7 @@ use std::{fs, io::Read, path::Path, time::Instant};\n \n use clap::{App, Arg, SubCommand};\n use join_to_string::join;\n-use ra_editor::{extend_selection, file_structure, syntax_tree};\n+use ra_ide_api_light::{extend_selection, file_structure, syntax_tree};\n use ra_syntax::{SourceFile, TextRange, TreePtr, AstNode};\n use tools::collect_tests;\n "}, {"sha": "8c192fca6c02096f52140926b91dc8bb69e0f0aa", "filename": "crates/ra_ide_api_light/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/crates%2Fra_ide_api_light%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/crates%2Fra_ide_api_light%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2FCargo.toml?ref=fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5", "patch": "@@ -1,6 +1,6 @@\n [package]\n edition = \"2018\"\n-name = \"ra_editor\"\n+name = \"ra_ide_api_light\"\n version = \"0.1.0\"\n authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]\n publish = false"}, {"sha": "40638eda8e3da7724c283ba1a6ed09aeb48273c8", "filename": "crates/ra_ide_api_light/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/crates%2Fra_ide_api_light%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5/crates%2Fra_ide_api_light%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Flib.rs?ref=fa3c9ce3921b6a3f67222bf4f9b4efdf4f11c2a5", "patch": "@@ -1,3 +1,8 @@\n+//! This crate provides thouse IDE features which use only a single file.\n+//!\n+//! This usually means functions which take sytnax tree as an input and produce\n+//! an edit or some auxilarly info.\n+\n pub mod assists;\n mod extend_selection;\n mod folding_ranges;"}]}