{"sha": "a573e088ac64eeeb19e4fc74be2ff019be510477", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NzNlMDg4YWM2NGVlZWIxOWU0ZmM3NGJlMmZmMDE5YmU1MTA0Nzc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-12T15:04:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-12T15:04:52Z"}, "message": "Merge #5726\n\n5726: Rename ra_text_edit -> text_edit\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "392c214055eab6a713814d46435bc0d91cf84e6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/392c214055eab6a713814d46435bc0d91cf84e6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a573e088ac64eeeb19e4fc74be2ff019be510477", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfNAUUCRBK7hj4Ov3rIwAAdHIIAG9WnHs24h9VPwLW1MaLwULW\ngbg/mjsgeN1ZaLK+Lrqk3W70TtVAAvB5LB2j/PVZ5j9GW/Mb+inGFkBgRqAn7+vc\njKSnZBuVFTndbsietOVuVwi7PlEhjHtO284+IVk6Z/oRmw5JxR3zccXZViEdWjKB\nxmQBgTFX1GjEZrUNlwKR4n4va+EUscDa9yYKslvHs0KOGgzBLGYZZBvXWCR+zBHW\nMdnUrzwaRP5aO3jI9s0WbdAgKhErQC6a0s/zfoBDLW5zmo40CjmDLLSSTgfnTYpz\nRdA+LyHzezM6Wy1uouo8PMNyacYYp8WjnpMzxHJlgPTQF+YKhdRwhZoFrUS4HLI=\n=m/j5\n-----END PGP SIGNATURE-----\n", "payload": "tree 392c214055eab6a713814d46435bc0d91cf84e6c\nparent 6dba0e1c4de3b225556f7fce70518c8ebff170a6\nparent 6dafc13f5f776980cd2560fb79d3d4790811c96d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1597244692 +0000\ncommitter GitHub <noreply@github.com> 1597244692 +0000\n\nMerge #5726\n\n5726: Rename ra_text_edit -> text_edit\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a573e088ac64eeeb19e4fc74be2ff019be510477", "html_url": "https://github.com/rust-lang/rust/commit/a573e088ac64eeeb19e4fc74be2ff019be510477", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a573e088ac64eeeb19e4fc74be2ff019be510477/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dba0e1c4de3b225556f7fce70518c8ebff170a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dba0e1c4de3b225556f7fce70518c8ebff170a6", "html_url": "https://github.com/rust-lang/rust/commit/6dba0e1c4de3b225556f7fce70518c8ebff170a6"}, {"sha": "6dafc13f5f776980cd2560fb79d3d4790811c96d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dafc13f5f776980cd2560fb79d3d4790811c96d", "html_url": "https://github.com/rust-lang/rust/commit/6dafc13f5f776980cd2560fb79d3d4790811c96d"}], "stats": {"total": 196, "additions": 102, "deletions": 94}, "files": [{"sha": "4a6a6593415bcb76cbcf83c92ff37f6f8480d9bf", "filename": "Cargo.lock", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -358,8 +358,8 @@ dependencies = [\n  \"crossbeam-channel\",\n  \"jod-thread\",\n  \"log\",\n- \"ra_toolchain\",\n  \"serde_json\",\n+ \"toolchain\",\n ]\n \n [[package]]\n@@ -927,10 +927,10 @@ dependencies = [\n  \"ra_hir\",\n  \"ra_ide_db\",\n  \"ra_syntax\",\n- \"ra_text_edit\",\n  \"rustc-hash\",\n  \"stdx\",\n  \"test_utils\",\n+ \"text_edit\",\n ]\n \n [[package]]\n@@ -1075,10 +1075,10 @@ dependencies = [\n  \"ra_ide_db\",\n  \"ra_ssr\",\n  \"ra_syntax\",\n- \"ra_text_edit\",\n  \"rustc-hash\",\n  \"stdx\",\n  \"test_utils\",\n+ \"text_edit\",\n ]\n \n [[package]]\n@@ -1093,11 +1093,11 @@ dependencies = [\n  \"ra_db\",\n  \"ra_hir\",\n  \"ra_syntax\",\n- \"ra_text_edit\",\n  \"rayon\",\n  \"rustc-hash\",\n  \"stdx\",\n  \"test_utils\",\n+ \"text_edit\",\n ]\n \n [[package]]\n@@ -1143,9 +1143,9 @@ dependencies = [\n  \"memmap\",\n  \"ra_mbe\",\n  \"ra_proc_macro\",\n- \"ra_toolchain\",\n  \"serde_derive\",\n  \"test_utils\",\n+ \"toolchain\",\n  \"tt\",\n ]\n \n@@ -1161,11 +1161,11 @@ dependencies = [\n  \"ra_cfg\",\n  \"ra_db\",\n  \"ra_proc_macro\",\n- \"ra_toolchain\",\n  \"rustc-hash\",\n  \"serde\",\n  \"serde_json\",\n  \"stdx\",\n+ \"toolchain\",\n ]\n \n [[package]]\n@@ -1177,9 +1177,9 @@ dependencies = [\n  \"ra_hir\",\n  \"ra_ide_db\",\n  \"ra_syntax\",\n- \"ra_text_edit\",\n  \"rustc-hash\",\n  \"test_utils\",\n+ \"text_edit\",\n ]\n \n [[package]]\n@@ -1191,7 +1191,6 @@ dependencies = [\n  \"itertools\",\n  \"once_cell\",\n  \"ra_parser\",\n- \"ra_text_edit\",\n  \"rayon\",\n  \"rowan\",\n  \"rustc-ap-rustc_lexer\",\n@@ -1200,23 +1199,10 @@ dependencies = [\n  \"smol_str\",\n  \"stdx\",\n  \"test_utils\",\n+ \"text_edit\",\n  \"walkdir\",\n ]\n \n-[[package]]\n-name = \"ra_text_edit\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"text-size\",\n-]\n-\n-[[package]]\n-name = \"ra_toolchain\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"home\",\n-]\n-\n [[package]]\n name = \"rayon\"\n version = \"1.3.1\"\n@@ -1319,15 +1305,15 @@ dependencies = [\n  \"ra_project_model\",\n  \"ra_ssr\",\n  \"ra_syntax\",\n- \"ra_text_edit\",\n- \"ra_toolchain\",\n  \"rayon\",\n  \"rustc-hash\",\n  \"serde\",\n  \"serde_json\",\n  \"stdx\",\n  \"test_utils\",\n+ \"text_edit\",\n  \"threadpool\",\n+ \"toolchain\",\n  \"tt\",\n  \"vfs\",\n  \"vfs-notify\",\n@@ -1572,6 +1558,13 @@ version = \"1.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"f03e7efdedc3bc78cb2337f1e2785c39e45f5ef762d9e4ebb137fff7380a6d8a\"\n \n+[[package]]\n+name = \"text_edit\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"text-size\",\n+]\n+\n [[package]]\n name = \"thin-dst\"\n version = \"1.1.0\"\n@@ -1612,6 +1605,13 @@ version = \"0.3.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"53953d2d3a5ad81d9f844a32f14ebb121f50b650cd59d0ee2a07cf13c617efed\"\n \n+[[package]]\n+name = \"toolchain\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"home\",\n+]\n+\n [[package]]\n name = \"tracing\"\n version = \"0.1.18\""}, {"sha": "acc72bc59ccfd0e0f8ccdaeb47336b5b88449b14", "filename": "crates/flycheck/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fflycheck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fflycheck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fflycheck%2FCargo.toml?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -14,4 +14,4 @@ log = \"0.4.8\"\n cargo_metadata = \"0.11.1\"\n serde_json = \"1.0.48\"\n jod-thread = \"0.1.1\"\n-ra_toolchain = { path = \"../ra_toolchain\" }\n+toolchain = { path = \"../toolchain\" }"}, {"sha": "16078d10434d304d9047c35fa3b27cc3ef0e5a12", "filename": "crates/flycheck/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fflycheck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fflycheck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fflycheck%2Fsrc%2Flib.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -193,7 +193,7 @@ impl FlycheckActor {\n                 extra_args,\n                 features,\n             } => {\n-                let mut cmd = Command::new(ra_toolchain::cargo());\n+                let mut cmd = Command::new(toolchain::cargo());\n                 cmd.arg(command);\n                 cmd.args(&[\"--workspace\", \"--message-format=json\", \"--manifest-path\"])\n                     .arg(self.workspace_root.join(\"Cargo.toml\"));"}, {"sha": "e4a5ee6c1c80623a332534591a5e049f6610f14d", "filename": "crates/ra_assists/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_assists%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_assists%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2FCargo.toml?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -16,7 +16,7 @@ either = \"1.5.3\"\n stdx = { path = \"../stdx\" }\n \n ra_syntax = { path = \"../ra_syntax\" }\n-ra_text_edit = { path = \"../ra_text_edit\" }\n+text_edit = { path = \"../text_edit\" }\n ra_fmt = { path = \"../ra_fmt\" }\n profile = { path = \"../profile\" }\n ra_db = { path = \"../ra_db\" }"}, {"sha": "fcaa1aedcf3699ae0fe1e8efb203f788ffdb3f83", "filename": "crates/ra_assists/src/assist_context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassist_context.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -15,7 +15,7 @@ use ra_syntax::{\n     AstNode, SourceFile, SyntaxElement, SyntaxKind, SyntaxNode, SyntaxToken, TextRange, TextSize,\n     TokenAtOffset,\n };\n-use ra_text_edit::TextEditBuilder;\n+use text_edit::{TextEdit, TextEditBuilder};\n \n use crate::{\n     assist_config::{AssistConfig, SnippetCap},\n@@ -214,7 +214,7 @@ pub(crate) struct AssistBuilder {\n impl AssistBuilder {\n     pub(crate) fn new(file_id: FileId) -> AssistBuilder {\n         AssistBuilder {\n-            edit: TextEditBuilder::default(),\n+            edit: TextEdit::builder(),\n             file_id,\n             is_snippet: false,\n             change: SourceChange::default(),"}, {"sha": "13dbe1919c19382c0fa95e6a90fa4f945d1b09b5", "filename": "crates/ra_assists/src/utils/insert_use.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_assists%2Fsrc%2Futils%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_assists%2Fsrc%2Futils%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Futils%2Finsert_use.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -2,17 +2,17 @@\n // FIXME: rewrite according to the plan, outlined in\n // https://github.com/rust-analyzer/rust-analyzer/issues/3301#issuecomment-592931553\n \n+use either::Either;\n use hir::{self, ModPath};\n use ra_syntax::{\n     ast::{self, NameOwner, VisibilityOwner},\n     AstNode, Direction, SmolStr,\n     SyntaxKind::{PATH, PATH_SEGMENT},\n     SyntaxNode, T,\n };\n-use ra_text_edit::TextEditBuilder;\n+use text_edit::TextEditBuilder;\n \n use crate::assist_context::AssistContext;\n-use either::Either;\n \n /// Determines the containing syntax node in which to insert a `use` statement affecting `position`.\n pub(crate) fn find_insert_use_container("}, {"sha": "84c25f0b8a2efd5a6ad34ccf365cbf9df2bcb7ee", "filename": "crates/ra_ide/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2FCargo.toml?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -22,7 +22,7 @@ oorandom = \"11.1.2\"\n stdx = { path = \"../stdx\" }\n \n ra_syntax = { path = \"../ra_syntax\" }\n-ra_text_edit = { path = \"../ra_text_edit\" }\n+text_edit = { path = \"../text_edit\" }\n ra_db = { path = \"../ra_db\" }\n ra_ide_db = { path = \"../ra_ide_db\" }\n ra_cfg = { path = \"../ra_cfg\" }"}, {"sha": "42087da8dc5273d0e7c6e83bcde13c3a0ad1dac8", "filename": "crates/ra_ide/src/completion/complete_postfix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -4,7 +4,7 @@ use ra_syntax::{\n     ast::{self, AstNode},\n     TextRange, TextSize,\n };\n-use ra_text_edit::TextEdit;\n+use text_edit::TextEdit;\n \n use crate::{\n     completion::{"}, {"sha": "b397baf10787f677b951404732ed8d39d64df84b", "filename": "crates/ra_ide/src/completion/complete_trait_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -37,7 +37,7 @@ use ra_syntax::{\n     ast::{self, edit, Impl},\n     AstNode, SyntaxKind, SyntaxNode, TextRange, T,\n };\n-use ra_text_edit::TextEdit;\n+use text_edit::TextEdit;\n \n use crate::{\n     completion::{"}, {"sha": "0cb57fb1b42c3ad60996da62986d068d08e70892", "filename": "crates/ra_ide/src/completion/completion_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -9,7 +9,7 @@ use ra_syntax::{\n     SyntaxKind::*,\n     SyntaxNode, SyntaxToken, TextRange, TextSize,\n };\n-use ra_text_edit::Indel;\n+use text_edit::Indel;\n \n use super::patterns::{\n     has_bind_pat_parent, has_block_expr_parent, has_impl_as_prev_sibling, has_impl_parent,"}, {"sha": "1c0684f4ed58e798fab6705ce6d64043a3a85ceb", "filename": "crates/ra_ide/src/completion/completion_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -4,7 +4,7 @@ use std::fmt;\n \n use hir::Documentation;\n use ra_syntax::TextRange;\n-use ra_text_edit::TextEdit;\n+use text_edit::TextEdit;\n \n use crate::completion::completion_config::SnippetCap;\n "}, {"sha": "54810d5bbf021aa3b97a5a2ad68a5211b9f332cb", "filename": "crates/ra_ide/src/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -14,7 +14,7 @@ use ra_syntax::{\n     ast::{self, AstNode},\n     SyntaxNode, TextRange, T,\n };\n-use ra_text_edit::{TextEdit, TextEditBuilder};\n+use text_edit::TextEdit;\n \n use crate::{Diagnostic, FileId, Fix, SourceFileEdit};\n \n@@ -103,7 +103,7 @@ fn check_unnecessary_braces_in_use_statement(\n             text_edit_for_remove_unnecessary_braces_with_self_in_use_statement(&single_use_tree)\n                 .unwrap_or_else(|| {\n                     let to_replace = single_use_tree.syntax().text().to_string();\n-                    let mut edit_builder = TextEditBuilder::default();\n+                    let mut edit_builder = TextEdit::builder();\n                     edit_builder.delete(use_range);\n                     edit_builder.insert(use_range.start(), to_replace);\n                     edit_builder.finish()\n@@ -149,7 +149,7 @@ fn check_struct_shorthand_initialization(\n             let field_expr = expr.syntax().text().to_string();\n             let field_name_is_tup_index = name_ref.as_tuple_field().is_some();\n             if field_name == field_expr && !field_name_is_tup_index {\n-                let mut edit_builder = TextEditBuilder::default();\n+                let mut edit_builder = TextEdit::builder();\n                 edit_builder.delete(record_field.syntax().text_range());\n                 edit_builder.insert(record_field.syntax().text_range().start(), field_name);\n                 let edit = edit_builder.finish();"}, {"sha": "8fb25de6c16c43236d82b27820d951b09eca0322", "filename": "crates/ra_ide/src/diagnostics/diagnostics_with_fix.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Fdiagnostics%2Fdiagnostics_with_fix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Fdiagnostics%2Fdiagnostics_with_fix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics%2Fdiagnostics_with_fix.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -13,7 +13,7 @@ use ra_ide_db::{\n     RootDatabase,\n };\n use ra_syntax::{algo, ast, AstNode};\n-use ra_text_edit::{TextEdit, TextEditBuilder};\n+use text_edit::TextEdit;\n \n /// A [Diagnostic] that potentially has a fix available.\n ///\n@@ -70,7 +70,7 @@ impl DiagnosticWithFix for MissingFields {\n         }\n \n         let edit = {\n-            let mut builder = TextEditBuilder::default();\n+            let mut builder = TextEdit::builder();\n             algo::diff(&old_field_list.syntax(), &new_field_list.syntax())\n                 .into_text_edit(&mut builder);\n             builder.finish()"}, {"sha": "caf63933a9be946cab315f133eb5aed9b7c3749b", "filename": "crates/ra_ide/src/join_lines.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -7,7 +7,7 @@ use ra_syntax::{\n     SyntaxKind::{self, WHITESPACE},\n     SyntaxNode, SyntaxToken, TextRange, TextSize, T,\n };\n-use ra_text_edit::{TextEdit, TextEditBuilder};\n+use text_edit::{TextEdit, TextEditBuilder};\n \n // Feature: Join Lines\n //\n@@ -23,7 +23,7 @@ pub fn join_lines(file: &SourceFile, range: TextRange) -> TextEdit {\n         let syntax = file.syntax();\n         let text = syntax.text().slice(range.start()..);\n         let pos = match text.find_char('\\n') {\n-            None => return TextEditBuilder::default().finish(),\n+            None => return TextEdit::builder().finish(),\n             Some(pos) => pos,\n         };\n         TextRange::at(range.start() + pos, TextSize::of('\\n'))\n@@ -35,7 +35,7 @@ pub fn join_lines(file: &SourceFile, range: TextRange) -> TextEdit {\n         NodeOrToken::Node(node) => node,\n         NodeOrToken::Token(token) => token.parent(),\n     };\n-    let mut edit = TextEditBuilder::default();\n+    let mut edit = TextEdit::builder();\n     for token in node.descendants_with_tokens().filter_map(|it| it.into_token()) {\n         let range = match range.intersect(token.text_range()) {\n             Some(range) => range,"}, {"sha": "09cb5faf68fba42c45cc1505af7942c604c513f7", "filename": "crates/ra_ide/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Flib.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -96,7 +96,7 @@ pub use ra_ide_db::{\n     RootDatabase,\n };\n pub use ra_ssr::SsrError;\n-pub use ra_text_edit::{Indel, TextEdit};\n+pub use text_edit::{Indel, TextEdit};\n \n pub type Cancelable<T> = Result<T, Canceled>;\n "}, {"sha": "9c688fb063171c69ccb47aeb786adb87380fcda2", "filename": "crates/ra_ide/src/references/rename.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -11,9 +11,9 @@ use ra_syntax::{\n     ast::{self, NameOwner},\n     lex_single_valid_syntax_kind, match_ast, AstNode, SyntaxKind, SyntaxNode, SyntaxToken,\n };\n-use ra_text_edit::TextEdit;\n use std::convert::TryInto;\n use test_utils::mark;\n+use text_edit::TextEdit;\n \n use crate::{\n     references::find_all_refs, FilePosition, FileSystemEdit, RangeInfo, Reference, ReferenceKind,\n@@ -271,17 +271,17 @@ fn rename_reference(\n #[cfg(test)]\n mod tests {\n     use expect::{expect, Expect};\n-    use ra_text_edit::TextEditBuilder;\n     use stdx::trim_indent;\n     use test_utils::{assert_eq_text, mark};\n+    use text_edit::TextEdit;\n \n     use crate::{mock_analysis::analysis_and_position, FileId};\n \n     fn check(new_name: &str, ra_fixture_before: &str, ra_fixture_after: &str) {\n         let ra_fixture_after = &trim_indent(ra_fixture_after);\n         let (analysis, position) = analysis_and_position(ra_fixture_before);\n         let source_change = analysis.rename(position, new_name).unwrap();\n-        let mut text_edit_builder = TextEditBuilder::default();\n+        let mut text_edit_builder = TextEdit::builder();\n         let mut file_id: Option<FileId> = None;\n         if let Some(change) = source_change {\n             for edit in change.info.source_file_edits {"}, {"sha": "952429cde6517418e250ec4aa953a372e9fa576d", "filename": "crates/ra_ide/src/typing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftyping.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -26,7 +26,7 @@ use ra_syntax::{\n     TextRange, TextSize,\n };\n \n-use ra_text_edit::TextEdit;\n+use text_edit::TextEdit;\n \n use crate::SourceChange;\n "}, {"sha": "c0c5ce3bcd29c168df26b927a147fc3782924c83", "filename": "crates/ra_ide/src/typing/on_enter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -9,8 +9,8 @@ use ra_syntax::{\n     SyntaxKind::*,\n     SyntaxToken, TextRange, TextSize, TokenAtOffset,\n };\n-use ra_text_edit::TextEdit;\n use test_utils::mark;\n+use text_edit::TextEdit;\n \n // Feature: On Enter\n //"}, {"sha": "5446a596141dd4b5cb1480f6a7be8c4ce98bf751", "filename": "crates/ra_ide_db/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide_db%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide_db%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2FCargo.toml?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -22,7 +22,7 @@ either = \"1.5.3\"\n stdx = { path = \"../stdx\" }\n \n ra_syntax = { path = \"../ra_syntax\" }\n-ra_text_edit = { path = \"../ra_text_edit\" }\n+text_edit = { path = \"../text_edit\" }\n ra_db = { path = \"../ra_db\" }\n profile = { path = \"../profile\" }\n test_utils = { path = \"../test_utils\" }"}, {"sha": "ae21132dd71e980db4710c014e9bc0ba526b363e", "filename": "crates/ra_ide_db/src/source_change.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide_db%2Fsrc%2Fsource_change.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ide_db%2Fsrc%2Fsource_change.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fsource_change.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -4,7 +4,7 @@\n //! It can be viewed as a dual for `AnalysisChange`.\n \n use ra_db::FileId;\n-use ra_text_edit::TextEdit;\n+use text_edit::TextEdit;\n \n #[derive(Default, Debug, Clone)]\n pub struct SourceChange {"}, {"sha": "1c25e72296f8ccc16acd75108e0ca1ab2bc9fce0", "filename": "crates/ra_proc_macro_srv/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_proc_macro_srv%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_proc_macro_srv%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2FCargo.toml?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -23,4 +23,4 @@ cargo_metadata = \"0.11.1\"\n difference = \"2.0.0\"\n # used as proc macro test target\n serde_derive = \"1.0.106\"\n-ra_toolchain = { path = \"../ra_toolchain\" }\n+toolchain = { path = \"../toolchain\" }"}, {"sha": "1b6a0b6fb798a978b3a0b59ec4bc12742fe62b87", "filename": "crates/ra_proc_macro_srv/src/tests/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_proc_macro_srv%2Fsrc%2Ftests%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_proc_macro_srv%2Fsrc%2Ftests%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2Fsrc%2Ftests%2Futils.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -12,7 +12,7 @@ mod fixtures {\n \n     // Use current project metadata to get the proc-macro dylib path\n     pub fn dylib_path(crate_name: &str, version: &str) -> std::path::PathBuf {\n-        let command = Command::new(ra_toolchain::cargo())\n+        let command = Command::new(toolchain::cargo())\n             .args(&[\"check\", \"--message-format\", \"json\"])\n             .output()\n             .unwrap()"}, {"sha": "171fe86264b61395ad470767318630624fc2bc05", "filename": "crates/ra_project_model/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_project_model%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_project_model%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2FCargo.toml?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -17,7 +17,7 @@ cargo_metadata = \"0.11.1\"\n arena = { path = \"../arena\" }\n ra_cfg = { path = \"../ra_cfg\" }\n ra_db = { path = \"../ra_db\" }\n-ra_toolchain = { path = \"../ra_toolchain\" }\n+toolchain = { path = \"../toolchain\" }\n ra_proc_macro =  { path = \"../ra_proc_macro\" }\n paths =  { path = \"../paths\" }\n stdx =  { path = \"../stdx\" }"}, {"sha": "abf8dca9644b3d7346bef79fe100cbd8d5321dfb", "filename": "crates/ra_project_model/src/cargo_workspace.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -140,7 +140,7 @@ impl CargoWorkspace {\n         cargo_features: &CargoConfig,\n     ) -> Result<CargoWorkspace> {\n         let mut meta = MetadataCommand::new();\n-        meta.cargo_path(ra_toolchain::cargo());\n+        meta.cargo_path(toolchain::cargo());\n         meta.manifest_path(cargo_toml.to_path_buf());\n         if cargo_features.all_features {\n             meta.features(CargoOpt::AllFeatures);\n@@ -288,7 +288,7 @@ pub fn load_extern_resources(\n     cargo_toml: &Path,\n     cargo_features: &CargoConfig,\n ) -> Result<ExternResources> {\n-    let mut cmd = Command::new(ra_toolchain::cargo());\n+    let mut cmd = Command::new(toolchain::cargo());\n     cmd.args(&[\"check\", \"--message-format=json\", \"--manifest-path\"]).arg(cargo_toml);\n     if cargo_features.all_features {\n         cmd.arg(\"--all-features\");"}, {"sha": "46f44910c03151781ecb65d8ae72c630d635ef26", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -513,7 +513,7 @@ fn get_rustc_cfg_options(target: Option<&str>) -> Vec<CfgFlag> {\n     }\n \n     let rustc_cfgs = {\n-        let mut cmd = Command::new(ra_toolchain::rustc());\n+        let mut cmd = Command::new(toolchain::rustc());\n         cmd.args(&[\"--print\", \"cfg\", \"-O\"]);\n         if let Some(target) = target {\n             cmd.args(&[\"--target\", target]);"}, {"sha": "8239797b6b763b4b8d43de5242dc529b26b52445", "filename": "crates/ra_project_model/src/sysroot.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -101,13 +101,13 @@ fn get_or_install_rust_src(cargo_toml: &AbsPath) -> Result<AbsPathBuf> {\n         return Ok(path);\n     }\n     let current_dir = cargo_toml.parent().unwrap();\n-    let mut rustc = Command::new(ra_toolchain::rustc());\n+    let mut rustc = Command::new(toolchain::rustc());\n     rustc.current_dir(current_dir).args(&[\"--print\", \"sysroot\"]);\n     let stdout = utf8_stdout(rustc)?;\n     let sysroot_path = AbsPath::assert(Path::new(stdout.trim()));\n     let mut src = get_rust_src(sysroot_path);\n     if src.is_none() {\n-        let mut rustup = Command::new(ra_toolchain::rustup());\n+        let mut rustup = Command::new(toolchain::rustup());\n         rustup.current_dir(current_dir).args(&[\"component\", \"add\", \"rust-src\"]);\n         utf8_stdout(rustup)?;\n         src = get_rust_src(sysroot_path);"}, {"sha": "d0f2ae73393f79e5f8e67202a01d66fb959cc24a", "filename": "crates/ra_ssr/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ssr%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ssr%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2FCargo.toml?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -11,7 +11,7 @@ repository = \"https://github.com/rust-analyzer/rust-analyzer\"\n doctest = false\n \n [dependencies]\n-ra_text_edit = { path = \"../ra_text_edit\" }\n+text_edit = { path = \"../text_edit\" }\n ra_syntax = { path = \"../ra_syntax\" }\n ra_db = { path = \"../ra_db\" }\n ra_ide_db = { path = \"../ra_ide_db\" }"}, {"sha": "74f9e7db6167aa8e9781eb581e15073145436229", "filename": "crates/ra_ssr/src/replacing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ssr%2Fsrc%2Freplacing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_ssr%2Fsrc%2Freplacing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Freplacing.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -4,8 +4,8 @@ use crate::matching::Var;\n use crate::{resolving::ResolvedRule, Match, SsrMatches};\n use ra_syntax::ast::{self, AstToken};\n use ra_syntax::{SyntaxElement, SyntaxKind, SyntaxNode, SyntaxToken, TextRange, TextSize};\n-use ra_text_edit::TextEdit;\n use rustc_hash::{FxHashMap, FxHashSet};\n+use text_edit::TextEdit;\n \n /// Returns a text edit that will replace each match in `matches` with its corresponding replacement\n /// template. Placeholders in the template will have been substituted with whatever they matched to\n@@ -24,7 +24,7 @@ fn matches_to_edit_at_offset(\n     relative_start: TextSize,\n     rules: &[ResolvedRule],\n ) -> TextEdit {\n-    let mut edit_builder = ra_text_edit::TextEditBuilder::default();\n+    let mut edit_builder = TextEdit::builder();\n     for m in &matches.matches {\n         edit_builder.replace(\n             m.range.range.checked_sub(relative_start).unwrap(),"}, {"sha": "f2789e6a351a46c72dc5f59ce336e007ef5fd7bb", "filename": "crates/ra_syntax/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_syntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_syntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2FCargo.toml?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -20,7 +20,7 @@ once_cell = \"1.3.1\"\n \n stdx = { path = \"../stdx\" }\n \n-ra_text_edit = { path = \"../ra_text_edit\" }\n+text_edit = { path = \"../text_edit\" }\n ra_parser = { path = \"../ra_parser\" }\n \n # This crate transitively depends on `smol_str` via `rowan`."}, {"sha": "4cec3c4cd8bf744c2379bd80d391825ff849916c", "filename": "crates/ra_syntax/fuzz/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_syntax%2Ffuzz%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_syntax%2Ffuzz%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ffuzz%2FCargo.toml?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -11,7 +11,7 @@ cargo-fuzz = true\n \n [dependencies]\n ra_syntax = { path = \"..\" }\n-ra_text_edit = { path = \"../../ra_text_edit\" }\n+text_edit = { path = \"../../text_edit\" }\n libfuzzer-sys = { git = \"https://github.com/rust-fuzz/libfuzzer-sys.git\" }\n \n # Prevent this from interfering with workspaces"}, {"sha": "6254b38ba1c6eb243ad6e2a7f4adf03007437132", "filename": "crates/ra_syntax/src/algo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Falgo.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -6,8 +6,8 @@ use std::{\n };\n \n use itertools::Itertools;\n-use ra_text_edit::TextEditBuilder;\n use rustc_hash::FxHashMap;\n+use text_edit::TextEditBuilder;\n \n use crate::{\n     AstNode, Direction, NodeOrToken, SyntaxElement, SyntaxKind, SyntaxNode, SyntaxNodePtr,"}, {"sha": "fbb97aa27369e840b0d4fa2ce719e24bc0a47017", "filename": "crates/ra_syntax/src/fuzz.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_syntax%2Fsrc%2Ffuzz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_syntax%2Fsrc%2Ffuzz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Ffuzz.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -5,7 +5,7 @@ use std::{\n     str::{self, FromStr},\n };\n \n-use ra_text_edit::Indel;\n+use text_edit::Indel;\n \n use crate::{validation, AstNode, SourceFile, TextRange};\n "}, {"sha": "465607f550f73efb50170868e693e1cea5c781b0", "filename": "crates/ra_syntax/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_syntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_syntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flib.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -39,8 +39,8 @@ pub mod fuzz;\n \n use std::{marker::PhantomData, sync::Arc};\n \n-use ra_text_edit::Indel;\n use stdx::format_to;\n+use text_edit::Indel;\n \n pub use crate::{\n     algo::InsertPosition,"}, {"sha": "6644ffca4fa7575e4eda7a81d1f6d9295a509332", "filename": "crates/ra_syntax/src/parsing/reparsing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -7,7 +7,7 @@\n //!     and try to parse only this block.\n \n use ra_parser::Reparser;\n-use ra_text_edit::Indel;\n+use text_edit::Indel;\n \n use crate::{\n     algo,"}, {"sha": "ef244da597051f5b3ee79c70143ae81150b4b60d", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -39,11 +39,11 @@ ra_ide = { path = \"../ra_ide\" }\n profile = { path = \"../profile\" }\n ra_project_model = { path = \"../ra_project_model\" }\n ra_syntax = { path = \"../ra_syntax\" }\n-ra_text_edit = { path = \"../ra_text_edit\" }\n+text_edit = { path = \"../text_edit\" }\n vfs = { path = \"../vfs\" }\n vfs-notify = { path = \"../vfs-notify\" }\n ra_cfg = { path = \"../ra_cfg\" }\n-ra_toolchain = { path = \"../ra_toolchain\" }\n+toolchain = { path = \"../toolchain\" }\n \n # This should only be used in CLI\n ra_db = { path = \"../ra_db\" }"}, {"sha": "07f4af3d3b60da670701d41dfe3378aab545d70f", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -692,7 +692,7 @@ pub(crate) fn handle_formatting(\n \n     let mut rustfmt = match &snap.config.rustfmt {\n         RustfmtConfig::Rustfmt { extra_args } => {\n-            let mut cmd = process::Command::new(ra_toolchain::rustfmt());\n+            let mut cmd = process::Command::new(toolchain::rustfmt());\n             cmd.args(extra_args);\n             if let Some(&crate_id) = crate_ids.first() {\n                 // Assume all crates are in the same edition"}, {"sha": "a69b1ef2b53068407331287f46ccbcc58dcfd573", "filename": "crates/text_edit/Cargo.toml", "status": "renamed", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Ftext_edit%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Ftext_edit%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftext_edit%2FCargo.toml?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -1,10 +1,9 @@\n [package]\n-edition = \"2018\"\n-name = \"ra_text_edit\"\n-version = \"0.1.0\"\n-authors = [\"rust-analyzer developers\"]\n-publish = false\n+name = \"text_edit\"\n+version = \"0.0.0\"\n license = \"MIT OR Apache-2.0\"\n+authors = [\"rust-analyzer developers\"]\n+edition = \"2018\"\n \n [lib]\n doctest = false", "previous_filename": "crates/ra_text_edit/Cargo.toml"}, {"sha": "ab8cd7fd1197a3b7cede4bc5759fd1f2de2f1965", "filename": "crates/text_edit/src/lib.rs", "status": "renamed", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Ftext_edit%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Ftext_edit%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftext_edit%2Fsrc%2Flib.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -3,8 +3,6 @@\n //! `rust-analyzer` never mutates text itself and only sends diffs to clients,\n //! so `TextEdit` is the ultimate representation of the work done by\n //! rust-analyzer.\n-use std::{slice, vec};\n-\n pub use text_size::{TextRange, TextSize};\n \n /// `InsertDelete` -- a single \"atomic\" change to text\n@@ -46,20 +44,24 @@ impl Indel {\n }\n \n impl TextEdit {\n+    pub fn builder() -> TextEditBuilder {\n+        TextEditBuilder::default()\n+    }\n+\n     pub fn insert(offset: TextSize, text: String) -> TextEdit {\n-        let mut builder = TextEditBuilder::default();\n+        let mut builder = TextEdit::builder();\n         builder.insert(offset, text);\n         builder.finish()\n     }\n \n     pub fn delete(range: TextRange) -> TextEdit {\n-        let mut builder = TextEditBuilder::default();\n+        let mut builder = TextEdit::builder();\n         builder.delete(range);\n         builder.finish()\n     }\n \n     pub fn replace(range: TextRange, replace_with: String) -> TextEdit {\n-        let mut builder = TextEditBuilder::default();\n+        let mut builder = TextEdit::builder();\n         builder.replace(range, replace_with);\n         builder.finish()\n     }\n@@ -72,8 +74,8 @@ impl TextEdit {\n         self.indels.is_empty()\n     }\n \n-    pub fn iter(&self) -> slice::Iter<'_, Indel> {\n-        self.indels.iter()\n+    pub fn iter(&self) -> std::slice::Iter<'_, Indel> {\n+        self.into_iter()\n     }\n \n     pub fn apply(&self, text: &mut String) {\n@@ -139,13 +141,22 @@ impl TextEdit {\n \n impl IntoIterator for TextEdit {\n     type Item = Indel;\n-    type IntoIter = vec::IntoIter<Self::Item>;\n+    type IntoIter = std::vec::IntoIter<Indel>;\n \n     fn into_iter(self) -> Self::IntoIter {\n         self.indels.into_iter()\n     }\n }\n \n+impl<'a> IntoIterator for &'a TextEdit {\n+    type Item = &'a Indel;\n+    type IntoIter = std::slice::Iter<'a, Indel>;\n+\n+    fn into_iter(self) -> Self::IntoIter {\n+        self.indels.iter()\n+    }\n+}\n+\n impl TextEditBuilder {\n     pub fn replace(&mut self, range: TextRange, replace_with: String) {\n         self.indels.push(Indel::replace(range, replace_with))", "previous_filename": "crates/ra_text_edit/src/lib.rs"}, {"sha": "4856668f844090b3d67c0d9627eab100c5b6eb17", "filename": "crates/toolchain/Cargo.toml", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Ftoolchain%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Ftoolchain%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftoolchain%2FCargo.toml?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -1,9 +1,9 @@\n [package]\n-edition = \"2018\"\n-name = \"ra_toolchain\"\n-version = \"0.1.0\"\n-authors = [\"rust-analyzer developers\"]\n+name = \"toolchain\"\n+version = \"0.0.0\"\n license = \"MIT OR Apache-2.0\"\n+authors = [\"rust-analyzer developers\"]\n+edition = \"2018\"\n \n [lib]\n doctest = false", "previous_filename": "crates/ra_toolchain/Cargo.toml"}, {"sha": "3b6886f5b576d715b98c419dfd02ad833f1e3f03", "filename": "crates/toolchain/src/lib.rs", "status": "renamed", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Ftoolchain%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/crates%2Ftoolchain%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftoolchain%2Fsrc%2Flib.rs?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -1,6 +1,4 @@\n-//! This crate contains a single public function\n-//! [`get_path_for_executable`](fn.get_path_for_executable.html).\n-//! See docs there for more information.\n+//! Discovery of `cargo` & `rustc` executables.\n use std::{env, iter, path::PathBuf};\n \n pub fn cargo() -> PathBuf {", "previous_filename": "crates/ra_toolchain/src/lib.rs"}, {"sha": "a5dc3cf0ccf59ee6ae3ec89eed109b0b53ce6ae6", "filename": "editors/code/src/toolchain.ts", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a573e088ac64eeeb19e4fc74be2ff019be510477/editors%2Fcode%2Fsrc%2Ftoolchain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/a573e088ac64eeeb19e4fc74be2ff019be510477/editors%2Fcode%2Fsrc%2Ftoolchain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Ftoolchain.ts?ref=a573e088ac64eeeb19e4fc74be2ff019be510477", "patch": "@@ -121,12 +121,12 @@ export class Cargo {\n     }\n }\n \n-/** Mirrors `ra_toolchain::cargo()` implementation */\n+/** Mirrors `toolchain::cargo()` implementation */\n export function cargoPath(): string {\n     return getPathForExecutable(\"cargo\");\n }\n \n-/** Mirrors `ra_toolchain::get_path_for_executable()` implementation */\n+/** Mirrors `toolchain::get_path_for_executable()` implementation */\n export const getPathForExecutable = memoize(\n     // We apply caching to decrease file-system interactions\n     (executableName: \"cargo\" | \"rustc\" | \"rustup\"): string => {"}]}