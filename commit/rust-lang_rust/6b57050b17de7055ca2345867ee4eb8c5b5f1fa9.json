{"sha": "6b57050b17de7055ca2345867ee4eb8c5b5f1fa9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiNTcwNTBiMTdkZTcwNTVjYTIzNDU4NjdlZTRlYjhjNWI1ZjFmYTk=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-02T03:35:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-02T03:35:46Z"}, "message": "Rollup merge of #73449 - ehuss:duplicate-lang-item, r=matthewjasper\n\nProvide more information on duplicate lang item error.\n\nThis gives some notes on the location of the files where the lang items were loaded from. Some duplicate lang item errors can be a little confusing, and this might help in diagnosing what has happened.\n\nHere's an example when hitting a bug with Cargo's build-std:\n\n```\nerror: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `try`.\n  |\n  = note: the lang item is first defined in crate `core` (which `z10` depends on)\n  = note: first definition in `core` loaded from /Users/eric/Proj/rust/cargo/scratch/z10/target/target/debug/deps/libcore-a764da499c7385f4.rmeta\n  = note: second definition in `core` loaded from /Users/eric/Proj/rust/cargo/scratch/z10/target/target/debug/deps/libcore-5b082675aea34986.rmeta\n```", "tree": {"sha": "be994523e256b95c6e6b8bf7519ddbd7706a54ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be994523e256b95c6e6b8bf7519ddbd7706a54ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe/VYTCRBK7hj4Ov3rIwAAdHIIAJNjxWdeHIBujoVtWHSHjF+f\n4HtlQWfrd5+nJQlazhTAdbEHqqJ0VBBnqqRLEz19EZCVryqg/IsTka45kGnHAeHq\nqU30TjJx73zPoCD2GKSz5UNdKdq8n0snyyoJ46UNtBpgeLeKCkFzr4bEmHCMX5ot\nNj09OyTmFnIG53IqDZR708BBp+GuIsk5Sp/aliD5v6+gpBbNTyz56qxr63QVEbw/\npmYIf8Di37ETwQJxaU+c+mOfUx8Xqh2HcjXph2V9FH9UQmqYtxTY4ddjnx0xZhzd\n2/ftRHRYV8auVrGmIi+YX51ZeXxOK8guS8LZrT3+Gl4LmqhU9LbALsmusjil35M=\n=fPBT\n-----END PGP SIGNATURE-----\n", "payload": "tree be994523e256b95c6e6b8bf7519ddbd7706a54ef\nparent 8ed5c0d37a79d22b919c969141f3453ade407ca1\nparent 1b3ef660261c880783db0154b89c09a1c4608845\nauthor Manish Goregaokar <manishsmail@gmail.com> 1593660946 -0700\ncommitter GitHub <noreply@github.com> 1593660946 -0700\n\nRollup merge of #73449 - ehuss:duplicate-lang-item, r=matthewjasper\n\nProvide more information on duplicate lang item error.\n\nThis gives some notes on the location of the files where the lang items were loaded from. Some duplicate lang item errors can be a little confusing, and this might help in diagnosing what has happened.\n\nHere's an example when hitting a bug with Cargo's build-std:\n\n```\nerror: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `try`.\n  |\n  = note: the lang item is first defined in crate `core` (which `z10` depends on)\n  = note: first definition in `core` loaded from /Users/eric/Proj/rust/cargo/scratch/z10/target/target/debug/deps/libcore-a764da499c7385f4.rmeta\n  = note: second definition in `core` loaded from /Users/eric/Proj/rust/cargo/scratch/z10/target/target/debug/deps/libcore-5b082675aea34986.rmeta\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9", "html_url": "https://github.com/rust-lang/rust/commit/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ed5c0d37a79d22b919c969141f3453ade407ca1", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ed5c0d37a79d22b919c969141f3453ade407ca1", "html_url": "https://github.com/rust-lang/rust/commit/8ed5c0d37a79d22b919c969141f3453ade407ca1"}, {"sha": "1b3ef660261c880783db0154b89c09a1c4608845", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b3ef660261c880783db0154b89c09a1c4608845", "html_url": "https://github.com/rust-lang/rust/commit/1b3ef660261c880783db0154b89c09a1c4608845"}], "stats": {"total": 46, "additions": 42, "deletions": 4}, "files": [{"sha": "abbe45fe02e25f3c2162a185ce75e9eb5e3eec61", "filename": "src/librustc_metadata/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=6b57050b17de7055ca2345867ee4eb8c5b5f1fa9", "patch": "@@ -239,6 +239,8 @@ provide! { <'tcx> tcx, def_id, other, cdata,\n \n         syms\n     }\n+\n+    crate_extern_paths => { cdata.source().paths().cloned().collect() }\n }\n \n pub fn provide(providers: &mut Providers<'_>) {"}, {"sha": "e7f9ad9d1cfd75443011b9d340e553c8dbce7a98", "filename": "src/librustc_middle/query/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Flibrustc_middle%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Flibrustc_middle%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fquery%2Fmod.rs?ref=6b57050b17de7055ca2345867ee4eb8c5b5f1fa9", "patch": "@@ -1042,6 +1042,10 @@ rustc_queries! {\n             eval_always\n             desc { \"looking up the extra filename for a crate\" }\n         }\n+        query crate_extern_paths(_: CrateNum) -> Vec<PathBuf> {\n+            eval_always\n+            desc { \"looking up the paths for extern crates\" }\n+        }\n     }\n \n     TypeChecking {"}, {"sha": "2ad49b1acce435c9ad1cac9f11bda2cdf60e0730", "filename": "src/librustc_middle/ty/query/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Flibrustc_middle%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Flibrustc_middle%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fquery%2Fmod.rs?ref=6b57050b17de7055ca2345867ee4eb8c5b5f1fa9", "patch": "@@ -57,6 +57,7 @@ use rustc_span::{Span, DUMMY_SP};\n use std::borrow::Cow;\n use std::collections::BTreeMap;\n use std::ops::Deref;\n+use std::path::PathBuf;\n use std::sync::Arc;\n \n #[macro_use]"}, {"sha": "0326591a931f5e3984d6859c585750b43c230ec6", "filename": "src/librustc_passes/lang_items.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Flibrustc_passes%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Flibrustc_passes%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flang_items.rs?ref=6b57050b17de7055ca2345867ee4eb8c5b5f1fa9", "patch": "@@ -146,6 +146,28 @@ impl LanguageItemCollector<'tcx> {\n                             ));\n                         }\n                     }\n+                    let mut note_def = |which, def_id: DefId| {\n+                        let crate_name = self.tcx.crate_name(def_id.krate);\n+                        let note = if def_id.is_local() {\n+                            format!(\"{} definition in the local crate (`{}`)\", which, crate_name)\n+                        } else {\n+                            let paths: Vec<_> = self\n+                                .tcx\n+                                .crate_extern_paths(def_id.krate)\n+                                .iter()\n+                                .map(|p| p.display().to_string())\n+                                .collect();\n+                            format!(\n+                                \"{} definition in `{}` loaded from {}\",\n+                                which,\n+                                crate_name,\n+                                paths.join(\", \")\n+                            )\n+                        };\n+                        err.note(&note);\n+                    };\n+                    note_def(\"first\", original_def_id);\n+                    note_def(\"second\", item_def_id);\n                 }\n                 err.emit();\n             }"}, {"sha": "776ecedea7e7eef68cceec287d9d0365aa0c767e", "filename": "src/test/ui/duplicate_entry_error.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Ftest%2Fui%2Fduplicate_entry_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Ftest%2Fui%2Fduplicate_entry_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fduplicate_entry_error.rs?ref=6b57050b17de7055ca2345867ee4eb8c5b5f1fa9", "patch": "@@ -1,3 +1,4 @@\n+// normalize-stderr-test \"loaded from .*libstd-.*.rlib\" -> \"loaded from SYSROOT/libstd-*.rlib\"\n // note-pattern: first defined in crate `std`.\n \n // Test for issue #31788 and E0152"}, {"sha": "61cccf40ed8a5133526ea9658019b050c7f4c6a2", "filename": "src/test/ui/duplicate_entry_error.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Ftest%2Fui%2Fduplicate_entry_error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Ftest%2Fui%2Fduplicate_entry_error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fduplicate_entry_error.stderr?ref=6b57050b17de7055ca2345867ee4eb8c5b5f1fa9", "patch": "@@ -1,5 +1,5 @@\n error[E0152]: found duplicate lang item `panic_impl`\n-  --> $DIR/duplicate_entry_error.rs:10:1\n+  --> $DIR/duplicate_entry_error.rs:11:1\n    |\n LL | / fn panic_impl(info: &PanicInfo) -> ! {\n LL | |\n@@ -8,6 +8,8 @@ LL | | }\n    | |_^\n    |\n    = note: the lang item is first defined in crate `std` (which `duplicate_entry_error` depends on)\n+   = note: first definition in `std` loaded from SYSROOT/libstd-*.rlib\n+   = note: second definition in the local crate (`duplicate_entry_error`)\n \n error: aborting due to previous error\n "}, {"sha": "d716ca1a14fdf3cbfafb57a116ab03198fa576b9", "filename": "src/test/ui/error-codes/E0152.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Ftest%2Fui%2Ferror-codes%2FE0152.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Ftest%2Fui%2Ferror-codes%2FE0152.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0152.rs?ref=6b57050b17de7055ca2345867ee4eb8c5b5f1fa9", "patch": "@@ -1,3 +1,4 @@\n+// normalize-stderr-test \"loaded from .*liballoc-.*.rlib\" -> \"loaded from SYSROOT/liballoc-*.rlib\"\n #![feature(lang_items)]\n \n #[lang = \"owned_box\"]"}, {"sha": "7445c2880af1c0a98e8b858439fa518a6cad7eb8", "filename": "src/test/ui/error-codes/E0152.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Ftest%2Fui%2Ferror-codes%2FE0152.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Ftest%2Fui%2Ferror-codes%2FE0152.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0152.stderr?ref=6b57050b17de7055ca2345867ee4eb8c5b5f1fa9", "patch": "@@ -1,10 +1,12 @@\n error[E0152]: found duplicate lang item `owned_box`\n-  --> $DIR/E0152.rs:4:1\n+  --> $DIR/E0152.rs:5:1\n    |\n LL | struct Foo;\n    | ^^^^^^^^^^^\n    |\n    = note: the lang item is first defined in crate `alloc` (which `std` depends on)\n+   = note: first definition in `alloc` loaded from SYSROOT/liballoc-*.rlib\n+   = note: second definition in the local crate (`E0152`)\n \n error: aborting due to previous error\n "}, {"sha": "6183c886cfac7194272c611349d46e9a15242061", "filename": "src/test/ui/panic-handler/panic-handler-std.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Ftest%2Fui%2Fpanic-handler%2Fpanic-handler-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Ftest%2Fui%2Fpanic-handler%2Fpanic-handler-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-handler%2Fpanic-handler-std.rs?ref=6b57050b17de7055ca2345867ee4eb8c5b5f1fa9", "patch": "@@ -1,3 +1,4 @@\n+// normalize-stderr-test \"loaded from .*libstd-.*.rlib\" -> \"loaded from SYSROOT/libstd-*.rlib\"\n // error-pattern: found duplicate lang item `panic_impl`\n \n "}, {"sha": "bb656089bcaffb0e20f3754722c2fd285dcda829", "filename": "src/test/ui/panic-handler/panic-handler-std.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Ftest%2Fui%2Fpanic-handler%2Fpanic-handler-std.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6b57050b17de7055ca2345867ee4eb8c5b5f1fa9/src%2Ftest%2Fui%2Fpanic-handler%2Fpanic-handler-std.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-handler%2Fpanic-handler-std.stderr?ref=6b57050b17de7055ca2345867ee4eb8c5b5f1fa9", "patch": "@@ -1,15 +1,17 @@\n error[E0152]: found duplicate lang item `panic_impl`\n-  --> $DIR/panic-handler-std.rs:7:1\n+  --> $DIR/panic-handler-std.rs:8:1\n    |\n LL | / fn panic(info: PanicInfo) -> ! {\n LL | |     loop {}\n LL | | }\n    | |_^\n    |\n    = note: the lang item is first defined in crate `std` (which `panic_handler_std` depends on)\n+   = note: first definition in `std` loaded from SYSROOT/libstd-*.rlib\n+   = note: second definition in the local crate (`panic_handler_std`)\n \n error: argument should be `&PanicInfo`\n-  --> $DIR/panic-handler-std.rs:7:16\n+  --> $DIR/panic-handler-std.rs:8:16\n    |\n LL | fn panic(info: PanicInfo) -> ! {\n    |                ^^^^^^^^^"}]}