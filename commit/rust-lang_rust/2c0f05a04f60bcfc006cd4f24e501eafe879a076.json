{"sha": "2c0f05a04f60bcfc006cd4f24e501eafe879a076", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMGYwNWEwNGY2MGJjZmMwMDZjZDRmMjRlNTAxZWFmZTg3OWEwNzY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-19T20:48:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-19T20:48:57Z"}, "message": "Rollup merge of #63699 - gilescope:async-move-diagnostic, r=estebank\n\nFix suggestion from incorrect `move async` to `async move`.\n\nPR for #61920. Happy with the test. There must be a better implementation though - possibly a MIR visitor to estabilsh a span that doesn't include the `async` keyword?", "tree": {"sha": "f6593dc21d33594f1c00665ba7a442b7d227c63e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6593dc21d33594f1c00665ba7a442b7d227c63e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c0f05a04f60bcfc006cd4f24e501eafe879a076", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdWws5CRBK7hj4Ov3rIwAAdHIIAGpcah24hppndUO3JdEFEx5I\n4V8ldQbG5itpKQ5QDorHcxt5XjwLXaAlqeeg+6XGLzF2PoW3Kyh1dCcQDgWAeVUO\nX1/TPTAiSBHaXWvL14VJRulAyi0n7SRQ7QbrfswCxMHtgAMZ8bNC36W8lXUwS/bV\nXe93PfwIcukzc3sX2BzPLCmgfrdLOMdjUVThC2K1hOjtGvDi+scRwLqRuFenhyGq\n8pBkoKk/vqcjQBs2YRcF3+5FRJYbZIwptRX6l3jQOl9hMDc+22lHRrzlC9H6PP17\n6kQoCl5KJcQZbKjb+gPAhvx6OZmjbZsy/rA2iP7WVK2AglJ694R3PasMiW3SI8E=\n=lTW0\n-----END PGP SIGNATURE-----\n", "payload": "tree f6593dc21d33594f1c00665ba7a442b7d227c63e\nparent a2080a60aca2caab01903573ab0730660d7cb8e5\nparent ef3e66d69f18574b3f32fca76d4324c486afa874\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1566247737 +0200\ncommitter GitHub <noreply@github.com> 1566247737 +0200\n\nRollup merge of #63699 - gilescope:async-move-diagnostic, r=estebank\n\nFix suggestion from incorrect `move async` to `async move`.\n\nPR for #61920. Happy with the test. There must be a better implementation though - possibly a MIR visitor to estabilsh a span that doesn't include the `async` keyword?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c0f05a04f60bcfc006cd4f24e501eafe879a076", "html_url": "https://github.com/rust-lang/rust/commit/2c0f05a04f60bcfc006cd4f24e501eafe879a076", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c0f05a04f60bcfc006cd4f24e501eafe879a076/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2080a60aca2caab01903573ab0730660d7cb8e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2080a60aca2caab01903573ab0730660d7cb8e5", "html_url": "https://github.com/rust-lang/rust/commit/a2080a60aca2caab01903573ab0730660d7cb8e5"}, {"sha": "ef3e66d69f18574b3f32fca76d4324c486afa874", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef3e66d69f18574b3f32fca76d4324c486afa874", "html_url": "https://github.com/rust-lang/rust/commit/ef3e66d69f18574b3f32fca76d4324c486afa874"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "247783c420e251d6d32b79835fba3e1dbb303379", "filename": "src/librustc_mir/borrow_check/conflict_errors.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2c0f05a04f60bcfc006cd4f24e501eafe879a076/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c0f05a04f60bcfc006cd4f24e501eafe879a076/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs?ref=2c0f05a04f60bcfc006cd4f24e501eafe879a076", "patch": "@@ -1190,7 +1190,16 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         );\n \n         let suggestion = match tcx.sess.source_map().span_to_snippet(args_span) {\n-            Ok(string) => format!(\"move {}\", string),\n+            Ok(mut string) => {\n+                if string.starts_with(\"async \") {\n+                    string.insert_str(6, \"move \");\n+                } else if string.starts_with(\"async|\") {\n+                    string.insert_str(5, \" move\");\n+                } else {\n+                    string.insert_str(0, \"move \");\n+                };\n+                string\n+            },\n             Err(_) => \"move |<args>| <body>\".to_string()\n         };\n "}, {"sha": "d2fa5d0a3d0f189b5507dd4c6c1566f866fbba5c", "filename": "src/test/ui/async-await/async-borrowck-escaping-closure-error.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2c0f05a04f60bcfc006cd4f24e501eafe879a076/src%2Ftest%2Fui%2Fasync-await%2Fasync-borrowck-escaping-closure-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c0f05a04f60bcfc006cd4f24e501eafe879a076/src%2Ftest%2Fui%2Fasync-await%2Fasync-borrowck-escaping-closure-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-borrowck-escaping-closure-error.rs?ref=2c0f05a04f60bcfc006cd4f24e501eafe879a076", "patch": "@@ -0,0 +1,10 @@\n+// edition:2018\n+#![feature(async_closure,async_await)]\n+fn foo() -> Box<dyn std::future::Future<Output = u32>> {\n+    let x = 0u32;\n+    Box::new((async || x)())\n+    //~^ ERROR E0373\n+}\n+\n+fn main() {\n+}"}, {"sha": "8bcfcf989208e05fbdbd5eba66d2176e1f09c824", "filename": "src/test/ui/async-await/async-borrowck-escaping-closure-error.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/2c0f05a04f60bcfc006cd4f24e501eafe879a076/src%2Ftest%2Fui%2Fasync-await%2Fasync-borrowck-escaping-closure-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2c0f05a04f60bcfc006cd4f24e501eafe879a076/src%2Ftest%2Fui%2Fasync-await%2Fasync-borrowck-escaping-closure-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-borrowck-escaping-closure-error.stderr?ref=2c0f05a04f60bcfc006cd4f24e501eafe879a076", "patch": "@@ -0,0 +1,21 @@\n+error[E0373]: closure may outlive the current function, but it borrows `x`, which is owned by the current function\n+  --> $DIR/async-borrowck-escaping-closure-error.rs:5:15\n+   |\n+LL |     Box::new((async || x)())\n+   |               ^^^^^^^^ - `x` is borrowed here\n+   |               |\n+   |               may outlive borrowed value `x`\n+   |\n+note: closure is returned here\n+  --> $DIR/async-borrowck-escaping-closure-error.rs:5:5\n+   |\n+LL |     Box::new((async || x)())\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n+help: to force the closure to take ownership of `x` (and any other referenced variables), use the `move` keyword\n+   |\n+LL |     Box::new((async move || x)())\n+   |               ^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0373`."}]}