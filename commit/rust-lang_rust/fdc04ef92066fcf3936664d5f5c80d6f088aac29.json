{"sha": "fdc04ef92066fcf3936664d5f5c80d6f088aac29", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkYzA0ZWY5MjA2NmZjZjM5MzY2NjRkNWY1YzgwZDZmMDg4YWFjMjk=", "commit": {"author": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2020-01-28T13:33:52Z"}, "committer": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2020-01-28T13:33:52Z"}, "message": "Don't do check progress update for fresh crates", "tree": {"sha": "e5097f3d1cc602fabbd6ccc11f96390ec5257399", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5097f3d1cc602fabbd6ccc11f96390ec5257399"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdc04ef92066fcf3936664d5f5c80d6f088aac29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdc04ef92066fcf3936664d5f5c80d6f088aac29", "html_url": "https://github.com/rust-lang/rust/commit/fdc04ef92066fcf3936664d5f5c80d6f088aac29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdc04ef92066fcf3936664d5f5c80d6f088aac29/comments", "author": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "912776fd9547d1d28b4cba7e4a41e5391fc12c21", "url": "https://api.github.com/repos/rust-lang/rust/commits/912776fd9547d1d28b4cba7e4a41e5391fc12c21", "html_url": "https://github.com/rust-lang/rust/commit/912776fd9547d1d28b4cba7e4a41e5391fc12c21"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "934379dcf87efc36d991e10288981e951d3500e2", "filename": "crates/ra_cargo_watch/src/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fdc04ef92066fcf3936664d5f5c80d6f088aac29/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdc04ef92066fcf3936664d5f5c80d6f088aac29/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs?ref=fdc04ef92066fcf3936664d5f5c80d6f088aac29", "patch": "@@ -359,6 +359,14 @@ impl WatchThread {\n                     }\n                 };\n \n+                // Skip certain kinds of messages to only spend time on what's useful\n+                match &message {\n+                    Message::CompilerArtifact(artifact) if artifact.fresh => continue,\n+                    Message::BuildScriptExecuted(_) => continue,\n+                    Message::Unknown => continue,\n+                    _ => {}\n+                }\n+\n                 match message_send.send(CheckEvent::Msg(message)) {\n                     Ok(()) => {}\n                     Err(_err) => {"}]}