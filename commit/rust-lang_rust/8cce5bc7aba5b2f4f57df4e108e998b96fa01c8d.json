{"sha": "8cce5bc7aba5b2f4f57df4e108e998b96fa01c8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjY2U1YmM3YWJhNWIyZjRmNTdkZjRlMTA4ZTk5OGI5NmZhMDFjOGQ=", "commit": {"author": {"name": "Alex Burka", "email": "alex@alexburka.com", "date": "2017-04-19T02:29:40Z"}, "committer": {"name": "Alex Burka", "email": "alex@alexburka.com", "date": "2017-07-11T20:27:55Z"}, "message": "use :vis in thread_local!", "tree": {"sha": "9498c0a356ed2650db8f14fdf630af9dad75cadc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9498c0a356ed2650db8f14fdf630af9dad75cadc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cce5bc7aba5b2f4f57df4e108e998b96fa01c8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cce5bc7aba5b2f4f57df4e108e998b96fa01c8d", "html_url": "https://github.com/rust-lang/rust/commit/8cce5bc7aba5b2f4f57df4e108e998b96fa01c8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cce5bc7aba5b2f4f57df4e108e998b96fa01c8d/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6a2d7e82249bba271599732e16ffba176ae7de8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6a2d7e82249bba271599732e16ffba176ae7de8", "html_url": "https://github.com/rust-lang/rust/commit/b6a2d7e82249bba271599732e16ffba176ae7de8"}], "stats": {"total": 39, "additions": 9, "deletions": 30}, "files": [{"sha": "dda069324b08d0e78f990f075a9d8fb833a38503", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8cce5bc7aba5b2f4f57df4e108e998b96fa01c8d/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cce5bc7aba5b2f4f57df4e108e998b96fa01c8d/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=8cce5bc7aba5b2f4f57df4e108e998b96fa01c8d", "patch": "@@ -277,6 +277,7 @@\n #![feature(link_args)]\n #![feature(linkage)]\n #![feature(macro_reexport)]\n+#![feature(macro_vis_matcher)]\n #![feature(needs_panic_runtime)]\n #![feature(needs_drop)]\n #![feature(never_type)]"}, {"sha": "c3aa3ff79c6161e5efc4e8efb40e2ca2f3928876", "filename": "src/libstd/thread/local.rs", "status": "modified", "additions": 8, "deletions": 30, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/8cce5bc7aba5b2f4f57df4e108e998b96fa01c8d/src%2Flibstd%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cce5bc7aba5b2f4f57df4e108e998b96fa01c8d/src%2Flibstd%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Flocal.rs?ref=8cce5bc7aba5b2f4f57df4e108e998b96fa01c8d", "patch": "@@ -139,37 +139,15 @@ macro_rules! thread_local {\n     // empty (base case for the recursion)\n     () => {};\n \n-    // process multiple declarations where the first one is private\n-    ($(#[$attr:meta])* static $name:ident: $t:ty = $init:expr; $($rest:tt)*) => (\n-        __thread_local_inner!($(#[$attr])* [] $name, $t, $init);\n+    // process multiple declarations\n+    ($(#[$attr:meta])* $vis:vis static $name:ident: $t:ty = $init:expr; $($rest:tt)*) => (\n+        __thread_local_inner!($(#[$attr])* $vis $name, $t, $init);\n         thread_local!($($rest)*);\n     );\n \n-    // handle a single private declaration\n-    ($(#[$attr:meta])* static $name:ident: $t:ty = $init:expr) => (\n-        __thread_local_inner!($(#[$attr])* [] $name, $t, $init);\n-    );\n-\n-    // handle multiple declarations where the first one is public\n-    ($(#[$attr:meta])* pub static $name:ident: $t:ty = $init:expr; $($rest:tt)*) => (\n-        __thread_local_inner!($(#[$attr])* [pub] $name, $t, $init);\n-        thread_local!($($rest)*);\n-    );\n-\n-    // handle a single public declaration\n-    ($(#[$attr:meta])* pub static $name:ident: $t:ty = $init:expr) => (\n-        __thread_local_inner!($(#[$attr])* [pub] $name, $t, $init);\n-    );\n-\n-    // handle multiple declarations where the first one is restricted public\n-    ($(#[$attr:meta])* pub $vis:tt static $name:ident: $t:ty = $init:expr; $($rest:tt)*) => (\n-        __thread_local_inner!($(#[$attr])* [pub $vis] $name, $t, $init);\n-        thread_local!($($rest)*);\n-    );\n-\n-    // handle a single restricted public declaration\n-    ($(#[$attr:meta])* pub $vis:tt static $name:ident: $t:ty = $init:expr) => (\n-        __thread_local_inner!($(#[$attr])* [pub $vis] $name, $t, $init);\n+    // handle a single declaration\n+    ($(#[$attr:meta])* $vis:vis static $name:ident: $t:ty = $init:expr) => (\n+        __thread_local_inner!($(#[$attr])* $vis $name, $t, $init);\n     );\n }\n \n@@ -180,8 +158,8 @@ macro_rules! thread_local {\n #[macro_export]\n #[allow_internal_unstable]\n macro_rules! __thread_local_inner {\n-    ($(#[$attr:meta])* [$($vis:tt)*] $name:ident, $t:ty, $init:expr) => {\n-        $(#[$attr])* $($vis)* static $name: $crate::thread::LocalKey<$t> = {\n+    ($(#[$attr:meta])* $vis:vis $name:ident, $t:ty, $init:expr) => {\n+        $(#[$attr])* $vis static $name: $crate::thread::LocalKey<$t> = {\n             fn __init() -> $t { $init }\n \n             fn __getit() -> $crate::option::Option<"}]}