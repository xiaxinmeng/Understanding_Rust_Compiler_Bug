{"sha": "c758a79390bacd26fac1adeb2998047bb044c32f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3NThhNzkzOTBiYWNkMjZmYWMxYWRlYjI5OTgwNDdiYjA0NGMzMmY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-12T21:13:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-12T21:13:30Z"}, "message": "Merge pull request #688 from RalfJung/rustup\n\nrustup", "tree": {"sha": "3cb56dce677885e473a5a4c0e816aad244f82454", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3cb56dce677885e473a5a4c0e816aad244f82454"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c758a79390bacd26fac1adeb2998047bb044c32f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcsP96CRBK7hj4Ov3rIwAAdHIIAHJvdA4IX/BafiEsSWbLkVFg\nvqobaVJx0B7CBn9nDR4QOMJSK72BEc00jLO9g6+nOt+IL5iE6mM7HrgA95D5NJ6e\nyjRat+X8Ib9lJfm8+6Tp6iEdNBtsUtHXJtr9N+vmdwM/IbSpq5YGZPFGrSxqXMfj\ntlz8lmNkvAvqGTJM677Nu9QeifzjKGjCGCHK/jM3cq9RT71f3TUuFCna/7T58HtD\nCbO2Q8aOAQk5K+pPF7JvtlIR9h0u9MnIU9cPhOEzfuDkFSSNFJt82YeUJuzQQ0fq\nejEoGXKD06bMeOFCs4Cszd3LOMKF34lTugW74OT2iwl+c1+Q9aEPNeQtArWaZDc=\n=kkil\n-----END PGP SIGNATURE-----\n", "payload": "tree 3cb56dce677885e473a5a4c0e816aad244f82454\nparent 164a89fa1266de6fbe5c758d9b1210b8a2b6acfd\nparent aa79244b62c7a4506213829629f4993daa6f0cf5\nauthor Ralf Jung <post@ralfj.de> 1555103610 +0200\ncommitter GitHub <noreply@github.com> 1555103610 +0200\n\nMerge pull request #688 from RalfJung/rustup\n\nrustup"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c758a79390bacd26fac1adeb2998047bb044c32f", "html_url": "https://github.com/rust-lang/rust/commit/c758a79390bacd26fac1adeb2998047bb044c32f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c758a79390bacd26fac1adeb2998047bb044c32f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "164a89fa1266de6fbe5c758d9b1210b8a2b6acfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/164a89fa1266de6fbe5c758d9b1210b8a2b6acfd", "html_url": "https://github.com/rust-lang/rust/commit/164a89fa1266de6fbe5c758d9b1210b8a2b6acfd"}, {"sha": "aa79244b62c7a4506213829629f4993daa6f0cf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa79244b62c7a4506213829629f4993daa6f0cf5", "html_url": "https://github.com/rust-lang/rust/commit/aa79244b62c7a4506213829629f4993daa6f0cf5"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "29649e957f2cd4a677ddeb37d2fef8d49f9d3d8b", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c758a79390bacd26fac1adeb2998047bb044c32f/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/c758a79390bacd26fac1adeb2998047bb044c32f/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=c758a79390bacd26fac1adeb2998047bb044c32f", "patch": "@@ -1 +1 @@\n-2226c09699a96520238e162777f44504f4a0a1a7\n+df25d79a33b0c82b716699a75a41bfdc6089850a"}, {"sha": "1608ea1888942834af37d87235973dd6b107c7fe", "filename": "tests/run-pass/async-fn.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c758a79390bacd26fac1adeb2998047bb044c32f/tests%2Frun-pass%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c758a79390bacd26fac1adeb2998047bb044c32f/tests%2Frun-pass%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fasync-fn.rs?ref=c758a79390bacd26fac1adeb2998047bb044c32f", "patch": "@@ -24,18 +24,22 @@ fn raw_waker_clone(_this: *const ()) -> RawWaker {\n fn raw_waker_wake(_this: *const ()) {\n     panic!(\"unimplemented\");\n }\n+fn raw_waker_wake_by_ref(_this: *const ()) {\n+    panic!(\"unimplemented\");\n+}\n fn raw_waker_drop(_this: *const ()) {}\n \n static RAW_WAKER: RawWakerVTable = RawWakerVTable::new(\n     raw_waker_clone,\n     raw_waker_wake,\n+    raw_waker_wake_by_ref,\n     raw_waker_drop,\n );\n \n fn main() {\n     let x = 5;\n     let mut fut = foo(&x, 7);\n-    let waker = unsafe { Waker::new_unchecked(RawWaker::new(ptr::null(), &RAW_WAKER)) };\n+    let waker = unsafe { Waker::from_raw(RawWaker::new(ptr::null(), &RAW_WAKER)) };\n     let mut context = Context::from_waker(&waker);\n     assert_eq!(unsafe { Pin::new_unchecked(&mut fut) }.poll(&mut context), Poll::Ready(31));\n }"}]}