{"sha": "e37db13b02557b887de295a63b4b96021042ccde", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzN2RiMTNiMDI1NTdiODg3ZGUyOTVhNjNiNGI5NjAyMTA0MmNjZGU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-02-26T02:24:58Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-02-26T02:24:58Z"}, "message": "rustc: Eliminate the \"ty_params\" field from the tag info", "tree": {"sha": "9207d3b9c480f6cfd6c82a19d3ed7f9b7fa9827f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9207d3b9c480f6cfd6c82a19d3ed7f9b7fa9827f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e37db13b02557b887de295a63b4b96021042ccde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e37db13b02557b887de295a63b4b96021042ccde", "html_url": "https://github.com/rust-lang/rust/commit/e37db13b02557b887de295a63b4b96021042ccde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e37db13b02557b887de295a63b4b96021042ccde/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "699eb69cc85f663d62200ee64ec9f2a606fcf440", "url": "https://api.github.com/repos/rust-lang/rust/commits/699eb69cc85f663d62200ee64ec9f2a606fcf440", "html_url": "https://github.com/rust-lang/rust/commit/699eb69cc85f663d62200ee64ec9f2a606fcf440"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "b70568b4517241e5b6849e5560bd64f37f3e9e1f", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e37db13b02557b887de295a63b4b96021042ccde/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37db13b02557b887de295a63b4b96021042ccde/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=e37db13b02557b887de295a63b4b96021042ccde", "patch": "@@ -60,9 +60,7 @@ type glue_fns = rec(ValueRef activate_glue,\n                     ValueRef bzero_glue);\n \n tag arity { nullary; n_ary; }\n-type tag_info = rec(type_handle th,\n-                    mutable uint size,\n-                    vec[ast.ty_param] ty_params);\n+type tag_info = rec(type_handle th, mutable uint size);\n \n state type crate_ctxt = rec(session.session sess,\n                             ModuleRef llmod,\n@@ -1456,6 +1454,15 @@ fn type_of_variant(@crate_ctxt cx, &ast.variant v) -> TypeRef {\n     ret T_struct(lltys);\n }\n \n+// Returns the type parameters of a tag.\n+fn tag_ty_params(@crate_ctxt cx, ast.def_id id) -> vec[ast.ty_param] {\n+    check (cx.items.contains_key(id));\n+    alt (cx.items.get(id).node) {\n+        case (ast.item_tag(_, _, ?tps, _)) { ret tps; }\n+    }\n+    fail;   // not reached\n+}\n+\n // Returns the variants in a tag.\n fn tag_variants(@crate_ctxt cx, ast.def_id id) -> vec[ast.variant] {\n     check (cx.items.contains_key(id));\n@@ -1551,13 +1558,15 @@ fn iter_structural_ty(@block_ctxt cx,\n                             auto llvarp = variant_cx.build.\n                                 TruncOrBitCast(llunion_ptr, T_ptr(llvarty));\n \n+                            auto ty_params = tag_ty_params(cx.fcx.ccx, tid);\n+\n                             auto j = 0u;\n                             for (ty.arg a in args) {\n                                 auto v = vec(C_int(0), C_int(j as int));\n                                 auto llfldp = variant_cx.build.GEP(llvarp, v);\n \n                                 auto ty_subst = ty.substitute_ty_params(\n-                                    info.ty_params, tps, a.ty);\n+                                    ty_params, tps, a.ty);\n \n                                 auto llfld =\n                                     load_scalar_or_boxed(variant_cx,\n@@ -4437,8 +4446,7 @@ fn collect_item(&@crate_ctxt cx, @ast.item i) -> @crate_ctxt {\n             auto vi = new_def_hash[uint]();\n             auto navi = new_def_hash[uint]();\n             cx.tags.insert(tag_id, @rec(th=mk_type_handle(),\n-                                        mutable size=0u,\n-                                        ty_params=tps));\n+                                        mutable size=0u));\n             cx.items.insert(tag_id, i);\n         }\n "}]}