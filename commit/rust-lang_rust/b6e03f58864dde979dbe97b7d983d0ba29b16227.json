{"sha": "b6e03f58864dde979dbe97b7d983d0ba29b16227", "node_id": "C_kwDOAAsO6NoAKGI2ZTAzZjU4ODY0ZGRlOTc5ZGJlOTdiN2Q5ODNkMGJhMjliMTYyMjc", "commit": {"author": {"name": "Jacob Lifshay", "email": "programmerjake@gmail.com", "date": "2022-03-11T22:54:36Z"}, "committer": {"name": "Jacob Lifshay", "email": "programmerjake@gmail.com", "date": "2022-03-12T00:27:00Z"}, "message": "Change beginner's guide to explain Reducing rather than Horizontal.", "tree": {"sha": "5bf8eae224c04001019cf05b9ea56267b598e489", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bf8eae224c04001019cf05b9ea56267b598e489"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6e03f58864dde979dbe97b7d983d0ba29b16227", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6e03f58864dde979dbe97b7d983d0ba29b16227", "html_url": "https://github.com/rust-lang/rust/commit/b6e03f58864dde979dbe97b7d983d0ba29b16227", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6e03f58864dde979dbe97b7d983d0ba29b16227/comments", "author": {"login": "programmerjake", "id": 4584340, "node_id": "MDQ6VXNlcjQ1ODQzNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4584340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/programmerjake", "html_url": "https://github.com/programmerjake", "followers_url": "https://api.github.com/users/programmerjake/followers", "following_url": "https://api.github.com/users/programmerjake/following{/other_user}", "gists_url": "https://api.github.com/users/programmerjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/programmerjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/programmerjake/subscriptions", "organizations_url": "https://api.github.com/users/programmerjake/orgs", "repos_url": "https://api.github.com/users/programmerjake/repos", "events_url": "https://api.github.com/users/programmerjake/events{/privacy}", "received_events_url": "https://api.github.com/users/programmerjake/received_events", "type": "User", "site_admin": false}, "committer": {"login": "programmerjake", "id": 4584340, "node_id": "MDQ6VXNlcjQ1ODQzNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4584340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/programmerjake", "html_url": "https://github.com/programmerjake", "followers_url": "https://api.github.com/users/programmerjake/followers", "following_url": "https://api.github.com/users/programmerjake/following{/other_user}", "gists_url": "https://api.github.com/users/programmerjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/programmerjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/programmerjake/subscriptions", "organizations_url": "https://api.github.com/users/programmerjake/orgs", "repos_url": "https://api.github.com/users/programmerjake/repos", "events_url": "https://api.github.com/users/programmerjake/events{/privacy}", "received_events_url": "https://api.github.com/users/programmerjake/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c196b8abaafaf360647513c64fac0c8568f9b747", "url": "https://api.github.com/repos/rust-lang/rust/commits/c196b8abaafaf360647513c64fac0c8568f9b747", "html_url": "https://github.com/rust-lang/rust/commit/c196b8abaafaf360647513c64fac0c8568f9b747"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "75158e5aa855017f4e4289bc4be21305ba2edd30", "filename": "beginners-guide.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b6e03f58864dde979dbe97b7d983d0ba29b16227/beginners-guide.md", "raw_url": "https://github.com/rust-lang/rust/raw/b6e03f58864dde979dbe97b7d983d0ba29b16227/beginners-guide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/beginners-guide.md?ref=b6e03f58864dde979dbe97b7d983d0ba29b16227", "patch": "@@ -33,7 +33,7 @@ SIMD has a few special vocabulary terms you should know:\n \n * **Vertical:** When an operation is \"vertical\", each lane processes individually without regard to the other lanes in the same vector. For example, a \"vertical add\" between two vectors would add lane 0 in `a` with lane 0 in `b`, with the total in lane 0 of `out`, and then the same thing for lanes 1, 2, etc. Most SIMD operations are vertical operations, so if your problem is a vertical problem then you can probably solve it with SIMD.\n \n-* **Horizontal:** When an operation is \"horizontal\", the lanes within a single vector interact in some way. A \"horizontal add\" might add up lane 0 of `a` with lane 1 of `a`, with the total in lane 0 of `out`.\n+* **Reducing/Reduce:** When an operation is \"reducing\" (functions named `reduce_*`), the lanes within a single vector are merged using some operation such as addition, returning the merged value as a scalar. For instance, a reducing add would return the sum of all the lanes' values.\n \n * **Target Feature:** Rust calls a CPU architecture extension a `target_feature`. Proper SIMD requires various CPU extensions to be enabled (details below). Don't confuse this with `feature`, which is a Cargo crate concept.\n \n@@ -83,4 +83,4 @@ Fortunately, most SIMD types have a fairly predictable size. `i32x4` is bit-equi\n However, this is not the same as alignment. Computer architectures generally prefer aligned accesses, especially when moving data between memory and vector registers, and while some support specialized operations that can bend the rules to help with this, unaligned access is still typically slow, or even undefined behavior. In addition, different architectures can require different alignments when interacting with their native SIMD types. For this reason, any `#[repr(simd)]` type has a non-portable alignment. If it is necessary to directly interact with the alignment of these types, it should be via [`mem::align_of`].\n \n [`mem::transmute`]: https://doc.rust-lang.org/core/mem/fn.transmute.html\n-[`mem::align_of`]: https://doc.rust-lang.org/core/mem/fn.align_of.html\n\\ No newline at end of file\n+[`mem::align_of`]: https://doc.rust-lang.org/core/mem/fn.align_of.html"}]}