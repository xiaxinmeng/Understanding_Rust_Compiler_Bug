{"sha": "a528e3730240c6da598fc71954314235fa6a11bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1MjhlMzczMDI0MGM2ZGE1OThmYzcxOTU0MzE0MjM1ZmE2YTExYmI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-20T11:01:55Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-20T11:01:55Z"}, "message": "Fix codegen of ctlz and cttz intrinsics", "tree": {"sha": "c3fad364d86c5d3bf05852b928bfeb7b45dbf2e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3fad364d86c5d3bf05852b928bfeb7b45dbf2e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a528e3730240c6da598fc71954314235fa6a11bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a528e3730240c6da598fc71954314235fa6a11bb", "html_url": "https://github.com/rust-lang/rust/commit/a528e3730240c6da598fc71954314235fa6a11bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a528e3730240c6da598fc71954314235fa6a11bb/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d2db1b75d445263d63b002dd1df502e18cd3d65", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d2db1b75d445263d63b002dd1df502e18cd3d65", "html_url": "https://github.com/rust-lang/rust/commit/8d2db1b75d445263d63b002dd1df502e18cd3d65"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "80049a2a55f10e5697c2b0926d25eb79e0853894", "filename": "src/intrinsics.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a528e3730240c6da598fc71954314235fa6a11bb/src%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a528e3730240c6da598fc71954314235fa6a11bb/src%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics.rs?ref=a528e3730240c6da598fc71954314235fa6a11bb", "patch": "@@ -681,7 +681,8 @@ pub fn codegen_intrinsic_call<'tcx>(\n                 let msb_lz = fx.bcx.ins().clz(msb);\n                 let msb_is_zero = fx.bcx.ins().icmp_imm(IntCC::Equal, msb, 0);\n                 let lsb_lz_plus_64 = fx.bcx.ins().iadd_imm(lsb_lz, 64);\n-                fx.bcx.ins().select(msb_is_zero, lsb_lz_plus_64, msb_lz)\n+                let res = fx.bcx.ins().select(msb_is_zero, lsb_lz_plus_64, msb_lz);\n+                fx.bcx.ins().uextend(types::I128, res)\n             } else {\n                 fx.bcx.ins().clz(arg)\n             };\n@@ -697,7 +698,8 @@ pub fn codegen_intrinsic_call<'tcx>(\n                 let msb_tz = fx.bcx.ins().ctz(msb);\n                 let lsb_is_zero = fx.bcx.ins().icmp_imm(IntCC::Equal, lsb, 0);\n                 let msb_tz_plus_64 = fx.bcx.ins().iadd_imm(msb_tz, 64);\n-                fx.bcx.ins().select(lsb_is_zero, msb_tz_plus_64, lsb_tz)\n+                let res = fx.bcx.ins().select(lsb_is_zero, msb_tz_plus_64, lsb_tz);\n+                fx.bcx.ins().uextend(types::I128, res)\n             } else {\n                 fx.bcx.ins().ctz(arg)\n             };"}]}