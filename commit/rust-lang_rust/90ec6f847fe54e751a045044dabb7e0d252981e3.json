{"sha": "90ec6f847fe54e751a045044dabb7e0d252981e3", "node_id": "C_kwDOAAsO6NoAKDkwZWM2Zjg0N2ZlNTRlNzUxYTA0NTA0NGRhYmI3ZTBkMjUyOTgxZTM", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-09-23T07:12:59Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-09-23T07:12:59Z"}, "message": "Show errors instead of hiding them due to an earlier error", "tree": {"sha": "f3edb4425088b87e91b90967b13f999017f5033d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3edb4425088b87e91b90967b13f999017f5033d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90ec6f847fe54e751a045044dabb7e0d252981e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90ec6f847fe54e751a045044dabb7e0d252981e3", "html_url": "https://github.com/rust-lang/rust/commit/90ec6f847fe54e751a045044dabb7e0d252981e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90ec6f847fe54e751a045044dabb7e0d252981e3/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ace12c409ef59c654e3f683dd5534a258945a77", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ace12c409ef59c654e3f683dd5534a258945a77", "html_url": "https://github.com/rust-lang/rust/commit/5ace12c409ef59c654e3f683dd5534a258945a77"}], "stats": {"total": 76, "additions": 61, "deletions": 15}, "files": [{"sha": "6e5b8f491eab5ef9b878d84657bc87cf3a3cf71a", "filename": "src/test/ui/type-alias-impl-trait/implied_lifetime_wf_check3.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/90ec6f847fe54e751a045044dabb7e0d252981e3/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fimplied_lifetime_wf_check3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90ec6f847fe54e751a045044dabb7e0d252981e3/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fimplied_lifetime_wf_check3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fimplied_lifetime_wf_check3.rs?ref=90ec6f847fe54e751a045044dabb7e0d252981e3", "patch": "@@ -6,6 +6,7 @@ mod test_lifetime_param {\n     fn assert_static<'a: 'static>() {}\n     //~^ WARN: unnecessary lifetime parameter `'a`\n     fn test<'a>() where Ty<'a>: 'static { assert_static::<'a>() }\n+    //~^ ERROR: lifetime may not live long enough\n }\n \n mod test_higher_kinded_lifetime_param {\n@@ -14,29 +15,29 @@ mod test_higher_kinded_lifetime_param {\n     fn assert_static<'a: 'static>() {}\n     //~^ WARN: unnecessary lifetime parameter `'a`\n     fn test<'a>() where for<'b> Ty<'b>: 'a { assert_static::<'a>() }\n+    //~^ ERROR: lifetime may not live long enough\n }\n \n mod test_higher_kinded_lifetime_param2 {\n     fn assert_static<'a: 'static>() {}\n     //~^ WARN: unnecessary lifetime parameter `'a`\n     fn test<'a>() { assert_static::<'a>() }\n-    // no error because all the other errors happen first and then we abort before\n-    // emitting an error here.\n+    //~^ ERROR: lifetime may not live long enough\n }\n \n mod test_type_param {\n     type Ty<A> = impl Sized;\n     fn defining<A>(s: A) -> Ty<A> { s }\n     fn assert_static<A: 'static>() {}\n     fn test<A>() where Ty<A>: 'static { assert_static::<A>() }\n+    //~^ ERROR: parameter type `A` may not live long enough\n }\n \n-mod test_type_param_static {\n-    type Ty<A> = impl Sized + 'static;\n-    //~^ ERROR: the parameter type `A` may not live long enough\n-    fn defining<A: 'static>(s: A) -> Ty<A> { s }\n-    fn assert_static<A: 'static>() {}\n-    fn test<A>() where Ty<A>: 'static { assert_static::<A>() }\n+mod test_implied_from_fn_sig {\n+    type Opaque<T: 'static> = impl Sized;\n+    fn defining<T: 'static>() -> Opaque<T> {}\n+    fn assert_static<T: 'static>() {}\n+    fn test<T>(_: Opaque<T>) { assert_static::<T>(); }\n }\n \n fn main() {}"}, {"sha": "887620a4d50eca3aa32496ebb24f564767820320", "filename": "src/test/ui/type-alias-impl-trait/implied_lifetime_wf_check3.stderr", "status": "modified", "additions": 27, "deletions": 7, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/90ec6f847fe54e751a045044dabb7e0d252981e3/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fimplied_lifetime_wf_check3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90ec6f847fe54e751a045044dabb7e0d252981e3/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fimplied_lifetime_wf_check3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fimplied_lifetime_wf_check3.stderr?ref=90ec6f847fe54e751a045044dabb7e0d252981e3", "patch": "@@ -7,32 +7,52 @@ LL |     fn assert_static<'a: 'static>() {}\n    = help: you can use the `'static` lifetime directly, in place of `'a`\n \n warning: unnecessary lifetime parameter `'a`\n-  --> $DIR/implied_lifetime_wf_check3.rs:14:22\n+  --> $DIR/implied_lifetime_wf_check3.rs:15:22\n    |\n LL |     fn assert_static<'a: 'static>() {}\n    |                      ^^\n    |\n    = help: you can use the `'static` lifetime directly, in place of `'a`\n \n warning: unnecessary lifetime parameter `'a`\n-  --> $DIR/implied_lifetime_wf_check3.rs:20:22\n+  --> $DIR/implied_lifetime_wf_check3.rs:22:22\n    |\n LL |     fn assert_static<'a: 'static>() {}\n    |                      ^^\n    |\n    = help: you can use the `'static` lifetime directly, in place of `'a`\n \n+error: lifetime may not live long enough\n+  --> $DIR/implied_lifetime_wf_check3.rs:8:43\n+   |\n+LL |     fn test<'a>() where Ty<'a>: 'static { assert_static::<'a>() }\n+   |             -- lifetime `'a` defined here ^^^^^^^^^^^^^^^^^^^ requires that `'a` must outlive `'static`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/implied_lifetime_wf_check3.rs:17:46\n+   |\n+LL |     fn test<'a>() where for<'b> Ty<'b>: 'a { assert_static::<'a>() }\n+   |             -- lifetime `'a` defined here    ^^^^^^^^^^^^^^^^^^^ requires that `'a` must outlive `'static`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/implied_lifetime_wf_check3.rs:24:21\n+   |\n+LL |     fn test<'a>() { assert_static::<'a>() }\n+   |             --      ^^^^^^^^^^^^^^^^^^^ requires that `'a` must outlive `'static`\n+   |             |\n+   |             lifetime `'a` defined here\n+\n error[E0310]: the parameter type `A` may not live long enough\n-  --> $DIR/implied_lifetime_wf_check3.rs:35:18\n+  --> $DIR/implied_lifetime_wf_check3.rs:32:41\n    |\n-LL |     type Ty<A> = impl Sized + 'static;\n-   |                  ^^^^^^^^^^^^^^^^^^^^ ...so that the type `A` will meet its required lifetime bounds\n+LL |     fn test<A>() where Ty<A>: 'static { assert_static::<A>() }\n+   |                                         ^^^^^^^^^^^^^^^^^^ ...so that the type `A` will meet its required lifetime bounds\n    |\n help: consider adding an explicit lifetime bound...\n    |\n-LL |     type Ty<A: 'static> = impl Sized + 'static;\n+LL |     fn test<A: 'static>() where Ty<A>: 'static { assert_static::<A>() }\n    |              +++++++++\n \n-error: aborting due to previous error; 3 warnings emitted\n+error: aborting due to 4 previous errors; 3 warnings emitted\n \n For more information about this error, try `rustc --explain E0310`."}, {"sha": "ac32dbde04b1c8e3fe8d05b032912a3a943c395b", "filename": "src/test/ui/type-alias-impl-trait/implied_lifetime_wf_check4_static.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/90ec6f847fe54e751a045044dabb7e0d252981e3/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fimplied_lifetime_wf_check4_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90ec6f847fe54e751a045044dabb7e0d252981e3/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fimplied_lifetime_wf_check4_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fimplied_lifetime_wf_check4_static.rs?ref=90ec6f847fe54e751a045044dabb7e0d252981e3", "patch": "@@ -0,0 +1,11 @@\n+#![feature(type_alias_impl_trait)]\n+\n+mod test_type_param_static {\n+    type Ty<A> = impl Sized + 'static;\n+    //~^ ERROR: the parameter type `A` may not live long enough\n+    fn defining<A: 'static>(s: A) -> Ty<A> { s }\n+    fn assert_static<A: 'static>() {}\n+    fn test<A>() where Ty<A>: 'static { assert_static::<A>() }\n+}\n+\n+fn main() {}"}, {"sha": "47bc31e78c34f8c42c775f95f841d67d86749cc9", "filename": "src/test/ui/type-alias-impl-trait/implied_lifetime_wf_check4_static.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/90ec6f847fe54e751a045044dabb7e0d252981e3/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fimplied_lifetime_wf_check4_static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90ec6f847fe54e751a045044dabb7e0d252981e3/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fimplied_lifetime_wf_check4_static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fimplied_lifetime_wf_check4_static.stderr?ref=90ec6f847fe54e751a045044dabb7e0d252981e3", "patch": "@@ -0,0 +1,14 @@\n+error[E0310]: the parameter type `A` may not live long enough\n+  --> $DIR/implied_lifetime_wf_check4_static.rs:4:18\n+   |\n+LL |     type Ty<A> = impl Sized + 'static;\n+   |                  ^^^^^^^^^^^^^^^^^^^^ ...so that the type `A` will meet its required lifetime bounds\n+   |\n+help: consider adding an explicit lifetime bound...\n+   |\n+LL |     type Ty<A: 'static> = impl Sized + 'static;\n+   |              +++++++++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0310`."}]}