{"sha": "29ed2e0e7317726ebcfcfbc6edbb8d170bcc01cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5ZWQyZTBlNzMxNzcyNmViY2ZjZmJjNmVkYmI4ZDE3MGJjYzAxY2M=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-12-24T14:54:44Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-12-24T14:54:44Z"}, "message": "Simplify", "tree": {"sha": "c4175238f40031e1d59369864f8d771920c75ea7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4175238f40031e1d59369864f8d771920c75ea7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29ed2e0e7317726ebcfcfbc6edbb8d170bcc01cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29ed2e0e7317726ebcfcfbc6edbb8d170bcc01cc", "html_url": "https://github.com/rust-lang/rust/commit/29ed2e0e7317726ebcfcfbc6edbb8d170bcc01cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29ed2e0e7317726ebcfcfbc6edbb8d170bcc01cc/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "581419fd785a33fee7797d064dc0f5ddf2235300", "url": "https://api.github.com/repos/rust-lang/rust/commits/581419fd785a33fee7797d064dc0f5ddf2235300", "html_url": "https://github.com/rust-lang/rust/commit/581419fd785a33fee7797d064dc0f5ddf2235300"}], "stats": {"total": 42, "additions": 7, "deletions": 35}, "files": [{"sha": "7e53ed3614237f2463d500dffe1bd11db3ffb2a0", "filename": "crates/ide/src/diagnostics.rs", "status": "modified", "additions": 7, "deletions": 35, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/29ed2e0e7317726ebcfcfbc6edbb8d170bcc01cc/crates%2Fide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29ed2e0e7317726ebcfcfbc6edbb8d170bcc01cc/crates%2Fide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics.rs?ref=29ed2e0e7317726ebcfcfbc6edbb8d170bcc01cc", "patch": "@@ -248,35 +248,7 @@ mod tests {\n     ///  * a diagnostic is produced\n     ///  * this diagnostic fix trigger range touches the input cursor position\n     ///  * that the contents of the file containing the cursor match `after` after the diagnostic fix is applied\n-    pub(super) fn check_fix(ra_fixture_before: &str, ra_fixture_after: &str) {\n-        let after = trim_indent(ra_fixture_after);\n-\n-        let (analysis, file_position) = fixture::position(ra_fixture_before);\n-        let diagnostic = analysis\n-            .diagnostics(&DiagnosticsConfig::default(), file_position.file_id)\n-            .unwrap()\n-            .pop()\n-            .unwrap();\n-        let mut fix = diagnostic.fix.unwrap();\n-        let edit = fix.source_change.source_file_edits.pop().unwrap().edit;\n-        let target_file_contents = analysis.file_text(file_position.file_id).unwrap();\n-        let actual = {\n-            let mut actual = target_file_contents.to_string();\n-            edit.apply(&mut actual);\n-            actual\n-        };\n-\n-        assert_eq_text!(&after, &actual);\n-        assert!(\n-            fix.fix_trigger_range.contains_inclusive(file_position.offset),\n-            \"diagnostic fix range {:?} does not touch cursor position {:?}\",\n-            fix.fix_trigger_range,\n-            file_position.offset\n-        );\n-    }\n-\n-    /// Similar to `check_fix`, but applies all the available fixes.\n-    fn check_fixes(ra_fixture_before: &str, ra_fixture_after: &str) {\n+    pub(crate) fn check_fix(ra_fixture_before: &str, ra_fixture_after: &str) {\n         let after = trim_indent(ra_fixture_after);\n \n         let (analysis, file_position) = fixture::position(ra_fixture_before);\n@@ -802,7 +774,7 @@ struct Foo {\n \n     #[test]\n     fn test_rename_incorrect_case() {\n-        check_fixes(\n+        check_fix(\n             r#\"\n pub struct test_struct<|> { one: i32 }\n \n@@ -819,7 +791,7 @@ pub fn some_fn(val: TestStruct) -> TestStruct {\n \"#,\n         );\n \n-        check_fixes(\n+        check_fix(\n             r#\"\n pub fn some_fn(NonSnakeCase<|>: u8) -> u8 {\n     NonSnakeCase\n@@ -832,7 +804,7 @@ pub fn some_fn(non_snake_case: u8) -> u8 {\n \"#,\n         );\n \n-        check_fixes(\n+        check_fix(\n             r#\"\n pub fn SomeFn<|>(val: u8) -> u8 {\n     if val != 0 { SomeFn(val - 1) } else { val }\n@@ -845,7 +817,7 @@ pub fn some_fn(val: u8) -> u8 {\n \"#,\n         );\n \n-        check_fixes(\n+        check_fix(\n             r#\"\n fn some_fn() {\n     let whatAWeird_Formatting<|> = 10;\n@@ -874,7 +846,7 @@ fn foo() {\n \n     #[test]\n     fn test_rename_incorrect_case_struct_method() {\n-        check_fixes(\n+        check_fix(\n             r#\"\n pub struct TestStruct;\n \n@@ -906,6 +878,6 @@ impl TestStruct {\n             analysis.diagnostics(&DiagnosticsConfig::default(), file_position.file_id).unwrap();\n         assert_eq!(diagnostics.len(), 1);\n \n-        check_fixes(input, expected);\n+        check_fix(input, expected);\n     }\n }"}]}