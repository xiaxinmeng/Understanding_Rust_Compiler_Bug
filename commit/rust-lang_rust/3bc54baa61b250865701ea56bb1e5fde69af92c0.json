{"sha": "3bc54baa61b250865701ea56bb1e5fde69af92c0", "node_id": "C_kwDOAAsO6NoAKDNiYzU0YmFhNjFiMjUwODY1NzAxZWE1NmJiMWU1ZmRlNjlhZjkyYzA", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-12-12T13:11:33Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-12-12T13:16:51Z"}, "message": "normalize receiver substs and erase the regions\n\nuse a smaller example", "tree": {"sha": "7aa80a83c61ac3f9b3c364e90c0a933a26f70633", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7aa80a83c61ac3f9b3c364e90c0a933a26f70633"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bc54baa61b250865701ea56bb1e5fde69af92c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bc54baa61b250865701ea56bb1e5fde69af92c0", "html_url": "https://github.com/rust-lang/rust/commit/3bc54baa61b250865701ea56bb1e5fde69af92c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bc54baa61b250865701ea56bb1e5fde69af92c0/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f34356eaceeb5540f4e2e20abc1d824daf395806", "url": "https://api.github.com/repos/rust-lang/rust/commits/f34356eaceeb5540f4e2e20abc1d824daf395806", "html_url": "https://github.com/rust-lang/rust/commit/f34356eaceeb5540f4e2e20abc1d824daf395806"}], "stats": {"total": 67, "additions": 66, "deletions": 1}, "files": [{"sha": "2da98d3342984bb7231514d46caeec899e442075", "filename": "compiler/rustc_ty_utils/src/instance.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3bc54baa61b250865701ea56bb1e5fde69af92c0/compiler%2Frustc_ty_utils%2Fsrc%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bc54baa61b250865701ea56bb1e5fde69af92c0/compiler%2Frustc_ty_utils%2Fsrc%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Finstance.rs?ref=3bc54baa61b250865701ea56bb1e5fde69af92c0", "patch": "@@ -44,7 +44,13 @@ fn inner_resolve_instance<'tcx>(\n \n     let result = if let Some(trait_def_id) = tcx.trait_of_item(def.did) {\n         debug!(\" => associated item, attempting to find impl in param_env {:#?}\", param_env);\n-        resolve_associated_item(tcx, def.did, param_env, trait_def_id, substs)\n+        resolve_associated_item(\n+            tcx,\n+            def.did,\n+            param_env,\n+            trait_def_id,\n+            tcx.normalize_erasing_regions(param_env, substs),\n+        )\n     } else {\n         let ty = tcx.type_of(def.def_id_for_type_of());\n         let item_type = tcx.subst_and_normalize_erasing_regions(substs, param_env, ty);"}, {"sha": "dd14e05fd49b23177f5eb1a9ce0bda937315445f", "filename": "src/test/ui/associated-item/issue-105449.rs", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/3bc54baa61b250865701ea56bb1e5fde69af92c0/src%2Ftest%2Fui%2Fassociated-item%2Fissue-105449.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bc54baa61b250865701ea56bb1e5fde69af92c0/src%2Ftest%2Fui%2Fassociated-item%2Fissue-105449.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-item%2Fissue-105449.rs?ref=3bc54baa61b250865701ea56bb1e5fde69af92c0", "patch": "@@ -0,0 +1,59 @@\n+// check-pass\n+// compile-flags: -C debug_assertions=yes -Zunstable-options\n+\n+#[allow(dead_code)]\n+fn problematic_function<Space>()\n+where\n+    DefaultAlloc: FinAllok<R1, Space>,\n+{\n+    let e = Edge2dElement;\n+    let _ = Into::<Point>::into(e.map_reference_coords());\n+}\n+impl<N> Allocator<N, R0> for DefaultAlloc {\n+    type Buffer = MStorage;\n+}\n+impl<N> Allocator<N, R1> for DefaultAlloc {\n+    type Buffer = MStorage;\n+}\n+impl<N, D> From<VectorN<N, D>> for Point\n+where\n+    DefaultAlloc: Allocator<N, D>,\n+{\n+    fn from(_: VectorN<N, D>) -> Self {\n+        unimplemented!()\n+    }\n+}\n+impl<GeometryDim, NodalDim> FinAllok<GeometryDim, NodalDim> for DefaultAlloc\n+where\n+    DefaultAlloc: Allocator<Ure, GeometryDim>,\n+    DefaultAlloc: Allocator<Ure, NodalDim>\n+{\n+}\n+impl FiniteElement<R1> for Edge2dElement {\n+    fn map_reference_coords(&self) -> VectorN<Ure, R1> {\n+        unimplemented!()\n+    }\n+}\n+type VectorN<N, R> = (N, R, <DefaultAlloc as Allocator<N, R>>::Buffer);\n+struct DefaultAlloc;\n+struct R0;\n+struct R1;\n+struct MStorage;\n+struct Point;\n+struct Edge2dElement;\n+struct Ure;\n+trait Allocator<N, R> {\n+    type Buffer;\n+}\n+trait FinAllok<GeometryDim, NodalDim>:\n+    Allocator<Ure, GeometryDim> +\n+    Allocator<Ure, NodalDim> +\n+{\n+}\n+trait FiniteElement<Rau>\n+where\n+    DefaultAlloc: FinAllok<Rau, Rau>,\n+{\n+    fn map_reference_coords(&self) -> VectorN<Ure, Rau>;\n+}\n+fn main() {}"}]}