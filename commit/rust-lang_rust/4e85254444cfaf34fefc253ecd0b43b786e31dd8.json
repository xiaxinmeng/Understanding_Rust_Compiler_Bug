{"sha": "4e85254444cfaf34fefc253ecd0b43b786e31dd8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlODUyNTQ0NDRjZmFmMzRmZWZjMjUzZWNkMGI0M2I3ODZlMzFkZDg=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-08T19:03:27Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-08T19:03:27Z"}, "message": "vscode: add docs to installation module interfaces and sanity check to donloadFile()", "tree": {"sha": "0862443f6b1df3811184ba546b0b32c3404584f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0862443f6b1df3811184ba546b0b32c3404584f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e85254444cfaf34fefc253ecd0b43b786e31dd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e85254444cfaf34fefc253ecd0b43b786e31dd8", "html_url": "https://github.com/rust-lang/rust/commit/4e85254444cfaf34fefc253ecd0b43b786e31dd8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e85254444cfaf34fefc253ecd0b43b786e31dd8/comments", "author": null, "committer": null, "parents": [{"sha": "6ef912f9259a78495fdba6a37bef7d78c4e0a4fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ef912f9259a78495fdba6a37bef7d78c4e0a4fd", "html_url": "https://github.com/rust-lang/rust/commit/6ef912f9259a78495fdba6a37bef7d78c4e0a4fd"}], "stats": {"total": 43, "additions": 39, "deletions": 4}, "files": [{"sha": "0cc5fc0cb2cf90ef2ecf50bb6a6deb658c0e7d29", "filename": "editors/code/src/installation/download_file.ts", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4e85254444cfaf34fefc253ecd0b43b786e31dd8/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_file.ts", "raw_url": "https://github.com/rust-lang/rust/raw/4e85254444cfaf34fefc253ecd0b43b786e31dd8/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_file.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_file.ts?ref=4e85254444cfaf34fefc253ecd0b43b786e31dd8", "patch": "@@ -1,17 +1,25 @@\n import fetch from \"node-fetch\";\n import { throttle } from \"throttle-debounce\";\n import * as fs from \"fs\";\n+import { strict as assert } from \"assert\";\n \n+/**\n+ * Downloads file from `url` and stores it at `destFilePath`.\n+ * `onProgress` callback is periodically called to track the progress of downloading,\n+ * it gets the already read and total amount of bytes to read as its parameters.\n+ */\n export async function downloadFile(\n     url: string,\n     destFilePath: fs.PathLike,\n     onProgress: (readBytes: number, totalBytes: number) => void\n ): Promise<void> {\n-    onProgress = throttle(1000, /* noTrailing: */ true, onProgress);\n+    onProgress = throttle(500, /* noTrailing: */ true, onProgress);\n \n     const response = await fetch(url);\n \n     const totalBytes = Number(response.headers.get('content-length'));\n+    assert(!Number.isNaN(totalBytes), \"Sanity check of content-length protocol\");\n+\n     let readBytes = 0;\n \n     return new Promise<void>((resolve, reject) => response.body"}, {"sha": "03eac5b797a1c9348217a46277b8c9d398e2a640", "filename": "editors/code/src/installation/interfaces.ts", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/4e85254444cfaf34fefc253ecd0b43b786e31dd8/editors%2Fcode%2Fsrc%2Finstallation%2Finterfaces.ts", "raw_url": "https://github.com/rust-lang/rust/raw/4e85254444cfaf34fefc253ecd0b43b786e31dd8/editors%2Fcode%2Fsrc%2Finstallation%2Finterfaces.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Finterfaces.ts?ref=4e85254444cfaf34fefc253ecd0b43b786e31dd8", "patch": "@@ -3,24 +3,51 @@ export interface GithubRepo {\n     owner: string;\n }\n \n+/**\n+ * Metadata about particular artifact retrieved from GitHub releases.\n+ */\n export interface ArtifactMetadata {\n     releaseName: string;\n     downloadUrl: string;\n }\n \n-\n+/**\n+ * Type tag for `BinarySource` discriminated union.\n+ */\n export enum BinarySourceType { ExplicitPath, GithubBinary }\n \n-export type BinarySource = EplicitPathSource | GithubBinarySource;\n+/**\n+ * Represents the source of a binary artifact which is either specified by the user\n+ * explicitly, or bundled by this extension from GitHub releases.\n+ */\n+export type BinarySource = ExplicitPathSource | GithubBinarySource;\n+\n \n-export interface EplicitPathSource {\n+export interface ExplicitPathSource {\n     type: BinarySourceType.ExplicitPath;\n+\n+    /**\n+     * Filesystem path to the binary specified by the user explicitly.\n+     */\n     path: string;\n }\n \n export interface GithubBinarySource {\n     type: BinarySourceType.GithubBinary;\n+\n+    /**\n+     * Repository where the binary is stored.\n+     */\n     repo: GithubRepo;\n+\n+    /**\n+     * Directory on the filesystem where the bundled binary is stored.\n+     */\n     dir: string;\n+\n+    /**\n+     * Name of the binary file. It is stored under the same name on GitHub releases\n+     * and in local `.dir`.\n+     */\n     file: string;\n }"}]}