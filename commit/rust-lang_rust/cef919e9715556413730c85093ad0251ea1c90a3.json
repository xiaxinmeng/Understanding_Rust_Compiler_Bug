{"sha": "cef919e9715556413730c85093ad0251ea1c90a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlZjkxOWU5NzE1NTU2NDEzNzMwYzg1MDkzYWQwMjUxZWExYzkwYTM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-12-30T20:19:16Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-12-30T20:19:16Z"}, "message": "Address review comments: Remove new `PathResult` variant", "tree": {"sha": "f76045fdd7595b2aa394eb85a7a4cec8b3d3dfb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f76045fdd7595b2aa394eb85a7a4cec8b3d3dfb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cef919e9715556413730c85093ad0251ea1c90a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cef919e9715556413730c85093ad0251ea1c90a3", "html_url": "https://github.com/rust-lang/rust/commit/cef919e9715556413730c85093ad0251ea1c90a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cef919e9715556413730c85093ad0251ea1c90a3/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a2c3011067ffa1ff935b7d415da9e9fa74b70ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a2c3011067ffa1ff935b7d415da9e9fa74b70ea", "html_url": "https://github.com/rust-lang/rust/commit/5a2c3011067ffa1ff935b7d415da9e9fa74b70ea"}], "stats": {"total": 21, "additions": 6, "deletions": 15}, "files": [{"sha": "47f9ad5398bcacc1bda9678445d21e2d38f7d878", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cef919e9715556413730c85093ad0251ea1c90a3/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cef919e9715556413730c85093ad0251ea1c90a3/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=cef919e9715556413730c85093ad0251ea1c90a3", "patch": "@@ -1034,8 +1034,6 @@ enum PathResult<'a> {\n     NonModule(PathResolution),\n     Indeterminate,\n     Failed(Span, String, bool /* is the error from the last segment? */),\n-    /// Encountered an error that is reported elsewhere\n-    Ignore,\n }\n \n enum ModuleKind {\n@@ -1768,7 +1766,6 @@ impl<'a> Resolver<'a> {\n                 error_callback(self, span, ResolutionError::FailedToResolve(&msg));\n                 Def::Err\n             }\n-            PathResult::Ignore => Def::Err,\n         };\n \n         let segments: Vec<_> = segments.iter().map(|seg| {\n@@ -3696,7 +3693,7 @@ impl<'a> Resolver<'a> {\n                 resolve_error(self, span, ResolutionError::FailedToResolve(&msg));\n                 err_path_resolution()\n             }\n-            PathResult::Module(..) | PathResult::Failed(..) | PathResult::Ignore => return None,\n+            PathResult::Module(..) | PathResult::Failed(..) => return None,\n             PathResult::Indeterminate => bug!(\"indetermined path result in resolve_qpath\"),\n         };\n \n@@ -3928,11 +3925,11 @@ impl<'a> Resolver<'a> {\n                         });\n                         if let Some(candidate) = candidates.get(0) {\n                             format!(\"did you mean `{}`?\", candidate.path)\n-                        } else if !ident.is_used_keyword() {\n+                        } else if !ident.is_reserved() {\n                             format!(\"maybe a missing `extern crate {};`?\", ident)\n                         } else {\n                             // the parser will already have complained about the keyword being used\n-                            return PathResult::Ignore;\n+                            return PathResult::NonModule(err_path_resolution());\n                         }\n                     } else if i == 0 {\n                         format!(\"use of undeclared type or module `{}`\", ident)"}, {"sha": "379ebe239947424b873d28e9c1ce949dda831563", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cef919e9715556413730c85093ad0251ea1c90a3/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cef919e9715556413730c85093ad0251ea1c90a3/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=cef919e9715556413730c85093ad0251ea1c90a3", "patch": "@@ -364,8 +364,7 @@ impl<'a> Resolver<'a> {\n                     Ok(path_res.base_def())\n                 }\n                 PathResult::Indeterminate if !force => return Err(Determinacy::Undetermined),\n-                PathResult::NonModule(..) | PathResult::Indeterminate |\n-                PathResult::Failed(..) | PathResult::Ignore => {\n+                PathResult::NonModule(..) | PathResult::Indeterminate | PathResult::Failed(..) => {\n                     Err(Determinacy::Determined)\n                 }\n                 PathResult::Module(..) => unreachable!(),\n@@ -930,8 +929,7 @@ impl<'a> Resolver<'a> {\n                     let def = path_res.base_def();\n                     check_consistency(self, &path, path_span, kind, initial_def, def);\n                 }\n-                path_res @ PathResult::NonModule(..) | path_res @ PathResult::Failed(..) |\n-                path_res @ PathResult::Ignore => {\n+                path_res @ PathResult::NonModule(..) | path_res @ PathResult::Failed(..) => {\n                     let (span, msg) = if let PathResult::Failed(span, msg, ..) = path_res {\n                         (span, msg)\n                     } else {"}, {"sha": "ba4b18abdfc98469fbf5ecbdbcf570beb57ed729", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cef919e9715556413730c85093ad0251ea1c90a3/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cef919e9715556413730c85093ad0251ea1c90a3/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=cef919e9715556413730c85093ad0251ea1c90a3", "patch": "@@ -767,8 +767,7 @@ impl<'a, 'b:'a> ImportResolver<'a, 'b> {\n             match path_res {\n                 PathResult::Module(module) => module,\n                 PathResult::Indeterminate => return false,\n-                PathResult::NonModule(..) | PathResult::Failed(..) |\n-                PathResult::Ignore => return true,\n+                PathResult::NonModule(..) | PathResult::Failed(..) => return true,\n             }\n         };\n \n@@ -862,9 +861,6 @@ impl<'a, 'b:'a> ImportResolver<'a, 'b> {\n \n                 module\n             }\n-            PathResult::Ignore => {\n-                return None;\n-            }\n             PathResult::Failed(span, msg, false) => {\n                 if no_ambiguity {\n                     assert!(directive.imported_module.get().is_none());"}]}