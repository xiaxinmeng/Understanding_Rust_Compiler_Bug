{"sha": "8f57be5bffca9de896ee12d0f480ed3f474bc0a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNTdiZTViZmZjYTlkZTg5NmVlMTJkMGY0ODBlZDNmNDc0YmMwYTI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-14T07:27:28Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-14T23:14:43Z"}, "message": "rustc: Rename mk_codemap_handler to mk_handler", "tree": {"sha": "87addac5fe6aef8cf58f6f97b20462fea1629656", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87addac5fe6aef8cf58f6f97b20462fea1629656"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f57be5bffca9de896ee12d0f480ed3f474bc0a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f57be5bffca9de896ee12d0f480ed3f474bc0a2", "html_url": "https://github.com/rust-lang/rust/commit/8f57be5bffca9de896ee12d0f480ed3f474bc0a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f57be5bffca9de896ee12d0f480ed3f474bc0a2/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77e95dcf9f7bdaf4f73c780ccba8f32ab7e00f1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/77e95dcf9f7bdaf4f73c780ccba8f32ab7e00f1a", "html_url": "https://github.com/rust-lang/rust/commit/77e95dcf9f7bdaf4f73c780ccba8f32ab7e00f1a"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "e624b2d4e5ce797c373c0354700c65f986631d88", "filename": "src/cargo/cargo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f57be5bffca9de896ee12d0f480ed3f474bc0a2/src%2Fcargo%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f57be5bffca9de896ee12d0f480ed3f474bc0a2/src%2Fcargo%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rs?ref=8f57be5bffca9de896ee12d0f480ed3f474bc0a2", "patch": "@@ -104,7 +104,7 @@ fn load_pkg(filename: str) -> option::t<pkg> {\n     let sess = @{\n         cm: cm,\n         mutable next_id: 0,\n-        diagnostic: diagnostic::mk_codemap_handler(cm, none)\n+        diagnostic: diagnostic::mk_handler(cm, none)\n     };\n     let c = parser::parse_crate_from_crate_file(filename, [], sess);\n "}, {"sha": "627ff44f5d476318479a35ac086450bf0238c418", "filename": "src/comp/driver/diagnostic.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8f57be5bffca9de896ee12d0f480ed3f474bc0a2/src%2Fcomp%2Fdriver%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f57be5bffca9de896ee12d0f480ed3f474bc0a2/src%2Fcomp%2Fdriver%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Fdiagnostic.rs?ref=8f57be5bffca9de896ee12d0f480ed3f474bc0a2", "patch": "@@ -5,7 +5,7 @@ import codemap::span;\n \n export emitter, emit;\n export level, fatal, error, warning, note;\n-export handler, mk_codemap_handler;\n+export handler, mk_handler;\n \n type emitter = fn@(cmsp: option<(codemap::codemap, span)>,\n                    msg: str, lvl: level);\n@@ -81,8 +81,8 @@ impl codemap_handler of handler for codemap_t {\n     fn unimpl(msg: str) -> ! { self.bug(\"unimplemented \" + msg); }\n }\n \n-fn mk_codemap_handler(cm: codemap::codemap,\n-                      emitter: option<emitter>) -> handler {\n+fn mk_handler(cm: codemap::codemap,\n+              emitter: option<emitter>) -> handler {\n \n     let emit = alt emitter {\n       some(e) { e }"}, {"sha": "c779151f95132e9c39394163a6491e92eae1a668", "filename": "src/comp/driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f57be5bffca9de896ee12d0f480ed3f474bc0a2/src%2Fcomp%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f57be5bffca9de896ee12d0f480ed3f474bc0a2/src%2Fcomp%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Fdriver.rs?ref=8f57be5bffca9de896ee12d0f480ed3f474bc0a2", "patch": "@@ -462,7 +462,7 @@ fn build_session(sopts: @session::options, input: str,\n         sopts.addl_lib_search_paths);\n     let codemap = codemap::new_codemap();\n     let diagnostic_handler =\n-        diagnostic::mk_codemap_handler(codemap, some(demitter));\n+        diagnostic::mk_handler(codemap, some(demitter));\n     @{targ_cfg: target_cfg,\n       opts: sopts,\n       cstore: cstore,"}, {"sha": "69f27216516d23c148c5c2b73bed7f5519d5fadb", "filename": "src/fuzzer/fuzzer.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8f57be5bffca9de896ee12d0f480ed3f474bc0a2/src%2Ffuzzer%2Ffuzzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f57be5bffca9de896ee12d0f480ed3f474bc0a2/src%2Ffuzzer%2Ffuzzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffuzzer%2Ffuzzer.rs?ref=8f57be5bffca9de896ee12d0f480ed3f474bc0a2", "patch": "@@ -262,7 +262,7 @@ fn check_variants_T<T: copy>(\n                 let str3 =\n                     as_str(bind pprust::print_crate(\n                         codemap,\n-                        diagnostic::mk_codemap_handler(codemap, none),\n+                        diagnostic::mk_handler(codemap, none),\n                         crate2,\n                         filename,\n                         io::string_reader(\"\"), _,\n@@ -419,7 +419,7 @@ fn parse_and_print(code: str) -> str {\n     let sess = @{\n         cm: cm,\n         mutable next_id: 0,\n-        diagnostic: diagnostic::mk_codemap_handler(cm, none)\n+        diagnostic: diagnostic::mk_handler(cm, none)\n     };\n     write_file(filename, code);\n     let crate = parser::parse_crate_from_source_str(\n@@ -566,7 +566,7 @@ fn check_variants(files: [str], cx: context) {\n         let sess = @{\n             cm: cm,\n             mutable next_id: 0,\n-            diagnostic: diagnostic::mk_codemap_handler(cm, none)\n+            diagnostic: diagnostic::mk_handler(cm, none)\n         };\n         let crate =\n             parser::parse_crate_from_source_str("}, {"sha": "95a25507766e81cfe087fc3f4bbab068128e9c44", "filename": "src/rustdoc/rustdoc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f57be5bffca9de896ee12d0f480ed3f474bc0a2/src%2Frustdoc%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f57be5bffca9de896ee12d0f480ed3f474bc0a2/src%2Frustdoc%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Frustdoc.rs?ref=8f57be5bffca9de896ee12d0f480ed3f474bc0a2", "patch": "@@ -194,7 +194,7 @@ fn main(argv: [str]) {\n     let sess = @{\n         cm: cm,\n         mutable next_id: 0,\n-        diagnostic: diagnostic::mk_codemap_handler(cm, none)\n+        diagnostic: diagnostic::mk_handler(cm, none)\n     };\n     let rd = { ps: pprust::rust_printer(w), w: w };\n     doc_header(rd, argv[1]);"}]}