{"sha": "c2a8bfe0ab54fa2a2682e05e59bc96d9363760f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyYThiZmUwYWI1NGZhMmEyNjgyZTA1ZTU5YmM5NmQ5MzYzNzYwZjA=", "commit": {"author": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2021-03-29T15:28:52Z"}, "committer": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2021-04-03T18:42:54Z"}, "message": "Changed function signature to keep buffer handling out of lib", "tree": {"sha": "333baf9942aa29a8774bdb99ca58749a2d5928f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/333baf9942aa29a8774bdb99ca58749a2d5928f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2a8bfe0ab54fa2a2682e05e59bc96d9363760f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2a8bfe0ab54fa2a2682e05e59bc96d9363760f0", "html_url": "https://github.com/rust-lang/rust/commit/c2a8bfe0ab54fa2a2682e05e59bc96d9363760f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2a8bfe0ab54fa2a2682e05e59bc96d9363760f0/comments", "author": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23325caf43d16e8caf77f8d4855ff568b6d143be", "url": "https://api.github.com/repos/rust-lang/rust/commits/23325caf43d16e8caf77f8d4855ff568b6d143be", "html_url": "https://github.com/rust-lang/rust/commit/23325caf43d16e8caf77f8d4855ff568b6d143be"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "1d972229d95368523409307a6e8b0099a043f204", "filename": "src/tools/rust-demangler/src/lib.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c2a8bfe0ab54fa2a2682e05e59bc96d9363760f0/src%2Ftools%2Frust-demangler%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2a8bfe0ab54fa2a2682e05e59bc96d9363760f0/src%2Ftools%2Frust-demangler%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-demangler%2Fsrc%2Flib.rs?ref=c2a8bfe0ab54fa2a2682e05e59bc96d9363760f0", "patch": "@@ -1,14 +1,14 @@\n use regex::Regex;\n use rustc_demangle::demangle;\n+use std::str::Lines;\n \n const REPLACE_COLONS: &str = \"::\";\n \n pub fn create_disambiguator_re() -> Regex {\n     Regex::new(r\"\\[[a-f0-9]{5,16}\\]::\").unwrap()\n }\n \n-pub fn demangle_lines(buffer: &str, strip_crate_disambiguators: Option<Regex>) -> Vec<String> {\n-    let lines = buffer.lines();\n+pub fn demangle_lines(lines: Lines<'_>, strip_crate_disambiguators: Option<Regex>) -> Vec<String> {\n     let mut demangled_lines = Vec::new();\n     for mangled in lines {\n         let mut demangled = demangle(mangled).to_string();\n@@ -17,6 +17,5 @@ pub fn demangle_lines(buffer: &str, strip_crate_disambiguators: Option<Regex>) -\n         }\n         demangled_lines.push(demangled);\n     }\n-    demangled_lines.push(\"\".to_string());\n     demangled_lines\n }"}, {"sha": "1b5ef5d2442ba91cd201d2eae9a67cda5df9a91b", "filename": "src/tools/rust-demangler/src/main.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c2a8bfe0ab54fa2a2682e05e59bc96d9363760f0/src%2Ftools%2Frust-demangler%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2a8bfe0ab54fa2a2682e05e59bc96d9363760f0/src%2Ftools%2Frust-demangler%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-demangler%2Fsrc%2Fmain.rs?ref=c2a8bfe0ab54fa2a2682e05e59bc96d9363760f0", "patch": "@@ -90,7 +90,8 @@ fn main() -> io::Result<()> {\n \n     let mut buffer = String::new();\n     io::stdin().read_to_string(&mut buffer)?;\n-    let demangled_lines = demangle_lines(&buffer, strip_crate_disambiguators);\n+    let mut demangled_lines = demangle_lines(buffer.lines(), strip_crate_disambiguators);\n+    demangled_lines.push(\"\".to_string()); // ensure a trailing newline\n     io::stdout().write_all(demangled_lines.join(\"\\n\").as_bytes())?;\n     Ok(())\n }"}, {"sha": "09752fd72123bbe7289a16bdd62c57cf5a8cc34a", "filename": "src/tools/rust-demangler/tests/lib.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c2a8bfe0ab54fa2a2682e05e59bc96d9363760f0/src%2Ftools%2Frust-demangler%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2a8bfe0ab54fa2a2682e05e59bc96d9363760f0/src%2Ftools%2Frust-demangler%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-demangler%2Ftests%2Flib.rs?ref=c2a8bfe0ab54fa2a2682e05e59bc96d9363760f0", "patch": "@@ -1,6 +1,6 @@\n use rust_demangler::*;\n \n-const MANGLED_LINES: &str = r\"\n+const MANGLED_INPUT: &str = r\"\n _RNvC6_123foo3bar\n _RNqCs4fqI2P2rA04_11utf8_identsu30____7hkackfecea1cbdathfdh9hlq6y\n _RNCNCNgCs6DXkGYLi8lr_2cc5spawn00B5_\n@@ -24,7 +24,7 @@ _RNvNtNtNtNtCs92dm3009vxr_4rand4rngs7adapter9reseeding4fork23FORK_HANDLER_REGIST\n \n #[test]\n fn test_demangle_lines() {\n-    let demangled_lines = demangle_lines(MANGLED_LINES, None);\n+    let demangled_lines = demangle_lines(MANGLED_INPUT.lines(), None);\n     let mut iter = demangled_lines.iter();\n     assert_eq!(\"\", iter.next().unwrap());\n     assert_eq!(\"123foo[0]::bar\", iter.next().unwrap());\n@@ -55,13 +55,12 @@ fn test_demangle_lines() {\n         \"rand[693ea8e72247470f]::rngs::adapter::reseeding::fork::FORK_HANDLER_REGISTERED.0.0\",\n         iter.next().unwrap()\n     );\n-    assert_eq!(\"\", iter.next().unwrap());\n     assert!(iter.next().is_none());\n }\n \n #[test]\n fn test_demangle_lines_no_crate_disambiguators() {\n-    let demangled_lines = demangle_lines(MANGLED_LINES, Some(create_disambiguator_re()));\n+    let demangled_lines = demangle_lines(MANGLED_INPUT.lines(), Some(create_disambiguator_re()));\n     let mut iter = demangled_lines.iter();\n     assert_eq!(\"\", iter.next().unwrap());\n     assert_eq!(\"123foo[0]::bar\", iter.next().unwrap());\n@@ -92,6 +91,5 @@ fn test_demangle_lines_no_crate_disambiguators() {\n         \"rand::rngs::adapter::reseeding::fork::FORK_HANDLER_REGISTERED.0.0\",\n         iter.next().unwrap()\n     );\n-    assert_eq!(\"\", iter.next().unwrap());\n     assert!(iter.next().is_none());\n }"}]}