{"sha": "70559c54ce2a493a15f447436e281e16fc55b291", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwNTU5YzU0Y2UyYTQ5M2ExNWY0NDc0MzZlMjgxZTE2ZmM1NWIyOTE=", "commit": {"author": {"name": "Bryan Drewery", "email": "bryan@shatow.net", "date": "2018-03-22T16:49:20Z"}, "committer": {"name": "Bryan Drewery", "email": "bryan@shatow.net", "date": "2018-03-22T16:49:20Z"}, "message": "Command::env_saw_path() may be unused on platforms not using posix_spawn()", "tree": {"sha": "47de512d7dbd99e4a1d30190070f8c579f1bc544", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47de512d7dbd99e4a1d30190070f8c579f1bc544"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70559c54ce2a493a15f447436e281e16fc55b291", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70559c54ce2a493a15f447436e281e16fc55b291", "html_url": "https://github.com/rust-lang/rust/commit/70559c54ce2a493a15f447436e281e16fc55b291", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70559c54ce2a493a15f447436e281e16fc55b291/comments", "author": {"login": "bdrewery", "id": 33693, "node_id": "MDQ6VXNlcjMzNjkz", "avatar_url": "https://avatars.githubusercontent.com/u/33693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdrewery", "html_url": "https://github.com/bdrewery", "followers_url": "https://api.github.com/users/bdrewery/followers", "following_url": "https://api.github.com/users/bdrewery/following{/other_user}", "gists_url": "https://api.github.com/users/bdrewery/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdrewery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdrewery/subscriptions", "organizations_url": "https://api.github.com/users/bdrewery/orgs", "repos_url": "https://api.github.com/users/bdrewery/repos", "events_url": "https://api.github.com/users/bdrewery/events{/privacy}", "received_events_url": "https://api.github.com/users/bdrewery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bdrewery", "id": 33693, "node_id": "MDQ6VXNlcjMzNjkz", "avatar_url": "https://avatars.githubusercontent.com/u/33693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdrewery", "html_url": "https://github.com/bdrewery", "followers_url": "https://api.github.com/users/bdrewery/followers", "following_url": "https://api.github.com/users/bdrewery/following{/other_user}", "gists_url": "https://api.github.com/users/bdrewery/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdrewery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdrewery/subscriptions", "organizations_url": "https://api.github.com/users/bdrewery/orgs", "repos_url": "https://api.github.com/users/bdrewery/repos", "events_url": "https://api.github.com/users/bdrewery/events{/privacy}", "received_events_url": "https://api.github.com/users/bdrewery/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e0faf79c0859f22d4e11268f272247a6ef73709", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e0faf79c0859f22d4e11268f272247a6ef73709", "html_url": "https://github.com/rust-lang/rust/commit/8e0faf79c0859f22d4e11268f272247a6ef73709"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "b7f30600b8a4c7dc3bf63c21a3cb2397510202d4", "filename": "src/libstd/sys/unix/process/process_common.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/70559c54ce2a493a15f447436e281e16fc55b291/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70559c54ce2a493a15f447436e281e16fc55b291/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs?ref=70559c54ce2a493a15f447436e281e16fc55b291", "patch": "@@ -184,6 +184,7 @@ impl Command {\n         let maybe_env = self.env.capture_if_changed();\n         maybe_env.map(|env| construct_envp(env, &mut self.saw_nul))\n     }\n+    #[allow(dead_code)]\n     pub fn env_saw_path(&self) -> bool {\n         self.env.have_changed_path()\n     }"}]}