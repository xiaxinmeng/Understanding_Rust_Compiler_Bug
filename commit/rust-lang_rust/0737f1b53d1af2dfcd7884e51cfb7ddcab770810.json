{"sha": "0737f1b53d1af2dfcd7884e51cfb7ddcab770810", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3MzdmMWI1M2QxYWYyZGZjZDc4ODRlNTFjZmI3ZGRjYWI3NzA4MTA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-07-25T00:06:32Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-07-25T00:06:32Z"}, "message": "rustc: Write impl attributes into the metadata", "tree": {"sha": "1d1c3acc72a3e3506cb02f9abd70d09257046abe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d1c3acc72a3e3506cb02f9abd70d09257046abe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0737f1b53d1af2dfcd7884e51cfb7ddcab770810", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0737f1b53d1af2dfcd7884e51cfb7ddcab770810", "html_url": "https://github.com/rust-lang/rust/commit/0737f1b53d1af2dfcd7884e51cfb7ddcab770810", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0737f1b53d1af2dfcd7884e51cfb7ddcab770810/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22ef08293e69a5bec54874c30ec7652e7d917da0", "url": "https://api.github.com/repos/rust-lang/rust/commits/22ef08293e69a5bec54874c30ec7652e7d917da0", "html_url": "https://github.com/rust-lang/rust/commit/22ef08293e69a5bec54874c30ec7652e7d917da0"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "69e97f7e9db633450ba625ce1e148ffab676b9d4", "filename": "src/rustc/metadata/encoder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0737f1b53d1af2dfcd7884e51cfb7ddcab770810/src%2Frustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0737f1b53d1af2dfcd7884e51cfb7ddcab770810/src%2Frustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fencoder.rs?ref=0737f1b53d1af2dfcd7884e51cfb7ddcab770810", "patch": "@@ -726,6 +726,7 @@ fn encode_info_for_item(ecx: @encode_ctxt, ebml_w: ebml::writer, item: @item,\n         encode_type_param_bounds(ebml_w, ecx, tps);\n         encode_type(ecx, ebml_w, node_id_to_type(tcx, item.id));\n         encode_name(ebml_w, item.ident);\n+        encode_attributes(ebml_w, item.attrs);\n         for methods.each |m| {\n             ebml_w.start_tag(tag_item_impl_method);\n             ebml_w.writer.write(str::bytes(def_to_str(local_def(m.id))));"}]}