{"sha": "8be2a04c7e6bf78a614840dc7152990a451ac4e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiZTJhMDRjN2U2YmY3OGE2MTQ4NDBkYzcxNTI5OTBhNDUxYWM0ZTA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-09T08:40:55Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-11T06:42:26Z"}, "message": "pacify the parallel compiler", "tree": {"sha": "60fb8431493a0ebd0882a2784935a6a7e2728b49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60fb8431493a0ebd0882a2784935a6a7e2728b49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8be2a04c7e6bf78a614840dc7152990a451ac4e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8be2a04c7e6bf78a614840dc7152990a451ac4e0", "html_url": "https://github.com/rust-lang/rust/commit/8be2a04c7e6bf78a614840dc7152990a451ac4e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8be2a04c7e6bf78a614840dc7152990a451ac4e0/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b59235975e43ef5f3ea9436a62f4f07ee5b9a63e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b59235975e43ef5f3ea9436a62f4f07ee5b9a63e", "html_url": "https://github.com/rust-lang/rust/commit/b59235975e43ef5f3ea9436a62f4f07ee5b9a63e"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "99e6c62f6132643b0b32a987075c3584536b387a", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8be2a04c7e6bf78a614840dc7152990a451ac4e0/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8be2a04c7e6bf78a614840dc7152990a451ac4e0/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=8be2a04c7e6bf78a614840dc7152990a451ac4e0", "patch": "@@ -41,6 +41,7 @@ use crate::ty::{ExistentialPredicate, InferTy, ParamTy, PolyFnSig, Predicate, Pr\n use crate::ty::{InferConst, ParamConst};\n use crate::ty::{List, TyKind, TyS};\n use crate::util::common::ErrorReported;\n+use rustc_data_structures::sync;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, DefIdSet, DefIndex, LOCAL_CRATE};\n@@ -951,7 +952,7 @@ pub struct GlobalCtxt<'tcx> {\n     ///\n     /// FIXME(Centril): consider `dyn LintStoreMarker` once\n     /// we can upcast to `Any` for some additional type safety.\n-    pub lint_store: Lrc<dyn Any>,\n+    pub lint_store: Lrc<dyn Any + sync::Sync + sync::Send>,\n \n     pub dep_graph: DepGraph,\n \n@@ -1120,7 +1121,7 @@ impl<'tcx> TyCtxt<'tcx> {\n     /// reference to the context, to allow formatting values that need it.\n     pub fn create_global_ctxt(\n         s: &'tcx Session,\n-        lint_store: Lrc<dyn Any>,\n+        lint_store: Lrc<dyn Any + sync::Send + sync::Sync>,\n         local_providers: ty::query::Providers<'tcx>,\n         extern_providers: ty::query::Providers<'tcx>,\n         arenas: &'tcx AllArenas,"}, {"sha": "30a3788377508b106ff02a8f817ab6d7dc2d56c5", "filename": "src/librustc_lint/late.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8be2a04c7e6bf78a614840dc7152990a451ac4e0/src%2Flibrustc_lint%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8be2a04c7e6bf78a614840dc7152990a451ac4e0/src%2Flibrustc_lint%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flate.rs?ref=8be2a04c7e6bf78a614840dc7152990a451ac4e0", "patch": "@@ -28,12 +28,14 @@ use syntax::ast;\n use syntax::walk_list;\n \n use log::debug;\n+use std::any::Any;\n use std::slice;\n \n /// Extract the `LintStore` from the query context.\n /// This function exists because we've erased `LintStore` as `dyn Any` in the context.\n crate fn unerased_lint_store<'tcx>(tcx: TyCtxt<'tcx>) -> &'tcx LintStore {\n-    tcx.lint_store.downcast_ref().unwrap()\n+    let store: &dyn Any = &*tcx.lint_store;\n+    store.downcast_ref().unwrap()\n }\n \n macro_rules! lint_callback { ($cx:expr, $f:ident, $($args:expr),*) => ({"}]}