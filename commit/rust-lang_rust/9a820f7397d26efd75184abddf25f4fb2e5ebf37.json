{"sha": "9a820f7397d26efd75184abddf25f4fb2e5ebf37", "node_id": "C_kwDOAAsO6NoAKDlhODIwZjczOTdkMjZlZmQ3NTE4NGFiZGRmMjVmNGZiMmU1ZWJmMzc", "commit": {"author": {"name": "nils", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-01-11T16:30:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-11T16:30:56Z"}, "message": "Rollup merge of #106664 - chenyukang:yukang/fix-106597-remove-lseek, r=cuviper\n\nRemove unnecessary lseek syscall when using std::fs::read\n\nFixes #106597\nr? ```@bjorn3```", "tree": {"sha": "6aa87fa85434f55b43792f5ef091005a9516a941", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6aa87fa85434f55b43792f5ef091005a9516a941"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a820f7397d26efd75184abddf25f4fb2e5ebf37", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjvuRACRBK7hj4Ov3rIwAAn68IADi7teakNl3ySSDkPlLX6MBs\nnIom24mqlqNu44gKnmoaYahnURF2IbG/2hQJ6MNRn9fG4kAha7wGdeu4TDp+/Ett\nlBNQIwLM3A4V5HdZ8YVeHh7ROOELbJEp6T0v9FUGq9Qe5M9+6kAc7FgG9mYC/rnT\nXfFpkOrUxQY98k/Xqg24u7tLtpXiT4wV5NrreEPw8uHexoqGErFnT7XPiIgcCMad\ntuMX/hG+qCDtCJB0oNp7+bfP4uHqa8aqn1IbcrkkqBfmNj1B4LDIQo7YtwANQUw9\nZ2KJJ0WjWElz4DaXFt0rm8+TMR9FWIi4zgZLSQmMM8iky0m9/UBbEUwecvw7xa8=\n=iUuV\n-----END PGP SIGNATURE-----\n", "payload": "tree 6aa87fa85434f55b43792f5ef091005a9516a941\nparent 6e0c404f769ae93254dacc37338e05e07e659148\nparent f7bc68bb4edd1974f7c4aa6113902132429c00e8\nauthor nils <48135649+Nilstrieb@users.noreply.github.com> 1673454656 +0100\ncommitter GitHub <noreply@github.com> 1673454656 +0100\n\nRollup merge of #106664 - chenyukang:yukang/fix-106597-remove-lseek, r=cuviper\n\nRemove unnecessary lseek syscall when using std::fs::read\n\nFixes #106597\nr? ```@bjorn3```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a820f7397d26efd75184abddf25f4fb2e5ebf37", "html_url": "https://github.com/rust-lang/rust/commit/9a820f7397d26efd75184abddf25f4fb2e5ebf37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a820f7397d26efd75184abddf25f4fb2e5ebf37/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e0c404f769ae93254dacc37338e05e07e659148", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e0c404f769ae93254dacc37338e05e07e659148", "html_url": "https://github.com/rust-lang/rust/commit/6e0c404f769ae93254dacc37338e05e07e659148"}, {"sha": "f7bc68bb4edd1974f7c4aa6113902132429c00e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7bc68bb4edd1974f7c4aa6113902132429c00e8", "html_url": "https://github.com/rust-lang/rust/commit/f7bc68bb4edd1974f7c4aa6113902132429c00e8"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "5c5ef0b1125a0d712a5ef787ce99ab5f0ec801f0", "filename": "library/std/src/fs.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9a820f7397d26efd75184abddf25f4fb2e5ebf37/library%2Fstd%2Fsrc%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a820f7397d26efd75184abddf25f4fb2e5ebf37/library%2Fstd%2Fsrc%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ffs.rs?ref=9a820f7397d26efd75184abddf25f4fb2e5ebf37", "patch": "@@ -249,8 +249,9 @@ pub struct DirBuilder {\n pub fn read<P: AsRef<Path>>(path: P) -> io::Result<Vec<u8>> {\n     fn inner(path: &Path) -> io::Result<Vec<u8>> {\n         let mut file = File::open(path)?;\n-        let mut bytes = Vec::new();\n-        file.read_to_end(&mut bytes)?;\n+        let size = file.metadata().map(|m| m.len()).unwrap_or(0);\n+        let mut bytes = Vec::with_capacity(size as usize);\n+        io::default_read_to_end(&mut file, &mut bytes)?;\n         Ok(bytes)\n     }\n     inner(path.as_ref())\n@@ -288,8 +289,9 @@ pub fn read<P: AsRef<Path>>(path: P) -> io::Result<Vec<u8>> {\n pub fn read_to_string<P: AsRef<Path>>(path: P) -> io::Result<String> {\n     fn inner(path: &Path) -> io::Result<String> {\n         let mut file = File::open(path)?;\n-        let mut string = String::new();\n-        file.read_to_string(&mut string)?;\n+        let size = file.metadata().map(|m| m.len()).unwrap_or(0);\n+        let mut string = String::with_capacity(size as usize);\n+        io::default_read_to_string(&mut file, &mut string)?;\n         Ok(string)\n     }\n     inner(path.as_ref())"}]}