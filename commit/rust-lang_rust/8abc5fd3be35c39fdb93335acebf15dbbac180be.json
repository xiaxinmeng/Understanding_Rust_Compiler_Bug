{"sha": "8abc5fd3be35c39fdb93335acebf15dbbac180be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhYmM1ZmQzYmUzNWMzOWZkYjkzMzM1YWNlYmYxNWRiYmFjMTgwYmU=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2021-02-26T21:00:16Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2021-02-27T14:28:58Z"}, "message": "Even faster counting of digits for error line numbers", "tree": {"sha": "5d3cf092fa1d8c5d2d00b84bd2b76795d5195c79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d3cf092fa1d8c5d2d00b84bd2b76795d5195c79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8abc5fd3be35c39fdb93335acebf15dbbac180be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8abc5fd3be35c39fdb93335acebf15dbbac180be", "html_url": "https://github.com/rust-lang/rust/commit/8abc5fd3be35c39fdb93335acebf15dbbac180be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8abc5fd3be35c39fdb93335acebf15dbbac180be/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cecdb181ade91c0a5ffab9a148dba68fc7d00ee3", "url": "https://api.github.com/repos/rust-lang/rust/commits/cecdb181ade91c0a5ffab9a148dba68fc7d00ee3", "html_url": "https://github.com/rust-lang/rust/commit/cecdb181ade91c0a5ffab9a148dba68fc7d00ee3"}], "stats": {"total": 38, "additions": 26, "deletions": 12}, "files": [{"sha": "9b6f67166bdaa7a4e2ce1640d108fa2e9a85e0c2", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 26, "deletions": 12, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/8abc5fd3be35c39fdb93335acebf15dbbac180be/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8abc5fd3be35c39fdb93335acebf15dbbac180be/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=8abc5fd3be35c39fdb93335acebf15dbbac180be", "patch": "@@ -1713,18 +1713,8 @@ impl EmitterWriter {\n         let max_line_num_len = if self.ui_testing {\n             ANONYMIZED_LINE_NUM.len()\n         } else {\n-            // Instead of using .to_string().len(), we iteratively count the\n-            // number of digits to avoid allocation. This strategy has sizable\n-            // performance gains over the old string strategy.\n-            let mut n = self.get_max_line_num(span, children);\n-            let mut num_digits = 0;\n-            loop {\n-                num_digits += 1;\n-                n /= 10;\n-                if n == 0 {\n-                    break num_digits;\n-                }\n-            }\n+            let n = self.get_max_line_num(span, children);\n+            num_decimal_digits(n)\n         };\n \n         match self.emit_message_default(span, message, code, level, max_line_num_len, false) {\n@@ -1952,6 +1942,30 @@ impl FileWithAnnotatedLines {\n     }\n }\n \n+// instead of taking the String length or dividing by 10 while > 0, we multiply a limit by 10 until\n+// we're higher. If the loop isn't exited by the `return`, the last multiplication will wrap, which\n+// is OK, because while we cannot fit a higher power of 10 in a usize, the loop will end anyway.\n+// This is also why we need the max number of decimal digits within a `usize`.\n+fn num_decimal_digits(num: usize) -> usize {\n+    #[cfg(target_pointer_width = \"64\")]\n+    const MAX_DIGITS: usize = 20;\n+\n+    #[cfg(target_pointer_width = \"32\")]\n+    const MAX_DIGITS: usize = 10;\n+\n+    #[cfg(target_pointer_width = \"16\")]\n+    const MAX_DIGITS: usize = 5;\n+\n+    let mut lim = 10;\n+    for num_digits in 1..MAX_DIGITS {\n+        if num < lim {\n+            return num_digits;\n+        }\n+        lim = lim.wrapping_mul(10);\n+    }\n+    MAX_DIGITS\n+}\n+\n fn replace_tabs(str: &str) -> String {\n     str.replace('\\t', \"    \")\n }"}]}