{"sha": "f8d6dcf46ec646a41d0dc222764cc0ed026ceb03", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4ZDZkY2Y0NmVjNjQ2YTQxZDBkYzIyMjc2NGNjMGVkMDI2Y2ViMDM=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-02-02T09:39:59Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-02-24T01:34:20Z"}, "message": "Warn when reexporting a private extern crate", "tree": {"sha": "d1c7431e35806d24051742d9325c1f11ed326ba8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1c7431e35806d24051742d9325c1f11ed326ba8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8d6dcf46ec646a41d0dc222764cc0ed026ceb03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8d6dcf46ec646a41d0dc222764cc0ed026ceb03", "html_url": "https://github.com/rust-lang/rust/commit/f8d6dcf46ec646a41d0dc222764cc0ed026ceb03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8d6dcf46ec646a41d0dc222764cc0ed026ceb03/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3358fb11da258007d26cc27364455c610088d630", "url": "https://api.github.com/repos/rust-lang/rust/commits/3358fb11da258007d26cc27364455c610088d630", "html_url": "https://github.com/rust-lang/rust/commit/3358fb11da258007d26cc27364455c610088d630"}], "stats": {"total": 37, "additions": 24, "deletions": 13}, "files": [{"sha": "bd256d19b6725653a302f979089fbc389c62d620", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f8d6dcf46ec646a41d0dc222764cc0ed026ceb03/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8d6dcf46ec646a41d0dc222764cc0ed026ceb03/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=f8d6dcf46ec646a41d0dc222764cc0ed026ceb03", "patch": "@@ -51,7 +51,7 @@ extern crate getopts;\n extern crate graphviz;\n extern crate libc;\n extern crate rbml;\n-extern crate rustc_llvm;\n+pub extern crate rustc_llvm as llvm;\n extern crate rustc_back;\n extern crate rustc_front;\n extern crate rustc_data_structures;\n@@ -66,8 +66,6 @@ extern crate serialize as rustc_serialize; // used by deriving\n #[cfg(test)]\n extern crate test;\n \n-pub use rustc_llvm as llvm;\n-\n #[macro_use]\n mod macros;\n "}, {"sha": "4776c83b94cf110dcb5e389f4e244710fa34ef37", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/f8d6dcf46ec646a41d0dc222764cc0ed026ceb03/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8d6dcf46ec646a41d0dc222764cc0ed026ceb03/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=f8d6dcf46ec646a41d0dc222764cc0ed026ceb03", "patch": "@@ -402,14 +402,23 @@ impl<'a, 'b:'a, 'tcx:'b> ImportResolver<'a, 'b, 'tcx> {\n             }\n \n             (_, &Success(name_binding)) if !name_binding.is_import() && directive.is_public => {\n-                // Disallow reexporting private items, excepting extern crates.\n-                if !name_binding.is_public() && !name_binding.is_extern_crate() {\n-                    let msg = format!(\"`{}` is private, and cannot be reexported\", source);\n-                    let note_msg =\n-                        format!(\"Consider declaring type or module `{}` with `pub`\", source);\n-                    struct_span_err!(self.resolver.session, directive.span, E0365, \"{}\", &msg)\n-                        .span_note(directive.span, &note_msg)\n-                        .emit();\n+                if !name_binding.is_public() {\n+                    if name_binding.is_extern_crate() {\n+                        let msg = format!(\"extern crate `{}` is private, and cannot be reexported \\\n+                                           (error E0364), consider declaring with `pub`\",\n+                                           source);\n+                        self.resolver.session.add_lint(lint::builtin::PRIVATE_IN_PUBLIC,\n+                                                       directive.id,\n+                                                       directive.span,\n+                                                       msg);\n+                    } else {\n+                        let msg = format!(\"`{}` is private, and cannot be reexported\", source);\n+                        let note_msg =\n+                            format!(\"Consider declaring type or module `{}` with `pub`\", source);\n+                        struct_span_err!(self.resolver.session, directive.span, E0365, \"{}\", &msg)\n+                            .span_note(directive.span, &note_msg)\n+                            .emit();\n+                    }\n                 } else if name_binding.defined_with(DefModifiers::PRIVATE_VARIANT) {\n                     let msg = format!(\"variant `{}` is private, and cannot be reexported \\\n                                        (error E0364), consider declaring its enum as `pub`\","}, {"sha": "6f596b15b9214fd29b4832f76314021760aa6b54", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8d6dcf46ec646a41d0dc222764cc0ed026ceb03/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8d6dcf46ec646a41d0dc222764cc0ed026ceb03/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=f8d6dcf46ec646a41d0dc222764cc0ed026ceb03", "patch": "@@ -46,7 +46,7 @@ extern crate rustc;\n extern crate rustc_back;\n extern crate rustc_data_structures;\n extern crate rustc_front;\n-extern crate rustc_llvm as llvm;\n+pub extern crate rustc_llvm as llvm;\n extern crate rustc_mir;\n extern crate rustc_platform_intrinsics as intrinsics;\n extern crate serialize;"}, {"sha": "16c369674f0a2e2bf90f8f80952135480fff1328", "filename": "src/libstd/sys/unix/net.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8d6dcf46ec646a41d0dc222764cc0ed026ceb03/src%2Flibstd%2Fsys%2Funix%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8d6dcf46ec646a41d0dc222764cc0ed026ceb03/src%2Flibstd%2Fsys%2Funix%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fnet.rs?ref=f8d6dcf46ec646a41d0dc222764cc0ed026ceb03", "patch": "@@ -21,7 +21,7 @@ use sys_common::net::{getsockopt, setsockopt};\n use time::Duration;\n \n pub use sys::{cvt, cvt_r};\n-pub use libc as netc;\n+pub extern crate libc as netc;\n \n pub type wrlen_t = size_t;\n "}, {"sha": "5811d82681e6b80ee0ccb10a2d436931efb39634", "filename": "src/test/compile-fail/private-variant-and-crate-reexport.rs", "status": "renamed", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f8d6dcf46ec646a41d0dc222764cc0ed026ceb03/src%2Ftest%2Fcompile-fail%2Fprivate-variant-and-crate-reexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8d6dcf46ec646a41d0dc222764cc0ed026ceb03/src%2Ftest%2Fcompile-fail%2Fprivate-variant-and-crate-reexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivate-variant-and-crate-reexport.rs?ref=f8d6dcf46ec646a41d0dc222764cc0ed026ceb03", "patch": "@@ -11,6 +11,10 @@\n #![feature(rustc_attrs)]\n #![allow(dead_code)]\n \n+extern crate core;\n+pub use core as reexported_core; //~ WARN extern crate `core` is private, and cannot be reexported\n+//~^ WARNING hard error\n+\n mod m1 {\n     pub use ::E::V; //~ WARN variant `V` is private, and cannot be reexported\n     //~^ WARNING hard error", "previous_filename": "src/test/compile-fail/private-variant-reexport.rs"}]}