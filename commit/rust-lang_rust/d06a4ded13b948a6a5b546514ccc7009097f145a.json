{"sha": "d06a4ded13b948a6a5b546514ccc7009097f145a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwNmE0ZGVkMTNiOTQ4YTZhNWI1NDY1MTRjY2M3MDA5MDk3ZjE0NWE=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-11-03T17:04:01Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-11-04T03:19:34Z"}, "message": "use silent emitter for rustdoc highlighting pass", "tree": {"sha": "7a0e289aae628db5a2fa5b1b15d1005c07202cdc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a0e289aae628db5a2fa5b1b15d1005c07202cdc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d06a4ded13b948a6a5b546514ccc7009097f145a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAl2/mMgWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdDAjB/0SFK35947SP7C7m3ZaZZcAfnS6\n7wzNKhys5XimGlqr+UP/RsBRVbVec2bi7ckfJdIxpT7tg3gzftvJ9LF2aK52xWm8\nXcDMW7DiX4XpcGQVQysck+0U3toog7FfDvh9/GxwX5nMH0Zb9QjV4rbfYRID1Zdb\nojS4YBaUCr4WOZy1VbCDA+55/R2ffLe7NjPnUAag+6IIhpggxUgvtPlRXiSgELBp\nfK+9Szba05lTPhb6HKN2UjbC1nxbjpvIVazHhb5OJ8w9e1UK54QgAqkmcV67z3k4\nUnADTpvVeYsgR4CLCAzWbouE1ha7E151cGOTI2S5fW6aefK3LYD8n/I5NZFH\n=cggv\n-----END PGP SIGNATURE-----", "payload": "tree 7a0e289aae628db5a2fa5b1b15d1005c07202cdc\nparent b43a6822597061dc18cbdde1769d9815e718d7bb\nauthor Andy Russell <arussell123@gmail.com> 1572800641 -0500\ncommitter Andy Russell <arussell123@gmail.com> 1572837574 -0500\n\nuse silent emitter for rustdoc highlighting pass\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d06a4ded13b948a6a5b546514ccc7009097f145a", "html_url": "https://github.com/rust-lang/rust/commit/d06a4ded13b948a6a5b546514ccc7009097f145a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d06a4ded13b948a6a5b546514ccc7009097f145a/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b43a6822597061dc18cbdde1769d9815e718d7bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/b43a6822597061dc18cbdde1769d9815e718d7bb", "html_url": "https://github.com/rust-lang/rust/commit/b43a6822597061dc18cbdde1769d9815e718d7bb"}], "stats": {"total": 98, "additions": 19, "deletions": 79}, "files": [{"sha": "5f74df13fae216b240dcfdf7c72c3037a1c03d31", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d06a4ded13b948a6a5b546514ccc7009097f145a/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d06a4ded13b948a6a5b546514ccc7009097f145a/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=d06a4ded13b948a6a5b546514ccc7009097f145a", "patch": "@@ -424,6 +424,14 @@ impl Emitter for EmitterWriter {\n     }\n }\n \n+/// An emitter that does nothing when emitting a diagnostic.\n+pub struct SilentEmitter;\n+\n+impl Emitter for SilentEmitter {\n+    fn source_map(&self) -> Option<&Lrc<SourceMapperDyn>> { None }\n+    fn emit_diagnostic(&mut self, _: &Diagnostic) {}\n+}\n+\n /// maximum number of lines we will print for each error; arbitrary.\n pub const MAX_HIGHLIGHT_LINES: usize = 6;\n /// maximum number of suggestions to be shown"}, {"sha": "4e4d6d982fbc59498dd89c2bd3d645bf707d495f", "filename": "src/librustc_interface/interface.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d06a4ded13b948a6a5b546514ccc7009097f145a/src%2Flibrustc_interface%2Finterface.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d06a4ded13b948a6a5b546514ccc7009097f145a/src%2Flibrustc_interface%2Finterface.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Finterface.rs?ref=d06a4ded13b948a6a5b546514ccc7009097f145a", "patch": "@@ -17,10 +17,9 @@ use std::sync::{Arc, Mutex};\n use syntax::{self, parse};\n use syntax::ast::{self, MetaItemKind};\n use syntax::parse::token;\n-use syntax::source_map::{FileName, FilePathMapping, FileLoader, SourceMap};\n+use syntax::source_map::{FileName, FileLoader, SourceMap};\n use syntax::sess::ParseSess;\n use syntax_pos::edition;\n-use rustc_errors::{Diagnostic, emitter::Emitter, Handler, SourceMapperDyn};\n \n pub type Result<T> = result::Result<T, ErrorReported>;\n \n@@ -63,18 +62,9 @@ impl Compiler {\n \n /// Converts strings provided as `--cfg [cfgspec]` into a `crate_cfg`.\n pub fn parse_cfgspecs(cfgspecs: Vec<String>) -> FxHashSet<(String, Option<String>)> {\n-    struct NullEmitter;\n-    impl Emitter for NullEmitter {\n-        fn emit_diagnostic(&mut self, _: &Diagnostic) {}\n-        fn source_map(&self) -> Option<&Lrc<SourceMapperDyn>> { None }\n-    }\n-\n     syntax::with_default_globals(move || {\n         let cfg = cfgspecs.into_iter().map(|s| {\n-\n-            let cm = Lrc::new(SourceMap::new(FilePathMapping::empty()));\n-            let handler = Handler::with_emitter(false, None, Box::new(NullEmitter));\n-            let sess = ParseSess::with_span_handler(handler, cm);\n+            let sess = ParseSess::with_silent_emitter();\n             let filename = FileName::cfg_spec_source_code(&s);\n             let mut parser = parse::new_parser_from_source_str(&sess, filename, s.to_string());\n "}, {"sha": "88ba13f2796a003a29eabfd0e59dbc311450c3e2", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d06a4ded13b948a6a5b546514ccc7009097f145a/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d06a4ded13b948a6a5b546514ccc7009097f145a/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=d06a4ded13b948a6a5b546514ccc7009097f145a", "patch": "@@ -11,7 +11,7 @@ use std::fmt::Display;\n use std::io;\n use std::io::prelude::*;\n \n-use syntax::source_map::{SourceMap, FilePathMapping};\n+use syntax::source_map::SourceMap;\n use syntax::parse::lexer;\n use syntax::parse::token::{self, Token};\n use syntax::sess::ParseSess;\n@@ -33,7 +33,7 @@ pub fn render_with_highlighting(\n                class, tooltip).unwrap();\n     }\n \n-    let sess = ParseSess::new(FilePathMapping::empty());\n+    let sess = ParseSess::with_silent_emitter();\n     let fm = sess.source_map().new_source_file(\n         FileName::Custom(String::from(\"rustdoc-highlighting\")),\n         src.to_owned(),"}, {"sha": "2251c3961db2e0fecfd3c70512270d3e06e9692f", "filename": "src/libsyntax/sess.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d06a4ded13b948a6a5b546514ccc7009097f145a/src%2Flibsyntax%2Fsess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d06a4ded13b948a6a5b546514ccc7009097f145a/src%2Flibsyntax%2Fsess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsess.rs?ref=d06a4ded13b948a6a5b546514ccc7009097f145a", "patch": "@@ -6,7 +6,7 @@ use crate::early_buffered_lints::{BufferedEarlyLint, BufferedEarlyLintId};\n use crate::source_map::{SourceMap, FilePathMapping};\n use crate::feature_gate::UnstableFeatures;\n \n-use errors::{Applicability, Handler, ColorConfig, DiagnosticBuilder};\n+use errors::{Applicability, emitter::SilentEmitter, Handler, ColorConfig, DiagnosticBuilder};\n use rustc_data_structures::fx::{FxHashSet, FxHashMap};\n use rustc_data_structures::sync::{Lrc, Lock, Once};\n use syntax_pos::{Symbol, Span, MultiSpan};\n@@ -104,6 +104,12 @@ impl ParseSess {\n         }\n     }\n \n+    pub fn with_silent_emitter() -> Self {\n+        let cm = Lrc::new(SourceMap::new(FilePathMapping::empty()));\n+        let handler = Handler::with_emitter(false, None, Box::new(SilentEmitter));\n+        ParseSess::with_span_handler(handler, cm)\n+    }\n+\n     #[inline]\n     pub fn source_map(&self) -> &SourceMap {\n         &self.source_map"}, {"sha": "84c10028fd1f937806cc3266de6ea2af3ebf45fa", "filename": "src/test/rustdoc-ui/invalid-syntax.stderr", "status": "modified", "additions": 0, "deletions": 64, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/d06a4ded13b948a6a5b546514ccc7009097f145a/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d06a4ded13b948a6a5b546514ccc7009097f145a/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr?ref=d06a4ded13b948a6a5b546514ccc7009097f145a", "patch": "@@ -222,67 +222,3 @@ warning: could not parse code block as Rust code\n LL | ///     \\____/\n    |         ^^^^^^\n \n-error: unknown start of token: \\\n- --> <rustdoc-highlighting>:1:1\n-  |\n-1 | \\____/\n-  | ^\n-\n-error: unknown start of token: \\\n- --> <rustdoc-highlighting>:1:1\n-  |\n-1 | \\_\n-  | ^\n-\n-error: unknown start of token: \\\n- --> <rustdoc-highlighting>:1:1\n-  |\n-1 | \\_\n-  | ^\n-\n-error: unknown start of token: `\n- --> <rustdoc-highlighting>:1:1\n-  |\n-1 | ```\n-  | ^\n-  |\n-help: Unicode character '`' (Grave Accent) looks like ''' (Single Quote), but it is not\n-  |\n-1 | '``\n-  | ^\n-\n-error: unknown start of token: \\\n- --> <rustdoc-highlighting>:2:1\n-  |\n-2 | \\_\n-  | ^\n-\n-error: unknown start of token: \\\n- --> <rustdoc-highlighting>:1:1\n-  |\n-1 | \\_\n-  | ^\n-\n-error: unknown start of token: \\\n- --> <rustdoc-highlighting>:1:1\n-  |\n-1 | \\_\n-  | ^\n-\n-error: unknown start of token: `\n- --> <rustdoc-highlighting>:3:30\n-  |\n-3 |    |     ^^^^^^ did you mean `baz::foobar`?\n-  |                              ^\n-  |\n-help: Unicode character '`' (Grave Accent) looks like ''' (Single Quote), but it is not\n-  |\n-3 |    |     ^^^^^^ did you mean 'baz::foobar`?\n-  |                              ^\n-\n-error: unknown start of token: \\\n- --> <rustdoc-highlighting>:1:1\n-  |\n-1 | \\__________pkt->size___________/          \\_result->size_/ \\__pkt->size__/\n-  | ^\n-"}]}