{"sha": "b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba", "node_id": "C_kwDOAAsO6NoAKGI3NjNmOTA5NGZhZGMwNmZkNjViOTA2ZDVlOGRiMGE5ZmQ4ZWM2YmE", "commit": {"author": {"name": "Bryan Garza", "email": "1396101+bryangarza@users.noreply.github.com", "date": "2022-12-29T03:49:48Z"}, "committer": {"name": "Bryan Garza", "email": "1396101+bryangarza@users.noreply.github.com", "date": "2023-01-23T23:56:22Z"}, "message": "Remove debugging-related code", "tree": {"sha": "aa7b627328c42e5f2f4a6fb6259923bbc37af350", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa7b627328c42e5f2f4a6fb6259923bbc37af350"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba", "html_url": "https://github.com/rust-lang/rust/commit/b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba/comments", "author": {"login": "bryangarza", "id": 1396101, "node_id": "MDQ6VXNlcjEzOTYxMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1396101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryangarza", "html_url": "https://github.com/bryangarza", "followers_url": "https://api.github.com/users/bryangarza/followers", "following_url": "https://api.github.com/users/bryangarza/following{/other_user}", "gists_url": "https://api.github.com/users/bryangarza/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryangarza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryangarza/subscriptions", "organizations_url": "https://api.github.com/users/bryangarza/orgs", "repos_url": "https://api.github.com/users/bryangarza/repos", "events_url": "https://api.github.com/users/bryangarza/events{/privacy}", "received_events_url": "https://api.github.com/users/bryangarza/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bryangarza", "id": 1396101, "node_id": "MDQ6VXNlcjEzOTYxMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1396101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryangarza", "html_url": "https://github.com/bryangarza", "followers_url": "https://api.github.com/users/bryangarza/followers", "following_url": "https://api.github.com/users/bryangarza/following{/other_user}", "gists_url": "https://api.github.com/users/bryangarza/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryangarza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryangarza/subscriptions", "organizations_url": "https://api.github.com/users/bryangarza/orgs", "repos_url": "https://api.github.com/users/bryangarza/repos", "events_url": "https://api.github.com/users/bryangarza/events{/privacy}", "received_events_url": "https://api.github.com/users/bryangarza/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "026a67377f2b28968d293a92cad3f92e22f76b6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/026a67377f2b28968d293a92cad3f92e22f76b6d", "html_url": "https://github.com/rust-lang/rust/commit/026a67377f2b28968d293a92cad3f92e22f76b6d"}], "stats": {"total": 22, "additions": 4, "deletions": 18}, "files": [{"sha": "18e01567ca35e44888e52e19abd6bb07edca0d0e", "filename": "compiler/rustc_const_eval/src/const_eval/eval_queries.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Feval_queries.rs?ref=b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba", "patch": "@@ -22,8 +22,6 @@ use crate::interpret::{\n     RefTracking, StackPopCleanup,\n };\n \n-use tracing::info;\n-\n const NOTE_ON_UNDEFINED_BEHAVIOR_ERROR: &str = \"The rules on what exactly is undefined behavior aren't clear, \\\n      so this check might be overzealous. Please open an issue on the rustc \\\n      repository if you believe it should not be considered undefined behavior.\";\n@@ -35,7 +33,6 @@ fn eval_body_using_ecx<'mir, 'tcx>(\n     body: &'mir mir::Body<'tcx>,\n ) -> InterpResult<'tcx, MPlaceTy<'tcx>> {\n     debug!(\"eval_body_using_ecx: {:?}, {:?}\", cid, ecx.param_env);\n-    info!(\"HERE body is {:#?}\", body);\n     let tcx = *ecx.tcx;\n     assert!(\n         cid.promoted.is_some()"}, {"sha": "4709514c82e85ab70a99727065a9c2008f26dcf0", "filename": "compiler/rustc_const_eval/src/const_eval/machine.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmachine.rs?ref=b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba", "patch": "@@ -369,7 +369,6 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter<'mir,\n         }\n     }\n \n-    #[instrument(skip(ecx), ret)]\n     fn load_mir(\n         ecx: &InterpCx<'mir, 'tcx, Self>,\n         instance: ty::InstanceDef<'tcx>,"}, {"sha": "6c5594bc1b0863f80d0a8a545286191d7eed2215", "filename": "compiler/rustc_const_eval/src/interpret/step.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fstep.rs?ref=b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba", "patch": "@@ -129,7 +129,6 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             // FIXME(#73156): Handle source code coverage in const eval\n             Coverage(..) => {}\n \n-            // FIXME(bryangarza): Update this to do some logic!!!\n             ConstEvalCounter => {\n                 self.increment_const_eval_counter();\n             }"}, {"sha": "a8a4532223c2d901a47e1cf1f18cb21a718538e7", "filename": "compiler/rustc_middle/src/mir/query.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fquery.rs?ref=b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba", "patch": "@@ -441,14 +441,10 @@ impl<'tcx> TyCtxt<'tcx> {\n \n     #[inline]\n     pub fn mir_for_ctfe_opt_const_arg(self, def: ty::WithOptConstParam<DefId>) -> &'tcx Body<'tcx> {\n-        let res = if let Some((did, param_did)) = def.as_const_arg() {\n-            info!(\"calling mir_for_ctfe_of_const_arg for DedId {did:?}\");\n+        if let Some((did, param_did)) = def.as_const_arg() {\n             self.mir_for_ctfe_of_const_arg((did, param_did))\n         } else {\n-            info!(\"calling mir_for_ctfe for DefId {:?}\", def.did);\n             self.mir_for_ctfe(def.did)\n-        };\n-        //info!(\"RES OF CALLING MIR_FOR_CTFE_OPT_CONST_ARG: {:#?}\", res);\n-        res\n+        }\n     }\n }"}, {"sha": "9a786d0c8d62a3de3c5ea04ad8cdc9f90e5a9e60", "filename": "compiler/rustc_mir_transform/src/lib.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs?ref=b763f9094fadc06fd65b906d5e8db0a9fd8ec6ba", "patch": "@@ -350,14 +350,11 @@ fn mir_promoted(\n /// Compute the MIR that is used during CTFE (and thus has no optimizations run on it)\n fn mir_for_ctfe(tcx: TyCtxt<'_>, def_id: DefId) -> &Body<'_> {\n     let did = def_id.expect_local();\n-    let body = if let Some(def) = ty::WithOptConstParam::try_lookup(did, tcx) {\n+    if let Some(def) = ty::WithOptConstParam::try_lookup(did, tcx) {\n         tcx.mir_for_ctfe_of_const_arg(def)\n     } else {\n         tcx.arena.alloc(inner_mir_for_ctfe(tcx, ty::WithOptConstParam::unknown(did)))\n-    };\n-    //info!(\"MIR_FOR_CTFE (DefId = {def_id:?}) body res: {:#?}\", body);\n-    info!(\"MIR_FOR_CTFE (DefId = {def_id:?})\");\n-    body\n+    }\n }\n \n /// Same as `mir_for_ctfe`, but used to get the MIR of a const generic parameter.\n@@ -451,7 +448,6 @@ fn mir_drops_elaborated_and_const_checked(\n \n     run_analysis_to_runtime_passes(tcx, &mut body);\n \n-    //info!(\"MIR after runtime passes: {:#?}\", body);\n     tcx.alloc_steal_mir(body)\n }\n \n@@ -623,7 +619,6 @@ fn inner_optimized_mir(tcx: TyCtxt<'_>, did: LocalDefId) -> Body<'_> {\n     let mut body = remap_mir_for_const_eval_select(tcx, body, hir::Constness::NotConst);\n     debug!(\"body: {:#?}\", body);\n     run_optimization_passes(tcx, &mut body);\n-    //info!(\"body after OPTIMIZATION: {:#?}\", body);\n \n     debug_assert!(!body.has_free_regions(), \"Free regions in optimized MIR\");\n "}]}