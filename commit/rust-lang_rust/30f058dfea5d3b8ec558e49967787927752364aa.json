{"sha": "30f058dfea5d3b8ec558e49967787927752364aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwZjA1OGRmZWE1ZDNiOGVjNTU4ZTQ5OTY3Nzg3OTI3NzUyMzY0YWE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-05-25T14:08:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-25T14:08:21Z"}, "message": "Merge #4602 #4603\n\n4602: Add boolean literal semantic token type to package.json r=matklad a=lnicola\n\nCloses #4583.\r\n\r\nCC @GrayJack\n\n4603: Add self keyword semantic token type r=matklad a=lnicola\n\nNot sure if this is warranted a new token type or just a modifier.\r\n\r\n---\r\n\r\nCC #4583, @GrayJack\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "c178c5e69ac06e01f9badf3f4e30b79ea0d33df1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c178c5e69ac06e01f9badf3f4e30b79ea0d33df1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30f058dfea5d3b8ec558e49967787927752364aa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJey9FVCRBK7hj4Ov3rIwAAdHIIAJBhtZgZIlPh3HfLEkkw06Az\n46bt5nM0/m8qJvHUjH9sO0DrQmK+GJnpZdmRtuV6N84tITgOhbgbngq1OTSb2CIa\nmslyO22yD67AOjxdS9enjBqUhZTY31PKEcJSQF3X5+xwnw7pb0BJEu+WjvSYywZ3\nSGrOc7KuVUhedVlamnSayGjkAXlHIlsNbBPhBHY0xA4mxf6q7zVRE7SVKHuQz3dW\nMuuYKu9VgWydVR03C6BQaIAyQCYlJYKE4ikBlJVBrbK13i4dBYGuSjeAaDKhSLfR\nesApOoThTMHWTIB6mdnEwf/5CiWm2SR1JR4hW/N0q+1ulaP+XO073T2xjAjGIu8=\n=ySR4\n-----END PGP SIGNATURE-----\n", "payload": "tree c178c5e69ac06e01f9badf3f4e30b79ea0d33df1\nparent 19700b2e31cf7a92fbf9da0db82a092d9dcaca34\nparent 87aa746ed2820d401975534a33454d16c0034ee2\nparent c2358365ad0b82d4a5f023192ee0ab2c198d6aee\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1590415701 +0000\ncommitter GitHub <noreply@github.com> 1590415701 +0000\n\nMerge #4602 #4603\n\n4602: Add boolean literal semantic token type to package.json r=matklad a=lnicola\n\nCloses #4583.\r\n\r\nCC @GrayJack\n\n4603: Add self keyword semantic token type r=matklad a=lnicola\n\nNot sure if this is warranted a new token type or just a modifier.\r\n\r\n---\r\n\r\nCC #4583, @GrayJack\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30f058dfea5d3b8ec558e49967787927752364aa", "html_url": "https://github.com/rust-lang/rust/commit/30f058dfea5d3b8ec558e49967787927752364aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30f058dfea5d3b8ec558e49967787927752364aa/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19700b2e31cf7a92fbf9da0db82a092d9dcaca34", "url": "https://api.github.com/repos/rust-lang/rust/commits/19700b2e31cf7a92fbf9da0db82a092d9dcaca34", "html_url": "https://github.com/rust-lang/rust/commit/19700b2e31cf7a92fbf9da0db82a092d9dcaca34"}, {"sha": "87aa746ed2820d401975534a33454d16c0034ee2", "url": "https://api.github.com/repos/rust-lang/rust/commits/87aa746ed2820d401975534a33454d16c0034ee2", "html_url": "https://github.com/rust-lang/rust/commit/87aa746ed2820d401975534a33454d16c0034ee2"}, {"sha": "c2358365ad0b82d4a5f023192ee0ab2c198d6aee", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2358365ad0b82d4a5f023192ee0ab2c198d6aee", "html_url": "https://github.com/rust-lang/rust/commit/c2358365ad0b82d4a5f023192ee0ab2c198d6aee"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "352e350955fc9b11d089fd26d5b039760293107c", "filename": "crates/ra_ide/src/snapshots/highlighting.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/30f058dfea5d3b8ec558e49967787927752364aa/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/30f058dfea5d3b8ec558e49967787927752364aa/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html?ref=30f058dfea5d3b8ec558e49967787927752364aa", "patch": "@@ -35,12 +35,12 @@\n }\n \n <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Bar</span> {\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span>(&<span class=\"keyword\">self</span>) -&gt; <span class=\"builtin_type\">i32</span>;\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span>(&<span class=\"self_keyword\">self</span>) -&gt; <span class=\"builtin_type\">i32</span>;\n }\n \n <span class=\"keyword\">impl</span> <span class=\"trait\">Bar</span> <span class=\"keyword\">for</span> <span class=\"struct\">Foo</span> {\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span>(&<span class=\"keyword\">self</span>) -&gt; <span class=\"builtin_type\">i32</span> {\n-        <span class=\"keyword\">self</span>.<span class=\"field\">x</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span>(&<span class=\"self_keyword\">self</span>) -&gt; <span class=\"builtin_type\">i32</span> {\n+        <span class=\"self_keyword\">self</span>.<span class=\"field\">x</span>\n     }\n }\n \n@@ -92,7 +92,7 @@\n <span class=\"keyword\">use</span> <span class=\"enum\">Option</span>::*;\n \n <span class=\"keyword\">impl</span>&lt;<span class=\"type_param declaration\">T</span>&gt; <span class=\"enum\">Option</span>&lt;<span class=\"type_param\">T</span>&gt; {\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">and</span>&lt;<span class=\"type_param declaration\">U</span>&gt;(<span class=\"keyword\">self</span>, <span class=\"variable declaration\">other</span>: <span class=\"enum\">Option</span>&lt;<span class=\"type_param\">U</span>&gt;) -&gt; <span class=\"enum\">Option</span>&lt;(<span class=\"type_param\">T</span>, <span class=\"type_param\">U</span>)&gt; {\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">and</span>&lt;<span class=\"type_param declaration\">U</span>&gt;(<span class=\"self_keyword\">self</span>, <span class=\"variable declaration\">other</span>: <span class=\"enum\">Option</span>&lt;<span class=\"type_param\">U</span>&gt;) -&gt; <span class=\"enum\">Option</span>&lt;(<span class=\"type_param\">T</span>, <span class=\"type_param\">U</span>)&gt; {\n         <span class=\"keyword control\">match</span> <span class=\"variable\">other</span> {\n             <span class=\"enum_variant\">None</span> =&gt; <span class=\"macro\">unimplemented!</span>(),\n             <span class=\"variable declaration\">Nope</span> =&gt; <span class=\"variable\">Nope</span>,"}, {"sha": "8a995d779baebefea9c108ff626cae4372ab34da", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/30f058dfea5d3b8ec558e49967787927752364aa/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30f058dfea5d3b8ec558e49967787927752364aa/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=30f058dfea5d3b8ec558e49967787927752364aa", "patch": "@@ -414,6 +414,7 @@ fn highlight_element(\n                 T![for] if !is_child_of_impl(element) => h | HighlightModifier::ControlFlow,\n                 T![unsafe] => h | HighlightModifier::Unsafe,\n                 T![true] | T![false] => HighlightTag::BoolLiteral.into(),\n+                T![self] => HighlightTag::SelfKeyword.into(),\n                 _ => h,\n             }\n         }"}, {"sha": "46c718c91e23ebcbf47aeee2b0ea66b07ebeb3cf", "filename": "crates/ra_ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/30f058dfea5d3b8ec558e49967787927752364aa/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30f058dfea5d3b8ec558e49967787927752364aa/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=30f058dfea5d3b8ec558e49967787927752364aa", "patch": "@@ -30,6 +30,7 @@ pub enum HighlightTag {\n     Macro,\n     Module,\n     NumericLiteral,\n+    SelfKeyword,\n     SelfType,\n     Static,\n     StringLiteral,\n@@ -76,6 +77,7 @@ impl HighlightTag {\n             HighlightTag::Macro => \"macro\",\n             HighlightTag::Module => \"module\",\n             HighlightTag::NumericLiteral => \"numeric_literal\",\n+            HighlightTag::SelfKeyword => \"self_keyword\",\n             HighlightTag::SelfType => \"self_type\",\n             HighlightTag::Static => \"static\",\n             HighlightTag::StringLiteral => \"string_literal\","}, {"sha": "6f125c37cb99672081a5ffe3c100d45f7adf2694", "filename": "crates/rust-analyzer/src/semantic_tokens.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/30f058dfea5d3b8ec558e49967787927752364aa/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30f058dfea5d3b8ec558e49967787927752364aa/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs?ref=30f058dfea5d3b8ec558e49967787927752364aa", "patch": "@@ -40,6 +40,7 @@ define_semantic_token_types![\n     (BUILTIN_TYPE, \"builtinType\"),\n     (ENUM_MEMBER, \"enumMember\"),\n     (LIFETIME, \"lifetime\"),\n+    (SELF_KEYWORD, \"selfKeyword\"),\n     (TYPE_ALIAS, \"typeAlias\"),\n     (UNION, \"union\"),\n     (UNRESOLVED_REFERENCE, \"unresolvedReference\"),"}, {"sha": "8e8e7033db768d31b1599c598ac6e28762741d6a", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/30f058dfea5d3b8ec558e49967787927752364aa/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30f058dfea5d3b8ec558e49967787927752364aa/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=30f058dfea5d3b8ec558e49967787927752364aa", "patch": "@@ -286,6 +286,7 @@ fn semantic_token_type_and_modifiers(\n         HighlightTag::TypeAlias => semantic_tokens::TYPE_ALIAS,\n         HighlightTag::Trait => lsp_types::SemanticTokenType::INTERFACE,\n         HighlightTag::BuiltinType => semantic_tokens::BUILTIN_TYPE,\n+        HighlightTag::SelfKeyword => semantic_tokens::SELF_KEYWORD,\n         HighlightTag::SelfType => lsp_types::SemanticTokenType::TYPE,\n         HighlightTag::Field => lsp_types::SemanticTokenType::PROPERTY,\n         HighlightTag::Function => lsp_types::SemanticTokenType::FUNCTION,"}, {"sha": "acf3ca4b59039d9c6e0d624d4a52caf6d7f464af", "filename": "editors/code/package.json", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/30f058dfea5d3b8ec558e49967787927752364aa/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/30f058dfea5d3b8ec558e49967787927752364aa/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=30f058dfea5d3b8ec558e49967787927752364aa", "patch": "@@ -586,6 +586,11 @@\n                 \"id\": \"attribute\",\n                 \"description\": \"Style for attributes\"\n             },\n+            {\n+                \"id\": \"boolean\",\n+                \"description\": \"Style for boolean literals\",\n+                \"superType\": \"keyword\"\n+            },\n             {\n                 \"id\": \"builtinType\",\n                 \"description\": \"Style for builtin types\",\n@@ -595,6 +600,11 @@\n                 \"id\": \"lifetime\",\n                 \"description\": \"Style for lifetimes\"\n             },\n+            {\n+                \"id\": \"selfKeyword\",\n+                \"description\": \"Style for the self keyword\",\n+                \"superType\": \"keyword\"\n+            },\n             {\n                 \"id\": \"typeAlias\",\n                 \"description\": \"Style for type aliases\","}]}