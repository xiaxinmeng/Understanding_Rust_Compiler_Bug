{"sha": "879ac436890ca8f810b9b8275e4e0ec488f9c5d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3OWFjNDM2ODkwY2E4ZjgxMGI5YjgyNzVlNGUwZWM0ODhmOWM1ZDU=", "commit": {"author": {"name": "Chris Morgan", "email": "me@chrismorgan.info", "date": "2014-02-27T05:54:54Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-28T05:04:04Z"}, "message": "Fix Vim section movements for standard Rust style.\n\n(Expressed another way: make `[[` et al. work with the curly brace at\nthe end of a line as is standard Rust style, not just at the start is it\nis by default in Vim, from K&R style.)\n\nThis came out of #11492, where a simpler but less effective technique\nwas initially proposed; some discussion of the techniques, ways and\nmeans can be found there.\n\nThere are still a few caveats:\n\n- Operator-pending mode behaves differently to the standard behaviour:\n  if inside curly braces, it should delete up to and including the\n  closing of the outermost curly brace (that doesn't seem to me\n  consistent with documented behaviour, but it's what it does). Actual\n  behaviour (the more logical and consistent, in my opinion): up to the\n  start of the next outermost curly brace.\n\n- With folding enabled (`set fdm=syntax`), `[[` and `]]` do not behave\n  as they should: the default behaviour treats an entire closed fold as\n  one line for these purposes while this code does not (I explicitly\n  `set nofoldenable` in the function\u2014the side-effects are worse with\n  folds enabled), leading to unexpected behaviour, the worst of which is\n  `[[` and/or `]]` not working in visual mode on a closed fold (visual\n  mode keeps it at the extreme end of the region line of the folded\n  region, so it's always going back to the opening line of that fold and\n  immediately being shoved back to the end by visual mode).\n\n- `[[` and `]]` are operating inside comments, whereas the standard\n  behaviour skips comments.\n\n- The viewport position is sometimes changed when it should not be\n  necessary.", "tree": {"sha": "c6edf2338c404788402e175e0e6a46f02aad7c95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6edf2338c404788402e175e0e6a46f02aad7c95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/879ac436890ca8f810b9b8275e4e0ec488f9c5d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/879ac436890ca8f810b9b8275e4e0ec488f9c5d5", "html_url": "https://github.com/rust-lang/rust/commit/879ac436890ca8f810b9b8275e4e0ec488f9c5d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/879ac436890ca8f810b9b8275e4e0ec488f9c5d5/comments", "author": {"login": "chris-morgan", "id": 392868, "node_id": "MDQ6VXNlcjM5Mjg2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/392868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-morgan", "html_url": "https://github.com/chris-morgan", "followers_url": "https://api.github.com/users/chris-morgan/followers", "following_url": "https://api.github.com/users/chris-morgan/following{/other_user}", "gists_url": "https://api.github.com/users/chris-morgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-morgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-morgan/subscriptions", "organizations_url": "https://api.github.com/users/chris-morgan/orgs", "repos_url": "https://api.github.com/users/chris-morgan/repos", "events_url": "https://api.github.com/users/chris-morgan/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-morgan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a663a2d3173832d656f4b2a31009407444defe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a663a2d3173832d656f4b2a31009407444defe7", "html_url": "https://github.com/rust-lang/rust/commit/0a663a2d3173832d656f4b2a31009407444defe7"}], "stats": {"total": 55, "additions": 53, "deletions": 2}, "files": [{"sha": "b70cda9b998c405ff372d89825f28f847e8b4384", "filename": "src/etc/vim/ftplugin/rust.vim", "status": "modified", "additions": 53, "deletions": 2, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/879ac436890ca8f810b9b8275e4e0ec488f9c5d5/src%2Fetc%2Fvim%2Fftplugin%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/879ac436890ca8f810b9b8275e4e0ec488f9c5d5/src%2Fetc%2Fvim%2Fftplugin%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fftplugin%2Frust.vim?ref=879ac436890ca8f810b9b8275e4e0ec488f9c5d5", "patch": "@@ -1,7 +1,7 @@\n \" Vim syntax file\n \" Language:     Rust\n \" Maintainer:   Chris Morgan <me@chrismorgan.info>\n-\" Last Change:  2013 Jul 10\n+\" Last Change:  2014 Feb 27\n \n if exists(\"b:did_ftplugin\")\n \tfinish\n@@ -42,4 +42,55 @@ if exists(\"g:loaded_delimitMate\")\n \tlet b:delimitMate_excluded_regions = delimitMate#Get(\"excluded_regions\") . ',rustLifetimeCandidate,rustGenericLifetimeCandidate'\n endif\n \n-let b:undo_ftplugin = \"setlocal formatoptions< comments< commentstring< includeexpr< suffixesadd< | if exists('b:rust_original_delimitMate_excluded_regions') | let b:delimitMate_excluded_regions = b:rust_original_delimitMate_excluded_regions | unlet b:rust_original_delimitMate_excluded_regions | elseif exists('b:delimitMate_excluded_regions') | unlet b:delimitMate_excluded_regions | endif\"\n+\" Bind motion commands to support hanging indents\n+nnoremap <silent> <buffer> [[ :call <SID>Rust_Jump('n', 'Back')<CR>\n+nnoremap <silent> <buffer> ]] :call <SID>Rust_Jump('n', 'Forward')<CR>\n+xnoremap <silent> <buffer> [[ :call <SID>Rust_Jump('v', 'Back')<CR>\n+xnoremap <silent> <buffer> ]] :call <SID>Rust_Jump('v', 'Forward')<CR>\n+onoremap <silent> <buffer> [[ :call <SID>Rust_Jump('o', 'Back')<CR>\n+onoremap <silent> <buffer> ]] :call <SID>Rust_Jump('o', 'Forward')<CR>\n+\n+let b:undo_ftplugin = \"\n+\t\t\\setlocal formatoptions< comments< commentstring< includeexpr< suffixesadd<\n+\t\t\\|if exists('b:rust_original_delimitMate_excluded_regions')\n+\t\t  \\|let b:delimitMate_excluded_regions = b:rust_original_delimitMate_excluded_regions\n+\t\t  \\|unlet b:rust_original_delimitMate_excluded_regions\n+\t\t\\|elseif exists('b:delimitMate_excluded_regions')\n+\t\t  \\|unlet b:delimitMate_excluded_regions\n+\t\t\\|endif\n+\t\t\\|nunmap <buffer> [[\n+\t\t\\|nunmap <buffer> ]]\n+\t\t\\|xunmap <buffer> [[\n+\t\t\\|xunmap <buffer> ]]\n+\t\t\\|ounmap <buffer> [[\n+\t\t\\|ounmap <buffer> ]]\n+\t\t\\\"\n+\n+if exists('*<SID>Rust_Jump') | finish | endif\n+\n+function! <SID>Rust_Jump(mode, function) range\n+\tlet cnt = v:count1\n+\tnormal! m'\n+\tif a:mode ==# 'v'\n+\t\tnorm! gv\n+\tendif\n+\tlet foldenable = &foldenable\n+\tset nofoldenable\n+\twhile cnt > 0\n+\t\texecute \"call <SID>Rust_Jump_\" . a:function . \"()\"\n+\t\tlet cnt = cnt - 1\n+\tendwhile\n+\tlet &foldenable = foldenable\n+endfunction\n+\n+function! <SID>Rust_Jump_Back()\n+\tcall search('{', 'b')\n+\tkeepjumps normal! w99[{\n+endfunction\n+\n+function! <SID>Rust_Jump_Forward()\n+\tnormal! j0\n+\tcall search('{', 'b')\n+\tkeepjumps normal! w99[{%\n+\tcall search('{')\n+endfunction"}]}