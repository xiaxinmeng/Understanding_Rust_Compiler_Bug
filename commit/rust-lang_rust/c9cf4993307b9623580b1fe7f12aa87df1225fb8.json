{"sha": "c9cf4993307b9623580b1fe7f12aa87df1225fb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5Y2Y0OTkzMzA3Yjk2MjM1ODBiMWZlN2YxMmFhODdkZjEyMjVmYjg=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-18T10:18:31Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-19T08:31:42Z"}, "message": "Address following error from rustdoc tests:\n\nerror[E0106]: missing lifetime specifier\n --> /checkout/obj/build/x86_64-unknown-linux-gnu/test/error-index.md:11424:23\n  |\n9 | fn demo(s: &mut S) -> &mut String { let p = &mut *(*s).data; p }\n  |                       ^ expected lifetime parameter\n  |\n  = help: this function's return type contains a borrowed value, but the signature does not say which one of `s`'s 2 lifetimes it is borrowed from", "tree": {"sha": "a0a939681f1274f845c0270bab0ce0aa392ce636", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0a939681f1274f845c0270bab0ce0aa392ce636"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9cf4993307b9623580b1fe7f12aa87df1225fb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9cf4993307b9623580b1fe7f12aa87df1225fb8", "html_url": "https://github.com/rust-lang/rust/commit/c9cf4993307b9623580b1fe7f12aa87df1225fb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9cf4993307b9623580b1fe7f12aa87df1225fb8/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3b611f61954c565b550a6f6ae42715f56db0d85", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3b611f61954c565b550a6f6ae42715f56db0d85", "html_url": "https://github.com/rust-lang/rust/commit/e3b611f61954c565b550a6f6ae42715f56db0d85"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "24197c9e4b88f6c0d844677471974466c75645db", "filename": "src/librustc_mir/diagnostics.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c9cf4993307b9623580b1fe7f12aa87df1225fb8/src%2Flibrustc_mir%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9cf4993307b9623580b1fe7f12aa87df1225fb8/src%2Flibrustc_mir%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdiagnostics.rs?ref=c9cf4993307b9623580b1fe7f12aa87df1225fb8", "patch": "@@ -2194,13 +2194,15 @@ lifetime of a type that implements the `Drop` trait.\n Example of erroneous code:\n \n ```compile_fail,E0713\n+#![feature(nll)]\n+\n pub struct S<'a> { data: &'a mut String }\n \n impl<'a> Drop for S<'a> {\n     fn drop(&mut self) { self.data.push_str(\"being dropped\"); }\n }\n \n-fn demo(s: S) -> &mut String { let p = &mut *s.data; p }\n+fn demo<'a>(s: S<'a>) -> &'a mut String { let p = &mut *s.data; p }\n ```\n \n Here, `demo` tries to borrow the string data held within its\n@@ -2222,14 +2224,24 @@ not run while the string-data is borrowed; for example by taking `S`\n by reference:\n \n ```\n+#![feature(nll)]\n+\n pub struct S<'a> { data: &'a mut String }\n \n impl<'a> Drop for S<'a> {\n     fn drop(&mut self) { self.data.push_str(\"being dropped\"); }\n }\n \n-fn demo(s: &mut S) -> &mut String { let p = &mut *(*s).data; p }\n+fn demo<'a>(s: &'a mut S<'a>) -> &'a mut String { let p = &mut *(*s).data; p }\n ```\n+\n+Note that this approach needs a reference to S with lifetime `'a`.\n+Nothing shorter than `'a` will suffice: a shorter lifetime would imply\n+that after `demo` finishes excuting, something else (such as the\n+destructor!) could access `s.data` after the end of that shorter\n+lifetime, which would again violate the `&mut`-borrow's exclusive\n+access.\n+\n \"##,\n \n }"}]}