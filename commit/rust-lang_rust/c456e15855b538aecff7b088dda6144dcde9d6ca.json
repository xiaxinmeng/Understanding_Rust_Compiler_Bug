{"sha": "c456e15855b538aecff7b088dda6144dcde9d6ca", "node_id": "C_kwDOAAsO6NoAKGM0NTZlMTU4NTViNTM4YWVjZmY3YjA4OGRkYTYxNDRkY2RlOWQ2Y2E", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2023-04-17T12:35:33Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2023-04-17T18:27:34Z"}, "message": "Add regression tests for #110422", "tree": {"sha": "a22ebba0f042deb577fd099e6128cdc4c38eafa9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a22ebba0f042deb577fd099e6128cdc4c38eafa9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c456e15855b538aecff7b088dda6144dcde9d6ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c456e15855b538aecff7b088dda6144dcde9d6ca", "html_url": "https://github.com/rust-lang/rust/commit/c456e15855b538aecff7b088dda6144dcde9d6ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c456e15855b538aecff7b088dda6144dcde9d6ca/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3c9f8f5f8cb96e0536bc8d4e76e66c5e7caba56", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3c9f8f5f8cb96e0536bc8d4e76e66c5e7caba56", "html_url": "https://github.com/rust-lang/rust/commit/c3c9f8f5f8cb96e0536bc8d4e76e66c5e7caba56"}], "stats": {"total": 85, "additions": 68, "deletions": 17}, "files": [{"sha": "096130d7768283beb825834c442d1c8ad1ddea0a", "filename": "tests/rustdoc-ui/infinite-recursive-type-impl-trait.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c456e15855b538aecff7b088dda6144dcde9d6ca/tests%2Frustdoc-ui%2Finfinite-recursive-type-impl-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c456e15855b538aecff7b088dda6144dcde9d6ca/tests%2Frustdoc-ui%2Finfinite-recursive-type-impl-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Finfinite-recursive-type-impl-trait.rs?ref=c456e15855b538aecff7b088dda6144dcde9d6ca", "patch": "@@ -1,6 +1,9 @@\n+// check-pass\n+\n fn f() -> impl Sized {\n-    enum E { //~ ERROR\n+    enum E {\n         V(E),\n     }\n+\n     unimplemented!()\n }"}, {"sha": "a61577bd14afce57afb9e4adabdeb9329774a656", "filename": "tests/rustdoc-ui/infinite-recursive-type-impl-trait.stderr", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c3c9f8f5f8cb96e0536bc8d4e76e66c5e7caba56/tests%2Frustdoc-ui%2Finfinite-recursive-type-impl-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c3c9f8f5f8cb96e0536bc8d4e76e66c5e7caba56/tests%2Frustdoc-ui%2Finfinite-recursive-type-impl-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Finfinite-recursive-type-impl-trait.stderr?ref=c3c9f8f5f8cb96e0536bc8d4e76e66c5e7caba56", "patch": "@@ -1,16 +0,0 @@\n-error[E0072]: recursive type `f::E` has infinite size\n-  --> $DIR/infinite-recursive-type-impl-trait.rs:2:5\n-   |\n-LL |     enum E {\n-   |     ^^^^^^\n-LL |         V(E),\n-   |           - recursive without indirection\n-   |\n-help: insert some indirection (e.g., a `Box`, `Rc`, or `&`) to break the cycle\n-   |\n-LL |         V(Box<E>),\n-   |           ++++ +\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0072`."}, {"sha": "ee8ed5cc6e17f6a2c0efb75640a24f0d79871cbe", "filename": "tests/rustdoc/issue-110422-inner-private.rs", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/c456e15855b538aecff7b088dda6144dcde9d6ca/tests%2Frustdoc%2Fissue-110422-inner-private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c456e15855b538aecff7b088dda6144dcde9d6ca/tests%2Frustdoc%2Fissue-110422-inner-private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fissue-110422-inner-private.rs?ref=c456e15855b538aecff7b088dda6144dcde9d6ca", "patch": "@@ -0,0 +1,64 @@\n+// Regression test for <https://github.com/rust-lang/rust/issues/110422>.\n+// This test ensures that inner items (except for implementations and macros)\n+// don't appear in documentation.\n+\n+// compile-flags: --document-private-items\n+\n+#![crate_name = \"foo\"]\n+\n+// @has 'foo/index.html'\n+// Checking there is no \"trait\" entry.\n+// @count - '//*[@id=\"main-content\"]/*[@class=\"small-section-header\"]' 4\n+// @has - '//*[@id=\"main-content\"]/*[@class=\"small-section-header\"]' 'Structs'\n+// @has - '//*[@id=\"main-content\"]/*[@class=\"small-section-header\"]' 'Constants'\n+// @has - '//*[@id=\"main-content\"]/*[@class=\"small-section-header\"]' 'Functions'\n+// @has - '//*[@id=\"main-content\"]/*[@class=\"small-section-header\"]' 'Macros'\n+\n+// @has - '//a[@href=\"fn.foo.html\"]' 'foo'\n+fn foo() {\n+    fn bar() {}\n+\n+    // @has - '//a[@class=\"macro\"]' 'visible_macro'\n+    // @!has - '//a[@class=\"macro\"]' 'non_visible_macro'\n+    // @has 'foo/macro.visible_macro.html'\n+    // @!has 'foo/macro.non_visible_macro.html'\n+    #[macro_export]\n+    macro_rules! visible_macro {\n+        () => {}\n+    }\n+\n+    macro_rules! non_visible_macro {\n+        () => {}\n+    }\n+}\n+\n+// @has 'foo/index.html'\n+// @has - '//a[@href=\"struct.Bar.html\"]' 'Bar'\n+struct Bar;\n+\n+const BAR: i32 = {\n+    // @!has - '//a[@href=\"fn.yo.html\"]' 'yo'\n+    // @!has 'foo/fn.yo.html'\n+    fn yo() {}\n+\n+    // @!has 'foo/index.html' '//a[@href=\"trait.Foo.html\"]' 'Foo'\n+    // @!has 'foo/trait.Foo.html'\n+    trait Foo {\n+        fn babar() {}\n+    }\n+    impl Foo for Bar {}\n+\n+    // @has 'foo/struct.Bar.html'\n+    // @has - '//*[@id=\"method.foo\"]/*[@class=\"code-header\"]' 'pub(crate) fn foo()'\n+    // @count - '//*[@id=\"main-content\"]/*[@class=\"small-section-header\"]' 3\n+    // We now check that the `Foo` trait is not documented nor visible on `Bar` page.\n+    // @has - '//*[@id=\"main-content\"]/*[@class=\"small-section-header\"]' 'Implementations'\n+    // @has - '//*[@id=\"main-content\"]/*[@class=\"small-section-header\"]' 'Auto Trait Implementations'\n+    // @has - '//*[@id=\"main-content\"]/*[@class=\"small-section-header\"]' 'Blanket Implementations'\n+    // @!has - '//*[@href=\"trait.Foo.html#method.babar\"]/*[@class=\"code-header\"]' 'fn babar()'\n+    impl Bar {\n+        fn foo() {}\n+    }\n+\n+    1\n+};"}]}