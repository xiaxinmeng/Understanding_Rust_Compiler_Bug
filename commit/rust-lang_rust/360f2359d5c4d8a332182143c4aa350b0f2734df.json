{"sha": "360f2359d5c4d8a332182143c4aa350b0f2734df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2MGYyMzU5ZDVjNGQ4YTMzMjE4MjE0M2M0YWEzNTBiMGYyNzM0ZGY=", "commit": {"author": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2018-01-14T15:30:06Z"}, "committer": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2018-01-14T15:30:06Z"}, "message": "Fix name", "tree": {"sha": "5f3c09d3c93fe0fce47205e23775cc37582e2594", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f3c09d3c93fe0fce47205e23775cc37582e2594"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/360f2359d5c4d8a332182143c4aa350b0f2734df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/360f2359d5c4d8a332182143c4aa350b0f2734df", "html_url": "https://github.com/rust-lang/rust/commit/360f2359d5c4d8a332182143c4aa350b0f2734df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/360f2359d5c4d8a332182143c4aa350b0f2734df/comments", "author": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "committer": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e833ea5ce306566e273e078974d922bc2b45fb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e833ea5ce306566e273e078974d922bc2b45fb1", "html_url": "https://github.com/rust-lang/rust/commit/7e833ea5ce306566e273e078974d922bc2b45fb1"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "138dbed31358d9c7fbdc3ca3c80d298fe2d8727e", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/360f2359d5c4d8a332182143c4aa350b0f2734df/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f2359d5c4d8a332182143c4aa350b0f2734df/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=360f2359d5c4d8a332182143c4aa350b0f2734df", "patch": "@@ -1142,7 +1142,7 @@ fn lint_fold_any(cx: &LateContext, expr: &hir::Expr, fold_args: &[hir::Expr]) {\n \n         // Extract the names of the two arguments to the closure\n         if let Some(first_arg_ident) = get_arg_name(&closure_body.arguments[0].pat);\n-        if let Some(second_first_arg_ident) = get_arg_name(&closure_body.arguments[1].pat);\n+        if let Some(second_arg_ident) = get_arg_name(&closure_body.arguments[1].pat);\n \n         // Check if the closure body is of the form `acc || some_expr(x)`\n         if let hir::ExprBinary(ref bin_op, ref left_expr, ref right_expr) = closure_expr.node;\n@@ -1161,7 +1161,7 @@ fn lint_fold_any(cx: &LateContext, expr: &hir::Expr, fold_args: &[hir::Expr]) {\n                 &format!(\n                     \".fold(false, |{f}, {s}| {f} || {r})) is more succinctly expressed as .any(|{s}| {r})\",\n                     f = first_arg_ident,\n-                    s = second_first_arg_ident,\n+                    s = second_arg_ident,\n                     r = right_source\n                 ),\n             );"}]}