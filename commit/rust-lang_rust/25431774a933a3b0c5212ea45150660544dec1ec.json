{"sha": "25431774a933a3b0c5212ea45150660544dec1ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1NDMxNzc0YTkzM2EzYjBjNTIxMmVhNDUxNTA2NjA1NDRkZWMxZWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-02T19:21:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-02T19:21:34Z"}, "message": "auto merge of #12651 : lucab/rust/llvmdep-ldflags, r=alexcrichton\n\nThis commit let librustc automatically pickup LDFLAGS dependencies\r\ninherited from LLVM, which may otherwise result in undefined\r\nreferences to external symbols under certain linking environment.\r\n\r\nA symptom of this issue is eg. a failure when trying to link against\r\nlibrustc (due to unresolved ffi_* symbols), while using a system-wide\r\nLLVM.\r\n\r\nSigned-off-by: Luca Bruno <lucab@debian.org>", "tree": {"sha": "343e0e5df0f9dcdb2957082145a9313352dde926", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/343e0e5df0f9dcdb2957082145a9313352dde926"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25431774a933a3b0c5212ea45150660544dec1ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25431774a933a3b0c5212ea45150660544dec1ec", "html_url": "https://github.com/rust-lang/rust/commit/25431774a933a3b0c5212ea45150660544dec1ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25431774a933a3b0c5212ea45150660544dec1ec/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "910012aabae3dfd4b7190f46e88cde75804b5cb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/910012aabae3dfd4b7190f46e88cde75804b5cb0", "html_url": "https://github.com/rust-lang/rust/commit/910012aabae3dfd4b7190f46e88cde75804b5cb0"}, {"sha": "357cadf722c55b4b4d379503c33bc791ea6e1cab", "url": "https://api.github.com/repos/rust-lang/rust/commits/357cadf722c55b4b4d379503c33bc791ea6e1cab", "html_url": "https://github.com/rust-lang/rust/commit/357cadf722c55b4b4d379503c33bc791ea6e1cab"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "e124ca571def601491818bd95b6a691c22843032", "filename": ".travis.yml", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/25431774a933a3b0c5212ea45150660544dec1ec/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/25431774a933a3b0c5212ea45150660544dec1ec/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=25431774a933a3b0c5212ea45150660544dec1ec", "patch": "@@ -26,16 +26,11 @@ before_script:\n # Note that this is meant to run in a \"fairly small\" amount of time, so this\n # isn't exhaustive at all.\n #\n-# The \"-lffi and -lncurses\" are required for LLVM. The LLVM that rust builds\n-# manually disables bringing in these two libraries, but the stock LLVM was\n-# apparently built with these options. We provide these options when building so\n-# the `rustc` binary can successfully link.\n-#\n # As a result of https://github.com/travis-ci/travis-ci/issues/1066, we run\n # everything in one large command instead of multiple commands.\n script: |\n   make tidy &&\n-  RUSTFLAGS=\"-C link-args='-lffi -lncurses'\" make -j4 rustc-stage1 &&\n+  make -j4 rustc-stage1 &&\n   make check-stage1-std check-stage1-rpass check-stage1-cfail check-stage1-rfail\n \n env:"}, {"sha": "189d0269cd88e31a9f0b021adc059ea5b9f37da2", "filename": "src/etc/mklldeps.py", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/25431774a933a3b0c5212ea45150660544dec1ec/src%2Fetc%2Fmklldeps.py", "raw_url": "https://github.com/rust-lang/rust/raw/25431774a933a3b0c5212ea45150660544dec1ec/src%2Fetc%2Fmklldeps.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmklldeps.py?ref=25431774a933a3b0c5212ea45150660544dec1ec", "patch": "@@ -55,6 +55,7 @@\n \n     f.write(\"#[cfg(\" + ', '.join(cfg) + \")]\\n\")\n \n+    # LLVM libs\n     args = [llconfig, '--libs']\n     args.extend(components)\n     proc = subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n@@ -67,6 +68,21 @@\n     for lib in out.strip().split(' '):\n         lib = lib[2:] # chop of the leading '-l'\n         f.write(\"#[link(name = \\\"\" + lib + \"\\\", kind = \\\"static\\\")]\\n\")\n+\n+    # LLVM ldflags\n+    args = [llconfig, '--ldflags']\n+    proc = subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+    out, err = proc.communicate()\n+\n+    if err:\n+        print(\"failed to run llconfig: args = `{}`\".format(args))\n+        sys.exit(1)\n+\n+    for lib in out.strip().split(' '):\n+        if lib[:2] == \"-l\":\n+            f.write(\"#[link(name = \\\"\" + lib[2:] + \"\\\")]\\n\")\n+\n+    #extra\n     f.write(\"#[link(name = \\\"stdc++\\\")]\\n\")\n     if os == 'win32':\n         f.write(\"#[link(name = \\\"imagehlp\\\")]\\n\")"}]}