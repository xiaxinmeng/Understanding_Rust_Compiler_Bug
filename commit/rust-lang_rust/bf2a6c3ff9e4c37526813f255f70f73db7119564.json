{"sha": "bf2a6c3ff9e4c37526813f255f70f73db7119564", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMmE2YzNmZjllNGMzNzUyNjgxM2YyNTVmNzBmNzNkYjcxMTk1NjQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "public.oliver.schneider@kit.edu", "date": "2018-05-02T10:30:45Z"}, "committer": {"name": "Oliver Schneider", "email": "public.oliver.schneider@kit.edu", "date": "2018-05-02T13:48:26Z"}, "message": "Allow unaligned reads in constants", "tree": {"sha": "bdf32994a85c6200dc8840cd6dd59ac252b39c5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdf32994a85c6200dc8840cd6dd59ac252b39c5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf2a6c3ff9e4c37526813f255f70f73db7119564", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf2a6c3ff9e4c37526813f255f70f73db7119564", "html_url": "https://github.com/rust-lang/rust/commit/bf2a6c3ff9e4c37526813f255f70f73db7119564", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf2a6c3ff9e4c37526813f255f70f73db7119564/comments", "author": null, "committer": null, "parents": [{"sha": "a2726846f6d6280b752019472b6bd791c0752006", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2726846f6d6280b752019472b6bd791c0752006", "html_url": "https://github.com/rust-lang/rust/commit/a2726846f6d6280b752019472b6bd791c0752006"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "623e0de478bcaf6979361d138b70674651fbdd36", "filename": "src/librustc_mir/hair/pattern/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf2a6c3ff9e4c37526813f255f70f73db7119564/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf2a6c3ff9e4c37526813f255f70f73db7119564/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs?ref=bf2a6c3ff9e4c37526813f255f70f73db7119564", "patch": "@@ -792,7 +792,7 @@ impl<'a, 'tcx> PatternContext<'a, 'tcx> {\n                 ConstVal::Value(miri) => const_val_field(\n                     self.tcx, self.param_env, instance,\n                     variant_opt, field, miri, cv.ty,\n-                ).unwrap(),\n+                ).expect(\"field access failed\"),\n                 _ => bug!(\"{:#?} is not a valid adt\", cv),\n             };\n             self.const_to_pat(instance, val, id, span)"}, {"sha": "bea29b6926aa63c1b48b1c6a5266a75b809885d7", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bf2a6c3ff9e4c37526813f255f70f73db7119564/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf2a6c3ff9e4c37526813f255f70f73db7119564/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=bf2a6c3ff9e4c37526813f255f70f73db7119564", "patch": "@@ -1340,9 +1340,7 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M\n         use syntax::ast::FloatTy;\n \n         let layout = self.layout_of(ty)?;\n-        // do the strongest layout check of the two\n-        let align = layout.align.max(ptr_align);\n-        self.memory.check_align(ptr, align)?;\n+        self.memory.check_align(ptr, ptr_align)?;\n \n         if layout.size.bytes() == 0 {\n             return Ok(Some(Value::ByVal(PrimVal::Undef)));"}, {"sha": "1db12a06b03c4db596fd8f68314441d5cd542e16", "filename": "src/test/ui/const-eval/ice-packed.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/bf2a6c3ff9e4c37526813f255f70f73db7119564/src%2Ftest%2Fui%2Fconst-eval%2Fice-packed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf2a6c3ff9e4c37526813f255f70f73db7119564/src%2Ftest%2Fui%2Fconst-eval%2Fice-packed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fice-packed.rs?ref=bf2a6c3ff9e4c37526813f255f70f73db7119564", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-pass\n+#[derive(Copy, Clone, PartialEq, Eq)]\n+#[repr(packed)]\n+pub struct Num(u64);\n+\n+impl Num {\n+    pub const ZERO: Self = Num(0);\n+}\n+\n+pub fn decrement(a: Num) -> Num {\n+    match a {\n+        Num::ZERO => Num::ZERO,\n+        a => Num(a.0 - 1)\n+    }\n+}\n+\n+fn main() {\n+}"}]}