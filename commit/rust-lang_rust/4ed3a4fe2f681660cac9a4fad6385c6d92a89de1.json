{"sha": "4ed3a4fe2f681660cac9a4fad6385c6d92a89de1", "node_id": "C_kwDOAAsO6NoAKDRlZDNhNGZlMmY2ODE2NjBjYWM5YTRmYWQ2Mzg1YzZkOTJhODlkZTE", "commit": {"author": {"name": "Yechan Bae", "email": "yechan@gatech.edu", "date": "2021-10-12T20:01:58Z"}, "committer": {"name": "Yechan Bae", "email": "yechan@gatech.edu", "date": "2021-10-12T20:02:13Z"}, "message": "Update lint description for new() and default()", "tree": {"sha": "51588139cddbdc5fe4432afda73395daaf3d5ef0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51588139cddbdc5fe4432afda73395daaf3d5ef0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ed3a4fe2f681660cac9a4fad6385c6d92a89de1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ed3a4fe2f681660cac9a4fad6385c6d92a89de1", "html_url": "https://github.com/rust-lang/rust/commit/4ed3a4fe2f681660cac9a4fad6385c6d92a89de1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ed3a4fe2f681660cac9a4fad6385c6d92a89de1/comments", "author": {"login": "Qwaz", "id": 5073807, "node_id": "MDQ6VXNlcjUwNzM4MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5073807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Qwaz", "html_url": "https://github.com/Qwaz", "followers_url": "https://api.github.com/users/Qwaz/followers", "following_url": "https://api.github.com/users/Qwaz/following{/other_user}", "gists_url": "https://api.github.com/users/Qwaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Qwaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Qwaz/subscriptions", "organizations_url": "https://api.github.com/users/Qwaz/orgs", "repos_url": "https://api.github.com/users/Qwaz/repos", "events_url": "https://api.github.com/users/Qwaz/events{/privacy}", "received_events_url": "https://api.github.com/users/Qwaz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Qwaz", "id": 5073807, "node_id": "MDQ6VXNlcjUwNzM4MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5073807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Qwaz", "html_url": "https://github.com/Qwaz", "followers_url": "https://api.github.com/users/Qwaz/followers", "following_url": "https://api.github.com/users/Qwaz/following{/other_user}", "gists_url": "https://api.github.com/users/Qwaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Qwaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Qwaz/subscriptions", "organizations_url": "https://api.github.com/users/Qwaz/orgs", "repos_url": "https://api.github.com/users/Qwaz/repos", "events_url": "https://api.github.com/users/Qwaz/events{/privacy}", "received_events_url": "https://api.github.com/users/Qwaz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03fed75c89880e5ed919eec1ba93dbe769d463a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/03fed75c89880e5ed919eec1ba93dbe769d463a2", "html_url": "https://github.com/rust-lang/rust/commit/03fed75c89880e5ed919eec1ba93dbe769d463a2"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "f3e8b6881058f93907762baedb2a472ab74fc1bc", "filename": "clippy_lints/src/uninit_vec.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4ed3a4fe2f681660cac9a4fad6385c6d92a89de1/clippy_lints%2Fsrc%2Funinit_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ed3a4fe2f681660cac9a4fad6385c6d92a89de1/clippy_lints%2Fsrc%2Funinit_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funinit_vec.rs?ref=4ed3a4fe2f681660cac9a4fad6385c6d92a89de1", "patch": "@@ -13,14 +13,16 @@ use rustc_span::{sym, Span};\n declare_clippy_lint! {\n     /// ### What it does\n     /// Checks for `set_len()` call that creates `Vec` with uninitialized elements.\n-    /// This is commonly caused by calling `set_len()` right after after calling\n-    /// `with_capacity()` or `reserve()`.\n+    /// This is commonly caused by calling `set_len()` right after allocating or\n+    /// reserving a buffer with `new()`, `default()`, `with_capacity()`, or `reserve()`.\n     ///\n     /// ### Why is this bad?\n     /// It creates a `Vec` with uninitialized data, which leads to\n-    /// undefined behavior with most safe operations.\n+    /// undefined behavior with most safe operations. Notably, uninitialized\n+    /// `Vec<u8>` must not be used with generic `Read`.\n     ///\n-    /// Notably, uninitialized `Vec<u8>` must not be used with generic `Read`.\n+    /// Moreover, calling `set_len()` on a `Vec` created with `new()` or `default()`\n+    /// creates out-of-bound values that lead to heap memory corruption when used.\n     ///\n     /// ### Known Problems\n     /// This lint only checks directly adjacent statements."}]}