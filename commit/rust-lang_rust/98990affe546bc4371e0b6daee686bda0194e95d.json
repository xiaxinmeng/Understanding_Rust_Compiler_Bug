{"sha": "98990affe546bc4371e0b6daee686bda0194e95d", "node_id": "C_kwDOAAsO6NoAKDk4OTkwYWZmZTU0NmJjNDM3MWUwYjZkYWVlNjg2YmRhMDE5NGU5NWQ", "commit": {"author": {"name": "XFFXFF", "email": "1247714429@qq.com", "date": "2023-03-04T02:14:12Z"}, "committer": {"name": "XFFXFF", "email": "1247714429@qq.com", "date": "2023-03-07T00:24:25Z"}, "message": "add more tests", "tree": {"sha": "dec0aa4cede514003b73467cf380ecbd0aa2406a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dec0aa4cede514003b73467cf380ecbd0aa2406a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98990affe546bc4371e0b6daee686bda0194e95d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98990affe546bc4371e0b6daee686bda0194e95d", "html_url": "https://github.com/rust-lang/rust/commit/98990affe546bc4371e0b6daee686bda0194e95d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98990affe546bc4371e0b6daee686bda0194e95d/comments", "author": {"login": "xffxff", "id": 30254428, "node_id": "MDQ6VXNlcjMwMjU0NDI4", "avatar_url": "https://avatars.githubusercontent.com/u/30254428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xffxff", "html_url": "https://github.com/xffxff", "followers_url": "https://api.github.com/users/xffxff/followers", "following_url": "https://api.github.com/users/xffxff/following{/other_user}", "gists_url": "https://api.github.com/users/xffxff/gists{/gist_id}", "starred_url": "https://api.github.com/users/xffxff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xffxff/subscriptions", "organizations_url": "https://api.github.com/users/xffxff/orgs", "repos_url": "https://api.github.com/users/xffxff/repos", "events_url": "https://api.github.com/users/xffxff/events{/privacy}", "received_events_url": "https://api.github.com/users/xffxff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xffxff", "id": 30254428, "node_id": "MDQ6VXNlcjMwMjU0NDI4", "avatar_url": "https://avatars.githubusercontent.com/u/30254428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xffxff", "html_url": "https://github.com/xffxff", "followers_url": "https://api.github.com/users/xffxff/followers", "following_url": "https://api.github.com/users/xffxff/following{/other_user}", "gists_url": "https://api.github.com/users/xffxff/gists{/gist_id}", "starred_url": "https://api.github.com/users/xffxff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xffxff/subscriptions", "organizations_url": "https://api.github.com/users/xffxff/orgs", "repos_url": "https://api.github.com/users/xffxff/repos", "events_url": "https://api.github.com/users/xffxff/events{/privacy}", "received_events_url": "https://api.github.com/users/xffxff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "995aacfce8b16472aa21cf0a030aebedfe7ed2bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/995aacfce8b16472aa21cf0a030aebedfe7ed2bc", "html_url": "https://github.com/rust-lang/rust/commit/995aacfce8b16472aa21cf0a030aebedfe7ed2bc"}], "stats": {"total": 328, "additions": 328, "deletions": 0}, "files": [{"sha": "026fecf4c9d53d04d18f4361e3703cace79e4d16", "filename": "crates/parser/test_data/parser/err/0049_let_else_right_curly_brace_for.rast", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0049_let_else_right_curly_brace_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0049_let_else_right_curly_brace_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0049_let_else_right_curly_brace_for.rast?ref=98990affe546bc4371e0b6daee686bda0194e95d", "patch": "@@ -0,0 +1,58 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"f\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          WILDCARD_PAT\n+            UNDERSCORE \"_\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          FOR_EXPR\n+            FOR_KW \"for\"\n+            WHITESPACE \" \"\n+            WILDCARD_PAT\n+              UNDERSCORE \"_\"\n+            WHITESPACE \" \"\n+            IN_KW \"in\"\n+            WHITESPACE \" \"\n+            RANGE_EXPR\n+              LITERAL\n+                INT_NUMBER \"0\"\n+              DOT2 \"..\"\n+              LITERAL\n+                INT_NUMBER \"10\"\n+            WHITESPACE \" \"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                WHITESPACE \"\\n    \"\n+                R_CURLY \"}\"\n+          WHITESPACE \" \"\n+          LET_ELSE\n+            ELSE_KW \"else\"\n+            WHITESPACE \" \"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                WHITESPACE \"\\n        \"\n+                RETURN_EXPR\n+                  RETURN_KW \"return\"\n+                WHITESPACE \"\\n    \"\n+                R_CURLY \"}\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+error 43: right curly brace `}` before `else` in a `let...else` statement not allowed"}, {"sha": "d410274198d1d492e0b4ffd8c23a2feb7b141957", "filename": "crates/parser/test_data/parser/err/0049_let_else_right_curly_brace_for.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0049_let_else_right_curly_brace_for.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0049_let_else_right_curly_brace_for.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0049_let_else_right_curly_brace_for.rs?ref=98990affe546bc4371e0b6daee686bda0194e95d", "patch": "@@ -0,0 +1,6 @@\n+fn f() {\n+    let _ = for _ in 0..10 {\n+    } else {\n+        return\n+    };\n+}\n\\ No newline at end of file"}, {"sha": "102321954130d2d3c49a1bfe73fd75f73d9fcd97", "filename": "crates/parser/test_data/parser/err/0050_let_else_right_curly_brace_loop.rast", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0050_let_else_right_curly_brace_loop.rast", "raw_url": "https://github.com/rust-lang/rust/raw/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0050_let_else_right_curly_brace_loop.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0050_let_else_right_curly_brace_loop.rast?ref=98990affe546bc4371e0b6daee686bda0194e95d", "patch": "@@ -0,0 +1,46 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"f\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          WILDCARD_PAT\n+            UNDERSCORE \"_\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          LOOP_EXPR\n+            LOOP_KW \"loop\"\n+            WHITESPACE \" \"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                WHITESPACE \"\\n    \"\n+                R_CURLY \"}\"\n+          WHITESPACE \" \"\n+          LET_ELSE\n+            ELSE_KW \"else\"\n+            WHITESPACE \" \"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                WHITESPACE \"\\n        \"\n+                RETURN_EXPR\n+                  RETURN_KW \"return\"\n+                WHITESPACE \"\\n    \"\n+                R_CURLY \"}\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+error 33: right curly brace `}` before `else` in a `let...else` statement not allowed"}, {"sha": "28b892869a18e7692a27d647df288f83f0bd937e", "filename": "crates/parser/test_data/parser/err/0050_let_else_right_curly_brace_loop.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0050_let_else_right_curly_brace_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0050_let_else_right_curly_brace_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0050_let_else_right_curly_brace_loop.rs?ref=98990affe546bc4371e0b6daee686bda0194e95d", "patch": "@@ -0,0 +1,6 @@\n+fn f() {\n+    let _ = loop {\n+    } else {\n+        return\n+    };\n+}\n\\ No newline at end of file"}, {"sha": "6e1181246c06381d2fbd715956324af493397e02", "filename": "crates/parser/test_data/parser/err/0051_let_else_right_curly_brace_match.rast", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0051_let_else_right_curly_brace_match.rast", "raw_url": "https://github.com/rust-lang/rust/raw/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0051_let_else_right_curly_brace_match.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0051_let_else_right_curly_brace_match.rast?ref=98990affe546bc4371e0b6daee686bda0194e95d", "patch": "@@ -0,0 +1,85 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"f\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          WILDCARD_PAT\n+            UNDERSCORE \"_\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          MATCH_EXPR\n+            MATCH_KW \"match\"\n+            WHITESPACE \" \"\n+            CALL_EXPR\n+              PATH_EXPR\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"Some\"\n+              ARG_LIST\n+                L_PAREN \"(\"\n+                LITERAL\n+                  INT_NUMBER \"1\"\n+                R_PAREN \")\"\n+            WHITESPACE \" \"\n+            MATCH_ARM_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                TUPLE_STRUCT_PAT\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"Some\"\n+                  L_PAREN \"(\"\n+                  WILDCARD_PAT\n+                    UNDERSCORE \"_\"\n+                  R_PAREN \")\"\n+                WHITESPACE \" \"\n+                FAT_ARROW \"=>\"\n+                WHITESPACE \" \"\n+                LITERAL\n+                  INT_NUMBER \"1\"\n+                COMMA \",\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                IDENT_PAT\n+                  NAME\n+                    IDENT \"None\"\n+                WHITESPACE \" \"\n+                FAT_ARROW \"=>\"\n+                WHITESPACE \" \"\n+                LITERAL\n+                  INT_NUMBER \"2\"\n+                COMMA \",\"\n+              WHITESPACE \"\\n    \"\n+              R_CURLY \"}\"\n+          WHITESPACE \" \"\n+          LET_ELSE\n+            ELSE_KW \"else\"\n+            WHITESPACE \" \"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                WHITESPACE \"\\n        \"\n+                RETURN_EXPR\n+                  RETURN_KW \"return\"\n+                WHITESPACE \"\\n    \"\n+                R_CURLY \"}\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+error 83: right curly brace `}` before `else` in a `let...else` statement not allowed"}, {"sha": "902d70daed52c2f362c2bae3f332f2d091a0638a", "filename": "crates/parser/test_data/parser/err/0051_let_else_right_curly_brace_match.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0051_let_else_right_curly_brace_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0051_let_else_right_curly_brace_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0051_let_else_right_curly_brace_match.rs?ref=98990affe546bc4371e0b6daee686bda0194e95d", "patch": "@@ -0,0 +1,8 @@\n+fn f() {\n+    let _ = match Some(1) {\n+        Some(_) => 1,\n+        None => 2,\n+    } else {\n+        return\n+    };\n+}\n\\ No newline at end of file"}, {"sha": "298d47d5394b3b247b8beb7bbf3ab7f27087e2d9", "filename": "crates/parser/test_data/parser/err/0052_let_else_right_curly_brace_while.rast", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0052_let_else_right_curly_brace_while.rast", "raw_url": "https://github.com/rust-lang/rust/raw/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0052_let_else_right_curly_brace_while.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0052_let_else_right_curly_brace_while.rast?ref=98990affe546bc4371e0b6daee686bda0194e95d", "patch": "@@ -0,0 +1,49 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"f\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          WILDCARD_PAT\n+            UNDERSCORE \"_\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          WHILE_EXPR\n+            WHILE_KW \"while\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              TRUE_KW \"true\"\n+            WHITESPACE \" \"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                WHITESPACE \"\\n    \"\n+                R_CURLY \"}\"\n+          WHITESPACE \" \"\n+          LET_ELSE\n+            ELSE_KW \"else\"\n+            WHITESPACE \" \"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                WHITESPACE \"\\n        \"\n+                RETURN_EXPR\n+                  RETURN_KW \"return\"\n+                WHITESPACE \"\\n    \"\n+                R_CURLY \"}\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+error 39: right curly brace `}` before `else` in a `let...else` statement not allowed"}, {"sha": "a52343d8e6f456a2311942df62df96744b6e795f", "filename": "crates/parser/test_data/parser/err/0052_let_else_right_curly_brace_while.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0052_let_else_right_curly_brace_while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0052_let_else_right_curly_brace_while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0052_let_else_right_curly_brace_while.rs?ref=98990affe546bc4371e0b6daee686bda0194e95d", "patch": "@@ -0,0 +1,6 @@\n+fn f() {\n+    let _ = while true {\n+    } else {\n+        return\n+    };\n+}\n\\ No newline at end of file"}, {"sha": "c0a4b0400d89dd0663cd741063ec71053314fb97", "filename": "crates/parser/test_data/parser/err/0053_let_else_right_curly_brace_if.rast", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0053_let_else_right_curly_brace_if.rast", "raw_url": "https://github.com/rust-lang/rust/raw/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0053_let_else_right_curly_brace_if.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0053_let_else_right_curly_brace_if.rast?ref=98990affe546bc4371e0b6daee686bda0194e95d", "patch": "@@ -0,0 +1,57 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"f\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          WILDCARD_PAT\n+            UNDERSCORE \"_\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          IF_EXPR\n+            IF_KW \"if\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              TRUE_KW \"true\"\n+            WHITESPACE \" \"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                WHITESPACE \"\\n    \"\n+                R_CURLY \"}\"\n+            WHITESPACE \" \"\n+            ELSE_KW \"else\"\n+            WHITESPACE \" \"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                WHITESPACE \"\\n    \"\n+                R_CURLY \"}\"\n+          WHITESPACE \" \"\n+          LET_ELSE\n+            ELSE_KW \"else\"\n+            WHITESPACE \" \"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                WHITESPACE \"\\n        \"\n+                RETURN_EXPR\n+                  RETURN_KW \"return\"\n+                WHITESPACE \"\\n    \"\n+                R_CURLY \"}\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+error 49: right curly brace `}` before `else` in a `let...else` statement not allowed"}, {"sha": "9a87aecbd4137e71106cb7f43495c54c2aa3337e", "filename": "crates/parser/test_data/parser/err/0053_let_else_right_curly_brace_if.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0053_let_else_right_curly_brace_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98990affe546bc4371e0b6daee686bda0194e95d/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0053_let_else_right_curly_brace_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0053_let_else_right_curly_brace_if.rs?ref=98990affe546bc4371e0b6daee686bda0194e95d", "patch": "@@ -0,0 +1,7 @@\n+fn f() {\n+    let _ = if true {\n+    } else {\n+    } else {\n+        return\n+    };\n+}\n\\ No newline at end of file"}]}