{"sha": "b3242f4f1336165903daf363ca0e234c9a0259b2", "node_id": "C_kwDOAAsO6NoAKGIzMjQyZjRmMTMzNjE2NTkwM2RhZjM2M2NhMGUyMzRjOWEwMjU5YjI", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-11-02T12:01:43Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-11-06T22:21:22Z"}, "message": "Fix rustdoc lints", "tree": {"sha": "bce535e2dd771d34d84ff17bf262fec6f4fa2f70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bce535e2dd771d34d84ff17bf262fec6f4fa2f70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3242f4f1336165903daf363ca0e234c9a0259b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3242f4f1336165903daf363ca0e234c9a0259b2", "html_url": "https://github.com/rust-lang/rust/commit/b3242f4f1336165903daf363ca0e234c9a0259b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3242f4f1336165903daf363ca0e234c9a0259b2/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40290505fb0aab2ad673a0caa840fc87a1790338", "url": "https://api.github.com/repos/rust-lang/rust/commits/40290505fb0aab2ad673a0caa840fc87a1790338", "html_url": "https://github.com/rust-lang/rust/commit/40290505fb0aab2ad673a0caa840fc87a1790338"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "704e6ed0159f84b7cf69fc858d6df62a0e016de0", "filename": "library/portable-simd/crates/core_simd/src/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3242f4f1336165903daf363ca0e234c9a0259b2/library%2Fportable-simd%2Fcrates%2Fcore_simd%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3242f4f1336165903daf363ca0e234c9a0259b2/library%2Fportable-simd%2Fcrates%2Fcore_simd%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fportable-simd%2Fcrates%2Fcore_simd%2Fsrc%2Fintrinsics.rs?ref=b3242f4f1336165903daf363ca0e234c9a0259b2", "patch": "@@ -103,7 +103,7 @@ extern \"platform-intrinsic\" {\n     /// val: vector of values to select if a lane is masked\n     /// ptr: vector of pointers to read from\n     /// mask: a \"wide\" mask of integers, selects as if simd_select(mask, read(ptr), val)\n-    /// note, the LLVM intrinsic accepts a mask vector of <N x i1>\n+    /// note, the LLVM intrinsic accepts a mask vector of `<N x i1>`\n     /// FIXME: review this if/when we fix up our mask story in general?\n     pub(crate) fn simd_gather<T, U, V>(val: T, ptr: U, mask: V) -> T;\n     /// llvm.masked.scatter"}, {"sha": "fc1e0bc426df34db6cb384e73a612c783c40cfd1", "filename": "library/portable-simd/crates/core_simd/src/ops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3242f4f1336165903daf363ca0e234c9a0259b2/library%2Fportable-simd%2Fcrates%2Fcore_simd%2Fsrc%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3242f4f1336165903daf363ca0e234c9a0259b2/library%2Fportable-simd%2Fcrates%2Fcore_simd%2Fsrc%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fportable-simd%2Fcrates%2Fcore_simd%2Fsrc%2Fops.rs?ref=b3242f4f1336165903daf363ca0e234c9a0259b2", "patch": "@@ -40,7 +40,7 @@ macro_rules! unsafe_base {\n \n /// SAFETY: This macro should not be used for anything except Shl or Shr, and passed the appropriate shift intrinsic.\n /// It handles performing a bitand in addition to calling the shift operator, so that the result\n-/// is well-defined: LLVM can return a poison value if you shl, lshr, or ashr if rhs >= <Int>::BITS\n+/// is well-defined: LLVM can return a poison value if you shl, lshr, or ashr if `rhs >= <Int>::BITS`\n /// At worst, this will maybe add another instruction and cycle,\n /// at best, it may open up more optimization opportunities,\n /// or simply be elided entirely, especially for SIMD ISAs which default to this."}]}