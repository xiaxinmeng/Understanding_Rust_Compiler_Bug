{"sha": "b289f13c7593f28846d506719002d48ab35a4cb2", "node_id": "C_kwDOAAsO6NoAKGIyODlmMTNjNzU5M2YyODg0NmQ1MDY3MTkwMDJkNDhhYjM1YTRjYjI", "commit": {"author": {"name": "ucrhh", "email": "ucrrh@sutdent.kit.edu", "date": "2021-12-18T22:19:53Z"}, "committer": {"name": "ucrhh", "email": "ucrrh@sutdent.kit.edu", "date": "2021-12-18T22:19:53Z"}, "message": "fix unwrap_block by removing double trimming", "tree": {"sha": "73e539b8e8cf3ccdda602b64754445c5ae093b66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73e539b8e8cf3ccdda602b64754445c5ae093b66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b289f13c7593f28846d506719002d48ab35a4cb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b289f13c7593f28846d506719002d48ab35a4cb2", "html_url": "https://github.com/rust-lang/rust/commit/b289f13c7593f28846d506719002d48ab35a4cb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b289f13c7593f28846d506719002d48ab35a4cb2/comments", "author": null, "committer": null, "parents": [{"sha": "b65d9c3e62a55028236be84995d1ba43462f4a5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b65d9c3e62a55028236be84995d1ba43462f4a5c", "html_url": "https://github.com/rust-lang/rust/commit/b65d9c3e62a55028236be84995d1ba43462f4a5c"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "42c5e6f088321df26abf61bac4acab990f0552be", "filename": "crates/ide_assists/src/handlers/unwrap_block.rs", "status": "modified", "additions": 44, "deletions": 3, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/b289f13c7593f28846d506719002d48ab35a4cb2/crates%2Fide_assists%2Fsrc%2Fhandlers%2Funwrap_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b289f13c7593f28846d506719002d48ab35a4cb2/crates%2Fide_assists%2Fsrc%2Fhandlers%2Funwrap_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Funwrap_block.rs?ref=b289f13c7593f28846d506719002d48ab35a4cb2", "patch": "@@ -6,7 +6,7 @@ use syntax::{\n     AstNode, SyntaxKind, TextRange, T,\n };\n \n-use crate::{utils::unwrap_trivial_block, AssistContext, AssistId, AssistKind, Assists};\n+use crate::{AssistContext, AssistId, AssistKind, Assists};\n \n // Assist: unwrap_block\n //\n@@ -88,9 +88,8 @@ pub(crate) fn unwrap_block(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n         _ => return None,\n     };\n \n-    let unwrapped = unwrap_trivial_block(block);\n     acc.add(assist_id, assist_label, target, |builder| {\n-        builder.replace(parent.syntax().text_range(), update_expr_string(unwrapped.to_string()));\n+        builder.replace(parent.syntax().text_range(), update_expr_string(block.to_string()));\n     })\n }\n \n@@ -672,6 +671,48 @@ fn main() {\n fn main() {\n     /* foo */ foo()\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn if_single_statement() {\n+        check_assist(\n+            unwrap_block,\n+            r#\"\n+fn main() {\n+    if true {$0\n+        return 3;\n+    }\n+}\n+\"#,\n+            r#\"\n+fn main() {\n+    return 3;\n+}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn multiple_statements() {\n+        check_assist(\n+            unwrap_block,\n+            r#\"\n+fn main() -> i32 {\n+    if 2 > 1 {$0\n+        let a = 5;\n+        return 3;\n+    }\n+    5\n+}\n+\"#,\n+            r#\"\n+fn main() -> i32 {\n+    let a = 5;\n+    return 3;\n+    5\n+}\n \"#,\n         );\n     }"}]}