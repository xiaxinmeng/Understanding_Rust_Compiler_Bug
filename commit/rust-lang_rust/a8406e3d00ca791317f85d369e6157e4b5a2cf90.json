{"sha": "a8406e3d00ca791317f85d369e6157e4b5a2cf90", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NDA2ZTNkMDBjYTc5MTMxN2Y4NWQzNjllNjE1N2U0YjVhMmNmOTA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-25T02:37:41Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-25T02:37:41Z"}, "message": "tutorial: A little more explanation of why managed boxes are useful", "tree": {"sha": "9a5326a996eeb64f7daf3624bb171bd5da7bd907", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a5326a996eeb64f7daf3624bb171bd5da7bd907"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8406e3d00ca791317f85d369e6157e4b5a2cf90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8406e3d00ca791317f85d369e6157e4b5a2cf90", "html_url": "https://github.com/rust-lang/rust/commit/a8406e3d00ca791317f85d369e6157e4b5a2cf90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8406e3d00ca791317f85d369e6157e4b5a2cf90/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91fe3fcbef43c68943b57b0cfaf637c84d39926c", "url": "https://api.github.com/repos/rust-lang/rust/commits/91fe3fcbef43c68943b57b0cfaf637c84d39926c", "html_url": "https://github.com/rust-lang/rust/commit/91fe3fcbef43c68943b57b0cfaf637c84d39926c"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "92d5fd05fc4c31803e99b7f389f998f7adecb632", "filename": "doc/tutorial.md", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a8406e3d00ca791317f85d369e6157e4b5a2cf90/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8406e3d00ca791317f85d369e6157e4b5a2cf90/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=a8406e3d00ca791317f85d369e6157e4b5a2cf90", "patch": "@@ -1052,6 +1052,34 @@ let y = x; // Copy of a pointer to the same box\n // then the allocation will be freed.\n ~~~~\n \n+Any type that contains managed boxes or other managed types is\n+considered _managed_. Managed types are the only types that can\n+construct cyclic data structures in Rust, such as doubly-linked lists.\n+\n+~~~\n+// A linked list node\n+struct Node {\n+    mut next: MaybeNode,\n+    mut prev: MaybeNode,\n+    payload: int\n+}\n+\n+enum MaybeNode {\n+    SomeNode(@Node),\n+    NoNode\n+}\n+\n+let node1 = @Node { next: NoNode, prev: NoNode, payload: 1 };\n+let node2 = @Node { next: NoNode, prev: NoNode, payload: 2 };\n+let node3 = @Node { next: NoNode, prev: NoNode, payload: 3 };\n+\n+// Link the three list nodes together\n+node1.next = SomeNode(node2);\n+node2.prev = SomeNode(node1);\n+node2.next = SomeNode(node3);\n+node3.prev = SomeNode(node2);\n+~~~\n+\n Managed boxes never cross task boundaries.\n \n > ***Note:*** managed boxes are currently reclaimed through reference\n@@ -1060,7 +1088,7 @@ Managed boxes never cross task boundaries.\n \n ## Owned boxes\n \n-In contrast to maneged boxes, owned boxes have a single owning memory\n+In contrast to managed boxes, owned boxes have a single owning memory\n slot and thus two owned boxes may not refer to the same memory. All\n owned boxes across all tasks are allocated on a single _exchange\n heap_, where their uniquely owned nature allows them to be passed"}]}