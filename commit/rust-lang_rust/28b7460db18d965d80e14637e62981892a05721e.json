{"sha": "28b7460db18d965d80e14637e62981892a05721e", "node_id": "C_kwDOAAsO6NoAKDI4Yjc0NjBkYjE4ZDk2NWQ4MGUxNDYzN2U2Mjk4MTg5MmEwNTcyMWU", "commit": {"author": {"name": "gftea", "email": "ckq614@gmail.com", "date": "2023-01-30T16:57:27Z"}, "committer": {"name": "gftea", "email": "ckq614@gmail.com", "date": "2023-01-30T16:57:27Z"}, "message": "fix negative trait bound in outline view (#14044)", "tree": {"sha": "fb89dc330d4cf28ddc1ed6b680b7c2c257109cb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb89dc330d4cf28ddc1ed6b680b7c2c257109cb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28b7460db18d965d80e14637e62981892a05721e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28b7460db18d965d80e14637e62981892a05721e", "html_url": "https://github.com/rust-lang/rust/commit/28b7460db18d965d80e14637e62981892a05721e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28b7460db18d965d80e14637e62981892a05721e/comments", "author": {"login": "gftea", "id": 1705787, "node_id": "MDQ6VXNlcjE3MDU3ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1705787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gftea", "html_url": "https://github.com/gftea", "followers_url": "https://api.github.com/users/gftea/followers", "following_url": "https://api.github.com/users/gftea/following{/other_user}", "gists_url": "https://api.github.com/users/gftea/gists{/gist_id}", "starred_url": "https://api.github.com/users/gftea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gftea/subscriptions", "organizations_url": "https://api.github.com/users/gftea/orgs", "repos_url": "https://api.github.com/users/gftea/repos", "events_url": "https://api.github.com/users/gftea/events{/privacy}", "received_events_url": "https://api.github.com/users/gftea/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gftea", "id": 1705787, "node_id": "MDQ6VXNlcjE3MDU3ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1705787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gftea", "html_url": "https://github.com/gftea", "followers_url": "https://api.github.com/users/gftea/followers", "following_url": "https://api.github.com/users/gftea/following{/other_user}", "gists_url": "https://api.github.com/users/gftea/gists{/gist_id}", "starred_url": "https://api.github.com/users/gftea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gftea/subscriptions", "organizations_url": "https://api.github.com/users/gftea/orgs", "repos_url": "https://api.github.com/users/gftea/repos", "events_url": "https://api.github.com/users/gftea/events{/privacy}", "received_events_url": "https://api.github.com/users/gftea/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1b257f4eb4fef74b42fd7135d1cf3884e8b51c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1b257f4eb4fef74b42fd7135d1cf3884e8b51c9", "html_url": "https://github.com/rust-lang/rust/commit/f1b257f4eb4fef74b42fd7135d1cf3884e8b51c9"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "ab1365e3174024bf96558a7be693499b842557f9", "filename": "crates/ide/src/file_structure.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/28b7460db18d965d80e14637e62981892a05721e/crates%2Fide%2Fsrc%2Ffile_structure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28b7460db18d965d80e14637e62981892a05721e/crates%2Fide%2Fsrc%2Ffile_structure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ffile_structure.rs?ref=28b7460db18d965d80e14637e62981892a05721e", "patch": "@@ -160,7 +160,10 @@ fn structure_node(node: &SyntaxNode) -> Option<StructureNode> {\n                 let label = match target_trait {\n                     None => format!(\"impl {}\", target_type.syntax().text()),\n                     Some(t) => {\n-                        format!(\"impl {} for {}\", t.syntax().text(), target_type.syntax().text(),)\n+                        format!(\"impl {}{} for {}\", \n+                        it.excl_token().map(|x| x.to_string()).unwrap_or_default(), \n+                        t.syntax().text(), \n+                        target_type.syntax().text(),)\n                     }\n                 };\n \n@@ -213,6 +216,26 @@ mod tests {\n         expect.assert_debug_eq(&structure)\n     }\n \n+    #[test]\n+    fn test_nagative_trait_bound() {\n+        let txt = r#\"impl !Unpin for Test {}\"#;\n+        check(txt, expect![[r#\"\n+        [\n+            StructureNode {\n+                parent: None,\n+                label: \"impl !Unpin for Test\",\n+                navigation_range: 16..20,\n+                node_range: 0..23,\n+                kind: SymbolKind(\n+                    Impl,\n+                ),\n+                detail: None,\n+                deprecated: false,\n+            },\n+        ]\n+        \"#]]);\n+    } \n+\n     #[test]\n     fn test_file_structure() {\n         check("}]}