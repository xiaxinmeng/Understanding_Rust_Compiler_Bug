{"sha": "32c4b714715338e82711e3611681aada3f28cf39", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyYzRiNzE0NzE1MzM4ZTgyNzExZTM2MTE2ODFhYWRhM2YyOGNmMzk=", "commit": {"author": {"name": "Pirh", "email": "pirh.badger@gmail.com", "date": "2017-10-08T21:11:20Z"}, "committer": {"name": "Pirh", "email": "pirh.badger@gmail.com", "date": "2017-10-08T21:16:09Z"}, "message": "Link std::process::Output to Command and Child", "tree": {"sha": "71a8b007cb9ebe29f82e54fe366a1a8583dc4d9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71a8b007cb9ebe29f82e54fe366a1a8583dc4d9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32c4b714715338e82711e3611681aada3f28cf39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32c4b714715338e82711e3611681aada3f28cf39", "html_url": "https://github.com/rust-lang/rust/commit/32c4b714715338e82711e3611681aada3f28cf39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32c4b714715338e82711e3611681aada3f28cf39/comments", "author": null, "committer": null, "parents": [{"sha": "3ed8b698421291f5057059da885cd670d76a47e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ed8b698421291f5057059da885cd670d76a47e9", "html_url": "https://github.com/rust-lang/rust/commit/3ed8b698421291f5057059da885cd670d76a47e9"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "847dbd14dd61569b689de2dade8f9e2ec1ecc697", "filename": "src/libstd/process.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/32c4b714715338e82711e3611681aada3f28cf39/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c4b714715338e82711e3611681aada3f28cf39/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=32c4b714715338e82711e3611681aada3f28cf39", "patch": "@@ -701,7 +701,14 @@ impl AsInnerMut<imp::Command> for Command {\n     fn as_inner_mut(&mut self) -> &mut imp::Command { &mut self.inner }\n }\n \n-/// The output of a finished process.\n+/// The output of a finished process. This is returned in a Result by\n+/// either the [`output`] method of a [`Command`], or the\n+/// [`wait_with_output`] method of a [`Child`] process.\n+///\n+/// [`Command`]: struct.Command.html\n+/// [`Child`]: struct.Child.html\n+/// [`output`]: struct.Command.html#method.output\n+/// [`wait_with_output`]: struct.Child.html#method.wait_with_output\n #[derive(PartialEq, Eq, Clone)]\n #[stable(feature = \"process\", since = \"1.0.0\")]\n pub struct Output {"}]}