{"sha": "58fb47a8cab589a2d0547cb4121d78dd7912cae3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4ZmI0N2E4Y2FiNTg5YTJkMDU0N2NiNDEyMWQ3OGRkNzkxMmNhZTM=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-03-09T02:16:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-09T02:16:30Z"}, "message": "Merge pull request #2519 from topecongiro/nested-parens\n\nRemove nested parens", "tree": {"sha": "9886472155c3d3e9ea59c5abd28d62c948150a62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9886472155c3d3e9ea59c5abd28d62c948150a62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58fb47a8cab589a2d0547cb4121d78dd7912cae3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaoe5+CRBK7hj4Ov3rIwAAdHIIABA811hEEJohsrCH0F5BRunU\nIlSivOMXEbzWMFA/Qyc6M0OlmoknXFH3wcX37vy8lDT9eIR9DY26GaGdEkpQtXvL\nfrXojBL6gWuMSF6Qt63rVk7uB5O9IM/d9sbZ76NGPhcAJIgTvV97LruxjkfdWCxf\n6I8exdDhChx5jltu6Rxj6BSRom48JM8+1/g41lpCaeu00YHSKoNrrmHQ9x0tESt4\ntpQ9/QJ6rmss1gi88uyNjm1YoyVLBeFeiNTwojgPcPCPTeFnRW2BRSgIaQV7p+n1\nYhA4JaxggNpUgnGaIi5xUbVHeOopO4VGCQt8xQUgQmrb9zVEFXMqbjop3K1IGcY=\n=gTbh\n-----END PGP SIGNATURE-----\n", "payload": "tree 9886472155c3d3e9ea59c5abd28d62c948150a62\nparent 5f99ebe628c8d74e4d765ef15d928df48955a7e6\nparent 9502de14beb486cfd733eccec72cc33945b913e7\nauthor Nick Cameron <nrc@ncameron.org> 1520561790 +1300\ncommitter GitHub <noreply@github.com> 1520561790 +1300\n\nMerge pull request #2519 from topecongiro/nested-parens\n\nRemove nested parens"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58fb47a8cab589a2d0547cb4121d78dd7912cae3", "html_url": "https://github.com/rust-lang/rust/commit/58fb47a8cab589a2d0547cb4121d78dd7912cae3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58fb47a8cab589a2d0547cb4121d78dd7912cae3/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f99ebe628c8d74e4d765ef15d928df48955a7e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f99ebe628c8d74e4d765ef15d928df48955a7e6", "html_url": "https://github.com/rust-lang/rust/commit/5f99ebe628c8d74e4d765ef15d928df48955a7e6"}, {"sha": "9502de14beb486cfd733eccec72cc33945b913e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9502de14beb486cfd733eccec72cc33945b913e7", "html_url": "https://github.com/rust-lang/rust/commit/9502de14beb486cfd733eccec72cc33945b913e7"}], "stats": {"total": 58, "additions": 50, "deletions": 8}, "files": [{"sha": "85a2e658ef22f62a0962cfea0a6d7f9010f72064", "filename": "src/expr.rs", "status": "modified", "additions": 32, "deletions": 4, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/58fb47a8cab589a2d0547cb4121d78dd7912cae3/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58fb47a8cab589a2d0547cb4121d78dd7912cae3/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=58fb47a8cab589a2d0547cb4121d78dd7912cae3", "patch": "@@ -79,7 +79,7 @@ pub fn format_expr(\n             let callee_str = callee.rewrite(context, shape)?;\n             rewrite_call(context, &callee_str, args, inner_span, shape)\n         }\n-        ast::ExprKind::Paren(ref subexpr) => rewrite_paren(context, subexpr, shape),\n+        ast::ExprKind::Paren(ref subexpr) => rewrite_paren(context, subexpr, shape, expr.span),\n         ast::ExprKind::Binary(ref op, ref lhs, ref rhs) => {\n             // FIXME: format comments between operands and operator\n             rewrite_pair(\n@@ -2425,8 +2425,36 @@ fn span_ends_with_comma(context: &RewriteContext, span: Span) -> bool {\n     result\n }\n \n-fn rewrite_paren(context: &RewriteContext, subexpr: &ast::Expr, shape: Shape) -> Option<String> {\n+fn rewrite_paren(\n+    context: &RewriteContext,\n+    mut subexpr: &ast::Expr,\n+    shape: Shape,\n+    mut span: Span,\n+) -> Option<String> {\n     debug!(\"rewrite_paren, shape: {:?}\", shape);\n+\n+    // Extract comments within parens.\n+    let mut pre_comment;\n+    let mut post_comment;\n+    loop {\n+        // 1 = \"(\" or \")\"\n+        let pre_span = mk_sp(span.lo() + BytePos(1), subexpr.span.lo());\n+        let post_span = mk_sp(subexpr.span.hi(), span.hi() - BytePos(1));\n+        pre_comment = rewrite_missing_comment(pre_span, shape, context)?;\n+        post_comment = rewrite_missing_comment(post_span, shape, context)?;\n+\n+        // Remove nested parens if there are no comments.\n+        if let ast::ExprKind::Paren(ref subsubexpr) = subexpr.node {\n+            if pre_comment.is_empty() && post_comment.is_empty() {\n+                span = subexpr.span;\n+                subexpr = subsubexpr;\n+                continue;\n+            }\n+        }\n+\n+        break;\n+    }\n+\n     let total_paren_overhead = paren_overhead(context);\n     let paren_overhead = total_paren_overhead / 2;\n     let sub_shape = shape\n@@ -2435,9 +2463,9 @@ fn rewrite_paren(context: &RewriteContext, subexpr: &ast::Expr, shape: Shape) ->\n \n     let paren_wrapper = |s: &str| {\n         if context.config.spaces_within_parens_and_brackets() && !s.is_empty() {\n-            format!(\"( {} )\", s)\n+            format!(\"( {}{}{} )\", pre_comment, s, post_comment)\n         } else {\n-            format!(\"({})\", s)\n+            format!(\"({}{}{})\", pre_comment, s, post_comment)\n         }\n     };\n "}, {"sha": "09ac6b19e9e3b637adf95f8d40efbd312411e879", "filename": "tests/source/paren.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/58fb47a8cab589a2d0547cb4121d78dd7912cae3/tests%2Fsource%2Fparen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58fb47a8cab589a2d0547cb4121d78dd7912cae3/tests%2Fsource%2Fparen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fparen.rs?ref=58fb47a8cab589a2d0547cb4121d78dd7912cae3", "patch": "@@ -0,0 +1,8 @@\n+// Remove nested parens.\n+\n+fn main() {\n+    let x = (((1)));\n+    let y = (/* comment */((2)));\n+    let z = (((3)/* comment */));\n+    let a = (((4/* comment */)));\n+}"}, {"sha": "81a3620f95353ec099bbb2f62557d9e675a24bc3", "filename": "tests/target/expr.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/58fb47a8cab589a2d0547cb4121d78dd7912cae3/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58fb47a8cab589a2d0547cb4121d78dd7912cae3/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=58fb47a8cab589a2d0547cb4121d78dd7912cae3", "patch": "@@ -20,10 +20,8 @@ fn foo() -> bool {\n         10000 * 30000000000 + 40000 / 1002200000000 - 50000 * sqrt(-1),\n         trivial_value,\n     );\n-    (((((((((aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n-        + a\n-        + aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n-        + aaaaa)))))))));\n+    (aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa + a\n+        + aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa + aaaaa);\n \n     {\n         for _ in 0..10 {}"}, {"sha": "385699194039b4f2e74615ee7fbe286ebfa44a14", "filename": "tests/target/paren.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/58fb47a8cab589a2d0547cb4121d78dd7912cae3/tests%2Ftarget%2Fparen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58fb47a8cab589a2d0547cb4121d78dd7912cae3/tests%2Ftarget%2Fparen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fparen.rs?ref=58fb47a8cab589a2d0547cb4121d78dd7912cae3", "patch": "@@ -0,0 +1,8 @@\n+// Remove nested parens.\n+\n+fn main() {\n+    let x = (1);\n+    let y = (/* comment */(2));\n+    let z = ((3)/* comment */);\n+    let a = (4/* comment */);\n+}"}]}