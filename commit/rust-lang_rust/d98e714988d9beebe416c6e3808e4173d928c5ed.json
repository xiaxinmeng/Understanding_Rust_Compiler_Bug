{"sha": "d98e714988d9beebe416c6e3808e4173d928c5ed", "node_id": "C_kwDOAAsO6NoAKGQ5OGU3MTQ5ODhkOWJlZWJlNDE2YzZlMzgwOGU0MTczZDkyOGM1ZWQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-26T02:00:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-26T02:00:26Z"}, "message": "Auto merge of #10113 - EricWu2003:suboptimal_flops_incorrect_suggestion, r=Jarcho\n\nfix incorrect suggestion in `suboptimal_flops`\n\nfixes #10003\n\nThere was an error when trying to negate an expression like `x - 1.0`. We used to format it as `-x - 1.0` whereas a proper negation would be `-(x - 1.0)`.\n\nTherefore, we add parentheses around the expression when it is `ExprKind::Binary`.\n\nWe also add parentheses around multiply and divide expressions, even though this is not strictly necessary.\n\nchangelog: [`suboptimal_flops`]: fix incorrect suggestion caused by an incorrect negation of floating point expressions.", "tree": {"sha": "6ffd2bbe86d78d815a03aece3f0d603f824cf18c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ffd2bbe86d78d815a03aece3f0d603f824cf18c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d98e714988d9beebe416c6e3808e4173d928c5ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d98e714988d9beebe416c6e3808e4173d928c5ed", "html_url": "https://github.com/rust-lang/rust/commit/d98e714988d9beebe416c6e3808e4173d928c5ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d98e714988d9beebe416c6e3808e4173d928c5ed/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f1bae0c96402b874c2f5686032eb3527b4f1900", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f1bae0c96402b874c2f5686032eb3527b4f1900", "html_url": "https://github.com/rust-lang/rust/commit/4f1bae0c96402b874c2f5686032eb3527b4f1900"}, {"sha": "6bb6dd64d44eab37fef808ce96d3abb87e5e02b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bb6dd64d44eab37fef808ce96d3abb87e5e02b3", "html_url": "https://github.com/rust-lang/rust/commit/6bb6dd64d44eab37fef808ce96d3abb87e5e02b3"}], "stats": {"total": 64, "additions": 62, "deletions": 2}, "files": [{"sha": "f95b628e6c31eb67b3bbd17e9b22534d0460ebe8", "filename": "clippy_lints/src/floating_point_arithmetic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d98e714988d9beebe416c6e3808e4173d928c5ed/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d98e714988d9beebe416c6e3808e4173d928c5ed/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs?ref=d98e714988d9beebe416c6e3808e4173d928c5ed", "patch": "@@ -324,7 +324,7 @@ fn check_powi(cx: &LateContext<'_>, expr: &Expr<'_>, receiver: &Expr<'_>, args:\n                     let maybe_neg_sugg = |expr, hir_id| {\n                         let sugg = Sugg::hir(cx, expr, \"..\");\n                         if matches!(op, BinOpKind::Sub) && hir_id == rhs.hir_id {\n-                            format!(\"-{sugg}\")\n+                            format!(\"-{}\", sugg.maybe_par())\n                         } else {\n                             sugg.to_string()\n                         }"}, {"sha": "8ffd4cc513790fca6400282d63694f513b97eef4", "filename": "tests/ui/floating_point_powi.fixed", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d98e714988d9beebe416c6e3808e4173d928c5ed/tests%2Fui%2Ffloating_point_powi.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/d98e714988d9beebe416c6e3808e4173d928c5ed/tests%2Fui%2Ffloating_point_powi.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloating_point_powi.fixed?ref=d98e714988d9beebe416c6e3808e4173d928c5ed", "patch": "@@ -14,6 +14,15 @@ fn main() {\n     let _ = (y as f32).mul_add(y as f32, x);\n     let _ = x.mul_add(x, y).sqrt();\n     let _ = y.mul_add(y, x).sqrt();\n+\n+    let _ = (x - 1.0).mul_add(x - 1.0, -y);\n+    let _ = (x - 1.0).mul_add(x - 1.0, -y) + 3.0;\n+    let _ = (x - 1.0).mul_add(x - 1.0, -(y + 3.0));\n+    let _ = (y + 1.0).mul_add(-(y + 1.0), x);\n+    let _ = (3.0 * y).mul_add(-(3.0 * y), x);\n+    let _ = (y + 1.0 + x).mul_add(-(y + 1.0 + x), x);\n+    let _ = (y + 1.0 + 2.0).mul_add(-(y + 1.0 + 2.0), x);\n+\n     // Cases where the lint shouldn't be applied\n     let _ = x.powi(2);\n     let _ = x.powi(1 + 1);"}, {"sha": "9ae3455a1346a8aea6ffd4ce07025504b4bf2fbb", "filename": "tests/ui/floating_point_powi.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d98e714988d9beebe416c6e3808e4173d928c5ed/tests%2Fui%2Ffloating_point_powi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d98e714988d9beebe416c6e3808e4173d928c5ed/tests%2Fui%2Ffloating_point_powi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloating_point_powi.rs?ref=d98e714988d9beebe416c6e3808e4173d928c5ed", "patch": "@@ -14,6 +14,15 @@ fn main() {\n     let _ = x + (y as f32).powi(2);\n     let _ = (x.powi(2) + y).sqrt();\n     let _ = (x + y.powi(2)).sqrt();\n+\n+    let _ = (x - 1.0).powi(2) - y;\n+    let _ = (x - 1.0).powi(2) - y + 3.0;\n+    let _ = (x - 1.0).powi(2) - (y + 3.0);\n+    let _ = x - (y + 1.0).powi(2);\n+    let _ = x - (3.0 * y).powi(2);\n+    let _ = x - (y + 1.0 + x).powi(2);\n+    let _ = x - (y + 1.0 + 2.0).powi(2);\n+\n     // Cases where the lint shouldn't be applied\n     let _ = x.powi(2);\n     let _ = x.powi(1 + 1);"}, {"sha": "fdf6d088052ea59bf62b732a711120bd15a6a6d1", "filename": "tests/ui/floating_point_powi.stderr", "status": "modified", "additions": 43, "deletions": 1, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/d98e714988d9beebe416c6e3808e4173d928c5ed/tests%2Fui%2Ffloating_point_powi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d98e714988d9beebe416c6e3808e4173d928c5ed/tests%2Fui%2Ffloating_point_powi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloating_point_powi.stderr?ref=d98e714988d9beebe416c6e3808e4173d928c5ed", "patch": "@@ -42,5 +42,47 @@ error: multiply and add expressions can be calculated more efficiently and accur\n LL |     let _ = (x + y.powi(2)).sqrt();\n    |             ^^^^^^^^^^^^^^^ help: consider using: `y.mul_add(y, x)`\n \n-error: aborting due to 7 previous errors\n+error: multiply and add expressions can be calculated more efficiently and accurately\n+  --> $DIR/floating_point_powi.rs:18:13\n+   |\n+LL |     let _ = (x - 1.0).powi(2) - y;\n+   |             ^^^^^^^^^^^^^^^^^^^^^ help: consider using: `(x - 1.0).mul_add(x - 1.0, -y)`\n+\n+error: multiply and add expressions can be calculated more efficiently and accurately\n+  --> $DIR/floating_point_powi.rs:19:13\n+   |\n+LL |     let _ = (x - 1.0).powi(2) - y + 3.0;\n+   |             ^^^^^^^^^^^^^^^^^^^^^ help: consider using: `(x - 1.0).mul_add(x - 1.0, -y)`\n+\n+error: multiply and add expressions can be calculated more efficiently and accurately\n+  --> $DIR/floating_point_powi.rs:20:13\n+   |\n+LL |     let _ = (x - 1.0).powi(2) - (y + 3.0);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `(x - 1.0).mul_add(x - 1.0, -(y + 3.0))`\n+\n+error: multiply and add expressions can be calculated more efficiently and accurately\n+  --> $DIR/floating_point_powi.rs:21:13\n+   |\n+LL |     let _ = x - (y + 1.0).powi(2);\n+   |             ^^^^^^^^^^^^^^^^^^^^^ help: consider using: `(y + 1.0).mul_add(-(y + 1.0), x)`\n+\n+error: multiply and add expressions can be calculated more efficiently and accurately\n+  --> $DIR/floating_point_powi.rs:22:13\n+   |\n+LL |     let _ = x - (3.0 * y).powi(2);\n+   |             ^^^^^^^^^^^^^^^^^^^^^ help: consider using: `(3.0 * y).mul_add(-(3.0 * y), x)`\n+\n+error: multiply and add expressions can be calculated more efficiently and accurately\n+  --> $DIR/floating_point_powi.rs:23:13\n+   |\n+LL |     let _ = x - (y + 1.0 + x).powi(2);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `(y + 1.0 + x).mul_add(-(y + 1.0 + x), x)`\n+\n+error: multiply and add expressions can be calculated more efficiently and accurately\n+  --> $DIR/floating_point_powi.rs:24:13\n+   |\n+LL |     let _ = x - (y + 1.0 + 2.0).powi(2);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `(y + 1.0 + 2.0).mul_add(-(y + 1.0 + 2.0), x)`\n+\n+error: aborting due to 14 previous errors\n "}]}