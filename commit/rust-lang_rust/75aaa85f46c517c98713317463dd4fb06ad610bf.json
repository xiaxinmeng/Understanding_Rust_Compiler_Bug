{"sha": "75aaa85f46c517c98713317463dd4fb06ad610bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1YWFhODVmNDZjNTE3Yzk4NzEzMzE3NDYzZGQ0ZmIwNmFkNjEwYmY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-07T18:39:21Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-14T12:40:42Z"}, "message": "TAIT: adjust resolve", "tree": {"sha": "195315b16583814d111490a19ea36c7e33860a6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/195315b16583814d111490a19ea36c7e33860a6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75aaa85f46c517c98713317463dd4fb06ad610bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75aaa85f46c517c98713317463dd4fb06ad610bf", "html_url": "https://github.com/rust-lang/rust/commit/75aaa85f46c517c98713317463dd4fb06ad610bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75aaa85f46c517c98713317463dd4fb06ad610bf/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89b5907357c3933dc84c60eaea5dfe82cf634933", "url": "https://api.github.com/repos/rust-lang/rust/commits/89b5907357c3933dc84c60eaea5dfe82cf634933", "html_url": "https://github.com/rust-lang/rust/commit/89b5907357c3933dc84c60eaea5dfe82cf634933"}], "stats": {"total": 26, "additions": 6, "deletions": 20}, "files": [{"sha": "6bd035f32bba6debbaa9bcbb66b5cc04ec9bb127", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/75aaa85f46c517c98713317463dd4fb06ad610bf/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75aaa85f46c517c98713317463dd4fb06ad610bf/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=75aaa85f46c517c98713317463dd4fb06ad610bf", "patch": "@@ -699,13 +699,12 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n             }\n \n             // These items live in the type namespace.\n-            ItemKind::TyAlias(..) => {\n-                let res = Res::Def(DefKind::TyAlias, self.r.definitions.local_def_id(item.id));\n-                self.r.define(parent, ident, TypeNS, (res, vis, sp, expansion));\n-            }\n-\n-            ItemKind::OpaqueTy(_, _) => {\n-                let res = Res::Def(DefKind::OpaqueTy, self.r.definitions.local_def_id(item.id));\n+            ItemKind::TyAlias(ref ty, _) => {\n+                let def_kind = match ty.kind.opaque_top_hack() {\n+                    None => DefKind::TyAlias,\n+                    Some(_) => DefKind::OpaqueTy,\n+                };\n+                let res = Res::Def(def_kind, self.r.definitions.local_def_id(item.id));\n                 self.r.define(parent, ident, TypeNS, (res, vis, sp, expansion));\n             }\n "}, {"sha": "1316f8d8aa1af70f852f1ae7e1dab7ccad38f654", "filename": "src/librustc_resolve/late.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/75aaa85f46c517c98713317463dd4fb06ad610bf/src%2Flibrustc_resolve%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75aaa85f46c517c98713317463dd4fb06ad610bf/src%2Flibrustc_resolve%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate.rs?ref=75aaa85f46c517c98713317463dd4fb06ad610bf", "patch": "@@ -730,7 +730,6 @@ impl<'a, 'b> LateResolutionVisitor<'a, '_> {\n \n         match item.kind {\n             ItemKind::TyAlias(_, ref generics) |\n-            ItemKind::OpaqueTy(_, ref generics) |\n             ItemKind::Fn(_, ref generics, _) => {\n                 self.with_generic_param_rib(generics, ItemRibKind(HasGenericParams::Yes),\n                                             |this| visit::walk_item(this, item));\n@@ -1085,18 +1084,6 @@ impl<'a, 'b> LateResolutionVisitor<'a, '_> {\n \n                                                 this.visit_ty(ty);\n                                             }\n-                                            ImplItemKind::OpaqueTy(ref bounds) => {\n-                                                // If this is a trait impl, ensure the type\n-                                                // exists in trait\n-                                                this.check_trait_item(impl_item.ident,\n-                                                                      TypeNS,\n-                                                                      impl_item.span,\n-                                                    |n, s| TypeNotMemberOfTrait(n, s));\n-\n-                                                for bound in bounds {\n-                                                    this.visit_param_bound(bound);\n-                                                }\n-                                            }\n                                             ImplItemKind::Macro(_) =>\n                                                 panic!(\"unexpanded macro in resolve!\"),\n                                         }"}]}