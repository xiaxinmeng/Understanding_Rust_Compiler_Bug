{"sha": "ff6faabda7840db86b90663f239bac909bae3a18", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmNmZhYWJkYTc4NDBkYjg2YjkwNjYzZjIzOWJhYzkwOWJhZTNhMTg=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-09-25T19:30:25Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-09-28T14:06:52Z"}, "message": "Add description for every module in `check_consts`", "tree": {"sha": "0f59bf29e19d7fe9fa004f10b3d22b6a44fff33d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f59bf29e19d7fe9fa004f10b3d22b6a44fff33d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff6faabda7840db86b90663f239bac909bae3a18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff6faabda7840db86b90663f239bac909bae3a18", "html_url": "https://github.com/rust-lang/rust/commit/ff6faabda7840db86b90663f239bac909bae3a18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff6faabda7840db86b90663f239bac909bae3a18/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "713ec152fcbe19dc3d75e41d7878b227477d46ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/713ec152fcbe19dc3d75e41d7878b227477d46ba", "html_url": "https://github.com/rust-lang/rust/commit/713ec152fcbe19dc3d75e41d7878b227477d46ba"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "3a959a86edd83001039303b2c3d7e80b068bd60b", "filename": "src/librustc_mir/transform/check_consts/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ff6faabda7840db86b90663f239bac909bae3a18/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff6faabda7840db86b90663f239bac909bae3a18/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fmod.rs?ref=ff6faabda7840db86b90663f239bac909bae3a18", "patch": "@@ -1,3 +1,9 @@\n+//! Check the bodies of `const`s, `static`s and `const fn`s for illegal operations.\n+//!\n+//! This module will eventually replace the parts of `qualify_consts.rs` that check whether a local\n+//! has interior mutability or needs to be dropped, as well as the visitor that emits errors when\n+//! it finds operations that are invalid in a certain context.\n+\n use rustc::hir::def_id::DefId;\n use rustc::mir;\n use rustc::ty::{self, TyCtxt};"}, {"sha": "f457b739949c1244cc6b597283b05b9ade8c56e2", "filename": "src/librustc_mir/transform/check_consts/ops.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff6faabda7840db86b90663f239bac909bae3a18/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff6faabda7840db86b90663f239bac909bae3a18/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs?ref=ff6faabda7840db86b90663f239bac909bae3a18", "patch": "@@ -1,3 +1,5 @@\n+//! Concrete error types for all operations which may be invalid in a certain const context.\n+\n use rustc::hir::def_id::DefId;\n use rustc::mir::BorrowKind;\n use rustc::session::config::nightly_options;"}, {"sha": "5902ee0cc3f98afcbb4040a341d3d40601f83c84", "filename": "src/librustc_mir/transform/check_consts/qualifs.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff6faabda7840db86b90663f239bac909bae3a18/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fqualifs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff6faabda7840db86b90663f239bac909bae3a18/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fqualifs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fqualifs.rs?ref=ff6faabda7840db86b90663f239bac909bae3a18", "patch": "@@ -1,3 +1,5 @@\n+//! A copy of the `Qualif` trait in `qualify_consts.rs` that is suitable for the new validator.\n+\n use rustc::mir::*;\n use rustc::mir::interpret::ConstValue;\n use rustc::ty::{self, Ty};"}, {"sha": "c23a7e98efcbc219dc93848ad75f414d38eb2f00", "filename": "src/librustc_mir/transform/check_consts/resolver.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ff6faabda7840db86b90663f239bac909bae3a18/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fresolver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff6faabda7840db86b90663f239bac909bae3a18/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fresolver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fresolver.rs?ref=ff6faabda7840db86b90663f239bac909bae3a18", "patch": "@@ -1,3 +1,8 @@\n+//! Propagate `Qualif`s between locals and query the results.\n+//!\n+//! This also contains the dataflow analysis used to track `Qualif`s on complex control-flow\n+//! graphs.\n+\n use rustc::mir::visit::Visitor;\n use rustc::mir::{self, BasicBlock, Local, Location};\n use rustc_data_structures::bit_set::BitSet;"}, {"sha": "11a93225d36317dbf764b54bfd372f9a320ff77b", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff6faabda7840db86b90663f239bac909bae3a18/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff6faabda7840db86b90663f239bac909bae3a18/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=ff6faabda7840db86b90663f239bac909bae3a18", "patch": "@@ -1,3 +1,5 @@\n+//! The `Visitor` responsible for actually checking a `mir::Body` for invalid operations.\n+\n use rustc::hir::{self, def_id::DefId};\n use rustc::mir::visit::{PlaceContext, Visitor, MutatingUseContext, NonMutatingUseContext};\n use rustc::mir::*;"}]}