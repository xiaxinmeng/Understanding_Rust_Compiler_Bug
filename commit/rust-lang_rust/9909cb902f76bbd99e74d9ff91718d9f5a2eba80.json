{"sha": "9909cb902f76bbd99e74d9ff91718d9f5a2eba80", "node_id": "C_kwDOAAsO6NoAKDk5MDljYjkwMmY3NmJiZDk5ZTc0ZDlmZjkxNzE4ZDlmNWEyZWJhODA", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-03T08:17:55Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-25T08:01:12Z"}, "message": "Make the ICEs in the mir typechecker have more spans helpful", "tree": {"sha": "80803981808b51d1f72f9bcd3d3068ba9282a965", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80803981808b51d1f72f9bcd3d3068ba9282a965"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9909cb902f76bbd99e74d9ff91718d9f5a2eba80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9909cb902f76bbd99e74d9ff91718d9f5a2eba80", "html_url": "https://github.com/rust-lang/rust/commit/9909cb902f76bbd99e74d9ff91718d9f5a2eba80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9909cb902f76bbd99e74d9ff91718d9f5a2eba80/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6773e7ee562eb6a3c50bc9f284f767c09b87dfbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/6773e7ee562eb6a3c50bc9f284f767c09b87dfbb", "html_url": "https://github.com/rust-lang/rust/commit/6773e7ee562eb6a3c50bc9f284f767c09b87dfbb"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "bf700d3122465c584b1d15efc54a71ffe1ab88e1", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9909cb902f76bbd99e74d9ff91718d9f5a2eba80/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9909cb902f76bbd99e74d9ff91718d9f5a2eba80/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=9909cb902f76bbd99e74d9ff91718d9f5a2eba80", "patch": "@@ -81,6 +81,7 @@ struct TypeChecker<'a, 'tcx> {\n }\n \n impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n+    #[track_caller]\n     fn fail(&self, location: Location, msg: impl AsRef<str>) {\n         let span = self.body.source_info(location).span;\n         // We use `delay_span_bug` as we might see broken MIR when other errors have already"}]}