{"sha": "7ba4110012730bffeb4eeb857a1f8ea408bdc9cc", "node_id": "C_kwDOAAsO6NoAKDdiYTQxMTAwMTI3MzBiZmZlYjRlZWI4NTdhMWY4ZWE0MDhiZGM5Y2M", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-06-25T09:59:35Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-02-11T19:28:38Z"}, "message": "Make two functions private", "tree": {"sha": "dce509779e115eb2223b40c3db56276b9fbf4210", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dce509779e115eb2223b40c3db56276b9fbf4210"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ba4110012730bffeb4eeb857a1f8ea408bdc9cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ba4110012730bffeb4eeb857a1f8ea408bdc9cc", "html_url": "https://github.com/rust-lang/rust/commit/7ba4110012730bffeb4eeb857a1f8ea408bdc9cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ba4110012730bffeb4eeb857a1f8ea408bdc9cc/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55ceed81fe68bf09293176cd2c16fbb90aab0531", "url": "https://api.github.com/repos/rust-lang/rust/commits/55ceed81fe68bf09293176cd2c16fbb90aab0531", "html_url": "https://github.com/rust-lang/rust/commit/55ceed81fe68bf09293176cd2c16fbb90aab0531"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f74cadfebacba748f4b38976884f0119cb1db976", "filename": "compiler/rustc_interface/src/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7ba4110012730bffeb4eeb857a1f8ea408bdc9cc/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ba4110012730bffeb4eeb857a1f8ea408bdc9cc/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Futil.rs?ref=7ba4110012730bffeb4eeb857a1f8ea408bdc9cc", "patch": "@@ -118,7 +118,7 @@ fn get_stack_size() -> Option<usize> {\n /// Like a `thread::Builder::spawn` followed by a `join()`, but avoids the need\n /// for `'static` bounds.\n #[cfg(not(parallel_compiler))]\n-pub fn scoped_thread<F: FnOnce() -> R + Send, R: Send>(cfg: thread::Builder, f: F) -> R {\n+fn scoped_thread<F: FnOnce() -> R + Send, R: Send>(cfg: thread::Builder, f: F) -> R {\n     // SAFETY: join() is called immediately, so any closure captures are still\n     // alive.\n     match unsafe { cfg.spawn_unchecked(f) }.unwrap().join() {\n@@ -379,7 +379,7 @@ fn sysroot_candidates() -> Vec<PathBuf> {\n     }\n }\n \n-pub fn get_codegen_sysroot(maybe_sysroot: &Option<PathBuf>, backend_name: &str) -> MakeBackendFn {\n+fn get_codegen_sysroot(maybe_sysroot: &Option<PathBuf>, backend_name: &str) -> MakeBackendFn {\n     // For now we only allow this function to be called once as it'll dlopen a\n     // few things, which seems to work best if we only do that once. In\n     // general this assertion never trips due to the once guard in `get_codegen_backend`,"}]}