{"sha": "7f1077700c019b2dc8d651528ecad106c9267858", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmMTA3NzcwMGMwMTliMmRjOGQ2NTE1MjhlY2FkMTA2YzkyNjc4NTg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-20T14:55:23Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-20T14:55:23Z"}, "message": "fix comment", "tree": {"sha": "ce72982e10f3dfb7112c6c75a6fc5689fb1bd508", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce72982e10f3dfb7112c6c75a6fc5689fb1bd508"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f1077700c019b2dc8d651528ecad106c9267858", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f1077700c019b2dc8d651528ecad106c9267858", "html_url": "https://github.com/rust-lang/rust/commit/7f1077700c019b2dc8d651528ecad106c9267858", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f1077700c019b2dc8d651528ecad106c9267858/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6eeedbcd70855b45cf41ef14bc91a15f0ee67c7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6eeedbcd70855b45cf41ef14bc91a15f0ee67c7c", "html_url": "https://github.com/rust-lang/rust/commit/6eeedbcd70855b45cf41ef14bc91a15f0ee67c7c"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "a645e06732269a9a58e3b38d2f769aea0c5528b4", "filename": "src/librustc_mir/interpret/visitor.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7f1077700c019b2dc8d651528ecad106c9267858/src%2Flibrustc_mir%2Finterpret%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f1077700c019b2dc8d651528ecad106c9267858/src%2Flibrustc_mir%2Finterpret%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvisitor.rs?ref=7f1077700c019b2dc8d651528ecad106c9267858", "patch": "@@ -142,7 +142,6 @@ macro_rules! make_value_visitor {\n                 self.walk_value(v)\n             }\n             /// Visit the given value as a union.  No automatic recursion can happen here.\n-            /// Also called for the fields of a generator, which may or may not be initialized.\n             #[inline(always)]\n             fn visit_union(&mut self, _v: Self::V) -> EvalResult<'tcx>\n             {"}]}