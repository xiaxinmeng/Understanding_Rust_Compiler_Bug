{"sha": "f7e894c000d6526c32422c6282ce277c05499a94", "node_id": "C_kwDOAAsO6NoAKGY3ZTg5NGMwMDBkNjUyNmMzMjQyMmM2MjgyY2UyNzdjMDU0OTlhOTQ", "commit": {"author": {"name": "mejrs", "email": "", "date": "2022-12-17T19:11:25Z"}, "committer": {"name": "mejrs", "email": "", "date": "2022-12-17T19:11:25Z"}, "message": "Try to fix ICE", "tree": {"sha": "adb10a999b7e4e97739211337512f2a020761405", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adb10a999b7e4e97739211337512f2a020761405"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7e894c000d6526c32422c6282ce277c05499a94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7e894c000d6526c32422c6282ce277c05499a94", "html_url": "https://github.com/rust-lang/rust/commit/f7e894c000d6526c32422c6282ce277c05499a94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7e894c000d6526c32422c6282ce277c05499a94/comments", "author": {}, "committer": {}, "parents": [{"sha": "6749ee4d7b7a2f6fd57cf15fdb7332d6e94289dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/6749ee4d7b7a2f6fd57cf15fdb7332d6e94289dc", "html_url": "https://github.com/rust-lang/rust/commit/6749ee4d7b7a2f6fd57cf15fdb7332d6e94289dc"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "a94d8d6c6431c81c0d95e2f525d9cff0d8c12d08", "filename": "compiler/rustc_mir_build/src/thir/pattern/check_match.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7e894c000d6526c32422c6282ce277c05499a94/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7e894c000d6526c32422c6282ce277c05499a94/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs?ref=f7e894c000d6526c32422c6282ce277c05499a94", "patch": "@@ -17,7 +17,9 @@ use rustc_hir::def::*;\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{self, Visitor};\n use rustc_hir::{HirId, Pat};\n+use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::{self, AdtDef, Ty, TyCtxt};\n+\n use rustc_session::lint::builtin::{\n     BINDINGS_WITH_VARIANT_NAME, IRREFUTABLE_LET_PATTERNS, UNREACHABLE_PATTERNS,\n };\n@@ -547,7 +549,9 @@ fn check_for_bindings_named_same_as_variants(\n             })\n         {\n             let variant_count = edef.variants().len();\n-            let ty_path = cx.tcx.def_path_str(edef.did());\n+            let ty_path = with_no_trimmed_paths!({\n+                cx.tcx.def_path_str(edef.did())\n+            });\n             cx.tcx.emit_spanned_lint(\n                 BINDINGS_WITH_VARIANT_NAME,\n                 p.hir_id,"}, {"sha": "d4e88aa26436162160ff0ccc02e3b169e9b4de17", "filename": "src/test/ui/lint/lint-uppercase-variables.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7e894c000d6526c32422c6282ce277c05499a94/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7e894c000d6526c32422c6282ce277c05499a94/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.rs?ref=f7e894c000d6526c32422c6282ce277c05499a94", "patch": "@@ -20,19 +20,19 @@ fn main() {\n \n     match foo::Foo::Foo {\n         Foo => {}\n-//~^ ERROR variable `Foo` should have a snake case name\n-//~^^ WARN `Foo` is named the same as one of the variants of the type `Foo`\n-//~^^^ WARN unused variable: `Foo`\n+    //~^ ERROR variable `Foo` should have a snake case name\n+    //~^^ WARN `Foo` is named the same as one of the variants of the type `foo::Foo`\n+    //~^^^ WARN unused variable: `Foo`\n     }\n \n     let Foo = foo::Foo::Foo;\n     //~^ ERROR variable `Foo` should have a snake case name\n-    //~^^ WARN `Foo` is named the same as one of the variants of the type `Foo`\n+    //~^^ WARN `Foo` is named the same as one of the variants of the type `foo::Foo`\n     //~^^^ WARN unused variable: `Foo`\n \n     fn in_param(Foo: foo::Foo) {}\n     //~^ ERROR variable `Foo` should have a snake case name\n-    //~^^ WARN `Foo` is named the same as one of the variants of the type `Foo`\n+    //~^^ WARN `Foo` is named the same as one of the variants of the type `foo::Foo`\n     //~^^^ WARN unused variable: `Foo`\n \n     test(1);"}, {"sha": "d476d856e24c59b060ccdd85be6ff1c681e4180a", "filename": "src/test/ui/lint/lint-uppercase-variables.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7e894c000d6526c32422c6282ce277c05499a94/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7e894c000d6526c32422c6282ce277c05499a94/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr?ref=f7e894c000d6526c32422c6282ce277c05499a94", "patch": "@@ -1,22 +1,22 @@\n-warning[E0170]: pattern binding `Foo` is named the same as one of the variants of the type `Foo`\n+warning[E0170]: pattern binding `Foo` is named the same as one of the variants of the type `foo::Foo`\n   --> $DIR/lint-uppercase-variables.rs:22:9\n    |\n LL |         Foo => {}\n-   |         ^^^ help: to match on the variant, qualify the path: `Foo::Foo`\n+   |         ^^^ help: to match on the variant, qualify the path: `foo::Foo::Foo`\n    |\n    = note: `#[warn(bindings_with_variant_name)]` on by default\n \n-warning[E0170]: pattern binding `Foo` is named the same as one of the variants of the type `Foo`\n+warning[E0170]: pattern binding `Foo` is named the same as one of the variants of the type `foo::Foo`\n   --> $DIR/lint-uppercase-variables.rs:28:9\n    |\n LL |     let Foo = foo::Foo::Foo;\n-   |         ^^^ help: to match on the variant, qualify the path: `Foo::Foo`\n+   |         ^^^ help: to match on the variant, qualify the path: `foo::Foo::Foo`\n \n-warning[E0170]: pattern binding `Foo` is named the same as one of the variants of the type `Foo`\n+warning[E0170]: pattern binding `Foo` is named the same as one of the variants of the type `foo::Foo`\n   --> $DIR/lint-uppercase-variables.rs:33:17\n    |\n LL |     fn in_param(Foo: foo::Foo) {}\n-   |                 ^^^ help: to match on the variant, qualify the path: `Foo::Foo`\n+   |                 ^^^ help: to match on the variant, qualify the path: `foo::Foo::Foo`\n \n warning: unused variable: `Foo`\n   --> $DIR/lint-uppercase-variables.rs:22:9"}]}