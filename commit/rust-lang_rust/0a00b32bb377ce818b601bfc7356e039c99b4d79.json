{"sha": "0a00b32bb377ce818b601bfc7356e039c99b4d79", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhMDBiMzJiYjM3N2NlODE4YjYwMWJmYzczNTZlMDM5Yzk5YjRkNzk=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-28T17:42:19Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-28T17:42:19Z"}, "message": "Get rid of some spurious /~s in rustdoc. Oops.", "tree": {"sha": "be87889bd25e3d74f1a0f7b3907063fc18997d8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be87889bd25e3d74f1a0f7b3907063fc18997d8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a00b32bb377ce818b601bfc7356e039c99b4d79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a00b32bb377ce818b601bfc7356e039c99b4d79", "html_url": "https://github.com/rust-lang/rust/commit/0a00b32bb377ce818b601bfc7356e039c99b4d79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a00b32bb377ce818b601bfc7356e039c99b4d79/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae06546bbf72ed9eb8bf4086eaccf67703bf84ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae06546bbf72ed9eb8bf4086eaccf67703bf84ef", "html_url": "https://github.com/rust-lang/rust/commit/ae06546bbf72ed9eb8bf4086eaccf67703bf84ef"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "05da858ee3aa6305b94949b7055b132253fd4838", "filename": "src/rustdoc/markdown_pass.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0a00b32bb377ce818b601bfc7356e039c99b4d79/src%2Frustdoc%2Fmarkdown_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a00b32bb377ce818b601bfc7356e039c99b4d79/src%2Frustdoc%2Fmarkdown_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fmarkdown_pass.rs?ref=0a00b32bb377ce818b601bfc7356e039c99b4d79", "patch": "@@ -381,10 +381,10 @@ fn write_index(ctxt: ctxt, index: doc::index) {\n         let header = header_text_(entry.kind, entry.name);\n         let id = entry.link;\n         if option::is_some(entry.brief) {\n-            ctxt.w.write_line(#fmt(\"* [%s]/~(%s) - %s\",\n+            ctxt.w.write_line(#fmt(\"* [%s](%s) - %s\",\n                                    header, id, option::get(entry.brief)));\n         } else {\n-            ctxt.w.write_line(#fmt(\"* [%s]/~(%s)\", header, id));\n+            ctxt.w.write_line(#fmt(\"* [%s](%s)\", header, id));\n         }\n     }\n     ctxt.w.write_line(\"\");\n@@ -395,8 +395,8 @@ fn should_write_index() {\n     let markdown = test::render(\"mod a { } mod b { }\");\n     assert str::contains(\n         markdown,\n-        \"\\n\\n* [Module `a`]/~(#module-a)\\n\\\n-         * [Module `b`]/~(#module-b)\\n\\n\"\n+        \"\\n\\n* [Module `a`](#module-a)\\n\\\n+         * [Module `b`](#module-b)\\n\\n\"\n     );\n }\n \n@@ -417,7 +417,7 @@ fn should_write_index_for_foreign_mods() {\n     let markdown = test::render(\"native mod a { fn a(); }\");\n     assert str::contains(\n         markdown,\n-        \"\\n\\n* [Function `a`]/~(#function-a)\\n\\n\"\n+        \"\\n\\n* [Function `a`](#function-a)\\n\\n\"\n     );\n }\n "}]}