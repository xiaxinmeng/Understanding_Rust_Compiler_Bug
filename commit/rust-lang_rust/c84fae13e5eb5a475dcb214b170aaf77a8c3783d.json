{"sha": "c84fae13e5eb5a475dcb214b170aaf77a8c3783d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4NGZhZTEzZTVlYjVhNDc1ZGNiMjE0YjE3MGFhZjc3YThjMzc4M2Q=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-11-01T04:16:52Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-11-19T06:23:44Z"}, "message": "Move the definition of `QueryResult` into `plumbing.rs`.\n\nBecause it's the only file that uses it, and removes the need for\nimporting it.", "tree": {"sha": "7838034c07bed6d728f5d3894c951ad28ce295ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7838034c07bed6d728f5d3894c951ad28ce295ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c84fae13e5eb5a475dcb214b170aaf77a8c3783d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c84fae13e5eb5a475dcb214b170aaf77a8c3783d", "html_url": "https://github.com/rust-lang/rust/commit/c84fae13e5eb5a475dcb214b170aaf77a8c3783d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c84fae13e5eb5a475dcb214b170aaf77a8c3783d/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f0c640e0ee5a9ad365e78e3c62239b3d65b7045", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f0c640e0ee5a9ad365e78e3c62239b3d65b7045", "html_url": "https://github.com/rust-lang/rust/commit/0f0c640e0ee5a9ad365e78e3c62239b3d65b7045"}], "stats": {"total": 24, "additions": 11, "deletions": 13}, "files": [{"sha": "e5f4e793132f4b0d74166cfa1f955e5f970f1a90", "filename": "src/librustc/ty/query/job.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c84fae13e5eb5a475dcb214b170aaf77a8c3783d/src%2Flibrustc%2Fty%2Fquery%2Fjob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c84fae13e5eb5a475dcb214b170aaf77a8c3783d/src%2Flibrustc%2Fty%2Fquery%2Fjob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fjob.rs?ref=c84fae13e5eb5a475dcb214b170aaf77a8c3783d", "patch": "@@ -22,16 +22,6 @@ use {\n     std::iter::FromIterator,\n };\n \n-/// Indicates the state of a query for a given key in a query map.\n-pub(super) enum QueryResult<'tcx> {\n-    /// An already executing query. The query job can be used to await for its completion.\n-    Started(Lrc<QueryJob<'tcx>>),\n-\n-    /// The query panicked. Queries trying to wait on this will raise a fatal error or\n-    /// silently panic.\n-    Poisoned,\n-}\n-\n /// Represents a span and a query key.\n #[derive(Clone, Debug)]\n pub struct QueryInfo<'tcx> {"}, {"sha": "fc55b665c1d0e671333e3d9f725142292e9ee02a", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c84fae13e5eb5a475dcb214b170aaf77a8c3783d/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c84fae13e5eb5a475dcb214b170aaf77a8c3783d/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=c84fae13e5eb5a475dcb214b170aaf77a8c3783d", "patch": "@@ -7,7 +7,7 @@ use crate::ty::tls;\n use crate::ty::{self, TyCtxt};\n use crate::ty::query::Query;\n use crate::ty::query::config::{QueryConfig, QueryDescription};\n-use crate::ty::query::job::{QueryJob, QueryResult, QueryInfo};\n+use crate::ty::query::job::{QueryJob, QueryInfo};\n \n use errors::DiagnosticBuilder;\n use errors::Level;\n@@ -52,6 +52,16 @@ impl<T> QueryValue<T> {\n     }\n }\n \n+/// Indicates the state of a query for a given key in a query map.\n+pub(super) enum QueryResult<'tcx> {\n+    /// An already executing query. The query job can be used to await for its completion.\n+    Started(Lrc<QueryJob<'tcx>>),\n+\n+    /// The query panicked. Queries trying to wait on this will raise a fatal error or\n+    /// silently panic.\n+    Poisoned,\n+}\n+\n impl<'tcx, M: QueryConfig<'tcx>> Default for QueryCache<'tcx, M> {\n     fn default() -> QueryCache<'tcx, M> {\n         QueryCache {\n@@ -676,8 +686,6 @@ macro_rules! define_queries_inner {\n         [$($modifiers:tt)*] fn $name:ident: $node:ident($K:ty) -> $V:ty,)*) => {\n \n         use std::mem;\n-        #[cfg(parallel_compiler)]\n-        use ty::query::job::QueryResult;\n         use rustc_data_structures::sharded::Sharded;\n         use crate::{\n             rustc_data_structures::stable_hasher::HashStable,"}]}