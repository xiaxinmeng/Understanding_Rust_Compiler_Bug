{"sha": "ab425a4bca1d6df234596a1621c4cabcc73bb272", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiNDI1YTRiY2ExZDZkZjIzNDU5NmExNjIxYzRjYWJjYzczYmIyNzI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-31T11:47:10Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-31T11:47:10Z"}, "message": "Revert \"Build with `-Cpanic=unwind` by default\"\n\nThis reverts commit afe74d71e4c2f08696ade0de321a45f7442440d8. It\nshouldn't have been pushed to master as it isn't ready yet.", "tree": {"sha": "c4aa566aa7ae1272b264654362fabca80d2c5ee8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4aa566aa7ae1272b264654362fabca80d2c5ee8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab425a4bca1d6df234596a1621c4cabcc73bb272", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab425a4bca1d6df234596a1621c4cabcc73bb272", "html_url": "https://github.com/rust-lang/rust/commit/ab425a4bca1d6df234596a1621c4cabcc73bb272", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab425a4bca1d6df234596a1621c4cabcc73bb272/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ceb5277284e7a485504d1f7d165a385cbfd797b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ceb5277284e7a485504d1f7d165a385cbfd797b", "html_url": "https://github.com/rust-lang/rust/commit/2ceb5277284e7a485504d1f7d165a385cbfd797b"}], "stats": {"total": 30, "additions": 6, "deletions": 24}, "files": [{"sha": "0354304e55bf77477039d6737749d845128ac80c", "filename": "build_sysroot/build_sysroot.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab425a4bca1d6df234596a1621c4cabcc73bb272/build_sysroot%2Fbuild_sysroot.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ab425a4bca1d6df234596a1621c4cabcc73bb272/build_sysroot%2Fbuild_sysroot.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2Fbuild_sysroot.sh?ref=ab425a4bca1d6df234596a1621c4cabcc73bb272", "patch": "@@ -23,7 +23,7 @@ rm -r target/*/{debug,release}/{build,deps,examples,libsysroot*,native} 2>/dev/n\n export CARGO_TARGET_DIR=target\n \n # Build libs\n-export RUSTFLAGS=\"$RUSTFLAGS -Zforce-unstable-if-unmarked\"\n+export RUSTFLAGS=\"$RUSTFLAGS -Zforce-unstable-if-unmarked -Cpanic=abort\"\n export __CARGO_DEFAULT_LIB_METADATA=\"cg_clif\"\n if [[ \"$1\" != \"--debug\" ]]; then\n     sysroot_channel='release'"}, {"sha": "71e93e87b6c4135c4d180cedeac7be72f64fabe7", "filename": "example/alloc_example.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ab425a4bca1d6df234596a1621c4cabcc73bb272/example%2Falloc_example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab425a4bca1d6df234596a1621c4cabcc73bb272/example%2Falloc_example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Falloc_example.rs?ref=ab425a4bca1d6df234596a1621c4cabcc73bb272", "patch": "@@ -1,4 +1,4 @@\n-#![feature(start, box_syntax, core_intrinsics, alloc_prelude, alloc_error_handler, lang_items)]\n+#![feature(start, box_syntax, core_intrinsics, alloc_prelude, alloc_error_handler)]\n #![no_std]\n \n extern crate alloc;\n@@ -27,11 +27,6 @@ fn alloc_error_handler(_: alloc::alloc::Layout) -> ! {\n     core::intrinsics::abort();\n }\n \n-#[lang = \"eh_personality\"]\n-fn eh_personality() -> ! {\n-    loop {}\n-}\n-\n #[start]\n fn main(_argc: isize, _argv: *const *const u8) -> isize {\n     let world: Box<&str> = box \"Hello World!\\0\";"}, {"sha": "3afcea8f06bd6c257b6ec97077d17ee7496ed565", "filename": "scripts/tests.sh", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab425a4bca1d6df234596a1621c4cabcc73bb272/scripts%2Ftests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ab425a4bca1d6df234596a1621c4cabcc73bb272/scripts%2Ftests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Ftests.sh?ref=ab425a4bca1d6df234596a1621c4cabcc73bb272", "patch": "@@ -61,11 +61,11 @@ function base_sysroot_tests() {\n     $RUN_WRAPPER ./target/out/std_example arg\n \n     echo \"[AOT] subslice-patterns-const-eval\"\n-    $MY_RUSTC example/subslice-patterns-const-eval.rs --crate-type bin --target \"$TARGET_TRIPLE\"\n+    $MY_RUSTC example/subslice-patterns-const-eval.rs --crate-type bin -Cpanic=abort --target \"$TARGET_TRIPLE\"\n     $RUN_WRAPPER ./target/out/subslice-patterns-const-eval\n \n     echo \"[AOT] track-caller-attribute\"\n-    $MY_RUSTC example/track-caller-attribute.rs --crate-type bin --target \"$TARGET_TRIPLE\"\n+    $MY_RUSTC example/track-caller-attribute.rs --crate-type bin -Cpanic=abort --target \"$TARGET_TRIPLE\"\n     $RUN_WRAPPER ./target/out/track-caller-attribute\n \n     echo \"[AOT] mod_bench\""}, {"sha": "983839d48d2d756ab0bbf5760668eac6854d4329", "filename": "src/bin/cg_clif.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ab425a4bca1d6df234596a1621c4cabcc73bb272/src%2Fbin%2Fcg_clif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab425a4bca1d6df234596a1621c4cabcc73bb272/src%2Fbin%2Fcg_clif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcg_clif.rs?ref=ab425a4bca1d6df234596a1621c4cabcc73bb272", "patch": "@@ -24,16 +24,7 @@ impl rustc_driver::Callbacks for CraneliftPassesCallbacks {\n         self.time_passes = config.opts.prints.is_empty()\n             && (config.opts.debugging_opts.time_passes || config.opts.debugging_opts.time);\n \n-        if config.opts.test {\n-            // Unwinding is not yet supported by cg_clif. `-Cpanic=abort` in combination with\n-            // `-Zpanic-abort-tests` ensures that tests are run in a subprocess. This avoids\n-            // crashing the test driver on panics, thereby allowing it to report the error and\n-            // continue with other tests.\n-            config.opts.cg.panic = Some(PanicStrategy::Abort);\n-            // Avoid `-Cprefer-dynamic` in case of `-Cpanic=abort` as that will cause a dynamically\n-            // linked libstd with `-Cpanic=unwind` to be linked in, which isn't allowed.\n-            config.opts.cg.prefer_dynamic = false;\n-        }\n+        config.opts.cg.panic = Some(PanicStrategy::Abort);\n         config.opts.debugging_opts.panic_abort_tests = true;\n         config.opts.maybe_sysroot = Some(config.opts.maybe_sysroot.clone().unwrap_or_else(|| {\n             std::env::current_exe().unwrap().parent().unwrap().parent().unwrap().to_owned()"}, {"sha": "e7cd5edbbf654a2888e6b0ba4965da554f37f4a1", "filename": "src/bin/cg_clif_build_sysroot.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab425a4bca1d6df234596a1621c4cabcc73bb272/src%2Fbin%2Fcg_clif_build_sysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab425a4bca1d6df234596a1621c4cabcc73bb272/src%2Fbin%2Fcg_clif_build_sysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcg_clif_build_sysroot.rs?ref=ab425a4bca1d6df234596a1621c4cabcc73bb272", "patch": "@@ -44,11 +44,7 @@ impl rustc_driver::Callbacks for CraneliftPassesCallbacks {\n             return;\n         }\n \n-        if config.opts.crate_name.as_deref() == Some(\"panic_abort\") {\n-            // panic_abort must always be built with `-Cpanic=abort`\n-            config.opts.cg.panic = Some(PanicStrategy::Abort);\n-        }\n-\n+        config.opts.cg.panic = Some(PanicStrategy::Abort);\n         config.opts.debugging_opts.panic_abort_tests = true;\n         config.opts.maybe_sysroot =\n             Some(std::env::current_exe().unwrap().parent().unwrap().parent().unwrap().to_owned());"}]}