{"sha": "ed39523406fea9d4c82f87f4ac9ad92388084123", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkMzk1MjM0MDZmZWE5ZDRjODJmODdmNGFjOWFkOTIzODgwODQxMjM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-19T02:17:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-19T02:17:52Z"}, "message": "Auto merge of #51278 - EPashkin:fix_mod_with_multilevel_paths_on_windows, r=nikomatsakis\n\nFix processing mod with multi-level path on Windows\n\nFix error in [rustfmt](https://github.com/rust-lang-nursery/rustfmt/issues/1754) because libsyntax can not handle `mod` with multilevel path on Windows.\n\nAlternative is do almost same in https://github.com/rust-lang/rust/blob/master/src/libstd/sys/windows/fs.rs#L717 to allow work on paths with different separators, Ex. \"\\\\\\\\?\\\\c:\\\\windows/temp\"", "tree": {"sha": "eb5cf65827108b80b8ea440696b778e151c950b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb5cf65827108b80b8ea440696b778e151c950b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed39523406fea9d4c82f87f4ac9ad92388084123", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed39523406fea9d4c82f87f4ac9ad92388084123", "html_url": "https://github.com/rust-lang/rust/commit/ed39523406fea9d4c82f87f4ac9ad92388084123", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed39523406fea9d4c82f87f4ac9ad92388084123/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc19590297d211bb395a16b8ecdc82bab5c00bd3", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc19590297d211bb395a16b8ecdc82bab5c00bd3", "html_url": "https://github.com/rust-lang/rust/commit/fc19590297d211bb395a16b8ecdc82bab5c00bd3"}, {"sha": "cb5e9731bb17eb7ecd81c72b09b036e5420d3ea7", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb5e9731bb17eb7ecd81c72b09b036e5420d3ea7", "html_url": "https://github.com/rust-lang/rust/commit/cb5e9731bb17eb7ecd81c72b09b036e5420d3ea7"}], "stats": {"total": 63, "additions": 62, "deletions": 1}, "files": [{"sha": "1735951da2f34638008e06bd45f482dc2c1ad6c0", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ed39523406fea9d4c82f87f4ac9ad92388084123/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed39523406fea9d4c82f87f4ac9ad92388084123/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=ed39523406fea9d4c82f87f4ac9ad92388084123", "patch": "@@ -6128,7 +6128,19 @@ impl<'a> Parser<'a> {\n     }\n \n     pub fn submod_path_from_attr(attrs: &[Attribute], dir_path: &Path) -> Option<PathBuf> {\n-        attr::first_attr_value_str_by_name(attrs, \"path\").map(|d| dir_path.join(&d.as_str()))\n+        if let Some(s) = attr::first_attr_value_str_by_name(attrs, \"path\") {\n+            let s = s.as_str();\n+\n+            // On windows, the base path might have the form\n+            // `\\\\?\\foo\\bar` in which case it does not tolerate\n+            // mixed `/` and `\\` separators, so canonicalize\n+            // `/` to `\\`.\n+            #[cfg(windows)]\n+            let s = s.replace(\"/\", \"\\\\\");\n+            Some(dir_path.join(s))\n+        } else {\n+            None\n+        }\n     }\n \n     /// Returns either a path to a module, or ."}, {"sha": "3bf50652113e044e20e8b9c195998b2187033460", "filename": "src/test/run-pass-fulldeps/mod_dir_path_canonicalized.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/ed39523406fea9d4c82f87f4ac9ad92388084123/src%2Ftest%2Frun-pass-fulldeps%2Fmod_dir_path_canonicalized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed39523406fea9d4c82f87f4ac9ad92388084123/src%2Ftest%2Frun-pass-fulldeps%2Fmod_dir_path_canonicalized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmod_dir_path_canonicalized.rs?ref=ed39523406fea9d4c82f87f4ac9ad92388084123", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Testing that a libsyntax can parse modules with canonicalized base path\n+// ignore-cross-compile\n+\n+#![feature(rustc_private)]\n+\n+extern crate syntax;\n+\n+use std::path::Path;\n+use syntax::codemap::FilePathMapping;\n+use syntax::parse::{self, ParseSess};\n+\n+#[path = \"mod_dir_simple/test.rs\"]\n+mod gravy;\n+\n+pub fn main() {\n+    syntax::with_globals(|| parse());\n+\n+    assert_eq!(gravy::foo(), 10);\n+}\n+\n+fn parse() {\n+    let parse_session = ParseSess::new(FilePathMapping::empty());\n+\n+    let path = Path::new(file!());\n+    let path = path.canonicalize().unwrap();\n+    let mut parser = parse::new_parser_from_file(&parse_session, &path);\n+    let _ = parser.parse_crate_mod();\n+}"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/test/run-pass-fulldeps/mod_dir_simple/compiletest-ignore-dir", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ed39523406fea9d4c82f87f4ac9ad92388084123/src%2Ftest%2Frun-pass-fulldeps%2Fmod_dir_simple%2Fcompiletest-ignore-dir", "raw_url": "https://github.com/rust-lang/rust/raw/ed39523406fea9d4c82f87f4ac9ad92388084123/src%2Ftest%2Frun-pass-fulldeps%2Fmod_dir_simple%2Fcompiletest-ignore-dir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmod_dir_simple%2Fcompiletest-ignore-dir?ref=ed39523406fea9d4c82f87f4ac9ad92388084123"}, {"sha": "58c1beee3be70324333f93e76f4ff6dca68ca20e", "filename": "src/test/run-pass-fulldeps/mod_dir_simple/test.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ed39523406fea9d4c82f87f4ac9ad92388084123/src%2Ftest%2Frun-pass-fulldeps%2Fmod_dir_simple%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed39523406fea9d4c82f87f4ac9ad92388084123/src%2Ftest%2Frun-pass-fulldeps%2Fmod_dir_simple%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmod_dir_simple%2Ftest.rs?ref=ed39523406fea9d4c82f87f4ac9ad92388084123", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo() -> isize { 10 }"}]}