{"sha": "38383017d6bf22ded0af1875e164f0f154285f2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4MzgzMDE3ZDZiZjIyZGVkMGFmMTg3NWUxNjRmMGYxNTQyODVmMmY=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-09T17:25:28Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-09T17:25:28Z"}, "message": "Remove size_of == 1 case from `fill` specialization.", "tree": {"sha": "46c753e7eab32c22fb6cb68e94b623f2caf1f3f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46c753e7eab32c22fb6cb68e94b623f2caf1f3f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38383017d6bf22ded0af1875e164f0f154285f2f", "comment_count": 2, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38383017d6bf22ded0af1875e164f0f154285f2f", "html_url": "https://github.com/rust-lang/rust/commit/38383017d6bf22ded0af1875e164f0f154285f2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38383017d6bf22ded0af1875e164f0f154285f2f/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eaf6f463599df1f18da94a6965e216ea15795417", "url": "https://api.github.com/repos/rust-lang/rust/commits/eaf6f463599df1f18da94a6965e216ea15795417", "html_url": "https://github.com/rust-lang/rust/commit/eaf6f463599df1f18da94a6965e216ea15795417"}], "stats": {"total": 16, "additions": 2, "deletions": 14}, "files": [{"sha": "80eb590587f993b1e248a65a1c481368c44e994a", "filename": "library/core/src/slice/specialize.rs", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/38383017d6bf22ded0af1875e164f0f154285f2f/library%2Fcore%2Fsrc%2Fslice%2Fspecialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38383017d6bf22ded0af1875e164f0f154285f2f/library%2Fcore%2Fsrc%2Fslice%2Fspecialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fspecialize.rs?ref=38383017d6bf22ded0af1875e164f0f154285f2f", "patch": "@@ -1,6 +1,3 @@\n-use crate::mem::{size_of, transmute_copy};\n-use crate::ptr::write_bytes;\n-\n pub(super) trait SpecFill<T> {\n     fn spec_fill(&mut self, value: T);\n }\n@@ -19,17 +16,8 @@ impl<T: Clone> SpecFill<T> for [T] {\n \n impl<T: Copy> SpecFill<T> for [T] {\n     fn spec_fill(&mut self, value: T) {\n-        if size_of::<T>() == 1 {\n-            // SAFETY: The size_of check above ensures that values are 1 byte wide, as required\n-            // for the transmute and write_bytes\n-            unsafe {\n-                let value: u8 = transmute_copy(&value);\n-                write_bytes(self.as_mut_ptr(), value, self.len());\n-            }\n-        } else {\n-            for item in self.iter_mut() {\n-                *item = value;\n-            }\n+        for item in self.iter_mut() {\n+            *item = value;\n         }\n     }\n }"}]}