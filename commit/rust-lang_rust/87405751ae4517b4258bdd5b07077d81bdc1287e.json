{"sha": "87405751ae4517b4258bdd5b07077d81bdc1287e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3NDA1NzUxYWU0NTE3YjQyNThiZGQ1YjA3MDc3ZDgxYmRjMTI4N2U=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-12-11T15:01:08Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-12-11T15:01:08Z"}, "message": "Include type name in symbol for methods", "tree": {"sha": "6ab8103c83543e59403bfe60ea63acde53205bb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ab8103c83543e59403bfe60ea63acde53205bb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87405751ae4517b4258bdd5b07077d81bdc1287e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87405751ae4517b4258bdd5b07077d81bdc1287e", "html_url": "https://github.com/rust-lang/rust/commit/87405751ae4517b4258bdd5b07077d81bdc1287e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87405751ae4517b4258bdd5b07077d81bdc1287e/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81dd3824ff4f4f85db2a092dab78e5e6c05f96cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/81dd3824ff4f4f85db2a092dab78e5e6c05f96cc", "html_url": "https://github.com/rust-lang/rust/commit/81dd3824ff4f4f85db2a092dab78e5e6c05f96cc"}], "stats": {"total": 37, "additions": 31, "deletions": 6}, "files": [{"sha": "e85b0ec77cbbdde79224c9c97c0547758315c133", "filename": "src/librustc/front/map/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87405751ae4517b4258bdd5b07077d81bdc1287e/src%2Flibrustc%2Ffront%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87405751ae4517b4258bdd5b07077d81bdc1287e/src%2Flibrustc%2Ffront%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Fmap%2Fcollector.rs?ref=87405751ae4517b4258bdd5b07077d81bdc1287e", "patch": "@@ -122,7 +122,7 @@ impl<'ast> Visitor<'ast> for NodeCollector<'ast> {\n         // Pick the def data. This need not be unique, but the more\n         // information we encapsulate into\n         let def_data = match i.node {\n-            ItemDefaultImpl(..) | ItemImpl(..) => DefPathData::Impl,\n+            ItemDefaultImpl(..) | ItemImpl(..) => DefPathData::Impl(i.name),\n             ItemEnum(..) | ItemStruct(..) | ItemTrait(..) => DefPathData::Type(i.name),\n             ItemExternCrate(..) | ItemMod(..) => DefPathData::Mod(i.name),\n             ItemStatic(..) | ItemConst(..) | ItemFn(..) => DefPathData::Value(i.name),"}, {"sha": "e903fcf6a56c21e0e6c971703a28c61bddf7bf9d", "filename": "src/librustc/front/map/definitions.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/87405751ae4517b4258bdd5b07077d81bdc1287e/src%2Flibrustc%2Ffront%2Fmap%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87405751ae4517b4258bdd5b07077d81bdc1287e/src%2Flibrustc%2Ffront%2Fmap%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Fmap%2Fdefinitions.rs?ref=87405751ae4517b4258bdd5b07077d81bdc1287e", "patch": "@@ -73,7 +73,7 @@ pub enum DefPathData {\n     Misc,\n \n     // Different kinds of items and item-like things:\n-    Impl,\n+    Impl(ast::Name),\n     Type(ast::Name),\n     Mod(ast::Name),\n     Value(ast::Name),\n@@ -177,6 +177,7 @@ impl DefPathData {\n     pub fn as_interned_str(&self) -> InternedString {\n         use self::DefPathData::*;\n         match *self {\n+            Impl(name) |\n             Type(name) |\n             Mod(name) |\n             Value(name) |\n@@ -212,10 +213,6 @@ impl DefPathData {\n                 InternedString::new(\"?\")\n             }\n \n-            Impl => {\n-                InternedString::new(\"<impl>\")\n-            }\n-\n             ClosureExpr => {\n                 InternedString::new(\"<closure>\")\n             }"}, {"sha": "1add39e0cc35bcdaffbb0a0dc00e6e4c78299a98", "filename": "src/test/run-make/symbols-include-type-name/Makefile", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/87405751ae4517b4258bdd5b07077d81bdc1287e/src%2Ftest%2Frun-make%2Fsymbols-include-type-name%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/87405751ae4517b4258bdd5b07077d81bdc1287e/src%2Ftest%2Frun-make%2Fsymbols-include-type-name%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsymbols-include-type-name%2FMakefile?ref=87405751ae4517b4258bdd5b07077d81bdc1287e", "patch": "@@ -0,0 +1,9 @@\n+-include ../tools.mk\n+\n+# Check that symbol names for methods include type names, instead of <impl>.\n+\n+OUT=$(TMPDIR)/lib.s\n+\n+all:\n+\t$(RUSTC) --crate-type staticlib --emit asm lib.rs\n+\tgrep Def $(OUT)"}, {"sha": "1c478ed2598e4cd89d9aca33b701f52eabd80f13", "filename": "src/test/run-make/symbols-include-type-name/lib.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/87405751ae4517b4258bdd5b07077d81bdc1287e/src%2Ftest%2Frun-make%2Fsymbols-include-type-name%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87405751ae4517b4258bdd5b07077d81bdc1287e/src%2Ftest%2Frun-make%2Fsymbols-include-type-name%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsymbols-include-type-name%2Flib.rs?ref=87405751ae4517b4258bdd5b07077d81bdc1287e", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct Def {\n+    pub id: i32,\n+}\n+\n+impl Def {\n+    pub fn new(id: i32) -> Def {\n+        Def { id: id }\n+    }\n+}"}]}