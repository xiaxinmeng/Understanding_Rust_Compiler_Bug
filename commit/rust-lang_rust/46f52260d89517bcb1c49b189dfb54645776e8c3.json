{"sha": "46f52260d89517bcb1c49b189dfb54645776e8c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2ZjUyMjYwZDg5NTE3YmNiMWM0OWIxODlkZmI1NDY0NTc3NmU4YzM=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2019-12-26T09:26:53Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-01-11T10:18:44Z"}, "message": "Simplify exception cleanup for libunwind-style unwinding", "tree": {"sha": "6c4c2c454b355eb7f624d52cb6464ade9588d8d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c4c2c454b355eb7f624d52cb6464ade9588d8d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46f52260d89517bcb1c49b189dfb54645776e8c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46f52260d89517bcb1c49b189dfb54645776e8c3", "html_url": "https://github.com/rust-lang/rust/commit/46f52260d89517bcb1c49b189dfb54645776e8c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46f52260d89517bcb1c49b189dfb54645776e8c3/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10720b418ecc72709adddba1b26e2cb293558e1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/10720b418ecc72709adddba1b26e2cb293558e1b", "html_url": "https://github.com/rust-lang/rust/commit/10720b418ecc72709adddba1b26e2cb293558e1b"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "6bec2686533ebb0cac081efd49447bcfc6863714", "filename": "src/libpanic_unwind/gcc.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/46f52260d89517bcb1c49b189dfb54645776e8c3/src%2Flibpanic_unwind%2Fgcc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f52260d89517bcb1c49b189dfb54645776e8c3/src%2Flibpanic_unwind%2Fgcc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Fgcc.rs?ref=46f52260d89517bcb1c49b189dfb54645776e8c3", "patch": "@@ -57,7 +57,7 @@ use unwind as uw;\n #[repr(C)]\n struct Exception {\n     _uwe: uw::_Unwind_Exception,\n-    cause: Option<Box<dyn Any + Send>>,\n+    cause: Box<dyn Any + Send>,\n }\n \n pub unsafe fn panic(data: Box<dyn Any + Send>) -> u32 {\n@@ -67,7 +67,7 @@ pub unsafe fn panic(data: Box<dyn Any + Send>) -> u32 {\n             exception_cleanup,\n             private: [0; uw::unwinder_private_data_size],\n         },\n-        cause: Some(data),\n+        cause: data,\n     });\n     let exception_param = Box::into_raw(exception) as *mut uw::_Unwind_Exception;\n     return uw::_Unwind_RaiseException(exception_param) as u32;\n@@ -87,10 +87,8 @@ pub fn payload() -> *mut u8 {\n }\n \n pub unsafe fn cleanup(ptr: *mut u8) -> Box<dyn Any + Send> {\n-    let my_ep = ptr as *mut Exception;\n-    let cause = (*my_ep).cause.take();\n-    uw::_Unwind_DeleteException(ptr as *mut _);\n-    cause.unwrap()\n+    let exception = Box::from_raw(ptr as *mut Exception);\n+    exception.cause\n }\n \n // Rust's exception class identifier.  This is used by personality routines to"}]}