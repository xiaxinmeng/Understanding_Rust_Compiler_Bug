{"sha": "3fb33008ce5bdd1e369b471bc20b6fe28c0f550e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmYjMzMDA4Y2U1YmRkMWUzNjliNDcxYmMyMGI2ZmUyOGMwZjU1MGU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-20T04:28:45Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-20T17:19:22Z"}, "message": "Test runner should fail if any tests fail. Issue #428", "tree": {"sha": "b6cfdd7fa563c35bce223db1a4130fe06bf07efb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6cfdd7fa563c35bce223db1a4130fe06bf07efb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fb33008ce5bdd1e369b471bc20b6fe28c0f550e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fb33008ce5bdd1e369b471bc20b6fe28c0f550e", "html_url": "https://github.com/rust-lang/rust/commit/3fb33008ce5bdd1e369b471bc20b6fe28c0f550e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fb33008ce5bdd1e369b471bc20b6fe28c0f550e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cb3a798abb12153d48c705f85358d54abe705d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cb3a798abb12153d48c705f85358d54abe705d5", "html_url": "https://github.com/rust-lang/rust/commit/2cb3a798abb12153d48c705f85358d54abe705d5"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "ab88d16c38fd2fbe8e064e8ca315d158169b2936", "filename": "src/lib/test.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3fb33008ce5bdd1e369b471bc20b6fe28c0f550e/src%2Flib%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fb33008ce5bdd1e369b471bc20b6fe28c0f550e/src%2Flib%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ftest.rs?ref=3fb33008ce5bdd1e369b471bc20b6fe28c0f550e", "patch": "@@ -129,17 +129,18 @@ fn run_tests(&test_opts opts, &test_desc[] tests) -> bool {\n     }\n \n     assert passed + failed + ignored == total;\n+    auto success = failed == 0u;\n \n     out.write_str(#fmt(\"\\nresult: \"));\n-    if (failed == 0u) {\n+    if (success) {\n         write_ok(out);\n     } else {\n         write_failed(out);\n     }\n     out.write_str(#fmt(\". %u passed; %u failed; %u ignored\\n\\n\",\n                        passed, failed, ignored));\n \n-    ret true;\n+    ret success;\n \n     fn write_ok(&io::writer out) {\n         write_pretty(out, \"ok\", term::color_green);"}]}