{"sha": "29be741c9c15a69487cb2eae9bb895399806731f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5YmU3NDFjOWMxNWE2OTQ4N2NiMmVhZTliYjg5NTM5OTgwNjczMWY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-03-11T00:59:32Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-03-11T00:59:32Z"}, "message": "review comments", "tree": {"sha": "26fe221e3b3a53a71af15ae48f8e843f7476b74c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26fe221e3b3a53a71af15ae48f8e843f7476b74c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29be741c9c15a69487cb2eae9bb895399806731f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29be741c9c15a69487cb2eae9bb895399806731f", "html_url": "https://github.com/rust-lang/rust/commit/29be741c9c15a69487cb2eae9bb895399806731f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29be741c9c15a69487cb2eae9bb895399806731f/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f483032e97ba7c89f803fc6f8078f0acdd9d9b3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f483032e97ba7c89f803fc6f8078f0acdd9d9b3b", "html_url": "https://github.com/rust-lang/rust/commit/f483032e97ba7c89f803fc6f8078f0acdd9d9b3b"}], "stats": {"total": 90, "additions": 22, "deletions": 68}, "files": [{"sha": "668ac8047d17b3208521a5cf7962ad173aaea42b", "filename": "src/librustc_ast_passes/ast_validation.rs", "status": "modified", "additions": 16, "deletions": 37, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/29be741c9c15a69487cb2eae9bb895399806731f/src%2Flibrustc_ast_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29be741c9c15a69487cb2eae9bb895399806731f/src%2Flibrustc_ast_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Fast_validation.rs?ref=29be741c9c15a69487cb2eae9bb895399806731f", "patch": "@@ -13,7 +13,7 @@ use rustc_ast::visit::{self, AssocCtxt, FnCtxt, FnKind, Visitor};\n use rustc_ast::walk_list;\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_errors::{error_code, pluralize, struct_span_err, Applicability};\n+use rustc_errors::{error_code, struct_span_err, Applicability};\n use rustc_parse::validate_attr;\n use rustc_session::lint::builtin::PATTERNS_IN_FNS_WITHOUT_BODY;\n use rustc_session::lint::LintBuffer;\n@@ -882,64 +882,43 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                 if is_auto == IsAuto::Yes {\n                     // Auto traits cannot have generics, super traits nor contain items.\n                     if !generics.params.is_empty() {\n-                        let spans: Vec<_> = generics.params.iter().map(|i| i.ident.span).collect();\n-                        let last = spans.iter().last().map(|s| *s);\n-                        let len = spans.len();\n                         let mut err = struct_span_err!(\n                             self.session,\n-                            spans,\n+                            generics.span,\n                             E0567,\n                             \"auto traits cannot have generic parameters\"\n                         );\n-                        if let Some(span) = last {\n-                            err.span_label(\n-                                span,\n-                                &format!(\n-                                    \"cannot have {these} generic parameter{s}\",\n-                                    these = if len == 1 { \"this\" } else { \"these\" },\n-                                    s = pluralize!(len)\n-                                ),\n-                            );\n-                        }\n                         err.span_label(\n                             item.ident.span,\n                             \"auto trait cannot have generic parameters\",\n                         );\n-                        err.span_suggestion_verbose(\n+                        err.span_suggestion(\n                             generics.span,\n-                            \"remove the parameters for the auto trait to be valid\",\n+                            \"remove the parameters\",\n                             String::new(),\n                             Applicability::MachineApplicable,\n                         );\n                         err.emit();\n                     }\n                     if !bounds.is_empty() {\n-                        let spans: Vec<_> = bounds.iter().map(|b| b.span()).collect();\n-                        let last = spans.iter().last().map(|s| *s);\n-                        let len = spans.len();\n+                        let span = match &bounds[..] {\n+                            [] => unreachable!(),\n+                            [single] => single.span(),\n+                            [first, .., last] => first.span().to(last.span()),\n+                        };\n                         let mut err = struct_span_err!(\n                             self.session,\n-                            spans,\n+                            span,\n                             E0568,\n                             \"auto traits cannot have super traits\"\n                         );\n                         err.span_label(item.ident.span, \"auto trait cannot have super traits\");\n-                        if let Some(span) = last {\n-                            err.span_label(\n-                                span,\n-                                &format!(\n-                                    \"cannot have {these} super trait{s}\",\n-                                    these = if len == 1 { \"this\" } else { \"these\" },\n-                                    s = pluralize!(len)\n-                                ),\n-                            );\n-                            err.span_suggestion_verbose(\n-                                generics.span.shrink_to_hi().to(span),\n-                                \"remove the super traits for the auto trait to be valid\",\n-                                String::new(),\n-                                Applicability::MachineApplicable,\n-                            );\n-                        }\n+                        err.span_suggestion(\n+                            span,\n+                            \"remove the super traits\",\n+                            String::new(),\n+                            Applicability::MachineApplicable,\n+                        );\n                         err.emit();\n                     }\n                     if !trait_items.is_empty() {"}, {"sha": "4040e66c6af776f65aa5f99e5a0f5fafd9504761", "filename": "src/test/ui/auto-trait-validation.stderr", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/29be741c9c15a69487cb2eae9bb895399806731f/src%2Ftest%2Fui%2Fauto-trait-validation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29be741c9c15a69487cb2eae9bb895399806731f/src%2Ftest%2Fui%2Fauto-trait-validation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauto-trait-validation.stderr?ref=29be741c9c15a69487cb2eae9bb895399806731f", "patch": "@@ -1,28 +1,18 @@\n error[E0567]: auto traits cannot have generic parameters\n-  --> $DIR/auto-trait-validation.rs:3:20\n+  --> $DIR/auto-trait-validation.rs:3:19\n    |\n LL | auto trait Generic<T> {}\n-   |            ------- ^ cannot have this generic parameter\n+   |            -------^^^ help: remove the parameters\n    |            |\n    |            auto trait cannot have generic parameters\n-   |\n-help: remove the parameters for the auto trait to be valid\n-   |\n-LL | auto trait Generic {}\n-   |                  --\n \n error[E0568]: auto traits cannot have super traits\n   --> $DIR/auto-trait-validation.rs:5:20\n    |\n LL | auto trait Bound : Copy {}\n-   |            -----   ^^^^ cannot have this super trait\n+   |            -----   ^^^^ help: remove the super traits\n    |            |\n    |            auto trait cannot have super traits\n-   |\n-help: remove the super traits for the auto trait to be valid\n-   |\n-LL | auto trait Bound {}\n-   |                --\n \n error[E0380]: auto traits cannot have methods or associated items\n   --> $DIR/auto-trait-validation.rs:7:25"}, {"sha": "a83ff3701511d8e608e57e39d993d71a7b41a552", "filename": "src/test/ui/traits/traits-inductive-overflow-supertrait-oibit.stderr", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/29be741c9c15a69487cb2eae9bb895399806731f/src%2Ftest%2Fui%2Ftraits%2Ftraits-inductive-overflow-supertrait-oibit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29be741c9c15a69487cb2eae9bb895399806731f/src%2Ftest%2Fui%2Ftraits%2Ftraits-inductive-overflow-supertrait-oibit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftraits-inductive-overflow-supertrait-oibit.stderr?ref=29be741c9c15a69487cb2eae9bb895399806731f", "patch": "@@ -2,14 +2,9 @@ error[E0568]: auto traits cannot have super traits\n   --> $DIR/traits-inductive-overflow-supertrait-oibit.rs:7:19\n    |\n LL | auto trait Magic: Copy {}\n-   |            -----  ^^^^ cannot have this super trait\n+   |            -----  ^^^^ help: remove the super traits\n    |            |\n    |            auto trait cannot have super traits\n-   |\n-help: remove the super traits for the auto trait to be valid\n-   |\n-LL | auto trait Magic {}\n-   |                --\n \n error[E0277]: the trait bound `NoClone: std::marker::Copy` is not satisfied\n   --> $DIR/traits-inductive-overflow-supertrait-oibit.rs:15:23"}, {"sha": "e3976293277549ae8972901670efa6ef51ca37e2", "filename": "src/test/ui/typeck/typeck-auto-trait-no-supertraits-2.stderr", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/29be741c9c15a69487cb2eae9bb895399806731f/src%2Ftest%2Fui%2Ftypeck%2Ftypeck-auto-trait-no-supertraits-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29be741c9c15a69487cb2eae9bb895399806731f/src%2Ftest%2Fui%2Ftypeck%2Ftypeck-auto-trait-no-supertraits-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck-auto-trait-no-supertraits-2.stderr?ref=29be741c9c15a69487cb2eae9bb895399806731f", "patch": "@@ -2,14 +2,9 @@ error[E0568]: auto traits cannot have super traits\n   --> $DIR/typeck-auto-trait-no-supertraits-2.rs:3:20\n    |\n LL | auto trait Magic : Sized where Option<Self> : Magic {}\n-   |            -----   ^^^^^ cannot have this super trait\n+   |            -----   ^^^^^ help: remove the super traits\n    |            |\n    |            auto trait cannot have super traits\n-   |\n-help: remove the super traits for the auto trait to be valid\n-   |\n-LL | auto trait Magic where Option<Self> : Magic {}\n-   |                --\n \n error: aborting due to previous error\n "}, {"sha": "b1602e3642ecb4d190f0736c2be7c6f7bdc19aa3", "filename": "src/test/ui/typeck/typeck-auto-trait-no-supertraits.stderr", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/29be741c9c15a69487cb2eae9bb895399806731f/src%2Ftest%2Fui%2Ftypeck%2Ftypeck-auto-trait-no-supertraits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29be741c9c15a69487cb2eae9bb895399806731f/src%2Ftest%2Fui%2Ftypeck%2Ftypeck-auto-trait-no-supertraits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck-auto-trait-no-supertraits.stderr?ref=29be741c9c15a69487cb2eae9bb895399806731f", "patch": "@@ -2,14 +2,9 @@ error[E0568]: auto traits cannot have super traits\n   --> $DIR/typeck-auto-trait-no-supertraits.rs:27:19\n    |\n LL | auto trait Magic: Copy {}\n-   |            -----  ^^^^ cannot have this super trait\n+   |            -----  ^^^^ help: remove the super traits\n    |            |\n    |            auto trait cannot have super traits\n-   |\n-help: remove the super traits for the auto trait to be valid\n-   |\n-LL | auto trait Magic {}\n-   |                --\n \n error: aborting due to previous error\n "}]}