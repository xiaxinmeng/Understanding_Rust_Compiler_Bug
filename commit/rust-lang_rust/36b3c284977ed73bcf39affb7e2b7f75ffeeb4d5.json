{"sha": "36b3c284977ed73bcf39affb7e2b7f75ffeeb4d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2YjNjMjg0OTc3ZWQ3M2JjZjM5YWZmYjdlMmI3Zjc1ZmZlZWI0ZDU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-05-15T11:29:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-15T11:29:52Z"}, "message": "Rollup merge of #85253 - RafaelKr:patch-1, r=varkor\n\nswap function order for better read flow\n\nI was reading this error message for the first time.\n\nI was a little bit confused when reading that part:\n```\nfoo.bar(); // we can now use this method since i32 implements the Foo trait\n```\n\nAt the time I was reading `// we can now use this method` I wasn't sure why. It only made sense when reading on. So swapping these parts results in a better read flow.", "tree": {"sha": "5a791c59c06518d14323a146e9ffdf7f71094ab2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a791c59c06518d14323a146e9ffdf7f71094ab2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36b3c284977ed73bcf39affb7e2b7f75ffeeb4d5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgn7CxCRBK7hj4Ov3rIwAAv9MIAFg1SMh8KKELDkijMSUncHkn\nruVBl0lm7Zx7MS6175jNpjuRLauh/h7kVf+rtoLHGpdg69NApkhpuyQ5kvLyl135\nFjerBXzMU4hTKvZmOrQjlGA8peHoXZKDhuIMqFEtE3IFK+VtY4G7Fs0u3mc1IVNl\noXXeQe4ZvC4Km6QpvAQ7bCZIMbaJ3ZDqkT4bZI8SI8f8riIvHzKdoJ43yh4EMAF3\nkdekr7w+z7Oy96bMRaDmNYrYUPzFSadfq3r77/9MPD2oM9obCOghAtkJi7aSpjbH\nDGP9qu36PrrSPJ1AbamvLEXj72xXjYMPUxgRwW2WjsYYLao7bzvWLMlk9Ec2e00=\n=5fap\n-----END PGP SIGNATURE-----\n", "payload": "tree 5a791c59c06518d14323a146e9ffdf7f71094ab2\nparent 57aa0d812acee349a04215918d70456c1a13e167\nparent a56d0e2f6e8b41ab2f307220acbc8fa03caaeaec\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1621078192 +0200\ncommitter GitHub <noreply@github.com> 1621078192 +0200\n\nRollup merge of #85253 - RafaelKr:patch-1, r=varkor\n\nswap function order for better read flow\n\nI was reading this error message for the first time.\n\nI was a little bit confused when reading that part:\n```\nfoo.bar(); // we can now use this method since i32 implements the Foo trait\n```\n\nAt the time I was reading `// we can now use this method` I wasn't sure why. It only made sense when reading on. So swapping these parts results in a better read flow.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36b3c284977ed73bcf39affb7e2b7f75ffeeb4d5", "html_url": "https://github.com/rust-lang/rust/commit/36b3c284977ed73bcf39affb7e2b7f75ffeeb4d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36b3c284977ed73bcf39affb7e2b7f75ffeeb4d5/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57aa0d812acee349a04215918d70456c1a13e167", "url": "https://api.github.com/repos/rust-lang/rust/commits/57aa0d812acee349a04215918d70456c1a13e167", "html_url": "https://github.com/rust-lang/rust/commit/57aa0d812acee349a04215918d70456c1a13e167"}, {"sha": "a56d0e2f6e8b41ab2f307220acbc8fa03caaeaec", "url": "https://api.github.com/repos/rust-lang/rust/commits/a56d0e2f6e8b41ab2f307220acbc8fa03caaeaec", "html_url": "https://github.com/rust-lang/rust/commit/a56d0e2f6e8b41ab2f307220acbc8fa03caaeaec"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "5f05b59d5a6d4fd3389bf2e9b3ce91b198384c28", "filename": "compiler/rustc_error_codes/src/error_codes/E0277.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/36b3c284977ed73bcf39affb7e2b7f75ffeeb4d5/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0277.md", "raw_url": "https://github.com/rust-lang/rust/raw/36b3c284977ed73bcf39affb7e2b7f75ffeeb4d5/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0277.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0277.md?ref=36b3c284977ed73bcf39affb7e2b7f75ffeeb4d5", "patch": "@@ -29,16 +29,16 @@ trait Foo {\n     fn bar(&self);\n }\n \n-fn some_func<T: Foo>(foo: T) {\n-    foo.bar(); // we can now use this method since i32 implements the\n-               // Foo trait\n-}\n-\n // we implement the trait on the i32 type\n impl Foo for i32 {\n     fn bar(&self) {}\n }\n \n+fn some_func<T: Foo>(foo: T) {\n+    foo.bar(); // we can now use this method since i32 implements the\n+               // Foo trait\n+}\n+\n fn main() {\n     some_func(5i32); // ok!\n }"}]}