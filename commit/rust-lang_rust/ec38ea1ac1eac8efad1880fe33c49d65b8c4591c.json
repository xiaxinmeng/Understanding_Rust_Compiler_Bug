{"sha": "ec38ea1ac1eac8efad1880fe33c49d65b8c4591c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMzhlYTFhYzFlYWM4ZWZhZDE4ODBmZTMzYzQ5ZDY1YjhjNDU5MWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-20T08:26:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-20T08:26:21Z"}, "message": "Auto merge of #7097 - yawara:fix/7069, r=llogiq\n\nFixed inconsistent_struct_constructor triggers in macro-generated code\n\nfixes #7069\n\nchangelog: `inconsistent_struct_constructor`: Fix FP in macro expansion.", "tree": {"sha": "56575e2583edf3c13765e4a059693ce9fb00d24c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56575e2583edf3c13765e4a059693ce9fb00d24c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec38ea1ac1eac8efad1880fe33c49d65b8c4591c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec38ea1ac1eac8efad1880fe33c49d65b8c4591c", "html_url": "https://github.com/rust-lang/rust/commit/ec38ea1ac1eac8efad1880fe33c49d65b8c4591c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec38ea1ac1eac8efad1880fe33c49d65b8c4591c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7c12f3aab940cf3b75a1e195989c0722f9ffe46", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7c12f3aab940cf3b75a1e195989c0722f9ffe46", "html_url": "https://github.com/rust-lang/rust/commit/b7c12f3aab940cf3b75a1e195989c0722f9ffe46"}, {"sha": "6eae905808fe830a731ed37e3f4a6264ae98e129", "url": "https://api.github.com/repos/rust-lang/rust/commits/6eae905808fe830a731ed37e3f4a6264ae98e129", "html_url": "https://github.com/rust-lang/rust/commit/6eae905808fe830a731ed37e3f4a6264ae98e129"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "d138c3a8acfefc0ff50b822ce6bb0d926b2f0116", "filename": "clippy_lints/src/inconsistent_struct_constructor.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec38ea1ac1eac8efad1880fe33c49d65b8c4591c/clippy_lints%2Fsrc%2Finconsistent_struct_constructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec38ea1ac1eac8efad1880fe33c49d65b8c4591c/clippy_lints%2Fsrc%2Finconsistent_struct_constructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finconsistent_struct_constructor.rs?ref=ec38ea1ac1eac8efad1880fe33c49d65b8c4591c", "patch": "@@ -1,4 +1,5 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::in_macro;\n use clippy_utils::source::snippet;\n use if_chain::if_chain;\n use rustc_data_structures::fx::FxHashMap;\n@@ -66,6 +67,7 @@ declare_lint_pass!(InconsistentStructConstructor => [INCONSISTENT_STRUCT_CONSTRU\n impl LateLintPass<'_> for InconsistentStructConstructor {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx hir::Expr<'_>) {\n         if_chain! {\n+            if !in_macro(expr.span);\n             if let ExprKind::Struct(qpath, fields, base) = expr.kind;\n             let ty = cx.typeck_results().expr_ty(expr);\n             if let Some(adt_def) = ty.ty_adt_def();"}, {"sha": "d1025743790a9747bfb95c6bb746d0b1e15b917c", "filename": "tests/ui/inconsistent_struct_constructor.fixed", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ec38ea1ac1eac8efad1880fe33c49d65b8c4591c/tests%2Fui%2Finconsistent_struct_constructor.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ec38ea1ac1eac8efad1880fe33c49d65b8c4591c/tests%2Fui%2Finconsistent_struct_constructor.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_struct_constructor.fixed?ref=ec38ea1ac1eac8efad1880fe33c49d65b8c4591c", "patch": "@@ -13,6 +13,15 @@ struct Foo {\n     z: i32,\n }\n \n+macro_rules! new_foo {\n+    () => {\n+        let x = 1;\n+        let y = 1;\n+        let z = 1;\n+        Foo { y, x, z }\n+    };\n+}\n+\n mod without_base {\n     use super::Foo;\n \n@@ -24,6 +33,10 @@ mod without_base {\n         // Should lint.\n         Foo { x, y, z };\n \n+        // Should NOT lint.\n+        // issue #7069.\n+        new_foo!();\n+\n         // Shoule NOT lint because the order is the same as in the definition.\n         Foo { x, y, z };\n "}, {"sha": "b095aa64a2174371e94d9f2c240ed910c9c893ca", "filename": "tests/ui/inconsistent_struct_constructor.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ec38ea1ac1eac8efad1880fe33c49d65b8c4591c/tests%2Fui%2Finconsistent_struct_constructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec38ea1ac1eac8efad1880fe33c49d65b8c4591c/tests%2Fui%2Finconsistent_struct_constructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_struct_constructor.rs?ref=ec38ea1ac1eac8efad1880fe33c49d65b8c4591c", "patch": "@@ -13,6 +13,15 @@ struct Foo {\n     z: i32,\n }\n \n+macro_rules! new_foo {\n+    () => {\n+        let x = 1;\n+        let y = 1;\n+        let z = 1;\n+        Foo { y, x, z }\n+    };\n+}\n+\n mod without_base {\n     use super::Foo;\n \n@@ -24,6 +33,10 @@ mod without_base {\n         // Should lint.\n         Foo { y, x, z };\n \n+        // Should NOT lint.\n+        // issue #7069.\n+        new_foo!();\n+\n         // Shoule NOT lint because the order is the same as in the definition.\n         Foo { x, y, z };\n "}, {"sha": "ef308dedb1661c331703d68d9ab973477f473d51", "filename": "tests/ui/inconsistent_struct_constructor.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec38ea1ac1eac8efad1880fe33c49d65b8c4591c/tests%2Fui%2Finconsistent_struct_constructor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ec38ea1ac1eac8efad1880fe33c49d65b8c4591c/tests%2Fui%2Finconsistent_struct_constructor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_struct_constructor.stderr?ref=ec38ea1ac1eac8efad1880fe33c49d65b8c4591c", "patch": "@@ -1,13 +1,13 @@\n error: struct constructor field order is inconsistent with struct definition field order\n-  --> $DIR/inconsistent_struct_constructor.rs:25:9\n+  --> $DIR/inconsistent_struct_constructor.rs:34:9\n    |\n LL |         Foo { y, x, z };\n    |         ^^^^^^^^^^^^^^^ help: try: `Foo { x, y, z }`\n    |\n    = note: `-D clippy::inconsistent-struct-constructor` implied by `-D warnings`\n \n error: struct constructor field order is inconsistent with struct definition field order\n-  --> $DIR/inconsistent_struct_constructor.rs:43:9\n+  --> $DIR/inconsistent_struct_constructor.rs:56:9\n    |\n LL | /         Foo {\n LL | |             z,"}]}