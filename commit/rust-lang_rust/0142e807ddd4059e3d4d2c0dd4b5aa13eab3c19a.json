{"sha": "0142e807ddd4059e3d4d2c0dd4b5aa13eab3c19a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxNDJlODA3ZGRkNDA1OWUzZDRkMmMwZGQ0YjVhYTEzZWFiM2MxOWE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-18T07:29:23Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-18T07:29:23Z"}, "message": "rustdoc: Write blank lines after brief descriptions", "tree": {"sha": "fa11a91729edfe132724fbca6443234c3c7d75ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa11a91729edfe132724fbca6443234c3c7d75ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0142e807ddd4059e3d4d2c0dd4b5aa13eab3c19a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0142e807ddd4059e3d4d2c0dd4b5aa13eab3c19a", "html_url": "https://github.com/rust-lang/rust/commit/0142e807ddd4059e3d4d2c0dd4b5aa13eab3c19a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0142e807ddd4059e3d4d2c0dd4b5aa13eab3c19a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "971236e8f7ecca4612c7aa0cd94d78c8b24187f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/971236e8f7ecca4612c7aa0cd94d78c8b24187f8", "html_url": "https://github.com/rust-lang/rust/commit/971236e8f7ecca4612c7aa0cd94d78c8b24187f8"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "41b505c31bdd43a940a4dad08c02bf4aad4fc36c", "filename": "src/rustdoc/gen.rs", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/0142e807ddd4059e3d4d2c0dd4b5aa13eab3c19a/src%2Frustdoc%2Fgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0142e807ddd4059e3d4d2c0dd4b5aa13eab3c19a/src%2Frustdoc%2Fgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fgen.rs?ref=0142e807ddd4059e3d4d2c0dd4b5aa13eab3c19a", "patch": "@@ -94,6 +94,7 @@ fn write_fn(\n     alt doc.brief {\n       some(brief) {\n         ctxt.w.write_line(brief);\n+        ctxt.w.write_line(\"\");\n       }\n       none. { }\n     }\n@@ -145,7 +146,7 @@ mod tests {\n         let ast = parse::from_str(source);\n         let doc = extract::extract(ast, \"belch\");\n         let markdown = write_markdown_str(doc);\n-        assert str::contains(markdown, \"# Crate belch\\n\");\n+        assert str::contains(markdown, \"# Crate belch\");\n     }\n \n     #[test]\n@@ -172,6 +173,26 @@ mod tests {\n         let ast = parse::from_str(source);\n         let doc = extract::extract(ast, \"\");\n         let markdown = write_markdown_str(doc);\n-        assert str::contains(markdown, \"Module `morp`\\n\");\n+        assert str::contains(markdown, \"Module `morp`\\n\\n\");\n+    }\n+\n+    #[test]\n+    fn should_leave_blank_line_between_fn_header_and_brief() {\n+        let source = \"#[doc(brief = \\\"brief\\\")] fn a() { }\";\n+        let srv = astsrv::mk_srv_from_str(source);\n+        let doc = extract::from_srv(srv, \"\");\n+        let doc = attr_pass::mk_pass()(srv, doc);\n+        let markdown = write_markdown_str(doc);\n+        assert str::contains(markdown, \"Function `a`\\n\\nbrief\");\n+    }\n+\n+    #[test]\n+    fn should_leve_blank_line_after_brief() {\n+        let source = \"#[doc(brief = \\\"brief\\\")] fn a() { }\";\n+        let srv = astsrv::mk_srv_from_str(source);\n+        let doc = extract::from_srv(srv, \"\");\n+        let doc = attr_pass::mk_pass()(srv, doc);\n+        let markdown = write_markdown_str(doc);\n+        assert str::contains(markdown, \"brief\\n\\n\");\n     }\n }\n\\ No newline at end of file"}]}