{"sha": "e6747df5cd4232d26747a556c263d0a5d9c72414", "node_id": "C_kwDOAAsO6NoAKGU2NzQ3ZGY1Y2Q0MjMyZDI2NzQ3YTU1NmMyNjNkMGE1ZDljNzI0MTQ", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2021-09-18T04:43:39Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2021-09-29T03:46:39Z"}, "message": "Fix lint register code format\n\nAlso change the generation functions to return `String` instead of\n`Vec<String>`. This makes sense now as the updates aren't line oriented\nanymore.", "tree": {"sha": "335e08912661cfd3d1e971ada10fe14761388c69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/335e08912661cfd3d1e971ada10fe14761388c69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6747df5cd4232d26747a556c263d0a5d9c72414", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6747df5cd4232d26747a556c263d0a5d9c72414", "html_url": "https://github.com/rust-lang/rust/commit/e6747df5cd4232d26747a556c263d0a5d9c72414", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6747df5cd4232d26747a556c263d0a5d9c72414/comments", "author": null, "committer": null, "parents": [{"sha": "50ea37061937acf9c912e0088ce48783926562a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/50ea37061937acf9c912e0088ce48783926562a1", "html_url": "https://github.com/rust-lang/rust/commit/50ea37061937acf9c912e0088ce48783926562a1"}], "stats": {"total": 2857, "additions": 1433, "deletions": 1424}, "files": [{"sha": "7dba808b4186762e64070b1fb515b7893500e043", "filename": "clippy_dev/src/lib.rs", "status": "modified", "additions": 99, "deletions": 89, "changes": 188, "blob_url": "https://github.com/rust-lang/rust/blob/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=e6747df5cd4232d26747a556c263d0a5d9c72414", "patch": "@@ -5,7 +5,7 @@\n \n use itertools::Itertools;\n use regex::Regex;\n-use std::collections::HashMap;\n+use std::collections::{BTreeSet, HashMap};\n use std::ffi::OsStr;\n use std::fs;\n use std::lazy::SyncLazy;\n@@ -19,6 +19,10 @@ pub mod serve;\n pub mod setup;\n pub mod update_lints;\n \n+const GENERATED_FILE_COMMENT: &str = \"// This file was generated by `cargo dev update_lints`.\\n\\\n+     // Use that command to update this file and do not edit by hand.\\n\\\n+     // Manual edits will be overwritten.\\n\\n\";\n+\n static DEC_CLIPPY_LINT_RE: SyncLazy<Regex> = SyncLazy::new(|| {\n     Regex::new(\n         r#\"(?x)\n@@ -98,37 +102,35 @@ impl Lint {\n     }\n }\n \n-/// Generates the Vec items for `register_lint_group` calls in `clippy_lints/src/lib.rs`.\n-#[must_use]\n-pub fn gen_lint_group_list<'a>(group_name: &str, lints: impl Iterator<Item = &'a Lint>) -> Vec<String> {\n-    let header = format!(\n-        r#\"store.register_group(true, \"clippy::{0}\", Some(\"clippy_{0}\"), vec![\"#,\n-        group_name\n-    );\n-    let footer = \"])\".to_string();\n-\n-    let mut result = vec![header];\n+/// Generates the code for registering a group\n+pub fn gen_lint_group_list<'a>(group_name: &str, lints: impl Iterator<Item = &'a Lint>) -> String {\n+    let mut details: Vec<_> = lints.map(|l| (&l.module, l.name.to_uppercase())).collect();\n+    details.sort_unstable();\n \n-    result.extend(\n-        lints\n-            .map(|l| format!(\"LintId::of({}::{}),\", l.module, l.name.to_uppercase()))\n-            .sorted(),\n-    );\n+    let mut output = GENERATED_FILE_COMMENT.to_string();\n \n-    result.push(footer);\n+    output.push_str(&format!(\n+        \"store.register_group(true, \\\"clippy::{0}\\\", Some(\\\"clippy_{0}\\\"), vec![\\n\",\n+        group_name\n+    ));\n+    for (module, name) in details {\n+        output.push_str(&format!(\"    LintId::of({}::{}),\\n\", module, name));\n+    }\n+    output.push_str(\"])\\n\");\n \n-    result\n+    output\n }\n \n-/// Generates the `pub mod module_name` list in `clippy_lints/src/lib.rs`.\n+/// Generates the module declarations for `lints`\n #[must_use]\n-pub fn gen_modules_list<'a>(lints: impl Iterator<Item = &'a Lint>) -> Vec<String> {\n-    lints\n-        .map(|l| &l.module)\n-        .unique()\n-        .map(|module| format!(\"mod {};\", module))\n-        .sorted()\n-        .collect::<Vec<String>>()\n+pub fn gen_modules_list<'a>(lints: impl Iterator<Item = &'a Lint>) -> String {\n+    let module_names: BTreeSet<_> = lints.map(|l| &l.module).collect();\n+\n+    let mut output = GENERATED_FILE_COMMENT.to_string();\n+    for name in module_names {\n+        output.push_str(&format!(\"mod {};\\n\", name));\n+    }\n+    output\n }\n \n /// Generates the list of lint links at the bottom of the README\n@@ -140,52 +142,52 @@ pub fn gen_changelog_lint_list<'a>(lints: impl Iterator<Item = &'a Lint>) -> Vec\n         .collect()\n }\n \n-/// Generates the `register_removed` code in `./clippy_lints/src/lib.rs`.\n+/// Generates the `register_removed` code\n #[must_use]\n-pub fn gen_deprecated<'a>(lints: impl Iterator<Item = &'a Lint>) -> Vec<String> {\n-    let mut result = vec![\"{\".to_string()];\n-    result.extend(lints.flat_map(|l| {\n-        l.deprecation\n-            .clone()\n-            .map(|depr_text| {\n-                vec![\n-                    \"    store.register_removed(\".to_string(),\n-                    format!(\"        \\\"clippy::{}\\\",\", l.name),\n-                    format!(\"        \\\"{}\\\",\", depr_text),\n-                    \"    );\".to_string(),\n-                ]\n-            })\n-            .expect(\"only deprecated lints should be passed\")\n-    }));\n-    result.push(\"}\".to_string());\n-    result\n+pub fn gen_deprecated<'a>(lints: impl Iterator<Item = &'a Lint>) -> String {\n+    let mut output = GENERATED_FILE_COMMENT.to_string();\n+    output.push_str(\"{\\n\");\n+    for Lint { name, deprecation, .. } in lints {\n+        output.push_str(&format!(\n+            concat!(\n+                \"    store.register_removed(\\n\",\n+                \"        \\\"clippy::{}\\\",\\n\",\n+                \"        \\\"{}\\\",\\n\",\n+                \"    );\\n\"\n+            ),\n+            name,\n+            deprecation.as_ref().expect(\"`lints` are deprecated\")\n+        ));\n+    }\n+    output.push_str(\"}\\n\");\n+\n+    output\n }\n \n+/// Generates the code for registering lints\n #[must_use]\n pub fn gen_register_lint_list<'a>(\n     internal_lints: impl Iterator<Item = &'a Lint>,\n     usable_lints: impl Iterator<Item = &'a Lint>,\n-) -> Vec<String> {\n-    let header = \"    store.register_lints(&[\".to_string();\n-    let footer = \"    ])\".to_string();\n-    let internal_lints = internal_lints\n-        .sorted_by_key(|l| format!(\"        {}::{},\", l.module, l.name.to_uppercase()))\n-        .map(|l| {\n-            format!(\n-                \"        #[cfg(feature = \\\"internal-lints\\\")]\\n        {}::{},\",\n-                l.module,\n-                l.name.to_uppercase()\n-            )\n-        });\n-    let other_lints = usable_lints\n-        .sorted_by_key(|l| format!(\"        {}::{},\", l.module, l.name.to_uppercase()))\n-        .map(|l| format!(\"        {}::{},\", l.module, l.name.to_uppercase()))\n-        .sorted();\n-    let mut lint_list = vec![header];\n-    lint_list.extend(internal_lints);\n-    lint_list.extend(other_lints);\n-    lint_list.push(footer);\n-    lint_list\n+) -> String {\n+    let mut details: Vec<_> = internal_lints\n+        .map(|l| (false, &l.module, l.name.to_uppercase()))\n+        .chain(usable_lints.map(|l| (true, &l.module, l.name.to_uppercase())))\n+        .collect();\n+    details.sort_unstable();\n+\n+    let mut output = GENERATED_FILE_COMMENT.to_string();\n+    output.push_str(\"store.register_lints(&[\\n\");\n+\n+    for (is_public, module_name, lint_name) in details {\n+        if !is_public {\n+            output.push_str(\"    #[cfg(feature = \\\"internal-lints\\\")]\\n\");\n+        }\n+        output.push_str(&format!(\"    {}::{},\\n\", module_name, lint_name));\n+    }\n+    output.push_str(\"])\\n\");\n+\n+    output\n }\n \n /// Gathers all files in `src/clippy_lints` and gathers all lints inside\n@@ -524,21 +526,23 @@ fn test_gen_deprecated() {\n             \"module_name\",\n         ),\n     ];\n-    let expected: Vec<String> = vec![\n-        \"{\",\n-        \"    store.register_removed(\",\n-        \"        \\\"clippy::should_assert_eq\\\",\",\n-        \"        \\\"has been superseded by should_assert_eq2\\\",\",\n-        \"    );\",\n-        \"    store.register_removed(\",\n-        \"        \\\"clippy::another_deprecated\\\",\",\n-        \"        \\\"will be removed\\\",\",\n-        \"    );\",\n-        \"}\",\n-    ]\n-    .into_iter()\n-    .map(String::from)\n-    .collect();\n+\n+    let expected = GENERATED_FILE_COMMENT.to_string()\n+        + &[\n+            \"{\",\n+            \"    store.register_removed(\",\n+            \"        \\\"clippy::should_assert_eq\\\",\",\n+            \"        \\\"has been superseded by should_assert_eq2\\\",\",\n+            \"    );\",\n+            \"    store.register_removed(\",\n+            \"        \\\"clippy::another_deprecated\\\",\",\n+            \"        \\\"will be removed\\\",\",\n+            \"    );\",\n+            \"}\",\n+        ]\n+        .join(\"\\n\")\n+        + \"\\n\";\n+\n     assert_eq!(expected, gen_deprecated(lints.iter()));\n }\n \n@@ -555,7 +559,7 @@ fn test_gen_modules_list() {\n         Lint::new(\"should_assert_eq\", \"group1\", \"abc\", None, \"module_name\"),\n         Lint::new(\"incorrect_stuff\", \"group3\", \"abc\", None, \"another_module\"),\n     ];\n-    let expected = vec![\"mod another_module;\".to_string(), \"mod module_name;\".to_string()];\n+    let expected = GENERATED_FILE_COMMENT.to_string() + &[\"mod another_module;\", \"mod module_name;\"].join(\"\\n\") + \"\\n\";\n     assert_eq!(expected, gen_modules_list(lints.iter()));\n }\n \n@@ -566,12 +570,18 @@ fn test_gen_lint_group_list() {\n         Lint::new(\"should_assert_eq\", \"group1\", \"abc\", None, \"module_name\"),\n         Lint::new(\"internal\", \"internal_style\", \"abc\", None, \"module_name\"),\n     ];\n-    let expected = vec![\n-        \"store.register_group(true, \\\"clippy::group1\\\", Some(\\\"clippy_group1\\\"), vec![\",\n-        \"LintId::of(module_name::ABC),\",\n-        \"LintId::of(module_name::INTERNAL),\",\n-        \"LintId::of(module_name::SHOULD_ASSERT_EQ),\",\n-        \"])\",\n-    ];\n-    assert_eq!(expected, gen_lint_group_list(\"group1\", lints.iter()));\n+    let expected = GENERATED_FILE_COMMENT.to_string()\n+        + &[\n+            \"store.register_group(true, \\\"clippy::group1\\\", Some(\\\"clippy_group1\\\"), vec![\",\n+            \"    LintId::of(module_name::ABC),\",\n+            \"    LintId::of(module_name::INTERNAL),\",\n+            \"    LintId::of(module_name::SHOULD_ASSERT_EQ),\",\n+            \"])\",\n+        ]\n+        .join(\"\\n\")\n+        + \"\\n\";\n+\n+    let result = gen_lint_group_list(\"group1\", lints.iter());\n+\n+    assert_eq!(expected, result);\n }"}, {"sha": "f393a8d1de1e42e63a0ccf5b013ff1b4b42fce89", "filename": "clippy_dev/src/update_lints.rs", "status": "modified", "additions": 29, "deletions": 30, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_dev%2Fsrc%2Fupdate_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_dev%2Fsrc%2Fupdate_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fupdate_lints.rs?ref=e6747df5cd4232d26747a556c263d0a5d9c72414", "patch": "@@ -66,32 +66,37 @@ pub fn run(update_mode: UpdateMode) {\n         exit_with_failure();\n     }\n \n-    for (name, lines) in [\n-        (\"mods\", gen_modules_list(usable_lints.iter())),\n-        (\"deprecated\", gen_deprecated(deprecated_lints.iter())),\n-        (\n-            \"register_lints\",\n-            gen_register_lint_list(internal_lints.iter(), usable_lints.iter()),\n-        ),\n-        (\"register_all\", {\n-            let all_group_lints = usable_lints.iter().filter(|l| {\n-                matches!(\n-                    &*l.group,\n-                    \"correctness\" | \"suspicious\" | \"style\" | \"complexity\" | \"perf\"\n-                )\n-            });\n-\n-            gen_lint_group_list(\"all\", all_group_lints)\n-        }),\n-    ] {\n-        process_file(&format!(\"clippy_lints/src/lib.{}.rs\", name), update_mode, &lines[..]);\n-    }\n+    process_file(\n+        \"clippy_lints/src/lib.register_lints.rs\",\n+        update_mode,\n+        &gen_register_lint_list(internal_lints.iter(), usable_lints.iter()),\n+    );\n+    process_file(\n+        \"clippy_lints/src/lib.deprecated.rs\",\n+        update_mode,\n+        &gen_deprecated(deprecated_lints.iter()),\n+    );\n+    process_file(\n+        \"clippy_lints/src/lib.mods.rs\",\n+        update_mode,\n+        &gen_modules_list(usable_lints.iter()),\n+    );\n+\n+    let all_group_lints = usable_lints.iter().filter(|l| {\n+        matches!(\n+            &*l.group,\n+            \"correctness\" | \"suspicious\" | \"style\" | \"complexity\" | \"perf\"\n+        )\n+    });\n+    let content = gen_lint_group_list(\"all\", all_group_lints);\n+    process_file(\"clippy_lints/src/lib.register_all.rs\", update_mode, &content);\n \n     for (lint_group, lints) in Lint::by_lint_group(usable_lints.into_iter().chain(internal_lints)) {\n+        let content = gen_lint_group_list(&lint_group, lints.iter());\n         process_file(\n             &format!(\"clippy_lints/src/lib.register_{}.rs\", lint_group),\n             update_mode,\n-            &gen_lint_group_list(&lints.get(0).expect(\"group non-empty\").group, lints.iter())[..],\n+            &content,\n         );\n     }\n }\n@@ -122,21 +127,15 @@ fn round_to_fifty(count: usize) -> usize {\n     count / 50 * 50\n }\n \n-fn process_file(path: impl AsRef<Path>, update_mode: UpdateMode, new_lines: &[String]) {\n-    let mut new_content = \"// This file was generated by `cargo dev update_lints`.\\n\\\n-                       // Use that command to update this file and do not edit by hand.\\n\\\n-                       // Manual edits will be overwritten.\\n\\n\"\n-        .to_string();\n-    new_content.push_str(&new_lines.join(\"\\n\"));\n-\n+fn process_file(path: impl AsRef<Path>, update_mode: UpdateMode, content: &str) {\n     if update_mode == UpdateMode::Check {\n         let old_content =\n             fs::read_to_string(&path).unwrap_or_else(|e| panic!(\"Cannot read from {}: {}\", path.as_ref().display(), e));\n-        if new_content != old_content {\n+        if content != old_content {\n             exit_with_failure();\n         }\n     } else {\n-        fs::write(&path, new_content.as_bytes())\n+        fs::write(&path, content.as_bytes())\n             .unwrap_or_else(|e| panic!(\"Cannot write to {}: {}\", path.as_ref().display(), e));\n     }\n }"}, {"sha": "80bde1b11384bcdac112af06f27f88b63526dadb", "filename": "clippy_lints/src/lib.deprecated.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.deprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.deprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.deprecated.rs?ref=e6747df5cd4232d26747a556c263d0a5d9c72414", "patch": "@@ -67,4 +67,4 @@\n         \"clippy::wrong_pub_self_convention\",\n         \"set the `avoid-breaking-exported-api` config option to `false` to enable the `wrong_self_convention` lint for public items\",\n     );\n-}\n\\ No newline at end of file\n+}"}, {"sha": "2718604f9051dbb8fbdbf24274d772eb78cc628e", "filename": "clippy_lints/src/lib.mods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.mods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.mods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.mods.rs?ref=e6747df5cd4232d26747a556c263d0a5d9c72414", "patch": "@@ -229,4 +229,4 @@ mod wildcard_dependencies;\n mod wildcard_imports;\n mod write;\n mod zero_div_zero;\n-mod zero_sized_map_values;\n\\ No newline at end of file\n+mod zero_sized_map_values;"}, {"sha": "3e6e0244754fbc36de70b56eaba31e16ea363cc8", "filename": "clippy_lints/src/lib.register_all.rs", "status": "modified", "additions": 299, "deletions": 299, "changes": 598, "blob_url": "https://github.com/rust-lang/rust/blob/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_all.rs?ref=e6747df5cd4232d26747a556c263d0a5d9c72414", "patch": "@@ -3,302 +3,302 @@\n // Manual edits will be overwritten.\n \n store.register_group(true, \"clippy::all\", Some(\"clippy_all\"), vec![\n-LintId::of(absurd_extreme_comparisons::ABSURD_EXTREME_COMPARISONS),\n-LintId::of(approx_const::APPROX_CONSTANT),\n-LintId::of(assertions_on_constants::ASSERTIONS_ON_CONSTANTS),\n-LintId::of(assign_ops::ASSIGN_OP_PATTERN),\n-LintId::of(assign_ops::MISREFACTORED_ASSIGN_OP),\n-LintId::of(async_yields_async::ASYNC_YIELDS_ASYNC),\n-LintId::of(attrs::BLANKET_CLIPPY_RESTRICTION_LINTS),\n-LintId::of(attrs::DEPRECATED_CFG_ATTR),\n-LintId::of(attrs::DEPRECATED_SEMVER),\n-LintId::of(attrs::MISMATCHED_TARGET_OS),\n-LintId::of(attrs::USELESS_ATTRIBUTE),\n-LintId::of(bit_mask::BAD_BIT_MASK),\n-LintId::of(bit_mask::INEFFECTIVE_BIT_MASK),\n-LintId::of(blacklisted_name::BLACKLISTED_NAME),\n-LintId::of(blocks_in_if_conditions::BLOCKS_IN_IF_CONDITIONS),\n-LintId::of(bool_assert_comparison::BOOL_ASSERT_COMPARISON),\n-LintId::of(booleans::LOGIC_BUG),\n-LintId::of(booleans::NONMINIMAL_BOOL),\n-LintId::of(casts::CAST_REF_TO_MUT),\n-LintId::of(casts::CHAR_LIT_AS_U8),\n-LintId::of(casts::FN_TO_NUMERIC_CAST),\n-LintId::of(casts::FN_TO_NUMERIC_CAST_WITH_TRUNCATION),\n-LintId::of(casts::UNNECESSARY_CAST),\n-LintId::of(collapsible_if::COLLAPSIBLE_ELSE_IF),\n-LintId::of(collapsible_if::COLLAPSIBLE_IF),\n-LintId::of(collapsible_match::COLLAPSIBLE_MATCH),\n-LintId::of(comparison_chain::COMPARISON_CHAIN),\n-LintId::of(copies::IFS_SAME_COND),\n-LintId::of(copies::IF_SAME_THEN_ELSE),\n-LintId::of(default::FIELD_REASSIGN_WITH_DEFAULT),\n-LintId::of(derivable_impls::DERIVABLE_IMPLS),\n-LintId::of(derive::DERIVE_HASH_XOR_EQ),\n-LintId::of(derive::DERIVE_ORD_XOR_PARTIAL_ORD),\n-LintId::of(doc::MISSING_SAFETY_DOC),\n-LintId::of(doc::NEEDLESS_DOCTEST_MAIN),\n-LintId::of(double_comparison::DOUBLE_COMPARISONS),\n-LintId::of(double_parens::DOUBLE_PARENS),\n-LintId::of(drop_forget_ref::DROP_COPY),\n-LintId::of(drop_forget_ref::DROP_REF),\n-LintId::of(drop_forget_ref::FORGET_COPY),\n-LintId::of(drop_forget_ref::FORGET_REF),\n-LintId::of(duration_subsec::DURATION_SUBSEC),\n-LintId::of(entry::MAP_ENTRY),\n-LintId::of(enum_clike::ENUM_CLIKE_UNPORTABLE_VARIANT),\n-LintId::of(enum_variants::ENUM_VARIANT_NAMES),\n-LintId::of(enum_variants::MODULE_INCEPTION),\n-LintId::of(eq_op::EQ_OP),\n-LintId::of(eq_op::OP_REF),\n-LintId::of(erasing_op::ERASING_OP),\n-LintId::of(escape::BOXED_LOCAL),\n-LintId::of(eta_reduction::REDUNDANT_CLOSURE),\n-LintId::of(eval_order_dependence::DIVERGING_SUB_EXPRESSION),\n-LintId::of(eval_order_dependence::EVAL_ORDER_DEPENDENCE),\n-LintId::of(explicit_write::EXPLICIT_WRITE),\n-LintId::of(float_equality_without_abs::FLOAT_EQUALITY_WITHOUT_ABS),\n-LintId::of(float_literal::EXCESSIVE_PRECISION),\n-LintId::of(format::USELESS_FORMAT),\n-LintId::of(formatting::POSSIBLE_MISSING_COMMA),\n-LintId::of(formatting::SUSPICIOUS_ASSIGNMENT_FORMATTING),\n-LintId::of(formatting::SUSPICIOUS_ELSE_FORMATTING),\n-LintId::of(formatting::SUSPICIOUS_UNARY_OP_FORMATTING),\n-LintId::of(from_over_into::FROM_OVER_INTO),\n-LintId::of(from_str_radix_10::FROM_STR_RADIX_10),\n-LintId::of(functions::DOUBLE_MUST_USE),\n-LintId::of(functions::MUST_USE_UNIT),\n-LintId::of(functions::NOT_UNSAFE_PTR_ARG_DEREF),\n-LintId::of(functions::RESULT_UNIT_ERR),\n-LintId::of(functions::TOO_MANY_ARGUMENTS),\n-LintId::of(get_last_with_len::GET_LAST_WITH_LEN),\n-LintId::of(identity_op::IDENTITY_OP),\n-LintId::of(if_let_mutex::IF_LET_MUTEX),\n-LintId::of(if_then_panic::IF_THEN_PANIC),\n-LintId::of(indexing_slicing::OUT_OF_BOUNDS_INDEXING),\n-LintId::of(infinite_iter::INFINITE_ITER),\n-LintId::of(inherent_to_string::INHERENT_TO_STRING),\n-LintId::of(inherent_to_string::INHERENT_TO_STRING_SHADOW_DISPLAY),\n-LintId::of(inline_fn_without_body::INLINE_FN_WITHOUT_BODY),\n-LintId::of(int_plus_one::INT_PLUS_ONE),\n-LintId::of(large_const_arrays::LARGE_CONST_ARRAYS),\n-LintId::of(large_enum_variant::LARGE_ENUM_VARIANT),\n-LintId::of(len_zero::COMPARISON_TO_EMPTY),\n-LintId::of(len_zero::LEN_WITHOUT_IS_EMPTY),\n-LintId::of(len_zero::LEN_ZERO),\n-LintId::of(let_underscore::LET_UNDERSCORE_LOCK),\n-LintId::of(lifetimes::EXTRA_UNUSED_LIFETIMES),\n-LintId::of(lifetimes::NEEDLESS_LIFETIMES),\n-LintId::of(literal_representation::INCONSISTENT_DIGIT_GROUPING),\n-LintId::of(literal_representation::MISTYPED_LITERAL_SUFFIXES),\n-LintId::of(literal_representation::UNUSUAL_BYTE_GROUPINGS),\n-LintId::of(loops::EMPTY_LOOP),\n-LintId::of(loops::EXPLICIT_COUNTER_LOOP),\n-LintId::of(loops::FOR_KV_MAP),\n-LintId::of(loops::FOR_LOOPS_OVER_FALLIBLES),\n-LintId::of(loops::ITER_NEXT_LOOP),\n-LintId::of(loops::MANUAL_FLATTEN),\n-LintId::of(loops::MANUAL_MEMCPY),\n-LintId::of(loops::MUT_RANGE_BOUND),\n-LintId::of(loops::NEEDLESS_COLLECT),\n-LintId::of(loops::NEEDLESS_RANGE_LOOP),\n-LintId::of(loops::NEVER_LOOP),\n-LintId::of(loops::SAME_ITEM_PUSH),\n-LintId::of(loops::SINGLE_ELEMENT_LOOP),\n-LintId::of(loops::WHILE_IMMUTABLE_CONDITION),\n-LintId::of(loops::WHILE_LET_LOOP),\n-LintId::of(loops::WHILE_LET_ON_ITERATOR),\n-LintId::of(main_recursion::MAIN_RECURSION),\n-LintId::of(manual_async_fn::MANUAL_ASYNC_FN),\n-LintId::of(manual_map::MANUAL_MAP),\n-LintId::of(manual_non_exhaustive::MANUAL_NON_EXHAUSTIVE),\n-LintId::of(manual_strip::MANUAL_STRIP),\n-LintId::of(manual_unwrap_or::MANUAL_UNWRAP_OR),\n-LintId::of(map_clone::MAP_CLONE),\n-LintId::of(map_unit_fn::OPTION_MAP_UNIT_FN),\n-LintId::of(map_unit_fn::RESULT_MAP_UNIT_FN),\n-LintId::of(match_result_ok::MATCH_RESULT_OK),\n-LintId::of(matches::INFALLIBLE_DESTRUCTURING_MATCH),\n-LintId::of(matches::MATCH_AS_REF),\n-LintId::of(matches::MATCH_LIKE_MATCHES_MACRO),\n-LintId::of(matches::MATCH_OVERLAPPING_ARM),\n-LintId::of(matches::MATCH_REF_PATS),\n-LintId::of(matches::MATCH_SINGLE_BINDING),\n-LintId::of(matches::REDUNDANT_PATTERN_MATCHING),\n-LintId::of(matches::SINGLE_MATCH),\n-LintId::of(matches::WILDCARD_IN_OR_PATTERNS),\n-LintId::of(mem_discriminant::MEM_DISCRIMINANT_NON_ENUM),\n-LintId::of(mem_replace::MEM_REPLACE_OPTION_WITH_NONE),\n-LintId::of(mem_replace::MEM_REPLACE_WITH_DEFAULT),\n-LintId::of(mem_replace::MEM_REPLACE_WITH_UNINIT),\n-LintId::of(methods::BIND_INSTEAD_OF_MAP),\n-LintId::of(methods::BYTES_NTH),\n-LintId::of(methods::CHARS_LAST_CMP),\n-LintId::of(methods::CHARS_NEXT_CMP),\n-LintId::of(methods::CLONE_DOUBLE_REF),\n-LintId::of(methods::CLONE_ON_COPY),\n-LintId::of(methods::EXPECT_FUN_CALL),\n-LintId::of(methods::EXTEND_WITH_DRAIN),\n-LintId::of(methods::FILTER_MAP_IDENTITY),\n-LintId::of(methods::FILTER_NEXT),\n-LintId::of(methods::FLAT_MAP_IDENTITY),\n-LintId::of(methods::INSPECT_FOR_EACH),\n-LintId::of(methods::INTO_ITER_ON_REF),\n-LintId::of(methods::ITERATOR_STEP_BY_ZERO),\n-LintId::of(methods::ITER_CLONED_COLLECT),\n-LintId::of(methods::ITER_COUNT),\n-LintId::of(methods::ITER_NEXT_SLICE),\n-LintId::of(methods::ITER_NTH),\n-LintId::of(methods::ITER_NTH_ZERO),\n-LintId::of(methods::ITER_SKIP_NEXT),\n-LintId::of(methods::MANUAL_FILTER_MAP),\n-LintId::of(methods::MANUAL_FIND_MAP),\n-LintId::of(methods::MANUAL_SATURATING_ARITHMETIC),\n-LintId::of(methods::MANUAL_SPLIT_ONCE),\n-LintId::of(methods::MANUAL_STR_REPEAT),\n-LintId::of(methods::MAP_COLLECT_RESULT_UNIT),\n-LintId::of(methods::MAP_IDENTITY),\n-LintId::of(methods::NEW_RET_NO_SELF),\n-LintId::of(methods::OK_EXPECT),\n-LintId::of(methods::OPTION_AS_REF_DEREF),\n-LintId::of(methods::OPTION_FILTER_MAP),\n-LintId::of(methods::OPTION_MAP_OR_NONE),\n-LintId::of(methods::OR_FUN_CALL),\n-LintId::of(methods::RESULT_MAP_OR_INTO_OPTION),\n-LintId::of(methods::SEARCH_IS_SOME),\n-LintId::of(methods::SHOULD_IMPLEMENT_TRAIT),\n-LintId::of(methods::SINGLE_CHAR_ADD_STR),\n-LintId::of(methods::SINGLE_CHAR_PATTERN),\n-LintId::of(methods::SKIP_WHILE_NEXT),\n-LintId::of(methods::STRING_EXTEND_CHARS),\n-LintId::of(methods::SUSPICIOUS_MAP),\n-LintId::of(methods::SUSPICIOUS_SPLITN),\n-LintId::of(methods::UNINIT_ASSUMED_INIT),\n-LintId::of(methods::UNNECESSARY_FILTER_MAP),\n-LintId::of(methods::UNNECESSARY_FOLD),\n-LintId::of(methods::UNNECESSARY_LAZY_EVALUATIONS),\n-LintId::of(methods::UNWRAP_OR_ELSE_DEFAULT),\n-LintId::of(methods::USELESS_ASREF),\n-LintId::of(methods::WRONG_SELF_CONVENTION),\n-LintId::of(methods::ZST_OFFSET),\n-LintId::of(minmax::MIN_MAX),\n-LintId::of(misc::CMP_NAN),\n-LintId::of(misc::CMP_OWNED),\n-LintId::of(misc::MODULO_ONE),\n-LintId::of(misc::SHORT_CIRCUIT_STATEMENT),\n-LintId::of(misc::TOPLEVEL_REF_ARG),\n-LintId::of(misc::ZERO_PTR),\n-LintId::of(misc_early::BUILTIN_TYPE_SHADOW),\n-LintId::of(misc_early::DOUBLE_NEG),\n-LintId::of(misc_early::DUPLICATE_UNDERSCORE_ARGUMENT),\n-LintId::of(misc_early::MIXED_CASE_HEX_LITERALS),\n-LintId::of(misc_early::REDUNDANT_PATTERN),\n-LintId::of(misc_early::UNNEEDED_WILDCARD_PATTERN),\n-LintId::of(misc_early::ZERO_PREFIXED_LITERAL),\n-LintId::of(mut_key::MUTABLE_KEY_TYPE),\n-LintId::of(mut_mutex_lock::MUT_MUTEX_LOCK),\n-LintId::of(mut_reference::UNNECESSARY_MUT_PASSED),\n-LintId::of(mutex_atomic::MUTEX_ATOMIC),\n-LintId::of(needless_arbitrary_self_type::NEEDLESS_ARBITRARY_SELF_TYPE),\n-LintId::of(needless_bool::BOOL_COMPARISON),\n-LintId::of(needless_bool::NEEDLESS_BOOL),\n-LintId::of(needless_borrow::NEEDLESS_BORROW),\n-LintId::of(needless_borrowed_ref::NEEDLESS_BORROWED_REFERENCE),\n-LintId::of(needless_option_as_deref::NEEDLESS_OPTION_AS_DEREF),\n-LintId::of(needless_question_mark::NEEDLESS_QUESTION_MARK),\n-LintId::of(needless_update::NEEDLESS_UPDATE),\n-LintId::of(neg_cmp_op_on_partial_ord::NEG_CMP_OP_ON_PARTIAL_ORD),\n-LintId::of(neg_multiply::NEG_MULTIPLY),\n-LintId::of(new_without_default::NEW_WITHOUT_DEFAULT),\n-LintId::of(no_effect::NO_EFFECT),\n-LintId::of(no_effect::UNNECESSARY_OPERATION),\n-LintId::of(non_copy_const::BORROW_INTERIOR_MUTABLE_CONST),\n-LintId::of(non_copy_const::DECLARE_INTERIOR_MUTABLE_CONST),\n-LintId::of(non_expressive_names::JUST_UNDERSCORES_AND_DIGITS),\n-LintId::of(non_octal_unix_permissions::NON_OCTAL_UNIX_PERMISSIONS),\n-LintId::of(open_options::NONSENSICAL_OPEN_OPTIONS),\n-LintId::of(option_env_unwrap::OPTION_ENV_UNWRAP),\n-LintId::of(overflow_check_conditional::OVERFLOW_CHECK_CONDITIONAL),\n-LintId::of(partialeq_ne_impl::PARTIALEQ_NE_IMPL),\n-LintId::of(precedence::PRECEDENCE),\n-LintId::of(ptr::CMP_NULL),\n-LintId::of(ptr::INVALID_NULL_PTR_USAGE),\n-LintId::of(ptr::MUT_FROM_REF),\n-LintId::of(ptr::PTR_ARG),\n-LintId::of(ptr_eq::PTR_EQ),\n-LintId::of(ptr_offset_with_cast::PTR_OFFSET_WITH_CAST),\n-LintId::of(question_mark::QUESTION_MARK),\n-LintId::of(ranges::MANUAL_RANGE_CONTAINS),\n-LintId::of(ranges::RANGE_ZIP_WITH_LEN),\n-LintId::of(ranges::REVERSED_EMPTY_RANGES),\n-LintId::of(redundant_clone::REDUNDANT_CLONE),\n-LintId::of(redundant_closure_call::REDUNDANT_CLOSURE_CALL),\n-LintId::of(redundant_field_names::REDUNDANT_FIELD_NAMES),\n-LintId::of(redundant_slicing::REDUNDANT_SLICING),\n-LintId::of(redundant_static_lifetimes::REDUNDANT_STATIC_LIFETIMES),\n-LintId::of(reference::DEREF_ADDROF),\n-LintId::of(reference::REF_IN_DEREF),\n-LintId::of(regex::INVALID_REGEX),\n-LintId::of(repeat_once::REPEAT_ONCE),\n-LintId::of(returns::LET_AND_RETURN),\n-LintId::of(returns::NEEDLESS_RETURN),\n-LintId::of(self_assignment::SELF_ASSIGNMENT),\n-LintId::of(self_named_constructors::SELF_NAMED_CONSTRUCTORS),\n-LintId::of(serde_api::SERDE_API_MISUSE),\n-LintId::of(single_component_path_imports::SINGLE_COMPONENT_PATH_IMPORTS),\n-LintId::of(size_of_in_element_count::SIZE_OF_IN_ELEMENT_COUNT),\n-LintId::of(slow_vector_initialization::SLOW_VECTOR_INITIALIZATION),\n-LintId::of(stable_sort_primitive::STABLE_SORT_PRIMITIVE),\n-LintId::of(strings::STRING_FROM_UTF8_AS_BYTES),\n-LintId::of(strlen_on_c_strings::STRLEN_ON_C_STRINGS),\n-LintId::of(suspicious_trait_impl::SUSPICIOUS_ARITHMETIC_IMPL),\n-LintId::of(suspicious_trait_impl::SUSPICIOUS_OP_ASSIGN_IMPL),\n-LintId::of(swap::ALMOST_SWAPPED),\n-LintId::of(swap::MANUAL_SWAP),\n-LintId::of(tabs_in_doc_comments::TABS_IN_DOC_COMMENTS),\n-LintId::of(temporary_assignment::TEMPORARY_ASSIGNMENT),\n-LintId::of(to_digit_is_some::TO_DIGIT_IS_SOME),\n-LintId::of(to_string_in_display::TO_STRING_IN_DISPLAY),\n-LintId::of(transmute::CROSSPOINTER_TRANSMUTE),\n-LintId::of(transmute::TRANSMUTES_EXPRESSIBLE_AS_PTR_CASTS),\n-LintId::of(transmute::TRANSMUTE_BYTES_TO_STR),\n-LintId::of(transmute::TRANSMUTE_FLOAT_TO_INT),\n-LintId::of(transmute::TRANSMUTE_INT_TO_BOOL),\n-LintId::of(transmute::TRANSMUTE_INT_TO_CHAR),\n-LintId::of(transmute::TRANSMUTE_INT_TO_FLOAT),\n-LintId::of(transmute::TRANSMUTE_PTR_TO_REF),\n-LintId::of(transmute::UNSOUND_COLLECTION_TRANSMUTE),\n-LintId::of(transmute::WRONG_TRANSMUTE),\n-LintId::of(transmuting_null::TRANSMUTING_NULL),\n-LintId::of(try_err::TRY_ERR),\n-LintId::of(types::BORROWED_BOX),\n-LintId::of(types::BOX_COLLECTION),\n-LintId::of(types::REDUNDANT_ALLOCATION),\n-LintId::of(types::TYPE_COMPLEXITY),\n-LintId::of(types::VEC_BOX),\n-LintId::of(undropped_manually_drops::UNDROPPED_MANUALLY_DROPS),\n-LintId::of(unicode::INVISIBLE_CHARACTERS),\n-LintId::of(unit_return_expecting_ord::UNIT_RETURN_EXPECTING_ORD),\n-LintId::of(unit_types::UNIT_ARG),\n-LintId::of(unit_types::UNIT_CMP),\n-LintId::of(unnamed_address::FN_ADDRESS_COMPARISONS),\n-LintId::of(unnamed_address::VTABLE_ADDRESS_COMPARISONS),\n-LintId::of(unnecessary_sort_by::UNNECESSARY_SORT_BY),\n-LintId::of(unsafe_removed_from_name::UNSAFE_REMOVED_FROM_NAME),\n-LintId::of(unused_io_amount::UNUSED_IO_AMOUNT),\n-LintId::of(unused_unit::UNUSED_UNIT),\n-LintId::of(unwrap::PANICKING_UNWRAP),\n-LintId::of(unwrap::UNNECESSARY_UNWRAP),\n-LintId::of(upper_case_acronyms::UPPER_CASE_ACRONYMS),\n-LintId::of(useless_conversion::USELESS_CONVERSION),\n-LintId::of(vec::USELESS_VEC),\n-LintId::of(vec_init_then_push::VEC_INIT_THEN_PUSH),\n-LintId::of(vec_resize_to_zero::VEC_RESIZE_TO_ZERO),\n-LintId::of(write::PRINTLN_EMPTY_STRING),\n-LintId::of(write::PRINT_LITERAL),\n-LintId::of(write::PRINT_WITH_NEWLINE),\n-LintId::of(write::WRITELN_EMPTY_STRING),\n-LintId::of(write::WRITE_LITERAL),\n-LintId::of(write::WRITE_WITH_NEWLINE),\n-LintId::of(zero_div_zero::ZERO_DIVIDED_BY_ZERO),\n-])\n\\ No newline at end of file\n+    LintId::of(absurd_extreme_comparisons::ABSURD_EXTREME_COMPARISONS),\n+    LintId::of(approx_const::APPROX_CONSTANT),\n+    LintId::of(assertions_on_constants::ASSERTIONS_ON_CONSTANTS),\n+    LintId::of(assign_ops::ASSIGN_OP_PATTERN),\n+    LintId::of(assign_ops::MISREFACTORED_ASSIGN_OP),\n+    LintId::of(async_yields_async::ASYNC_YIELDS_ASYNC),\n+    LintId::of(attrs::BLANKET_CLIPPY_RESTRICTION_LINTS),\n+    LintId::of(attrs::DEPRECATED_CFG_ATTR),\n+    LintId::of(attrs::DEPRECATED_SEMVER),\n+    LintId::of(attrs::MISMATCHED_TARGET_OS),\n+    LintId::of(attrs::USELESS_ATTRIBUTE),\n+    LintId::of(bit_mask::BAD_BIT_MASK),\n+    LintId::of(bit_mask::INEFFECTIVE_BIT_MASK),\n+    LintId::of(blacklisted_name::BLACKLISTED_NAME),\n+    LintId::of(blocks_in_if_conditions::BLOCKS_IN_IF_CONDITIONS),\n+    LintId::of(bool_assert_comparison::BOOL_ASSERT_COMPARISON),\n+    LintId::of(booleans::LOGIC_BUG),\n+    LintId::of(booleans::NONMINIMAL_BOOL),\n+    LintId::of(casts::CAST_REF_TO_MUT),\n+    LintId::of(casts::CHAR_LIT_AS_U8),\n+    LintId::of(casts::FN_TO_NUMERIC_CAST),\n+    LintId::of(casts::FN_TO_NUMERIC_CAST_WITH_TRUNCATION),\n+    LintId::of(casts::UNNECESSARY_CAST),\n+    LintId::of(collapsible_if::COLLAPSIBLE_ELSE_IF),\n+    LintId::of(collapsible_if::COLLAPSIBLE_IF),\n+    LintId::of(collapsible_match::COLLAPSIBLE_MATCH),\n+    LintId::of(comparison_chain::COMPARISON_CHAIN),\n+    LintId::of(copies::IFS_SAME_COND),\n+    LintId::of(copies::IF_SAME_THEN_ELSE),\n+    LintId::of(default::FIELD_REASSIGN_WITH_DEFAULT),\n+    LintId::of(derivable_impls::DERIVABLE_IMPLS),\n+    LintId::of(derive::DERIVE_HASH_XOR_EQ),\n+    LintId::of(derive::DERIVE_ORD_XOR_PARTIAL_ORD),\n+    LintId::of(doc::MISSING_SAFETY_DOC),\n+    LintId::of(doc::NEEDLESS_DOCTEST_MAIN),\n+    LintId::of(double_comparison::DOUBLE_COMPARISONS),\n+    LintId::of(double_parens::DOUBLE_PARENS),\n+    LintId::of(drop_forget_ref::DROP_COPY),\n+    LintId::of(drop_forget_ref::DROP_REF),\n+    LintId::of(drop_forget_ref::FORGET_COPY),\n+    LintId::of(drop_forget_ref::FORGET_REF),\n+    LintId::of(duration_subsec::DURATION_SUBSEC),\n+    LintId::of(entry::MAP_ENTRY),\n+    LintId::of(enum_clike::ENUM_CLIKE_UNPORTABLE_VARIANT),\n+    LintId::of(enum_variants::ENUM_VARIANT_NAMES),\n+    LintId::of(enum_variants::MODULE_INCEPTION),\n+    LintId::of(eq_op::EQ_OP),\n+    LintId::of(eq_op::OP_REF),\n+    LintId::of(erasing_op::ERASING_OP),\n+    LintId::of(escape::BOXED_LOCAL),\n+    LintId::of(eta_reduction::REDUNDANT_CLOSURE),\n+    LintId::of(eval_order_dependence::DIVERGING_SUB_EXPRESSION),\n+    LintId::of(eval_order_dependence::EVAL_ORDER_DEPENDENCE),\n+    LintId::of(explicit_write::EXPLICIT_WRITE),\n+    LintId::of(float_equality_without_abs::FLOAT_EQUALITY_WITHOUT_ABS),\n+    LintId::of(float_literal::EXCESSIVE_PRECISION),\n+    LintId::of(format::USELESS_FORMAT),\n+    LintId::of(formatting::POSSIBLE_MISSING_COMMA),\n+    LintId::of(formatting::SUSPICIOUS_ASSIGNMENT_FORMATTING),\n+    LintId::of(formatting::SUSPICIOUS_ELSE_FORMATTING),\n+    LintId::of(formatting::SUSPICIOUS_UNARY_OP_FORMATTING),\n+    LintId::of(from_over_into::FROM_OVER_INTO),\n+    LintId::of(from_str_radix_10::FROM_STR_RADIX_10),\n+    LintId::of(functions::DOUBLE_MUST_USE),\n+    LintId::of(functions::MUST_USE_UNIT),\n+    LintId::of(functions::NOT_UNSAFE_PTR_ARG_DEREF),\n+    LintId::of(functions::RESULT_UNIT_ERR),\n+    LintId::of(functions::TOO_MANY_ARGUMENTS),\n+    LintId::of(get_last_with_len::GET_LAST_WITH_LEN),\n+    LintId::of(identity_op::IDENTITY_OP),\n+    LintId::of(if_let_mutex::IF_LET_MUTEX),\n+    LintId::of(if_then_panic::IF_THEN_PANIC),\n+    LintId::of(indexing_slicing::OUT_OF_BOUNDS_INDEXING),\n+    LintId::of(infinite_iter::INFINITE_ITER),\n+    LintId::of(inherent_to_string::INHERENT_TO_STRING),\n+    LintId::of(inherent_to_string::INHERENT_TO_STRING_SHADOW_DISPLAY),\n+    LintId::of(inline_fn_without_body::INLINE_FN_WITHOUT_BODY),\n+    LintId::of(int_plus_one::INT_PLUS_ONE),\n+    LintId::of(large_const_arrays::LARGE_CONST_ARRAYS),\n+    LintId::of(large_enum_variant::LARGE_ENUM_VARIANT),\n+    LintId::of(len_zero::COMPARISON_TO_EMPTY),\n+    LintId::of(len_zero::LEN_WITHOUT_IS_EMPTY),\n+    LintId::of(len_zero::LEN_ZERO),\n+    LintId::of(let_underscore::LET_UNDERSCORE_LOCK),\n+    LintId::of(lifetimes::EXTRA_UNUSED_LIFETIMES),\n+    LintId::of(lifetimes::NEEDLESS_LIFETIMES),\n+    LintId::of(literal_representation::INCONSISTENT_DIGIT_GROUPING),\n+    LintId::of(literal_representation::MISTYPED_LITERAL_SUFFIXES),\n+    LintId::of(literal_representation::UNUSUAL_BYTE_GROUPINGS),\n+    LintId::of(loops::EMPTY_LOOP),\n+    LintId::of(loops::EXPLICIT_COUNTER_LOOP),\n+    LintId::of(loops::FOR_KV_MAP),\n+    LintId::of(loops::FOR_LOOPS_OVER_FALLIBLES),\n+    LintId::of(loops::ITER_NEXT_LOOP),\n+    LintId::of(loops::MANUAL_FLATTEN),\n+    LintId::of(loops::MANUAL_MEMCPY),\n+    LintId::of(loops::MUT_RANGE_BOUND),\n+    LintId::of(loops::NEEDLESS_COLLECT),\n+    LintId::of(loops::NEEDLESS_RANGE_LOOP),\n+    LintId::of(loops::NEVER_LOOP),\n+    LintId::of(loops::SAME_ITEM_PUSH),\n+    LintId::of(loops::SINGLE_ELEMENT_LOOP),\n+    LintId::of(loops::WHILE_IMMUTABLE_CONDITION),\n+    LintId::of(loops::WHILE_LET_LOOP),\n+    LintId::of(loops::WHILE_LET_ON_ITERATOR),\n+    LintId::of(main_recursion::MAIN_RECURSION),\n+    LintId::of(manual_async_fn::MANUAL_ASYNC_FN),\n+    LintId::of(manual_map::MANUAL_MAP),\n+    LintId::of(manual_non_exhaustive::MANUAL_NON_EXHAUSTIVE),\n+    LintId::of(manual_strip::MANUAL_STRIP),\n+    LintId::of(manual_unwrap_or::MANUAL_UNWRAP_OR),\n+    LintId::of(map_clone::MAP_CLONE),\n+    LintId::of(map_unit_fn::OPTION_MAP_UNIT_FN),\n+    LintId::of(map_unit_fn::RESULT_MAP_UNIT_FN),\n+    LintId::of(match_result_ok::MATCH_RESULT_OK),\n+    LintId::of(matches::INFALLIBLE_DESTRUCTURING_MATCH),\n+    LintId::of(matches::MATCH_AS_REF),\n+    LintId::of(matches::MATCH_LIKE_MATCHES_MACRO),\n+    LintId::of(matches::MATCH_OVERLAPPING_ARM),\n+    LintId::of(matches::MATCH_REF_PATS),\n+    LintId::of(matches::MATCH_SINGLE_BINDING),\n+    LintId::of(matches::REDUNDANT_PATTERN_MATCHING),\n+    LintId::of(matches::SINGLE_MATCH),\n+    LintId::of(matches::WILDCARD_IN_OR_PATTERNS),\n+    LintId::of(mem_discriminant::MEM_DISCRIMINANT_NON_ENUM),\n+    LintId::of(mem_replace::MEM_REPLACE_OPTION_WITH_NONE),\n+    LintId::of(mem_replace::MEM_REPLACE_WITH_DEFAULT),\n+    LintId::of(mem_replace::MEM_REPLACE_WITH_UNINIT),\n+    LintId::of(methods::BIND_INSTEAD_OF_MAP),\n+    LintId::of(methods::BYTES_NTH),\n+    LintId::of(methods::CHARS_LAST_CMP),\n+    LintId::of(methods::CHARS_NEXT_CMP),\n+    LintId::of(methods::CLONE_DOUBLE_REF),\n+    LintId::of(methods::CLONE_ON_COPY),\n+    LintId::of(methods::EXPECT_FUN_CALL),\n+    LintId::of(methods::EXTEND_WITH_DRAIN),\n+    LintId::of(methods::FILTER_MAP_IDENTITY),\n+    LintId::of(methods::FILTER_NEXT),\n+    LintId::of(methods::FLAT_MAP_IDENTITY),\n+    LintId::of(methods::INSPECT_FOR_EACH),\n+    LintId::of(methods::INTO_ITER_ON_REF),\n+    LintId::of(methods::ITERATOR_STEP_BY_ZERO),\n+    LintId::of(methods::ITER_CLONED_COLLECT),\n+    LintId::of(methods::ITER_COUNT),\n+    LintId::of(methods::ITER_NEXT_SLICE),\n+    LintId::of(methods::ITER_NTH),\n+    LintId::of(methods::ITER_NTH_ZERO),\n+    LintId::of(methods::ITER_SKIP_NEXT),\n+    LintId::of(methods::MANUAL_FILTER_MAP),\n+    LintId::of(methods::MANUAL_FIND_MAP),\n+    LintId::of(methods::MANUAL_SATURATING_ARITHMETIC),\n+    LintId::of(methods::MANUAL_SPLIT_ONCE),\n+    LintId::of(methods::MANUAL_STR_REPEAT),\n+    LintId::of(methods::MAP_COLLECT_RESULT_UNIT),\n+    LintId::of(methods::MAP_IDENTITY),\n+    LintId::of(methods::NEW_RET_NO_SELF),\n+    LintId::of(methods::OK_EXPECT),\n+    LintId::of(methods::OPTION_AS_REF_DEREF),\n+    LintId::of(methods::OPTION_FILTER_MAP),\n+    LintId::of(methods::OPTION_MAP_OR_NONE),\n+    LintId::of(methods::OR_FUN_CALL),\n+    LintId::of(methods::RESULT_MAP_OR_INTO_OPTION),\n+    LintId::of(methods::SEARCH_IS_SOME),\n+    LintId::of(methods::SHOULD_IMPLEMENT_TRAIT),\n+    LintId::of(methods::SINGLE_CHAR_ADD_STR),\n+    LintId::of(methods::SINGLE_CHAR_PATTERN),\n+    LintId::of(methods::SKIP_WHILE_NEXT),\n+    LintId::of(methods::STRING_EXTEND_CHARS),\n+    LintId::of(methods::SUSPICIOUS_MAP),\n+    LintId::of(methods::SUSPICIOUS_SPLITN),\n+    LintId::of(methods::UNINIT_ASSUMED_INIT),\n+    LintId::of(methods::UNNECESSARY_FILTER_MAP),\n+    LintId::of(methods::UNNECESSARY_FOLD),\n+    LintId::of(methods::UNNECESSARY_LAZY_EVALUATIONS),\n+    LintId::of(methods::UNWRAP_OR_ELSE_DEFAULT),\n+    LintId::of(methods::USELESS_ASREF),\n+    LintId::of(methods::WRONG_SELF_CONVENTION),\n+    LintId::of(methods::ZST_OFFSET),\n+    LintId::of(minmax::MIN_MAX),\n+    LintId::of(misc::CMP_NAN),\n+    LintId::of(misc::CMP_OWNED),\n+    LintId::of(misc::MODULO_ONE),\n+    LintId::of(misc::SHORT_CIRCUIT_STATEMENT),\n+    LintId::of(misc::TOPLEVEL_REF_ARG),\n+    LintId::of(misc::ZERO_PTR),\n+    LintId::of(misc_early::BUILTIN_TYPE_SHADOW),\n+    LintId::of(misc_early::DOUBLE_NEG),\n+    LintId::of(misc_early::DUPLICATE_UNDERSCORE_ARGUMENT),\n+    LintId::of(misc_early::MIXED_CASE_HEX_LITERALS),\n+    LintId::of(misc_early::REDUNDANT_PATTERN),\n+    LintId::of(misc_early::UNNEEDED_WILDCARD_PATTERN),\n+    LintId::of(misc_early::ZERO_PREFIXED_LITERAL),\n+    LintId::of(mut_key::MUTABLE_KEY_TYPE),\n+    LintId::of(mut_mutex_lock::MUT_MUTEX_LOCK),\n+    LintId::of(mut_reference::UNNECESSARY_MUT_PASSED),\n+    LintId::of(mutex_atomic::MUTEX_ATOMIC),\n+    LintId::of(needless_arbitrary_self_type::NEEDLESS_ARBITRARY_SELF_TYPE),\n+    LintId::of(needless_bool::BOOL_COMPARISON),\n+    LintId::of(needless_bool::NEEDLESS_BOOL),\n+    LintId::of(needless_borrow::NEEDLESS_BORROW),\n+    LintId::of(needless_borrowed_ref::NEEDLESS_BORROWED_REFERENCE),\n+    LintId::of(needless_option_as_deref::NEEDLESS_OPTION_AS_DEREF),\n+    LintId::of(needless_question_mark::NEEDLESS_QUESTION_MARK),\n+    LintId::of(needless_update::NEEDLESS_UPDATE),\n+    LintId::of(neg_cmp_op_on_partial_ord::NEG_CMP_OP_ON_PARTIAL_ORD),\n+    LintId::of(neg_multiply::NEG_MULTIPLY),\n+    LintId::of(new_without_default::NEW_WITHOUT_DEFAULT),\n+    LintId::of(no_effect::NO_EFFECT),\n+    LintId::of(no_effect::UNNECESSARY_OPERATION),\n+    LintId::of(non_copy_const::BORROW_INTERIOR_MUTABLE_CONST),\n+    LintId::of(non_copy_const::DECLARE_INTERIOR_MUTABLE_CONST),\n+    LintId::of(non_expressive_names::JUST_UNDERSCORES_AND_DIGITS),\n+    LintId::of(non_octal_unix_permissions::NON_OCTAL_UNIX_PERMISSIONS),\n+    LintId::of(open_options::NONSENSICAL_OPEN_OPTIONS),\n+    LintId::of(option_env_unwrap::OPTION_ENV_UNWRAP),\n+    LintId::of(overflow_check_conditional::OVERFLOW_CHECK_CONDITIONAL),\n+    LintId::of(partialeq_ne_impl::PARTIALEQ_NE_IMPL),\n+    LintId::of(precedence::PRECEDENCE),\n+    LintId::of(ptr::CMP_NULL),\n+    LintId::of(ptr::INVALID_NULL_PTR_USAGE),\n+    LintId::of(ptr::MUT_FROM_REF),\n+    LintId::of(ptr::PTR_ARG),\n+    LintId::of(ptr_eq::PTR_EQ),\n+    LintId::of(ptr_offset_with_cast::PTR_OFFSET_WITH_CAST),\n+    LintId::of(question_mark::QUESTION_MARK),\n+    LintId::of(ranges::MANUAL_RANGE_CONTAINS),\n+    LintId::of(ranges::RANGE_ZIP_WITH_LEN),\n+    LintId::of(ranges::REVERSED_EMPTY_RANGES),\n+    LintId::of(redundant_clone::REDUNDANT_CLONE),\n+    LintId::of(redundant_closure_call::REDUNDANT_CLOSURE_CALL),\n+    LintId::of(redundant_field_names::REDUNDANT_FIELD_NAMES),\n+    LintId::of(redundant_slicing::REDUNDANT_SLICING),\n+    LintId::of(redundant_static_lifetimes::REDUNDANT_STATIC_LIFETIMES),\n+    LintId::of(reference::DEREF_ADDROF),\n+    LintId::of(reference::REF_IN_DEREF),\n+    LintId::of(regex::INVALID_REGEX),\n+    LintId::of(repeat_once::REPEAT_ONCE),\n+    LintId::of(returns::LET_AND_RETURN),\n+    LintId::of(returns::NEEDLESS_RETURN),\n+    LintId::of(self_assignment::SELF_ASSIGNMENT),\n+    LintId::of(self_named_constructors::SELF_NAMED_CONSTRUCTORS),\n+    LintId::of(serde_api::SERDE_API_MISUSE),\n+    LintId::of(single_component_path_imports::SINGLE_COMPONENT_PATH_IMPORTS),\n+    LintId::of(size_of_in_element_count::SIZE_OF_IN_ELEMENT_COUNT),\n+    LintId::of(slow_vector_initialization::SLOW_VECTOR_INITIALIZATION),\n+    LintId::of(stable_sort_primitive::STABLE_SORT_PRIMITIVE),\n+    LintId::of(strings::STRING_FROM_UTF8_AS_BYTES),\n+    LintId::of(strlen_on_c_strings::STRLEN_ON_C_STRINGS),\n+    LintId::of(suspicious_trait_impl::SUSPICIOUS_ARITHMETIC_IMPL),\n+    LintId::of(suspicious_trait_impl::SUSPICIOUS_OP_ASSIGN_IMPL),\n+    LintId::of(swap::ALMOST_SWAPPED),\n+    LintId::of(swap::MANUAL_SWAP),\n+    LintId::of(tabs_in_doc_comments::TABS_IN_DOC_COMMENTS),\n+    LintId::of(temporary_assignment::TEMPORARY_ASSIGNMENT),\n+    LintId::of(to_digit_is_some::TO_DIGIT_IS_SOME),\n+    LintId::of(to_string_in_display::TO_STRING_IN_DISPLAY),\n+    LintId::of(transmute::CROSSPOINTER_TRANSMUTE),\n+    LintId::of(transmute::TRANSMUTES_EXPRESSIBLE_AS_PTR_CASTS),\n+    LintId::of(transmute::TRANSMUTE_BYTES_TO_STR),\n+    LintId::of(transmute::TRANSMUTE_FLOAT_TO_INT),\n+    LintId::of(transmute::TRANSMUTE_INT_TO_BOOL),\n+    LintId::of(transmute::TRANSMUTE_INT_TO_CHAR),\n+    LintId::of(transmute::TRANSMUTE_INT_TO_FLOAT),\n+    LintId::of(transmute::TRANSMUTE_PTR_TO_REF),\n+    LintId::of(transmute::UNSOUND_COLLECTION_TRANSMUTE),\n+    LintId::of(transmute::WRONG_TRANSMUTE),\n+    LintId::of(transmuting_null::TRANSMUTING_NULL),\n+    LintId::of(try_err::TRY_ERR),\n+    LintId::of(types::BORROWED_BOX),\n+    LintId::of(types::BOX_COLLECTION),\n+    LintId::of(types::REDUNDANT_ALLOCATION),\n+    LintId::of(types::TYPE_COMPLEXITY),\n+    LintId::of(types::VEC_BOX),\n+    LintId::of(undropped_manually_drops::UNDROPPED_MANUALLY_DROPS),\n+    LintId::of(unicode::INVISIBLE_CHARACTERS),\n+    LintId::of(unit_return_expecting_ord::UNIT_RETURN_EXPECTING_ORD),\n+    LintId::of(unit_types::UNIT_ARG),\n+    LintId::of(unit_types::UNIT_CMP),\n+    LintId::of(unnamed_address::FN_ADDRESS_COMPARISONS),\n+    LintId::of(unnamed_address::VTABLE_ADDRESS_COMPARISONS),\n+    LintId::of(unnecessary_sort_by::UNNECESSARY_SORT_BY),\n+    LintId::of(unsafe_removed_from_name::UNSAFE_REMOVED_FROM_NAME),\n+    LintId::of(unused_io_amount::UNUSED_IO_AMOUNT),\n+    LintId::of(unused_unit::UNUSED_UNIT),\n+    LintId::of(unwrap::PANICKING_UNWRAP),\n+    LintId::of(unwrap::UNNECESSARY_UNWRAP),\n+    LintId::of(upper_case_acronyms::UPPER_CASE_ACRONYMS),\n+    LintId::of(useless_conversion::USELESS_CONVERSION),\n+    LintId::of(vec::USELESS_VEC),\n+    LintId::of(vec_init_then_push::VEC_INIT_THEN_PUSH),\n+    LintId::of(vec_resize_to_zero::VEC_RESIZE_TO_ZERO),\n+    LintId::of(write::PRINTLN_EMPTY_STRING),\n+    LintId::of(write::PRINT_LITERAL),\n+    LintId::of(write::PRINT_WITH_NEWLINE),\n+    LintId::of(write::WRITELN_EMPTY_STRING),\n+    LintId::of(write::WRITE_LITERAL),\n+    LintId::of(write::WRITE_WITH_NEWLINE),\n+    LintId::of(zero_div_zero::ZERO_DIVIDED_BY_ZERO),\n+])"}, {"sha": "1809f2cc7d46278cac14ff0488d59e415ef4521c", "filename": "clippy_lints/src/lib.register_cargo.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_cargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_cargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_cargo.rs?ref=e6747df5cd4232d26747a556c263d0a5d9c72414", "patch": "@@ -3,9 +3,9 @@\n // Manual edits will be overwritten.\n \n store.register_group(true, \"clippy::cargo\", Some(\"clippy_cargo\"), vec![\n-LintId::of(cargo_common_metadata::CARGO_COMMON_METADATA),\n-LintId::of(feature_name::NEGATIVE_FEATURE_NAMES),\n-LintId::of(feature_name::REDUNDANT_FEATURE_NAMES),\n-LintId::of(multiple_crate_versions::MULTIPLE_CRATE_VERSIONS),\n-LintId::of(wildcard_dependencies::WILDCARD_DEPENDENCIES),\n-])\n\\ No newline at end of file\n+    LintId::of(cargo_common_metadata::CARGO_COMMON_METADATA),\n+    LintId::of(feature_name::NEGATIVE_FEATURE_NAMES),\n+    LintId::of(feature_name::REDUNDANT_FEATURE_NAMES),\n+    LintId::of(multiple_crate_versions::MULTIPLE_CRATE_VERSIONS),\n+    LintId::of(wildcard_dependencies::WILDCARD_DEPENDENCIES),\n+])"}, {"sha": "64b82fc0faac8593504e6de0b0653504c5eb442d", "filename": "clippy_lints/src/lib.register_complexity.rs", "status": "modified", "additions": 89, "deletions": 89, "changes": 178, "blob_url": "https://github.com/rust-lang/rust/blob/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_complexity.rs?ref=e6747df5cd4232d26747a556c263d0a5d9c72414", "patch": "@@ -3,92 +3,92 @@\n // Manual edits will be overwritten.\n \n store.register_group(true, \"clippy::complexity\", Some(\"clippy_complexity\"), vec![\n-LintId::of(attrs::DEPRECATED_CFG_ATTR),\n-LintId::of(booleans::NONMINIMAL_BOOL),\n-LintId::of(casts::CHAR_LIT_AS_U8),\n-LintId::of(casts::UNNECESSARY_CAST),\n-LintId::of(derivable_impls::DERIVABLE_IMPLS),\n-LintId::of(double_comparison::DOUBLE_COMPARISONS),\n-LintId::of(double_parens::DOUBLE_PARENS),\n-LintId::of(duration_subsec::DURATION_SUBSEC),\n-LintId::of(eval_order_dependence::DIVERGING_SUB_EXPRESSION),\n-LintId::of(explicit_write::EXPLICIT_WRITE),\n-LintId::of(format::USELESS_FORMAT),\n-LintId::of(functions::TOO_MANY_ARGUMENTS),\n-LintId::of(get_last_with_len::GET_LAST_WITH_LEN),\n-LintId::of(identity_op::IDENTITY_OP),\n-LintId::of(int_plus_one::INT_PLUS_ONE),\n-LintId::of(lifetimes::EXTRA_UNUSED_LIFETIMES),\n-LintId::of(lifetimes::NEEDLESS_LIFETIMES),\n-LintId::of(loops::EXPLICIT_COUNTER_LOOP),\n-LintId::of(loops::MANUAL_FLATTEN),\n-LintId::of(loops::SINGLE_ELEMENT_LOOP),\n-LintId::of(loops::WHILE_LET_LOOP),\n-LintId::of(manual_strip::MANUAL_STRIP),\n-LintId::of(manual_unwrap_or::MANUAL_UNWRAP_OR),\n-LintId::of(map_unit_fn::OPTION_MAP_UNIT_FN),\n-LintId::of(map_unit_fn::RESULT_MAP_UNIT_FN),\n-LintId::of(matches::MATCH_AS_REF),\n-LintId::of(matches::MATCH_SINGLE_BINDING),\n-LintId::of(matches::WILDCARD_IN_OR_PATTERNS),\n-LintId::of(methods::BIND_INSTEAD_OF_MAP),\n-LintId::of(methods::CLONE_ON_COPY),\n-LintId::of(methods::FILTER_MAP_IDENTITY),\n-LintId::of(methods::FILTER_NEXT),\n-LintId::of(methods::FLAT_MAP_IDENTITY),\n-LintId::of(methods::INSPECT_FOR_EACH),\n-LintId::of(methods::ITER_COUNT),\n-LintId::of(methods::MANUAL_FILTER_MAP),\n-LintId::of(methods::MANUAL_FIND_MAP),\n-LintId::of(methods::MANUAL_SPLIT_ONCE),\n-LintId::of(methods::MAP_IDENTITY),\n-LintId::of(methods::OPTION_AS_REF_DEREF),\n-LintId::of(methods::OPTION_FILTER_MAP),\n-LintId::of(methods::SEARCH_IS_SOME),\n-LintId::of(methods::SKIP_WHILE_NEXT),\n-LintId::of(methods::UNNECESSARY_FILTER_MAP),\n-LintId::of(methods::USELESS_ASREF),\n-LintId::of(misc::SHORT_CIRCUIT_STATEMENT),\n-LintId::of(misc_early::UNNEEDED_WILDCARD_PATTERN),\n-LintId::of(misc_early::ZERO_PREFIXED_LITERAL),\n-LintId::of(needless_arbitrary_self_type::NEEDLESS_ARBITRARY_SELF_TYPE),\n-LintId::of(needless_bool::BOOL_COMPARISON),\n-LintId::of(needless_bool::NEEDLESS_BOOL),\n-LintId::of(needless_borrowed_ref::NEEDLESS_BORROWED_REFERENCE),\n-LintId::of(needless_option_as_deref::NEEDLESS_OPTION_AS_DEREF),\n-LintId::of(needless_question_mark::NEEDLESS_QUESTION_MARK),\n-LintId::of(needless_update::NEEDLESS_UPDATE),\n-LintId::of(neg_cmp_op_on_partial_ord::NEG_CMP_OP_ON_PARTIAL_ORD),\n-LintId::of(no_effect::NO_EFFECT),\n-LintId::of(no_effect::UNNECESSARY_OPERATION),\n-LintId::of(overflow_check_conditional::OVERFLOW_CHECK_CONDITIONAL),\n-LintId::of(partialeq_ne_impl::PARTIALEQ_NE_IMPL),\n-LintId::of(precedence::PRECEDENCE),\n-LintId::of(ptr_offset_with_cast::PTR_OFFSET_WITH_CAST),\n-LintId::of(ranges::RANGE_ZIP_WITH_LEN),\n-LintId::of(redundant_closure_call::REDUNDANT_CLOSURE_CALL),\n-LintId::of(redundant_slicing::REDUNDANT_SLICING),\n-LintId::of(reference::DEREF_ADDROF),\n-LintId::of(reference::REF_IN_DEREF),\n-LintId::of(repeat_once::REPEAT_ONCE),\n-LintId::of(strings::STRING_FROM_UTF8_AS_BYTES),\n-LintId::of(strlen_on_c_strings::STRLEN_ON_C_STRINGS),\n-LintId::of(swap::MANUAL_SWAP),\n-LintId::of(temporary_assignment::TEMPORARY_ASSIGNMENT),\n-LintId::of(transmute::CROSSPOINTER_TRANSMUTE),\n-LintId::of(transmute::TRANSMUTES_EXPRESSIBLE_AS_PTR_CASTS),\n-LintId::of(transmute::TRANSMUTE_BYTES_TO_STR),\n-LintId::of(transmute::TRANSMUTE_FLOAT_TO_INT),\n-LintId::of(transmute::TRANSMUTE_INT_TO_BOOL),\n-LintId::of(transmute::TRANSMUTE_INT_TO_CHAR),\n-LintId::of(transmute::TRANSMUTE_INT_TO_FLOAT),\n-LintId::of(transmute::TRANSMUTE_PTR_TO_REF),\n-LintId::of(types::BORROWED_BOX),\n-LintId::of(types::TYPE_COMPLEXITY),\n-LintId::of(types::VEC_BOX),\n-LintId::of(unit_types::UNIT_ARG),\n-LintId::of(unnecessary_sort_by::UNNECESSARY_SORT_BY),\n-LintId::of(unwrap::UNNECESSARY_UNWRAP),\n-LintId::of(useless_conversion::USELESS_CONVERSION),\n-LintId::of(zero_div_zero::ZERO_DIVIDED_BY_ZERO),\n-])\n\\ No newline at end of file\n+    LintId::of(attrs::DEPRECATED_CFG_ATTR),\n+    LintId::of(booleans::NONMINIMAL_BOOL),\n+    LintId::of(casts::CHAR_LIT_AS_U8),\n+    LintId::of(casts::UNNECESSARY_CAST),\n+    LintId::of(derivable_impls::DERIVABLE_IMPLS),\n+    LintId::of(double_comparison::DOUBLE_COMPARISONS),\n+    LintId::of(double_parens::DOUBLE_PARENS),\n+    LintId::of(duration_subsec::DURATION_SUBSEC),\n+    LintId::of(eval_order_dependence::DIVERGING_SUB_EXPRESSION),\n+    LintId::of(explicit_write::EXPLICIT_WRITE),\n+    LintId::of(format::USELESS_FORMAT),\n+    LintId::of(functions::TOO_MANY_ARGUMENTS),\n+    LintId::of(get_last_with_len::GET_LAST_WITH_LEN),\n+    LintId::of(identity_op::IDENTITY_OP),\n+    LintId::of(int_plus_one::INT_PLUS_ONE),\n+    LintId::of(lifetimes::EXTRA_UNUSED_LIFETIMES),\n+    LintId::of(lifetimes::NEEDLESS_LIFETIMES),\n+    LintId::of(loops::EXPLICIT_COUNTER_LOOP),\n+    LintId::of(loops::MANUAL_FLATTEN),\n+    LintId::of(loops::SINGLE_ELEMENT_LOOP),\n+    LintId::of(loops::WHILE_LET_LOOP),\n+    LintId::of(manual_strip::MANUAL_STRIP),\n+    LintId::of(manual_unwrap_or::MANUAL_UNWRAP_OR),\n+    LintId::of(map_unit_fn::OPTION_MAP_UNIT_FN),\n+    LintId::of(map_unit_fn::RESULT_MAP_UNIT_FN),\n+    LintId::of(matches::MATCH_AS_REF),\n+    LintId::of(matches::MATCH_SINGLE_BINDING),\n+    LintId::of(matches::WILDCARD_IN_OR_PATTERNS),\n+    LintId::of(methods::BIND_INSTEAD_OF_MAP),\n+    LintId::of(methods::CLONE_ON_COPY),\n+    LintId::of(methods::FILTER_MAP_IDENTITY),\n+    LintId::of(methods::FILTER_NEXT),\n+    LintId::of(methods::FLAT_MAP_IDENTITY),\n+    LintId::of(methods::INSPECT_FOR_EACH),\n+    LintId::of(methods::ITER_COUNT),\n+    LintId::of(methods::MANUAL_FILTER_MAP),\n+    LintId::of(methods::MANUAL_FIND_MAP),\n+    LintId::of(methods::MANUAL_SPLIT_ONCE),\n+    LintId::of(methods::MAP_IDENTITY),\n+    LintId::of(methods::OPTION_AS_REF_DEREF),\n+    LintId::of(methods::OPTION_FILTER_MAP),\n+    LintId::of(methods::SEARCH_IS_SOME),\n+    LintId::of(methods::SKIP_WHILE_NEXT),\n+    LintId::of(methods::UNNECESSARY_FILTER_MAP),\n+    LintId::of(methods::USELESS_ASREF),\n+    LintId::of(misc::SHORT_CIRCUIT_STATEMENT),\n+    LintId::of(misc_early::UNNEEDED_WILDCARD_PATTERN),\n+    LintId::of(misc_early::ZERO_PREFIXED_LITERAL),\n+    LintId::of(needless_arbitrary_self_type::NEEDLESS_ARBITRARY_SELF_TYPE),\n+    LintId::of(needless_bool::BOOL_COMPARISON),\n+    LintId::of(needless_bool::NEEDLESS_BOOL),\n+    LintId::of(needless_borrowed_ref::NEEDLESS_BORROWED_REFERENCE),\n+    LintId::of(needless_option_as_deref::NEEDLESS_OPTION_AS_DEREF),\n+    LintId::of(needless_question_mark::NEEDLESS_QUESTION_MARK),\n+    LintId::of(needless_update::NEEDLESS_UPDATE),\n+    LintId::of(neg_cmp_op_on_partial_ord::NEG_CMP_OP_ON_PARTIAL_ORD),\n+    LintId::of(no_effect::NO_EFFECT),\n+    LintId::of(no_effect::UNNECESSARY_OPERATION),\n+    LintId::of(overflow_check_conditional::OVERFLOW_CHECK_CONDITIONAL),\n+    LintId::of(partialeq_ne_impl::PARTIALEQ_NE_IMPL),\n+    LintId::of(precedence::PRECEDENCE),\n+    LintId::of(ptr_offset_with_cast::PTR_OFFSET_WITH_CAST),\n+    LintId::of(ranges::RANGE_ZIP_WITH_LEN),\n+    LintId::of(redundant_closure_call::REDUNDANT_CLOSURE_CALL),\n+    LintId::of(redundant_slicing::REDUNDANT_SLICING),\n+    LintId::of(reference::DEREF_ADDROF),\n+    LintId::of(reference::REF_IN_DEREF),\n+    LintId::of(repeat_once::REPEAT_ONCE),\n+    LintId::of(strings::STRING_FROM_UTF8_AS_BYTES),\n+    LintId::of(strlen_on_c_strings::STRLEN_ON_C_STRINGS),\n+    LintId::of(swap::MANUAL_SWAP),\n+    LintId::of(temporary_assignment::TEMPORARY_ASSIGNMENT),\n+    LintId::of(transmute::CROSSPOINTER_TRANSMUTE),\n+    LintId::of(transmute::TRANSMUTES_EXPRESSIBLE_AS_PTR_CASTS),\n+    LintId::of(transmute::TRANSMUTE_BYTES_TO_STR),\n+    LintId::of(transmute::TRANSMUTE_FLOAT_TO_INT),\n+    LintId::of(transmute::TRANSMUTE_INT_TO_BOOL),\n+    LintId::of(transmute::TRANSMUTE_INT_TO_CHAR),\n+    LintId::of(transmute::TRANSMUTE_INT_TO_FLOAT),\n+    LintId::of(transmute::TRANSMUTE_PTR_TO_REF),\n+    LintId::of(types::BORROWED_BOX),\n+    LintId::of(types::TYPE_COMPLEXITY),\n+    LintId::of(types::VEC_BOX),\n+    LintId::of(unit_types::UNIT_ARG),\n+    LintId::of(unnecessary_sort_by::UNNECESSARY_SORT_BY),\n+    LintId::of(unwrap::UNNECESSARY_UNWRAP),\n+    LintId::of(useless_conversion::USELESS_CONVERSION),\n+    LintId::of(zero_div_zero::ZERO_DIVIDED_BY_ZERO),\n+])"}, {"sha": "e0ef7b3b8af9f06f71953b8f6018a57750f54a49", "filename": "clippy_lints/src/lib.register_correctness.rs", "status": "modified", "additions": 68, "deletions": 68, "changes": 136, "blob_url": "https://github.com/rust-lang/rust/blob/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_correctness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_correctness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_correctness.rs?ref=e6747df5cd4232d26747a556c263d0a5d9c72414", "patch": "@@ -3,71 +3,71 @@\n // Manual edits will be overwritten.\n \n store.register_group(true, \"clippy::correctness\", Some(\"clippy_correctness\"), vec![\n-LintId::of(absurd_extreme_comparisons::ABSURD_EXTREME_COMPARISONS),\n-LintId::of(approx_const::APPROX_CONSTANT),\n-LintId::of(async_yields_async::ASYNC_YIELDS_ASYNC),\n-LintId::of(attrs::DEPRECATED_SEMVER),\n-LintId::of(attrs::MISMATCHED_TARGET_OS),\n-LintId::of(attrs::USELESS_ATTRIBUTE),\n-LintId::of(bit_mask::BAD_BIT_MASK),\n-LintId::of(bit_mask::INEFFECTIVE_BIT_MASK),\n-LintId::of(booleans::LOGIC_BUG),\n-LintId::of(casts::CAST_REF_TO_MUT),\n-LintId::of(copies::IFS_SAME_COND),\n-LintId::of(copies::IF_SAME_THEN_ELSE),\n-LintId::of(derive::DERIVE_HASH_XOR_EQ),\n-LintId::of(derive::DERIVE_ORD_XOR_PARTIAL_ORD),\n-LintId::of(drop_forget_ref::DROP_COPY),\n-LintId::of(drop_forget_ref::DROP_REF),\n-LintId::of(drop_forget_ref::FORGET_COPY),\n-LintId::of(drop_forget_ref::FORGET_REF),\n-LintId::of(enum_clike::ENUM_CLIKE_UNPORTABLE_VARIANT),\n-LintId::of(eq_op::EQ_OP),\n-LintId::of(erasing_op::ERASING_OP),\n-LintId::of(formatting::POSSIBLE_MISSING_COMMA),\n-LintId::of(functions::NOT_UNSAFE_PTR_ARG_DEREF),\n-LintId::of(if_let_mutex::IF_LET_MUTEX),\n-LintId::of(indexing_slicing::OUT_OF_BOUNDS_INDEXING),\n-LintId::of(infinite_iter::INFINITE_ITER),\n-LintId::of(inherent_to_string::INHERENT_TO_STRING_SHADOW_DISPLAY),\n-LintId::of(inline_fn_without_body::INLINE_FN_WITHOUT_BODY),\n-LintId::of(let_underscore::LET_UNDERSCORE_LOCK),\n-LintId::of(literal_representation::MISTYPED_LITERAL_SUFFIXES),\n-LintId::of(loops::ITER_NEXT_LOOP),\n-LintId::of(loops::NEVER_LOOP),\n-LintId::of(loops::WHILE_IMMUTABLE_CONDITION),\n-LintId::of(mem_discriminant::MEM_DISCRIMINANT_NON_ENUM),\n-LintId::of(mem_replace::MEM_REPLACE_WITH_UNINIT),\n-LintId::of(methods::CLONE_DOUBLE_REF),\n-LintId::of(methods::ITERATOR_STEP_BY_ZERO),\n-LintId::of(methods::SUSPICIOUS_SPLITN),\n-LintId::of(methods::UNINIT_ASSUMED_INIT),\n-LintId::of(methods::ZST_OFFSET),\n-LintId::of(minmax::MIN_MAX),\n-LintId::of(misc::CMP_NAN),\n-LintId::of(misc::MODULO_ONE),\n-LintId::of(non_octal_unix_permissions::NON_OCTAL_UNIX_PERMISSIONS),\n-LintId::of(open_options::NONSENSICAL_OPEN_OPTIONS),\n-LintId::of(option_env_unwrap::OPTION_ENV_UNWRAP),\n-LintId::of(ptr::INVALID_NULL_PTR_USAGE),\n-LintId::of(ptr::MUT_FROM_REF),\n-LintId::of(ranges::REVERSED_EMPTY_RANGES),\n-LintId::of(regex::INVALID_REGEX),\n-LintId::of(self_assignment::SELF_ASSIGNMENT),\n-LintId::of(serde_api::SERDE_API_MISUSE),\n-LintId::of(size_of_in_element_count::SIZE_OF_IN_ELEMENT_COUNT),\n-LintId::of(swap::ALMOST_SWAPPED),\n-LintId::of(to_string_in_display::TO_STRING_IN_DISPLAY),\n-LintId::of(transmute::UNSOUND_COLLECTION_TRANSMUTE),\n-LintId::of(transmute::WRONG_TRANSMUTE),\n-LintId::of(transmuting_null::TRANSMUTING_NULL),\n-LintId::of(undropped_manually_drops::UNDROPPED_MANUALLY_DROPS),\n-LintId::of(unicode::INVISIBLE_CHARACTERS),\n-LintId::of(unit_return_expecting_ord::UNIT_RETURN_EXPECTING_ORD),\n-LintId::of(unit_types::UNIT_CMP),\n-LintId::of(unnamed_address::FN_ADDRESS_COMPARISONS),\n-LintId::of(unnamed_address::VTABLE_ADDRESS_COMPARISONS),\n-LintId::of(unused_io_amount::UNUSED_IO_AMOUNT),\n-LintId::of(unwrap::PANICKING_UNWRAP),\n-LintId::of(vec_resize_to_zero::VEC_RESIZE_TO_ZERO),\n-])\n\\ No newline at end of file\n+    LintId::of(absurd_extreme_comparisons::ABSURD_EXTREME_COMPARISONS),\n+    LintId::of(approx_const::APPROX_CONSTANT),\n+    LintId::of(async_yields_async::ASYNC_YIELDS_ASYNC),\n+    LintId::of(attrs::DEPRECATED_SEMVER),\n+    LintId::of(attrs::MISMATCHED_TARGET_OS),\n+    LintId::of(attrs::USELESS_ATTRIBUTE),\n+    LintId::of(bit_mask::BAD_BIT_MASK),\n+    LintId::of(bit_mask::INEFFECTIVE_BIT_MASK),\n+    LintId::of(booleans::LOGIC_BUG),\n+    LintId::of(casts::CAST_REF_TO_MUT),\n+    LintId::of(copies::IFS_SAME_COND),\n+    LintId::of(copies::IF_SAME_THEN_ELSE),\n+    LintId::of(derive::DERIVE_HASH_XOR_EQ),\n+    LintId::of(derive::DERIVE_ORD_XOR_PARTIAL_ORD),\n+    LintId::of(drop_forget_ref::DROP_COPY),\n+    LintId::of(drop_forget_ref::DROP_REF),\n+    LintId::of(drop_forget_ref::FORGET_COPY),\n+    LintId::of(drop_forget_ref::FORGET_REF),\n+    LintId::of(enum_clike::ENUM_CLIKE_UNPORTABLE_VARIANT),\n+    LintId::of(eq_op::EQ_OP),\n+    LintId::of(erasing_op::ERASING_OP),\n+    LintId::of(formatting::POSSIBLE_MISSING_COMMA),\n+    LintId::of(functions::NOT_UNSAFE_PTR_ARG_DEREF),\n+    LintId::of(if_let_mutex::IF_LET_MUTEX),\n+    LintId::of(indexing_slicing::OUT_OF_BOUNDS_INDEXING),\n+    LintId::of(infinite_iter::INFINITE_ITER),\n+    LintId::of(inherent_to_string::INHERENT_TO_STRING_SHADOW_DISPLAY),\n+    LintId::of(inline_fn_without_body::INLINE_FN_WITHOUT_BODY),\n+    LintId::of(let_underscore::LET_UNDERSCORE_LOCK),\n+    LintId::of(literal_representation::MISTYPED_LITERAL_SUFFIXES),\n+    LintId::of(loops::ITER_NEXT_LOOP),\n+    LintId::of(loops::NEVER_LOOP),\n+    LintId::of(loops::WHILE_IMMUTABLE_CONDITION),\n+    LintId::of(mem_discriminant::MEM_DISCRIMINANT_NON_ENUM),\n+    LintId::of(mem_replace::MEM_REPLACE_WITH_UNINIT),\n+    LintId::of(methods::CLONE_DOUBLE_REF),\n+    LintId::of(methods::ITERATOR_STEP_BY_ZERO),\n+    LintId::of(methods::SUSPICIOUS_SPLITN),\n+    LintId::of(methods::UNINIT_ASSUMED_INIT),\n+    LintId::of(methods::ZST_OFFSET),\n+    LintId::of(minmax::MIN_MAX),\n+    LintId::of(misc::CMP_NAN),\n+    LintId::of(misc::MODULO_ONE),\n+    LintId::of(non_octal_unix_permissions::NON_OCTAL_UNIX_PERMISSIONS),\n+    LintId::of(open_options::NONSENSICAL_OPEN_OPTIONS),\n+    LintId::of(option_env_unwrap::OPTION_ENV_UNWRAP),\n+    LintId::of(ptr::INVALID_NULL_PTR_USAGE),\n+    LintId::of(ptr::MUT_FROM_REF),\n+    LintId::of(ranges::REVERSED_EMPTY_RANGES),\n+    LintId::of(regex::INVALID_REGEX),\n+    LintId::of(self_assignment::SELF_ASSIGNMENT),\n+    LintId::of(serde_api::SERDE_API_MISUSE),\n+    LintId::of(size_of_in_element_count::SIZE_OF_IN_ELEMENT_COUNT),\n+    LintId::of(swap::ALMOST_SWAPPED),\n+    LintId::of(to_string_in_display::TO_STRING_IN_DISPLAY),\n+    LintId::of(transmute::UNSOUND_COLLECTION_TRANSMUTE),\n+    LintId::of(transmute::WRONG_TRANSMUTE),\n+    LintId::of(transmuting_null::TRANSMUTING_NULL),\n+    LintId::of(undropped_manually_drops::UNDROPPED_MANUALLY_DROPS),\n+    LintId::of(unicode::INVISIBLE_CHARACTERS),\n+    LintId::of(unit_return_expecting_ord::UNIT_RETURN_EXPECTING_ORD),\n+    LintId::of(unit_types::UNIT_CMP),\n+    LintId::of(unnamed_address::FN_ADDRESS_COMPARISONS),\n+    LintId::of(unnamed_address::VTABLE_ADDRESS_COMPARISONS),\n+    LintId::of(unused_io_amount::UNUSED_IO_AMOUNT),\n+    LintId::of(unwrap::PANICKING_UNWRAP),\n+    LintId::of(vec_resize_to_zero::VEC_RESIZE_TO_ZERO),\n+])"}, {"sha": "c8c1e0262abaea8d62c774e6cad0b8764ab1c5b5", "filename": "clippy_lints/src/lib.register_internal.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_internal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_internal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_internal.rs?ref=e6747df5cd4232d26747a556c263d0a5d9c72414", "patch": "@@ -3,16 +3,16 @@\n // Manual edits will be overwritten.\n \n store.register_group(true, \"clippy::internal\", Some(\"clippy_internal\"), vec![\n-LintId::of(utils::internal_lints::CLIPPY_LINTS_INTERNAL),\n-LintId::of(utils::internal_lints::COLLAPSIBLE_SPAN_LINT_CALLS),\n-LintId::of(utils::internal_lints::COMPILER_LINT_FUNCTIONS),\n-LintId::of(utils::internal_lints::DEFAULT_LINT),\n-LintId::of(utils::internal_lints::IF_CHAIN_STYLE),\n-LintId::of(utils::internal_lints::INTERNING_DEFINED_SYMBOL),\n-LintId::of(utils::internal_lints::INVALID_PATHS),\n-LintId::of(utils::internal_lints::LINT_WITHOUT_LINT_PASS),\n-LintId::of(utils::internal_lints::MATCH_TYPE_ON_DIAGNOSTIC_ITEM),\n-LintId::of(utils::internal_lints::OUTER_EXPN_EXPN_DATA),\n-LintId::of(utils::internal_lints::PRODUCE_ICE),\n-LintId::of(utils::internal_lints::UNNECESSARY_SYMBOL_STR),\n-])\n\\ No newline at end of file\n+    LintId::of(utils::internal_lints::CLIPPY_LINTS_INTERNAL),\n+    LintId::of(utils::internal_lints::COLLAPSIBLE_SPAN_LINT_CALLS),\n+    LintId::of(utils::internal_lints::COMPILER_LINT_FUNCTIONS),\n+    LintId::of(utils::internal_lints::DEFAULT_LINT),\n+    LintId::of(utils::internal_lints::IF_CHAIN_STYLE),\n+    LintId::of(utils::internal_lints::INTERNING_DEFINED_SYMBOL),\n+    LintId::of(utils::internal_lints::INVALID_PATHS),\n+    LintId::of(utils::internal_lints::LINT_WITHOUT_LINT_PASS),\n+    LintId::of(utils::internal_lints::MATCH_TYPE_ON_DIAGNOSTIC_ITEM),\n+    LintId::of(utils::internal_lints::OUTER_EXPN_EXPN_DATA),\n+    LintId::of(utils::internal_lints::PRODUCE_ICE),\n+    LintId::of(utils::internal_lints::UNNECESSARY_SYMBOL_STR),\n+])"}, {"sha": "1ad27870b1a03fdd17fac011f5ee36092e22a7c7", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 504, "deletions": 504, "changes": 1008, "blob_url": "https://github.com/rust-lang/rust/blob/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=e6747df5cd4232d26747a556c263d0a5d9c72414", "patch": "@@ -2,507 +2,507 @@\n // Use that command to update this file and do not edit by hand.\n // Manual edits will be overwritten.\n \n-    store.register_lints(&[\n-        #[cfg(feature = \"internal-lints\")]\n-        utils::internal_lints::CLIPPY_LINTS_INTERNAL,\n-        #[cfg(feature = \"internal-lints\")]\n-        utils::internal_lints::COLLAPSIBLE_SPAN_LINT_CALLS,\n-        #[cfg(feature = \"internal-lints\")]\n-        utils::internal_lints::COMPILER_LINT_FUNCTIONS,\n-        #[cfg(feature = \"internal-lints\")]\n-        utils::internal_lints::DEFAULT_LINT,\n-        #[cfg(feature = \"internal-lints\")]\n-        utils::internal_lints::IF_CHAIN_STYLE,\n-        #[cfg(feature = \"internal-lints\")]\n-        utils::internal_lints::INTERNING_DEFINED_SYMBOL,\n-        #[cfg(feature = \"internal-lints\")]\n-        utils::internal_lints::INVALID_PATHS,\n-        #[cfg(feature = \"internal-lints\")]\n-        utils::internal_lints::LINT_WITHOUT_LINT_PASS,\n-        #[cfg(feature = \"internal-lints\")]\n-        utils::internal_lints::MATCH_TYPE_ON_DIAGNOSTIC_ITEM,\n-        #[cfg(feature = \"internal-lints\")]\n-        utils::internal_lints::OUTER_EXPN_EXPN_DATA,\n-        #[cfg(feature = \"internal-lints\")]\n-        utils::internal_lints::PRODUCE_ICE,\n-        #[cfg(feature = \"internal-lints\")]\n-        utils::internal_lints::UNNECESSARY_SYMBOL_STR,\n-        absurd_extreme_comparisons::ABSURD_EXTREME_COMPARISONS,\n-        approx_const::APPROX_CONSTANT,\n-        arithmetic::FLOAT_ARITHMETIC,\n-        arithmetic::INTEGER_ARITHMETIC,\n-        as_conversions::AS_CONVERSIONS,\n-        asm_syntax::INLINE_ASM_X86_ATT_SYNTAX,\n-        asm_syntax::INLINE_ASM_X86_INTEL_SYNTAX,\n-        assertions_on_constants::ASSERTIONS_ON_CONSTANTS,\n-        assign_ops::ASSIGN_OP_PATTERN,\n-        assign_ops::MISREFACTORED_ASSIGN_OP,\n-        async_yields_async::ASYNC_YIELDS_ASYNC,\n-        attrs::BLANKET_CLIPPY_RESTRICTION_LINTS,\n-        attrs::DEPRECATED_CFG_ATTR,\n-        attrs::DEPRECATED_SEMVER,\n-        attrs::EMPTY_LINE_AFTER_OUTER_ATTR,\n-        attrs::INLINE_ALWAYS,\n-        attrs::MISMATCHED_TARGET_OS,\n-        attrs::USELESS_ATTRIBUTE,\n-        await_holding_invalid::AWAIT_HOLDING_LOCK,\n-        await_holding_invalid::AWAIT_HOLDING_REFCELL_REF,\n-        bit_mask::BAD_BIT_MASK,\n-        bit_mask::INEFFECTIVE_BIT_MASK,\n-        bit_mask::VERBOSE_BIT_MASK,\n-        blacklisted_name::BLACKLISTED_NAME,\n-        blocks_in_if_conditions::BLOCKS_IN_IF_CONDITIONS,\n-        bool_assert_comparison::BOOL_ASSERT_COMPARISON,\n-        booleans::LOGIC_BUG,\n-        booleans::NONMINIMAL_BOOL,\n-        bytecount::NAIVE_BYTECOUNT,\n-        cargo_common_metadata::CARGO_COMMON_METADATA,\n-        case_sensitive_file_extension_comparisons::CASE_SENSITIVE_FILE_EXTENSION_COMPARISONS,\n-        casts::CAST_LOSSLESS,\n-        casts::CAST_POSSIBLE_TRUNCATION,\n-        casts::CAST_POSSIBLE_WRAP,\n-        casts::CAST_PRECISION_LOSS,\n-        casts::CAST_PTR_ALIGNMENT,\n-        casts::CAST_REF_TO_MUT,\n-        casts::CAST_SIGN_LOSS,\n-        casts::CHAR_LIT_AS_U8,\n-        casts::FN_TO_NUMERIC_CAST,\n-        casts::FN_TO_NUMERIC_CAST_WITH_TRUNCATION,\n-        casts::PTR_AS_PTR,\n-        casts::UNNECESSARY_CAST,\n-        checked_conversions::CHECKED_CONVERSIONS,\n-        cognitive_complexity::COGNITIVE_COMPLEXITY,\n-        collapsible_if::COLLAPSIBLE_ELSE_IF,\n-        collapsible_if::COLLAPSIBLE_IF,\n-        collapsible_match::COLLAPSIBLE_MATCH,\n-        comparison_chain::COMPARISON_CHAIN,\n-        copies::BRANCHES_SHARING_CODE,\n-        copies::IFS_SAME_COND,\n-        copies::IF_SAME_THEN_ELSE,\n-        copies::SAME_FUNCTIONS_IN_IF_CONDITION,\n-        copy_iterator::COPY_ITERATOR,\n-        create_dir::CREATE_DIR,\n-        dbg_macro::DBG_MACRO,\n-        default::DEFAULT_TRAIT_ACCESS,\n-        default::FIELD_REASSIGN_WITH_DEFAULT,\n-        default_numeric_fallback::DEFAULT_NUMERIC_FALLBACK,\n-        dereference::EXPLICIT_DEREF_METHODS,\n-        derivable_impls::DERIVABLE_IMPLS,\n-        derive::DERIVE_HASH_XOR_EQ,\n-        derive::DERIVE_ORD_XOR_PARTIAL_ORD,\n-        derive::EXPL_IMPL_CLONE_ON_COPY,\n-        derive::UNSAFE_DERIVE_DESERIALIZE,\n-        disallowed_method::DISALLOWED_METHOD,\n-        disallowed_script_idents::DISALLOWED_SCRIPT_IDENTS,\n-        disallowed_type::DISALLOWED_TYPE,\n-        doc::DOC_MARKDOWN,\n-        doc::MISSING_ERRORS_DOC,\n-        doc::MISSING_PANICS_DOC,\n-        doc::MISSING_SAFETY_DOC,\n-        doc::NEEDLESS_DOCTEST_MAIN,\n-        double_comparison::DOUBLE_COMPARISONS,\n-        double_parens::DOUBLE_PARENS,\n-        drop_forget_ref::DROP_COPY,\n-        drop_forget_ref::DROP_REF,\n-        drop_forget_ref::FORGET_COPY,\n-        drop_forget_ref::FORGET_REF,\n-        duration_subsec::DURATION_SUBSEC,\n-        else_if_without_else::ELSE_IF_WITHOUT_ELSE,\n-        empty_enum::EMPTY_ENUM,\n-        entry::MAP_ENTRY,\n-        enum_clike::ENUM_CLIKE_UNPORTABLE_VARIANT,\n-        enum_variants::ENUM_VARIANT_NAMES,\n-        enum_variants::MODULE_INCEPTION,\n-        enum_variants::MODULE_NAME_REPETITIONS,\n-        eq_op::EQ_OP,\n-        eq_op::OP_REF,\n-        erasing_op::ERASING_OP,\n-        escape::BOXED_LOCAL,\n-        eta_reduction::REDUNDANT_CLOSURE,\n-        eta_reduction::REDUNDANT_CLOSURE_FOR_METHOD_CALLS,\n-        eval_order_dependence::DIVERGING_SUB_EXPRESSION,\n-        eval_order_dependence::EVAL_ORDER_DEPENDENCE,\n-        excessive_bools::FN_PARAMS_EXCESSIVE_BOOLS,\n-        excessive_bools::STRUCT_EXCESSIVE_BOOLS,\n-        exhaustive_items::EXHAUSTIVE_ENUMS,\n-        exhaustive_items::EXHAUSTIVE_STRUCTS,\n-        exit::EXIT,\n-        explicit_write::EXPLICIT_WRITE,\n-        fallible_impl_from::FALLIBLE_IMPL_FROM,\n-        feature_name::NEGATIVE_FEATURE_NAMES,\n-        feature_name::REDUNDANT_FEATURE_NAMES,\n-        float_equality_without_abs::FLOAT_EQUALITY_WITHOUT_ABS,\n-        float_literal::EXCESSIVE_PRECISION,\n-        float_literal::LOSSY_FLOAT_LITERAL,\n-        floating_point_arithmetic::IMPRECISE_FLOPS,\n-        floating_point_arithmetic::SUBOPTIMAL_FLOPS,\n-        format::USELESS_FORMAT,\n-        formatting::POSSIBLE_MISSING_COMMA,\n-        formatting::SUSPICIOUS_ASSIGNMENT_FORMATTING,\n-        formatting::SUSPICIOUS_ELSE_FORMATTING,\n-        formatting::SUSPICIOUS_UNARY_OP_FORMATTING,\n-        from_over_into::FROM_OVER_INTO,\n-        from_str_radix_10::FROM_STR_RADIX_10,\n-        functions::DOUBLE_MUST_USE,\n-        functions::MUST_USE_CANDIDATE,\n-        functions::MUST_USE_UNIT,\n-        functions::NOT_UNSAFE_PTR_ARG_DEREF,\n-        functions::RESULT_UNIT_ERR,\n-        functions::TOO_MANY_ARGUMENTS,\n-        functions::TOO_MANY_LINES,\n-        future_not_send::FUTURE_NOT_SEND,\n-        get_last_with_len::GET_LAST_WITH_LEN,\n-        identity_op::IDENTITY_OP,\n-        if_let_mutex::IF_LET_MUTEX,\n-        if_not_else::IF_NOT_ELSE,\n-        if_then_panic::IF_THEN_PANIC,\n-        if_then_some_else_none::IF_THEN_SOME_ELSE_NONE,\n-        implicit_hasher::IMPLICIT_HASHER,\n-        implicit_return::IMPLICIT_RETURN,\n-        implicit_saturating_sub::IMPLICIT_SATURATING_SUB,\n-        inconsistent_struct_constructor::INCONSISTENT_STRUCT_CONSTRUCTOR,\n-        indexing_slicing::INDEXING_SLICING,\n-        indexing_slicing::OUT_OF_BOUNDS_INDEXING,\n-        infinite_iter::INFINITE_ITER,\n-        infinite_iter::MAYBE_INFINITE_ITER,\n-        inherent_impl::MULTIPLE_INHERENT_IMPL,\n-        inherent_to_string::INHERENT_TO_STRING,\n-        inherent_to_string::INHERENT_TO_STRING_SHADOW_DISPLAY,\n-        inline_fn_without_body::INLINE_FN_WITHOUT_BODY,\n-        int_plus_one::INT_PLUS_ONE,\n-        integer_division::INTEGER_DIVISION,\n-        invalid_upcast_comparisons::INVALID_UPCAST_COMPARISONS,\n-        items_after_statements::ITEMS_AFTER_STATEMENTS,\n-        iter_not_returning_iterator::ITER_NOT_RETURNING_ITERATOR,\n-        large_const_arrays::LARGE_CONST_ARRAYS,\n-        large_enum_variant::LARGE_ENUM_VARIANT,\n-        large_stack_arrays::LARGE_STACK_ARRAYS,\n-        len_zero::COMPARISON_TO_EMPTY,\n-        len_zero::LEN_WITHOUT_IS_EMPTY,\n-        len_zero::LEN_ZERO,\n-        let_if_seq::USELESS_LET_IF_SEQ,\n-        let_underscore::LET_UNDERSCORE_DROP,\n-        let_underscore::LET_UNDERSCORE_LOCK,\n-        let_underscore::LET_UNDERSCORE_MUST_USE,\n-        lifetimes::EXTRA_UNUSED_LIFETIMES,\n-        lifetimes::NEEDLESS_LIFETIMES,\n-        literal_representation::DECIMAL_LITERAL_REPRESENTATION,\n-        literal_representation::INCONSISTENT_DIGIT_GROUPING,\n-        literal_representation::LARGE_DIGIT_GROUPS,\n-        literal_representation::MISTYPED_LITERAL_SUFFIXES,\n-        literal_representation::UNREADABLE_LITERAL,\n-        literal_representation::UNUSUAL_BYTE_GROUPINGS,\n-        loops::EMPTY_LOOP,\n-        loops::EXPLICIT_COUNTER_LOOP,\n-        loops::EXPLICIT_INTO_ITER_LOOP,\n-        loops::EXPLICIT_ITER_LOOP,\n-        loops::FOR_KV_MAP,\n-        loops::FOR_LOOPS_OVER_FALLIBLES,\n-        loops::ITER_NEXT_LOOP,\n-        loops::MANUAL_FLATTEN,\n-        loops::MANUAL_MEMCPY,\n-        loops::MUT_RANGE_BOUND,\n-        loops::NEEDLESS_COLLECT,\n-        loops::NEEDLESS_RANGE_LOOP,\n-        loops::NEVER_LOOP,\n-        loops::SAME_ITEM_PUSH,\n-        loops::SINGLE_ELEMENT_LOOP,\n-        loops::WHILE_IMMUTABLE_CONDITION,\n-        loops::WHILE_LET_LOOP,\n-        loops::WHILE_LET_ON_ITERATOR,\n-        macro_use::MACRO_USE_IMPORTS,\n-        main_recursion::MAIN_RECURSION,\n-        manual_async_fn::MANUAL_ASYNC_FN,\n-        manual_map::MANUAL_MAP,\n-        manual_non_exhaustive::MANUAL_NON_EXHAUSTIVE,\n-        manual_ok_or::MANUAL_OK_OR,\n-        manual_strip::MANUAL_STRIP,\n-        manual_unwrap_or::MANUAL_UNWRAP_OR,\n-        map_clone::MAP_CLONE,\n-        map_err_ignore::MAP_ERR_IGNORE,\n-        map_unit_fn::OPTION_MAP_UNIT_FN,\n-        map_unit_fn::RESULT_MAP_UNIT_FN,\n-        match_on_vec_items::MATCH_ON_VEC_ITEMS,\n-        match_result_ok::MATCH_RESULT_OK,\n-        matches::INFALLIBLE_DESTRUCTURING_MATCH,\n-        matches::MATCH_AS_REF,\n-        matches::MATCH_BOOL,\n-        matches::MATCH_LIKE_MATCHES_MACRO,\n-        matches::MATCH_OVERLAPPING_ARM,\n-        matches::MATCH_REF_PATS,\n-        matches::MATCH_SAME_ARMS,\n-        matches::MATCH_SINGLE_BINDING,\n-        matches::MATCH_WILDCARD_FOR_SINGLE_VARIANTS,\n-        matches::MATCH_WILD_ERR_ARM,\n-        matches::REDUNDANT_PATTERN_MATCHING,\n-        matches::REST_PAT_IN_FULLY_BOUND_STRUCTS,\n-        matches::SINGLE_MATCH,\n-        matches::SINGLE_MATCH_ELSE,\n-        matches::WILDCARD_ENUM_MATCH_ARM,\n-        matches::WILDCARD_IN_OR_PATTERNS,\n-        mem_discriminant::MEM_DISCRIMINANT_NON_ENUM,\n-        mem_forget::MEM_FORGET,\n-        mem_replace::MEM_REPLACE_OPTION_WITH_NONE,\n-        mem_replace::MEM_REPLACE_WITH_DEFAULT,\n-        mem_replace::MEM_REPLACE_WITH_UNINIT,\n-        methods::BIND_INSTEAD_OF_MAP,\n-        methods::BYTES_NTH,\n-        methods::CHARS_LAST_CMP,\n-        methods::CHARS_NEXT_CMP,\n-        methods::CLONED_INSTEAD_OF_COPIED,\n-        methods::CLONE_DOUBLE_REF,\n-        methods::CLONE_ON_COPY,\n-        methods::CLONE_ON_REF_PTR,\n-        methods::EXPECT_FUN_CALL,\n-        methods::EXPECT_USED,\n-        methods::EXTEND_WITH_DRAIN,\n-        methods::FILETYPE_IS_FILE,\n-        methods::FILTER_MAP_IDENTITY,\n-        methods::FILTER_MAP_NEXT,\n-        methods::FILTER_NEXT,\n-        methods::FLAT_MAP_IDENTITY,\n-        methods::FLAT_MAP_OPTION,\n-        methods::FROM_ITER_INSTEAD_OF_COLLECT,\n-        methods::GET_UNWRAP,\n-        methods::IMPLICIT_CLONE,\n-        methods::INEFFICIENT_TO_STRING,\n-        methods::INSPECT_FOR_EACH,\n-        methods::INTO_ITER_ON_REF,\n-        methods::ITERATOR_STEP_BY_ZERO,\n-        methods::ITER_CLONED_COLLECT,\n-        methods::ITER_COUNT,\n-        methods::ITER_NEXT_SLICE,\n-        methods::ITER_NTH,\n-        methods::ITER_NTH_ZERO,\n-        methods::ITER_SKIP_NEXT,\n-        methods::MANUAL_FILTER_MAP,\n-        methods::MANUAL_FIND_MAP,\n-        methods::MANUAL_SATURATING_ARITHMETIC,\n-        methods::MANUAL_SPLIT_ONCE,\n-        methods::MANUAL_STR_REPEAT,\n-        methods::MAP_COLLECT_RESULT_UNIT,\n-        methods::MAP_FLATTEN,\n-        methods::MAP_IDENTITY,\n-        methods::MAP_UNWRAP_OR,\n-        methods::NEW_RET_NO_SELF,\n-        methods::OK_EXPECT,\n-        methods::OPTION_AS_REF_DEREF,\n-        methods::OPTION_FILTER_MAP,\n-        methods::OPTION_MAP_OR_NONE,\n-        methods::OR_FUN_CALL,\n-        methods::RESULT_MAP_OR_INTO_OPTION,\n-        methods::SEARCH_IS_SOME,\n-        methods::SHOULD_IMPLEMENT_TRAIT,\n-        methods::SINGLE_CHAR_ADD_STR,\n-        methods::SINGLE_CHAR_PATTERN,\n-        methods::SKIP_WHILE_NEXT,\n-        methods::STRING_EXTEND_CHARS,\n-        methods::SUSPICIOUS_MAP,\n-        methods::SUSPICIOUS_SPLITN,\n-        methods::UNINIT_ASSUMED_INIT,\n-        methods::UNNECESSARY_FILTER_MAP,\n-        methods::UNNECESSARY_FOLD,\n-        methods::UNNECESSARY_LAZY_EVALUATIONS,\n-        methods::UNWRAP_OR_ELSE_DEFAULT,\n-        methods::UNWRAP_USED,\n-        methods::USELESS_ASREF,\n-        methods::WRONG_SELF_CONVENTION,\n-        methods::ZST_OFFSET,\n-        minmax::MIN_MAX,\n-        misc::CMP_NAN,\n-        misc::CMP_OWNED,\n-        misc::FLOAT_CMP,\n-        misc::FLOAT_CMP_CONST,\n-        misc::MODULO_ONE,\n-        misc::SHORT_CIRCUIT_STATEMENT,\n-        misc::TOPLEVEL_REF_ARG,\n-        misc::USED_UNDERSCORE_BINDING,\n-        misc::ZERO_PTR,\n-        misc_early::BUILTIN_TYPE_SHADOW,\n-        misc_early::DOUBLE_NEG,\n-        misc_early::DUPLICATE_UNDERSCORE_ARGUMENT,\n-        misc_early::MIXED_CASE_HEX_LITERALS,\n-        misc_early::REDUNDANT_PATTERN,\n-        misc_early::UNNEEDED_FIELD_PATTERN,\n-        misc_early::UNNEEDED_WILDCARD_PATTERN,\n-        misc_early::UNSEPARATED_LITERAL_SUFFIX,\n-        misc_early::ZERO_PREFIXED_LITERAL,\n-        missing_const_for_fn::MISSING_CONST_FOR_FN,\n-        missing_doc::MISSING_DOCS_IN_PRIVATE_ITEMS,\n-        missing_enforced_import_rename::MISSING_ENFORCED_IMPORT_RENAMES,\n-        missing_inline::MISSING_INLINE_IN_PUBLIC_ITEMS,\n-        module_style::MOD_MODULE_FILES,\n-        module_style::SELF_NAMED_MODULE_FILES,\n-        modulo_arithmetic::MODULO_ARITHMETIC,\n-        multiple_crate_versions::MULTIPLE_CRATE_VERSIONS,\n-        mut_key::MUTABLE_KEY_TYPE,\n-        mut_mut::MUT_MUT,\n-        mut_mutex_lock::MUT_MUTEX_LOCK,\n-        mut_reference::UNNECESSARY_MUT_PASSED,\n-        mutable_debug_assertion::DEBUG_ASSERT_WITH_MUT_CALL,\n-        mutex_atomic::MUTEX_ATOMIC,\n-        mutex_atomic::MUTEX_INTEGER,\n-        needless_arbitrary_self_type::NEEDLESS_ARBITRARY_SELF_TYPE,\n-        needless_bitwise_bool::NEEDLESS_BITWISE_BOOL,\n-        needless_bool::BOOL_COMPARISON,\n-        needless_bool::NEEDLESS_BOOL,\n-        needless_borrow::NEEDLESS_BORROW,\n-        needless_borrow::REF_BINDING_TO_REFERENCE,\n-        needless_borrowed_ref::NEEDLESS_BORROWED_REFERENCE,\n-        needless_continue::NEEDLESS_CONTINUE,\n-        needless_for_each::NEEDLESS_FOR_EACH,\n-        needless_option_as_deref::NEEDLESS_OPTION_AS_DEREF,\n-        needless_pass_by_value::NEEDLESS_PASS_BY_VALUE,\n-        needless_question_mark::NEEDLESS_QUESTION_MARK,\n-        needless_update::NEEDLESS_UPDATE,\n-        neg_cmp_op_on_partial_ord::NEG_CMP_OP_ON_PARTIAL_ORD,\n-        neg_multiply::NEG_MULTIPLY,\n-        new_without_default::NEW_WITHOUT_DEFAULT,\n-        no_effect::NO_EFFECT,\n-        no_effect::UNNECESSARY_OPERATION,\n-        non_copy_const::BORROW_INTERIOR_MUTABLE_CONST,\n-        non_copy_const::DECLARE_INTERIOR_MUTABLE_CONST,\n-        non_expressive_names::JUST_UNDERSCORES_AND_DIGITS,\n-        non_expressive_names::MANY_SINGLE_CHAR_NAMES,\n-        non_expressive_names::SIMILAR_NAMES,\n-        non_octal_unix_permissions::NON_OCTAL_UNIX_PERMISSIONS,\n-        nonstandard_macro_braces::NONSTANDARD_MACRO_BRACES,\n-        open_options::NONSENSICAL_OPEN_OPTIONS,\n-        option_env_unwrap::OPTION_ENV_UNWRAP,\n-        option_if_let_else::OPTION_IF_LET_ELSE,\n-        overflow_check_conditional::OVERFLOW_CHECK_CONDITIONAL,\n-        panic_in_result_fn::PANIC_IN_RESULT_FN,\n-        panic_unimplemented::PANIC,\n-        panic_unimplemented::TODO,\n-        panic_unimplemented::UNIMPLEMENTED,\n-        panic_unimplemented::UNREACHABLE,\n-        partialeq_ne_impl::PARTIALEQ_NE_IMPL,\n-        pass_by_ref_or_value::LARGE_TYPES_PASSED_BY_VALUE,\n-        pass_by_ref_or_value::TRIVIALLY_COPY_PASS_BY_REF,\n-        path_buf_push_overwrite::PATH_BUF_PUSH_OVERWRITE,\n-        pattern_type_mismatch::PATTERN_TYPE_MISMATCH,\n-        precedence::PRECEDENCE,\n-        ptr::CMP_NULL,\n-        ptr::INVALID_NULL_PTR_USAGE,\n-        ptr::MUT_FROM_REF,\n-        ptr::PTR_ARG,\n-        ptr_eq::PTR_EQ,\n-        ptr_offset_with_cast::PTR_OFFSET_WITH_CAST,\n-        question_mark::QUESTION_MARK,\n-        ranges::MANUAL_RANGE_CONTAINS,\n-        ranges::RANGE_MINUS_ONE,\n-        ranges::RANGE_PLUS_ONE,\n-        ranges::RANGE_ZIP_WITH_LEN,\n-        ranges::REVERSED_EMPTY_RANGES,\n-        redundant_clone::REDUNDANT_CLONE,\n-        redundant_closure_call::REDUNDANT_CLOSURE_CALL,\n-        redundant_else::REDUNDANT_ELSE,\n-        redundant_field_names::REDUNDANT_FIELD_NAMES,\n-        redundant_pub_crate::REDUNDANT_PUB_CRATE,\n-        redundant_slicing::REDUNDANT_SLICING,\n-        redundant_static_lifetimes::REDUNDANT_STATIC_LIFETIMES,\n-        ref_option_ref::REF_OPTION_REF,\n-        reference::DEREF_ADDROF,\n-        reference::REF_IN_DEREF,\n-        regex::INVALID_REGEX,\n-        regex::TRIVIAL_REGEX,\n-        repeat_once::REPEAT_ONCE,\n-        returns::LET_AND_RETURN,\n-        returns::NEEDLESS_RETURN,\n-        same_name_method::SAME_NAME_METHOD,\n-        self_assignment::SELF_ASSIGNMENT,\n-        self_named_constructors::SELF_NAMED_CONSTRUCTORS,\n-        semicolon_if_nothing_returned::SEMICOLON_IF_NOTHING_RETURNED,\n-        serde_api::SERDE_API_MISUSE,\n-        shadow::SHADOW_REUSE,\n-        shadow::SHADOW_SAME,\n-        shadow::SHADOW_UNRELATED,\n-        single_component_path_imports::SINGLE_COMPONENT_PATH_IMPORTS,\n-        size_of_in_element_count::SIZE_OF_IN_ELEMENT_COUNT,\n-        slow_vector_initialization::SLOW_VECTOR_INITIALIZATION,\n-        stable_sort_primitive::STABLE_SORT_PRIMITIVE,\n-        strings::STRING_ADD,\n-        strings::STRING_ADD_ASSIGN,\n-        strings::STRING_FROM_UTF8_AS_BYTES,\n-        strings::STRING_LIT_AS_BYTES,\n-        strings::STRING_TO_STRING,\n-        strings::STR_TO_STRING,\n-        strlen_on_c_strings::STRLEN_ON_C_STRINGS,\n-        suspicious_operation_groupings::SUSPICIOUS_OPERATION_GROUPINGS,\n-        suspicious_trait_impl::SUSPICIOUS_ARITHMETIC_IMPL,\n-        suspicious_trait_impl::SUSPICIOUS_OP_ASSIGN_IMPL,\n-        swap::ALMOST_SWAPPED,\n-        swap::MANUAL_SWAP,\n-        tabs_in_doc_comments::TABS_IN_DOC_COMMENTS,\n-        temporary_assignment::TEMPORARY_ASSIGNMENT,\n-        to_digit_is_some::TO_DIGIT_IS_SOME,\n-        to_string_in_display::TO_STRING_IN_DISPLAY,\n-        trait_bounds::TRAIT_DUPLICATION_IN_BOUNDS,\n-        trait_bounds::TYPE_REPETITION_IN_BOUNDS,\n-        transmute::CROSSPOINTER_TRANSMUTE,\n-        transmute::TRANSMUTES_EXPRESSIBLE_AS_PTR_CASTS,\n-        transmute::TRANSMUTE_BYTES_TO_STR,\n-        transmute::TRANSMUTE_FLOAT_TO_INT,\n-        transmute::TRANSMUTE_INT_TO_BOOL,\n-        transmute::TRANSMUTE_INT_TO_CHAR,\n-        transmute::TRANSMUTE_INT_TO_FLOAT,\n-        transmute::TRANSMUTE_PTR_TO_PTR,\n-        transmute::TRANSMUTE_PTR_TO_REF,\n-        transmute::UNSOUND_COLLECTION_TRANSMUTE,\n-        transmute::USELESS_TRANSMUTE,\n-        transmute::WRONG_TRANSMUTE,\n-        transmuting_null::TRANSMUTING_NULL,\n-        try_err::TRY_ERR,\n-        types::BORROWED_BOX,\n-        types::BOX_COLLECTION,\n-        types::LINKEDLIST,\n-        types::OPTION_OPTION,\n-        types::RC_BUFFER,\n-        types::RC_MUTEX,\n-        types::REDUNDANT_ALLOCATION,\n-        types::TYPE_COMPLEXITY,\n-        types::VEC_BOX,\n-        undropped_manually_drops::UNDROPPED_MANUALLY_DROPS,\n-        unicode::INVISIBLE_CHARACTERS,\n-        unicode::NON_ASCII_LITERAL,\n-        unicode::UNICODE_NOT_NFC,\n-        unit_return_expecting_ord::UNIT_RETURN_EXPECTING_ORD,\n-        unit_types::LET_UNIT_VALUE,\n-        unit_types::UNIT_ARG,\n-        unit_types::UNIT_CMP,\n-        unnamed_address::FN_ADDRESS_COMPARISONS,\n-        unnamed_address::VTABLE_ADDRESS_COMPARISONS,\n-        unnecessary_self_imports::UNNECESSARY_SELF_IMPORTS,\n-        unnecessary_sort_by::UNNECESSARY_SORT_BY,\n-        unnecessary_wraps::UNNECESSARY_WRAPS,\n-        unnested_or_patterns::UNNESTED_OR_PATTERNS,\n-        unsafe_removed_from_name::UNSAFE_REMOVED_FROM_NAME,\n-        unused_async::UNUSED_ASYNC,\n-        unused_io_amount::UNUSED_IO_AMOUNT,\n-        unused_self::UNUSED_SELF,\n-        unused_unit::UNUSED_UNIT,\n-        unwrap::PANICKING_UNWRAP,\n-        unwrap::UNNECESSARY_UNWRAP,\n-        unwrap_in_result::UNWRAP_IN_RESULT,\n-        upper_case_acronyms::UPPER_CASE_ACRONYMS,\n-        use_self::USE_SELF,\n-        useless_conversion::USELESS_CONVERSION,\n-        vec::USELESS_VEC,\n-        vec_init_then_push::VEC_INIT_THEN_PUSH,\n-        vec_resize_to_zero::VEC_RESIZE_TO_ZERO,\n-        verbose_file_reads::VERBOSE_FILE_READS,\n-        wildcard_dependencies::WILDCARD_DEPENDENCIES,\n-        wildcard_imports::ENUM_GLOB_USE,\n-        wildcard_imports::WILDCARD_IMPORTS,\n-        write::PRINTLN_EMPTY_STRING,\n-        write::PRINT_LITERAL,\n-        write::PRINT_STDERR,\n-        write::PRINT_STDOUT,\n-        write::PRINT_WITH_NEWLINE,\n-        write::USE_DEBUG,\n-        write::WRITELN_EMPTY_STRING,\n-        write::WRITE_LITERAL,\n-        write::WRITE_WITH_NEWLINE,\n-        zero_div_zero::ZERO_DIVIDED_BY_ZERO,\n-        zero_sized_map_values::ZERO_SIZED_MAP_VALUES,\n-    ])\n\\ No newline at end of file\n+store.register_lints(&[\n+    #[cfg(feature = \"internal-lints\")]\n+    utils::internal_lints::CLIPPY_LINTS_INTERNAL,\n+    #[cfg(feature = \"internal-lints\")]\n+    utils::internal_lints::COLLAPSIBLE_SPAN_LINT_CALLS,\n+    #[cfg(feature = \"internal-lints\")]\n+    utils::internal_lints::COMPILER_LINT_FUNCTIONS,\n+    #[cfg(feature = \"internal-lints\")]\n+    utils::internal_lints::DEFAULT_LINT,\n+    #[cfg(feature = \"internal-lints\")]\n+    utils::internal_lints::IF_CHAIN_STYLE,\n+    #[cfg(feature = \"internal-lints\")]\n+    utils::internal_lints::INTERNING_DEFINED_SYMBOL,\n+    #[cfg(feature = \"internal-lints\")]\n+    utils::internal_lints::INVALID_PATHS,\n+    #[cfg(feature = \"internal-lints\")]\n+    utils::internal_lints::LINT_WITHOUT_LINT_PASS,\n+    #[cfg(feature = \"internal-lints\")]\n+    utils::internal_lints::MATCH_TYPE_ON_DIAGNOSTIC_ITEM,\n+    #[cfg(feature = \"internal-lints\")]\n+    utils::internal_lints::OUTER_EXPN_EXPN_DATA,\n+    #[cfg(feature = \"internal-lints\")]\n+    utils::internal_lints::PRODUCE_ICE,\n+    #[cfg(feature = \"internal-lints\")]\n+    utils::internal_lints::UNNECESSARY_SYMBOL_STR,\n+    absurd_extreme_comparisons::ABSURD_EXTREME_COMPARISONS,\n+    approx_const::APPROX_CONSTANT,\n+    arithmetic::FLOAT_ARITHMETIC,\n+    arithmetic::INTEGER_ARITHMETIC,\n+    as_conversions::AS_CONVERSIONS,\n+    asm_syntax::INLINE_ASM_X86_ATT_SYNTAX,\n+    asm_syntax::INLINE_ASM_X86_INTEL_SYNTAX,\n+    assertions_on_constants::ASSERTIONS_ON_CONSTANTS,\n+    assign_ops::ASSIGN_OP_PATTERN,\n+    assign_ops::MISREFACTORED_ASSIGN_OP,\n+    async_yields_async::ASYNC_YIELDS_ASYNC,\n+    attrs::BLANKET_CLIPPY_RESTRICTION_LINTS,\n+    attrs::DEPRECATED_CFG_ATTR,\n+    attrs::DEPRECATED_SEMVER,\n+    attrs::EMPTY_LINE_AFTER_OUTER_ATTR,\n+    attrs::INLINE_ALWAYS,\n+    attrs::MISMATCHED_TARGET_OS,\n+    attrs::USELESS_ATTRIBUTE,\n+    await_holding_invalid::AWAIT_HOLDING_LOCK,\n+    await_holding_invalid::AWAIT_HOLDING_REFCELL_REF,\n+    bit_mask::BAD_BIT_MASK,\n+    bit_mask::INEFFECTIVE_BIT_MASK,\n+    bit_mask::VERBOSE_BIT_MASK,\n+    blacklisted_name::BLACKLISTED_NAME,\n+    blocks_in_if_conditions::BLOCKS_IN_IF_CONDITIONS,\n+    bool_assert_comparison::BOOL_ASSERT_COMPARISON,\n+    booleans::LOGIC_BUG,\n+    booleans::NONMINIMAL_BOOL,\n+    bytecount::NAIVE_BYTECOUNT,\n+    cargo_common_metadata::CARGO_COMMON_METADATA,\n+    case_sensitive_file_extension_comparisons::CASE_SENSITIVE_FILE_EXTENSION_COMPARISONS,\n+    casts::CAST_LOSSLESS,\n+    casts::CAST_POSSIBLE_TRUNCATION,\n+    casts::CAST_POSSIBLE_WRAP,\n+    casts::CAST_PRECISION_LOSS,\n+    casts::CAST_PTR_ALIGNMENT,\n+    casts::CAST_REF_TO_MUT,\n+    casts::CAST_SIGN_LOSS,\n+    casts::CHAR_LIT_AS_U8,\n+    casts::FN_TO_NUMERIC_CAST,\n+    casts::FN_TO_NUMERIC_CAST_WITH_TRUNCATION,\n+    casts::PTR_AS_PTR,\n+    casts::UNNECESSARY_CAST,\n+    checked_conversions::CHECKED_CONVERSIONS,\n+    cognitive_complexity::COGNITIVE_COMPLEXITY,\n+    collapsible_if::COLLAPSIBLE_ELSE_IF,\n+    collapsible_if::COLLAPSIBLE_IF,\n+    collapsible_match::COLLAPSIBLE_MATCH,\n+    comparison_chain::COMPARISON_CHAIN,\n+    copies::BRANCHES_SHARING_CODE,\n+    copies::IFS_SAME_COND,\n+    copies::IF_SAME_THEN_ELSE,\n+    copies::SAME_FUNCTIONS_IN_IF_CONDITION,\n+    copy_iterator::COPY_ITERATOR,\n+    create_dir::CREATE_DIR,\n+    dbg_macro::DBG_MACRO,\n+    default::DEFAULT_TRAIT_ACCESS,\n+    default::FIELD_REASSIGN_WITH_DEFAULT,\n+    default_numeric_fallback::DEFAULT_NUMERIC_FALLBACK,\n+    dereference::EXPLICIT_DEREF_METHODS,\n+    derivable_impls::DERIVABLE_IMPLS,\n+    derive::DERIVE_HASH_XOR_EQ,\n+    derive::DERIVE_ORD_XOR_PARTIAL_ORD,\n+    derive::EXPL_IMPL_CLONE_ON_COPY,\n+    derive::UNSAFE_DERIVE_DESERIALIZE,\n+    disallowed_method::DISALLOWED_METHOD,\n+    disallowed_script_idents::DISALLOWED_SCRIPT_IDENTS,\n+    disallowed_type::DISALLOWED_TYPE,\n+    doc::DOC_MARKDOWN,\n+    doc::MISSING_ERRORS_DOC,\n+    doc::MISSING_PANICS_DOC,\n+    doc::MISSING_SAFETY_DOC,\n+    doc::NEEDLESS_DOCTEST_MAIN,\n+    double_comparison::DOUBLE_COMPARISONS,\n+    double_parens::DOUBLE_PARENS,\n+    drop_forget_ref::DROP_COPY,\n+    drop_forget_ref::DROP_REF,\n+    drop_forget_ref::FORGET_COPY,\n+    drop_forget_ref::FORGET_REF,\n+    duration_subsec::DURATION_SUBSEC,\n+    else_if_without_else::ELSE_IF_WITHOUT_ELSE,\n+    empty_enum::EMPTY_ENUM,\n+    entry::MAP_ENTRY,\n+    enum_clike::ENUM_CLIKE_UNPORTABLE_VARIANT,\n+    enum_variants::ENUM_VARIANT_NAMES,\n+    enum_variants::MODULE_INCEPTION,\n+    enum_variants::MODULE_NAME_REPETITIONS,\n+    eq_op::EQ_OP,\n+    eq_op::OP_REF,\n+    erasing_op::ERASING_OP,\n+    escape::BOXED_LOCAL,\n+    eta_reduction::REDUNDANT_CLOSURE,\n+    eta_reduction::REDUNDANT_CLOSURE_FOR_METHOD_CALLS,\n+    eval_order_dependence::DIVERGING_SUB_EXPRESSION,\n+    eval_order_dependence::EVAL_ORDER_DEPENDENCE,\n+    excessive_bools::FN_PARAMS_EXCESSIVE_BOOLS,\n+    excessive_bools::STRUCT_EXCESSIVE_BOOLS,\n+    exhaustive_items::EXHAUSTIVE_ENUMS,\n+    exhaustive_items::EXHAUSTIVE_STRUCTS,\n+    exit::EXIT,\n+    explicit_write::EXPLICIT_WRITE,\n+    fallible_impl_from::FALLIBLE_IMPL_FROM,\n+    feature_name::NEGATIVE_FEATURE_NAMES,\n+    feature_name::REDUNDANT_FEATURE_NAMES,\n+    float_equality_without_abs::FLOAT_EQUALITY_WITHOUT_ABS,\n+    float_literal::EXCESSIVE_PRECISION,\n+    float_literal::LOSSY_FLOAT_LITERAL,\n+    floating_point_arithmetic::IMPRECISE_FLOPS,\n+    floating_point_arithmetic::SUBOPTIMAL_FLOPS,\n+    format::USELESS_FORMAT,\n+    formatting::POSSIBLE_MISSING_COMMA,\n+    formatting::SUSPICIOUS_ASSIGNMENT_FORMATTING,\n+    formatting::SUSPICIOUS_ELSE_FORMATTING,\n+    formatting::SUSPICIOUS_UNARY_OP_FORMATTING,\n+    from_over_into::FROM_OVER_INTO,\n+    from_str_radix_10::FROM_STR_RADIX_10,\n+    functions::DOUBLE_MUST_USE,\n+    functions::MUST_USE_CANDIDATE,\n+    functions::MUST_USE_UNIT,\n+    functions::NOT_UNSAFE_PTR_ARG_DEREF,\n+    functions::RESULT_UNIT_ERR,\n+    functions::TOO_MANY_ARGUMENTS,\n+    functions::TOO_MANY_LINES,\n+    future_not_send::FUTURE_NOT_SEND,\n+    get_last_with_len::GET_LAST_WITH_LEN,\n+    identity_op::IDENTITY_OP,\n+    if_let_mutex::IF_LET_MUTEX,\n+    if_not_else::IF_NOT_ELSE,\n+    if_then_panic::IF_THEN_PANIC,\n+    if_then_some_else_none::IF_THEN_SOME_ELSE_NONE,\n+    implicit_hasher::IMPLICIT_HASHER,\n+    implicit_return::IMPLICIT_RETURN,\n+    implicit_saturating_sub::IMPLICIT_SATURATING_SUB,\n+    inconsistent_struct_constructor::INCONSISTENT_STRUCT_CONSTRUCTOR,\n+    indexing_slicing::INDEXING_SLICING,\n+    indexing_slicing::OUT_OF_BOUNDS_INDEXING,\n+    infinite_iter::INFINITE_ITER,\n+    infinite_iter::MAYBE_INFINITE_ITER,\n+    inherent_impl::MULTIPLE_INHERENT_IMPL,\n+    inherent_to_string::INHERENT_TO_STRING,\n+    inherent_to_string::INHERENT_TO_STRING_SHADOW_DISPLAY,\n+    inline_fn_without_body::INLINE_FN_WITHOUT_BODY,\n+    int_plus_one::INT_PLUS_ONE,\n+    integer_division::INTEGER_DIVISION,\n+    invalid_upcast_comparisons::INVALID_UPCAST_COMPARISONS,\n+    items_after_statements::ITEMS_AFTER_STATEMENTS,\n+    iter_not_returning_iterator::ITER_NOT_RETURNING_ITERATOR,\n+    large_const_arrays::LARGE_CONST_ARRAYS,\n+    large_enum_variant::LARGE_ENUM_VARIANT,\n+    large_stack_arrays::LARGE_STACK_ARRAYS,\n+    len_zero::COMPARISON_TO_EMPTY,\n+    len_zero::LEN_WITHOUT_IS_EMPTY,\n+    len_zero::LEN_ZERO,\n+    let_if_seq::USELESS_LET_IF_SEQ,\n+    let_underscore::LET_UNDERSCORE_DROP,\n+    let_underscore::LET_UNDERSCORE_LOCK,\n+    let_underscore::LET_UNDERSCORE_MUST_USE,\n+    lifetimes::EXTRA_UNUSED_LIFETIMES,\n+    lifetimes::NEEDLESS_LIFETIMES,\n+    literal_representation::DECIMAL_LITERAL_REPRESENTATION,\n+    literal_representation::INCONSISTENT_DIGIT_GROUPING,\n+    literal_representation::LARGE_DIGIT_GROUPS,\n+    literal_representation::MISTYPED_LITERAL_SUFFIXES,\n+    literal_representation::UNREADABLE_LITERAL,\n+    literal_representation::UNUSUAL_BYTE_GROUPINGS,\n+    loops::EMPTY_LOOP,\n+    loops::EXPLICIT_COUNTER_LOOP,\n+    loops::EXPLICIT_INTO_ITER_LOOP,\n+    loops::EXPLICIT_ITER_LOOP,\n+    loops::FOR_KV_MAP,\n+    loops::FOR_LOOPS_OVER_FALLIBLES,\n+    loops::ITER_NEXT_LOOP,\n+    loops::MANUAL_FLATTEN,\n+    loops::MANUAL_MEMCPY,\n+    loops::MUT_RANGE_BOUND,\n+    loops::NEEDLESS_COLLECT,\n+    loops::NEEDLESS_RANGE_LOOP,\n+    loops::NEVER_LOOP,\n+    loops::SAME_ITEM_PUSH,\n+    loops::SINGLE_ELEMENT_LOOP,\n+    loops::WHILE_IMMUTABLE_CONDITION,\n+    loops::WHILE_LET_LOOP,\n+    loops::WHILE_LET_ON_ITERATOR,\n+    macro_use::MACRO_USE_IMPORTS,\n+    main_recursion::MAIN_RECURSION,\n+    manual_async_fn::MANUAL_ASYNC_FN,\n+    manual_map::MANUAL_MAP,\n+    manual_non_exhaustive::MANUAL_NON_EXHAUSTIVE,\n+    manual_ok_or::MANUAL_OK_OR,\n+    manual_strip::MANUAL_STRIP,\n+    manual_unwrap_or::MANUAL_UNWRAP_OR,\n+    map_clone::MAP_CLONE,\n+    map_err_ignore::MAP_ERR_IGNORE,\n+    map_unit_fn::OPTION_MAP_UNIT_FN,\n+    map_unit_fn::RESULT_MAP_UNIT_FN,\n+    match_on_vec_items::MATCH_ON_VEC_ITEMS,\n+    match_result_ok::MATCH_RESULT_OK,\n+    matches::INFALLIBLE_DESTRUCTURING_MATCH,\n+    matches::MATCH_AS_REF,\n+    matches::MATCH_BOOL,\n+    matches::MATCH_LIKE_MATCHES_MACRO,\n+    matches::MATCH_OVERLAPPING_ARM,\n+    matches::MATCH_REF_PATS,\n+    matches::MATCH_SAME_ARMS,\n+    matches::MATCH_SINGLE_BINDING,\n+    matches::MATCH_WILDCARD_FOR_SINGLE_VARIANTS,\n+    matches::MATCH_WILD_ERR_ARM,\n+    matches::REDUNDANT_PATTERN_MATCHING,\n+    matches::REST_PAT_IN_FULLY_BOUND_STRUCTS,\n+    matches::SINGLE_MATCH,\n+    matches::SINGLE_MATCH_ELSE,\n+    matches::WILDCARD_ENUM_MATCH_ARM,\n+    matches::WILDCARD_IN_OR_PATTERNS,\n+    mem_discriminant::MEM_DISCRIMINANT_NON_ENUM,\n+    mem_forget::MEM_FORGET,\n+    mem_replace::MEM_REPLACE_OPTION_WITH_NONE,\n+    mem_replace::MEM_REPLACE_WITH_DEFAULT,\n+    mem_replace::MEM_REPLACE_WITH_UNINIT,\n+    methods::BIND_INSTEAD_OF_MAP,\n+    methods::BYTES_NTH,\n+    methods::CHARS_LAST_CMP,\n+    methods::CHARS_NEXT_CMP,\n+    methods::CLONED_INSTEAD_OF_COPIED,\n+    methods::CLONE_DOUBLE_REF,\n+    methods::CLONE_ON_COPY,\n+    methods::CLONE_ON_REF_PTR,\n+    methods::EXPECT_FUN_CALL,\n+    methods::EXPECT_USED,\n+    methods::EXTEND_WITH_DRAIN,\n+    methods::FILETYPE_IS_FILE,\n+    methods::FILTER_MAP_IDENTITY,\n+    methods::FILTER_MAP_NEXT,\n+    methods::FILTER_NEXT,\n+    methods::FLAT_MAP_IDENTITY,\n+    methods::FLAT_MAP_OPTION,\n+    methods::FROM_ITER_INSTEAD_OF_COLLECT,\n+    methods::GET_UNWRAP,\n+    methods::IMPLICIT_CLONE,\n+    methods::INEFFICIENT_TO_STRING,\n+    methods::INSPECT_FOR_EACH,\n+    methods::INTO_ITER_ON_REF,\n+    methods::ITERATOR_STEP_BY_ZERO,\n+    methods::ITER_CLONED_COLLECT,\n+    methods::ITER_COUNT,\n+    methods::ITER_NEXT_SLICE,\n+    methods::ITER_NTH,\n+    methods::ITER_NTH_ZERO,\n+    methods::ITER_SKIP_NEXT,\n+    methods::MANUAL_FILTER_MAP,\n+    methods::MANUAL_FIND_MAP,\n+    methods::MANUAL_SATURATING_ARITHMETIC,\n+    methods::MANUAL_SPLIT_ONCE,\n+    methods::MANUAL_STR_REPEAT,\n+    methods::MAP_COLLECT_RESULT_UNIT,\n+    methods::MAP_FLATTEN,\n+    methods::MAP_IDENTITY,\n+    methods::MAP_UNWRAP_OR,\n+    methods::NEW_RET_NO_SELF,\n+    methods::OK_EXPECT,\n+    methods::OPTION_AS_REF_DEREF,\n+    methods::OPTION_FILTER_MAP,\n+    methods::OPTION_MAP_OR_NONE,\n+    methods::OR_FUN_CALL,\n+    methods::RESULT_MAP_OR_INTO_OPTION,\n+    methods::SEARCH_IS_SOME,\n+    methods::SHOULD_IMPLEMENT_TRAIT,\n+    methods::SINGLE_CHAR_ADD_STR,\n+    methods::SINGLE_CHAR_PATTERN,\n+    methods::SKIP_WHILE_NEXT,\n+    methods::STRING_EXTEND_CHARS,\n+    methods::SUSPICIOUS_MAP,\n+    methods::SUSPICIOUS_SPLITN,\n+    methods::UNINIT_ASSUMED_INIT,\n+    methods::UNNECESSARY_FILTER_MAP,\n+    methods::UNNECESSARY_FOLD,\n+    methods::UNNECESSARY_LAZY_EVALUATIONS,\n+    methods::UNWRAP_OR_ELSE_DEFAULT,\n+    methods::UNWRAP_USED,\n+    methods::USELESS_ASREF,\n+    methods::WRONG_SELF_CONVENTION,\n+    methods::ZST_OFFSET,\n+    minmax::MIN_MAX,\n+    misc::CMP_NAN,\n+    misc::CMP_OWNED,\n+    misc::FLOAT_CMP,\n+    misc::FLOAT_CMP_CONST,\n+    misc::MODULO_ONE,\n+    misc::SHORT_CIRCUIT_STATEMENT,\n+    misc::TOPLEVEL_REF_ARG,\n+    misc::USED_UNDERSCORE_BINDING,\n+    misc::ZERO_PTR,\n+    misc_early::BUILTIN_TYPE_SHADOW,\n+    misc_early::DOUBLE_NEG,\n+    misc_early::DUPLICATE_UNDERSCORE_ARGUMENT,\n+    misc_early::MIXED_CASE_HEX_LITERALS,\n+    misc_early::REDUNDANT_PATTERN,\n+    misc_early::UNNEEDED_FIELD_PATTERN,\n+    misc_early::UNNEEDED_WILDCARD_PATTERN,\n+    misc_early::UNSEPARATED_LITERAL_SUFFIX,\n+    misc_early::ZERO_PREFIXED_LITERAL,\n+    missing_const_for_fn::MISSING_CONST_FOR_FN,\n+    missing_doc::MISSING_DOCS_IN_PRIVATE_ITEMS,\n+    missing_enforced_import_rename::MISSING_ENFORCED_IMPORT_RENAMES,\n+    missing_inline::MISSING_INLINE_IN_PUBLIC_ITEMS,\n+    module_style::MOD_MODULE_FILES,\n+    module_style::SELF_NAMED_MODULE_FILES,\n+    modulo_arithmetic::MODULO_ARITHMETIC,\n+    multiple_crate_versions::MULTIPLE_CRATE_VERSIONS,\n+    mut_key::MUTABLE_KEY_TYPE,\n+    mut_mut::MUT_MUT,\n+    mut_mutex_lock::MUT_MUTEX_LOCK,\n+    mut_reference::UNNECESSARY_MUT_PASSED,\n+    mutable_debug_assertion::DEBUG_ASSERT_WITH_MUT_CALL,\n+    mutex_atomic::MUTEX_ATOMIC,\n+    mutex_atomic::MUTEX_INTEGER,\n+    needless_arbitrary_self_type::NEEDLESS_ARBITRARY_SELF_TYPE,\n+    needless_bitwise_bool::NEEDLESS_BITWISE_BOOL,\n+    needless_bool::BOOL_COMPARISON,\n+    needless_bool::NEEDLESS_BOOL,\n+    needless_borrow::NEEDLESS_BORROW,\n+    needless_borrow::REF_BINDING_TO_REFERENCE,\n+    needless_borrowed_ref::NEEDLESS_BORROWED_REFERENCE,\n+    needless_continue::NEEDLESS_CONTINUE,\n+    needless_for_each::NEEDLESS_FOR_EACH,\n+    needless_option_as_deref::NEEDLESS_OPTION_AS_DEREF,\n+    needless_pass_by_value::NEEDLESS_PASS_BY_VALUE,\n+    needless_question_mark::NEEDLESS_QUESTION_MARK,\n+    needless_update::NEEDLESS_UPDATE,\n+    neg_cmp_op_on_partial_ord::NEG_CMP_OP_ON_PARTIAL_ORD,\n+    neg_multiply::NEG_MULTIPLY,\n+    new_without_default::NEW_WITHOUT_DEFAULT,\n+    no_effect::NO_EFFECT,\n+    no_effect::UNNECESSARY_OPERATION,\n+    non_copy_const::BORROW_INTERIOR_MUTABLE_CONST,\n+    non_copy_const::DECLARE_INTERIOR_MUTABLE_CONST,\n+    non_expressive_names::JUST_UNDERSCORES_AND_DIGITS,\n+    non_expressive_names::MANY_SINGLE_CHAR_NAMES,\n+    non_expressive_names::SIMILAR_NAMES,\n+    non_octal_unix_permissions::NON_OCTAL_UNIX_PERMISSIONS,\n+    nonstandard_macro_braces::NONSTANDARD_MACRO_BRACES,\n+    open_options::NONSENSICAL_OPEN_OPTIONS,\n+    option_env_unwrap::OPTION_ENV_UNWRAP,\n+    option_if_let_else::OPTION_IF_LET_ELSE,\n+    overflow_check_conditional::OVERFLOW_CHECK_CONDITIONAL,\n+    panic_in_result_fn::PANIC_IN_RESULT_FN,\n+    panic_unimplemented::PANIC,\n+    panic_unimplemented::TODO,\n+    panic_unimplemented::UNIMPLEMENTED,\n+    panic_unimplemented::UNREACHABLE,\n+    partialeq_ne_impl::PARTIALEQ_NE_IMPL,\n+    pass_by_ref_or_value::LARGE_TYPES_PASSED_BY_VALUE,\n+    pass_by_ref_or_value::TRIVIALLY_COPY_PASS_BY_REF,\n+    path_buf_push_overwrite::PATH_BUF_PUSH_OVERWRITE,\n+    pattern_type_mismatch::PATTERN_TYPE_MISMATCH,\n+    precedence::PRECEDENCE,\n+    ptr::CMP_NULL,\n+    ptr::INVALID_NULL_PTR_USAGE,\n+    ptr::MUT_FROM_REF,\n+    ptr::PTR_ARG,\n+    ptr_eq::PTR_EQ,\n+    ptr_offset_with_cast::PTR_OFFSET_WITH_CAST,\n+    question_mark::QUESTION_MARK,\n+    ranges::MANUAL_RANGE_CONTAINS,\n+    ranges::RANGE_MINUS_ONE,\n+    ranges::RANGE_PLUS_ONE,\n+    ranges::RANGE_ZIP_WITH_LEN,\n+    ranges::REVERSED_EMPTY_RANGES,\n+    redundant_clone::REDUNDANT_CLONE,\n+    redundant_closure_call::REDUNDANT_CLOSURE_CALL,\n+    redundant_else::REDUNDANT_ELSE,\n+    redundant_field_names::REDUNDANT_FIELD_NAMES,\n+    redundant_pub_crate::REDUNDANT_PUB_CRATE,\n+    redundant_slicing::REDUNDANT_SLICING,\n+    redundant_static_lifetimes::REDUNDANT_STATIC_LIFETIMES,\n+    ref_option_ref::REF_OPTION_REF,\n+    reference::DEREF_ADDROF,\n+    reference::REF_IN_DEREF,\n+    regex::INVALID_REGEX,\n+    regex::TRIVIAL_REGEX,\n+    repeat_once::REPEAT_ONCE,\n+    returns::LET_AND_RETURN,\n+    returns::NEEDLESS_RETURN,\n+    same_name_method::SAME_NAME_METHOD,\n+    self_assignment::SELF_ASSIGNMENT,\n+    self_named_constructors::SELF_NAMED_CONSTRUCTORS,\n+    semicolon_if_nothing_returned::SEMICOLON_IF_NOTHING_RETURNED,\n+    serde_api::SERDE_API_MISUSE,\n+    shadow::SHADOW_REUSE,\n+    shadow::SHADOW_SAME,\n+    shadow::SHADOW_UNRELATED,\n+    single_component_path_imports::SINGLE_COMPONENT_PATH_IMPORTS,\n+    size_of_in_element_count::SIZE_OF_IN_ELEMENT_COUNT,\n+    slow_vector_initialization::SLOW_VECTOR_INITIALIZATION,\n+    stable_sort_primitive::STABLE_SORT_PRIMITIVE,\n+    strings::STRING_ADD,\n+    strings::STRING_ADD_ASSIGN,\n+    strings::STRING_FROM_UTF8_AS_BYTES,\n+    strings::STRING_LIT_AS_BYTES,\n+    strings::STRING_TO_STRING,\n+    strings::STR_TO_STRING,\n+    strlen_on_c_strings::STRLEN_ON_C_STRINGS,\n+    suspicious_operation_groupings::SUSPICIOUS_OPERATION_GROUPINGS,\n+    suspicious_trait_impl::SUSPICIOUS_ARITHMETIC_IMPL,\n+    suspicious_trait_impl::SUSPICIOUS_OP_ASSIGN_IMPL,\n+    swap::ALMOST_SWAPPED,\n+    swap::MANUAL_SWAP,\n+    tabs_in_doc_comments::TABS_IN_DOC_COMMENTS,\n+    temporary_assignment::TEMPORARY_ASSIGNMENT,\n+    to_digit_is_some::TO_DIGIT_IS_SOME,\n+    to_string_in_display::TO_STRING_IN_DISPLAY,\n+    trait_bounds::TRAIT_DUPLICATION_IN_BOUNDS,\n+    trait_bounds::TYPE_REPETITION_IN_BOUNDS,\n+    transmute::CROSSPOINTER_TRANSMUTE,\n+    transmute::TRANSMUTES_EXPRESSIBLE_AS_PTR_CASTS,\n+    transmute::TRANSMUTE_BYTES_TO_STR,\n+    transmute::TRANSMUTE_FLOAT_TO_INT,\n+    transmute::TRANSMUTE_INT_TO_BOOL,\n+    transmute::TRANSMUTE_INT_TO_CHAR,\n+    transmute::TRANSMUTE_INT_TO_FLOAT,\n+    transmute::TRANSMUTE_PTR_TO_PTR,\n+    transmute::TRANSMUTE_PTR_TO_REF,\n+    transmute::UNSOUND_COLLECTION_TRANSMUTE,\n+    transmute::USELESS_TRANSMUTE,\n+    transmute::WRONG_TRANSMUTE,\n+    transmuting_null::TRANSMUTING_NULL,\n+    try_err::TRY_ERR,\n+    types::BORROWED_BOX,\n+    types::BOX_COLLECTION,\n+    types::LINKEDLIST,\n+    types::OPTION_OPTION,\n+    types::RC_BUFFER,\n+    types::RC_MUTEX,\n+    types::REDUNDANT_ALLOCATION,\n+    types::TYPE_COMPLEXITY,\n+    types::VEC_BOX,\n+    undropped_manually_drops::UNDROPPED_MANUALLY_DROPS,\n+    unicode::INVISIBLE_CHARACTERS,\n+    unicode::NON_ASCII_LITERAL,\n+    unicode::UNICODE_NOT_NFC,\n+    unit_return_expecting_ord::UNIT_RETURN_EXPECTING_ORD,\n+    unit_types::LET_UNIT_VALUE,\n+    unit_types::UNIT_ARG,\n+    unit_types::UNIT_CMP,\n+    unnamed_address::FN_ADDRESS_COMPARISONS,\n+    unnamed_address::VTABLE_ADDRESS_COMPARISONS,\n+    unnecessary_self_imports::UNNECESSARY_SELF_IMPORTS,\n+    unnecessary_sort_by::UNNECESSARY_SORT_BY,\n+    unnecessary_wraps::UNNECESSARY_WRAPS,\n+    unnested_or_patterns::UNNESTED_OR_PATTERNS,\n+    unsafe_removed_from_name::UNSAFE_REMOVED_FROM_NAME,\n+    unused_async::UNUSED_ASYNC,\n+    unused_io_amount::UNUSED_IO_AMOUNT,\n+    unused_self::UNUSED_SELF,\n+    unused_unit::UNUSED_UNIT,\n+    unwrap::PANICKING_UNWRAP,\n+    unwrap::UNNECESSARY_UNWRAP,\n+    unwrap_in_result::UNWRAP_IN_RESULT,\n+    upper_case_acronyms::UPPER_CASE_ACRONYMS,\n+    use_self::USE_SELF,\n+    useless_conversion::USELESS_CONVERSION,\n+    vec::USELESS_VEC,\n+    vec_init_then_push::VEC_INIT_THEN_PUSH,\n+    vec_resize_to_zero::VEC_RESIZE_TO_ZERO,\n+    verbose_file_reads::VERBOSE_FILE_READS,\n+    wildcard_dependencies::WILDCARD_DEPENDENCIES,\n+    wildcard_imports::ENUM_GLOB_USE,\n+    wildcard_imports::WILDCARD_IMPORTS,\n+    write::PRINTLN_EMPTY_STRING,\n+    write::PRINT_LITERAL,\n+    write::PRINT_STDERR,\n+    write::PRINT_STDOUT,\n+    write::PRINT_WITH_NEWLINE,\n+    write::USE_DEBUG,\n+    write::WRITELN_EMPTY_STRING,\n+    write::WRITE_LITERAL,\n+    write::WRITE_WITH_NEWLINE,\n+    zero_div_zero::ZERO_DIVIDED_BY_ZERO,\n+    zero_sized_map_values::ZERO_SIZED_MAP_VALUES,\n+])"}, {"sha": "b082f577a52fc7036a0ba4abbb7f19c1ccc9e7fa", "filename": "clippy_lints/src/lib.register_nursery.rs", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_nursery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_nursery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_nursery.rs?ref=e6747df5cd4232d26747a556c263d0a5d9c72414", "patch": "@@ -3,26 +3,26 @@\n // Manual edits will be overwritten.\n \n store.register_group(true, \"clippy::nursery\", Some(\"clippy_nursery\"), vec![\n-LintId::of(attrs::EMPTY_LINE_AFTER_OUTER_ATTR),\n-LintId::of(cognitive_complexity::COGNITIVE_COMPLEXITY),\n-LintId::of(copies::BRANCHES_SHARING_CODE),\n-LintId::of(disallowed_method::DISALLOWED_METHOD),\n-LintId::of(disallowed_type::DISALLOWED_TYPE),\n-LintId::of(fallible_impl_from::FALLIBLE_IMPL_FROM),\n-LintId::of(floating_point_arithmetic::IMPRECISE_FLOPS),\n-LintId::of(floating_point_arithmetic::SUBOPTIMAL_FLOPS),\n-LintId::of(future_not_send::FUTURE_NOT_SEND),\n-LintId::of(let_if_seq::USELESS_LET_IF_SEQ),\n-LintId::of(missing_const_for_fn::MISSING_CONST_FOR_FN),\n-LintId::of(mutable_debug_assertion::DEBUG_ASSERT_WITH_MUT_CALL),\n-LintId::of(mutex_atomic::MUTEX_INTEGER),\n-LintId::of(nonstandard_macro_braces::NONSTANDARD_MACRO_BRACES),\n-LintId::of(option_if_let_else::OPTION_IF_LET_ELSE),\n-LintId::of(path_buf_push_overwrite::PATH_BUF_PUSH_OVERWRITE),\n-LintId::of(redundant_pub_crate::REDUNDANT_PUB_CRATE),\n-LintId::of(regex::TRIVIAL_REGEX),\n-LintId::of(strings::STRING_LIT_AS_BYTES),\n-LintId::of(suspicious_operation_groupings::SUSPICIOUS_OPERATION_GROUPINGS),\n-LintId::of(transmute::USELESS_TRANSMUTE),\n-LintId::of(use_self::USE_SELF),\n-])\n\\ No newline at end of file\n+    LintId::of(attrs::EMPTY_LINE_AFTER_OUTER_ATTR),\n+    LintId::of(cognitive_complexity::COGNITIVE_COMPLEXITY),\n+    LintId::of(copies::BRANCHES_SHARING_CODE),\n+    LintId::of(disallowed_method::DISALLOWED_METHOD),\n+    LintId::of(disallowed_type::DISALLOWED_TYPE),\n+    LintId::of(fallible_impl_from::FALLIBLE_IMPL_FROM),\n+    LintId::of(floating_point_arithmetic::IMPRECISE_FLOPS),\n+    LintId::of(floating_point_arithmetic::SUBOPTIMAL_FLOPS),\n+    LintId::of(future_not_send::FUTURE_NOT_SEND),\n+    LintId::of(let_if_seq::USELESS_LET_IF_SEQ),\n+    LintId::of(missing_const_for_fn::MISSING_CONST_FOR_FN),\n+    LintId::of(mutable_debug_assertion::DEBUG_ASSERT_WITH_MUT_CALL),\n+    LintId::of(mutex_atomic::MUTEX_INTEGER),\n+    LintId::of(nonstandard_macro_braces::NONSTANDARD_MACRO_BRACES),\n+    LintId::of(option_if_let_else::OPTION_IF_LET_ELSE),\n+    LintId::of(path_buf_push_overwrite::PATH_BUF_PUSH_OVERWRITE),\n+    LintId::of(redundant_pub_crate::REDUNDANT_PUB_CRATE),\n+    LintId::of(regex::TRIVIAL_REGEX),\n+    LintId::of(strings::STRING_LIT_AS_BYTES),\n+    LintId::of(suspicious_operation_groupings::SUSPICIOUS_OPERATION_GROUPINGS),\n+    LintId::of(transmute::USELESS_TRANSMUTE),\n+    LintId::of(use_self::USE_SELF),\n+])"}, {"sha": "334e058c4ae5ad6a39566ca49f8c2202c68e596c", "filename": "clippy_lints/src/lib.register_pedantic.rs", "status": "modified", "additions": 96, "deletions": 96, "changes": 192, "blob_url": "https://github.com/rust-lang/rust/blob/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_pedantic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_pedantic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_pedantic.rs?ref=e6747df5cd4232d26747a556c263d0a5d9c72414", "patch": "@@ -3,99 +3,99 @@\n // Manual edits will be overwritten.\n \n store.register_group(true, \"clippy::pedantic\", Some(\"clippy_pedantic\"), vec![\n-LintId::of(attrs::INLINE_ALWAYS),\n-LintId::of(await_holding_invalid::AWAIT_HOLDING_LOCK),\n-LintId::of(await_holding_invalid::AWAIT_HOLDING_REFCELL_REF),\n-LintId::of(bit_mask::VERBOSE_BIT_MASK),\n-LintId::of(bytecount::NAIVE_BYTECOUNT),\n-LintId::of(case_sensitive_file_extension_comparisons::CASE_SENSITIVE_FILE_EXTENSION_COMPARISONS),\n-LintId::of(casts::CAST_LOSSLESS),\n-LintId::of(casts::CAST_POSSIBLE_TRUNCATION),\n-LintId::of(casts::CAST_POSSIBLE_WRAP),\n-LintId::of(casts::CAST_PRECISION_LOSS),\n-LintId::of(casts::CAST_PTR_ALIGNMENT),\n-LintId::of(casts::CAST_SIGN_LOSS),\n-LintId::of(casts::PTR_AS_PTR),\n-LintId::of(checked_conversions::CHECKED_CONVERSIONS),\n-LintId::of(copies::SAME_FUNCTIONS_IN_IF_CONDITION),\n-LintId::of(copy_iterator::COPY_ITERATOR),\n-LintId::of(default::DEFAULT_TRAIT_ACCESS),\n-LintId::of(dereference::EXPLICIT_DEREF_METHODS),\n-LintId::of(derive::EXPL_IMPL_CLONE_ON_COPY),\n-LintId::of(derive::UNSAFE_DERIVE_DESERIALIZE),\n-LintId::of(doc::DOC_MARKDOWN),\n-LintId::of(doc::MISSING_ERRORS_DOC),\n-LintId::of(doc::MISSING_PANICS_DOC),\n-LintId::of(empty_enum::EMPTY_ENUM),\n-LintId::of(enum_variants::MODULE_NAME_REPETITIONS),\n-LintId::of(eta_reduction::REDUNDANT_CLOSURE_FOR_METHOD_CALLS),\n-LintId::of(excessive_bools::FN_PARAMS_EXCESSIVE_BOOLS),\n-LintId::of(excessive_bools::STRUCT_EXCESSIVE_BOOLS),\n-LintId::of(functions::MUST_USE_CANDIDATE),\n-LintId::of(functions::TOO_MANY_LINES),\n-LintId::of(if_not_else::IF_NOT_ELSE),\n-LintId::of(implicit_hasher::IMPLICIT_HASHER),\n-LintId::of(implicit_saturating_sub::IMPLICIT_SATURATING_SUB),\n-LintId::of(inconsistent_struct_constructor::INCONSISTENT_STRUCT_CONSTRUCTOR),\n-LintId::of(infinite_iter::MAYBE_INFINITE_ITER),\n-LintId::of(invalid_upcast_comparisons::INVALID_UPCAST_COMPARISONS),\n-LintId::of(items_after_statements::ITEMS_AFTER_STATEMENTS),\n-LintId::of(iter_not_returning_iterator::ITER_NOT_RETURNING_ITERATOR),\n-LintId::of(large_stack_arrays::LARGE_STACK_ARRAYS),\n-LintId::of(let_underscore::LET_UNDERSCORE_DROP),\n-LintId::of(literal_representation::LARGE_DIGIT_GROUPS),\n-LintId::of(literal_representation::UNREADABLE_LITERAL),\n-LintId::of(loops::EXPLICIT_INTO_ITER_LOOP),\n-LintId::of(loops::EXPLICIT_ITER_LOOP),\n-LintId::of(macro_use::MACRO_USE_IMPORTS),\n-LintId::of(manual_ok_or::MANUAL_OK_OR),\n-LintId::of(match_on_vec_items::MATCH_ON_VEC_ITEMS),\n-LintId::of(matches::MATCH_BOOL),\n-LintId::of(matches::MATCH_SAME_ARMS),\n-LintId::of(matches::MATCH_WILDCARD_FOR_SINGLE_VARIANTS),\n-LintId::of(matches::MATCH_WILD_ERR_ARM),\n-LintId::of(matches::SINGLE_MATCH_ELSE),\n-LintId::of(methods::CLONED_INSTEAD_OF_COPIED),\n-LintId::of(methods::FILTER_MAP_NEXT),\n-LintId::of(methods::FLAT_MAP_OPTION),\n-LintId::of(methods::FROM_ITER_INSTEAD_OF_COLLECT),\n-LintId::of(methods::IMPLICIT_CLONE),\n-LintId::of(methods::INEFFICIENT_TO_STRING),\n-LintId::of(methods::MAP_FLATTEN),\n-LintId::of(methods::MAP_UNWRAP_OR),\n-LintId::of(misc::FLOAT_CMP),\n-LintId::of(misc::USED_UNDERSCORE_BINDING),\n-LintId::of(misc_early::UNSEPARATED_LITERAL_SUFFIX),\n-LintId::of(mut_mut::MUT_MUT),\n-LintId::of(needless_bitwise_bool::NEEDLESS_BITWISE_BOOL),\n-LintId::of(needless_borrow::REF_BINDING_TO_REFERENCE),\n-LintId::of(needless_continue::NEEDLESS_CONTINUE),\n-LintId::of(needless_for_each::NEEDLESS_FOR_EACH),\n-LintId::of(needless_pass_by_value::NEEDLESS_PASS_BY_VALUE),\n-LintId::of(non_expressive_names::MANY_SINGLE_CHAR_NAMES),\n-LintId::of(non_expressive_names::SIMILAR_NAMES),\n-LintId::of(pass_by_ref_or_value::LARGE_TYPES_PASSED_BY_VALUE),\n-LintId::of(pass_by_ref_or_value::TRIVIALLY_COPY_PASS_BY_REF),\n-LintId::of(ranges::RANGE_MINUS_ONE),\n-LintId::of(ranges::RANGE_PLUS_ONE),\n-LintId::of(redundant_else::REDUNDANT_ELSE),\n-LintId::of(ref_option_ref::REF_OPTION_REF),\n-LintId::of(semicolon_if_nothing_returned::SEMICOLON_IF_NOTHING_RETURNED),\n-LintId::of(shadow::SHADOW_UNRELATED),\n-LintId::of(strings::STRING_ADD_ASSIGN),\n-LintId::of(trait_bounds::TRAIT_DUPLICATION_IN_BOUNDS),\n-LintId::of(trait_bounds::TYPE_REPETITION_IN_BOUNDS),\n-LintId::of(transmute::TRANSMUTE_PTR_TO_PTR),\n-LintId::of(types::LINKEDLIST),\n-LintId::of(types::OPTION_OPTION),\n-LintId::of(unicode::NON_ASCII_LITERAL),\n-LintId::of(unicode::UNICODE_NOT_NFC),\n-LintId::of(unit_types::LET_UNIT_VALUE),\n-LintId::of(unnecessary_wraps::UNNECESSARY_WRAPS),\n-LintId::of(unnested_or_patterns::UNNESTED_OR_PATTERNS),\n-LintId::of(unused_async::UNUSED_ASYNC),\n-LintId::of(unused_self::UNUSED_SELF),\n-LintId::of(wildcard_imports::ENUM_GLOB_USE),\n-LintId::of(wildcard_imports::WILDCARD_IMPORTS),\n-LintId::of(zero_sized_map_values::ZERO_SIZED_MAP_VALUES),\n-])\n\\ No newline at end of file\n+    LintId::of(attrs::INLINE_ALWAYS),\n+    LintId::of(await_holding_invalid::AWAIT_HOLDING_LOCK),\n+    LintId::of(await_holding_invalid::AWAIT_HOLDING_REFCELL_REF),\n+    LintId::of(bit_mask::VERBOSE_BIT_MASK),\n+    LintId::of(bytecount::NAIVE_BYTECOUNT),\n+    LintId::of(case_sensitive_file_extension_comparisons::CASE_SENSITIVE_FILE_EXTENSION_COMPARISONS),\n+    LintId::of(casts::CAST_LOSSLESS),\n+    LintId::of(casts::CAST_POSSIBLE_TRUNCATION),\n+    LintId::of(casts::CAST_POSSIBLE_WRAP),\n+    LintId::of(casts::CAST_PRECISION_LOSS),\n+    LintId::of(casts::CAST_PTR_ALIGNMENT),\n+    LintId::of(casts::CAST_SIGN_LOSS),\n+    LintId::of(casts::PTR_AS_PTR),\n+    LintId::of(checked_conversions::CHECKED_CONVERSIONS),\n+    LintId::of(copies::SAME_FUNCTIONS_IN_IF_CONDITION),\n+    LintId::of(copy_iterator::COPY_ITERATOR),\n+    LintId::of(default::DEFAULT_TRAIT_ACCESS),\n+    LintId::of(dereference::EXPLICIT_DEREF_METHODS),\n+    LintId::of(derive::EXPL_IMPL_CLONE_ON_COPY),\n+    LintId::of(derive::UNSAFE_DERIVE_DESERIALIZE),\n+    LintId::of(doc::DOC_MARKDOWN),\n+    LintId::of(doc::MISSING_ERRORS_DOC),\n+    LintId::of(doc::MISSING_PANICS_DOC),\n+    LintId::of(empty_enum::EMPTY_ENUM),\n+    LintId::of(enum_variants::MODULE_NAME_REPETITIONS),\n+    LintId::of(eta_reduction::REDUNDANT_CLOSURE_FOR_METHOD_CALLS),\n+    LintId::of(excessive_bools::FN_PARAMS_EXCESSIVE_BOOLS),\n+    LintId::of(excessive_bools::STRUCT_EXCESSIVE_BOOLS),\n+    LintId::of(functions::MUST_USE_CANDIDATE),\n+    LintId::of(functions::TOO_MANY_LINES),\n+    LintId::of(if_not_else::IF_NOT_ELSE),\n+    LintId::of(implicit_hasher::IMPLICIT_HASHER),\n+    LintId::of(implicit_saturating_sub::IMPLICIT_SATURATING_SUB),\n+    LintId::of(inconsistent_struct_constructor::INCONSISTENT_STRUCT_CONSTRUCTOR),\n+    LintId::of(infinite_iter::MAYBE_INFINITE_ITER),\n+    LintId::of(invalid_upcast_comparisons::INVALID_UPCAST_COMPARISONS),\n+    LintId::of(items_after_statements::ITEMS_AFTER_STATEMENTS),\n+    LintId::of(iter_not_returning_iterator::ITER_NOT_RETURNING_ITERATOR),\n+    LintId::of(large_stack_arrays::LARGE_STACK_ARRAYS),\n+    LintId::of(let_underscore::LET_UNDERSCORE_DROP),\n+    LintId::of(literal_representation::LARGE_DIGIT_GROUPS),\n+    LintId::of(literal_representation::UNREADABLE_LITERAL),\n+    LintId::of(loops::EXPLICIT_INTO_ITER_LOOP),\n+    LintId::of(loops::EXPLICIT_ITER_LOOP),\n+    LintId::of(macro_use::MACRO_USE_IMPORTS),\n+    LintId::of(manual_ok_or::MANUAL_OK_OR),\n+    LintId::of(match_on_vec_items::MATCH_ON_VEC_ITEMS),\n+    LintId::of(matches::MATCH_BOOL),\n+    LintId::of(matches::MATCH_SAME_ARMS),\n+    LintId::of(matches::MATCH_WILDCARD_FOR_SINGLE_VARIANTS),\n+    LintId::of(matches::MATCH_WILD_ERR_ARM),\n+    LintId::of(matches::SINGLE_MATCH_ELSE),\n+    LintId::of(methods::CLONED_INSTEAD_OF_COPIED),\n+    LintId::of(methods::FILTER_MAP_NEXT),\n+    LintId::of(methods::FLAT_MAP_OPTION),\n+    LintId::of(methods::FROM_ITER_INSTEAD_OF_COLLECT),\n+    LintId::of(methods::IMPLICIT_CLONE),\n+    LintId::of(methods::INEFFICIENT_TO_STRING),\n+    LintId::of(methods::MAP_FLATTEN),\n+    LintId::of(methods::MAP_UNWRAP_OR),\n+    LintId::of(misc::FLOAT_CMP),\n+    LintId::of(misc::USED_UNDERSCORE_BINDING),\n+    LintId::of(misc_early::UNSEPARATED_LITERAL_SUFFIX),\n+    LintId::of(mut_mut::MUT_MUT),\n+    LintId::of(needless_bitwise_bool::NEEDLESS_BITWISE_BOOL),\n+    LintId::of(needless_borrow::REF_BINDING_TO_REFERENCE),\n+    LintId::of(needless_continue::NEEDLESS_CONTINUE),\n+    LintId::of(needless_for_each::NEEDLESS_FOR_EACH),\n+    LintId::of(needless_pass_by_value::NEEDLESS_PASS_BY_VALUE),\n+    LintId::of(non_expressive_names::MANY_SINGLE_CHAR_NAMES),\n+    LintId::of(non_expressive_names::SIMILAR_NAMES),\n+    LintId::of(pass_by_ref_or_value::LARGE_TYPES_PASSED_BY_VALUE),\n+    LintId::of(pass_by_ref_or_value::TRIVIALLY_COPY_PASS_BY_REF),\n+    LintId::of(ranges::RANGE_MINUS_ONE),\n+    LintId::of(ranges::RANGE_PLUS_ONE),\n+    LintId::of(redundant_else::REDUNDANT_ELSE),\n+    LintId::of(ref_option_ref::REF_OPTION_REF),\n+    LintId::of(semicolon_if_nothing_returned::SEMICOLON_IF_NOTHING_RETURNED),\n+    LintId::of(shadow::SHADOW_UNRELATED),\n+    LintId::of(strings::STRING_ADD_ASSIGN),\n+    LintId::of(trait_bounds::TRAIT_DUPLICATION_IN_BOUNDS),\n+    LintId::of(trait_bounds::TYPE_REPETITION_IN_BOUNDS),\n+    LintId::of(transmute::TRANSMUTE_PTR_TO_PTR),\n+    LintId::of(types::LINKEDLIST),\n+    LintId::of(types::OPTION_OPTION),\n+    LintId::of(unicode::NON_ASCII_LITERAL),\n+    LintId::of(unicode::UNICODE_NOT_NFC),\n+    LintId::of(unit_types::LET_UNIT_VALUE),\n+    LintId::of(unnecessary_wraps::UNNECESSARY_WRAPS),\n+    LintId::of(unnested_or_patterns::UNNESTED_OR_PATTERNS),\n+    LintId::of(unused_async::UNUSED_ASYNC),\n+    LintId::of(unused_self::UNUSED_SELF),\n+    LintId::of(wildcard_imports::ENUM_GLOB_USE),\n+    LintId::of(wildcard_imports::WILDCARD_IMPORTS),\n+    LintId::of(zero_sized_map_values::ZERO_SIZED_MAP_VALUES),\n+])"}, {"sha": "5432345760bc3242126b9f0978e8d90d44d62e70", "filename": "clippy_lints/src/lib.register_perf.rs", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_perf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_perf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_perf.rs?ref=e6747df5cd4232d26747a556c263d0a5d9c72414", "patch": "@@ -3,25 +3,25 @@\n // Manual edits will be overwritten.\n \n store.register_group(true, \"clippy::perf\", Some(\"clippy_perf\"), vec![\n-LintId::of(entry::MAP_ENTRY),\n-LintId::of(escape::BOXED_LOCAL),\n-LintId::of(large_const_arrays::LARGE_CONST_ARRAYS),\n-LintId::of(large_enum_variant::LARGE_ENUM_VARIANT),\n-LintId::of(loops::MANUAL_MEMCPY),\n-LintId::of(loops::NEEDLESS_COLLECT),\n-LintId::of(methods::EXPECT_FUN_CALL),\n-LintId::of(methods::EXTEND_WITH_DRAIN),\n-LintId::of(methods::ITER_NTH),\n-LintId::of(methods::MANUAL_STR_REPEAT),\n-LintId::of(methods::OR_FUN_CALL),\n-LintId::of(methods::SINGLE_CHAR_PATTERN),\n-LintId::of(misc::CMP_OWNED),\n-LintId::of(mutex_atomic::MUTEX_ATOMIC),\n-LintId::of(redundant_clone::REDUNDANT_CLONE),\n-LintId::of(slow_vector_initialization::SLOW_VECTOR_INITIALIZATION),\n-LintId::of(stable_sort_primitive::STABLE_SORT_PRIMITIVE),\n-LintId::of(types::BOX_COLLECTION),\n-LintId::of(types::REDUNDANT_ALLOCATION),\n-LintId::of(vec::USELESS_VEC),\n-LintId::of(vec_init_then_push::VEC_INIT_THEN_PUSH),\n-])\n\\ No newline at end of file\n+    LintId::of(entry::MAP_ENTRY),\n+    LintId::of(escape::BOXED_LOCAL),\n+    LintId::of(large_const_arrays::LARGE_CONST_ARRAYS),\n+    LintId::of(large_enum_variant::LARGE_ENUM_VARIANT),\n+    LintId::of(loops::MANUAL_MEMCPY),\n+    LintId::of(loops::NEEDLESS_COLLECT),\n+    LintId::of(methods::EXPECT_FUN_CALL),\n+    LintId::of(methods::EXTEND_WITH_DRAIN),\n+    LintId::of(methods::ITER_NTH),\n+    LintId::of(methods::MANUAL_STR_REPEAT),\n+    LintId::of(methods::OR_FUN_CALL),\n+    LintId::of(methods::SINGLE_CHAR_PATTERN),\n+    LintId::of(misc::CMP_OWNED),\n+    LintId::of(mutex_atomic::MUTEX_ATOMIC),\n+    LintId::of(redundant_clone::REDUNDANT_CLONE),\n+    LintId::of(slow_vector_initialization::SLOW_VECTOR_INITIALIZATION),\n+    LintId::of(stable_sort_primitive::STABLE_SORT_PRIMITIVE),\n+    LintId::of(types::BOX_COLLECTION),\n+    LintId::of(types::REDUNDANT_ALLOCATION),\n+    LintId::of(vec::USELESS_VEC),\n+    LintId::of(vec_init_then_push::VEC_INIT_THEN_PUSH),\n+])"}, {"sha": "530662dfc0cf52ca2228df3f948f7a9764df0b02", "filename": "clippy_lints/src/lib.register_restriction.rs", "status": "modified", "additions": 59, "deletions": 59, "changes": 118, "blob_url": "https://github.com/rust-lang/rust/blob/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_restriction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_restriction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_restriction.rs?ref=e6747df5cd4232d26747a556c263d0a5d9c72414", "patch": "@@ -3,62 +3,62 @@\n // Manual edits will be overwritten.\n \n store.register_group(true, \"clippy::restriction\", Some(\"clippy_restriction\"), vec![\n-LintId::of(arithmetic::FLOAT_ARITHMETIC),\n-LintId::of(arithmetic::INTEGER_ARITHMETIC),\n-LintId::of(as_conversions::AS_CONVERSIONS),\n-LintId::of(asm_syntax::INLINE_ASM_X86_ATT_SYNTAX),\n-LintId::of(asm_syntax::INLINE_ASM_X86_INTEL_SYNTAX),\n-LintId::of(create_dir::CREATE_DIR),\n-LintId::of(dbg_macro::DBG_MACRO),\n-LintId::of(default_numeric_fallback::DEFAULT_NUMERIC_FALLBACK),\n-LintId::of(disallowed_script_idents::DISALLOWED_SCRIPT_IDENTS),\n-LintId::of(else_if_without_else::ELSE_IF_WITHOUT_ELSE),\n-LintId::of(exhaustive_items::EXHAUSTIVE_ENUMS),\n-LintId::of(exhaustive_items::EXHAUSTIVE_STRUCTS),\n-LintId::of(exit::EXIT),\n-LintId::of(float_literal::LOSSY_FLOAT_LITERAL),\n-LintId::of(if_then_some_else_none::IF_THEN_SOME_ELSE_NONE),\n-LintId::of(implicit_return::IMPLICIT_RETURN),\n-LintId::of(indexing_slicing::INDEXING_SLICING),\n-LintId::of(inherent_impl::MULTIPLE_INHERENT_IMPL),\n-LintId::of(integer_division::INTEGER_DIVISION),\n-LintId::of(let_underscore::LET_UNDERSCORE_MUST_USE),\n-LintId::of(literal_representation::DECIMAL_LITERAL_REPRESENTATION),\n-LintId::of(map_err_ignore::MAP_ERR_IGNORE),\n-LintId::of(matches::REST_PAT_IN_FULLY_BOUND_STRUCTS),\n-LintId::of(matches::WILDCARD_ENUM_MATCH_ARM),\n-LintId::of(mem_forget::MEM_FORGET),\n-LintId::of(methods::CLONE_ON_REF_PTR),\n-LintId::of(methods::EXPECT_USED),\n-LintId::of(methods::FILETYPE_IS_FILE),\n-LintId::of(methods::GET_UNWRAP),\n-LintId::of(methods::UNWRAP_USED),\n-LintId::of(misc::FLOAT_CMP_CONST),\n-LintId::of(misc_early::UNNEEDED_FIELD_PATTERN),\n-LintId::of(missing_doc::MISSING_DOCS_IN_PRIVATE_ITEMS),\n-LintId::of(missing_enforced_import_rename::MISSING_ENFORCED_IMPORT_RENAMES),\n-LintId::of(missing_inline::MISSING_INLINE_IN_PUBLIC_ITEMS),\n-LintId::of(module_style::MOD_MODULE_FILES),\n-LintId::of(module_style::SELF_NAMED_MODULE_FILES),\n-LintId::of(modulo_arithmetic::MODULO_ARITHMETIC),\n-LintId::of(panic_in_result_fn::PANIC_IN_RESULT_FN),\n-LintId::of(panic_unimplemented::PANIC),\n-LintId::of(panic_unimplemented::TODO),\n-LintId::of(panic_unimplemented::UNIMPLEMENTED),\n-LintId::of(panic_unimplemented::UNREACHABLE),\n-LintId::of(pattern_type_mismatch::PATTERN_TYPE_MISMATCH),\n-LintId::of(same_name_method::SAME_NAME_METHOD),\n-LintId::of(shadow::SHADOW_REUSE),\n-LintId::of(shadow::SHADOW_SAME),\n-LintId::of(strings::STRING_ADD),\n-LintId::of(strings::STRING_TO_STRING),\n-LintId::of(strings::STR_TO_STRING),\n-LintId::of(types::RC_BUFFER),\n-LintId::of(types::RC_MUTEX),\n-LintId::of(unnecessary_self_imports::UNNECESSARY_SELF_IMPORTS),\n-LintId::of(unwrap_in_result::UNWRAP_IN_RESULT),\n-LintId::of(verbose_file_reads::VERBOSE_FILE_READS),\n-LintId::of(write::PRINT_STDERR),\n-LintId::of(write::PRINT_STDOUT),\n-LintId::of(write::USE_DEBUG),\n-])\n\\ No newline at end of file\n+    LintId::of(arithmetic::FLOAT_ARITHMETIC),\n+    LintId::of(arithmetic::INTEGER_ARITHMETIC),\n+    LintId::of(as_conversions::AS_CONVERSIONS),\n+    LintId::of(asm_syntax::INLINE_ASM_X86_ATT_SYNTAX),\n+    LintId::of(asm_syntax::INLINE_ASM_X86_INTEL_SYNTAX),\n+    LintId::of(create_dir::CREATE_DIR),\n+    LintId::of(dbg_macro::DBG_MACRO),\n+    LintId::of(default_numeric_fallback::DEFAULT_NUMERIC_FALLBACK),\n+    LintId::of(disallowed_script_idents::DISALLOWED_SCRIPT_IDENTS),\n+    LintId::of(else_if_without_else::ELSE_IF_WITHOUT_ELSE),\n+    LintId::of(exhaustive_items::EXHAUSTIVE_ENUMS),\n+    LintId::of(exhaustive_items::EXHAUSTIVE_STRUCTS),\n+    LintId::of(exit::EXIT),\n+    LintId::of(float_literal::LOSSY_FLOAT_LITERAL),\n+    LintId::of(if_then_some_else_none::IF_THEN_SOME_ELSE_NONE),\n+    LintId::of(implicit_return::IMPLICIT_RETURN),\n+    LintId::of(indexing_slicing::INDEXING_SLICING),\n+    LintId::of(inherent_impl::MULTIPLE_INHERENT_IMPL),\n+    LintId::of(integer_division::INTEGER_DIVISION),\n+    LintId::of(let_underscore::LET_UNDERSCORE_MUST_USE),\n+    LintId::of(literal_representation::DECIMAL_LITERAL_REPRESENTATION),\n+    LintId::of(map_err_ignore::MAP_ERR_IGNORE),\n+    LintId::of(matches::REST_PAT_IN_FULLY_BOUND_STRUCTS),\n+    LintId::of(matches::WILDCARD_ENUM_MATCH_ARM),\n+    LintId::of(mem_forget::MEM_FORGET),\n+    LintId::of(methods::CLONE_ON_REF_PTR),\n+    LintId::of(methods::EXPECT_USED),\n+    LintId::of(methods::FILETYPE_IS_FILE),\n+    LintId::of(methods::GET_UNWRAP),\n+    LintId::of(methods::UNWRAP_USED),\n+    LintId::of(misc::FLOAT_CMP_CONST),\n+    LintId::of(misc_early::UNNEEDED_FIELD_PATTERN),\n+    LintId::of(missing_doc::MISSING_DOCS_IN_PRIVATE_ITEMS),\n+    LintId::of(missing_enforced_import_rename::MISSING_ENFORCED_IMPORT_RENAMES),\n+    LintId::of(missing_inline::MISSING_INLINE_IN_PUBLIC_ITEMS),\n+    LintId::of(module_style::MOD_MODULE_FILES),\n+    LintId::of(module_style::SELF_NAMED_MODULE_FILES),\n+    LintId::of(modulo_arithmetic::MODULO_ARITHMETIC),\n+    LintId::of(panic_in_result_fn::PANIC_IN_RESULT_FN),\n+    LintId::of(panic_unimplemented::PANIC),\n+    LintId::of(panic_unimplemented::TODO),\n+    LintId::of(panic_unimplemented::UNIMPLEMENTED),\n+    LintId::of(panic_unimplemented::UNREACHABLE),\n+    LintId::of(pattern_type_mismatch::PATTERN_TYPE_MISMATCH),\n+    LintId::of(same_name_method::SAME_NAME_METHOD),\n+    LintId::of(shadow::SHADOW_REUSE),\n+    LintId::of(shadow::SHADOW_SAME),\n+    LintId::of(strings::STRING_ADD),\n+    LintId::of(strings::STRING_TO_STRING),\n+    LintId::of(strings::STR_TO_STRING),\n+    LintId::of(types::RC_BUFFER),\n+    LintId::of(types::RC_MUTEX),\n+    LintId::of(unnecessary_self_imports::UNNECESSARY_SELF_IMPORTS),\n+    LintId::of(unwrap_in_result::UNWRAP_IN_RESULT),\n+    LintId::of(verbose_file_reads::VERBOSE_FILE_READS),\n+    LintId::of(write::PRINT_STDERR),\n+    LintId::of(write::PRINT_STDOUT),\n+    LintId::of(write::USE_DEBUG),\n+])"}, {"sha": "a39c111c5742340d1a0d59723da29d722c8271c6", "filename": "clippy_lints/src/lib.register_style.rs", "status": "modified", "additions": 109, "deletions": 109, "changes": 218, "blob_url": "https://github.com/rust-lang/rust/blob/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_style.rs?ref=e6747df5cd4232d26747a556c263d0a5d9c72414", "patch": "@@ -3,112 +3,112 @@\n // Manual edits will be overwritten.\n \n store.register_group(true, \"clippy::style\", Some(\"clippy_style\"), vec![\n-LintId::of(assertions_on_constants::ASSERTIONS_ON_CONSTANTS),\n-LintId::of(assign_ops::ASSIGN_OP_PATTERN),\n-LintId::of(blacklisted_name::BLACKLISTED_NAME),\n-LintId::of(blocks_in_if_conditions::BLOCKS_IN_IF_CONDITIONS),\n-LintId::of(bool_assert_comparison::BOOL_ASSERT_COMPARISON),\n-LintId::of(casts::FN_TO_NUMERIC_CAST),\n-LintId::of(casts::FN_TO_NUMERIC_CAST_WITH_TRUNCATION),\n-LintId::of(collapsible_if::COLLAPSIBLE_ELSE_IF),\n-LintId::of(collapsible_if::COLLAPSIBLE_IF),\n-LintId::of(collapsible_match::COLLAPSIBLE_MATCH),\n-LintId::of(comparison_chain::COMPARISON_CHAIN),\n-LintId::of(default::FIELD_REASSIGN_WITH_DEFAULT),\n-LintId::of(doc::MISSING_SAFETY_DOC),\n-LintId::of(doc::NEEDLESS_DOCTEST_MAIN),\n-LintId::of(enum_variants::ENUM_VARIANT_NAMES),\n-LintId::of(enum_variants::MODULE_INCEPTION),\n-LintId::of(eq_op::OP_REF),\n-LintId::of(eta_reduction::REDUNDANT_CLOSURE),\n-LintId::of(float_literal::EXCESSIVE_PRECISION),\n-LintId::of(from_over_into::FROM_OVER_INTO),\n-LintId::of(from_str_radix_10::FROM_STR_RADIX_10),\n-LintId::of(functions::DOUBLE_MUST_USE),\n-LintId::of(functions::MUST_USE_UNIT),\n-LintId::of(functions::RESULT_UNIT_ERR),\n-LintId::of(if_then_panic::IF_THEN_PANIC),\n-LintId::of(inherent_to_string::INHERENT_TO_STRING),\n-LintId::of(len_zero::COMPARISON_TO_EMPTY),\n-LintId::of(len_zero::LEN_WITHOUT_IS_EMPTY),\n-LintId::of(len_zero::LEN_ZERO),\n-LintId::of(literal_representation::INCONSISTENT_DIGIT_GROUPING),\n-LintId::of(literal_representation::UNUSUAL_BYTE_GROUPINGS),\n-LintId::of(loops::FOR_KV_MAP),\n-LintId::of(loops::NEEDLESS_RANGE_LOOP),\n-LintId::of(loops::SAME_ITEM_PUSH),\n-LintId::of(loops::WHILE_LET_ON_ITERATOR),\n-LintId::of(main_recursion::MAIN_RECURSION),\n-LintId::of(manual_async_fn::MANUAL_ASYNC_FN),\n-LintId::of(manual_map::MANUAL_MAP),\n-LintId::of(manual_non_exhaustive::MANUAL_NON_EXHAUSTIVE),\n-LintId::of(map_clone::MAP_CLONE),\n-LintId::of(match_result_ok::MATCH_RESULT_OK),\n-LintId::of(matches::INFALLIBLE_DESTRUCTURING_MATCH),\n-LintId::of(matches::MATCH_LIKE_MATCHES_MACRO),\n-LintId::of(matches::MATCH_OVERLAPPING_ARM),\n-LintId::of(matches::MATCH_REF_PATS),\n-LintId::of(matches::REDUNDANT_PATTERN_MATCHING),\n-LintId::of(matches::SINGLE_MATCH),\n-LintId::of(mem_replace::MEM_REPLACE_OPTION_WITH_NONE),\n-LintId::of(mem_replace::MEM_REPLACE_WITH_DEFAULT),\n-LintId::of(methods::BYTES_NTH),\n-LintId::of(methods::CHARS_LAST_CMP),\n-LintId::of(methods::CHARS_NEXT_CMP),\n-LintId::of(methods::INTO_ITER_ON_REF),\n-LintId::of(methods::ITER_CLONED_COLLECT),\n-LintId::of(methods::ITER_NEXT_SLICE),\n-LintId::of(methods::ITER_NTH_ZERO),\n-LintId::of(methods::ITER_SKIP_NEXT),\n-LintId::of(methods::MANUAL_SATURATING_ARITHMETIC),\n-LintId::of(methods::MAP_COLLECT_RESULT_UNIT),\n-LintId::of(methods::NEW_RET_NO_SELF),\n-LintId::of(methods::OK_EXPECT),\n-LintId::of(methods::OPTION_MAP_OR_NONE),\n-LintId::of(methods::RESULT_MAP_OR_INTO_OPTION),\n-LintId::of(methods::SHOULD_IMPLEMENT_TRAIT),\n-LintId::of(methods::SINGLE_CHAR_ADD_STR),\n-LintId::of(methods::STRING_EXTEND_CHARS),\n-LintId::of(methods::UNNECESSARY_FOLD),\n-LintId::of(methods::UNNECESSARY_LAZY_EVALUATIONS),\n-LintId::of(methods::UNWRAP_OR_ELSE_DEFAULT),\n-LintId::of(methods::WRONG_SELF_CONVENTION),\n-LintId::of(misc::TOPLEVEL_REF_ARG),\n-LintId::of(misc::ZERO_PTR),\n-LintId::of(misc_early::BUILTIN_TYPE_SHADOW),\n-LintId::of(misc_early::DOUBLE_NEG),\n-LintId::of(misc_early::DUPLICATE_UNDERSCORE_ARGUMENT),\n-LintId::of(misc_early::MIXED_CASE_HEX_LITERALS),\n-LintId::of(misc_early::REDUNDANT_PATTERN),\n-LintId::of(mut_mutex_lock::MUT_MUTEX_LOCK),\n-LintId::of(mut_reference::UNNECESSARY_MUT_PASSED),\n-LintId::of(needless_borrow::NEEDLESS_BORROW),\n-LintId::of(neg_multiply::NEG_MULTIPLY),\n-LintId::of(new_without_default::NEW_WITHOUT_DEFAULT),\n-LintId::of(non_copy_const::BORROW_INTERIOR_MUTABLE_CONST),\n-LintId::of(non_copy_const::DECLARE_INTERIOR_MUTABLE_CONST),\n-LintId::of(non_expressive_names::JUST_UNDERSCORES_AND_DIGITS),\n-LintId::of(ptr::CMP_NULL),\n-LintId::of(ptr::PTR_ARG),\n-LintId::of(ptr_eq::PTR_EQ),\n-LintId::of(question_mark::QUESTION_MARK),\n-LintId::of(ranges::MANUAL_RANGE_CONTAINS),\n-LintId::of(redundant_field_names::REDUNDANT_FIELD_NAMES),\n-LintId::of(redundant_static_lifetimes::REDUNDANT_STATIC_LIFETIMES),\n-LintId::of(returns::LET_AND_RETURN),\n-LintId::of(returns::NEEDLESS_RETURN),\n-LintId::of(self_named_constructors::SELF_NAMED_CONSTRUCTORS),\n-LintId::of(single_component_path_imports::SINGLE_COMPONENT_PATH_IMPORTS),\n-LintId::of(tabs_in_doc_comments::TABS_IN_DOC_COMMENTS),\n-LintId::of(to_digit_is_some::TO_DIGIT_IS_SOME),\n-LintId::of(try_err::TRY_ERR),\n-LintId::of(unsafe_removed_from_name::UNSAFE_REMOVED_FROM_NAME),\n-LintId::of(unused_unit::UNUSED_UNIT),\n-LintId::of(upper_case_acronyms::UPPER_CASE_ACRONYMS),\n-LintId::of(write::PRINTLN_EMPTY_STRING),\n-LintId::of(write::PRINT_LITERAL),\n-LintId::of(write::PRINT_WITH_NEWLINE),\n-LintId::of(write::WRITELN_EMPTY_STRING),\n-LintId::of(write::WRITE_LITERAL),\n-LintId::of(write::WRITE_WITH_NEWLINE),\n-])\n\\ No newline at end of file\n+    LintId::of(assertions_on_constants::ASSERTIONS_ON_CONSTANTS),\n+    LintId::of(assign_ops::ASSIGN_OP_PATTERN),\n+    LintId::of(blacklisted_name::BLACKLISTED_NAME),\n+    LintId::of(blocks_in_if_conditions::BLOCKS_IN_IF_CONDITIONS),\n+    LintId::of(bool_assert_comparison::BOOL_ASSERT_COMPARISON),\n+    LintId::of(casts::FN_TO_NUMERIC_CAST),\n+    LintId::of(casts::FN_TO_NUMERIC_CAST_WITH_TRUNCATION),\n+    LintId::of(collapsible_if::COLLAPSIBLE_ELSE_IF),\n+    LintId::of(collapsible_if::COLLAPSIBLE_IF),\n+    LintId::of(collapsible_match::COLLAPSIBLE_MATCH),\n+    LintId::of(comparison_chain::COMPARISON_CHAIN),\n+    LintId::of(default::FIELD_REASSIGN_WITH_DEFAULT),\n+    LintId::of(doc::MISSING_SAFETY_DOC),\n+    LintId::of(doc::NEEDLESS_DOCTEST_MAIN),\n+    LintId::of(enum_variants::ENUM_VARIANT_NAMES),\n+    LintId::of(enum_variants::MODULE_INCEPTION),\n+    LintId::of(eq_op::OP_REF),\n+    LintId::of(eta_reduction::REDUNDANT_CLOSURE),\n+    LintId::of(float_literal::EXCESSIVE_PRECISION),\n+    LintId::of(from_over_into::FROM_OVER_INTO),\n+    LintId::of(from_str_radix_10::FROM_STR_RADIX_10),\n+    LintId::of(functions::DOUBLE_MUST_USE),\n+    LintId::of(functions::MUST_USE_UNIT),\n+    LintId::of(functions::RESULT_UNIT_ERR),\n+    LintId::of(if_then_panic::IF_THEN_PANIC),\n+    LintId::of(inherent_to_string::INHERENT_TO_STRING),\n+    LintId::of(len_zero::COMPARISON_TO_EMPTY),\n+    LintId::of(len_zero::LEN_WITHOUT_IS_EMPTY),\n+    LintId::of(len_zero::LEN_ZERO),\n+    LintId::of(literal_representation::INCONSISTENT_DIGIT_GROUPING),\n+    LintId::of(literal_representation::UNUSUAL_BYTE_GROUPINGS),\n+    LintId::of(loops::FOR_KV_MAP),\n+    LintId::of(loops::NEEDLESS_RANGE_LOOP),\n+    LintId::of(loops::SAME_ITEM_PUSH),\n+    LintId::of(loops::WHILE_LET_ON_ITERATOR),\n+    LintId::of(main_recursion::MAIN_RECURSION),\n+    LintId::of(manual_async_fn::MANUAL_ASYNC_FN),\n+    LintId::of(manual_map::MANUAL_MAP),\n+    LintId::of(manual_non_exhaustive::MANUAL_NON_EXHAUSTIVE),\n+    LintId::of(map_clone::MAP_CLONE),\n+    LintId::of(match_result_ok::MATCH_RESULT_OK),\n+    LintId::of(matches::INFALLIBLE_DESTRUCTURING_MATCH),\n+    LintId::of(matches::MATCH_LIKE_MATCHES_MACRO),\n+    LintId::of(matches::MATCH_OVERLAPPING_ARM),\n+    LintId::of(matches::MATCH_REF_PATS),\n+    LintId::of(matches::REDUNDANT_PATTERN_MATCHING),\n+    LintId::of(matches::SINGLE_MATCH),\n+    LintId::of(mem_replace::MEM_REPLACE_OPTION_WITH_NONE),\n+    LintId::of(mem_replace::MEM_REPLACE_WITH_DEFAULT),\n+    LintId::of(methods::BYTES_NTH),\n+    LintId::of(methods::CHARS_LAST_CMP),\n+    LintId::of(methods::CHARS_NEXT_CMP),\n+    LintId::of(methods::INTO_ITER_ON_REF),\n+    LintId::of(methods::ITER_CLONED_COLLECT),\n+    LintId::of(methods::ITER_NEXT_SLICE),\n+    LintId::of(methods::ITER_NTH_ZERO),\n+    LintId::of(methods::ITER_SKIP_NEXT),\n+    LintId::of(methods::MANUAL_SATURATING_ARITHMETIC),\n+    LintId::of(methods::MAP_COLLECT_RESULT_UNIT),\n+    LintId::of(methods::NEW_RET_NO_SELF),\n+    LintId::of(methods::OK_EXPECT),\n+    LintId::of(methods::OPTION_MAP_OR_NONE),\n+    LintId::of(methods::RESULT_MAP_OR_INTO_OPTION),\n+    LintId::of(methods::SHOULD_IMPLEMENT_TRAIT),\n+    LintId::of(methods::SINGLE_CHAR_ADD_STR),\n+    LintId::of(methods::STRING_EXTEND_CHARS),\n+    LintId::of(methods::UNNECESSARY_FOLD),\n+    LintId::of(methods::UNNECESSARY_LAZY_EVALUATIONS),\n+    LintId::of(methods::UNWRAP_OR_ELSE_DEFAULT),\n+    LintId::of(methods::WRONG_SELF_CONVENTION),\n+    LintId::of(misc::TOPLEVEL_REF_ARG),\n+    LintId::of(misc::ZERO_PTR),\n+    LintId::of(misc_early::BUILTIN_TYPE_SHADOW),\n+    LintId::of(misc_early::DOUBLE_NEG),\n+    LintId::of(misc_early::DUPLICATE_UNDERSCORE_ARGUMENT),\n+    LintId::of(misc_early::MIXED_CASE_HEX_LITERALS),\n+    LintId::of(misc_early::REDUNDANT_PATTERN),\n+    LintId::of(mut_mutex_lock::MUT_MUTEX_LOCK),\n+    LintId::of(mut_reference::UNNECESSARY_MUT_PASSED),\n+    LintId::of(needless_borrow::NEEDLESS_BORROW),\n+    LintId::of(neg_multiply::NEG_MULTIPLY),\n+    LintId::of(new_without_default::NEW_WITHOUT_DEFAULT),\n+    LintId::of(non_copy_const::BORROW_INTERIOR_MUTABLE_CONST),\n+    LintId::of(non_copy_const::DECLARE_INTERIOR_MUTABLE_CONST),\n+    LintId::of(non_expressive_names::JUST_UNDERSCORES_AND_DIGITS),\n+    LintId::of(ptr::CMP_NULL),\n+    LintId::of(ptr::PTR_ARG),\n+    LintId::of(ptr_eq::PTR_EQ),\n+    LintId::of(question_mark::QUESTION_MARK),\n+    LintId::of(ranges::MANUAL_RANGE_CONTAINS),\n+    LintId::of(redundant_field_names::REDUNDANT_FIELD_NAMES),\n+    LintId::of(redundant_static_lifetimes::REDUNDANT_STATIC_LIFETIMES),\n+    LintId::of(returns::LET_AND_RETURN),\n+    LintId::of(returns::NEEDLESS_RETURN),\n+    LintId::of(self_named_constructors::SELF_NAMED_CONSTRUCTORS),\n+    LintId::of(single_component_path_imports::SINGLE_COMPONENT_PATH_IMPORTS),\n+    LintId::of(tabs_in_doc_comments::TABS_IN_DOC_COMMENTS),\n+    LintId::of(to_digit_is_some::TO_DIGIT_IS_SOME),\n+    LintId::of(try_err::TRY_ERR),\n+    LintId::of(unsafe_removed_from_name::UNSAFE_REMOVED_FROM_NAME),\n+    LintId::of(unused_unit::UNUSED_UNIT),\n+    LintId::of(upper_case_acronyms::UPPER_CASE_ACRONYMS),\n+    LintId::of(write::PRINTLN_EMPTY_STRING),\n+    LintId::of(write::PRINT_LITERAL),\n+    LintId::of(write::PRINT_WITH_NEWLINE),\n+    LintId::of(write::WRITELN_EMPTY_STRING),\n+    LintId::of(write::WRITE_LITERAL),\n+    LintId::of(write::WRITE_WITH_NEWLINE),\n+])"}, {"sha": "8859787fbc830c97e7b34a0ee21e053d586bcdcf", "filename": "clippy_lints/src/lib.register_suspicious.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_suspicious.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6747df5cd4232d26747a556c263d0a5d9c72414/clippy_lints%2Fsrc%2Flib.register_suspicious.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_suspicious.rs?ref=e6747df5cd4232d26747a556c263d0a5d9c72414", "patch": "@@ -3,18 +3,18 @@\n // Manual edits will be overwritten.\n \n store.register_group(true, \"clippy::suspicious\", Some(\"clippy_suspicious\"), vec![\n-LintId::of(assign_ops::MISREFACTORED_ASSIGN_OP),\n-LintId::of(attrs::BLANKET_CLIPPY_RESTRICTION_LINTS),\n-LintId::of(eval_order_dependence::EVAL_ORDER_DEPENDENCE),\n-LintId::of(float_equality_without_abs::FLOAT_EQUALITY_WITHOUT_ABS),\n-LintId::of(formatting::SUSPICIOUS_ASSIGNMENT_FORMATTING),\n-LintId::of(formatting::SUSPICIOUS_ELSE_FORMATTING),\n-LintId::of(formatting::SUSPICIOUS_UNARY_OP_FORMATTING),\n-LintId::of(loops::EMPTY_LOOP),\n-LintId::of(loops::FOR_LOOPS_OVER_FALLIBLES),\n-LintId::of(loops::MUT_RANGE_BOUND),\n-LintId::of(methods::SUSPICIOUS_MAP),\n-LintId::of(mut_key::MUTABLE_KEY_TYPE),\n-LintId::of(suspicious_trait_impl::SUSPICIOUS_ARITHMETIC_IMPL),\n-LintId::of(suspicious_trait_impl::SUSPICIOUS_OP_ASSIGN_IMPL),\n-])\n\\ No newline at end of file\n+    LintId::of(assign_ops::MISREFACTORED_ASSIGN_OP),\n+    LintId::of(attrs::BLANKET_CLIPPY_RESTRICTION_LINTS),\n+    LintId::of(eval_order_dependence::EVAL_ORDER_DEPENDENCE),\n+    LintId::of(float_equality_without_abs::FLOAT_EQUALITY_WITHOUT_ABS),\n+    LintId::of(formatting::SUSPICIOUS_ASSIGNMENT_FORMATTING),\n+    LintId::of(formatting::SUSPICIOUS_ELSE_FORMATTING),\n+    LintId::of(formatting::SUSPICIOUS_UNARY_OP_FORMATTING),\n+    LintId::of(loops::EMPTY_LOOP),\n+    LintId::of(loops::FOR_LOOPS_OVER_FALLIBLES),\n+    LintId::of(loops::MUT_RANGE_BOUND),\n+    LintId::of(methods::SUSPICIOUS_MAP),\n+    LintId::of(mut_key::MUTABLE_KEY_TYPE),\n+    LintId::of(suspicious_trait_impl::SUSPICIOUS_ARITHMETIC_IMPL),\n+    LintId::of(suspicious_trait_impl::SUSPICIOUS_OP_ASSIGN_IMPL),\n+])"}]}