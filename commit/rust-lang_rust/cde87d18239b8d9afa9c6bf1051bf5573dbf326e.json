{"sha": "cde87d18239b8d9afa9c6bf1051bf5573dbf326e", "node_id": "C_kwDOAAsO6NoAKGNkZTg3ZDE4MjM5YjhkOWFmYTljNmJmMTA1MWJmNTU3M2RiZjMyNmU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-08T00:13:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-08T00:13:26Z"}, "message": "Auto merge of #2345 - RalfJung:rustup, r=RalfJung\n\nrustup", "tree": {"sha": "a932d0cbf916865882114effe7c3423049e0f8f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a932d0cbf916865882114effe7c3423049e0f8f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cde87d18239b8d9afa9c6bf1051bf5573dbf326e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cde87d18239b8d9afa9c6bf1051bf5573dbf326e", "html_url": "https://github.com/rust-lang/rust/commit/cde87d18239b8d9afa9c6bf1051bf5573dbf326e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cde87d18239b8d9afa9c6bf1051bf5573dbf326e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "622963a2df22bdb91f3db076e3a7aa399d2dca0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/622963a2df22bdb91f3db076e3a7aa399d2dca0f", "html_url": "https://github.com/rust-lang/rust/commit/622963a2df22bdb91f3db076e3a7aa399d2dca0f"}, {"sha": "23d1f1a5a3cccd4a0867833b4f0dc6e3ad5ad532", "url": "https://api.github.com/repos/rust-lang/rust/commits/23d1f1a5a3cccd4a0867833b4f0dc6e3ad5ad532", "html_url": "https://github.com/rust-lang/rust/commit/23d1f1a5a3cccd4a0867833b4f0dc6e3ad5ad532"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "53e7908f42c84ce8aea7d747e58b57b1db0eccc8", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cde87d18239b8d9afa9c6bf1051bf5573dbf326e/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/cde87d18239b8d9afa9c6bf1051bf5573dbf326e/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=cde87d18239b8d9afa9c6bf1051bf5573dbf326e", "patch": "@@ -1 +1 @@\n-8824d131619e58a38bde8bcf56401629b91a204a\n+1517f5de01c445b5124b30f02257b02b4c5ef3b2"}, {"sha": "4dfa7bd07cbeca1f13d488e0c8398fd1dadb6487", "filename": "src/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cde87d18239b8d9afa9c6bf1051bf5573dbf326e/src%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cde87d18239b8d9afa9c6bf1051bf5573dbf326e/src%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiagnostics.rs?ref=cde87d18239b8d9afa9c6bf1051bf5573dbf326e", "patch": "@@ -291,8 +291,8 @@ pub fn report_error<'tcx, 'mir>(\n     match e.kind() {\n         UndefinedBehavior(UndefinedBehaviorInfo::InvalidUninitBytes(Some((alloc_id, access)))) => {\n             eprintln!(\n-                \"Uninitialized read occurred at {alloc_id:?}{range:?}, in this allocation:\",\n-                range = alloc_range(access.uninit_offset, access.uninit_size),\n+                \"Uninitialized memory occurred at {alloc_id:?}{range:?}, in this allocation:\",\n+                range = access.uninit,\n             );\n             eprintln!(\"{:?}\", ecx.dump_alloc(*alloc_id));\n         }"}, {"sha": "c8ebd835d36a4eb24b124d6399cc64ab53296d95", "filename": "tests/fail/uninit_buffer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cde87d18239b8d9afa9c6bf1051bf5573dbf326e/tests%2Ffail%2Funinit_buffer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cde87d18239b8d9afa9c6bf1051bf5573dbf326e/tests%2Ffail%2Funinit_buffer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Funinit_buffer.rs?ref=cde87d18239b8d9afa9c6bf1051bf5573dbf326e", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: 12 bytes are uninitialized\n+// error-pattern: memory is uninitialized at [0x4..0x10]\n \n use std::alloc::{alloc, dealloc, Layout};\n use std::slice::from_raw_parts;"}, {"sha": "879c827eb8840ecdf410bad005daa05266e0266f", "filename": "tests/fail/uninit_buffer.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cde87d18239b8d9afa9c6bf1051bf5573dbf326e/tests%2Ffail%2Funinit_buffer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cde87d18239b8d9afa9c6bf1051bf5573dbf326e/tests%2Ffail%2Funinit_buffer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Funinit_buffer.stderr?ref=cde87d18239b8d9afa9c6bf1051bf5573dbf326e", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: reading 16 bytes of memory starting at ALLOC, but 12 bytes are uninitialized starting at ALLOC+0x4, and this operation requires initialized memory\n+error: Undefined Behavior: reading memory at ALLOC[0x0..0x10], but memory is uninitialized at [0x4..0x10], and this operation requires initialized memory\n   --> RUSTLIB/core/src/slice/cmp.rs:LL:CC\n    |\n LL |         let mut order = unsafe { memcmp(left.as_ptr(), right.as_ptr(), len) as isize };\n-   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ reading 16 bytes of memory starting at ALLOC, but 12 bytes are uninitialized starting at ALLOC+0x4, and this operation requires initialized memory\n+   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ reading memory at ALLOC[0x0..0x10], but memory is uninitialized at [0x4..0x10], and this operation requires initialized memory\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n@@ -17,7 +17,7 @@ LL |         drop(slice1.cmp(slice2));\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-Uninitialized read occurred at ALLOC[0x4..0x10], in this allocation:\n+Uninitialized memory occurred at ALLOC[0x4..0x10], in this allocation:\n ALLOC (Rust heap, size: 32, align: 8) {\n     0x00 \u2502 41 42 43 44 __ __ __ __ __ __ __ __ __ __ __ __ \u2502 ABCD\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n     0x10 \u2502 00 __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ \u2502 .\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591"}]}