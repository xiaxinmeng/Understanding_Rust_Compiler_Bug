{"sha": "5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmYmI5N2EwZjBiNzhlZGQ4ZjYwMmU0NmM2YTMzNmI1YTFhYWM3YWU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-03-13T01:24:26Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-03-18T00:53:37Z"}, "message": "Rename `item_tree` query to `file_item_tree`", "tree": {"sha": "01c2914d7c92a91c70282b3be19f955c83aa1431", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01c2914d7c92a91c70282b3be19f955c83aa1431"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae", "html_url": "https://github.com/rust-lang/rust/commit/5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "759f8c83e53bb72804cb4c578a01b09fc2dcf4fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/759f8c83e53bb72804cb4c578a01b09fc2dcf4fa", "html_url": "https://github.com/rust-lang/rust/commit/759f8c83e53bb72804cb4c578a01b09fc2dcf4fa"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "1902a8d167ad03e47b1503af8b49cc7cfb4b54c3", "filename": "crates/hir/src/db.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae/crates%2Fhir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae/crates%2Fhir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fdb.rs?ref=5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae", "patch": "@@ -3,10 +3,10 @@\n pub use hir_def::db::{\n     AttrsQuery, BlockDefMapQuery, BodyQuery, BodyWithSourceMapQuery, ConstDataQuery,\n     CrateDefMapQueryQuery, CrateLangItemsQuery, DefDatabase, DefDatabaseStorage, EnumDataQuery,\n-    ExprScopesQuery, FunctionDataQuery, GenericParamsQuery, ImplDataQuery, ImportMapQuery,\n-    InternConstQuery, InternDatabase, InternDatabaseStorage, InternEnumQuery, InternFunctionQuery,\n-    InternImplQuery, InternStaticQuery, InternStructQuery, InternTraitQuery, InternTypeAliasQuery,\n-    InternUnionQuery, ItemTreeQuery, LangItemQuery, StaticDataQuery, StructDataQuery,\n+    ExprScopesQuery, FileItemTreeQuery, FunctionDataQuery, GenericParamsQuery, ImplDataQuery,\n+    ImportMapQuery, InternConstQuery, InternDatabase, InternDatabaseStorage, InternEnumQuery,\n+    InternFunctionQuery, InternImplQuery, InternStaticQuery, InternStructQuery, InternTraitQuery,\n+    InternTypeAliasQuery, InternUnionQuery, LangItemQuery, StaticDataQuery, StructDataQuery,\n     TraitDataQuery, TypeAliasDataQuery, UnionDataQuery,\n };\n pub use hir_expand::db::{"}, {"sha": "0be868ba20f5858fa459bf528955406b6816b29f", "filename": "crates/hir_def/src/data.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae/crates%2Fhir_def%2Fsrc%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae/crates%2Fhir_def%2Fsrc%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fdata.rs?ref=5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae", "patch": "@@ -251,7 +251,7 @@ fn collect_items(\n         return Vec::new();\n     }\n \n-    let item_tree = db.item_tree(file_id);\n+    let item_tree = db.file_item_tree(file_id);\n     let crate_graph = db.crate_graph();\n     let cfg_options = &crate_graph[module.krate].cfg_options;\n \n@@ -292,7 +292,7 @@ fn collect_items(\n                 if let Ok(res) = res {\n                     if let Some((mark, mac)) = res.value {\n                         let src: InFile<ast::MacroItems> = expander.to_source(mac);\n-                        let item_tree = db.item_tree(src.file_id);\n+                        let item_tree = db.file_item_tree(src.file_id);\n                         let iter =\n                             item_tree.top_level_items().iter().filter_map(ModItem::as_assoc_item);\n                         items.extend(collect_items("}, {"sha": "276caf5b33b3084b7e88cbbec8d63ae52b02daaa", "filename": "crates/hir_def/src/db.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae/crates%2Fhir_def%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae/crates%2Fhir_def%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fdb.rs?ref=5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae", "patch": "@@ -48,8 +48,8 @@ pub trait InternDatabase: SourceDatabase {\n \n #[salsa::query_group(DefDatabaseStorage)]\n pub trait DefDatabase: InternDatabase + AstDatabase + Upcast<dyn AstDatabase> {\n-    #[salsa::invoke(ItemTree::item_tree_query)]\n-    fn item_tree(&self, file_id: HirFileId) -> Arc<ItemTree>;\n+    #[salsa::invoke(ItemTree::file_item_tree_query)]\n+    fn file_item_tree(&self, file_id: HirFileId) -> Arc<ItemTree>;\n \n     #[salsa::invoke(crate_def_map_wait)]\n     #[salsa::transparent]"}, {"sha": "5f5b7151acdcb063056cd4a84188015d8b7223ea", "filename": "crates/hir_def/src/item_tree.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs?ref=5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae", "patch": "@@ -76,7 +76,7 @@ pub struct ItemTree {\n }\n \n impl ItemTree {\n-    pub(crate) fn item_tree_query(db: &dyn DefDatabase, file_id: HirFileId) -> Arc<ItemTree> {\n+    pub(crate) fn file_item_tree_query(db: &dyn DefDatabase, file_id: HirFileId) -> Arc<ItemTree> {\n         let _p = profile::span(\"item_tree_query\").detail(|| format!(\"{:?}\", file_id));\n         let syntax = if let Some(node) = db.parse_or_expand(file_id) {\n             if node.kind() == SyntaxKind::ERROR {\n@@ -417,7 +417,7 @@ impl<N: ItemTreeNode> ItemTreeId<N> {\n     }\n \n     pub fn item_tree(self, db: &dyn DefDatabase) -> Arc<ItemTree> {\n-        db.item_tree(self.file)\n+        db.file_item_tree(self.file)\n     }\n }\n "}, {"sha": "c97be584e245fb40d70c501f4567bfb7157965fe", "filename": "crates/hir_def/src/nameres.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae/crates%2Fhir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae/crates%2Fhir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres.rs?ref=5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae", "patch": "@@ -213,7 +213,7 @@ impl DefMap {\n     ) -> Option<Arc<DefMap>> {\n         let block: BlockLoc = db.lookup_intern_block(block_id);\n \n-        let item_tree = db.item_tree(block.ast_id.file_id);\n+        let item_tree = db.file_item_tree(block.ast_id.file_id);\n         if item_tree.inner_items_of_block(block.ast_id.value).is_empty() {\n             return None;\n         }"}, {"sha": "d0fefb5afdfe9d4a5f06072e184858ec1a813da0", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae", "patch": "@@ -242,7 +242,7 @@ struct DefCollector<'a> {\n impl DefCollector<'_> {\n     fn seed_with_top_level(&mut self) {\n         let file_id = self.db.crate_graph()[self.def_map.krate].root_file_id;\n-        let item_tree = self.db.item_tree(file_id.into());\n+        let item_tree = self.db.file_item_tree(file_id.into());\n         let module_id = self.def_map.root;\n         self.def_map.modules[module_id].origin = ModuleOrigin::CrateRoot { definition: file_id };\n         if item_tree\n@@ -263,7 +263,7 @@ impl DefCollector<'_> {\n     }\n \n     fn seed_with_inner(&mut self, block: AstId<ast::BlockExpr>) {\n-        let item_tree = self.db.item_tree(block.file_id);\n+        let item_tree = self.db.file_item_tree(block.file_id);\n         let module_id = self.def_map.root;\n         self.def_map.modules[module_id].origin = ModuleOrigin::BlockExpr { block };\n         if item_tree\n@@ -895,7 +895,7 @@ impl DefCollector<'_> {\n         }\n \n         // Then, fetch and process the item tree. This will reuse the expansion result from above.\n-        let item_tree = self.db.item_tree(file_id);\n+        let item_tree = self.db.file_item_tree(file_id);\n         let mod_dir = self.mod_dirs[&module_id].clone();\n         ModCollector {\n             def_collector: &mut *self,\n@@ -1299,7 +1299,7 @@ impl ModCollector<'_, '_> {\n                             Some((file_id, is_mod_rs)),\n                             &self.item_tree[module.visibility],\n                         );\n-                        let item_tree = db.item_tree(file_id.into());\n+                        let item_tree = db.file_item_tree(file_id.into());\n                         ModCollector {\n                             def_collector: &mut *self.def_collector,\n                             macro_depth: self.macro_depth,"}, {"sha": "9b590d919b08fdfb26d101b7d886710fc99f477e", "filename": "crates/ide_db/src/apply_change.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae/crates%2Fide_db%2Fsrc%2Fapply_change.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae/crates%2Fide_db%2Fsrc%2Fapply_change.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fapply_change.rs?ref=5fbb97a0f0b78edd8f602e46c6a336b5a1aac7ae", "patch": "@@ -148,7 +148,7 @@ impl RootDatabase {\n             hir::db::HygieneFrameQuery\n \n             // DefDatabase\n-            hir::db::ItemTreeQuery\n+            hir::db::FileItemTreeQuery\n             hir::db::BlockDefMapQuery\n             hir::db::CrateDefMapQueryQuery\n             hir::db::StructDataQuery"}]}