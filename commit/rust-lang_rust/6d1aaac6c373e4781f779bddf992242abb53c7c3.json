{"sha": "6d1aaac6c373e4781f779bddf992242abb53c7c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkMWFhYWM2YzM3M2U0NzgxZjc3OWJkZGY5OTIyNDJhYmI1M2M3YzM=", "commit": {"author": {"name": "Jens Hausdorf", "email": "mail@jens-hausdorf.de", "date": "2019-03-10T10:06:19Z"}, "committer": {"name": "Thiago Arrais", "email": "thiago.arrais@gmail.com", "date": "2019-07-08T16:13:01Z"}, "message": "Avoid reporting string_lit_as_bytes for long strings\n\nPort of @jens1o code ([b76f939][jens1o_commit])\n\nFixes #1208\n\n[jens1o_commit]: https://github.com/jens1o/rust-clippy/commit/b76f939ac2efcfe24900c286b3b7713d972d9088\n\nCo-authored-by: Thiago Arrais <thiago.arrais@gmail.com>", "tree": {"sha": "7519bbe036ef00a83f4333a89381df415631bfdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7519bbe036ef00a83f4333a89381df415631bfdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d1aaac6c373e4781f779bddf992242abb53c7c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d1aaac6c373e4781f779bddf992242abb53c7c3", "html_url": "https://github.com/rust-lang/rust/commit/6d1aaac6c373e4781f779bddf992242abb53c7c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d1aaac6c373e4781f779bddf992242abb53c7c3/comments", "author": {"login": "jens1o", "id": 11234139, "node_id": "MDQ6VXNlcjExMjM0MTM5", "avatar_url": "https://avatars.githubusercontent.com/u/11234139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jens1o", "html_url": "https://github.com/jens1o", "followers_url": "https://api.github.com/users/jens1o/followers", "following_url": "https://api.github.com/users/jens1o/following{/other_user}", "gists_url": "https://api.github.com/users/jens1o/gists{/gist_id}", "starred_url": "https://api.github.com/users/jens1o/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jens1o/subscriptions", "organizations_url": "https://api.github.com/users/jens1o/orgs", "repos_url": "https://api.github.com/users/jens1o/repos", "events_url": "https://api.github.com/users/jens1o/events{/privacy}", "received_events_url": "https://api.github.com/users/jens1o/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thiagoarrais", "id": 3014, "node_id": "MDQ6VXNlcjMwMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thiagoarrais", "html_url": "https://github.com/thiagoarrais", "followers_url": "https://api.github.com/users/thiagoarrais/followers", "following_url": "https://api.github.com/users/thiagoarrais/following{/other_user}", "gists_url": "https://api.github.com/users/thiagoarrais/gists{/gist_id}", "starred_url": "https://api.github.com/users/thiagoarrais/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thiagoarrais/subscriptions", "organizations_url": "https://api.github.com/users/thiagoarrais/orgs", "repos_url": "https://api.github.com/users/thiagoarrais/repos", "events_url": "https://api.github.com/users/thiagoarrais/events{/privacy}", "received_events_url": "https://api.github.com/users/thiagoarrais/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "316da7eb41f2c263963fc1b74fe9bb528860817f", "url": "https://api.github.com/repos/rust-lang/rust/commits/316da7eb41f2c263963fc1b74fe9bb528860817f", "html_url": "https://github.com/rust-lang/rust/commit/316da7eb41f2c263963fc1b74fe9bb528860817f"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "9be2d40bae1f235b45de125fc109bffd4f54665c", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6d1aaac6c373e4781f779bddf992242abb53c7c3/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d1aaac6c373e4781f779bddf992242abb53c7c3/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=6d1aaac6c373e4781f779bddf992242abb53c7c3", "patch": "@@ -173,6 +173,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for StringLitAsBytes {\n                             );\n                         } else if callsite == expanded\n                             && lit_content.as_str().chars().all(|c| c.is_ascii())\n+                            && lit_content.as_str().len() <= 32\n                             && !in_macro_or_desugar(args[0].span)\n                         {\n                             span_lint_and_sugg("}, {"sha": "1922478165fd30232aea3cb6c8242c96a9e93f80", "filename": "tests/ui/string_lit_as_bytes.fixed", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6d1aaac6c373e4781f779bddf992242abb53c7c3/tests%2Fui%2Fstring_lit_as_bytes.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/6d1aaac6c373e4781f779bddf992242abb53c7c3/tests%2Fui%2Fstring_lit_as_bytes.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_lit_as_bytes.fixed?ref=6d1aaac6c373e4781f779bddf992242abb53c7c3", "patch": "@@ -6,10 +6,11 @@\n fn str_lit_as_bytes() {\n     let bs = b\"hello there\";\n \n-    let bs = br###\"raw string with three ### in it and some \" \"\"###;\n+    let bs = br###\"raw string with 3# plus \" \"\"###;\n \n-    // no warning, because this cannot be written as a byte string literal:\n+    // no warning, because these cannot be written as byte string literals:\n     let ubs = \"\u2603\".as_bytes();\n+    let ubs = \"hello there! this is a very long string\".as_bytes();\n \n     let strify = stringify!(foobar).as_bytes();\n "}, {"sha": "560cbcb657b8ce84ad4ee9c6556a12b6d611b573", "filename": "tests/ui/string_lit_as_bytes.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6d1aaac6c373e4781f779bddf992242abb53c7c3/tests%2Fui%2Fstring_lit_as_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d1aaac6c373e4781f779bddf992242abb53c7c3/tests%2Fui%2Fstring_lit_as_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_lit_as_bytes.rs?ref=6d1aaac6c373e4781f779bddf992242abb53c7c3", "patch": "@@ -6,10 +6,11 @@\n fn str_lit_as_bytes() {\n     let bs = \"hello there\".as_bytes();\n \n-    let bs = r###\"raw string with three ### in it and some \" \"\"###.as_bytes();\n+    let bs = r###\"raw string with 3# plus \" \"\"###.as_bytes();\n \n-    // no warning, because this cannot be written as a byte string literal:\n+    // no warning, because these cannot be written as byte string literals:\n     let ubs = \"\u2603\".as_bytes();\n+    let ubs = \"hello there! this is a very long string\".as_bytes();\n \n     let strify = stringify!(foobar).as_bytes();\n "}, {"sha": "59aaec75bd2213fc2180386182833dd0a50ad163", "filename": "tests/ui/string_lit_as_bytes.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6d1aaac6c373e4781f779bddf992242abb53c7c3/tests%2Fui%2Fstring_lit_as_bytes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6d1aaac6c373e4781f779bddf992242abb53c7c3/tests%2Fui%2Fstring_lit_as_bytes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_lit_as_bytes.stderr?ref=6d1aaac6c373e4781f779bddf992242abb53c7c3", "patch": "@@ -9,11 +9,11 @@ LL |     let bs = \"hello there\".as_bytes();\n error: calling `as_bytes()` on a string literal\n   --> $DIR/string_lit_as_bytes.rs:9:14\n    |\n-LL |     let bs = r###\"raw string with three ### in it and some \" \"\"###.as_bytes();\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `br###\"raw string with three ### in it and some \" \"\"###`\n+LL |     let bs = r###\"raw string with 3# plus \" \"\"###.as_bytes();\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `br###\"raw string with 3# plus \" \"\"###`\n \n error: calling `as_bytes()` on `include_str!(..)`\n-  --> $DIR/string_lit_as_bytes.rs:16:22\n+  --> $DIR/string_lit_as_bytes.rs:17:22\n    |\n LL |     let includestr = include_str!(\"entry.rs\").as_bytes();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `include_bytes!(..)` instead: `include_bytes!(\"entry.rs\")`"}]}