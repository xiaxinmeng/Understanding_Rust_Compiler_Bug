{"sha": "f82049618d67ebd11b4d4596b214007411e2b0b8", "node_id": "C_kwDOAAsO6NoAKGY4MjA0OTYxOGQ2N2ViZDExYjRkNDU5NmIyMTQwMDc0MTFlMmIwYjg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-09T04:02:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-09T04:02:21Z"}, "message": "Rollup merge of #91568 - dtolnay:breakspace, r=nagisa\n\nPretty print break and continue without redundant space\n\n**Repro:**\n\n```rust\nmacro_rules! m {\n    ($e:expr) => { stringify!($e) };\n}\nfn main() {\n    println!(\"{:?}\", m!(loop { break; }));\n    println!(\"{:?}\", m!(loop { break 'a; }));\n    println!(\"{:?}\", m!(loop { break false; }));\n}\n```\n\n**Before:**\n\n- `\"loop { break ; }\"`\n- `\"loop { break 'a ; }\"`\n- `\"loop { break false ; }\"`\n\n**After:**\n\n- `\"loop { break; }\"`\n- `\"loop { break 'a; }\"`\n- `\"loop { break false; }\"`\n\n<br>\n\nNotice that `return` and `yield` already follow the same approach as this PR of printing the space *before* each additional piece following the keyword, rather than *after* each thing.\n\nhttps://github.com/rust-lang/rust/blob/772d51f887fa407216860bf8ecf3f1a32fb795b4/compiler/rustc_ast_pretty/src/pprust/state.rs#L2148-L2154\n\nhttps://github.com/rust-lang/rust/blob/772d51f887fa407216860bf8ecf3f1a32fb795b4/compiler/rustc_ast_pretty/src/pprust/state.rs#L2221-L2228", "tree": {"sha": "a3dedcd0b7cc2fb702221c5365789ac0ce2ac19e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3dedcd0b7cc2fb702221c5365789ac0ce2ac19e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f82049618d67ebd11b4d4596b214007411e2b0b8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhsX/OCRBK7hj4Ov3rIwAAYY4IAHySgxnVGUuJ+MufynoHprHb\nKQd7fhGoMqs7IwXhhZ6Grnb8i6uIJa839Fd3YpB16AJ9OccpkdRA3RvF4jrrU9Hc\nFIYVCJHWp990zuXA5L8Lm6+tV3jmjUR+iOR4cRtaXp/yiO+siKaIa8EMdg3eeaHX\nQttapiOF4/kc5BhKZTiRx5p1IaXRSFSHEwP8sgcUGbLHQ7pV4Na4MLewchMBv+au\nnTNr8eE3isggxgUw4nZTWgyR5PWb8XOPIZQoZ9fBS0070xrpELQ7ouq7dNfTZCVm\nW0MdKe7WYaPh4RIMmZD6OOesrFRZEnl4XjzSK7ppSh1zDWlJiGAFWf2oExkg/mE=\n=C7qT\n-----END PGP SIGNATURE-----\n", "payload": "tree a3dedcd0b7cc2fb702221c5365789ac0ce2ac19e\nparent dc834f08ba3ac4dbfade58c8639b933bd81c6a82\nparent f0f7b8d44abde324082a91e47f08112f4c0adae8\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639022541 +0100\ncommitter GitHub <noreply@github.com> 1639022541 +0100\n\nRollup merge of #91568 - dtolnay:breakspace, r=nagisa\n\nPretty print break and continue without redundant space\n\n**Repro:**\n\n```rust\nmacro_rules! m {\n    ($e:expr) => { stringify!($e) };\n}\nfn main() {\n    println!(\"{:?}\", m!(loop { break; }));\n    println!(\"{:?}\", m!(loop { break 'a; }));\n    println!(\"{:?}\", m!(loop { break false; }));\n}\n```\n\n**Before:**\n\n- `\"loop { break ; }\"`\n- `\"loop { break 'a ; }\"`\n- `\"loop { break false ; }\"`\n\n**After:**\n\n- `\"loop { break; }\"`\n- `\"loop { break 'a; }\"`\n- `\"loop { break false; }\"`\n\n<br>\n\nNotice that `return` and `yield` already follow the same approach as this PR of printing the space *before* each additional piece following the keyword, rather than *after* each thing.\n\nhttps://github.com/rust-lang/rust/blob/772d51f887fa407216860bf8ecf3f1a32fb795b4/compiler/rustc_ast_pretty/src/pprust/state.rs#L2148-L2154\n\nhttps://github.com/rust-lang/rust/blob/772d51f887fa407216860bf8ecf3f1a32fb795b4/compiler/rustc_ast_pretty/src/pprust/state.rs#L2221-L2228\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f82049618d67ebd11b4d4596b214007411e2b0b8", "html_url": "https://github.com/rust-lang/rust/commit/f82049618d67ebd11b4d4596b214007411e2b0b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f82049618d67ebd11b4d4596b214007411e2b0b8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc834f08ba3ac4dbfade58c8639b933bd81c6a82", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc834f08ba3ac4dbfade58c8639b933bd81c6a82", "html_url": "https://github.com/rust-lang/rust/commit/dc834f08ba3ac4dbfade58c8639b933bd81c6a82"}, {"sha": "f0f7b8d44abde324082a91e47f08112f4c0adae8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0f7b8d44abde324082a91e47f08112f4c0adae8", "html_url": "https://github.com/rust-lang/rust/commit/f0f7b8d44abde324082a91e47f08112f4c0adae8"}], "stats": {"total": 27, "additions": 11, "deletions": 16}, "files": [{"sha": "6c70cafb01fabe0a4043e202bfd93f60285cb406", "filename": "compiler/rustc_ast_pretty/src/pprust/state.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f82049618d67ebd11b4d4596b214007411e2b0b8/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f82049618d67ebd11b4d4596b214007411e2b0b8/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs?ref=f82049618d67ebd11b4d4596b214007411e2b0b8", "patch": "@@ -2135,22 +2135,20 @@ impl<'a> State<'a> {\n             ast::ExprKind::Path(Some(ref qself), ref path) => self.print_qpath(path, qself, true),\n             ast::ExprKind::Break(opt_label, ref opt_expr) => {\n                 self.word(\"break\");\n-                self.space();\n                 if let Some(label) = opt_label {\n-                    self.print_ident(label.ident);\n                     self.space();\n+                    self.print_ident(label.ident);\n                 }\n                 if let Some(ref expr) = *opt_expr {\n-                    self.print_expr_maybe_paren(expr, parser::PREC_JUMP);\n                     self.space();\n+                    self.print_expr_maybe_paren(expr, parser::PREC_JUMP);\n                 }\n             }\n             ast::ExprKind::Continue(opt_label) => {\n                 self.word(\"continue\");\n-                self.space();\n                 if let Some(label) = opt_label {\n+                    self.space();\n                     self.print_ident(label.ident);\n-                    self.space()\n                 }\n             }\n             ast::ExprKind::Ret(ref result) => {"}, {"sha": "c3601d0997c236af711681ee1d9fd6b3ef20072f", "filename": "compiler/rustc_hir_pretty/src/lib.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f82049618d67ebd11b4d4596b214007411e2b0b8/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f82049618d67ebd11b4d4596b214007411e2b0b8/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs?ref=f82049618d67ebd11b4d4596b214007411e2b0b8", "patch": "@@ -1543,22 +1543,20 @@ impl<'a> State<'a> {\n             hir::ExprKind::Path(ref qpath) => self.print_qpath(qpath, true),\n             hir::ExprKind::Break(destination, ref opt_expr) => {\n                 self.word(\"break\");\n-                self.space();\n                 if let Some(label) = destination.label {\n-                    self.print_ident(label.ident);\n                     self.space();\n+                    self.print_ident(label.ident);\n                 }\n                 if let Some(ref expr) = *opt_expr {\n-                    self.print_expr_maybe_paren(expr, parser::PREC_JUMP);\n                     self.space();\n+                    self.print_expr_maybe_paren(expr, parser::PREC_JUMP);\n                 }\n             }\n             hir::ExprKind::Continue(destination) => {\n                 self.word(\"continue\");\n-                self.space();\n                 if let Some(label) = destination.label {\n+                    self.space();\n                     self.print_ident(label.ident);\n-                    self.space()\n                 }\n             }\n             hir::ExprKind::Ret(ref result) => {"}, {"sha": "e32f5ca24ea0f9de389575b53363f89279239cd5", "filename": "src/test/pretty/ast-stmt-expr-attr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f82049618d67ebd11b4d4596b214007411e2b0b8/src%2Ftest%2Fpretty%2Fast-stmt-expr-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f82049618d67ebd11b4d4596b214007411e2b0b8/src%2Ftest%2Fpretty%2Fast-stmt-expr-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fast-stmt-expr-attr.rs?ref=f82049618d67ebd11b4d4596b214007411e2b0b8", "patch": "@@ -110,8 +110,8 @@ fn syntax() {\n     let _ = #[attr] &mut 0;\n     let _ = #[attr] &#[attr] 0;\n     let _ = #[attr] &mut #[attr] 0;\n-    let _ = #[attr] break ;\n-    let _ = #[attr] continue ;\n+    let _ = #[attr] break;\n+    let _ = #[attr] continue;\n     let _ = #[attr] return;\n     let _ = #[attr] foo!();\n     let _ = #[attr] foo!(#! [attr]);"}, {"sha": "9b10fd86c4778d8ee4f744d6566c667d6c5cea63", "filename": "src/test/pretty/hir-pretty-loop.pp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f82049618d67ebd11b4d4596b214007411e2b0b8/src%2Ftest%2Fpretty%2Fhir-pretty-loop.pp", "raw_url": "https://github.com/rust-lang/rust/raw/f82049618d67ebd11b4d4596b214007411e2b0b8/src%2Ftest%2Fpretty%2Fhir-pretty-loop.pp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fhir-pretty-loop.pp?ref=f82049618d67ebd11b4d4596b214007411e2b0b8", "patch": "@@ -6,4 +6,4 @@\n // pretty-mode:hir\n // pp-exact:hir-pretty-loop.pp\n \n-pub fn foo() { loop { break ; } }\n+pub fn foo() { loop { break; } }"}, {"sha": "01533cd8107b07e95890c0399a6dcecaef8883b1", "filename": "src/test/pretty/stmt_expr_attributes.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f82049618d67ebd11b4d4596b214007411e2b0b8/src%2Ftest%2Fpretty%2Fstmt_expr_attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f82049618d67ebd11b4d4596b214007411e2b0b8/src%2Ftest%2Fpretty%2Fstmt_expr_attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fstmt_expr_attributes.rs?ref=f82049618d67ebd11b4d4596b214007411e2b0b8", "patch": "@@ -229,9 +229,8 @@ fn _11() {\n     let _ = #[rustc_dummy] &mut 0;\n     let _ = #[rustc_dummy] &#[rustc_dummy] 0;\n     let _ = #[rustc_dummy] &mut #[rustc_dummy] 0;\n-    // FIXME: pp bug, extra space after keyword?\n-    while false { let _ = #[rustc_dummy] continue ; }\n-    while true { let _ = #[rustc_dummy] break ; }\n+    while false { let _ = #[rustc_dummy] continue; }\n+    while true { let _ = #[rustc_dummy] break; }\n     || #[rustc_dummy] return;\n     let _ = #[rustc_dummy] expr_mac!();\n     let _ = #[rustc_dummy] expr_mac![];"}]}