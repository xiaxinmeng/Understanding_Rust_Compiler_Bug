{"sha": "3dcf655eead8aa4f041d881a91200fc9998d4405", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkY2Y2NTVlZWFkOGFhNGYwNDFkODgxYTkxMjAwZmM5OTk4ZDQ0MDU=", "commit": {"author": {"name": "Andrew Poelstra", "email": "apoelstra@wpsoftware.net", "date": "2018-10-20T16:31:15Z"}, "committer": {"name": "Andrew Poelstra", "email": "apoelstra@wpsoftware.net", "date": "2018-10-23T15:22:14Z"}, "message": "readme: pull \"common problems\" into their own section", "tree": {"sha": "2e3e2eb7f26f7a0509ff51f2ba5c49183fcf5381", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e3e2eb7f26f7a0509ff51f2ba5c49183fcf5381"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3dcf655eead8aa4f041d881a91200fc9998d4405", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3dcf655eead8aa4f041d881a91200fc9998d4405", "html_url": "https://github.com/rust-lang/rust/commit/3dcf655eead8aa4f041d881a91200fc9998d4405", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3dcf655eead8aa4f041d881a91200fc9998d4405/comments", "author": {"login": "apoelstra", "id": 1351933, "node_id": "MDQ6VXNlcjEzNTE5MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apoelstra", "html_url": "https://github.com/apoelstra", "followers_url": "https://api.github.com/users/apoelstra/followers", "following_url": "https://api.github.com/users/apoelstra/following{/other_user}", "gists_url": "https://api.github.com/users/apoelstra/gists{/gist_id}", "starred_url": "https://api.github.com/users/apoelstra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions", "organizations_url": "https://api.github.com/users/apoelstra/orgs", "repos_url": "https://api.github.com/users/apoelstra/repos", "events_url": "https://api.github.com/users/apoelstra/events{/privacy}", "received_events_url": "https://api.github.com/users/apoelstra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apoelstra", "id": 1351933, "node_id": "MDQ6VXNlcjEzNTE5MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apoelstra", "html_url": "https://github.com/apoelstra", "followers_url": "https://api.github.com/users/apoelstra/followers", "following_url": "https://api.github.com/users/apoelstra/following{/other_user}", "gists_url": "https://api.github.com/users/apoelstra/gists{/gist_id}", "starred_url": "https://api.github.com/users/apoelstra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions", "organizations_url": "https://api.github.com/users/apoelstra/orgs", "repos_url": "https://api.github.com/users/apoelstra/repos", "events_url": "https://api.github.com/users/apoelstra/events{/privacy}", "received_events_url": "https://api.github.com/users/apoelstra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f77b29294829564f6d95148ef1e3749587518dfa", "url": "https://api.github.com/repos/rust-lang/rust/commits/f77b29294829564f6d95148ef1e3749587518dfa", "html_url": "https://github.com/rust-lang/rust/commit/f77b29294829564f6d95148ef1e3749587518dfa"}], "stats": {"total": 38, "additions": 27, "deletions": 11}, "files": [{"sha": "e5c2850ef3eb1b026702cc92a8407cb78a581767", "filename": "README.md", "status": "modified", "additions": 27, "deletions": 11, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/3dcf655eead8aa4f041d881a91200fc9998d4405/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/3dcf655eead8aa4f041d881a91200fc9998d4405/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=3dcf655eead8aa4f041d881a91200fc9998d4405", "patch": "@@ -54,27 +54,43 @@ above:\n \n 1. Run `cargo clean` to eliminate any cached dependencies that were built against\n the non-MIR `libstd`.\n-2. For a binary project, run `MIRI_SYSROOT=~/.xargo/HOST cargo +nightly miri` to\n-build and run your project; for a binary or library, use `MIRI_SYSROOT=~/.xargo/HOST cargo +nightly miri test`\n-to run all tests in your project through Miri.\n+2. To run all tests in your project through, Miri, use\n+`MIRI_SYSROOT=~/.xargo/HOST cargo +nightly miri test`.\n+3. If you have a binary project, you can run it through Miri using\n+`MIRI_SYSROOT=~/.xargo/HOST cargo +nightly miri`.\n \n-If you forget to set `MIRI_SYSROOT`, be sure to run `cargo clean` again before\n-correcting it. Otherwise you are likely to get \"dependency was built against possibly\n-newer std\" errors.\n+### Common Problems\n+\n+When modifying the above instructions, you may encounter a number of confusing compiler\n+errors.\n+\n+#### \"constant evaluation error: no mir for `<function>`\"\n+\n+You may have forgotten to set `MIRI_SYSROOT` when calling `cargo miri test`, and\n+your program called into `std` or `core`. Be sure to set `MIRI_SYSROOT=~/.xargo/HOST`.\n+\n+#### \"found possibly newer version of crate `std` which `<dependency>` depends on\"\n+\n+Your build directory may contain artifacts from an earlier build that did/did not\n+have `MIRI_SYSROOT` set. Run `cargo clean` before switching from non-Miri to Miri\n+builds and vice-versa.\n+\n+#### \"found crate `std` compiled by an incompatible version of rustc\"\n+\n+You may be running `cargo miri test` with a different compiler version than the one\n+used to build the MIR-enabled `std`. Be sure to consistently use the same toolchain,\n+perhaps by following the below instructions to specify a specific nightly for use\n+with Miri.\n \n ## Using Rustup To Specify a Specific Nightly\n \n To target a specific nightly, modify the above instructions as follows.\n \n 1. Install Miri using `cargo +nightly-2018-10-15 install --all-features --path .`,\n with the date replaced as appropriate.\n-2. Run `xargo/build.sh` as `rustup run nightly-2018-10-15 build.sh`.\n+2. Run `xargo/build.sh` as `rustup run nightly-2018-10-15 xargo/build.sh`.\n 3. When running tests, use `MIRI_SYSROOT=~/.xargo/HOST cargo +nightly-2018-10-15 miri test`.\n \n-You may prefer to do this rather than depending on the rustup default toolchain,\n-if you routinely update the default, since **it is essential that `xargo/build.sh`\n-is run with the same toolchain as `cargo miri`.**\n-\n ## Miri `-Z` flags\n \n Miri adds some extra `-Z` flags to control its behavior:"}]}