{"sha": "3dfee3a0381cb76efb04ed05a32117ffef1e48ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkZmVlM2EwMzgxY2I3NmVmYjA0ZWQwNWEzMjExN2ZmZWYxZTQ4YWU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-01T23:09:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-01T23:09:31Z"}, "message": "Rollup merge of #60439 - vorner:zombie-apocalypse-warn, r=TimNN\n\ndoc: Warn about possible zombie apocalypse\n\nExtend the std::process::Child docs with warning about possible zombies.\nThe previous version mentioned that when dropping the Child, the\nprocess is not killed. However, the wording gave the impression that\nsuch behaviour is fine to do (leaving the reader believe low-level\ndetails like reaping zombies of the dead processes is taken over by std\nsomehow; or simply leaving the reader unaware about the problem).", "tree": {"sha": "013cacd2b82269e4829c9e9531c5a35c6256897e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/013cacd2b82269e4829c9e9531c5a35c6256897e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3dfee3a0381cb76efb04ed05a32117ffef1e48ae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcyicrCRBK7hj4Ov3rIwAAdHIIAJOf5pkw0c0Q9sN2ngDiPSRm\naYucZbhgxm5i2WsrKa4uDJNng3bixn7eCZ4MSGouXjy8E4xxgRYOe6gFTqDeWtnK\nyXFyuSDq0+n2m850n35zw9Y1l6sP89iFLKoLRwlMPCtbdIoecYn/I1PAD0EF2Znn\nuks9OEFxb7sgZpAM/O2UT2c9rrUCzmfWM1dwfqcUGBsVtawtKIDQRYJpYl8RrDjf\nx1l4PhNpXt4ZRLTsP4g4zqibOPCBiNp9dEKXZ/jOKkU016yfs8QAudZQrJ1jpN+9\nz99kVHv7RdhMP0pnOwVBSq0m8fRpfcd5oMeWvAutLzjux6dr9xznszZ81FB+KZg=\n=NNa9\n-----END PGP SIGNATURE-----\n", "payload": "tree 013cacd2b82269e4829c9e9531c5a35c6256897e\nparent 16939a50ea440e72cb6ecefdaabb988addb1ec0e\nparent 26199a27ffe777db9bfbff32e7ff8f5e4c7dde4c\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1556752171 +0200\ncommitter GitHub <noreply@github.com> 1556752171 +0200\n\nRollup merge of #60439 - vorner:zombie-apocalypse-warn, r=TimNN\n\ndoc: Warn about possible zombie apocalypse\n\nExtend the std::process::Child docs with warning about possible zombies.\nThe previous version mentioned that when dropping the Child, the\nprocess is not killed. However, the wording gave the impression that\nsuch behaviour is fine to do (leaving the reader believe low-level\ndetails like reaping zombies of the dead processes is taken over by std\nsomehow; or simply leaving the reader unaware about the problem).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3dfee3a0381cb76efb04ed05a32117ffef1e48ae", "html_url": "https://github.com/rust-lang/rust/commit/3dfee3a0381cb76efb04ed05a32117ffef1e48ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3dfee3a0381cb76efb04ed05a32117ffef1e48ae/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16939a50ea440e72cb6ecefdaabb988addb1ec0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/16939a50ea440e72cb6ecefdaabb988addb1ec0e", "html_url": "https://github.com/rust-lang/rust/commit/16939a50ea440e72cb6ecefdaabb988addb1ec0e"}, {"sha": "26199a27ffe777db9bfbff32e7ff8f5e4c7dde4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/26199a27ffe777db9bfbff32e7ff8f5e4c7dde4c", "html_url": "https://github.com/rust-lang/rust/commit/26199a27ffe777db9bfbff32e7ff8f5e4c7dde4c"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "6e4c6e4c366e4e2cae01d0a7cb2a9f82b88d483f", "filename": "src/libstd/process.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3dfee3a0381cb76efb04ed05a32117ffef1e48ae/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dfee3a0381cb76efb04ed05a32117ffef1e48ae/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=3dfee3a0381cb76efb04ed05a32117ffef1e48ae", "patch": "@@ -134,6 +134,18 @@ use crate::sys_common::{AsInner, AsInnerMut, FromInner, IntoInner};\n /// the parent process wait until the child has actually exited before\n /// continuing.\n ///\n+/// # Warning\n+///\n+/// On some system, calling [`wait`] or similar is necessary for the OS to\n+/// release resources. A process that terminated but has not been waited on is\n+/// still around as a \"zombie\". Leaving too many zombies around may exhaust\n+/// global resources (for example process IDs).\n+///\n+/// The standard library does *not* automatically wait on child processes (not\n+/// even if the `Child` is dropped), it is up to the application developer to do\n+/// so. As a consequence, dropping `Child` handles without waiting on them first\n+/// is not recommended in long-running applications.\n+///\n /// # Examples\n ///\n /// ```should_panic"}]}