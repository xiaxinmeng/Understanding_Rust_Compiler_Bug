{"sha": "1b02cafa43a97dd4475b2d255c0f5662726a68f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiMDJjYWZhNDNhOTdkZDQ0NzViMmQyNTVjMGY1NjYyNzI2YTY4ZjE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-04T09:37:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-04T09:37:30Z"}, "message": "Merge #9734\n\n9734: semantic highlighting: add reference hlmod r=matklad a=jhgg\n\nThis PR adds the \"reference\" highlight modifier! \r\n\r\nI basically went around and looked for `HlMod::Mutable` to find the callsites to add a reference. I think these all make sense! \n\nCo-authored-by: Jake Heinz <jh@discordapp.com>\nCo-authored-by: Jake <jh@discordapp.com>", "tree": {"sha": "53f456713573af078518018c342cc5b11067ddf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53f456713573af078518018c342cc5b11067ddf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b02cafa43a97dd4475b2d255c0f5662726a68f1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhCl/aCRBK7hj4Ov3rIwAA0SAIAJ/oblGKqg/dPkTDkUJkYiDC\nJw2dDjw0pwZCuFZvGkUD0OalLg0nss848I5h2XcCsMBTuX6vQfEJfAYxaTYtyFMr\nDx3xAncYjbeG8lilRk4y2GmQHny7/qfp0Cy0/nx2R76J0SCAonBTP2cTlz21KYQX\nviPEs5ldWcIAKtiuYAtmTo89r/YAvKtdGmnE1X5E8jYqr++2J2f+f1klx7bRkSqN\n1WMNl9zr/zmJUaGxc10NONMKv79uBaeaCqTGRGlB97Ah0PWXH5+x8/Moc9q3230T\n2euw5sjCeEjuGzN4JhOq8wf2iy/eokd1R0uYA3YGvoV6JG9f/MdXZn0lN7UPXOE=\n=sKjY\n-----END PGP SIGNATURE-----\n", "payload": "tree 53f456713573af078518018c342cc5b11067ddf2\nparent 8a8431133e1d859fe6a168cc20288d48957d97fe\nparent 19b1d505dba3068a351f6626134a542a624f97a1\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1628069850 +0000\ncommitter GitHub <noreply@github.com> 1628069850 +0000\n\nMerge #9734\n\n9734: semantic highlighting: add reference hlmod r=matklad a=jhgg\n\nThis PR adds the \"reference\" highlight modifier! \r\n\r\nI basically went around and looked for `HlMod::Mutable` to find the callsites to add a reference. I think these all make sense! \n\nCo-authored-by: Jake Heinz <jh@discordapp.com>\nCo-authored-by: Jake <jh@discordapp.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b02cafa43a97dd4475b2d255c0f5662726a68f1", "html_url": "https://github.com/rust-lang/rust/commit/1b02cafa43a97dd4475b2d255c0f5662726a68f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b02cafa43a97dd4475b2d255c0f5662726a68f1/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a8431133e1d859fe6a168cc20288d48957d97fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a8431133e1d859fe6a168cc20288d48957d97fe", "html_url": "https://github.com/rust-lang/rust/commit/8a8431133e1d859fe6a168cc20288d48957d97fe"}, {"sha": "19b1d505dba3068a351f6626134a542a624f97a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/19b1d505dba3068a351f6626134a542a624f97a1", "html_url": "https://github.com/rust-lang/rust/commit/19b1d505dba3068a351f6626134a542a624f97a1"}], "stats": {"total": 125, "additions": 81, "deletions": 44}, "files": [{"sha": "9a77607d670c24db68e883fae881adbccab82ce7", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=1b02cafa43a97dd4475b2d255c0f5662726a68f1", "patch": "@@ -1861,6 +1861,14 @@ impl Local {\n         matches!(&body[self.pat_id], Pat::Bind { mode: BindingAnnotation::Mutable, .. })\n     }\n \n+    pub fn is_ref(self, db: &dyn HirDatabase) -> bool {\n+        let body = db.body(self.parent);\n+        matches!(\n+            &body[self.pat_id],\n+            Pat::Bind { mode: BindingAnnotation::Ref | BindingAnnotation::RefMut, .. }\n+        )\n+    }\n+\n     pub fn parent(self, _db: &dyn HirDatabase) -> DefWithBody {\n         self.parent.into()\n     }\n@@ -2216,6 +2224,10 @@ impl Type {\n         matches!(self.ty.kind(&Interner), TyKind::Ref(hir_ty::Mutability::Mut, ..))\n     }\n \n+    pub fn is_reference(&self) -> bool {\n+        matches!(self.ty.kind(&Interner), TyKind::Ref(..))\n+    }\n+\n     pub fn is_usize(&self) -> bool {\n         matches!(self.ty.kind(&Interner), TyKind::Scalar(Scalar::Uint(UintTy::Usize)))\n     }"}, {"sha": "555f3c5d3ce181ab53c345b51c3739d972b8928f", "filename": "crates/ide/src/syntax_highlighting/highlight.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs?ref=1b02cafa43a97dd4475b2d255c0f5662726a68f1", "patch": "@@ -375,11 +375,14 @@ fn highlight_def(db: &RootDatabase, krate: Option<hir::Crate>, def: Definition)\n                 if let Some(item) = func.as_assoc_item(db) {\n                     h |= HlMod::Associated;\n                     match func.self_param(db) {\n-                        Some(sp) => {\n-                            if let hir::Access::Exclusive = sp.access(db) {\n+                        Some(sp) => match sp.access(db) {\n+                            hir::Access::Exclusive => {\n                                 h |= HlMod::Mutable;\n+                                h |= HlMod::Reference;\n                             }\n-                        }\n+                            hir::Access::Shared => h |= HlMod::Reference,\n+                            _ => {}\n+                        },\n                         None => h |= HlMod::Static,\n                     }\n \n@@ -488,6 +491,9 @@ fn highlight_def(db: &RootDatabase, krate: Option<hir::Crate>, def: Definition)\n             if local.is_mut(db) || ty.is_mutable_reference() {\n                 h |= HlMod::Mutable;\n             }\n+            if local.is_ref(db) || ty.is_reference() {\n+                h |= HlMod::Reference;\n+            }\n             if ty.as_callable(db).is_some() || ty.impls_fnonce(db) {\n                 h |= HlMod::Callable;\n             }\n@@ -549,8 +555,11 @@ fn highlight_method_call(\n \n     if let Some(self_param) = func.self_param(sema.db) {\n         match self_param.access(sema.db) {\n-            hir::Access::Shared => (),\n-            hir::Access::Exclusive => h |= HlMod::Mutable,\n+            hir::Access::Shared => h |= HlMod::Reference,\n+            hir::Access::Exclusive => {\n+                h |= HlMod::Mutable;\n+                h |= HlMod::Reference;\n+            }\n             hir::Access::Owned => {\n                 if let Some(receiver_ty) =\n                     method_call.receiver().and_then(|it| sema.type_of_expr(&it))"}, {"sha": "6064ef4517695afe11d34d55121c279d29ffcd69", "filename": "crates/ide/src/syntax_highlighting/html.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs?ref=1b02cafa43a97dd4475b2d255c0f5662726a68f1", "patch": "@@ -87,6 +87,7 @@ pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padd\n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }\n .control            { font-style: italic; }\n+.reference          { font-style: italic; font-weight: bold; }\n \n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>"}, {"sha": "95c6a3d5af871e0cfab5ff256d8c25729a9c577e", "filename": "crates/ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=1b02cafa43a97dd4475b2d255c0f5662726a68f1", "patch": "@@ -64,6 +64,8 @@ pub enum HlMod {\n     IntraDocLink,\n     /// Mutable binding.\n     Mutable,\n+    /// Immutable reference.\n+    Reference,\n     /// Used for associated functions.\n     Static,\n     /// Used for items in traits and trait impls.\n@@ -194,6 +196,7 @@ impl HlMod {\n         HlMod::Injected,\n         HlMod::IntraDocLink,\n         HlMod::Mutable,\n+        HlMod::Reference,\n         HlMod::Static,\n         HlMod::Trait,\n         HlMod::Async,\n@@ -214,6 +217,7 @@ impl HlMod {\n             HlMod::Injected => \"injected\",\n             HlMod::IntraDocLink => \"intra_doc_link\",\n             HlMod::Mutable => \"mutable\",\n+            HlMod::Reference => \"reference\",\n             HlMod::Static => \"static\",\n             HlMod::Trait => \"trait\",\n             HlMod::Async => \"async\","}, {"sha": "a5d2ba31ee55e378a18b67244a8cd862713515a4", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_assoc_functions.html", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html", "raw_url": "https://github.com/rust-lang/rust/raw/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html?ref=1b02cafa43a97dd4475b2d255c0f5662726a68f1", "patch": "@@ -35,6 +35,7 @@\n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }\n .control            { font-style: italic; }\n+.reference          { font-style: italic; font-weight: bold; }\n \n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n@@ -44,16 +45,16 @@\n \n <span class=\"keyword\">impl</span> <span class=\"struct\">foo</span> <span class=\"brace\">{</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration static public\">is_static</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration public\">is_not_static</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference public\">is_not_static</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">trait</span> <span class=\"trait declaration\">t</span> <span class=\"brace\">{</span>\n     <span class=\"keyword\">fn</span> <span class=\"function associated declaration static trait\">t_is_static</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration trait\">t_is_not_static</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference trait\">t_is_not_static</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"trait\">t</span> <span class=\"keyword\">for</span> <span class=\"struct\">foo</span> <span class=\"brace\">{</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration static trait public\">is_static</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration trait public\">is_not_static</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference trait public\">is_not_static</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n         </code></pre>\n\\ No newline at end of file"}, {"sha": "a5af8a6c86a3b78055bd0a833ee712fbf36685cf", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_doctest.html", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "raw_url": "https://github.com/rust-lang/rust/raw/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html?ref=1b02cafa43a97dd4475b2d255c0f5662726a68f1", "patch": "@@ -35,6 +35,7 @@\n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }\n .control            { font-style: italic; }\n+.reference          { font-style: italic; font-weight: bold; }\n \n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n@@ -94,7 +95,7 @@\n     <span class=\"comment documentation\">/// </span><span class=\"comment injected\">/* multi-line</span>\n     <span class=\"comment documentation\">/// </span><span class=\"comment injected\">       comment */</span>\n     <span class=\"comment documentation\">///</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"variable declaration injected\">multi_line_string</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"string_literal injected\">\"Foo</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"variable declaration injected reference\">multi_line_string</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"string_literal injected\">\"Foo</span>\n     <span class=\"comment documentation\">/// </span><span class=\"string_literal injected\">  bar</span><span class=\"escape_sequence injected\">\\n</span>\n     <span class=\"comment documentation\">/// </span><span class=\"string_literal injected\">         \"</span><span class=\"semicolon injected\">;</span>\n     <span class=\"comment documentation\">///</span>\n@@ -107,7 +108,7 @@\n     <span class=\"comment documentation\">/// ```sh</span>\n     <span class=\"comment documentation\">/// echo 1</span>\n     <span class=\"comment documentation\">/// ```</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration public\">foo</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">bool</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference public\">foo</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">bool</span> <span class=\"brace\">{</span>\n         <span class=\"bool_literal\">true</span>\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>"}, {"sha": "e49de797b3774929a1da35d55eeacd20876138cf", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_extern_crate.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_extern_crate.html", "raw_url": "https://github.com/rust-lang/rust/raw/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_extern_crate.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_extern_crate.html?ref=1b02cafa43a97dd4475b2d255c0f5662726a68f1", "patch": "@@ -35,6 +35,7 @@\n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }\n .control            { font-style: italic; }\n+.reference          { font-style: italic; font-weight: bold; }\n \n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>"}, {"sha": "0c1aa1fe118434284c7e78b4d6c6efbcb57dffbf", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_injection.html", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html", "raw_url": "https://github.com/rust-lang/rust/raw/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html?ref=1b02cafa43a97dd4475b2d255c0f5662726a68f1", "patch": "@@ -35,10 +35,11 @@\n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }\n .control            { font-style: italic; }\n+.reference          { font-style: italic; font-weight: bold; }\n \n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n-<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">fixture</span><span class=\"parenthesis\">(</span><span class=\"value_param declaration\">ra_fixture</span><span class=\"colon\">:</span> <span class=\"operator\">&</span><span class=\"builtin_type\">str</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">fixture</span><span class=\"parenthesis\">(</span><span class=\"value_param declaration reference\">ra_fixture</span><span class=\"colon\">:</span> <span class=\"operator\">&</span><span class=\"builtin_type\">str</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n     <span class=\"function\">fixture</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">r#\"</span>"}, {"sha": "e519b22007a61fa75f813020f53a9682e5b08ad3", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_strings.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "raw_url": "https://github.com/rust-lang/rust/raw/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html?ref=1b02cafa43a97dd4475b2d255c0f5662726a68f1", "patch": "@@ -35,6 +35,7 @@\n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }\n .control            { font-style: italic; }\n+.reference          { font-style: italic; font-weight: bold; }\n \n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>"}, {"sha": "987f06a23ab1a2b2d71f7cd78978efaf0b3f72ad", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_unsafe.html", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html", "raw_url": "https://github.com/rust-lang/rust/raw/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html?ref=1b02cafa43a97dd4475b2d255c0f5662726a68f1", "patch": "@@ -35,6 +35,7 @@\n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }\n .control            { font-style: italic; }\n+.reference          { font-style: italic; font-weight: bold; }\n \n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n@@ -48,7 +49,7 @@\n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">HasUnsafeFn</span><span class=\"semicolon\">;</span>\n \n <span class=\"keyword\">impl</span> <span class=\"struct\">HasUnsafeFn</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration unsafe\">unsafe_method</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference unsafe\">unsafe_method</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">TypeForStaticMut</span> <span class=\"brace\">{</span>\n@@ -68,11 +69,11 @@\n <span class=\"keyword\">fn</span> <span class=\"function declaration\">require_unsafe_trait</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">T</span><span class=\"colon\">:</span> <span class=\"trait\">UnsafeTrait</span><span class=\"angle\">&gt;</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">_</span><span class=\"colon\">:</span> <span class=\"type_param\">T</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n <span class=\"keyword\">trait</span> <span class=\"trait declaration\">DoTheAutoref</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration trait\">calls_autoref</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference trait\">calls_autoref</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"trait\">DoTheAutoref</span> <span class=\"keyword\">for</span> <span class=\"builtin_type\">u16</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration trait\">calls_autoref</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference trait\">calls_autoref</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n@@ -86,7 +87,7 @@\n             <span class=\"union\">Union</span> <span class=\"brace\">{</span> <span class=\"field unsafe\">b</span><span class=\"colon\">:</span> <span class=\"numeric_literal\">0</span> <span class=\"brace\">}</span> <span class=\"operator\">=&gt;</span> <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"comma\">,</span>\n             <span class=\"union\">Union</span> <span class=\"brace\">{</span> <span class=\"field unsafe\">a</span> <span class=\"brace\">}</span> <span class=\"operator\">=&gt;</span> <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"comma\">,</span>\n         <span class=\"brace\">}</span>\n-        <span class=\"struct\">HasUnsafeFn</span><span class=\"operator\">.</span><span class=\"function associated unsafe\">unsafe_method</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+        <span class=\"struct\">HasUnsafeFn</span><span class=\"operator\">.</span><span class=\"function associated reference unsafe\">unsafe_method</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n \n         <span class=\"comment\">// unsafe deref</span>\n         <span class=\"keyword\">let</span> <span class=\"variable declaration\">y</span> <span class=\"operator\">=</span> <span class=\"operator unsafe\">*</span><span class=\"variable\">x</span><span class=\"semicolon\">;</span>\n@@ -96,12 +97,12 @@\n \n         <span class=\"comment\">// unsafe ref of packed fields</span>\n         <span class=\"keyword\">let</span> <span class=\"variable declaration\">packed</span> <span class=\"operator\">=</span> <span class=\"struct\">Packed</span> <span class=\"brace\">{</span> <span class=\"field\">a</span><span class=\"colon\">:</span> <span class=\"numeric_literal\">0</span> <span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n-        <span class=\"keyword\">let</span> <span class=\"variable declaration\">a</span> <span class=\"operator\">=</span> <span class=\"operator unsafe\">&</span><span class=\"variable\">packed</span><span class=\"operator\">.</span><span class=\"field\">a</span><span class=\"semicolon\">;</span>\n-        <span class=\"keyword\">let</span> <span class=\"keyword unsafe\">ref</span> <span class=\"variable declaration\">a</span> <span class=\"operator\">=</span> <span class=\"variable\">packed</span><span class=\"operator\">.</span><span class=\"field\">a</span><span class=\"semicolon\">;</span>\n+        <span class=\"keyword\">let</span> <span class=\"variable declaration reference\">a</span> <span class=\"operator\">=</span> <span class=\"operator unsafe\">&</span><span class=\"variable\">packed</span><span class=\"operator\">.</span><span class=\"field\">a</span><span class=\"semicolon\">;</span>\n+        <span class=\"keyword\">let</span> <span class=\"keyword unsafe\">ref</span> <span class=\"variable declaration reference\">a</span> <span class=\"operator\">=</span> <span class=\"variable\">packed</span><span class=\"operator\">.</span><span class=\"field\">a</span><span class=\"semicolon\">;</span>\n         <span class=\"keyword\">let</span> <span class=\"struct\">Packed</span> <span class=\"brace\">{</span> <span class=\"keyword unsafe\">ref</span> <span class=\"field\">a</span> <span class=\"brace\">}</span> <span class=\"operator\">=</span> <span class=\"variable\">packed</span><span class=\"semicolon\">;</span>\n-        <span class=\"keyword\">let</span> <span class=\"struct\">Packed</span> <span class=\"brace\">{</span> <span class=\"field\">a</span><span class=\"colon\">:</span> <span class=\"keyword unsafe\">ref</span> <span class=\"variable declaration\">_a</span> <span class=\"brace\">}</span> <span class=\"operator\">=</span> <span class=\"variable\">packed</span><span class=\"semicolon\">;</span>\n+        <span class=\"keyword\">let</span> <span class=\"struct\">Packed</span> <span class=\"brace\">{</span> <span class=\"field\">a</span><span class=\"colon\">:</span> <span class=\"keyword unsafe\">ref</span> <span class=\"variable declaration reference\">_a</span> <span class=\"brace\">}</span> <span class=\"operator\">=</span> <span class=\"variable\">packed</span><span class=\"semicolon\">;</span>\n \n         <span class=\"comment\">// unsafe auto ref of packed field</span>\n-        <span class=\"variable\">packed</span><span class=\"operator\">.</span><span class=\"field\">a</span><span class=\"operator\">.</span><span class=\"function associated trait unsafe\">calls_autoref</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+        <span class=\"variable\">packed</span><span class=\"operator\">.</span><span class=\"field\">a</span><span class=\"operator\">.</span><span class=\"function associated reference trait unsafe\">calls_autoref</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "88a348115b9edc3f40656cde5da9b18dac0101a8", "filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html", "status": "modified", "additions": 19, "deletions": 18, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html?ref=1b02cafa43a97dd4475b2d255c0f5662726a68f1", "patch": "@@ -35,6 +35,7 @@\n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }\n .control            { font-style: italic; }\n+.reference          { font-style: italic; font-weight: bold; }\n \n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n@@ -68,12 +69,12 @@\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Bar</span> <span class=\"keyword\">where</span> <span class=\"type_param\">Self</span><span class=\"colon\">:</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration trait\">bar</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference trait\">bar</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"trait\">Bar</span> <span class=\"keyword\">for</span> <span class=\"struct\">Foo</span> <span class=\"keyword\">where</span> <span class=\"self_type\">Self</span><span class=\"colon\">:</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration trait\">bar</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">{</span>\n-        <span class=\"self_keyword\">self</span><span class=\"operator\">.</span><span class=\"field public\">x</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference trait\">bar</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">{</span>\n+        <span class=\"self_keyword reference\">self</span><span class=\"operator\">.</span><span class=\"field public\">x</span>\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n@@ -82,12 +83,12 @@\n         <span class=\"value_param\">f</span><span class=\"operator\">.</span><span class=\"function associated consuming\">baz</span><span class=\"parenthesis\">(</span><span class=\"self_keyword consuming mutable\">self</span><span class=\"parenthesis\">)</span>\n     <span class=\"brace\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration mutable\">qux</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword declaration mutable\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n-        <span class=\"self_keyword mutable\">self</span><span class=\"operator\">.</span><span class=\"field public\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated declaration mutable reference\">qux</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword declaration mutable reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+        <span class=\"self_keyword mutable reference\">self</span><span class=\"operator\">.</span><span class=\"field public\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"semicolon\">;</span>\n     <span class=\"brace\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration\">quop</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">{</span>\n-        <span class=\"self_keyword\">self</span><span class=\"operator\">.</span><span class=\"field public\">x</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference\">quop</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">{</span>\n+        <span class=\"self_keyword reference\">self</span><span class=\"operator\">.</span><span class=\"field public\">x</span>\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n@@ -101,12 +102,12 @@\n         <span class=\"value_param\">f</span><span class=\"operator\">.</span><span class=\"function associated\">baz</span><span class=\"parenthesis\">(</span><span class=\"self_keyword\">self</span><span class=\"parenthesis\">)</span>\n     <span class=\"brace\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration mutable\">qux</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword declaration mutable\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n-        <span class=\"self_keyword mutable\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated declaration mutable reference\">qux</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword declaration mutable reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+        <span class=\"self_keyword mutable reference\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"semicolon\">;</span>\n     <span class=\"brace\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration\">quop</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"brace\">{</span>\n-        <span class=\"self_keyword\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference\">quop</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"brace\">{</span>\n+        <span class=\"self_keyword reference\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span>\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n@@ -196,22 +197,22 @@\n \n     <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">42</span><span class=\"semicolon\">;</span>\n     <span class=\"variable mutable\">x</span> <span class=\"arithmetic mutable\">+=</span> <span class=\"numeric_literal\">1</span><span class=\"semicolon\">;</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration mutable\">y</span> <span class=\"operator\">=</span> <span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"variable mutable\">x</span><span class=\"semicolon\">;</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\">z</span> <span class=\"operator\">=</span> <span class=\"operator\">&</span><span class=\"variable mutable\">y</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration mutable reference\">y</span> <span class=\"operator\">=</span> <span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"variable mutable\">x</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration reference\">z</span> <span class=\"operator\">=</span> <span class=\"operator\">&</span><span class=\"variable mutable reference\">y</span><span class=\"semicolon\">;</span>\n \n-    <span class=\"keyword\">let</span> <span class=\"struct\">Foo</span> <span class=\"brace\">{</span> <span class=\"field public\">x</span><span class=\"colon\">:</span> <span class=\"variable declaration\">z</span><span class=\"comma\">,</span> <span class=\"field\">y</span> <span class=\"brace\">}</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span> <span class=\"brace\">{</span> <span class=\"field public\">x</span><span class=\"colon\">:</span> <span class=\"variable\">z</span><span class=\"comma\">,</span> <span class=\"field\">y</span> <span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"struct\">Foo</span> <span class=\"brace\">{</span> <span class=\"field public\">x</span><span class=\"colon\">:</span> <span class=\"variable declaration\">z</span><span class=\"comma\">,</span> <span class=\"field\">y</span> <span class=\"brace\">}</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span> <span class=\"brace\">{</span> <span class=\"field public\">x</span><span class=\"colon\">:</span> <span class=\"variable reference\">z</span><span class=\"comma\">,</span> <span class=\"field\">y</span> <span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n \n     <span class=\"variable\">y</span><span class=\"semicolon\">;</span>\n \n     <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">foo</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span> <span class=\"brace\">{</span> <span class=\"field\">x</span><span class=\"comma\">,</span> <span class=\"field public\">y</span><span class=\"colon\">:</span> <span class=\"variable mutable\">x</span> <span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n     <span class=\"keyword\">let</span> <span class=\"variable declaration\">foo2</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span> <span class=\"brace\">{</span> <span class=\"field\">x</span><span class=\"comma\">,</span> <span class=\"field public\">y</span><span class=\"colon\">:</span> <span class=\"variable mutable\">x</span> <span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n-    <span class=\"variable mutable\">foo</span><span class=\"operator\">.</span><span class=\"function associated\">quop</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"variable mutable\">foo</span><span class=\"operator\">.</span><span class=\"function associated mutable\">qux</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"variable mutable\">foo</span><span class=\"operator\">.</span><span class=\"function associated reference\">quop</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"variable mutable\">foo</span><span class=\"operator\">.</span><span class=\"function associated mutable reference\">qux</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"variable mutable\">foo</span><span class=\"operator\">.</span><span class=\"function associated consuming\">baz</span><span class=\"parenthesis\">(</span><span class=\"variable consuming\">foo2</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n \n     <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">copy</span> <span class=\"operator\">=</span> <span class=\"struct\">FooCopy</span> <span class=\"brace\">{</span> <span class=\"field\">x</span> <span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n-    <span class=\"variable mutable\">copy</span><span class=\"operator\">.</span><span class=\"function associated\">quop</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"variable mutable\">copy</span><span class=\"operator\">.</span><span class=\"function associated mutable\">qux</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"variable mutable\">copy</span><span class=\"operator\">.</span><span class=\"function associated reference\">quop</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"variable mutable\">copy</span><span class=\"operator\">.</span><span class=\"function associated mutable reference\">qux</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"variable mutable\">copy</span><span class=\"operator\">.</span><span class=\"function associated\">baz</span><span class=\"parenthesis\">(</span><span class=\"variable mutable\">copy</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n \n     <span class=\"keyword\">let</span> <span class=\"variable callable declaration\">a</span> <span class=\"operator\">=</span> <span class=\"punctuation\">|</span><span class=\"value_param declaration\">x</span><span class=\"punctuation\">|</span> <span class=\"value_param\">x</span><span class=\"semicolon\">;</span>"}, {"sha": "afb32746f14836db13b24a415c2fed5a6d47da7f", "filename": "crates/ide/src/syntax_highlighting/test_data/injection.html", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Finjection.html", "raw_url": "https://github.com/rust-lang/rust/raw/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Finjection.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Finjection.html?ref=1b02cafa43a97dd4475b2d255c0f5662726a68f1", "patch": "@@ -35,10 +35,11 @@\n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }\n .control            { font-style: italic; }\n+.reference          { font-style: italic; font-weight: bold; }\n \n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n-<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">f</span><span class=\"parenthesis\">(</span><span class=\"value_param declaration\">ra_fixture</span><span class=\"colon\">:</span> <span class=\"operator\">&</span><span class=\"builtin_type\">str</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">f</span><span class=\"parenthesis\">(</span><span class=\"value_param declaration reference\">ra_fixture</span><span class=\"colon\">:</span> <span class=\"operator\">&</span><span class=\"builtin_type\">str</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n     <span class=\"function\">f</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">r\"</span>\n <span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>"}, {"sha": "f0c96412f11e2f7af6e8801ad504f6292580bed2", "filename": "crates/ide/src/syntax_highlighting/test_data/rainbow_highlighting.html", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Frainbow_highlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Frainbow_highlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Frainbow_highlighting.html?ref=1b02cafa43a97dd4475b2d255c0f5662726a68f1", "patch": "@@ -35,18 +35,19 @@\n .keyword            { color: #F0DFAF; font-weight: bold; }\n .keyword.unsafe     { color: #BC8383; font-weight: bold; }\n .control            { font-style: italic; }\n+.reference          { font-style: italic; font-weight: bold; }\n \n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n <pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(273,88%,88%);\">hello</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"hello\"</span><span class=\"semicolon\">;</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"2705725358298919760\" style=\"color: hsl(76,47%,83%);\">x</span> <span class=\"operator\">=</span> <span class=\"variable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(273,88%,88%);\">hello</span><span class=\"operator\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"3365759661443752373\" style=\"color: hsl(15,86%,51%);\">y</span> <span class=\"operator\">=</span> <span class=\"variable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(273,88%,88%);\">hello</span><span class=\"operator\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration reference\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(273,88%,88%);\">hello</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"hello\"</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"2705725358298919760\" style=\"color: hsl(76,47%,83%);\">x</span> <span class=\"operator\">=</span> <span class=\"variable reference\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(273,88%,88%);\">hello</span><span class=\"operator\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"3365759661443752373\" style=\"color: hsl(15,86%,51%);\">y</span> <span class=\"operator\">=</span> <span class=\"variable reference\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(273,88%,88%);\">hello</span><span class=\"operator\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n \n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"794745962933817518\" style=\"color: hsl(127,71%,87%);\">x</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"other color please!\"</span><span class=\"semicolon\">;</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"6717528807933952652\" style=\"color: hsl(90,74%,79%);\">y</span> <span class=\"operator\">=</span> <span class=\"variable\" data-binding-hash=\"794745962933817518\" style=\"color: hsl(127,71%,87%);\">x</span><span class=\"operator\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration reference\" data-binding-hash=\"794745962933817518\" style=\"color: hsl(127,71%,87%);\">x</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"other color please!\"</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"6717528807933952652\" style=\"color: hsl(90,74%,79%);\">y</span> <span class=\"operator\">=</span> <span class=\"variable reference\" data-binding-hash=\"794745962933817518\" style=\"color: hsl(127,71%,87%);\">x</span><span class=\"operator\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(273,88%,88%);\">hello</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"hello\"</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable reference\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(273,88%,88%);\">hello</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"hello\"</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "f2ed98f2a4b3e64d392941ef2523480b4ebbed5c", "filename": "crates/rust-analyzer/src/semantic_tokens.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs?ref=1b02cafa43a97dd4475b2d255c0f5662726a68f1", "patch": "@@ -100,6 +100,7 @@ define_semantic_token_modifiers![\n     (TRAIT_MODIFIER, \"trait\"),\n     (CALLABLE, \"callable\"),\n     (INTRA_DOC_LINK, \"intraDocLink\"),\n+    (REFERENCE, \"reference\"),\n ];\n \n #[derive(Default)]"}, {"sha": "8dcfff5c71fd8e6dcec8e719b080c5990c6e43cd", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b02cafa43a97dd4475b2d255c0f5662726a68f1/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=1b02cafa43a97dd4475b2d255c0f5662726a68f1", "patch": "@@ -533,6 +533,7 @@ fn semantic_token_type_and_modifiers(\n             HlMod::Injected => semantic_tokens::INJECTED,\n             HlMod::ControlFlow => semantic_tokens::CONTROL_FLOW,\n             HlMod::Mutable => semantic_tokens::MUTABLE,\n+            HlMod::Reference => semantic_tokens::REFERENCE,\n             HlMod::Consuming => semantic_tokens::CONSUMING,\n             HlMod::Async => semantic_tokens::ASYNC,\n             HlMod::Library => semantic_tokens::LIBRARY,"}]}