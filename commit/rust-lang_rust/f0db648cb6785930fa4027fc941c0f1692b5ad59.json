{"sha": "f0db648cb6785930fa4027fc941c0f1692b5ad59", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwZGI2NDhjYjY3ODU5MzBmYTQwMjdmYzk0MWMwZjE2OTJiNWFkNTk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-26T14:53:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-26T14:53:05Z"}, "message": "Merge #9558\n\n9558: Do not erase Cargo diagnostics from the closed documents r=matklad a=SomeoneToIgnore\n\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/6850\r\n\r\nThe LSP specification at https://microsoft.github.io/language-server-protocol/specifications/specification-3-14/#textDocument_publishDiagnostics states that\r\n\r\n\r\n> Diagnostics notification are sent from the server to the client to signal results of validation runs.\r\n> \r\n> Diagnostics are \u201cowned\u201d by the server so it is the server\u2019s responsibility to clear them if necessary. The following rule is used for VS Code servers that generate diagnostics:\r\n> \r\n>  *  if a language is single file only (for example HTML) then diagnostics are cleared by the server when the file is closed.\r\n>  *  if a language has a project system (for example C#) diagnostics are not cleared when a file closes. When a project is opened all diagnostics for all files are recomputed (or read from a cache).\r\n> \r\n> When a file changes it is the server\u2019s responsibility to re-compute diagnostics and push them to the client. If the computed set is empty it has to push the empty array to clear former diagnostics. Newly pushed diagnostics always replace previously pushed diagnostics. There is no merging that happens on the client side.\r\n\r\n\r\nSo for projects we should not clear any diagnostics from cargo/json projects.\r\nOur \"standalone file\" mode is in a way a project too, with sysroot attached and a potential support for dynamic standalone files.\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>", "tree": {"sha": "46001da42a59f0b5c957221e1cea75d8f7aa974d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46001da42a59f0b5c957221e1cea75d8f7aa974d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0db648cb6785930fa4027fc941c0f1692b5ad59", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg/sxRCRBK7hj4Ov3rIwAA95IIACMMTzt3z85tc7PiQHWwFeG+\nlq+aoWN3EZO7fSQlRn7bBiQQHtpzUx8pBn5yZJuaTK6uWRGq1LPGI38Eb0kLJxkq\n72KTDozkb9bX+H1aQS/uh3BMPgDxWlJW7T1FS/2Le9TwU/y3DRMXfPvoAk/LI1MX\n46FtcHTC9cVPHOZD3CfaI5ofdffg84TS4C/l/eBjl+cO6J6oOy9uB+Nql74x6omU\nY+tfm7/cqIbNpKA+hYisC12ZbFl77BE3gdNSrAw81+I4fBkO+q1wr/VGFOeMN4G9\nBoa8BJW9GyU0vw4G7IbQ/8nsRZ4Y6qarSNUVyjzk6jpVf8TAme1agwKwuhUEauc=\n=TE1u\n-----END PGP SIGNATURE-----\n", "payload": "tree 46001da42a59f0b5c957221e1cea75d8f7aa974d\nparent cfb7d3ac7bae0beff5afdbeef29edf1787ad9730\nparent 8ed97244134d1a59f4c06f8729680922a2986962\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1627311185 +0000\ncommitter GitHub <noreply@github.com> 1627311185 +0000\n\nMerge #9558\n\n9558: Do not erase Cargo diagnostics from the closed documents r=matklad a=SomeoneToIgnore\n\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/6850\r\n\r\nThe LSP specification at https://microsoft.github.io/language-server-protocol/specifications/specification-3-14/#textDocument_publishDiagnostics states that\r\n\r\n\r\n> Diagnostics notification are sent from the server to the client to signal results of validation runs.\r\n> \r\n> Diagnostics are \u201cowned\u201d by the server so it is the server\u2019s responsibility to clear them if necessary. The following rule is used for VS Code servers that generate diagnostics:\r\n> \r\n>  *  if a language is single file only (for example HTML) then diagnostics are cleared by the server when the file is closed.\r\n>  *  if a language has a project system (for example C#) diagnostics are not cleared when a file closes. When a project is opened all diagnostics for all files are recomputed (or read from a cache).\r\n> \r\n> When a file changes it is the server\u2019s responsibility to re-compute diagnostics and push them to the client. If the computed set is empty it has to push the empty array to clear former diagnostics. Newly pushed diagnostics always replace previously pushed diagnostics. There is no merging that happens on the client side.\r\n\r\n\r\nSo for projects we should not clear any diagnostics from cargo/json projects.\r\nOur \"standalone file\" mode is in a way a project too, with sysroot attached and a potential support for dynamic standalone files.\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0db648cb6785930fa4027fc941c0f1692b5ad59", "html_url": "https://github.com/rust-lang/rust/commit/f0db648cb6785930fa4027fc941c0f1692b5ad59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0db648cb6785930fa4027fc941c0f1692b5ad59/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfb7d3ac7bae0beff5afdbeef29edf1787ad9730", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfb7d3ac7bae0beff5afdbeef29edf1787ad9730", "html_url": "https://github.com/rust-lang/rust/commit/cfb7d3ac7bae0beff5afdbeef29edf1787ad9730"}, {"sha": "8ed97244134d1a59f4c06f8729680922a2986962", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ed97244134d1a59f4c06f8729680922a2986962", "html_url": "https://github.com/rust-lang/rust/commit/8ed97244134d1a59f4c06f8729680922a2986962"}], "stats": {"total": 17, "additions": 2, "deletions": 15}, "files": [{"sha": "8aaca47160386b730cd436088f4741a64e83769e", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f0db648cb6785930fa4027fc941c0f1692b5ad59/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0db648cb6785930fa4027fc941c0f1692b5ad59/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=f0db648cb6785930fa4027fc941c0f1692b5ad59", "patch": "@@ -627,11 +627,9 @@ impl GlobalState {\n                 Ok(())\n             })?\n             .on::<lsp_types::notification::DidCloseTextDocument>(|this, params| {\n-                let mut version = None;\n                 if let Ok(path) = from_proto::vfs_path(&params.text_document.uri) {\n-                    match this.mem_docs.remove(&path) {\n-                        Some(doc) => version = Some(doc.version),\n-                        None => log::error!(\"orphan DidCloseTextDocument: {}\", path),\n+                    if this.mem_docs.remove(&path).is_none() {\n+                        log::error!(\"orphan DidCloseTextDocument: {}\", path);\n                     }\n \n                     this.semantic_tokens_cache.lock().remove(&params.text_document.uri);\n@@ -640,17 +638,6 @@ impl GlobalState {\n                         this.loader.handle.invalidate(path.to_path_buf());\n                     }\n                 }\n-\n-                // Clear the diagnostics for the previously known version of the file.\n-                // This prevents stale \"cargo check\" diagnostics if the file is\n-                // closed, \"cargo check\" is run and then the file is reopened.\n-                this.send_notification::<lsp_types::notification::PublishDiagnostics>(\n-                    lsp_types::PublishDiagnosticsParams {\n-                        uri: params.text_document.uri,\n-                        diagnostics: Vec::new(),\n-                        version,\n-                    },\n-                );\n                 Ok(())\n             })?\n             .on::<lsp_types::notification::DidSaveTextDocument>(|this, params| {"}]}