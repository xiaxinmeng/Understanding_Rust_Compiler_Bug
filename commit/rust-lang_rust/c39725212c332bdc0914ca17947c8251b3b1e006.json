{"sha": "c39725212c332bdc0914ca17947c8251b3b1e006", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzOTcyNTIxMmMzMzJiZGMwOTE0Y2ExNzk0N2M4MjUxYjNiMWUwMDY=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2020-03-30T20:15:28Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2020-03-30T20:15:28Z"}, "message": "Use more functional programming in ArenaMap::insert\n\nI find this more readable and it flattens out the body a little.", "tree": {"sha": "a97cc77f3b01045fffe08016850c8cc90f707788", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a97cc77f3b01045fffe08016850c8cc90f707788"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c39725212c332bdc0914ca17947c8251b3b1e006", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c39725212c332bdc0914ca17947c8251b3b1e006", "html_url": "https://github.com/rust-lang/rust/commit/c39725212c332bdc0914ca17947c8251b3b1e006", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c39725212c332bdc0914ca17947c8251b3b1e006/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f0d8db529478ce41b429f06708fa600a97c2151", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f0d8db529478ce41b429f06708fa600a97c2151", "html_url": "https://github.com/rust-lang/rust/commit/6f0d8db529478ce41b429f06708fa600a97c2151"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "b9521c342e5a25e80d7f022a711517175211f110", "filename": "crates/ra_arena/src/map.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c39725212c332bdc0914ca17947c8251b3b1e006/crates%2Fra_arena%2Fsrc%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c39725212c332bdc0914ca17947c8251b3b1e006/crates%2Fra_arena%2Fsrc%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_arena%2Fsrc%2Fmap.rs?ref=c39725212c332bdc0914ca17947c8251b3b1e006", "patch": "@@ -17,11 +17,9 @@ impl<T, V> ArenaMap<Idx<T>, V> {\n         if self.v.capacity() <= idx {\n             self.v.reserve(idx + 1 - self.v.capacity());\n         }\n-        if self.v.len() <= idx {\n-            while self.v.len() <= idx {\n-                self.v.push(None);\n-            }\n-        }\n+\n+        let fill = (idx + 1).saturating_sub(self.v.len());\n+        self.v.extend(std::iter::repeat_with(|| None).take(fill));\n         self.v[idx] = Some(t);\n     }\n "}]}