{"sha": "c0d780395092fdb3a54403b9aaefdb38e25c9ddd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZDc4MDM5NTA5MmZkYjNhNTQ0MDNiOWFhZWZkYjM4ZTI1YzlkZGQ=", "commit": {"author": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-11-24T16:13:54Z"}, "committer": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-12-27T18:21:16Z"}, "message": "Fix replacement of escaping bound types\n\nMultiple references to the same `BoundTy` were not using the same\nresult.", "tree": {"sha": "14200d3902bb7177dd34a67f9c034183b4b1a216", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14200d3902bb7177dd34a67f9c034183b4b1a216"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0d780395092fdb3a54403b9aaefdb38e25c9ddd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0d780395092fdb3a54403b9aaefdb38e25c9ddd", "html_url": "https://github.com/rust-lang/rust/commit/c0d780395092fdb3a54403b9aaefdb38e25c9ddd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0d780395092fdb3a54403b9aaefdb38e25c9ddd/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5992e7ae9043217b507e465e9f0164db18fd517", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5992e7ae9043217b507e465e9f0164db18fd517", "html_url": "https://github.com/rust-lang/rust/commit/e5992e7ae9043217b507e465e9f0164db18fd517"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "0a72f733b51e5e8afe3d009ee98905b6cfc0f627", "filename": "src/librustc/ty/fold.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c0d780395092fdb3a54403b9aaefdb38e25c9ddd/src%2Flibrustc%2Fty%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0d780395092fdb3a54403b9aaefdb38e25c9ddd/src%2Flibrustc%2Fty%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ffold.rs?ref=c0d780395092fdb3a54403b9aaefdb38e25c9ddd", "patch": "@@ -533,18 +533,25 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n               G: FnMut(ty::BoundTy) -> ty::Ty<'tcx>,\n               T: TypeFoldable<'tcx>\n     {\n-        let mut map = BTreeMap::new();\n+        use rustc_data_structures::fx::FxHashMap;\n+\n+        let mut region_map = BTreeMap::new();\n+        let mut type_map = FxHashMap::default();\n \n         if !value.has_escaping_bound_vars() {\n-            (value.clone(), map)\n+            (value.clone(), region_map)\n         } else {\n             let mut real_fld_r = |br| {\n-                *map.entry(br).or_insert_with(|| fld_r(br))\n+                *region_map.entry(br).or_insert_with(|| fld_r(br))\n+            };\n+\n+            let mut real_fld_t = |bound_ty| {\n+                *type_map.entry(bound_ty).or_insert_with(|| fld_t(bound_ty))\n             };\n \n-            let mut replacer = BoundVarReplacer::new(self, &mut real_fld_r, &mut fld_t);\n+            let mut replacer = BoundVarReplacer::new(self, &mut real_fld_r, &mut real_fld_t);\n             let result = value.fold_with(&mut replacer);\n-            (result, map)\n+            (result, region_map)\n         }\n     }\n "}]}