{"sha": "df7f02072b64712e5322ea70675135cb1e20bf80", "node_id": "C_kwDOAAsO6NoAKGRmN2YwMjA3MmI2NDcxMmU1MzIyZWE3MDY3NTEzNWNiMWUyMGJmODA", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-12-04T14:03:50Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-12-04T14:03:50Z"}, "message": "Remove black box inline asm fallback\n\nIt isn't used anymore since the introduction of the black_box intrinsic", "tree": {"sha": "13b9adc3a20c99cc524747111b1b80f1b80884f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13b9adc3a20c99cc524747111b1b80f1b80884f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df7f02072b64712e5322ea70675135cb1e20bf80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df7f02072b64712e5322ea70675135cb1e20bf80", "html_url": "https://github.com/rust-lang/rust/commit/df7f02072b64712e5322ea70675135cb1e20bf80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df7f02072b64712e5322ea70675135cb1e20bf80/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f296311925cc8f88cb136bed06bcbb77e3027f93", "url": "https://api.github.com/repos/rust-lang/rust/commits/f296311925cc8f88cb136bed06bcbb77e3027f93", "html_url": "https://github.com/rust-lang/rust/commit/f296311925cc8f88cb136bed06bcbb77e3027f93"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "595e767cf710ff959336c73ae504c00d4a0e3f3a", "filename": "src/inline_asm.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/df7f02072b64712e5322ea70675135cb1e20bf80/src%2Finline_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df7f02072b64712e5322ea70675135cb1e20bf80/src%2Finline_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finline_asm.rs?ref=df7f02072b64712e5322ea70675135cb1e20bf80", "patch": "@@ -18,10 +18,7 @@ pub(crate) fn codegen_inline_asm<'tcx>(\n ) {\n     // FIXME add .eh_frame unwind info directives\n \n-    if template.is_empty() {\n-        // Black box\n-        return;\n-    } else if template[0] == InlineAsmTemplatePiece::String(\"int $$0x29\".to_string()) {\n+    if template[0] == InlineAsmTemplatePiece::String(\"int $$0x29\".to_string()) {\n         let true_ = fx.bcx.ins().iconst(types::I32, 1);\n         fx.bcx.ins().trapnz(true_, TrapCode::User(1));\n         return;"}]}