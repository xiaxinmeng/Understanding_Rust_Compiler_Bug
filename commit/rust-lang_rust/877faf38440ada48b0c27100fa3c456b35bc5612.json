{"sha": "877faf38440ada48b0c27100fa3c456b35bc5612", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3N2ZhZjM4NDQwYWRhNDhiMGMyNzEwMGZhM2M0NTZiMzViYzU2MTI=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-08-31T14:44:09Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-08-31T14:44:09Z"}, "message": "Check impl trait substs when checking for recursive types\n\nThis prevents mutual `async fn` recursion", "tree": {"sha": "ab75959b7524e88df196697a291b61238b2ab739", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab75959b7524e88df196697a291b61238b2ab739"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/877faf38440ada48b0c27100fa3c456b35bc5612", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/877faf38440ada48b0c27100fa3c456b35bc5612", "html_url": "https://github.com/rust-lang/rust/commit/877faf38440ada48b0c27100fa3c456b35bc5612", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/877faf38440ada48b0c27100fa3c456b35bc5612/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bb2d8b0765e6737f43b501135d91bc8ab64db7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bb2d8b0765e6737f43b501135d91bc8ab64db7a", "html_url": "https://github.com/rust-lang/rust/commit/7bb2d8b0765e6737f43b501135d91bc8ab64db7a"}], "stats": {"total": 98, "additions": 96, "deletions": 2}, "files": [{"sha": "a08c82a0ae82fdd7a559b14a7520d1f7dacd1263", "filename": "src/librustc/ty/util.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/877faf38440ada48b0c27100fa3c456b35bc5612/src%2Flibrustc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/877faf38440ada48b0c27100fa3c456b35bc5612/src%2Flibrustc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Futil.rs?ref=877faf38440ada48b0c27100fa3c456b35bc5612", "patch": "@@ -709,8 +709,10 @@ impl<'tcx> TyCtxt<'tcx> {\n                 substs: SubstsRef<'tcx>,\n             ) -> Option<Ty<'tcx>> {\n                 if self.found_recursion {\n-                    None\n-                } else if self.seen_opaque_tys.insert(def_id) {\n+                    return None;\n+                }\n+                let substs = substs.fold_with(self);\n+                if self.seen_opaque_tys.insert(def_id) {\n                     let generic_ty = self.tcx.type_of(def_id);\n                     let concrete_ty = generic_ty.subst(self.tcx, substs);\n                     let expanded_ty = self.fold_ty(concrete_ty);"}, {"sha": "bb2a61f03ce1f46e54d33741741df75762cda59f", "filename": "src/test/ui/async-await/mutually-recursive-async-impl-trait-type.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/877faf38440ada48b0c27100fa3c456b35bc5612/src%2Ftest%2Fui%2Fasync-await%2Fmutually-recursive-async-impl-trait-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/877faf38440ada48b0c27100fa3c456b35bc5612/src%2Ftest%2Fui%2Fasync-await%2Fmutually-recursive-async-impl-trait-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fmutually-recursive-async-impl-trait-type.rs?ref=877faf38440ada48b0c27100fa3c456b35bc5612", "patch": "@@ -0,0 +1,13 @@\n+// edition:2018\n+// Test that impl trait does not allow creating recursive types that are\n+// otherwise forbidden when using `async` and `await`.\n+\n+async fn rec_1() { //~ ERROR recursion in an `async fn`\n+    rec_2().await;\n+}\n+\n+async fn rec_2() { //~ ERROR recursion in an `async fn`\n+    rec_1().await;\n+}\n+\n+fn main() {}"}, {"sha": "9249308936e5452b4503c2f4ccaf14bde509958b", "filename": "src/test/ui/async-await/mutually-recursive-async-impl-trait-type.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/877faf38440ada48b0c27100fa3c456b35bc5612/src%2Ftest%2Fui%2Fasync-await%2Fmutually-recursive-async-impl-trait-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/877faf38440ada48b0c27100fa3c456b35bc5612/src%2Ftest%2Fui%2Fasync-await%2Fmutually-recursive-async-impl-trait-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fmutually-recursive-async-impl-trait-type.stderr?ref=877faf38440ada48b0c27100fa3c456b35bc5612", "patch": "@@ -0,0 +1,19 @@\n+error[E0733]: recursion in an `async fn` requires boxing\n+  --> $DIR/mutually-recursive-async-impl-trait-type.rs:5:18\n+   |\n+LL | async fn rec_1() {\n+   |                  ^ recursive `async fn`\n+   |\n+   = note: a recursive `async fn` must be rewritten to return a boxed `dyn Future`.\n+\n+error[E0733]: recursion in an `async fn` requires boxing\n+  --> $DIR/mutually-recursive-async-impl-trait-type.rs:9:18\n+   |\n+LL | async fn rec_2() {\n+   |                  ^ recursive `async fn`\n+   |\n+   = note: a recursive `async fn` must be rewritten to return a boxed `dyn Future`.\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0733`."}, {"sha": "cfd9c0ec5b45bab47c0813922f7ec11902452e3a", "filename": "src/test/ui/impl-trait/recursive-impl-trait-type--through-non-recursize.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/877faf38440ada48b0c27100fa3c456b35bc5612/src%2Ftest%2Fui%2Fimpl-trait%2Frecursive-impl-trait-type--through-non-recursize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/877faf38440ada48b0c27100fa3c456b35bc5612/src%2Ftest%2Fui%2Fimpl-trait%2Frecursive-impl-trait-type--through-non-recursize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Frecursive-impl-trait-type--through-non-recursize.rs?ref=877faf38440ada48b0c27100fa3c456b35bc5612", "patch": "@@ -0,0 +1,25 @@\n+// Test that impl trait does not allow creating recursive types that are\n+// otherwise forbidden. Even when there's an opaque type in another crate\n+// hiding this.\n+\n+fn id<T>(t: T) -> impl Sized { t }\n+\n+fn recursive_id() -> impl Sized { //~ ERROR opaque type expands to a recursive type\n+    id(recursive_id2())\n+}\n+\n+fn recursive_id2() -> impl Sized { //~ ERROR opaque type expands to a recursive type\n+    id(recursive_id())\n+}\n+\n+fn wrap<T>(t: T) -> impl Sized { (t,) }\n+\n+fn recursive_wrap() -> impl Sized { //~ ERROR opaque type expands to a recursive type\n+    wrap(recursive_wrap2())\n+}\n+\n+fn recursive_wrap2() -> impl Sized { //~ ERROR opaque type expands to a recursive type\n+    wrap(recursive_wrap())\n+}\n+\n+fn main() {}"}, {"sha": "7572c6c1bf0570f0169eb1f86350d488bb4d9d8d", "filename": "src/test/ui/impl-trait/recursive-impl-trait-type--through-non-recursize.stderr", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/877faf38440ada48b0c27100fa3c456b35bc5612/src%2Ftest%2Fui%2Fimpl-trait%2Frecursive-impl-trait-type--through-non-recursize.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/877faf38440ada48b0c27100fa3c456b35bc5612/src%2Ftest%2Fui%2Fimpl-trait%2Frecursive-impl-trait-type--through-non-recursize.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Frecursive-impl-trait-type--through-non-recursize.stderr?ref=877faf38440ada48b0c27100fa3c456b35bc5612", "patch": "@@ -0,0 +1,35 @@\n+error[E0720]: opaque type expands to a recursive type\n+  --> $DIR/recursive-impl-trait-type--through-non-recursize.rs:7:22\n+   |\n+LL | fn recursive_id() -> impl Sized {\n+   |                      ^^^^^^^^^^ expands to a recursive type\n+   |\n+   = note: type resolves to itself\n+\n+error[E0720]: opaque type expands to a recursive type\n+  --> $DIR/recursive-impl-trait-type--through-non-recursize.rs:11:23\n+   |\n+LL | fn recursive_id2() -> impl Sized {\n+   |                       ^^^^^^^^^^ expands to a recursive type\n+   |\n+   = note: type resolves to itself\n+\n+error[E0720]: opaque type expands to a recursive type\n+  --> $DIR/recursive-impl-trait-type--through-non-recursize.rs:17:24\n+   |\n+LL | fn recursive_wrap() -> impl Sized {\n+   |                        ^^^^^^^^^^ expands to a recursive type\n+   |\n+   = note: expanded type is `((impl Sized,),)`\n+\n+error[E0720]: opaque type expands to a recursive type\n+  --> $DIR/recursive-impl-trait-type--through-non-recursize.rs:21:25\n+   |\n+LL | fn recursive_wrap2() -> impl Sized {\n+   |                         ^^^^^^^^^^ expands to a recursive type\n+   |\n+   = note: expanded type is `((impl Sized,),)`\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0720`."}]}