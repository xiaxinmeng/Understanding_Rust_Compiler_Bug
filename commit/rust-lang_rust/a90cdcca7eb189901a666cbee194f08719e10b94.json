{"sha": "a90cdcca7eb189901a666cbee194f08719e10b94", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5MGNkY2NhN2ViMTg5OTAxYTY2NmNiZWUxOTRmMDg3MTllMTBiOTQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-24T14:44:52Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-24T14:44:52Z"}, "message": "this is for tidy", "tree": {"sha": "78deda5aa2aae151c791b84cca2f6266ef666299", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78deda5aa2aae151c791b84cca2f6266ef666299"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a90cdcca7eb189901a666cbee194f08719e10b94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a90cdcca7eb189901a666cbee194f08719e10b94", "html_url": "https://github.com/rust-lang/rust/commit/a90cdcca7eb189901a666cbee194f08719e10b94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a90cdcca7eb189901a666cbee194f08719e10b94/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d01ef7d9185a113fa5e089ce1ce71bb1fb6eac32", "url": "https://api.github.com/repos/rust-lang/rust/commits/d01ef7d9185a113fa5e089ce1ce71bb1fb6eac32", "html_url": "https://github.com/rust-lang/rust/commit/d01ef7d9185a113fa5e089ce1ce71bb1fb6eac32"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6b6f7f7a30740da24cf03fa4dcdb4163af1cdd35", "filename": "src/librustc/mir/interpret/value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a90cdcca7eb189901a666cbee194f08719e10b94/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a90cdcca7eb189901a666cbee194f08719e10b94/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs?ref=a90cdcca7eb189901a666cbee194f08719e10b94", "patch": "@@ -126,7 +126,7 @@ impl<Tag: fmt::Debug, Id: fmt::Debug> fmt::Debug for Scalar<Tag, Id> {\n                     assert_eq!(truncate(bits, Size::from_bytes(size as u64)), bits,\n                             \"Scalar value {:#x} exceeds size of {} bytes\", bits, size);\n                     // Format as hex number wide enough to fit any value of the given `size`.\n-                    // So e.g. bits=20, size=1 will be \"0x14\", but with size=4 it'll be \"0x00000014\".\n+                    // So bits=20, size=1 will be \"0x14\", but with size=4 it'll be \"0x00000014\".\n                     write!(f, \"0x{:>0width$x}\", bits, width=(size*2) as usize)\n                 }\n             }"}]}