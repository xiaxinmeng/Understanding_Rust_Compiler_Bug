{"sha": "5d30180634080dd761db77afc748dfd58e192a1d", "node_id": "C_kwDOAAsO6NoAKDVkMzAxODA2MzQwODBkZDc2MWRiNzdhZmM3NDhkZmQ1OGUxOTJhMWQ", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-03-27T02:20:36Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-03-31T19:34:46Z"}, "message": "Handle rustc_const_stable attribute in library feature collector", "tree": {"sha": "248813ffedf69d27e58faa16416f00fe0a1a6e5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/248813ffedf69d27e58faa16416f00fe0a1a6e5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d30180634080dd761db77afc748dfd58e192a1d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmJGAlYACgkQ+boUO5X/\nbYIZZw//StGf6Cl8BWfhEZJ7aWE1KzfcfARN/gdvGXpbJzGNSW7AxqCPxbXNaEsm\noG1Q2LY4REiNhmRwkA4RO8+DAYDBq6xzpApawBhWqjMtUI8HDh3bbwa+WYMiKJcP\nc2f6+A/ondhKTx14OotbQe8rio8OiWu2G1ME1ISftbvd0mCJjvwD9vheV7xIS2yI\np4mYupWu/HLUsZZlxJR2w9xnXxs4PlrUNgKwYZFI0j/uEXv16zD6LMgQc9djDfH5\nd/ds8CJd63XoVOjLLTJOxxqusCWTSVFSXaYjpT5RS4y6FA6crMSEOJKXvWU1CytF\nv70j+m73qbLj2dSjVsUBB6rGxKY1X9vHJ9+ZsjDXAKKtKRZ9bexgBkLc+P8MfcUy\nYk89A105Yf6gUph7KEa3OMsNDPJDAsUaD8jkOuGw5REsZjpOG3X3fHQK2+uRRjSK\ndsxJwmQwC8dLkqzB+JwbXRks5ZCxATVOa32N67KfleB+dkTHvG/NuTRoCD5fMDcQ\nyhP9SY8wyCyViN/cRocdOlVQmnNIPcUNIil25mkez6Exq2IVbITnrHjJ9Mu9NjKG\nnND3eTVKu2x3tCJhkmFmjIl7mrPnbfoY03xCLltEMpeG0sPD8vMhED6GgQk3+sxi\nJqkaoXr+A0+yRDBzxfTZfenC5J6QstZx+ZHwe/ujAskMVUxBONc=\n=vZ2v\n-----END PGP SIGNATURE-----", "payload": "tree 248813ffedf69d27e58faa16416f00fe0a1a6e5b\nparent bd1a8692f6260fd59dba1e0fa187092a1c354b2e\nauthor David Tolnay <dtolnay@gmail.com> 1648347636 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1648755286 -0700\n\nHandle rustc_const_stable attribute in library feature collector\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d30180634080dd761db77afc748dfd58e192a1d", "html_url": "https://github.com/rust-lang/rust/commit/5d30180634080dd761db77afc748dfd58e192a1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d30180634080dd761db77afc748dfd58e192a1d/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd1a8692f6260fd59dba1e0fa187092a1c354b2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd1a8692f6260fd59dba1e0fa187092a1c354b2e", "html_url": "https://github.com/rust-lang/rust/commit/bd1a8692f6260fd59dba1e0fa187092a1c354b2e"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "c414d7c031c0471b34b3ca68b217ec5303e25ee5", "filename": "compiler/rustc_passes/src/lib_features.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5d30180634080dd761db77afc748dfd58e192a1d/compiler%2Frustc_passes%2Fsrc%2Flib_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d30180634080dd761db77afc748dfd58e192a1d/compiler%2Frustc_passes%2Fsrc%2Flib_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Flib_features.rs?ref=5d30180634080dd761db77afc748dfd58e192a1d", "patch": "@@ -29,10 +29,11 @@ impl<'tcx> LibFeatureCollector<'tcx> {\n     }\n \n     fn extract(&self, attr: &Attribute) -> Option<(Symbol, Option<Symbol>, Span)> {\n-        let stab_attrs = [sym::stable, sym::unstable, sym::rustc_const_unstable];\n+        let stab_attrs =\n+            [sym::stable, sym::unstable, sym::rustc_const_stable, sym::rustc_const_unstable];\n \n-        // Find a stability attribute (i.e., `#[stable (..)]`, `#[unstable (..)]`,\n-        // `#[rustc_const_unstable (..)]`).\n+        // Find a stability attribute: one of #[stable(\u2026)], #[unstable(\u2026)],\n+        // #[rustc_const_stable(\u2026)], or #[rustc_const_unstable(\u2026)].\n         if let Some(stab_attr) = stab_attrs.iter().find(|stab_attr| attr.has_name(**stab_attr)) {\n             let meta_kind = attr.meta_kind();\n             if let Some(MetaItemKind::List(ref metas)) = meta_kind {\n@@ -52,7 +53,9 @@ impl<'tcx> LibFeatureCollector<'tcx> {\n                     // This additional check for stability is to make sure we\n                     // don't emit additional, irrelevant errors for malformed\n                     // attributes.\n-                    if *stab_attr != sym::stable || since.is_some() {\n+                    let is_unstable =\n+                        matches!(*stab_attr, sym::unstable | sym::rustc_const_unstable);\n+                    if since.is_some() || is_unstable {\n                         return Some((feature, since, attr.span));\n                     }\n                 }"}]}