{"sha": "b38092e9a2b5965ab8b8e73580e4d39ed701330a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzODA5MmU5YTJiNTk2NWFiOGI4ZTczNTgwZTRkMzllZDcwMTMzMGE=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-10-16T00:18:45Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-10-16T00:46:09Z"}, "message": "In ty::normalize_ty, don't replace self_regions with None\n\nInstead, replace with re_static. This was causing ty::subst to\nfail when called from trans::type_of::type_of.\n\nAlready discussed with nmatsakis and it's a small change, so\nno review.\n\nCloses #3447", "tree": {"sha": "483e5380eb4ab35f7463d5dea1e2a29ffcfe6bd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/483e5380eb4ab35f7463d5dea1e2a29ffcfe6bd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b38092e9a2b5965ab8b8e73580e4d39ed701330a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b38092e9a2b5965ab8b8e73580e4d39ed701330a", "html_url": "https://github.com/rust-lang/rust/commit/b38092e9a2b5965ab8b8e73580e4d39ed701330a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b38092e9a2b5965ab8b8e73580e4d39ed701330a/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbc46d527d70ac0bcab6c2b0763f059efc27a142", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbc46d527d70ac0bcab6c2b0763f059efc27a142", "html_url": "https://github.com/rust-lang/rust/commit/bbc46d527d70ac0bcab6c2b0763f059efc27a142"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "90527e88bc850d6482626023731a421f6ad47ca5", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b38092e9a2b5965ab8b8e73580e4d39ed701330a/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b38092e9a2b5965ab8b8e73580e4d39ed701330a/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=b38092e9a2b5965ab8b8e73580e4d39ed701330a", "patch": "@@ -1473,7 +1473,10 @@ fn subst(cx: ctxt,\n             fold_regions_and_ty(\n                 cx, typ,\n                 |r| match r {\n-                    re_bound(br_self) => substs.self_r.get(),\n+                    re_bound(br_self) => substs.self_r.expect(\n+                        #fmt(\"ty::subst: \\\n+                      Reference to self region when given substs with no \\\n+                      self region, ty = %s\", ty_to_str(cx, typ))),\n                     _ => r\n                 },\n                 |t| do_subst(cx, substs, t),\n@@ -3910,9 +3913,11 @@ fn normalize_ty(cx: ctxt, t: t) -> t {\n         ty_enum(did, r) =>\n             match r.self_r {\n                 Some(_) =>\n-                    // This enum has a self region. Get rid of it\n+                    // Use re_static since trans doesn't care about regions\n                     mk_enum(cx, did,\n-                            {self_r: None, self_ty: None, tps: r.tps}),\n+                     {self_r: Some(ty::re_static),\n+                      self_ty: None,\n+                      tps: r.tps}),\n                 None =>\n                     t\n             },\n@@ -3921,7 +3926,8 @@ fn normalize_ty(cx: ctxt, t: t) -> t {\n             match r.self_r {\n               Some(_) =>\n                 // Ditto.\n-                mk_class(cx, did, {self_r: None, self_ty: None, tps: r.tps}),\n+                mk_class(cx, did, {self_r: Some(ty::re_static), self_ty: None,\n+                                   tps: r.tps}),\n               None =>\n                 t\n             },"}, {"sha": "7302163a312c4d72e4bf313efabfb55b98307053", "filename": "src/test/run-pass/issue-3447.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b38092e9a2b5965ab8b8e73580e4d39ed701330a/src%2Ftest%2Frun-pass%2Fissue-3447.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b38092e9a2b5965ab8b8e73580e4d39ed701330a/src%2Ftest%2Frun-pass%2Fissue-3447.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3447.rs?ref=b38092e9a2b5965ab8b8e73580e4d39ed701330a", "patch": "@@ -1,4 +1,3 @@\n-// xfail-test\n struct list<T> {\n     element: &self/T,\n     mut next: Option<@list<T>>\n@@ -11,13 +10,13 @@ impl<T> list<T>{\n             next: option::None\n         };\n \n-        self.next = Some(@newList);\n+        self.next = Some(@(move newList));\n     }\n }\n \n fn main() {\n     let s = @\"str\";\n-    let ls: list<@str> = list {\n+    let ls = list {\n         element: &s,\n         next: option::None\n     };"}]}