{"sha": "97b66d2987522d28bb69994e8908a5bb789bff37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3YjY2ZDI5ODc1MjJkMjhiYjY5OTk0ZTg5MDhhNWJiNzg5YmZmMzc=", "commit": {"author": {"name": "Yukio Siraichi", "email": "yukio.siraichi@gmail.com", "date": "2018-03-13T04:06:04Z"}, "committer": {"name": "Yukio Siraichi", "email": "yukio.siraichi@gmail.com", "date": "2018-03-18T23:46:27Z"}, "message": "Review fixes.\n\n- `suggest_snippet` handling space between refs;\n- Suggest message changing according to the number of refs that should\nbe removed.", "tree": {"sha": "c272a7c12c39db02f7b895f21f2d9baec16e4ec2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c272a7c12c39db02f7b895f21f2d9baec16e4ec2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97b66d2987522d28bb69994e8908a5bb789bff37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97b66d2987522d28bb69994e8908a5bb789bff37", "html_url": "https://github.com/rust-lang/rust/commit/97b66d2987522d28bb69994e8908a5bb789bff37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97b66d2987522d28bb69994e8908a5bb789bff37/comments", "author": {"login": "ysiraichi", "id": 3337141, "node_id": "MDQ6VXNlcjMzMzcxNDE=", "avatar_url": "https://avatars.githubusercontent.com/u/3337141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysiraichi", "html_url": "https://github.com/ysiraichi", "followers_url": "https://api.github.com/users/ysiraichi/followers", "following_url": "https://api.github.com/users/ysiraichi/following{/other_user}", "gists_url": "https://api.github.com/users/ysiraichi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysiraichi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysiraichi/subscriptions", "organizations_url": "https://api.github.com/users/ysiraichi/orgs", "repos_url": "https://api.github.com/users/ysiraichi/repos", "events_url": "https://api.github.com/users/ysiraichi/events{/privacy}", "received_events_url": "https://api.github.com/users/ysiraichi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ysiraichi", "id": 3337141, "node_id": "MDQ6VXNlcjMzMzcxNDE=", "avatar_url": "https://avatars.githubusercontent.com/u/3337141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysiraichi", "html_url": "https://github.com/ysiraichi", "followers_url": "https://api.github.com/users/ysiraichi/followers", "following_url": "https://api.github.com/users/ysiraichi/following{/other_user}", "gists_url": "https://api.github.com/users/ysiraichi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysiraichi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysiraichi/subscriptions", "organizations_url": "https://api.github.com/users/ysiraichi/orgs", "repos_url": "https://api.github.com/users/ysiraichi/repos", "events_url": "https://api.github.com/users/ysiraichi/events{/privacy}", "received_events_url": "https://api.github.com/users/ysiraichi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f44b945e0ed73c6d108a40655d3bed14133ec7db", "url": "https://api.github.com/repos/rust-lang/rust/commits/f44b945e0ed73c6d108a40655d3bed14133ec7db", "html_url": "https://github.com/rust-lang/rust/commit/f44b945e0ed73c6d108a40655d3bed14133ec7db"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "31c8cb25c521aa6b7753208ed0c76d47db4865e0", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/97b66d2987522d28bb69994e8908a5bb789bff37/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97b66d2987522d28bb69994e8908a5bb789bff37/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=97b66d2987522d28bb69994e8908a5bb789bff37", "patch": "@@ -883,6 +883,8 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n         }\n     }\n \n+    /// Whenever references are used by mistake, like `for (i, e) in &vec.iter().enumerate()`,\n+    /// suggest removing these references until we reach a type that implements the trait.\n     fn suggest_remove_reference(&self,\n                                 obligation: &PredicateObligation<'tcx>,\n                                 err: &mut DiagnosticBuilder<'tcx>,\n@@ -896,16 +898,14 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                 .take_while(|c| *c == '&')\n                 .count();\n \n-            let mut refs_remaining = refs_number;\n             let mut trait_type = trait_ref.self_ty();\n             let mut selcx = SelectionContext::new(self);\n \n-            while refs_remaining > 0 {\n+            for refs_remaining in 0..refs_number {\n                 if let ty::TypeVariants::TyRef(_, ty::TypeAndMut{ ty: t_type, mutbl: _ }) =\n                     trait_type.sty {\n \n                     trait_type = t_type;\n-                    refs_remaining -= 1;\n \n                     let substs = self.tcx.mk_substs_trait(trait_type, &[]);\n                     let new_trait_ref = ty::TraitRef::new(trait_ref.def_id, substs);\n@@ -914,12 +914,16 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                                                          new_trait_ref.to_predicate());\n \n                     if selcx.evaluate_obligation(&new_obligation) {\n+                        let remove_refs = refs_remaining + 1;\n+\n                         let suggest_snippet = snippet.chars()\n-                            .skip(refs_number)\n+                            .filter(|c| !c.is_whitespace())\n+                            .skip(remove_refs)\n                             .collect::<String>();\n \n                         err.span_suggestion(span,\n-                                            \"consider removing `&`s like\",\n+                                            &format!(\"consider removing {} references `&`\",\n+                                                    remove_refs),\n                                             format!(\"{}\", suggest_snippet));\n \n                         break;"}]}