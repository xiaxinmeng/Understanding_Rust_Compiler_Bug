{"sha": "17c8bee95a43cf9c39ec766cdaa8c6219f4126dd", "node_id": "C_kwDOAAsO6NoAKDE3YzhiZWU5NWE0M2NmOWMzOWVjNzY2Y2RhYThjNjIxOWY0MTI2ZGQ", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-04-02T04:46:45Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-04-02T04:46:45Z"}, "message": "Add a couple of examples to `undocumented_unsafe_blocks`", "tree": {"sha": "fda8a04721d59685b2f3257c71c5124b5df01ed7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fda8a04721d59685b2f3257c71c5124b5df01ed7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17c8bee95a43cf9c39ec766cdaa8c6219f4126dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17c8bee95a43cf9c39ec766cdaa8c6219f4126dd", "html_url": "https://github.com/rust-lang/rust/commit/17c8bee95a43cf9c39ec766cdaa8c6219f4126dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17c8bee95a43cf9c39ec766cdaa8c6219f4126dd/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30b333645d1fb7cc4f657ad2e162977db6ee4b8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/30b333645d1fb7cc4f657ad2e162977db6ee4b8c", "html_url": "https://github.com/rust-lang/rust/commit/30b333645d1fb7cc4f657ad2e162977db6ee4b8c"}], "stats": {"total": 69, "additions": 50, "deletions": 19}, "files": [{"sha": "c0947685fa1d58de4ca1083c97b995f713a61153", "filename": "clippy_lints/src/undocumented_unsafe_blocks.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/17c8bee95a43cf9c39ec766cdaa8c6219f4126dd/clippy_lints%2Fsrc%2Fundocumented_unsafe_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17c8bee95a43cf9c39ec766cdaa8c6219f4126dd/clippy_lints%2Fsrc%2Fundocumented_unsafe_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fundocumented_unsafe_blocks.rs?ref=17c8bee95a43cf9c39ec766cdaa8c6219f4126dd", "patch": "@@ -15,6 +15,24 @@ declare_clippy_lint! {\n     /// explaining why the unsafe operations performed inside\n     /// the block are safe.\n     ///\n+    /// Note the comment must appear on the line(s) preceding the unsafe block\n+    /// with nothing appearing in between. The following is ok:\n+    /// ```ignore\n+    /// foo(\n+    ///     // SAFETY:\n+    ///     // This is a valid safety comment\n+    ///     unsafe { *x }\n+    /// )\n+    /// ```\n+    /// But neither of these are:\n+    /// ```ignore\n+    /// // SAFETY:\n+    /// // This is not a valid safety comment\n+    /// foo(\n+    ///     /* SAFETY: Neither is this */ unsafe { *x },\n+    /// );\n+    /// ```\n+    ///\n     /// ### Why is this bad?\n     /// Undocumented unsafe blocks can make it difficult to\n     /// read and maintain code, as well as uncover unsoundness"}, {"sha": "afa337c45f41766033abe0d1d85b2694f7fa11f6", "filename": "tests/ui/undocumented_unsafe_blocks.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/17c8bee95a43cf9c39ec766cdaa8c6219f4126dd/tests%2Fui%2Fundocumented_unsafe_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17c8bee95a43cf9c39ec766cdaa8c6219f4126dd/tests%2Fui%2Fundocumented_unsafe_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fundocumented_unsafe_blocks.rs?ref=17c8bee95a43cf9c39ec766cdaa8c6219f4126dd", "patch": "@@ -251,6 +251,11 @@ fn from_proc_macro() {\n \n // Invalid comments\n \n+#[rustfmt::skip]\n+fn inline_block_comment() {\n+    /* Safety: */ unsafe {}\n+}\n+\n fn no_comment() {\n     unsafe {}\n }"}, {"sha": "856a07fd31685e3170eba2ff3baf47221494cf01", "filename": "tests/ui/undocumented_unsafe_blocks.stderr", "status": "modified", "additions": 27, "deletions": 19, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/17c8bee95a43cf9c39ec766cdaa8c6219f4126dd/tests%2Fui%2Fundocumented_unsafe_blocks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17c8bee95a43cf9c39ec766cdaa8c6219f4126dd/tests%2Fui%2Fundocumented_unsafe_blocks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fundocumented_unsafe_blocks.stderr?ref=17c8bee95a43cf9c39ec766cdaa8c6219f4126dd", "patch": "@@ -1,102 +1,110 @@\n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:255:5\n+  --> $DIR/undocumented_unsafe_blocks.rs:256:19\n+   |\n+LL |     /* Safety: */ unsafe {}\n+   |                   ^^^^^^^^^\n+   |\n+   = note: `-D clippy::undocumented-unsafe-blocks` implied by `-D warnings`\n+   = help: consider adding a safety comment on the preceding line\n+\n+error: unsafe block missing a safety comment\n+  --> $DIR/undocumented_unsafe_blocks.rs:260:5\n    |\n LL |     unsafe {}\n    |     ^^^^^^^^^\n    |\n-   = note: `-D clippy::undocumented-unsafe-blocks` implied by `-D warnings`\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:259:14\n+  --> $DIR/undocumented_unsafe_blocks.rs:264:14\n    |\n LL |     let _ = [unsafe { 14 }, unsafe { 15 }, 42, unsafe { 16 }];\n    |              ^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:259:29\n+  --> $DIR/undocumented_unsafe_blocks.rs:264:29\n    |\n LL |     let _ = [unsafe { 14 }, unsafe { 15 }, 42, unsafe { 16 }];\n    |                             ^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:259:48\n+  --> $DIR/undocumented_unsafe_blocks.rs:264:48\n    |\n LL |     let _ = [unsafe { 14 }, unsafe { 15 }, 42, unsafe { 16 }];\n    |                                                ^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:263:18\n+  --> $DIR/undocumented_unsafe_blocks.rs:268:18\n    |\n LL |     let _ = (42, unsafe {}, \"test\", unsafe {});\n    |                  ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:263:37\n+  --> $DIR/undocumented_unsafe_blocks.rs:268:37\n    |\n LL |     let _ = (42, unsafe {}, \"test\", unsafe {});\n    |                                     ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:267:14\n+  --> $DIR/undocumented_unsafe_blocks.rs:272:14\n    |\n LL |     let _ = *unsafe { &42 };\n    |              ^^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:272:19\n+  --> $DIR/undocumented_unsafe_blocks.rs:277:19\n    |\n LL |     let _ = match unsafe {} {\n    |                   ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:278:14\n+  --> $DIR/undocumented_unsafe_blocks.rs:283:14\n    |\n LL |     let _ = &unsafe {};\n    |              ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:282:14\n+  --> $DIR/undocumented_unsafe_blocks.rs:287:14\n    |\n LL |     let _ = [unsafe {}; 5];\n    |              ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:286:13\n+  --> $DIR/undocumented_unsafe_blocks.rs:291:13\n    |\n LL |     let _ = unsafe {};\n    |             ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:296:8\n+  --> $DIR/undocumented_unsafe_blocks.rs:301:8\n    |\n LL |     t!(unsafe {});\n    |        ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:302:13\n+  --> $DIR/undocumented_unsafe_blocks.rs:307:13\n    |\n LL |             unsafe {}\n    |             ^^^^^^^^^\n@@ -108,36 +116,36 @@ LL |     t!();\n    = note: this error originates in the macro `t` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:310:5\n+  --> $DIR/undocumented_unsafe_blocks.rs:315:5\n    |\n LL |     unsafe {} // SAFETY:\n    |     ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:314:5\n+  --> $DIR/undocumented_unsafe_blocks.rs:319:5\n    |\n LL |     unsafe {\n    |     ^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:324:5\n+  --> $DIR/undocumented_unsafe_blocks.rs:329:5\n    |\n LL |     unsafe {};\n    |     ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:328:20\n+  --> $DIR/undocumented_unsafe_blocks.rs:333:20\n    |\n LL |     println!(\"{}\", unsafe { String::from_utf8_unchecked(vec![]) });\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n-error: aborting due to 17 previous errors\n+error: aborting due to 18 previous errors\n "}]}