{"sha": "0d53565b60c54bb3f88ec711e87d45a87502de73", "node_id": "C_kwDOAAsO6NoAKDBkNTM1NjViNjBjNTRiYjNmODhlYzcxMWU4N2Q0NWE4NzUwMmRlNzM", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-03-17T18:04:56Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-03-17T18:04:56Z"}, "message": "Make `slice::is_sorted_by` impl nicer", "tree": {"sha": "169e7f4dd8cafdcab74515259cb059d2dea5bc0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/169e7f4dd8cafdcab74515259cb059d2dea5bc0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d53565b60c54bb3f88ec711e87d45a87502de73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d53565b60c54bb3f88ec711e87d45a87502de73", "html_url": "https://github.com/rust-lang/rust/commit/0d53565b60c54bb3f88ec711e87d45a87502de73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d53565b60c54bb3f88ec711e87d45a87502de73/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4b9f86054c581d931f8bad0c87523c53e1e8e3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4b9f86054c581d931f8bad0c87523c53e1e8e3f", "html_url": "https://github.com/rust-lang/rust/commit/e4b9f86054c581d931f8bad0c87523c53e1e8e3f"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "68c7c5f23c974f681cf5fe61ed92b6eb890627cf", "filename": "library/core/src/slice/iter.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d53565b60c54bb3f88ec711e87d45a87502de73/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d53565b60c54bb3f88ec711e87d45a87502de73/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs?ref=0d53565b60c54bb3f88ec711e87d45a87502de73", "patch": "@@ -132,9 +132,7 @@ iterator! {struct Iter -> *const T, &'a T, const, {/* no mut */}, {\n         Self: Sized,\n         F: FnMut(&Self::Item, &Self::Item) -> Option<Ordering>,\n     {\n-        self.as_slice().windows(2).all(|w| {\n-            compare(&&w[0], &&w[1]).map(|o| o != Ordering::Greater).unwrap_or(false)\n-        })\n+        self.as_slice().array_windows().all(|[a, b]| compare(&a, &b).map_or(false, Ordering::is_le))\n     }\n }}\n "}]}