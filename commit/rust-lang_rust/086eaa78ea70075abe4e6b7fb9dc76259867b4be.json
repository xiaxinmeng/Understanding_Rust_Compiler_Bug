{"sha": "086eaa78ea70075abe4e6b7fb9dc76259867b4be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4NmVhYTc4ZWE3MDA3NWFiZTRlNmI3ZmI5ZGM3NjI1OTg2N2I0YmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-15T19:12:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-15T19:12:03Z"}, "message": "Auto merge of #43224 - jseyfried:fix_macro_idents_regression, r=nrc\n\nmacros: fix regression involving identifiers in `macro_rules!` patterns.\n\nFixes #42019.\nr? @nrc", "tree": {"sha": "6116f080556e73a39ba2dfd3c9f1d2756fb24eab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6116f080556e73a39ba2dfd3c9f1d2756fb24eab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/086eaa78ea70075abe4e6b7fb9dc76259867b4be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/086eaa78ea70075abe4e6b7fb9dc76259867b4be", "html_url": "https://github.com/rust-lang/rust/commit/086eaa78ea70075abe4e6b7fb9dc76259867b4be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/086eaa78ea70075abe4e6b7fb9dc76259867b4be/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a783fe2f77dfc69bdfbee539488403ff8883fd25", "url": "https://api.github.com/repos/rust-lang/rust/commits/a783fe2f77dfc69bdfbee539488403ff8883fd25", "html_url": "https://github.com/rust-lang/rust/commit/a783fe2f77dfc69bdfbee539488403ff8883fd25"}, {"sha": "b5c5a0c3fd91e2f3a61e26bf5a00297a6e2b3366", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5c5a0c3fd91e2f3a61e26bf5a00297a6e2b3366", "html_url": "https://github.com/rust-lang/rust/commit/b5c5a0c3fd91e2f3a61e26bf5a00297a6e2b3366"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "74fa85d130b027d39f13c5881d5efaaa15ae1250", "filename": "src/libsyntax/ext/tt/quoted.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/086eaa78ea70075abe4e6b7fb9dc76259867b4be/src%2Flibsyntax%2Fext%2Ftt%2Fquoted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/086eaa78ea70075abe4e6b7fb9dc76259867b4be/src%2Flibsyntax%2Fext%2Ftt%2Fquoted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fquoted.rs?ref=086eaa78ea70075abe4e6b7fb9dc76259867b4be", "patch": "@@ -196,7 +196,8 @@ fn parse_tree<I>(tree: tokenstream::TokenTree,\n                     num_captures: name_captures,\n                 }))\n             }\n-            Some(tokenstream::TokenTree::Token(ident_span, token::Ident(ident))) => {\n+            Some(tokenstream::TokenTree::Token(ident_span, ref token)) if token.is_ident() => {\n+                let ident = token.ident().unwrap();\n                 let span = Span { lo: span.lo, ..ident_span };\n                 if ident.name == keywords::Crate.name() {\n                     let ident = ast::Ident { name: keywords::DollarCrate.name(), ..ident };"}, {"sha": "2fa99984401c14db030ed3b77fd5dd84524f4cd5", "filename": "src/test/run-pass/issue-40847.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/086eaa78ea70075abe4e6b7fb9dc76259867b4be/src%2Ftest%2Frun-pass%2Fissue-40847.rs", "raw_url": "https://github.com/rust-lang/rust/raw/086eaa78ea70075abe4e6b7fb9dc76259867b4be/src%2Ftest%2Frun-pass%2Fissue-40847.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-40847.rs?ref=086eaa78ea70075abe4e6b7fb9dc76259867b4be", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+macro_rules! gen {\n+    ($name:ident ( $($dol:tt $var:ident)* ) $($body:tt)*) => {\n+        macro_rules! $name {\n+            ($($dol $var:ident)*) => {\n+                $($body)*\n+            }\n+        }\n+    }\n+}\n+\n+gen!(m($var) $var);\n+\n+fn main() {\n+    let x = 1;\n+    assert_eq!(m!(x), 1);\n+}"}]}