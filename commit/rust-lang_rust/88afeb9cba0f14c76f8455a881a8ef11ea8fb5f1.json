{"sha": "88afeb9cba0f14c76f8455a881a8ef11ea8fb5f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4YWZlYjljYmEwZjE0Yzc2Zjg0NTVhODgxYThlZjExZWE4ZmI1ZjE=", "commit": {"author": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2016-05-16T13:37:14Z"}, "committer": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2016-05-16T13:37:14Z"}, "message": "Cleanup documentation\n\nRemove irrelevant information (and instead provide pointer to\nreference documentation), replace ASCII-art table with the\ncorresponding MarkDown one, and minor fixes.", "tree": {"sha": "7ae8cf0e18ad26bd7ecfe4605cd3a35f80512dd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ae8cf0e18ad26bd7ecfe4605cd3a35f80512dd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88afeb9cba0f14c76f8455a881a8ef11ea8fb5f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88afeb9cba0f14c76f8455a881a8ef11ea8fb5f1", "html_url": "https://github.com/rust-lang/rust/commit/88afeb9cba0f14c76f8455a881a8ef11ea8fb5f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88afeb9cba0f14c76f8455a881a8ef11ea8fb5f1/comments", "author": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f96864dab6d5ed3ec96d850fef20490b1507bc85", "url": "https://api.github.com/repos/rust-lang/rust/commits/f96864dab6d5ed3ec96d850fef20490b1507bc85", "html_url": "https://github.com/rust-lang/rust/commit/f96864dab6d5ed3ec96d850fef20490b1507bc85"}], "stats": {"total": 41, "additions": 10, "deletions": 31}, "files": [{"sha": "35a613ef5fce497586cd28bdd59bff3739e64ddc", "filename": "src/libcore/num/dec2flt/algorithm.rs", "status": "modified", "additions": 10, "deletions": 31, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/88afeb9cba0f14c76f8455a881a8ef11ea8fb5f1/src%2Flibcore%2Fnum%2Fdec2flt%2Falgorithm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88afeb9cba0f14c76f8455a881a8ef11ea8fb5f1/src%2Flibcore%2Fnum%2Fdec2flt%2Falgorithm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fdec2flt%2Falgorithm.rs?ref=88afeb9cba0f14c76f8455a881a8ef11ea8fb5f1", "patch": "@@ -32,14 +32,14 @@ fn power_of_ten(e: i16) -> Fp {\n     Fp { f: sig, e: exp }\n }\n \n-// Most architectures floating point operations with explicit bit size, therefore the precision of\n-// the computation is determined on a per-operation basis.\n+// In most architectures, floating point operations have an explicit bit size, therefore the\n+// precision of the computation is determined on a per-operation basis.\n #[cfg(any(not(target_arch=\"x86\"), target_feature=\"sse2\"))]\n mod fpu_precision {\n     pub fn set_precision<T>() { }\n }\n \n-// On x86, the x87 FPU is used for float operations if the SSE[2] extensions are not available.\n+// On x86, the x87 FPU is used for float operations if the SSE/SSE2 extensions are not available.\n // The x87 FPU operates with 80 bits of precision by default, which means that operations will\n // round to 80 bits causing double rounding to happen when values are eventually represented as\n // 32/64 bit float values. To overcome this, the FPU control word can be set so that the\n@@ -54,40 +54,19 @@ mod fpu_precision {\n     ///\n     /// The x87 FPU is a 16-bits register whose fields are as follows:\n     ///\n-    ///    1111 11\n-    ///    5432 10 98 76 5 4 3 2 1 0\n-    ///   +----+--+--+--+-+-+-+-+-+-+\n-    ///   |    |RC|PC|  |P|U|O|Z|D|I|\n-    ///   |    |  |  |  |M|M|M|M|M|M|\n-    ///   +----+--+--+--+-+-+-+-+-+-+\n-    /// The fields are:\n-    ///  - Invalid operation Mask\n-    ///  - Denormal operand Mask\n-    ///  - Zero divide Mask\n-    ///  - Overflow Mask\n-    ///  - Underflow Mask\n-    ///  - Precision Mask\n-    ///  - Precision Control\n-    ///  - Rounding Control\n+    /// | 12-15 | 10-11 | 8-9 | 6-7 |  5 |  4 |  3 |  2 |  1 |  0 |\n+    /// |------:|------:|----:|----:|---:|---:|---:|---:|---:|---:|\n+    /// |       | RC    | PC  |     | PM | UM | OM | ZM | DM | IM |\n     ///\n-    /// The fields with no name are unused (on FPUs more modern than 287).\n+    /// The documentation for all of the fields is available in the IA-32 Architectures Software\n+    /// Developer's Manual (Volume 1).\n     ///\n-    /// The 6 LSBs (bits 0-5) are the exception mask bits; each blocks a specific type of floating\n-    /// point exceptions from being raised.\n-    ///\n-    /// The Precision Control field determines the precision of the operations performed by the\n-    /// FPU. It can set to:\n+    /// The only field which is relevant for the following code is PC, Precision Control. This\n+    /// field determines the precision of the operations performed by the  FPU. It can be set to:\n     ///  - 0b00, single precision i.e. 32-bits\n     ///  - 0b10, double precision i.e. 64-bits\n     ///  - 0b11, double extended precision i.e. 80-bits (default state)\n     /// The 0b01 value is reserved and should not be used.\n-    ///\n-    /// The Rounding Control field determines how values which cannot be represented exactly are\n-    /// rounded. It can be set to:\n-    ///  - 0b00, round to nearest even (default state)\n-    ///  - 0b01, round down (toward -inf)\n-    ///  - 0b10, round up (toward +inf)\n-    ///  - 0b11, round toward 0 (truncate)\n     pub struct FPUControlWord(u16);\n \n     fn set_cw(cw: u16) {"}]}