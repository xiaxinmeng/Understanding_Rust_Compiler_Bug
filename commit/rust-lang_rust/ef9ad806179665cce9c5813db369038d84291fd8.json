{"sha": "ef9ad806179665cce9c5813db369038d84291fd8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmOWFkODA2MTc5NjY1Y2NlOWM1ODEzZGIzNjkwMzhkODQyOTFmZDg=", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-04-14T00:55:12Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-04-22T13:36:46Z"}, "message": "Add examples to better explain `walk_span_to_context`", "tree": {"sha": "fff40f50c72ca7b33bb852f42284760399042f78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fff40f50c72ca7b33bb852f42284760399042f78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef9ad806179665cce9c5813db369038d84291fd8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nComment: Created with Krypton\n\niF4EABYKAAYFAmCBe/EACgkQ2lnoZDo37QaVdgD+IMIu6puQ2NGGpfNY6W8g7Jed\nz+ovXJkqmC1bZRyEpj0A/1VoJJXm2fUFgLZO3gso06ng06m9zXhK7wXU2LUTr78A\n=cbU9\n-----END PGP SIGNATURE-----", "payload": "tree fff40f50c72ca7b33bb852f42284760399042f78\nparent 74cf5f2fc6c121ae0eaaa709c9a303cd82fe9b30\nauthor Jason Newcomb <jsnewcomb@pm.me> 1618361712 -0400\ncommitter Jason Newcomb <jsnewcomb@pm.me> 1619098606 -0400\n\nAdd examples to better explain `walk_span_to_context`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef9ad806179665cce9c5813db369038d84291fd8", "html_url": "https://github.com/rust-lang/rust/commit/ef9ad806179665cce9c5813db369038d84291fd8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef9ad806179665cce9c5813db369038d84291fd8/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74cf5f2fc6c121ae0eaaa709c9a303cd82fe9b30", "url": "https://api.github.com/repos/rust-lang/rust/commits/74cf5f2fc6c121ae0eaaa709c9a303cd82fe9b30", "html_url": "https://github.com/rust-lang/rust/commit/74cf5f2fc6c121ae0eaaa709c9a303cd82fe9b30"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "4d49b43bde9ecd9751bc825b55afad614e5f1fd7", "filename": "clippy_utils/src/source.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ef9ad806179665cce9c5813db369038d84291fd8/clippy_utils%2Fsrc%2Fsource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef9ad806179665cce9c5813db369038d84291fd8/clippy_utils%2Fsrc%2Fsource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fsource.rs?ref=ef9ad806179665cce9c5813db369038d84291fd8", "patch": "@@ -302,6 +302,28 @@ pub fn snippet_with_context(\n /// inside a macro expansion, or the original span if it is not. Note this will return `None` in the\n /// case of the span being in a macro expansion, but the target context is from expanding a macro\n /// argument.\n+///\n+/// Given the following\n+///\n+/// ```rust,ignore\n+/// macro_rules! m { ($e:expr) => { f($e) }; }\n+/// g(m!(0))\n+/// ```\n+///\n+/// If called with a span of the call to `f` and a context of the call to `g` this will return a\n+/// span containing `m!(0)`. However, if called with a span of the literal `0` this will give a span\n+/// containing `0` as the context is the same as the outer context.\n+///\n+/// This will traverse through multiple macro calls. Given the following:\n+///\n+/// ```rust,ignore\n+/// macro_rules! m { ($e:expr) => { n!($e, 0) }; }\n+/// macro_rules! n { ($e:expr, $f:expr) => { f($e, $f) }; }\n+/// g(m!(0))\n+/// ```\n+///\n+/// If called with a span of the call to `f` and a context of the call to `g` this will return a\n+/// span containing `m!(0)`.\n pub fn walk_span_to_context(span: Span, outer: SyntaxContext) -> Option<Span> {\n     let outer_span = hygiene::walk_chain(span, outer);\n     (outer_span.ctxt() == outer).then(|| outer_span)"}]}