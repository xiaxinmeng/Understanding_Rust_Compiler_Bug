{"sha": "5c5cc2ad3fea5754439a0cfa123d9444980b5456", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNWNjMmFkM2ZlYTU3NTQ0MzlhMGNmYTEyM2Q5NDQ0OTgwYjU0NTY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-07T09:19:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-07T09:19:54Z"}, "message": "Merge pull request #678 from RalfJung/test-env\n\ncompiletest env var cleanup", "tree": {"sha": "a9c84e21342a7955793e9735a47b0c938f63b009", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9c84e21342a7955793e9735a47b0c938f63b009"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c5cc2ad3fea5754439a0cfa123d9444980b5456", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcqcC6CRBK7hj4Ov3rIwAAdHIIAEF4W6zI9rQtHQV7EFHXDfsH\nd0Dc10Nd6dxxc4nWu79ftA4D2AZNUN4E3oBVXwSBjfWBRNSqjBzWqQgZ2b+8iOr0\no8Fvc+dYB+FTJ79Kc6gddoVU8Pg6yA/JaOWLHWkDvxAgZocZCdxM9F4Q8Q2Y6cUR\nf6SHNF0DDIGOyze1ap5xiKbLaYdevUwveyQAOutNg4xyIFsBh05eqzMjhTDjDwCC\nIOPGRg3PHt0UIA+8Aku1LtqIzdMm5RXSEDfvJkI+LL+kRV9+Vvmk/B+/34nCK2/o\nbhxoaXlSoZAEca/LEZOuLPKO7l2vGf86hQE7lZYcEgrLvyqbx0Rxoxo2M/QkNAA=\n=wkA1\n-----END PGP SIGNATURE-----\n", "payload": "tree a9c84e21342a7955793e9735a47b0c938f63b009\nparent 0e4f9634a6850c6c10747cda0b56192ec8c00717\nparent 336a59d2640377af3a51c1133c0394d99cbd5ef5\nauthor Ralf Jung <post@ralfj.de> 1554628794 +0200\ncommitter GitHub <noreply@github.com> 1554628794 +0200\n\nMerge pull request #678 from RalfJung/test-env\n\ncompiletest env var cleanup"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c5cc2ad3fea5754439a0cfa123d9444980b5456", "html_url": "https://github.com/rust-lang/rust/commit/5c5cc2ad3fea5754439a0cfa123d9444980b5456", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c5cc2ad3fea5754439a0cfa123d9444980b5456/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e4f9634a6850c6c10747cda0b56192ec8c00717", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e4f9634a6850c6c10747cda0b56192ec8c00717", "html_url": "https://github.com/rust-lang/rust/commit/0e4f9634a6850c6c10747cda0b56192ec8c00717"}, {"sha": "336a59d2640377af3a51c1133c0394d99cbd5ef5", "url": "https://api.github.com/repos/rust-lang/rust/commits/336a59d2640377af3a51c1133c0394d99cbd5ef5", "html_url": "https://github.com/rust-lang/rust/commit/336a59d2640377af3a51c1133c0394d99cbd5ef5"}], "stats": {"total": 22, "additions": 2, "deletions": 20}, "files": [{"sha": "ff83eca1c9f0b54a6f0157d37ff28b5e70905982", "filename": "tests/compiletest.rs", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5c5cc2ad3fea5754439a0cfa123d9444980b5456/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c5cc2ad3fea5754439a0cfa123d9444980b5456/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=5c5cc2ad3fea5754439a0cfa123d9444980b5456", "patch": "@@ -87,22 +87,6 @@ fn miri_pass(path: &str, target: &str, opt: bool) {\n     compiletest::run_tests(&config);\n }\n \n-/// Ensures that the `MIRI_SYSROOT` env var is set.\n-fn set_sysroot() {\n-    if std::env::var(\"MIRI_SYSROOT\").is_ok() {\n-        // Nothing to do.\n-        return;\n-    }\n-    let sysroot = std::process::Command::new(\"rustc\")\n-        .arg(\"--print\")\n-        .arg(\"sysroot\")\n-        .output()\n-        .expect(\"rustc not found\")\n-        .stdout;\n-    let sysroot = String::from_utf8(sysroot).expect(\"sysroot is not utf8\");\n-    std::env::set_var(\"MIRI_SYSROOT\", sysroot.trim());\n-}\n-\n fn get_host() -> String {\n     let rustc = rustc_test_suite().unwrap_or(PathBuf::from(\"rustc\"));\n     let rustc_version = std::process::Command::new(rustc)\n@@ -117,7 +101,7 @@ fn get_host() -> String {\n }\n \n fn get_target() -> String {\n-    std::env::var(\"MIRI_TARGET\").unwrap_or_else(|_| get_host())\n+    std::env::var(\"MIRI_COMPILETEST_TARGET\").unwrap_or_else(|_| get_host())\n }\n \n fn run_pass_miri(opt: bool) {\n@@ -129,8 +113,6 @@ fn compile_fail_miri(opt: bool) {\n }\n \n fn test_runner(_tests: &[&()]) {\n-    set_sysroot();\n-\n     run_pass_miri(false);\n     run_pass_miri(true);\n "}, {"sha": "8951cdc89644f18d994a940746645403a6dba281", "filename": "travis.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c5cc2ad3fea5754439a0cfa123d9444980b5456/travis.sh", "raw_url": "https://github.com/rust-lang/rust/raw/5c5cc2ad3fea5754439a0cfa123d9444980b5456/travis.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/travis.sh?ref=5c5cc2ad3fea5754439a0cfa123d9444980b5456", "patch": "@@ -22,7 +22,7 @@ echo\n \n echo \"Test miri with full MIR, on the host and other architectures\"\n MIRI_SYSROOT=\"$MIRI_SYSROOT_BASE\"/HOST cargo test --release --all-features\n-MIRI_SYSROOT=\"$MIRI_SYSROOT_BASE\" MIRI_TARGET=\"$FOREIGN_TARGET\" cargo test --release --all-features\n+MIRI_SYSROOT=\"$MIRI_SYSROOT_BASE\" MIRI_COMPILETEST_TARGET=\"$FOREIGN_TARGET\" cargo test --release --all-features\n echo\n \n echo \"Test cargo integration\""}]}