{"sha": "1b8288ff966bcabadf8f15d71511ff96184e81ea", "node_id": "C_kwDOAAsO6NoAKDFiODI4OGZmOTY2YmNhYmFkZjhmMTVkNzE1MTFmZjk2MTg0ZTgxZWE", "commit": {"author": {"name": "Bruno Ortiz", "email": "brunortiz11@gmail.com", "date": "2023-04-04T16:47:01Z"}, "committer": {"name": "Bruno Ortiz", "email": "brunortiz11@gmail.com", "date": "2023-05-02T13:59:29Z"}, "message": "Fixing naming from graph to list", "tree": {"sha": "3f10b5c019cacfc248d944cd78aaa804b51c3954", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f10b5c019cacfc248d944cd78aaa804b51c3954"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b8288ff966bcabadf8f15d71511ff96184e81ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b8288ff966bcabadf8f15d71511ff96184e81ea", "html_url": "https://github.com/rust-lang/rust/commit/1b8288ff966bcabadf8f15d71511ff96184e81ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b8288ff966bcabadf8f15d71511ff96184e81ea/comments", "author": {"login": "bruno-ortiz", "id": 5748995, "node_id": "MDQ6VXNlcjU3NDg5OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/5748995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bruno-ortiz", "html_url": "https://github.com/bruno-ortiz", "followers_url": "https://api.github.com/users/bruno-ortiz/followers", "following_url": "https://api.github.com/users/bruno-ortiz/following{/other_user}", "gists_url": "https://api.github.com/users/bruno-ortiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/bruno-ortiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bruno-ortiz/subscriptions", "organizations_url": "https://api.github.com/users/bruno-ortiz/orgs", "repos_url": "https://api.github.com/users/bruno-ortiz/repos", "events_url": "https://api.github.com/users/bruno-ortiz/events{/privacy}", "received_events_url": "https://api.github.com/users/bruno-ortiz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bruno-ortiz", "id": 5748995, "node_id": "MDQ6VXNlcjU3NDg5OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/5748995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bruno-ortiz", "html_url": "https://github.com/bruno-ortiz", "followers_url": "https://api.github.com/users/bruno-ortiz/followers", "following_url": "https://api.github.com/users/bruno-ortiz/following{/other_user}", "gists_url": "https://api.github.com/users/bruno-ortiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/bruno-ortiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bruno-ortiz/subscriptions", "organizations_url": "https://api.github.com/users/bruno-ortiz/orgs", "repos_url": "https://api.github.com/users/bruno-ortiz/repos", "events_url": "https://api.github.com/users/bruno-ortiz/events{/privacy}", "received_events_url": "https://api.github.com/users/bruno-ortiz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2535926e9587aa9c4ec08637aaa45a9fd92f5ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2535926e9587aa9c4ec08637aaa45a9fd92f5ea", "html_url": "https://github.com/rust-lang/rust/commit/e2535926e9587aa9c4ec08637aaa45a9fd92f5ea"}], "stats": {"total": 100, "additions": 52, "deletions": 48}, "files": [{"sha": "416082ae73b038aabe27d468d597e7eefacac278", "filename": "crates/ide/src/fetch_crates.rs", "status": "modified", "additions": 29, "deletions": 23, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/1b8288ff966bcabadf8f15d71511ff96184e81ea/crates%2Fide%2Fsrc%2Ffetch_crates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b8288ff966bcabadf8f15d71511ff96184e81ea/crates%2Fide%2Fsrc%2Ffetch_crates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ffetch_crates.rs?ref=1b8288ff966bcabadf8f15d71511ff96184e81ea", "patch": "@@ -22,44 +22,50 @@ pub(crate) fn fetch_crates(db: &RootDatabase) -> Vec<CrateInfo> {\n         .iter()\n         .map(|crate_id| &crate_graph[crate_id])\n         .filter(|&data| !matches!(data.origin, CrateOrigin::Local { .. }))\n-        .map(|data| {\n-            let crate_name = crate_name(data);\n-            let version = data.version.clone().unwrap_or_else(|| \"\".to_owned());\n-            let crate_path = crate_path(db, data, &crate_name);\n-\n-            CrateInfo { name: crate_name, version, path: crate_path }\n-        })\n+        .filter_map(|data| crate_info(data, db))\n         .collect()\n }\n \n+fn crate_info(data: &ide_db::base_db::CrateData, db: &RootDatabase) -> Option<CrateInfo> {\n+    let crate_name = crate_name(data);\n+    let crate_path = crate_path(db, data, &crate_name);\n+    if let Some(crate_path) = crate_path {\n+        let version = data.version.clone().unwrap_or_else(|| \"\".to_owned());\n+        Some(CrateInfo { name: crate_name, version, path: crate_path })\n+    } else {\n+        None\n+    }\n+}\n+\n fn crate_name(data: &ide_db::base_db::CrateData) -> String {\n     data.display_name\n         .clone()\n         .map(|it| it.canonical_name().to_owned())\n         .unwrap_or(\"unknown\".to_string())\n }\n \n-fn crate_path(db: &RootDatabase, data: &ide_db::base_db::CrateData, crate_name: &str) -> String {\n+fn crate_path(\n+    db: &RootDatabase,\n+    data: &ide_db::base_db::CrateData,\n+    crate_name: &str,\n+) -> Option<String> {\n     let source_root_id = db.file_source_root(data.root_file_id);\n     let source_root = db.source_root(source_root_id);\n     let source_root_path = source_root.path_for_file(&data.root_file_id);\n-    match source_root_path.cloned() {\n-        Some(mut root_path) => {\n-            let mut crate_path = \"\".to_string();\n-            while let Some(vfs_path) = root_path.parent() {\n-                match vfs_path.name_and_extension() {\n-                    Some((name, _)) => {\n-                        if name.starts_with(crate_name) {\n-                            crate_path = vfs_path.to_string();\n-                            break;\n-                        }\n+    source_root_path.cloned().and_then(|mut root_path| {\n+        let mut crate_path = None;\n+        while let Some(vfs_path) = root_path.parent() {\n+            match vfs_path.name_and_extension() {\n+                Some((name, _)) => {\n+                    if name.starts_with(crate_name) {\n+                        crate_path = Some(vfs_path.to_string());\n+                        break;\n                     }\n-                    None => break,\n                 }\n-                root_path = vfs_path;\n+                None => break,\n             }\n-            crate_path\n+            root_path = vfs_path;\n         }\n-        None => \"\".to_owned(),\n-    }\n+        crate_path\n+    })\n }"}, {"sha": "5c966f0f68b0c1bcb5a0507fd0ed05afbfab2a5a", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1b8288ff966bcabadf8f15d71511ff96184e81ea/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b8288ff966bcabadf8f15d71511ff96184e81ea/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=1b8288ff966bcabadf8f15d71511ff96184e81ea", "patch": "@@ -9,7 +9,7 @@ use vfs::FileId;\n use crate::{\n     global_state::GlobalStateSnapshot, to_proto, Result,\n     lsp_ext::{\n-        CrateInfoResult, FetchDependencyGraphResult, FetchDependencyGraphParams,\n+        CrateInfoResult, FetchDependencyListResult, FetchDependencyListParams,\n     },\n };\n \n@@ -49,12 +49,12 @@ pub(crate) fn publish_diagnostics(\n     Ok(diagnostics)\n }\n \n-pub(crate) fn fetch_dependency_graph(\n+pub(crate) fn fetch_dependency_list(\n     state: GlobalStateSnapshot,\n-    _params: FetchDependencyGraphParams,\n-) -> Result<FetchDependencyGraphResult> {\n+    _params: FetchDependencyListParams,\n+) -> Result<FetchDependencyListResult> {\n     let crates = state.analysis.fetch_crates()?;\n-    Ok(FetchDependencyGraphResult {\n+    Ok(FetchDependencyListResult {\n         crates: crates\n             .into_iter()\n             .map(|it| CrateInfoResult { name: it.name, version: it.version, path: it.path })"}, {"sha": "6285578a6ceadc831c3eaa2570e52458279a613e", "filename": "crates/rust-analyzer/src/lsp_ext.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1b8288ff966bcabadf8f15d71511ff96184e81ea/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b8288ff966bcabadf8f15d71511ff96184e81ea/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs?ref=1b8288ff966bcabadf8f15d71511ff96184e81ea", "patch": "@@ -34,21 +34,21 @@ pub struct CrateInfoResult {\n     pub version: String,\n     pub path: String,\n }\n-pub enum FetchDependencyGraph {}\n+pub enum FetchDependencyList {}\n \n-impl Request for FetchDependencyGraph {\n-    type Params = FetchDependencyGraphParams;\n-    type Result = FetchDependencyGraphResult;\n-    const METHOD: &'static str = \"rust-analyzer/fetchDependencyGraph\";\n+impl Request for FetchDependencyList {\n+    type Params = FetchDependencyListParams;\n+    type Result = FetchDependencyListResult;\n+    const METHOD: &'static str = \"rust-analyzer/fetchDependencyList\";\n }\n \n #[derive(Deserialize, Serialize, Debug)]\n #[serde(rename_all = \"camelCase\")]\n-pub struct FetchDependencyGraphParams {}\n+pub struct FetchDependencyListParams {}\n \n #[derive(Deserialize, Serialize, Debug)]\n #[serde(rename_all = \"camelCase\")]\n-pub struct FetchDependencyGraphResult {\n+pub struct FetchDependencyListResult {\n     pub crates: Vec<CrateInfoResult>,\n }\n "}, {"sha": "d3cfc5e40d63b0df9126d30a6b1ae9fe84883e9b", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b8288ff966bcabadf8f15d71511ff96184e81ea/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b8288ff966bcabadf8f15d71511ff96184e81ea/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=1b8288ff966bcabadf8f15d71511ff96184e81ea", "patch": "@@ -660,7 +660,7 @@ impl GlobalState {\n             .on_sync::<lsp_ext::OnEnter>(handlers::handle_on_enter)\n             .on_sync::<lsp_types::request::SelectionRangeRequest>(handlers::handle_selection_range)\n             .on_sync::<lsp_ext::MatchingBrace>(handlers::handle_matching_brace)\n-            .on::<lsp_ext::FetchDependencyGraph>(handlers::fetch_dependency_graph)\n+            .on::<lsp_ext::FetchDependencyList>(handlers::fetch_dependency_list)\n             .on::<lsp_ext::AnalyzerStatus>(handlers::handle_analyzer_status)\n             .on::<lsp_ext::SyntaxTree>(handlers::handle_syntax_tree)\n             .on::<lsp_ext::ViewHir>(handlers::handle_view_hir)"}, {"sha": "d73ae3d519e731c72b54415a512fe776e92c4e37", "filename": "docs/dev/lsp-extensions.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b8288ff966bcabadf8f15d71511ff96184e81ea/docs%2Fdev%2Flsp-extensions.md", "raw_url": "https://github.com/rust-lang/rust/raw/1b8288ff966bcabadf8f15d71511ff96184e81ea/docs%2Fdev%2Flsp-extensions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Flsp-extensions.md?ref=1b8288ff966bcabadf8f15d71511ff96184e81ea", "patch": "@@ -855,7 +855,7 @@ export interface Diagnostic {\n \n ## Dependency Tree\n \n-**Method:** `rust-analyzer/fetchDependencyGraph`\n+**Method:** `rust-analyzer/fetchDependencyList`\n \n **Request:**\n "}, {"sha": "2e5ea04922fcd5a17c99ee0e855ed83f2ea73e10", "filename": "editors/code/src/dependencies_provider.ts", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1b8288ff966bcabadf8f15d71511ff96184e81ea/editors%2Fcode%2Fsrc%2Fdependencies_provider.ts", "raw_url": "https://github.com/rust-lang/rust/raw/1b8288ff966bcabadf8f15d71511ff96184e81ea/editors%2Fcode%2Fsrc%2Fdependencies_provider.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fdependencies_provider.ts?ref=1b8288ff966bcabadf8f15d71511ff96184e81ea", "patch": "@@ -3,13 +3,12 @@ import * as fspath from \"path\";\n import * as fs from \"fs\";\n import { CtxInit } from \"./ctx\";\n import * as ra from \"./lsp_ext\";\n-import { FetchDependencyGraphResult } from \"./lsp_ext\";\n+import { FetchDependencyListResult } from \"./lsp_ext\";\n import { Ctx } from \"./ctx\";\n import { setFlagsFromString } from \"v8\";\n import * as ra from \"./lsp_ext\";\n \n \n-\n export class RustDependenciesProvider\n     implements vscode.TreeDataProvider<Dependency | DependencyFile>\n {\n@@ -82,8 +81,8 @@ export class RustDependenciesProvider\n     private async getRootDependencies(): Promise<Dependency[]> {\n         const crates = await this.ctx.client.sendRequest(ra.fetchDependencyGraph, {});\n \n-        const dependenciesResult: FetchDependencyGraphResult = await this.ctx.client.sendRequest(\n-            ra.fetchDependencyGraph,\n+        const dependenciesResult: FetchDependencyListResult = await this.ctx.client.sendRequest(\n+            ra.fetchDependencyList,\n             {}\n         );\n         const crates = dependenciesResult.crates;\n@@ -97,7 +96,6 @@ export class RustDependenciesProvider\n     }\n \n     private toDep(moduleName: string, version: string, path: string): Dependency {\n-        // const cratePath = fspath.join(basePath, `${moduleName}-${version}`);\n         return new Dependency(moduleName, version, path, vscode.TreeItemCollapsibleState.Collapsed);\n     }\n }"}, {"sha": "30de5035d63b274e1ad904a9f7756ea1678c1c08", "filename": "editors/code/src/lsp_ext.ts", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1b8288ff966bcabadf8f15d71511ff96184e81ea/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "raw_url": "https://github.com/rust-lang/rust/raw/1b8288ff966bcabadf8f15d71511ff96184e81ea/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Flsp_ext.ts?ref=1b8288ff966bcabadf8f15d71511ff96184e81ea", "patch": "@@ -70,21 +70,21 @@ export const viewItemTree = new lc.RequestType<ViewItemTreeParams, string, void>\n \n export type AnalyzerStatusParams = { textDocument?: lc.TextDocumentIdentifier };\n \n-export interface FetchDependencyGraphParams {}\n+export interface FetchDependencyListParams {}\n \n-export interface FetchDependencyGraphResult {\n+export interface FetchDependencyListResult {\n     crates: {\n         name: string;\n         version: string;\n         path: string;\n     }[];\n }\n \n-export const fetchDependencyGraph = new lc.RequestType<\n-    FetchDependencyGraphParams,\n-    FetchDependencyGraphResult,\n+export const fetchDependencyList = new lc.RequestType<\n+    FetchDependencyListParams,\n+    FetchDependencyListResult,\n     void\n->(\"rust-analyzer/fetchDependencyGraph\");\n+>(\"rust-analyzer/fetchDependencyList\");\n \n export interface FetchDependencyGraphParams {}\n "}]}