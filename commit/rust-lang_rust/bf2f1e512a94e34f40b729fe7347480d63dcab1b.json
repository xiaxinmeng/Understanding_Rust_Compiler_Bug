{"sha": "bf2f1e512a94e34f40b729fe7347480d63dcab1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMmYxZTUxMmE5NGUzNGY0MGI3MjlmZTczNDc0ODBkNjNkY2FiMWI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2015-10-22T23:17:03Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2015-10-22T23:17:03Z"}, "message": "parser: fix erroneous comment\n\nQualified paths allow full path after the `>::`. For example\n\n```rust\n<T as Foo>::U::generic_method::<f64>()\n```\n\nThe example is taken from `test/run-pass/associated-item-long-paths.rs`.", "tree": {"sha": "2b9b9b26cfd00c6797384bf197938ca99b017753", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b9b9b26cfd00c6797384bf197938ca99b017753"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf2f1e512a94e34f40b729fe7347480d63dcab1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf2f1e512a94e34f40b729fe7347480d63dcab1b", "html_url": "https://github.com/rust-lang/rust/commit/bf2f1e512a94e34f40b729fe7347480d63dcab1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf2f1e512a94e34f40b729fe7347480d63dcab1b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7aec91734e0c12b8e36158566ad512a663111c9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7aec91734e0c12b8e36158566ad512a663111c9f", "html_url": "https://github.com/rust-lang/rust/commit/7aec91734e0c12b8e36158566ad512a663111c9f"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "fcebe03596103b128d1942ec97ccfc7fe4de6e31", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/bf2f1e512a94e34f40b729fe7347480d63dcab1b/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf2f1e512a94e34f40b729fe7347480d63dcab1b/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=bf2f1e512a94e34f40b729fe7347480d63dcab1b", "patch": "@@ -1595,8 +1595,21 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n-    // QUALIFIED PATH `<TYPE [as TRAIT_REF]>::IDENT[::<PARAMS>]`\n-    // Assumes that the leading `<` has been parsed already.\n+    /// Parses qualified path.\n+    ///\n+    /// Assumes that the leading `<` has been parsed already.\n+    ///\n+    /// Qualifed paths are a part of the universal function call\n+    /// syntax (UFCS).\n+    ///\n+    /// `qualified_path = <type [as trait_ref]>::path`\n+    ///\n+    /// See `parse_path` for `mode` meaning.\n+    ///\n+    /// # Examples:\n+    ///\n+    /// `<T as U>::a`\n+    /// `<T as U>::F::a::<S>`\n     pub fn parse_qualified_path(&mut self, mode: PathParsingMode)\n                                 -> PResult<(QSelf, ast::Path)> {\n         let span = self.last_span;"}]}