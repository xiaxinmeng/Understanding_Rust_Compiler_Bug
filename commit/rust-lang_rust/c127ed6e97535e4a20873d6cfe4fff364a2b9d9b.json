{"sha": "c127ed6e97535e4a20873d6cfe4fff364a2b9d9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxMjdlZDZlOTc1MzVlNGEyMDg3M2Q2Y2ZlNGZmZjM2NGEyYjlkOWI=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2021-01-16T15:32:51Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2021-01-17T11:48:25Z"}, "message": "Force vec! to expressions only", "tree": {"sha": "a3b9d97ba20279dfcc128dcfa658cde961b04b68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3b9d97ba20279dfcc128dcfa658cde961b04b68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c127ed6e97535e4a20873d6cfe4fff364a2b9d9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c127ed6e97535e4a20873d6cfe4fff364a2b9d9b", "html_url": "https://github.com/rust-lang/rust/commit/c127ed6e97535e4a20873d6cfe4fff364a2b9d9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c127ed6e97535e4a20873d6cfe4fff364a2b9d9b/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f07dd6d41a05e6c88ca094e6555755c81a43e4f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f07dd6d41a05e6c88ca094e6555755c81a43e4f2", "html_url": "https://github.com/rust-lang/rust/commit/f07dd6d41a05e6c88ca094e6555755c81a43e4f2"}], "stats": {"total": 70, "additions": 33, "deletions": 37}, "files": [{"sha": "14a10aac061a4bb4ed519bf52e2d15a56f400016", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c127ed6e97535e4a20873d6cfe4fff364a2b9d9b/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c127ed6e97535e4a20873d6cfe4fff364a2b9d9b/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=c127ed6e97535e4a20873d6cfe4fff364a2b9d9b", "patch": "@@ -140,6 +140,7 @@\n #![feature(type_alias_impl_trait)]\n #![feature(associated_type_bounds)]\n #![feature(slice_group_by)]\n+#![feature(decl_macro)]\n // Allow testing this library\n \n #[cfg(test)]\n@@ -193,4 +194,11 @@ mod std {\n #[unstable(feature = \"liballoc_internals\", issue = \"none\", reason = \"implementation detail\")]\n pub mod __export {\n     pub use core::format_args;\n+\n+    /// Force AST node to an expression to improve diagnostics in pattern position.\n+    #[rustc_macro_transparency = \"semitransparent\"]\n+    #[unstable(feature = \"liballoc_internals\", issue = \"none\", reason = \"implementation detail\")]\n+    pub macro force_expr($e:expr) {\n+        $e\n+    }\n }"}, {"sha": "3a46763c3f608ddf8625c06647b0a049a1c3f78a", "filename": "library/alloc/src/macros.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c127ed6e97535e4a20873d6cfe4fff364a2b9d9b/library%2Falloc%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c127ed6e97535e4a20873d6cfe4fff364a2b9d9b/library%2Falloc%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fmacros.rs?ref=c127ed6e97535e4a20873d6cfe4fff364a2b9d9b", "patch": "@@ -37,16 +37,16 @@\n #[cfg(not(test))]\n #[macro_export]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[allow_internal_unstable(box_syntax)]\n+#[allow_internal_unstable(box_syntax, liballoc_internals)]\n macro_rules! vec {\n     () => (\n-        $crate::vec::Vec::new()\n+        $crate::__export::force_expr!($crate::vec::Vec::new())\n     );\n     ($elem:expr; $n:expr) => (\n-        $crate::vec::from_elem($elem, $n)\n+        $crate::__export::force_expr!($crate::vec::from_elem($elem, $n))\n     );\n     ($($x:expr),+ $(,)?) => (\n-        <[_]>::into_vec(box [$($x),+])\n+        $crate::__export::force_expr!(<[_]>::into_vec(box [$($x),+]))\n     );\n }\n "}, {"sha": "ce4298b8bb3347ada138f0ff73c94e00dfb9b94e", "filename": "src/test/ui/macros/vec-macro-in-pattern.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c127ed6e97535e4a20873d6cfe4fff364a2b9d9b/src%2Ftest%2Fui%2Fmacros%2Fvec-macro-in-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c127ed6e97535e4a20873d6cfe4fff364a2b9d9b/src%2Ftest%2Fui%2Fmacros%2Fvec-macro-in-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fvec-macro-in-pattern.rs?ref=c127ed6e97535e4a20873d6cfe4fff364a2b9d9b", "patch": "@@ -0,0 +1,10 @@\n+// This is a regression test for #61933\n+// Verify that the vec![] macro may not be used in patterns\n+// and that the resulting diagnostic is actually helpful.\n+\n+fn main() {\n+    match Some(vec![42]) {\n+        Some(vec![43]) => {} //~ ERROR arbitrary expressions aren't allowed in patterns\n+        _ => {}\n+    }\n+}"}, {"sha": "3dabebfdaa25346b427478adc93c4a9dc9343849", "filename": "src/test/ui/macros/vec-macro-in-pattern.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c127ed6e97535e4a20873d6cfe4fff364a2b9d9b/src%2Ftest%2Fui%2Fmacros%2Fvec-macro-in-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c127ed6e97535e4a20873d6cfe4fff364a2b9d9b/src%2Ftest%2Fui%2Fmacros%2Fvec-macro-in-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fvec-macro-in-pattern.stderr?ref=c127ed6e97535e4a20873d6cfe4fff364a2b9d9b", "patch": "@@ -0,0 +1,10 @@\n+error: arbitrary expressions aren't allowed in patterns\n+  --> $DIR/vec-macro-in-pattern.rs:7:14\n+   |\n+LL |         Some(vec![43]) => {}\n+   |              ^^^^^^^^\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to previous error\n+"}, {"sha": "e1695d6820a817d3ba6d5e4501484872579886c6", "filename": "src/test/ui/suggestions/vec-macro-in-pattern.fixed", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f07dd6d41a05e6c88ca094e6555755c81a43e4f2/src%2Ftest%2Fui%2Fsuggestions%2Fvec-macro-in-pattern.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f07dd6d41a05e6c88ca094e6555755c81a43e4f2/src%2Ftest%2Fui%2Fsuggestions%2Fvec-macro-in-pattern.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fvec-macro-in-pattern.fixed?ref=f07dd6d41a05e6c88ca094e6555755c81a43e4f2", "patch": "@@ -1,8 +0,0 @@\n-// run-rustfix\n-fn main() {\n-    // everything after `.as_ref` should be suggested\n-    match Some(vec![3]).as_ref().map(|v| v.as_slice()) {\n-        Some([_x]) => (), //~ ERROR unexpected `(` after qualified path\n-        _ => (),\n-    }\n-}"}, {"sha": "4843629fbcf904788e0567d86717418ce7005794", "filename": "src/test/ui/suggestions/vec-macro-in-pattern.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f07dd6d41a05e6c88ca094e6555755c81a43e4f2/src%2Ftest%2Fui%2Fsuggestions%2Fvec-macro-in-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07dd6d41a05e6c88ca094e6555755c81a43e4f2/src%2Ftest%2Fui%2Fsuggestions%2Fvec-macro-in-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fvec-macro-in-pattern.rs?ref=f07dd6d41a05e6c88ca094e6555755c81a43e4f2", "patch": "@@ -1,8 +0,0 @@\n-// run-rustfix\n-fn main() {\n-    // everything after `.as_ref` should be suggested\n-    match Some(vec![3]).as_ref().map(|v| v.as_slice()) {\n-        Some(vec![_x]) => (), //~ ERROR unexpected `(` after qualified path\n-        _ => (),\n-    }\n-}"}, {"sha": "f9d0464ac88b1f33e8dc7fe4fcf57cbc12a657ce", "filename": "src/test/ui/suggestions/vec-macro-in-pattern.stderr", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f07dd6d41a05e6c88ca094e6555755c81a43e4f2/src%2Ftest%2Fui%2Fsuggestions%2Fvec-macro-in-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f07dd6d41a05e6c88ca094e6555755c81a43e4f2/src%2Ftest%2Fui%2Fsuggestions%2Fvec-macro-in-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fvec-macro-in-pattern.stderr?ref=f07dd6d41a05e6c88ca094e6555755c81a43e4f2", "patch": "@@ -1,16 +0,0 @@\n-error: unexpected `(` after qualified path\n-  --> $DIR/vec-macro-in-pattern.rs:5:14\n-   |\n-LL |         Some(vec![_x]) => (),\n-   |              ^^^^^^^^\n-   |              |\n-   |              unexpected `(` after qualified path\n-   |              the qualified path\n-   |              in this macro invocation\n-   |              help: use a slice pattern here instead: `[_x]`\n-   |\n-   = help: for more information, see https://doc.rust-lang.org/edition-guide/rust-2018/slice-patterns.html\n-   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: aborting due to previous error\n-"}, {"sha": "755eec23c2ee33e886d8b835f651b2be4c95ecef", "filename": "src/test/ui/type/ascription/issue-47666.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c127ed6e97535e4a20873d6cfe4fff364a2b9d9b/src%2Ftest%2Fui%2Ftype%2Fascription%2Fissue-47666.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c127ed6e97535e4a20873d6cfe4fff364a2b9d9b/src%2Ftest%2Fui%2Ftype%2Fascription%2Fissue-47666.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Fascription%2Fissue-47666.stderr?ref=c127ed6e97535e4a20873d6cfe4fff364a2b9d9b", "patch": "@@ -1,4 +1,4 @@\n-error: expected type, found reserved keyword `box`\n+error: expected type, found `<[_]>::into_vec(box [0, 1])`\n   --> $DIR/issue-47666.rs:3:25\n    |\n LL |     let _ = Option:Some(vec![0, 1]);"}]}