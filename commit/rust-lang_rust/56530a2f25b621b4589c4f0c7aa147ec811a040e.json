{"sha": "56530a2f25b621b4589c4f0c7aa147ec811a040e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2NTMwYTJmMjViNjIxYjQ1ODljNGYwYzdhYTE0N2VjODExYTA0MGU=", "commit": {"author": {"name": "Hirochika Matsumoto", "email": "matsujika@gmail.com", "date": "2020-12-18T13:13:25Z"}, "committer": {"name": "Hirochika Matsumoto", "email": "matsujika@gmail.com", "date": "2020-12-18T13:13:25Z"}, "message": "Fix typo", "tree": {"sha": "0aaa2e19e5be4b5fc379e2c19e759cd9f6ca83fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0aaa2e19e5be4b5fc379e2c19e759cd9f6ca83fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56530a2f25b621b4589c4f0c7aa147ec811a040e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56530a2f25b621b4589c4f0c7aa147ec811a040e", "html_url": "https://github.com/rust-lang/rust/commit/56530a2f25b621b4589c4f0c7aa147ec811a040e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56530a2f25b621b4589c4f0c7aa147ec811a040e/comments", "author": {"login": "hkmatsumoto", "id": 57856193, "node_id": "MDQ6VXNlcjU3ODU2MTkz", "avatar_url": "https://avatars.githubusercontent.com/u/57856193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkmatsumoto", "html_url": "https://github.com/hkmatsumoto", "followers_url": "https://api.github.com/users/hkmatsumoto/followers", "following_url": "https://api.github.com/users/hkmatsumoto/following{/other_user}", "gists_url": "https://api.github.com/users/hkmatsumoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkmatsumoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkmatsumoto/subscriptions", "organizations_url": "https://api.github.com/users/hkmatsumoto/orgs", "repos_url": "https://api.github.com/users/hkmatsumoto/repos", "events_url": "https://api.github.com/users/hkmatsumoto/events{/privacy}", "received_events_url": "https://api.github.com/users/hkmatsumoto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hkmatsumoto", "id": 57856193, "node_id": "MDQ6VXNlcjU3ODU2MTkz", "avatar_url": "https://avatars.githubusercontent.com/u/57856193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkmatsumoto", "html_url": "https://github.com/hkmatsumoto", "followers_url": "https://api.github.com/users/hkmatsumoto/followers", "following_url": "https://api.github.com/users/hkmatsumoto/following{/other_user}", "gists_url": "https://api.github.com/users/hkmatsumoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkmatsumoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkmatsumoto/subscriptions", "organizations_url": "https://api.github.com/users/hkmatsumoto/orgs", "repos_url": "https://api.github.com/users/hkmatsumoto/repos", "events_url": "https://api.github.com/users/hkmatsumoto/events{/privacy}", "received_events_url": "https://api.github.com/users/hkmatsumoto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8d3ab96aa94423f1bdfbb605098a506ab5edc7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8d3ab96aa94423f1bdfbb605098a506ab5edc7e", "html_url": "https://github.com/rust-lang/rust/commit/d8d3ab96aa94423f1bdfbb605098a506ab5edc7e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b4dd0fc2449ecb7ffbe653bcb4b6a4f6403df5c2", "filename": "compiler/rustc_lexer/src/unescape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56530a2f25b621b4589c4f0c7aa147ec811a040e/compiler%2Frustc_lexer%2Fsrc%2Funescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56530a2f25b621b4589c4f0c7aa147ec811a040e/compiler%2Frustc_lexer%2Fsrc%2Funescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lexer%2Fsrc%2Funescape.rs?ref=56530a2f25b621b4589c4f0c7aa147ec811a040e", "patch": "@@ -201,7 +201,7 @@ fn scan_escape(first_char: char, chars: &mut Chars<'_>, mode: Mode) -> Result<ch\n                 return Err(EscapeError::NoBraceInUnicodeEscape);\n             }\n \n-            // First characrer must be a hexadecimal digit.\n+            // First character must be a hexadecimal digit.\n             let mut n_digits = 1;\n             let mut value: u32 = match chars.next().ok_or(EscapeError::UnclosedUnicodeEscape)? {\n                 '_' => return Err(EscapeError::LeadingUnderscoreUnicodeEscape),"}]}