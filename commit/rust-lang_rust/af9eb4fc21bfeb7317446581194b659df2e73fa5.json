{"sha": "af9eb4fc21bfeb7317446581194b659df2e73fa5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmOWViNGZjMjFiZmViNzMxNzQ0NjU4MTE5NGI2NTlkZjJlNzNmYTU=", "commit": {"author": {"name": "Niek Sanders", "email": "niek.sanders@gmail.com", "date": "2018-09-29T22:24:37Z"}, "committer": {"name": "Niek Sanders", "email": "niek.sanders@gmail.com", "date": "2018-09-29T22:24:37Z"}, "message": "Correct doc for WorkQueue<T>::pop().", "tree": {"sha": "63c372b0a325ae323ac600f28eb632df8587ce84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63c372b0a325ae323ac600f28eb632df8587ce84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af9eb4fc21bfeb7317446581194b659df2e73fa5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af9eb4fc21bfeb7317446581194b659df2e73fa5", "html_url": "https://github.com/rust-lang/rust/commit/af9eb4fc21bfeb7317446581194b659df2e73fa5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af9eb4fc21bfeb7317446581194b659df2e73fa5/comments", "author": {"login": "nieksand", "id": 1396037, "node_id": "MDQ6VXNlcjEzOTYwMzc=", "avatar_url": "https://avatars.githubusercontent.com/u/1396037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nieksand", "html_url": "https://github.com/nieksand", "followers_url": "https://api.github.com/users/nieksand/followers", "following_url": "https://api.github.com/users/nieksand/following{/other_user}", "gists_url": "https://api.github.com/users/nieksand/gists{/gist_id}", "starred_url": "https://api.github.com/users/nieksand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nieksand/subscriptions", "organizations_url": "https://api.github.com/users/nieksand/orgs", "repos_url": "https://api.github.com/users/nieksand/repos", "events_url": "https://api.github.com/users/nieksand/events{/privacy}", "received_events_url": "https://api.github.com/users/nieksand/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nieksand", "id": 1396037, "node_id": "MDQ6VXNlcjEzOTYwMzc=", "avatar_url": "https://avatars.githubusercontent.com/u/1396037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nieksand", "html_url": "https://github.com/nieksand", "followers_url": "https://api.github.com/users/nieksand/followers", "following_url": "https://api.github.com/users/nieksand/following{/other_user}", "gists_url": "https://api.github.com/users/nieksand/gists{/gist_id}", "starred_url": "https://api.github.com/users/nieksand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nieksand/subscriptions", "organizations_url": "https://api.github.com/users/nieksand/orgs", "repos_url": "https://api.github.com/users/nieksand/repos", "events_url": "https://api.github.com/users/nieksand/events{/privacy}", "received_events_url": "https://api.github.com/users/nieksand/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb0896af11bb6b79051d4b794c70f78cd45d080f", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb0896af11bb6b79051d4b794c70f78cd45d080f", "html_url": "https://github.com/rust-lang/rust/commit/bb0896af11bb6b79051d4b794c70f78cd45d080f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "eff80a98c9de905a6b293fea73d7c2c8aa08743f", "filename": "src/librustc_data_structures/work_queue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af9eb4fc21bfeb7317446581194b659df2e73fa5/src%2Flibrustc_data_structures%2Fwork_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af9eb4fc21bfeb7317446581194b659df2e73fa5/src%2Flibrustc_data_structures%2Fwork_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fwork_queue.rs?ref=af9eb4fc21bfeb7317446581194b659df2e73fa5", "patch": "@@ -53,7 +53,7 @@ impl<T: Idx> WorkQueue<T> {\n         }\n     }\n \n-    /// Attempt to enqueue `element` in the work queue. Returns false if it was already present.\n+    /// Attempt to pop an element from the work queue.\n     #[inline]\n     pub fn pop(&mut self) -> Option<T> {\n         if let Some(element) = self.deque.pop_front() {"}]}