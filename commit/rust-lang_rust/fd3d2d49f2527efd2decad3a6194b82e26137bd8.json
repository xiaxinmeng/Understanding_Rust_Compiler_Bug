{"sha": "fd3d2d49f2527efd2decad3a6194b82e26137bd8", "node_id": "C_kwDOAAsO6NoAKGZkM2QyZDQ5ZjI1MjdlZmQyZGVjYWQzYTYxOTRiODJlMjYxMzdiZDg", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2023-06-06T02:49:09Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2023-06-06T02:51:34Z"}, "message": "Don't hold the active queries lock while calling `make_query`", "tree": {"sha": "5a1b701042775fdfd446c723096a5cb8ef2043c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a1b701042775fdfd446c723096a5cb8ef2043c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd3d2d49f2527efd2decad3a6194b82e26137bd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd3d2d49f2527efd2decad3a6194b82e26137bd8", "html_url": "https://github.com/rust-lang/rust/commit/fd3d2d49f2527efd2decad3a6194b82e26137bd8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd3d2d49f2527efd2decad3a6194b82e26137bd8/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad8304a0d5280de30856b39c19df7b306957e878", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad8304a0d5280de30856b39c19df7b306957e878", "html_url": "https://github.com/rust-lang/rust/commit/ad8304a0d5280de30856b39c19df7b306957e878"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "b2bc33c7e0de0ef82734d6d9565c87a1519df5e7", "filename": "compiler/rustc_query_system/src/query/plumbing.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fd3d2d49f2527efd2decad3a6194b82e26137bd8/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd3d2d49f2527efd2decad3a6194b82e26137bd8/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs?ref=fd3d2d49f2527efd2decad3a6194b82e26137bd8", "patch": "@@ -69,6 +69,8 @@ where\n         make_query: fn(Qcx, K) -> QueryStackFrame<D>,\n         jobs: &mut QueryMap<D>,\n     ) -> Option<()> {\n+        let mut active = Vec::new();\n+\n         #[cfg(parallel_compiler)]\n         {\n             // We use try_lock_shards here since we are called from the\n@@ -77,8 +79,7 @@ where\n             for shard in shards.iter() {\n                 for (k, v) in shard.iter() {\n                     if let QueryResult::Started(ref job) = *v {\n-                        let query = make_query(qcx, *k);\n-                        jobs.insert(job.id, QueryJobInfo { query, job: job.clone() });\n+                        active.push((*k, job.clone()));\n                     }\n                 }\n             }\n@@ -91,12 +92,18 @@ where\n             // really hurt much.)\n             for (k, v) in self.active.try_lock()?.iter() {\n                 if let QueryResult::Started(ref job) = *v {\n-                    let query = make_query(qcx, *k);\n-                    jobs.insert(job.id, QueryJobInfo { query, job: job.clone() });\n+                    active.push((*k, job.clone()));\n                 }\n             }\n         }\n \n+        // Call `make_query` while we're not holding a `self.active` lock as `make_query` may call\n+        // queries leading to a deadlock.\n+        for (key, job) in active {\n+            let query = make_query(qcx, key);\n+            jobs.insert(job.id, QueryJobInfo { query, job });\n+        }\n+\n         Some(())\n     }\n }"}]}