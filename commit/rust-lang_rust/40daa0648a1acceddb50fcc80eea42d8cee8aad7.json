{"sha": "40daa0648a1acceddb50fcc80eea42d8cee8aad7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwZGFhMDY0OGExYWNjZWRkYjUwZmNjODBlZWE0MmQ4Y2VlOGFhZDc=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-03-08T08:42:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-08T08:42:01Z"}, "message": "Rollup merge of #58926 - gabi-250:tcx-lifetimes, r=petrochenkov\n\nMake the lifetime parameters of tcx consistent.\n\nI have implemented `codegen_allocator` for my backend, but I've had to make a small change to its signature in `ExtraBackendMethods`. I wonder if this change is justified, or if it is too specific to my use case to be useful to anyone else.\n\n`write_metadata` and `codegen_allocator` are both called from `codegen_crate` (in `librustc_codegen_ssa/base.rs`), and they both receive the same `tcx` as an argument:\n\nhttps://github.com/rust-lang/rust/blob/c196097e588b05e86b5ce6de992b2a6e6a7027bd/src/librustc_codegen_ssa/base.rs#L555-L557\n\nand:\n\nhttps://github.com/rust-lang/rust/blob/c196097e588b05e86b5ce6de992b2a6e6a7027bd/src/librustc_codegen_ssa/base.rs#L640-L642\n\nHowever, `codegen_allocator` accepts a `TyCtxt` with any lifetime parameters (`tcx: TyCtxt<'_, '_, '_>`), while `write_metadata` requires that the `tcx` argument is of type `TyCtxt<'b, 'gcx, 'gcx>`. In my implementation, I've found that it's necessary for `tcx` in `codegen_allocator` to also have the `<'b, 'gcx, 'gcx>` lifetime parameters.\n\nHave I misunderstood the purpose of the parameters of `TyCtxt`? I've read [here](https://rust-lang.github.io/rustc-guide/ty.html) that the last two parameters only need to be distinct if the function needs to be used during type inference, but I don't think that is the case here.", "tree": {"sha": "5ff57c35091911073f33a8dac678b892e5bc49c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ff57c35091911073f33a8dac678b892e5bc49c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40daa0648a1acceddb50fcc80eea42d8cee8aad7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcgirZCRBK7hj4Ov3rIwAAdHIIAAxWpDdwzuKvXPgifEZIozvU\nhweon0s2+QQTE5SN+7EAHgj4rF4AAgt4cIrkKVomXtcOq25/UWvqcYJfwbHwO7bg\ns2gxjYvYCvnKWUaXB8vdvWvef+ww5OrpBUoGFLBGHBQcgyxBq2wjcv9phempv6Vp\nJAXvpgmT+opKCIFP4BvTgnBHuiLh6V2qx8TO6WHn4Ow6w3Brqw9ovCNsyBmb2Jit\nlmWUQ8+AGuPhELqyvRtf7u5dPigAkPS8oqiS/RICZpIyGwzYuCCEvvi/Xg93L4P3\nrTDFYZ0KS3DR16PjnX7V/meQc0DEodJcGzmUUlv0pbkpnP0hjxxag6WjpqbfaiA=\n=W8G5\n-----END PGP SIGNATURE-----\n", "payload": "tree 5ff57c35091911073f33a8dac678b892e5bc49c1\nparent 416edc1076ad671232eb6164faf16adf32b90520\nparent cd9a0cf53776cc2b36898a530d20b6046875a510\nauthor Pietro Albini <pietro@pietroalbini.org> 1552034521 +0100\ncommitter GitHub <noreply@github.com> 1552034521 +0100\n\nRollup merge of #58926 - gabi-250:tcx-lifetimes, r=petrochenkov\n\nMake the lifetime parameters of tcx consistent.\n\nI have implemented `codegen_allocator` for my backend, but I've had to make a small change to its signature in `ExtraBackendMethods`. I wonder if this change is justified, or if it is too specific to my use case to be useful to anyone else.\n\n`write_metadata` and `codegen_allocator` are both called from `codegen_crate` (in `librustc_codegen_ssa/base.rs`), and they both receive the same `tcx` as an argument:\n\nhttps://github.com/rust-lang/rust/blob/c196097e588b05e86b5ce6de992b2a6e6a7027bd/src/librustc_codegen_ssa/base.rs#L555-L557\n\nand:\n\nhttps://github.com/rust-lang/rust/blob/c196097e588b05e86b5ce6de992b2a6e6a7027bd/src/librustc_codegen_ssa/base.rs#L640-L642\n\nHowever, `codegen_allocator` accepts a `TyCtxt` with any lifetime parameters (`tcx: TyCtxt<'_, '_, '_>`), while `write_metadata` requires that the `tcx` argument is of type `TyCtxt<'b, 'gcx, 'gcx>`. In my implementation, I've found that it's necessary for `tcx` in `codegen_allocator` to also have the `<'b, 'gcx, 'gcx>` lifetime parameters.\n\nHave I misunderstood the purpose of the parameters of `TyCtxt`? I've read [here](https://rust-lang.github.io/rustc-guide/ty.html) that the last two parameters only need to be distinct if the function needs to be used during type inference, but I don't think that is the case here.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40daa0648a1acceddb50fcc80eea42d8cee8aad7", "html_url": "https://github.com/rust-lang/rust/commit/40daa0648a1acceddb50fcc80eea42d8cee8aad7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40daa0648a1acceddb50fcc80eea42d8cee8aad7/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "416edc1076ad671232eb6164faf16adf32b90520", "url": "https://api.github.com/repos/rust-lang/rust/commits/416edc1076ad671232eb6164faf16adf32b90520", "html_url": "https://github.com/rust-lang/rust/commit/416edc1076ad671232eb6164faf16adf32b90520"}, {"sha": "cd9a0cf53776cc2b36898a530d20b6046875a510", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd9a0cf53776cc2b36898a530d20b6046875a510", "html_url": "https://github.com/rust-lang/rust/commit/cd9a0cf53776cc2b36898a530d20b6046875a510"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "258391ba8360fc99eecc1204d126860f964a9f7c", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/40daa0648a1acceddb50fcc80eea42d8cee8aad7/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40daa0648a1acceddb50fcc80eea42d8cee8aad7/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=40daa0648a1acceddb50fcc80eea42d8cee8aad7", "patch": "@@ -123,9 +123,9 @@ impl ExtraBackendMethods for LlvmCodegenBackend {\n     ) -> EncodedMetadata {\n         base::write_metadata(tcx, metadata)\n     }\n-    fn codegen_allocator(\n+    fn codegen_allocator<'b, 'gcx>(\n         &self,\n-        tcx: TyCtxt<'_, '_, '_>,\n+        tcx: TyCtxt<'b, 'gcx, 'gcx>,\n         mods: &mut ModuleLlvm,\n         kind: AllocatorKind\n     ) {"}, {"sha": "a9e0eadb198a86f1fedea63c7b47f3763a6ede4d", "filename": "src/librustc_codegen_ssa/traits/backend.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/40daa0648a1acceddb50fcc80eea42d8cee8aad7/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40daa0648a1acceddb50fcc80eea42d8cee8aad7/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs?ref=40daa0648a1acceddb50fcc80eea42d8cee8aad7", "patch": "@@ -38,9 +38,9 @@ pub trait ExtraBackendMethods: CodegenBackend + WriteBackendMethods + Sized + Se\n         tcx: TyCtxt<'b, 'gcx, 'gcx>,\n         metadata: &mut Self::Module,\n     ) -> EncodedMetadata;\n-    fn codegen_allocator(\n+    fn codegen_allocator<'b, 'gcx>(\n         &self,\n-        tcx: TyCtxt<'_, '_, '_>,\n+        tcx: TyCtxt<'b, 'gcx, 'gcx>,\n         mods: &mut Self::Module,\n         kind: AllocatorKind\n     );"}]}