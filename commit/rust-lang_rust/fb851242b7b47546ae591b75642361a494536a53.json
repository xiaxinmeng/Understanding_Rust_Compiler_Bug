{"sha": "fb851242b7b47546ae591b75642361a494536a53", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiODUxMjQyYjdiNDc1NDZhZTU5MWI3NTY0MjM2MWE0OTQ1MzZhNTM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-12T01:17:13Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-12T01:17:26Z"}, "message": "Promote 'pub' and 'priv' from restricted to strict keywords", "tree": {"sha": "5c2bb7e0e59096147207c801abf6a4b13547a15c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c2bb7e0e59096147207c801abf6a4b13547a15c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb851242b7b47546ae591b75642361a494536a53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb851242b7b47546ae591b75642361a494536a53", "html_url": "https://github.com/rust-lang/rust/commit/fb851242b7b47546ae591b75642361a494536a53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb851242b7b47546ae591b75642361a494536a53/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8672b9003f17b6e38a9c55f92dfc1deef91b1344", "url": "https://api.github.com/repos/rust-lang/rust/commits/8672b9003f17b6e38a9c55f92dfc1deef91b1344", "html_url": "https://github.com/rust-lang/rust/commit/8672b9003f17b6e38a9c55f92dfc1deef91b1344"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "84ea2fe4477f81121a1b6ccbd7b6c468648960b4", "filename": "src/libcore/core.rc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb851242b7b47546ae591b75642361a494536a53/src%2Flibcore%2Fcore.rc", "raw_url": "https://github.com/rust-lang/rust/raw/fb851242b7b47546ae591b75642361a494536a53/src%2Flibcore%2Fcore.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcore.rc?ref=fb851242b7b47546ae591b75642361a494536a53", "patch": "@@ -67,7 +67,7 @@ export option_iter;\n \n // This creates some APIs that I do not want to commit to, but it must be\n // exported from core in order for uv to remain in std (see #2648).\n-export priv;\n+export private;\n \n \n // Built-in-type support modules\n@@ -241,7 +241,7 @@ mod rt;\n // For internal use, not exported\n \n mod unicode;\n-mod priv;\n+mod private;\n mod cmath;\n mod stackwalk;\n "}, {"sha": "7201b2a236d4c496ca46abc75a56864eab251765", "filename": "src/libcore/os.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb851242b7b47546ae591b75642361a494536a53/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb851242b7b47546ae591b75642361a494536a53/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=fb851242b7b47546ae591b75642361a494536a53", "patch": "@@ -174,7 +174,7 @@ mod global_env {\n     fn get_global_env_chan() -> comm::Chan<Msg> {\n         let global_ptr = rustrt::rust_global_env_chan_ptr();\n         unsafe {\n-            priv::chan_from_global_ptr(global_ptr, || {\n+            private::chan_from_global_ptr(global_ptr, || {\n                 // FIXME (#2621): This would be a good place to use a very\n                 // small foreign stack\n                 task::task().sched_mode(task::SingleThreaded).unlinked()\n@@ -184,7 +184,7 @@ mod global_env {\n \n     fn global_env_task(msg_po: comm::Port<Msg>) {\n         unsafe {\n-            do priv::weaken_task |weak_po| {\n+            do private::weaken_task |weak_po| {\n                 loop {\n                     match comm::select2(msg_po, weak_po) {\n                       either::Left(MsgGetEnv(n, resp_ch)) => {"}, {"sha": "207bc4a91b600a2d803ca37d4ee8709996bbbca9", "filename": "src/libcore/private.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/fb851242b7b47546ae591b75642361a494536a53/src%2Flibcore%2Fprivate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb851242b7b47546ae591b75642361a494536a53/src%2Flibcore%2Fprivate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fprivate.rs?ref=fb851242b7b47546ae591b75642361a494536a53", "previous_filename": "src/libcore/priv.rs"}, {"sha": "e5af0e8ffdfef1d5c4c31f45ec604535e141d61c", "filename": "src/libstd/uv_global_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb851242b7b47546ae591b75642361a494536a53/src%2Flibstd%2Fuv_global_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb851242b7b47546ae591b75642361a494536a53/src%2Flibstd%2Fuv_global_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fuv_global_loop.rs?ref=fb851242b7b47546ae591b75642361a494536a53", "patch": "@@ -6,7 +6,7 @@ use ll = uv_ll;\n use iotask = uv_iotask;\n use get_gl = get;\n use iotask::{IoTask, spawn_iotask};\n-use priv::{chan_from_global_ptr, weaken_task};\n+use private::{chan_from_global_ptr, weaken_task};\n use comm = core::comm;\n use comm::{Port, Chan, select2, listen};\n use task::TaskBuilder;"}, {"sha": "aac36040cf06009cdc2a7e9e89e93cbed1cca797", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fb851242b7b47546ae591b75642361a494536a53/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb851242b7b47546ae591b75642361a494536a53/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=fb851242b7b47546ae591b75642361a494536a53", "patch": "@@ -414,7 +414,6 @@ fn restricted_keyword_table() -> HashMap<~str, ()> {\n         ~\"const\", ~\"copy\",\n         ~\"fail\", ~\"fn\",\n         ~\"impl\",\n-        ~\"priv\", ~\"pub\",\n         ~\"unsafe\"\n     ];\n     for keys.each |word| {\n@@ -435,7 +434,7 @@ fn strict_keyword_table() -> HashMap<~str, ()> {\n         ~\"if\",\n         ~\"let\", ~\"log\", ~\"loop\",\n         ~\"match\", ~\"mod\", ~\"move\", ~\"mut\",\n-        ~\"pure\",\n+        ~\"priv\", ~\"pub\", ~\"pure\",\n         ~\"ref\", ~\"return\",\n         ~\"struct\",\n         ~\"true\", ~\"trait\", ~\"type\","}]}