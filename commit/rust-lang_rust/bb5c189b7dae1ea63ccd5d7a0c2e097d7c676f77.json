{"sha": "bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiNWMxODliN2RhZTFlYTYzY2NkNWQ3YTBjMmUwOTdkN2M2NzZmNzc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-13T14:39:16Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-13T14:39:16Z"}, "message": "Rename ra_ide_db -> ide_db", "tree": {"sha": "62db93464dbd9ea154a8cb579a576202d97c01cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62db93464dbd9ea154a8cb579a576202d97c01cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "html_url": "https://github.com/rust-lang/rust/commit/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae71a631fd657368e8593feb5e025d23147afe60", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae71a631fd657368e8593feb5e025d23147afe60", "html_url": "https://github.com/rust-lang/rust/commit/ae71a631fd657368e8593feb5e025d23147afe60"}], "stats": {"total": 192, "additions": 93, "deletions": 99}, "files": [{"sha": "8704e43860ae0feac36a29f90521112dc0b280d9", "filename": "Cargo.lock", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -562,6 +562,25 @@ dependencies = [\n  \"winapi 0.3.9\",\n ]\n \n+[[package]]\n+name = \"ide_db\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"base_db\",\n+ \"either\",\n+ \"fst\",\n+ \"hir\",\n+ \"log\",\n+ \"once_cell\",\n+ \"profile\",\n+ \"rayon\",\n+ \"rustc-hash\",\n+ \"stdx\",\n+ \"syntax\",\n+ \"test_utils\",\n+ \"text_edit\",\n+]\n+\n [[package]]\n name = \"idna\"\n version = \"0.2.0\"\n@@ -1090,9 +1109,9 @@ dependencies = [\n  \"base_db\",\n  \"either\",\n  \"hir\",\n+ \"ide_db\",\n  \"itertools\",\n  \"profile\",\n- \"ra_ide_db\",\n  \"rustc-hash\",\n  \"stdx\",\n  \"syntax\",\n@@ -1109,13 +1128,13 @@ dependencies = [\n  \"either\",\n  \"expect\",\n  \"hir\",\n+ \"ide_db\",\n  \"indexmap\",\n  \"itertools\",\n  \"log\",\n  \"oorandom\",\n  \"profile\",\n  \"ra_assists\",\n- \"ra_ide_db\",\n  \"ra_ssr\",\n  \"rustc-hash\",\n  \"stdx\",\n@@ -1124,33 +1143,14 @@ dependencies = [\n  \"text_edit\",\n ]\n \n-[[package]]\n-name = \"ra_ide_db\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"base_db\",\n- \"either\",\n- \"fst\",\n- \"hir\",\n- \"log\",\n- \"once_cell\",\n- \"profile\",\n- \"rayon\",\n- \"rustc-hash\",\n- \"stdx\",\n- \"syntax\",\n- \"test_utils\",\n- \"text_edit\",\n-]\n-\n [[package]]\n name = \"ra_ssr\"\n version = \"0.1.0\"\n dependencies = [\n  \"base_db\",\n  \"expect\",\n  \"hir\",\n- \"ra_ide_db\",\n+ \"ide_db\",\n  \"rustc-hash\",\n  \"syntax\",\n  \"test_utils\",\n@@ -1239,6 +1239,7 @@ dependencies = [\n  \"hir\",\n  \"hir_def\",\n  \"hir_ty\",\n+ \"ide_db\",\n  \"itertools\",\n  \"jod-thread\",\n  \"log\",\n@@ -1253,7 +1254,6 @@ dependencies = [\n  \"profile\",\n  \"project_model\",\n  \"ra_ide\",\n- \"ra_ide_db\",\n  \"ra_ssr\",\n  \"rayon\",\n  \"rustc-hash\","}, {"sha": "885212162f3b95694fc6109848d12fb8e12436b3", "filename": "crates/ide_db/Cargo.toml", "status": "renamed", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2FCargo.toml?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -1,9 +1,9 @@\n [package]\n-edition = \"2018\"\n-name = \"ra_ide_db\"\n-version = \"0.1.0\"\n-authors = [\"rust-analyzer developers\"]\n+name = \"ide_db\"\n+version = \"0.0.0\"\n license = \"MIT OR Apache-2.0\"\n+authors = [\"rust-analyzer developers\"]\n+edition = \"2018\"\n \n [lib]\n doctest = false\n@@ -20,13 +20,11 @@ once_cell = \"1.3.1\"\n either = \"1.5.3\"\n \n stdx = { path = \"../stdx\" }\n-\n syntax = { path = \"../syntax\" }\n text_edit = { path = \"../text_edit\" }\n base_db = { path = \"../base_db\" }\n profile = { path = \"../profile\" }\n test_utils = { path = \"../test_utils\" }\n-\n # ra_ide should depend only on the top-level `hir` package. if you need\n # something from some `hir_xxx` subpackage, reexport the API via `hir`.\n hir = { path = \"../hir\" }", "previous_filename": "crates/ra_ide_db/Cargo.toml"}, {"sha": "8b4fd7ab84981f21b5ee7c93fc6cd54e1c401f1e", "filename": "crates/ide_db/src/change.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2Fsrc%2Fchange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2Fsrc%2Fchange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fchange.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "previous_filename": "crates/ra_ide_db/src/change.rs"}, {"sha": "7b5d6ac491bbdfeebdae6e56c977098772bc8450", "filename": "crates/ide_db/src/defs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fdefs.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "previous_filename": "crates/ra_ide_db/src/defs.rs"}, {"sha": "1d0c202915ec1d240f85ec8849ae738f11b4d6a0", "filename": "crates/ide_db/src/imports_locator.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2Fsrc%2Fimports_locator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2Fsrc%2Fimports_locator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fimports_locator.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "previous_filename": "crates/ra_ide_db/src/imports_locator.rs"}, {"sha": "fd474cd0f4918c27c6dabc42281ff4cd81d2f46c", "filename": "crates/ide_db/src/lib.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Flib.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "previous_filename": "crates/ra_ide_db/src/lib.rs"}, {"sha": "a381f7fb8d5e91277cdbe22cfdfdda43f6bf3ca8", "filename": "crates/ide_db/src/line_index.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2Fsrc%2Fline_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2Fsrc%2Fline_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fline_index.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "previous_filename": "crates/ra_ide_db/src/line_index.rs"}, {"sha": "b9360bf12912f04cc3ce8d48d93425e97e4f55d3", "filename": "crates/ide_db/src/search.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsearch.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "previous_filename": "crates/ra_ide_db/src/search.rs"}, {"sha": "f1590ec66326856c3ea2e9df385701f95e6e4173", "filename": "crates/ide_db/src/source_change.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2Fsrc%2Fsource_change.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2Fsrc%2Fsource_change.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsource_change.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "previous_filename": "crates/ra_ide_db/src/source_change.rs"}, {"sha": "654df898e93d76c22a4384009ac231f8821adff5", "filename": "crates/ide_db/src/symbol_index.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "previous_filename": "crates/ra_ide_db/src/symbol_index.rs"}, {"sha": "7af9f9d9bb7bdafcd852e474572a1aca06dcadd0", "filename": "crates/ide_db/src/wasm_shims.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2Fsrc%2Fwasm_shims.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fide_db%2Fsrc%2Fwasm_shims.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fwasm_shims.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "previous_filename": "crates/ra_ide_db/src/wasm_shims.rs"}, {"sha": "19e7591f71c762c5748d6a4614db9eeefdba3a3e", "filename": "crates/ra_assists/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2FCargo.toml?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -19,6 +19,6 @@ syntax = { path = \"../syntax\" }\n text_edit = { path = \"../text_edit\" }\n profile = { path = \"../profile\" }\n base_db = { path = \"../base_db\" }\n-ra_ide_db = { path = \"../ra_ide_db\" }\n+ide_db = { path = \"../ide_db\" }\n hir = { path = \"../hir\" }\n test_utils = { path = \"../test_utils\" }"}, {"sha": "79574b9ac8add906e575a860353c68d0abc04f56", "filename": "crates/ra_assists/src/assist_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassist_context.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -5,7 +5,7 @@ use std::mem;\n use algo::find_covering_element;\n use base_db::{FileId, FileRange};\n use hir::Semantics;\n-use ra_ide_db::{\n+use ide_db::{\n     source_change::{SourceChange, SourceFileEdit},\n     RootDatabase,\n };"}, {"sha": "f4f997d8e19c460da8c993a9f4d1d4471bd9919c", "filename": "crates/ra_assists/src/handlers/add_turbo_fish.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -1,4 +1,4 @@\n-use ra_ide_db::defs::{classify_name_ref, Definition, NameRefClass};\n+use ide_db::defs::{classify_name_ref, Definition, NameRefClass};\n use syntax::{ast, AstNode, SyntaxKind, T};\n use test_utils::mark;\n "}, {"sha": "cce789972e54ac27b79dbdc94eb8dbdfec92a61e", "filename": "crates/ra_assists/src/handlers/auto_import.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fauto_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fauto_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fauto_import.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -5,7 +5,7 @@ use hir::{\n     AsAssocItem, AssocItemContainer, ModPath, Module, ModuleDef, PathResolution, Semantics, Trait,\n     Type,\n };\n-use ra_ide_db::{imports_locator, RootDatabase};\n+use ide_db::{imports_locator, RootDatabase};\n use rustc_hash::FxHashSet;\n use syntax::{\n     ast::{self, AstNode},"}, {"sha": "f690ec343bcac33b12ae8e76ca3daa3349c80c3e", "filename": "crates/ra_assists/src/handlers/expand_glob_import.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -1,5 +1,5 @@\n use hir::{AssocItem, MacroDef, ModuleDef, Name, PathResolution, ScopeDef, SemanticsScope};\n-use ra_ide_db::{\n+use ide_db::{\n     defs::{classify_name_ref, Definition, NameRefClass},\n     RootDatabase,\n };"}, {"sha": "4bcdae7ba0e498914acbf0e7dad4ea58549474fd", "filename": "crates/ra_assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -1,6 +1,6 @@\n use base_db::FileId;\n use hir::{EnumVariant, Module, ModuleDef, Name};\n-use ra_ide_db::{defs::Definition, search::Reference, RootDatabase};\n+use ide_db::{defs::Definition, search::Reference, RootDatabase};\n use rustc_hash::FxHashSet;\n use syntax::{\n     algo::find_node_at_offset,"}, {"sha": "3d9bdb2bf79dec3867c93490e82d487d1a3bb0ba", "filename": "crates/ra_assists/src/handlers/fill_match_arms.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -1,8 +1,8 @@\n use std::iter;\n \n use hir::{Adt, HasSource, ModuleDef, Semantics};\n+use ide_db::RootDatabase;\n use itertools::Itertools;\n-use ra_ide_db::RootDatabase;\n use syntax::ast::{self, make, AstNode, MatchArm, NameOwner, Pat};\n use test_utils::mark;\n "}, {"sha": "7f04b95725a8b3622463710d61cd7b50cf9661af", "filename": "crates/ra_assists/src/handlers/generate_from_impl_for_enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -1,4 +1,4 @@\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::ast::{self, AstNode, NameOwner};\n use test_utils::mark;\n "}, {"sha": "2b52b333b885bdd45df3340593f8cd2b7de36747", "filename": "crates/ra_assists/src/handlers/inline_local_variable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -1,4 +1,4 @@\n-use ra_ide_db::defs::Definition;\n+use ide_db::defs::Definition;\n use syntax::{\n     ast::{self, AstNode, AstToken},\n     TextRange,"}, {"sha": "527f457a79384e8d365040a65d64f4fcd4b55f11", "filename": "crates/ra_assists/src/handlers/reorder_fields.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freorder_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freorder_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freorder_fields.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -2,7 +2,7 @@ use itertools::Itertools;\n use rustc_hash::FxHashMap;\n \n use hir::{Adt, ModuleDef, PathResolution, Semantics, Struct};\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{algo, ast, match_ast, AstNode, SyntaxKind, SyntaxKind::*, SyntaxNode};\n \n use crate::{AssistContext, AssistId, AssistKind, Assists};"}, {"sha": "f0cf35caf4619667356635abf69b5fa960bda86f", "filename": "crates/ra_assists/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Flib.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -19,7 +19,7 @@ pub mod ast_transform;\n \n use base_db::FileRange;\n use hir::Semantics;\n-use ra_ide_db::{source_change::SourceChange, RootDatabase};\n+use ide_db::{source_change::SourceChange, RootDatabase};\n use syntax::TextRange;\n \n pub(crate) use crate::assist_context::{AssistContext, Assists};"}, {"sha": "ba1fb543b879df9f47b8ae20eacc0d7702e8b794", "filename": "crates/ra_assists/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Ftests.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -2,7 +2,7 @@ mod generated;\n \n use base_db::{fixture::WithFixture, FileId, FileRange, SourceDatabaseExt};\n use hir::Semantics;\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::TextRange;\n use test_utils::{assert_eq_text, extract_offset, extract_range};\n "}, {"sha": "84ccacafe37f914eb6134573dfd2a6114a2ad2c4", "filename": "crates/ra_assists/src/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_assists%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Futils.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -4,8 +4,8 @@ pub(crate) mod insert_use;\n use std::{iter, ops};\n \n use hir::{Adt, Crate, Enum, ScopeDef, Semantics, Trait, Type};\n+use ide_db::RootDatabase;\n use itertools::Itertools;\n-use ra_ide_db::RootDatabase;\n use rustc_hash::FxHashSet;\n use syntax::{\n     ast::{self, make, NameOwner},"}, {"sha": "e25aad6cfb08f600026877ce9c03ad4e5e33002e", "filename": "crates/ra_ide/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2FCargo.toml?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -24,7 +24,7 @@ stdx = { path = \"../stdx\" }\n syntax = { path = \"../syntax\" }\n text_edit = { path = \"../text_edit\" }\n base_db = { path = \"../base_db\" }\n-ra_ide_db = { path = \"../ra_ide_db\" }\n+ide_db = { path = \"../ide_db\" }\n cfg = { path = \"../cfg\" }\n profile = { path = \"../profile\" }\n test_utils = { path = \"../test_utils\" }"}, {"sha": "58e26b94ca7c4b45afb3dd24de3f367db8cacd34", "filename": "crates/ra_ide/src/call_hierarchy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fcall_hierarchy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fcall_hierarchy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcall_hierarchy.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -3,7 +3,7 @@\n use indexmap::IndexMap;\n \n use hir::Semantics;\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{ast, match_ast, AstNode, TextRange};\n \n use crate::{"}, {"sha": "86abd2d8cec2beeaeac323cf8bee36b9d993c892", "filename": "crates/ra_ide/src/call_info.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcall_info.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -1,7 +1,7 @@\n //! FIXME: write short doc here\n use either::Either;\n use hir::{Docs, HirDisplay, Semantics, Type};\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use stdx::format_to;\n use syntax::{\n     ast::{self, ArgListOwner},"}, {"sha": "7fb4d687e1c16b35cfd0ff6ff4fa311719a265ea", "filename": "crates/ra_ide/src/completion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -19,7 +19,7 @@ mod complete_postfix;\n mod complete_macro_in_item_position;\n mod complete_trait_impl;\n \n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n \n use crate::{\n     completion::{"}, {"sha": "047ecd9d771738e2c036d776aeb366f45863eef2", "filename": "crates/ra_ide/src/completion/completion_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -2,7 +2,7 @@\n \n use base_db::SourceDatabase;\n use hir::{Semantics, SemanticsScope, Type};\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{\n     algo::{find_covering_element, find_node_at_offset},\n     ast, match_ast, AstNode, NodeOrToken,"}, {"sha": "a3ec98178a10a6623f2a4fdbcbdcc00564157985", "filename": "crates/ra_ide/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -8,8 +8,8 @@ use std::cell::RefCell;\n \n use base_db::SourceDatabase;\n use hir::{diagnostics::DiagnosticSinkBuilder, Semantics};\n+use ide_db::RootDatabase;\n use itertools::Itertools;\n-use ra_ide_db::RootDatabase;\n use syntax::{\n     ast::{self, AstNode},\n     SyntaxNode, TextRange, T,"}, {"sha": "85b46c9958a17eaa86f1dd27d8a5df4dfc017a83", "filename": "crates/ra_ide/src/diagnostics/diagnostics_with_fix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fdiagnostics%2Fdiagnostics_with_fix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fdiagnostics%2Fdiagnostics_with_fix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics%2Fdiagnostics_with_fix.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -8,7 +8,7 @@ use hir::{\n     diagnostics::{Diagnostic, MissingFields, MissingOkInTailExpr, NoSuchField, UnresolvedModule},\n     HasSource, HirDisplay, Semantics, VariantDef,\n };\n-use ra_ide_db::{\n+use ide_db::{\n     source_change::{FileSystemEdit, SourceFileEdit},\n     RootDatabase,\n };"}, {"sha": "e77106177267785d7d26cd9b2bf06b028daf876a", "filename": "crates/ra_ide/src/display/navigation_target.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -3,7 +3,7 @@\n use base_db::{FileId, SourceDatabase};\n use either::Either;\n use hir::{original_range, AssocItem, FieldSource, HasSource, InFile, ModuleSource};\n-use ra_ide_db::{defs::Definition, RootDatabase};\n+use ide_db::{defs::Definition, RootDatabase};\n use syntax::{\n     ast::{self, DocCommentsOwner, NameOwner},\n     match_ast, AstNode, SmolStr,"}, {"sha": "31455709d7d8ad5bbccde3ddfe970e5d9431caa4", "filename": "crates/ra_ide/src/expand_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fexpand_macro.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -1,5 +1,5 @@\n use hir::Semantics;\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{\n     algo::{find_node_at_offset, SyntaxRewriter},\n     ast, AstNode, NodeOrToken, SyntaxKind,"}, {"sha": "34563a0267f6acd64edce4b35aa6d4315b75e9e8", "filename": "crates/ra_ide/src/extend_selection.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -1,7 +1,7 @@\n use std::iter::successors;\n \n use hir::Semantics;\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{\n     algo::{self, find_covering_element, skip_trivia_token},\n     ast::{self, AstNode, AstToken},"}, {"sha": "15e9b7fad825e9298ad80dca3a95a5c483fed6d5", "filename": "crates/ra_ide/src/goto_definition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -1,5 +1,5 @@\n use hir::Semantics;\n-use ra_ide_db::{\n+use ide_db::{\n     defs::{classify_name, classify_name_ref},\n     symbol_index, RootDatabase,\n };"}, {"sha": "f503f4ec5fe4b0c14689796bb3a818bbcf5bac99", "filename": "crates/ra_ide/src/goto_implementation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fgoto_implementation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fgoto_implementation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_implementation.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -1,5 +1,5 @@\n use hir::{Crate, ImplDef, Semantics};\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{algo::find_node_at_offset, ast, AstNode};\n \n use crate::{display::ToNav, FilePosition, NavigationTarget, RangeInfo};"}, {"sha": "4a151b1506401992d2fb1aa3f6d2a656d7b3cf88", "filename": "crates/ra_ide/src/goto_type_definition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -1,4 +1,4 @@\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{ast, match_ast, AstNode, SyntaxKind::*, SyntaxToken, TokenAtOffset, T};\n \n use crate::{display::ToNav, FilePosition, NavigationTarget, RangeInfo};"}, {"sha": "331aa4db0c736bbceec74d136710be40795d4612", "filename": "crates/ra_ide/src/hover.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fhover.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -3,11 +3,11 @@ use hir::{\n     Adt, AsAssocItem, AssocItemContainer, Documentation, FieldSource, HasSource, HirDisplay,\n     Module, ModuleDef, ModuleSource, Semantics,\n };\n-use itertools::Itertools;\n-use ra_ide_db::{\n+use ide_db::{\n     defs::{classify_name, classify_name_ref, Definition},\n     RootDatabase,\n };\n+use itertools::Itertools;\n use stdx::format_to;\n use syntax::{ast, match_ast, AstNode, SyntaxKind::*, SyntaxToken, TokenAtOffset, T};\n use test_utils::mark;"}, {"sha": "002adf9159f89bd8ef9de0269d56bd215d7c628e", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -1,5 +1,5 @@\n use hir::{Adt, Callable, HirDisplay, Semantics, Type};\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use stdx::to_lower_snake_case;\n use syntax::{\n     ast::{self, ArgListOwner, AstNode},"}, {"sha": "66a234fff78d044e417369c1fbca8fe726e78a19", "filename": "crates/ra_ide/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Flib.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -52,7 +52,7 @@ use base_db::{\n     CheckCanceled, Env, FileLoader, FileSet, SourceDatabase, VfsPath,\n };\n use cfg::CfgOptions;\n-use ra_ide_db::{\n+use ide_db::{\n     symbol_index::{self, FileSymbol},\n     LineIndexDatabase,\n };\n@@ -86,15 +86,15 @@ pub use base_db::{\n     SourceRootId,\n };\n pub use hir::{Documentation, Semantics};\n-pub use ra_assists::{Assist, AssistConfig, AssistId, AssistKind, ResolvedAssist};\n-pub use ra_ide_db::{\n+pub use ide_db::{\n     change::AnalysisChange,\n     line_index::{LineCol, LineIndex},\n     search::SearchScope,\n     source_change::{FileSystemEdit, SourceChange, SourceFileEdit},\n     symbol_index::Query,\n     RootDatabase,\n };\n+pub use ra_assists::{Assist, AssistConfig, AssistId, AssistKind, ResolvedAssist};\n pub use ra_ssr::SsrError;\n pub use text_edit::{Indel, TextEdit};\n "}, {"sha": "59ed2967cf2ac4c049e70f1e7b6768d457db1216", "filename": "crates/ra_ide/src/parent_module.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fparent_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fparent_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fparent_module.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -1,6 +1,6 @@\n use base_db::{CrateId, FileId, FilePosition};\n use hir::Semantics;\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{\n     algo::find_node_at_offset,\n     ast::{self, AstNode},"}, {"sha": "0a76ec6b4306fa9d8ef7fb06d4738400be77a8ec", "filename": "crates/ra_ide/src/references.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -12,7 +12,7 @@\n mod rename;\n \n use hir::Semantics;\n-use ra_ide_db::{\n+use ide_db::{\n     defs::{classify_name, classify_name_ref, Definition},\n     search::SearchScope,\n     RootDatabase,\n@@ -27,7 +27,7 @@ use crate::{display::TryToNav, FilePosition, FileRange, NavigationTarget, RangeI\n \n pub(crate) use self::rename::rename;\n \n-pub use ra_ide_db::search::{Reference, ReferenceAccess, ReferenceKind};\n+pub use ide_db::search::{Reference, ReferenceAccess, ReferenceKind};\n \n #[derive(Debug, Clone)]\n pub struct ReferenceSearchResult {"}, {"sha": "d73dc9cd00b0ae2b56834d071054d35729603005", "filename": "crates/ra_ide/src/references/rename.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -2,7 +2,7 @@\n \n use base_db::SourceDatabaseExt;\n use hir::{Module, ModuleDef, ModuleSource, Semantics};\n-use ra_ide_db::{\n+use ide_db::{\n     defs::{classify_name, classify_name_ref, Definition, NameClass, NameRefClass},\n     RootDatabase,\n };"}, {"sha": "c3e07c8dec731f8b2ca7448a4f345bd58f636b6a", "filename": "crates/ra_ide/src/runnables.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Frunnables.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -2,8 +2,8 @@ use std::fmt;\n \n use cfg::CfgExpr;\n use hir::{AsAssocItem, Attrs, HirFileId, InFile, Semantics};\n+use ide_db::RootDatabase;\n use itertools::Itertools;\n-use ra_ide_db::RootDatabase;\n use syntax::{\n     ast::{self, AstNode, AttrsOwner, DocCommentsOwner, ModuleItemOwner, NameOwner},\n     match_ast, SyntaxNode,"}, {"sha": "a8a7041923b6d8d4189c53d2e9df177948ac56ee", "filename": "crates/ra_ide/src/ssr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fssr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fssr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fssr.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -1,5 +1,5 @@\n use base_db::{FilePosition, FileRange};\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n \n use crate::SourceFileEdit;\n use ra_ssr::{MatchFinder, SsrError, SsrRule};"}, {"sha": "c2370818180798cc28513e643a1fa2b233055121", "filename": "crates/ra_ide/src/status.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fstatus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fstatus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fstatus.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -5,11 +5,11 @@ use base_db::{\n     FileTextQuery, SourceRootId,\n };\n use hir::MacroFile;\n-use profile::{memory_usage, Bytes};\n-use ra_ide_db::{\n+use ide_db::{\n     symbol_index::{LibrarySymbolsQuery, SymbolIndex},\n     RootDatabase,\n };\n+use profile::{memory_usage, Bytes};\n use rustc_hash::FxHashMap;\n use syntax::{ast, Parse, SyntaxNode};\n "}, {"sha": "5d7c7e8d02a20586675ed2f1478a336a38e7298c", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -5,7 +5,7 @@ mod injection;\n mod tests;\n \n use hir::{Name, Semantics, VariantDef};\n-use ra_ide_db::{\n+use ide_db::{\n     defs::{classify_name, classify_name_ref, Definition, NameClass, NameRefClass},\n     RootDatabase,\n };"}, {"sha": "f8004495960c83e3a47dda5fac2bf41642543b3b", "filename": "crates/ra_ide/src/syntax_tree.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -1,5 +1,5 @@\n use base_db::{FileId, SourceDatabase};\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{\n     algo, AstNode, NodeOrToken, SourceFile,\n     SyntaxKind::{RAW_STRING, STRING},"}, {"sha": "899ce5f26527058c5e97473c7dfccd63f7fc2467", "filename": "crates/ra_ide/src/typing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftyping.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -16,7 +16,7 @@\n mod on_enter;\n \n use base_db::{FilePosition, SourceDatabase};\n-use ra_ide_db::{source_change::SourceFileEdit, RootDatabase};\n+use ide_db::{source_change::SourceFileEdit, RootDatabase};\n use syntax::{\n     algo::find_node_at_offset,\n     ast::{self, edit::IndentLevel, AstToken},"}, {"sha": "f7d46146c50923b044e8f797afb00c3c9108c1d3", "filename": "crates/ra_ide/src/typing/on_enter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -2,7 +2,7 @@\n //! comments, but should handle indent some time in the future as well.\n \n use base_db::{FilePosition, SourceDatabase};\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{\n     ast::{self, AstToken},\n     AstNode, SmolStr, SourceFile,"}, {"sha": "4d22a8a982c6a559b9ce0b99d6369f87d2bd40ac", "filename": "crates/ra_ssr/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ssr%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ssr%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2FCargo.toml?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -14,7 +14,7 @@ doctest = false\n text_edit = { path = \"../text_edit\" }\n syntax = { path = \"../syntax\" }\n base_db = { path = \"../base_db\" }\n-ra_ide_db = { path = \"../ra_ide_db\" }\n+ide_db = { path = \"../ide_db\" }\n hir = { path = \"../hir\" }\n rustc-hash = \"1.1.0\"\n test_utils = { path = \"../test_utils\" }"}, {"sha": "b4e35107ed7cbf634a14314d0907c450f67817c2", "filename": "crates/ra_ssr/src/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ssr%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ssr%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Flib.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -20,7 +20,7 @@ pub use crate::matching::Match;\n use crate::matching::MatchFailureReason;\n use base_db::{FileId, FilePosition, FileRange};\n use hir::Semantics;\n-use ra_ide_db::source_change::SourceFileEdit;\n+use ide_db::source_change::SourceFileEdit;\n use resolving::ResolvedRule;\n use rustc_hash::FxHashMap;\n use syntax::{ast, AstNode, SyntaxNode, TextRange};\n@@ -49,7 +49,7 @@ pub struct SsrMatches {\n /// Searches a crate for pattern matches and possibly replaces them with something else.\n pub struct MatchFinder<'db> {\n     /// Our source of information about the user's code.\n-    sema: Semantics<'db, ra_ide_db::RootDatabase>,\n+    sema: Semantics<'db, ide_db::RootDatabase>,\n     rules: Vec<ResolvedRule>,\n     resolution_scope: resolving::ResolutionScope<'db>,\n     restrict_ranges: Vec<FileRange>,\n@@ -59,7 +59,7 @@ impl<'db> MatchFinder<'db> {\n     /// Constructs a new instance where names will be looked up as if they appeared at\n     /// `lookup_context`.\n     pub fn in_context(\n-        db: &'db ra_ide_db::RootDatabase,\n+        db: &'db ide_db::RootDatabase,\n         lookup_context: FilePosition,\n         mut restrict_ranges: Vec<FileRange>,\n     ) -> MatchFinder<'db> {\n@@ -70,9 +70,9 @@ impl<'db> MatchFinder<'db> {\n     }\n \n     /// Constructs an instance using the start of the first file in `db` as the lookup context.\n-    pub fn at_first_file(db: &'db ra_ide_db::RootDatabase) -> Result<MatchFinder<'db>, SsrError> {\n+    pub fn at_first_file(db: &'db ide_db::RootDatabase) -> Result<MatchFinder<'db>, SsrError> {\n         use base_db::SourceDatabaseExt;\n-        use ra_ide_db::symbol_index::SymbolsDatabase;\n+        use ide_db::symbol_index::SymbolsDatabase;\n         if let Some(first_file_id) = db\n             .local_roots()\n             .iter()"}, {"sha": "ffc7202ae560fb09061259e57c53291a568ca39b", "filename": "crates/ra_ssr/src/matching.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ssr%2Fsrc%2Fmatching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ssr%2Fsrc%2Fmatching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Fmatching.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -92,7 +92,7 @@ pub(crate) fn get_match(\n     rule: &ResolvedRule,\n     code: &SyntaxNode,\n     restrict_range: &Option<FileRange>,\n-    sema: &Semantics<ra_ide_db::RootDatabase>,\n+    sema: &Semantics<ide_db::RootDatabase>,\n ) -> Result<Match, MatchFailed> {\n     record_match_fails_reasons_scope(debug_active, || {\n         Matcher::try_match(rule, code, restrict_range, sema)\n@@ -101,7 +101,7 @@ pub(crate) fn get_match(\n \n /// Checks if our search pattern matches a particular node of the AST.\n struct Matcher<'db, 'sema> {\n-    sema: &'sema Semantics<'db, ra_ide_db::RootDatabase>,\n+    sema: &'sema Semantics<'db, ide_db::RootDatabase>,\n     /// If any placeholders come from anywhere outside of this range, then the match will be\n     /// rejected.\n     restrict_range: Option<FileRange>,\n@@ -123,7 +123,7 @@ impl<'db, 'sema> Matcher<'db, 'sema> {\n         rule: &ResolvedRule,\n         code: &SyntaxNode,\n         restrict_range: &Option<FileRange>,\n-        sema: &'sema Semantics<'db, ra_ide_db::RootDatabase>,\n+        sema: &'sema Semantics<'db, ide_db::RootDatabase>,\n     ) -> Result<Match, MatchFailed> {\n         let match_state = Matcher { sema, restrict_range: restrict_range.clone(), rule };\n         // First pass at matching, where we check that node types and idents match.\n@@ -606,7 +606,7 @@ impl Match {\n     fn render_template_paths(\n         &mut self,\n         template: &ResolvedPattern,\n-        sema: &Semantics<ra_ide_db::RootDatabase>,\n+        sema: &Semantics<ide_db::RootDatabase>,\n     ) -> Result<(), MatchFailed> {\n         let module = sema\n             .scope(&self.matched_node)"}, {"sha": "6ac355dfc22b47db29349f465f97391daaf60f35", "filename": "crates/ra_ssr/src/nester.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ssr%2Fsrc%2Fnester.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ssr%2Fsrc%2Fnester.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Fnester.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -13,7 +13,7 @@ use syntax::SyntaxNode;\n \n pub(crate) fn nest_and_remove_collisions(\n     mut matches: Vec<Match>,\n-    sema: &hir::Semantics<ra_ide_db::RootDatabase>,\n+    sema: &hir::Semantics<ide_db::RootDatabase>,\n ) -> SsrMatches {\n     // We sort the matches by depth then by rule index. Sorting by depth means that by the time we\n     // see a match, any parent matches or conflicting matches will have already been seen. Sorting\n@@ -36,7 +36,7 @@ impl MatchCollector {\n     /// Attempts to add `m` to matches. If it conflicts with an existing match, it is discarded. If\n     /// it is entirely within the a placeholder of an existing match, then it is added as a child\n     /// match of the existing match.\n-    fn add_match(&mut self, m: Match, sema: &hir::Semantics<ra_ide_db::RootDatabase>) {\n+    fn add_match(&mut self, m: Match, sema: &hir::Semantics<ide_db::RootDatabase>) {\n         let matched_node = m.matched_node.clone();\n         if let Some(existing) = self.matches_by_node.get_mut(&matched_node) {\n             try_add_sub_match(m, existing, sema);\n@@ -53,11 +53,7 @@ impl MatchCollector {\n }\n \n /// Attempts to add `m` as a sub-match of `existing`.\n-fn try_add_sub_match(\n-    m: Match,\n-    existing: &mut Match,\n-    sema: &hir::Semantics<ra_ide_db::RootDatabase>,\n-) {\n+fn try_add_sub_match(m: Match, existing: &mut Match, sema: &hir::Semantics<ide_db::RootDatabase>) {\n     for p in existing.placeholder_values.values_mut() {\n         // Note, no need to check if p.range.file is equal to m.range.file, since we\n         // already know we're within `existing`."}, {"sha": "020fd799413822d22261fb20d2605d4019e5e32d", "filename": "crates/ra_ssr/src/resolving.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ssr%2Fsrc%2Fresolving.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ssr%2Fsrc%2Fresolving.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Fresolving.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -187,7 +187,7 @@ impl Resolver<'_, '_> {\n \n impl<'db> ResolutionScope<'db> {\n     pub(crate) fn new(\n-        sema: &hir::Semantics<'db, ra_ide_db::RootDatabase>,\n+        sema: &hir::Semantics<'db, ide_db::RootDatabase>,\n         resolve_context: FilePosition,\n     ) -> ResolutionScope<'db> {\n         use syntax::ast::AstNode;"}, {"sha": "8509cfa4dea0d0ec07e48ad1f845ba0b27cf9138", "filename": "crates/ra_ssr/src/search.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ssr%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ssr%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Fsearch.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -6,7 +6,7 @@ use crate::{\n     Match, MatchFinder,\n };\n use base_db::{FileId, FileRange};\n-use ra_ide_db::{\n+use ide_db::{\n     defs::Definition,\n     search::{Reference, SearchScope},\n };\n@@ -146,7 +146,7 @@ impl<'db> MatchFinder<'db> {\n         if self.restrict_ranges.is_empty() {\n             // Unrestricted search.\n             use base_db::SourceDatabaseExt;\n-            use ra_ide_db::symbol_index::SymbolsDatabase;\n+            use ide_db::symbol_index::SymbolsDatabase;\n             for &root in self.sema.db.local_roots().iter() {\n                 let sr = self.sema.db.source_root(root);\n                 for file_id in sr.iter() {"}, {"sha": "0d0a0009064213db0c4b5e48d1ee8b783bc14ac3", "filename": "crates/ra_ssr/src/tests.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ssr%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Fra_ssr%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Ftests.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -61,13 +61,13 @@ fn parser_undefined_placeholder_in_replacement() {\n \n /// `code` may optionally contain a cursor marker `<|>`. If it doesn't, then the position will be\n /// the start of the file. If there's a second cursor marker, then we'll return a single range.\n-pub(crate) fn single_file(code: &str) -> (ra_ide_db::RootDatabase, FilePosition, Vec<FileRange>) {\n+pub(crate) fn single_file(code: &str) -> (ide_db::RootDatabase, FilePosition, Vec<FileRange>) {\n     use base_db::fixture::WithFixture;\n-    use ra_ide_db::symbol_index::SymbolsDatabase;\n+    use ide_db::symbol_index::SymbolsDatabase;\n     let (mut db, file_id, range_or_offset) = if code.contains(test_utils::CURSOR_MARKER) {\n-        ra_ide_db::RootDatabase::with_range_or_offset(code)\n+        ide_db::RootDatabase::with_range_or_offset(code)\n     } else {\n-        let (db, file_id) = ra_ide_db::RootDatabase::with_single_file(code);\n+        let (db, file_id) = ide_db::RootDatabase::with_single_file(code);\n         (db, file_id, RangeOrOffset::Offset(0.into()))\n     };\n     let selections;"}, {"sha": "da8c09c09a74b5ffbe8c9df5a165637b2ae98824", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -47,7 +47,7 @@ toolchain = { path = \"../toolchain\" }\n \n # This should only be used in CLI\n base_db = { path = \"../base_db\" }\n-ra_ide_db = { path = \"../ra_ide_db\" }\n+ide_db = { path = \"../ide_db\" }\n ra_ssr = { path = \"../ra_ssr\" }\n hir = { path = \"../hir\" }\n hir_def = { path = \"../hir_def\" }"}, {"sha": "1357a93e1693413d4d69ab931a84c7e5507993a5", "filename": "crates/rust-analyzer/src/cli/ssr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fssr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fssr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fssr.rs?ref=bb5c189b7dae1ea63ccd5d7a0c2e097d7c676f77", "patch": "@@ -27,7 +27,7 @@ pub fn apply_ssr_rules(rules: Vec<SsrRule>) -> Result<()> {\n /// for much else.\n pub fn search_for_patterns(patterns: Vec<SsrPattern>, debug_snippet: Option<String>) -> Result<()> {\n     use base_db::SourceDatabaseExt;\n-    use ra_ide_db::symbol_index::SymbolsDatabase;\n+    use ide_db::symbol_index::SymbolsDatabase;\n     let (host, _vfs) = load_cargo(&std::env::current_dir()?, true, true)?;\n     let db = host.raw_database();\n     let mut match_finder = MatchFinder::at_first_file(db)?;"}]}