{"sha": "4d045406d1ee4c011e476fbeae81976c8012e886", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkMDQ1NDA2ZDFlZTRjMDExZTQ3NmZiZWFlODE5NzZjODAxMmU4ODY=", "commit": {"author": {"name": "Augie Fackler", "email": "augie@google.com", "date": "2021-09-08T14:47:41Z"}, "committer": {"name": "Augie Fackler", "email": "augie@google.com", "date": "2021-09-08T14:47:41Z"}, "message": "RustWrapper: remove some uses of AttrBuilder\n\nTurns out we can also use Attribute::get*() methods here, and avoid the\nAttrBuilder and an extra helper method here.", "tree": {"sha": "6fc55ce58639ab4402a5cd00ffa3b2df532547ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fc55ce58639ab4402a5cd00ffa3b2df532547ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d045406d1ee4c011e476fbeae81976c8012e886", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d045406d1ee4c011e476fbeae81976c8012e886", "html_url": "https://github.com/rust-lang/rust/commit/4d045406d1ee4c011e476fbeae81976c8012e886", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d045406d1ee4c011e476fbeae81976c8012e886/comments", "author": {"login": "durin42", "id": 20269, "node_id": "MDQ6VXNlcjIwMjY5", "avatar_url": "https://avatars.githubusercontent.com/u/20269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durin42", "html_url": "https://github.com/durin42", "followers_url": "https://api.github.com/users/durin42/followers", "following_url": "https://api.github.com/users/durin42/following{/other_user}", "gists_url": "https://api.github.com/users/durin42/gists{/gist_id}", "starred_url": "https://api.github.com/users/durin42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durin42/subscriptions", "organizations_url": "https://api.github.com/users/durin42/orgs", "repos_url": "https://api.github.com/users/durin42/repos", "events_url": "https://api.github.com/users/durin42/events{/privacy}", "received_events_url": "https://api.github.com/users/durin42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durin42", "id": 20269, "node_id": "MDQ6VXNlcjIwMjY5", "avatar_url": "https://avatars.githubusercontent.com/u/20269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durin42", "html_url": "https://github.com/durin42", "followers_url": "https://api.github.com/users/durin42/followers", "following_url": "https://api.github.com/users/durin42/following{/other_user}", "gists_url": "https://api.github.com/users/durin42/gists{/gist_id}", "starred_url": "https://api.github.com/users/durin42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durin42/subscriptions", "organizations_url": "https://api.github.com/users/durin42/orgs", "repos_url": "https://api.github.com/users/durin42/repos", "events_url": "https://api.github.com/users/durin42/events{/privacy}", "received_events_url": "https://api.github.com/users/durin42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "484b79b950b1077d1bbfe6c4edf3bfe070d820b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/484b79b950b1077d1bbfe6c4edf3bfe070d820b4", "html_url": "https://github.com/rust-lang/rust/commit/484b79b950b1077d1bbfe6c4edf3bfe070d820b4"}], "stats": {"total": 25, "additions": 6, "deletions": 19}, "files": [{"sha": "9850f395a0f650a05d9bbb3e06ddb24b248e17d1", "filename": "compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp", "status": "modified", "additions": 6, "deletions": 19, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/4d045406d1ee4c011e476fbeae81976c8012e886/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/4d045406d1ee4c011e476fbeae81976c8012e886/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp?ref=4d045406d1ee4c011e476fbeae81976c8012e886", "patch": "@@ -225,41 +225,28 @@ extern \"C\" void LLVMRustAddCallSiteAttrString(LLVMValueRef Instr, unsigned Index\n   AddAttribute(Call, Index, Attr);\n }\n \n-static inline void AddCallAttributes(CallBase *Call, unsigned Index, const AttrBuilder& B) {\n-  AttributeList Attrs = Call->getAttributes();\n-#if LLVM_VERSION_LT(14, 0)\n-  Attrs = Attrs.addAttributes(Call->getContext(), Index, B);\n-#else\n-  Attrs = Attrs.addAttributesAtIndex(Call->getContext(), Index, B);\n-#endif\n-  Call->setAttributes(Attrs);\n-}\n-\n extern \"C\" void LLVMRustAddAlignmentCallSiteAttr(LLVMValueRef Instr,\n                                                  unsigned Index,\n                                                  uint32_t Bytes) {\n   CallBase *Call = unwrap<CallBase>(Instr);\n-  AttrBuilder B;\n-  B.addAlignmentAttr(Bytes);\n-  AddCallAttributes(Call, Index, B);\n+  Attribute Attr = Attribute::getWithAlignment(Call->getContext(), Align(Bytes));\n+  AddAttribute(Call, Index, Attr);\n }\n \n extern \"C\" void LLVMRustAddDereferenceableCallSiteAttr(LLVMValueRef Instr,\n                                                        unsigned Index,\n                                                        uint64_t Bytes) {\n   CallBase *Call = unwrap<CallBase>(Instr);\n-  AttrBuilder B;\n-  B.addDereferenceableAttr(Bytes);\n-  AddCallAttributes(Call, Index, B);\n+  Attribute Attr = Attribute::getWithDereferenceableBytes(Call->getContext(), Bytes);\n+  AddAttribute(Call, Index, Attr);\n }\n \n extern \"C\" void LLVMRustAddDereferenceableOrNullCallSiteAttr(LLVMValueRef Instr,\n                                                              unsigned Index,\n                                                              uint64_t Bytes) {\n   CallBase *Call = unwrap<CallBase>(Instr);\n-  AttrBuilder B;\n-  B.addDereferenceableOrNullAttr(Bytes);\n-  AddCallAttributes(Call, Index, B);\n+  Attribute Attr = Attribute::getWithDereferenceableOrNullBytes(Call->getContext(), Bytes);\n+  AddAttribute(Call, Index, Attr);\n }\n \n extern \"C\" void LLVMRustAddByValCallSiteAttr(LLVMValueRef Instr, unsigned Index,"}]}