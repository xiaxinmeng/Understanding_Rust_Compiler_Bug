{"sha": "0e1afc4501eae89862a50ab24961a8d12ece0a37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMWFmYzQ1MDFlYWU4OTg2MmE1MGFiMjQ5NjFhOGQxMmVjZTBhMzc=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2021-05-16T22:29:54Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2021-05-21T17:51:53Z"}, "message": "Check for use of mutable/extern statics in THIR unsafeck", "tree": {"sha": "280a9ef31e7231cdbbf38a25a073b88ea2dc7615", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/280a9ef31e7231cdbbf38a25a073b88ea2dc7615"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e1afc4501eae89862a50ab24961a8d12ece0a37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e1afc4501eae89862a50ab24961a8d12ece0a37", "html_url": "https://github.com/rust-lang/rust/commit/0e1afc4501eae89862a50ab24961a8d12ece0a37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e1afc4501eae89862a50ab24961a8d12ece0a37/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b327aaa08aea817e51640585b4d63cf4017965f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b327aaa08aea817e51640585b4d63cf4017965f", "html_url": "https://github.com/rust-lang/rust/commit/6b327aaa08aea817e51640585b4d63cf4017965f"}], "stats": {"total": 266, "additions": 238, "deletions": 28}, "files": [{"sha": "aa8193dab5d9cef13624bc35c857f018e53029af", "filename": "compiler/rustc_mir_build/src/check_unsafety.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -169,14 +169,20 @@ impl<'a, 'tcx> Visitor<'a, 'tcx> for UnsafetyVisitor<'a, 'tcx> {\n                     }\n                 }\n             }\n-            ExprKind::InlineAsm { .. } | ExprKind::LlvmInlineAsm { .. } => {\n-                self.requires_unsafe(expr.span, UseOfInlineAssembly);\n-            }\n             ExprKind::Deref { arg } => {\n-                if self.thir[arg].ty.is_unsafe_ptr() {\n+                if let ExprKind::StaticRef { def_id, .. } = self.thir[arg].kind {\n+                    if self.tcx.is_mutable_static(def_id) {\n+                        self.requires_unsafe(expr.span, UseOfMutableStatic);\n+                    } else if self.tcx.is_foreign_item(def_id) {\n+                        self.requires_unsafe(expr.span, UseOfExternStatic);\n+                    }\n+                } else if self.thir[arg].ty.is_unsafe_ptr() {\n                     self.requires_unsafe(expr.span, DerefOfRawPointer);\n                 }\n             }\n+            ExprKind::InlineAsm { .. } | ExprKind::LlvmInlineAsm { .. } => {\n+                self.requires_unsafe(expr.span, UseOfInlineAssembly);\n+            }\n             ExprKind::Adt {\n                 adt_def,\n                 variant_index: _,\n@@ -242,9 +248,7 @@ enum UnsafeOpKind {\n     UseOfInlineAssembly,\n     InitializingTypeWith,\n     CastOfPointerToInt,\n-    #[allow(dead_code)] // FIXME\n     UseOfMutableStatic,\n-    #[allow(dead_code)] // FIXME\n     UseOfExternStatic,\n     DerefOfRawPointer,\n     #[allow(dead_code)] // FIXME"}, {"sha": "c42498390c78d78dec74d915798c8f9556543d24", "filename": "src/test/ui/intrinsics/issue-28575.mir.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fintrinsics%2Fissue-28575.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fintrinsics%2Fissue-28575.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fintrinsics%2Fissue-28575.mir.stderr?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -1,5 +1,5 @@\n error[E0133]: use of extern static is unsafe and requires unsafe function or block\n-  --> $DIR/issue-28575.rs:8:5\n+  --> $DIR/issue-28575.rs:11:5\n    |\n LL |     FOO()\n    |     ^^^ use of extern static", "previous_filename": "src/test/ui/intrinsics/issue-28575.stderr"}, {"sha": "410f664f89d44e97dd1927c4011948eed391d7b7", "filename": "src/test/ui/intrinsics/issue-28575.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fintrinsics%2Fissue-28575.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fintrinsics%2Fissue-28575.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fintrinsics%2Fissue-28575.rs?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -1,3 +1,6 @@\n+// revisions: mir thir\n+// [thir]compile-flags: -Z thir-unsafeck\n+\n #![feature(intrinsics)]\n \n extern \"C\" {"}, {"sha": "c42498390c78d78dec74d915798c8f9556543d24", "filename": "src/test/ui/intrinsics/issue-28575.thir.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fintrinsics%2Fissue-28575.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fintrinsics%2Fissue-28575.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fintrinsics%2Fissue-28575.thir.stderr?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -0,0 +1,11 @@\n+error[E0133]: use of extern static is unsafe and requires unsafe function or block\n+  --> $DIR/issue-28575.rs:11:5\n+   |\n+LL |     FOO()\n+   |     ^^^ use of extern static\n+   |\n+   = note: extern statics are not controlled by the Rust type system: invalid data, aliasing violations or data races will cause undefined behavior\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0133`."}, {"sha": "8e7a2514dd6abab91e64ef939c15436badf449bc", "filename": "src/test/ui/issues/issue-14227.mir.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fissues%2Fissue-14227.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fissues%2Fissue-14227.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-14227.mir.stderr?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -1,5 +1,5 @@\n error[E0133]: use of extern static is unsafe and requires unsafe function or block\n-  --> $DIR/issue-14227.rs:4:21\n+  --> $DIR/issue-14227.rs:7:21\n    |\n LL | static CRASH: u32 = symbol;\n    |                     ^^^^^^ use of extern static", "previous_filename": "src/test/ui/issues/issue-14227.stderr"}, {"sha": "5f866ec906144d59cdba44a9c8663abdbad607c1", "filename": "src/test/ui/issues/issue-14227.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fissues%2Fissue-14227.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fissues%2Fissue-14227.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-14227.rs?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -1,3 +1,6 @@\n+// revisions: mir thir\n+// [thir]compile-flags: -Z thir-unsafeck\n+\n extern \"C\" {\n     pub static symbol: u32;\n }"}, {"sha": "8e7a2514dd6abab91e64ef939c15436badf449bc", "filename": "src/test/ui/issues/issue-14227.thir.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fissues%2Fissue-14227.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fissues%2Fissue-14227.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-14227.thir.stderr?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -0,0 +1,11 @@\n+error[E0133]: use of extern static is unsafe and requires unsafe function or block\n+  --> $DIR/issue-14227.rs:7:21\n+   |\n+LL | static CRASH: u32 = symbol;\n+   |                     ^^^^^^ use of extern static\n+   |\n+   = note: extern statics are not controlled by the Rust type system: invalid data, aliasing violations or data races will cause undefined behavior\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0133`."}, {"sha": "d7e8c08bb01b245b95b651bc69f22e087c94e87a", "filename": "src/test/ui/issues/issue-16538.mir.stderr", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fissues%2Fissue-16538.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fissues%2Fissue-16538.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16538.mir.stderr?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -1,11 +1,11 @@\n error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n-  --> $DIR/issue-16538.rs:11:27\n+  --> $DIR/issue-16538.rs:14:27\n    |\n LL | static foo: *const Y::X = Y::foo(Y::x as *const Y::X);\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: `*const usize` cannot be shared between threads safely\n-  --> $DIR/issue-16538.rs:11:1\n+  --> $DIR/issue-16538.rs:14:1\n    |\n LL | static foo: *const Y::X = Y::foo(Y::x as *const Y::X);\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `*const usize` cannot be shared between threads safely\n@@ -14,7 +14,7 @@ LL | static foo: *const Y::X = Y::foo(Y::x as *const Y::X);\n    = note: shared static variables must have a type that implements `Sync`\n \n error[E0133]: use of extern static is unsafe and requires unsafe function or block\n-  --> $DIR/issue-16538.rs:11:34\n+  --> $DIR/issue-16538.rs:14:34\n    |\n LL | static foo: *const Y::X = Y::foo(Y::x as *const Y::X);\n    |                                  ^^^^ use of extern static", "previous_filename": "src/test/ui/issues/issue-16538.stderr"}, {"sha": "1e8ecf015c85a8aff0950b3c99fa60b29db9f3d3", "filename": "src/test/ui/issues/issue-16538.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fissues%2Fissue-16538.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fissues%2Fissue-16538.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16538.rs?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -1,3 +1,6 @@\n+// revisions: mir thir\n+// [thir]compile-flags: -Z thir-unsafeck\n+\n mod Y {\n     pub type X = usize;\n     extern \"C\" {"}, {"sha": "d7e8c08bb01b245b95b651bc69f22e087c94e87a", "filename": "src/test/ui/issues/issue-16538.thir.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fissues%2Fissue-16538.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fissues%2Fissue-16538.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16538.thir.stderr?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -0,0 +1,27 @@\n+error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n+  --> $DIR/issue-16538.rs:14:27\n+   |\n+LL | static foo: *const Y::X = Y::foo(Y::x as *const Y::X);\n+   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0277]: `*const usize` cannot be shared between threads safely\n+  --> $DIR/issue-16538.rs:14:1\n+   |\n+LL | static foo: *const Y::X = Y::foo(Y::x as *const Y::X);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `*const usize` cannot be shared between threads safely\n+   |\n+   = help: the trait `Sync` is not implemented for `*const usize`\n+   = note: shared static variables must have a type that implements `Sync`\n+\n+error[E0133]: use of extern static is unsafe and requires unsafe function or block\n+  --> $DIR/issue-16538.rs:14:34\n+   |\n+LL | static foo: *const Y::X = Y::foo(Y::x as *const Y::X);\n+   |                                  ^^^^ use of extern static\n+   |\n+   = note: extern statics are not controlled by the Rust type system: invalid data, aliasing violations or data races will cause undefined behavior\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors have detailed explanations: E0015, E0133, E0277.\n+For more information about an error, try `rustc --explain E0015`."}, {"sha": "aff8bf7927dd17533cb1bc1f938ff8a65af6951e", "filename": "src/test/ui/issues/issue-28324.mir.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fissues%2Fissue-28324.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fissues%2Fissue-28324.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28324.mir.stderr?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -1,5 +1,5 @@\n error[E0133]: use of extern static is unsafe and requires unsafe function or block\n-  --> $DIR/issue-28324.rs:5:24\n+  --> $DIR/issue-28324.rs:8:24\n    |\n LL | pub static BAZ: u32 = *&error_message_count;\n    |                        ^^^^^^^^^^^^^^^^^^^^ use of extern static", "previous_filename": "src/test/ui/issues/issue-28324.stderr"}, {"sha": "fbe83e325edb47e682d2752299fba255e2d8d256", "filename": "src/test/ui/issues/issue-28324.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fissues%2Fissue-28324.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fissues%2Fissue-28324.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28324.rs?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -1,3 +1,6 @@\n+// revisions: mir thir\n+// [thir]compile-flags: -Z thir-unsafeck\n+\n extern \"C\" {\n     static error_message_count: u32;\n }"}, {"sha": "c696c359830167cc580d55ead195fc8aa1190a0e", "filename": "src/test/ui/issues/issue-28324.thir.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fissues%2Fissue-28324.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fissues%2Fissue-28324.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28324.thir.stderr?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -0,0 +1,11 @@\n+error[E0133]: use of extern static is unsafe and requires unsafe function or block\n+  --> $DIR/issue-28324.rs:8:25\n+   |\n+LL | pub static BAZ: u32 = *&error_message_count;\n+   |                         ^^^^^^^^^^^^^^^^^^^ use of extern static\n+   |\n+   = note: extern statics are not controlled by the Rust type system: invalid data, aliasing violations or data races will cause undefined behavior\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0133`."}, {"sha": "cec5f9d9c9f934c37edf5f660adf261ed6956f74", "filename": "src/test/ui/safe-extern-statics-mut.mir.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fsafe-extern-statics-mut.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fsafe-extern-statics-mut.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsafe-extern-statics-mut.mir.stderr?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -1,29 +1,29 @@\n error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n-  --> $DIR/safe-extern-statics-mut.rs:11:13\n+  --> $DIR/safe-extern-statics-mut.rs:13:13\n    |\n LL |     let b = B;\n    |             ^ use of mutable static\n    |\n    = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n \n error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n-  --> $DIR/safe-extern-statics-mut.rs:12:14\n+  --> $DIR/safe-extern-statics-mut.rs:14:14\n    |\n LL |     let rb = &B;\n    |              ^^ use of mutable static\n    |\n    = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n \n error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n-  --> $DIR/safe-extern-statics-mut.rs:13:14\n+  --> $DIR/safe-extern-statics-mut.rs:15:14\n    |\n LL |     let xb = XB;\n    |              ^^ use of mutable static\n    |\n    = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n \n error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n-  --> $DIR/safe-extern-statics-mut.rs:14:15\n+  --> $DIR/safe-extern-statics-mut.rs:16:15\n    |\n LL |     let xrb = &XB;\n    |               ^^^ use of mutable static", "previous_filename": "src/test/ui/safe-extern-statics-mut.stderr"}, {"sha": "389a4589a713559c7f75831d28504fc5edf2b927", "filename": "src/test/ui/safe-extern-statics-mut.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fsafe-extern-statics-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fsafe-extern-statics-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsafe-extern-statics-mut.rs?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -1,4 +1,6 @@\n // aux-build:extern-statics.rs\n+// revisions: mir thir\n+// [thir]compile-flags: -Z thir-unsafeck\n \n extern crate extern_statics;\n use extern_statics::*;"}, {"sha": "8e6d2805a0ba4a4d6f3de41669612cb2d3983ffe", "filename": "src/test/ui/safe-extern-statics-mut.thir.stderr", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fsafe-extern-statics-mut.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fsafe-extern-statics-mut.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsafe-extern-statics-mut.thir.stderr?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -0,0 +1,35 @@\n+error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n+  --> $DIR/safe-extern-statics-mut.rs:13:13\n+   |\n+LL |     let b = B;\n+   |             ^ use of mutable static\n+   |\n+   = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n+\n+error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n+  --> $DIR/safe-extern-statics-mut.rs:14:15\n+   |\n+LL |     let rb = &B;\n+   |               ^ use of mutable static\n+   |\n+   = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n+\n+error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n+  --> $DIR/safe-extern-statics-mut.rs:15:14\n+   |\n+LL |     let xb = XB;\n+   |              ^^ use of mutable static\n+   |\n+   = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n+\n+error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n+  --> $DIR/safe-extern-statics-mut.rs:16:16\n+   |\n+LL |     let xrb = &XB;\n+   |                ^^ use of mutable static\n+   |\n+   = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0133`."}, {"sha": "102abd0816fec233c8ab08226aa4d218c6aa1164", "filename": "src/test/ui/safe-extern-statics.mir.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fsafe-extern-statics.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fsafe-extern-statics.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsafe-extern-statics.mir.stderr?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -1,29 +1,29 @@\n error[E0133]: use of extern static is unsafe and requires unsafe function or block\n-  --> $DIR/safe-extern-statics.rs:11:13\n+  --> $DIR/safe-extern-statics.rs:13:13\n    |\n LL |     let a = A;\n    |             ^ use of extern static\n    |\n    = note: extern statics are not controlled by the Rust type system: invalid data, aliasing violations or data races will cause undefined behavior\n \n error[E0133]: use of extern static is unsafe and requires unsafe function or block\n-  --> $DIR/safe-extern-statics.rs:12:14\n+  --> $DIR/safe-extern-statics.rs:14:14\n    |\n LL |     let ra = &A;\n    |              ^^ use of extern static\n    |\n    = note: extern statics are not controlled by the Rust type system: invalid data, aliasing violations or data races will cause undefined behavior\n \n error[E0133]: use of extern static is unsafe and requires unsafe function or block\n-  --> $DIR/safe-extern-statics.rs:13:14\n+  --> $DIR/safe-extern-statics.rs:15:14\n    |\n LL |     let xa = XA;\n    |              ^^ use of extern static\n    |\n    = note: extern statics are not controlled by the Rust type system: invalid data, aliasing violations or data races will cause undefined behavior\n \n error[E0133]: use of extern static is unsafe and requires unsafe function or block\n-  --> $DIR/safe-extern-statics.rs:14:15\n+  --> $DIR/safe-extern-statics.rs:16:15\n    |\n LL |     let xra = &XA;\n    |               ^^^ use of extern static", "previous_filename": "src/test/ui/safe-extern-statics.stderr"}, {"sha": "0aa90c442ea75141f6318d310988a5ca5677876e", "filename": "src/test/ui/safe-extern-statics.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fsafe-extern-statics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fsafe-extern-statics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsafe-extern-statics.rs?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -1,4 +1,6 @@\n // aux-build:extern-statics.rs\n+// revisions: mir thir\n+// [thir]compile-flags: -Z thir-unsafeck\n \n extern crate extern_statics;\n use extern_statics::*;"}, {"sha": "7fd2182c4c69387d2deab718b9dc1dbcd165afb7", "filename": "src/test/ui/safe-extern-statics.thir.stderr", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fsafe-extern-statics.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fsafe-extern-statics.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsafe-extern-statics.thir.stderr?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -0,0 +1,35 @@\n+error[E0133]: use of extern static is unsafe and requires unsafe function or block\n+  --> $DIR/safe-extern-statics.rs:13:13\n+   |\n+LL |     let a = A;\n+   |             ^ use of extern static\n+   |\n+   = note: extern statics are not controlled by the Rust type system: invalid data, aliasing violations or data races will cause undefined behavior\n+\n+error[E0133]: use of extern static is unsafe and requires unsafe function or block\n+  --> $DIR/safe-extern-statics.rs:14:15\n+   |\n+LL |     let ra = &A;\n+   |               ^ use of extern static\n+   |\n+   = note: extern statics are not controlled by the Rust type system: invalid data, aliasing violations or data races will cause undefined behavior\n+\n+error[E0133]: use of extern static is unsafe and requires unsafe function or block\n+  --> $DIR/safe-extern-statics.rs:15:14\n+   |\n+LL |     let xa = XA;\n+   |              ^^ use of extern static\n+   |\n+   = note: extern statics are not controlled by the Rust type system: invalid data, aliasing violations or data races will cause undefined behavior\n+\n+error[E0133]: use of extern static is unsafe and requires unsafe function or block\n+  --> $DIR/safe-extern-statics.rs:16:16\n+   |\n+LL |     let xra = &XA;\n+   |                ^^ use of extern static\n+   |\n+   = note: extern statics are not controlled by the Rust type system: invalid data, aliasing violations or data races will cause undefined behavior\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0133`."}, {"sha": "a4659bc8712faf00f48778dee2d662e6648ff3b2", "filename": "src/test/ui/static/static-mut-foreign-requires-unsafe.mir.stderr", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-foreign-requires-unsafe.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-foreign-requires-unsafe.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-foreign-requires-unsafe.mir.stderr?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -1,21 +1,21 @@\n error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n-  --> $DIR/static-mut-foreign-requires-unsafe.rs:6:5\n+  --> $DIR/static-mut-foreign-requires-unsafe.rs:9:5\n    |\n LL |     a += 3;\n    |     ^^^^^^ use of mutable static\n    |\n    = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n \n error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n-  --> $DIR/static-mut-foreign-requires-unsafe.rs:7:5\n+  --> $DIR/static-mut-foreign-requires-unsafe.rs:10:5\n    |\n LL |     a = 4;\n    |     ^^^^^ use of mutable static\n    |\n    = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n \n error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n-  --> $DIR/static-mut-foreign-requires-unsafe.rs:8:14\n+  --> $DIR/static-mut-foreign-requires-unsafe.rs:11:14\n    |\n LL |     let _b = a;\n    |              ^ use of mutable static", "previous_filename": "src/test/ui/static/static-mut-foreign-requires-unsafe.stderr"}, {"sha": "4f96acb3375b8a433f508d03ba326e34edb2a773", "filename": "src/test/ui/static/static-mut-foreign-requires-unsafe.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-foreign-requires-unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-foreign-requires-unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-foreign-requires-unsafe.rs?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -1,3 +1,6 @@\n+// revisions: mir thir\n+// [thir]compile-flags: -Z thir-unsafeck\n+\n extern \"C\" {\n     static mut a: i32;\n }"}, {"sha": "2c62d4d8f3bb1268c8a0f50fb25f79fe80a177c3", "filename": "src/test/ui/static/static-mut-foreign-requires-unsafe.thir.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-foreign-requires-unsafe.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-foreign-requires-unsafe.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-foreign-requires-unsafe.thir.stderr?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -0,0 +1,27 @@\n+error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n+  --> $DIR/static-mut-foreign-requires-unsafe.rs:9:5\n+   |\n+LL |     a += 3;\n+   |     ^ use of mutable static\n+   |\n+   = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n+\n+error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n+  --> $DIR/static-mut-foreign-requires-unsafe.rs:10:5\n+   |\n+LL |     a = 4;\n+   |     ^ use of mutable static\n+   |\n+   = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n+\n+error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n+  --> $DIR/static-mut-foreign-requires-unsafe.rs:11:14\n+   |\n+LL |     let _b = a;\n+   |              ^ use of mutable static\n+   |\n+   = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0133`."}, {"sha": "0d4ce056fc28ae7c9bbecf42e49b3a9ffc1c2835", "filename": "src/test/ui/static/static-mut-requires-unsafe.mir.stderr", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-requires-unsafe.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-requires-unsafe.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-requires-unsafe.mir.stderr?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -1,21 +1,21 @@\n error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n-  --> $DIR/static-mut-requires-unsafe.rs:4:5\n+  --> $DIR/static-mut-requires-unsafe.rs:7:5\n    |\n LL |     a += 3;\n    |     ^^^^^^ use of mutable static\n    |\n    = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n \n error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n-  --> $DIR/static-mut-requires-unsafe.rs:5:5\n+  --> $DIR/static-mut-requires-unsafe.rs:8:5\n    |\n LL |     a = 4;\n    |     ^^^^^ use of mutable static\n    |\n    = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n \n error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n-  --> $DIR/static-mut-requires-unsafe.rs:6:14\n+  --> $DIR/static-mut-requires-unsafe.rs:9:14\n    |\n LL |     let _b = a;\n    |              ^ use of mutable static", "previous_filename": "src/test/ui/static/static-mut-requires-unsafe.stderr"}, {"sha": "ea3ba0950079e418356393def69a000c5b154316", "filename": "src/test/ui/static/static-mut-requires-unsafe.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-requires-unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-requires-unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-requires-unsafe.rs?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -1,3 +1,6 @@\n+// revisions: mir thir\n+// [thir]compile-flags: -Z thir-unsafeck\n+\n static mut a: isize = 3;\n \n fn main() {"}, {"sha": "1a1cf14271a98902bb2042ff71263d46aeffad84", "filename": "src/test/ui/static/static-mut-requires-unsafe.thir.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-requires-unsafe.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-requires-unsafe.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-requires-unsafe.thir.stderr?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -0,0 +1,27 @@\n+error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n+  --> $DIR/static-mut-requires-unsafe.rs:7:5\n+   |\n+LL |     a += 3;\n+   |     ^ use of mutable static\n+   |\n+   = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n+\n+error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n+  --> $DIR/static-mut-requires-unsafe.rs:8:5\n+   |\n+LL |     a = 4;\n+   |     ^ use of mutable static\n+   |\n+   = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n+\n+error[E0133]: use of mutable static is unsafe and requires unsafe function or block\n+  --> $DIR/static-mut-requires-unsafe.rs:9:14\n+   |\n+LL |     let _b = a;\n+   |              ^ use of mutable static\n+   |\n+   = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0133`."}, {"sha": "3f98388446003404aedd5b38de2718f7404fc5a2", "filename": "src/tools/tidy/src/ui_tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e1afc4501eae89862a50ab24961a8d12ece0a37/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs?ref=0e1afc4501eae89862a50ab24961a8d12ece0a37", "patch": "@@ -7,8 +7,8 @@ use std::path::Path;\n \n const ENTRY_LIMIT: usize = 1000;\n // FIXME: The following limits should be reduced eventually.\n-const ROOT_ENTRY_LIMIT: usize = 1370;\n-const ISSUES_ENTRY_LIMIT: usize = 2555;\n+const ROOT_ENTRY_LIMIT: usize = 1371;\n+const ISSUES_ENTRY_LIMIT: usize = 2558;\n \n fn check_entries(path: &Path, bad: &mut bool) {\n     let dirs = walkdir::WalkDir::new(&path.join(\"test/ui\"))"}]}