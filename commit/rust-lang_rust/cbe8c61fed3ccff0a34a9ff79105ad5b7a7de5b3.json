{"sha": "cbe8c61fed3ccff0a34a9ff79105ad5b7a7de5b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiZThjNjFmZWQzY2NmZjBhMzRhOWZmNzkxMDVhZDViN2E3ZGU1YjM=", "commit": {"author": {"name": "SiegeLord", "email": "slabode@aim.com", "date": "2013-12-26T22:39:36Z"}, "committer": {"name": "SiegeLord", "email": "slabode@aim.com", "date": "2013-12-31T20:28:08Z"}, "message": "Add a --no-analysis command line switch", "tree": {"sha": "62569d7154f52965abbee4426cf816712e88e785", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62569d7154f52965abbee4426cf816712e88e785"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbe8c61fed3ccff0a34a9ff79105ad5b7a7de5b3", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbe8c61fed3ccff0a34a9ff79105ad5b7a7de5b3", "html_url": "https://github.com/rust-lang/rust/commit/cbe8c61fed3ccff0a34a9ff79105ad5b7a7de5b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbe8c61fed3ccff0a34a9ff79105ad5b7a7de5b3/comments", "author": {"login": "SiegeLord", "id": 480550, "node_id": "MDQ6VXNlcjQ4MDU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/480550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SiegeLord", "html_url": "https://github.com/SiegeLord", "followers_url": "https://api.github.com/users/SiegeLord/followers", "following_url": "https://api.github.com/users/SiegeLord/following{/other_user}", "gists_url": "https://api.github.com/users/SiegeLord/gists{/gist_id}", "starred_url": "https://api.github.com/users/SiegeLord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SiegeLord/subscriptions", "organizations_url": "https://api.github.com/users/SiegeLord/orgs", "repos_url": "https://api.github.com/users/SiegeLord/repos", "events_url": "https://api.github.com/users/SiegeLord/events{/privacy}", "received_events_url": "https://api.github.com/users/SiegeLord/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SiegeLord", "id": 480550, "node_id": "MDQ6VXNlcjQ4MDU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/480550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SiegeLord", "html_url": "https://github.com/SiegeLord", "followers_url": "https://api.github.com/users/SiegeLord/followers", "following_url": "https://api.github.com/users/SiegeLord/following{/other_user}", "gists_url": "https://api.github.com/users/SiegeLord/gists{/gist_id}", "starred_url": "https://api.github.com/users/SiegeLord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SiegeLord/subscriptions", "organizations_url": "https://api.github.com/users/SiegeLord/orgs", "repos_url": "https://api.github.com/users/SiegeLord/repos", "events_url": "https://api.github.com/users/SiegeLord/events{/privacy}", "received_events_url": "https://api.github.com/users/SiegeLord/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7a9e488a47ef9ca2f9cc9f73903b2ac3f54fc4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7a9e488a47ef9ca2f9cc9f73903b2ac3f54fc4c", "html_url": "https://github.com/rust-lang/rust/commit/a7a9e488a47ef9ca2f9cc9f73903b2ac3f54fc4c"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "b0fa22f817288f7612b057ab1d08f09ce2db043e", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cbe8c61fed3ccff0a34a9ff79105ad5b7a7de5b3/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbe8c61fed3ccff0a34a9ff79105ad5b7a7de5b3/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=cbe8c61fed3ccff0a34a9ff79105ad5b7a7de5b3", "patch": "@@ -417,6 +417,14 @@ pub fn stop_after_phase_1(sess: Session) -> bool {\n     return false;\n }\n \n+pub fn stop_after_phase_2(sess: Session) -> bool {\n+    if sess.opts.no_analysis {\n+        debug!(\"invoked with --no-analysis, returning early from compile_input\");\n+        return true;\n+    }\n+    return false;\n+}\n+\n pub fn stop_after_phase_5(sess: Session) -> bool {\n     if sess.opts.output_type != link::output_type_exe {\n         debug!(\"not building executable, returning early from compile_input\");\n@@ -482,6 +490,8 @@ pub fn compile_input(sess: Session, cfg: ast::CrateConfig, input: &input,\n \n         write_out_deps(sess, input, outputs, &expanded_crate);\n \n+        if stop_after_phase_2(sess) { return; }\n+\n         let analysis = phase_3_run_analysis_passes(sess, &expanded_crate);\n         if stop_after_phase_3(sess) { return; }\n         let trans = phase_4_translate_to_llvm(sess, expanded_crate,\n@@ -697,6 +707,7 @@ pub fn build_session_options(binary: @str,\n \n     let parse_only = matches.opt_present(\"parse-only\");\n     let no_trans = matches.opt_present(\"no-trans\");\n+    let no_analysis = matches.opt_present(\"no-analysis\");\n \n     let lint_levels = [lint::allow, lint::warn,\n                        lint::deny, lint::forbid];\n@@ -850,6 +861,7 @@ pub fn build_session_options(binary: @str,\n         test: test,\n         parse_only: parse_only,\n         no_trans: no_trans,\n+        no_analysis: no_analysis,\n         debugging_opts: debugging_opts,\n         android_cross_path: android_cross_path,\n         write_dependency_info: write_dependency_info,\n@@ -943,6 +955,9 @@ pub fn optgroups() -> ~[getopts::groups::OptGroup] {\n   optflag(\"\",  \"ls\",  \"List the symbols defined by a library crate\"),\n   optflag(\"\", \"no-trans\",\n                         \"Run all passes except translation; no output\"),\n+  optflag(\"\", \"no-analysis\",\n+                        \"Parse and expand the output, but run no analysis or produce \\\n+                        output\"),\n   optflag(\"O\", \"\",    \"Equivalent to --opt-level=2\"),\n   optopt(\"o\", \"\",     \"Write output to <filename>\", \"FILENAME\"),\n   optopt(\"\", \"opt-level\","}, {"sha": "63ccc91cd556d7d1222aa17134e5c2964444c4a0", "filename": "src/librustc/driver/session.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cbe8c61fed3ccff0a34a9ff79105ad5b7a7de5b3/src%2Flibrustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbe8c61fed3ccff0a34a9ff79105ad5b7a7de5b3/src%2Flibrustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fsession.rs?ref=cbe8c61fed3ccff0a34a9ff79105ad5b7a7de5b3", "patch": "@@ -167,6 +167,7 @@ pub struct options {\n     test: bool,\n     parse_only: bool,\n     no_trans: bool,\n+    no_analysis: bool,\n     debugging_opts: uint,\n     android_cross_path: Option<~str>,\n     /// Whether to write dependency files. It's (enabled, optional filename).\n@@ -398,6 +399,7 @@ pub fn basic_options() -> @options {\n         test: false,\n         parse_only: false,\n         no_trans: false,\n+        no_analysis: false,\n         debugging_opts: 0u,\n         android_cross_path: None,\n         write_dependency_info: (false, None),"}]}