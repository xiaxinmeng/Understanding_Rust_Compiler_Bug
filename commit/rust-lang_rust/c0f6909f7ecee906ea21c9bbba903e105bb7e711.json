{"sha": "c0f6909f7ecee906ea21c9bbba903e105bb7e711", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZjY5MDlmN2VjZWU5MDZlYTIxYzliYmJhOTAzZTEwNWJiN2U3MTE=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-02-25T01:34:32Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-03-07T04:41:57Z"}, "message": "base::iter_structural_ty: structs and records", "tree": {"sha": "f9526c18960187214d190c49057865c9255a8257", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9526c18960187214d190c49057865c9255a8257"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0f6909f7ecee906ea21c9bbba903e105bb7e711", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0f6909f7ecee906ea21c9bbba903e105bb7e711", "html_url": "https://github.com/rust-lang/rust/commit/c0f6909f7ecee906ea21c9bbba903e105bb7e711", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0f6909f7ecee906ea21c9bbba903e105bb7e711/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68b3f0d8a419c94eaead13517cd87aaf5fc74b86", "url": "https://api.github.com/repos/rust-lang/rust/commits/68b3f0d8a419c94eaead13517cd87aaf5fc74b86", "html_url": "https://github.com/rust-lang/rust/commit/68b3f0d8a419c94eaead13517cd87aaf5fc74b86"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "ec4dd12498ac6015785ddae9a6ae289f9a933cdb", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c0f6909f7ecee906ea21c9bbba903e105bb7e711/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0f6909f7ecee906ea21c9bbba903e105bb7e711/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=c0f6909f7ecee906ea21c9bbba903e105bb7e711", "patch": "@@ -676,9 +676,10 @@ pub fn iter_structural_ty(cx: block, av: ValueRef, t: ty::t,\n     let mut cx = cx;\n     match /*bad*/copy ty::get(t).sty {\n       ty::ty_rec(*) | ty::ty_struct(*) => {\n-          do expr::with_field_tys(cx.tcx(), t, None) |_has_dtor, field_tys| {\n+          let repr = adt::represent_type(cx.ccx(), t);\n+          do expr::with_field_tys(cx.tcx(), t, None) |discr, field_tys| {\n               for vec::eachi(field_tys) |i, field_ty| {\n-                  let llfld_a = GEPi(cx, av, struct_field(i));\n+                  let llfld_a = adt::trans_GEP(cx, &repr, av, discr, i);\n                   cx = f(cx, llfld_a, field_ty.mt.ty);\n               }\n           }"}]}