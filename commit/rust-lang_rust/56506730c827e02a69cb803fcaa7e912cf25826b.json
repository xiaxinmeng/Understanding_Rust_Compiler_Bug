{"sha": "56506730c827e02a69cb803fcaa7e912cf25826b", "node_id": "C_kwDOAAsO6NoAKDU2NTA2NzMwYzgyN2UwMmE2OWNiODAzZmNhYTdlOTEyY2YyNTgyNmI", "commit": {"author": {"name": "Kevin Per", "email": "kevin.per@protonmail.com", "date": "2022-10-11T16:17:59Z"}, "committer": {"name": "Kevin Per", "email": "kevin.per@protonmail.com", "date": "2022-10-20T08:25:31Z"}, "message": "Implement assertions and fixes to not emit empty spans without suggestions", "tree": {"sha": "75855b520604bf1ac4b9384817e38418c385006a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75855b520604bf1ac4b9384817e38418c385006a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56506730c827e02a69cb803fcaa7e912cf25826b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56506730c827e02a69cb803fcaa7e912cf25826b", "html_url": "https://github.com/rust-lang/rust/commit/56506730c827e02a69cb803fcaa7e912cf25826b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56506730c827e02a69cb803fcaa7e912cf25826b/comments", "author": {"login": "kper", "id": 10795807, "node_id": "MDQ6VXNlcjEwNzk1ODA3", "avatar_url": "https://avatars.githubusercontent.com/u/10795807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kper", "html_url": "https://github.com/kper", "followers_url": "https://api.github.com/users/kper/followers", "following_url": "https://api.github.com/users/kper/following{/other_user}", "gists_url": "https://api.github.com/users/kper/gists{/gist_id}", "starred_url": "https://api.github.com/users/kper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kper/subscriptions", "organizations_url": "https://api.github.com/users/kper/orgs", "repos_url": "https://api.github.com/users/kper/repos", "events_url": "https://api.github.com/users/kper/events{/privacy}", "received_events_url": "https://api.github.com/users/kper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kper", "id": 10795807, "node_id": "MDQ6VXNlcjEwNzk1ODA3", "avatar_url": "https://avatars.githubusercontent.com/u/10795807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kper", "html_url": "https://github.com/kper", "followers_url": "https://api.github.com/users/kper/followers", "following_url": "https://api.github.com/users/kper/following{/other_user}", "gists_url": "https://api.github.com/users/kper/gists{/gist_id}", "starred_url": "https://api.github.com/users/kper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kper/subscriptions", "organizations_url": "https://api.github.com/users/kper/orgs", "repos_url": "https://api.github.com/users/kper/repos", "events_url": "https://api.github.com/users/kper/events{/privacy}", "received_events_url": "https://api.github.com/users/kper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f50e6f41ec8b55a6dc52066dc15fa5d17b8e39b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f50e6f41ec8b55a6dc52066dc15fa5d17b8e39b", "html_url": "https://github.com/rust-lang/rust/commit/4f50e6f41ec8b55a6dc52066dc15fa5d17b8e39b"}], "stats": {"total": 133, "additions": 30, "deletions": 103}, "files": [{"sha": "b8ed9b9ec18f718b0cc56160b0966a9e0cf220a5", "filename": "clippy_lints/src/manual_assert.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/56506730c827e02a69cb803fcaa7e912cf25826b/clippy_lints%2Fsrc%2Fmanual_assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56506730c827e02a69cb803fcaa7e912cf25826b/clippy_lints%2Fsrc%2Fmanual_assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_assert.rs?ref=56506730c827e02a69cb803fcaa7e912cf25826b", "patch": "@@ -69,11 +69,13 @@ impl<'tcx> LateLintPass<'tcx> for ManualAssert {\n                     \"only a `panic!` in `if`-then statement\",\n                     |diag| {\n                         // comments can be noisy, do not show them to the user\n-                        diag.tool_only_span_suggestion(\n-                                    expr.span.shrink_to_lo(),\n-                                    \"add comments back\",\n-                                    comments,\n-                                    applicability);\n+                        if !comments.is_empty() {\n+                            diag.tool_only_span_suggestion(\n+                                        expr.span.shrink_to_lo(),\n+                                        \"add comments back\",\n+                                        comments,\n+                                        applicability);\n+                        }\n                         diag.span_suggestion(\n                                     expr.span,\n                                     \"try instead\","}, {"sha": "67debe7e08af6008c7ddf474c37a3c7a59e02614", "filename": "clippy_lints/src/needless_late_init.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/56506730c827e02a69cb803fcaa7e912cf25826b/clippy_lints%2Fsrc%2Fneedless_late_init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56506730c827e02a69cb803fcaa7e912cf25826b/clippy_lints%2Fsrc%2Fneedless_late_init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_late_init.rs?ref=56506730c827e02a69cb803fcaa7e912cf25826b", "patch": "@@ -180,10 +180,13 @@ fn assignment_suggestions<'tcx>(\n     let suggestions = assignments\n         .iter()\n         .flat_map(|assignment| {\n-            [\n-                assignment.span.until(assignment.rhs_span),\n-                assignment.rhs_span.shrink_to_hi().with_hi(assignment.span.hi()),\n-            ]\n+            let mut spans = vec![assignment.span.until(assignment.rhs_span)];\n+\n+            if assignment.rhs_span.hi() != assignment.span.hi() {\n+                spans.push(assignment.rhs_span.shrink_to_hi().with_hi(assignment.span.hi()));\n+            }\n+\n+            spans\n         })\n         .map(|span| (span, String::new()))\n         .collect::<Vec<(Span, String)>>();"}, {"sha": "237638ee1344c60274bb31c1accbcf7f7456cee3", "filename": "tests/ui/manual_assert.edition2018.stderr", "status": "modified", "additions": 8, "deletions": 47, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/56506730c827e02a69cb803fcaa7e912cf25826b/tests%2Fui%2Fmanual_assert.edition2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/56506730c827e02a69cb803fcaa7e912cf25826b/tests%2Fui%2Fmanual_assert.edition2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.edition2018.stderr?ref=56506730c827e02a69cb803fcaa7e912cf25826b", "patch": "@@ -4,104 +4,65 @@ error: only a `panic!` in `if`-then statement\n LL | /     if !a.is_empty() {\n LL | |         panic!(\"qaqaq{:?}\", a);\n LL | |     }\n-   | |_____^\n+   | |_____^ help: try instead: `assert!(a.is_empty(), \"qaqaq{:?}\", a);`\n    |\n    = note: `-D clippy::manual-assert` implied by `-D warnings`\n-help: try instead\n-   |\n-LL |     assert!(a.is_empty(), \"qaqaq{:?}\", a);\n-   |\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:34:5\n    |\n LL | /     if !a.is_empty() {\n LL | |         panic!(\"qwqwq\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(a.is_empty(), \"qwqwq\");\n-   |\n+   | |_____^ help: try instead: `assert!(a.is_empty(), \"qwqwq\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:51:5\n    |\n LL | /     if b.is_empty() {\n LL | |         panic!(\"panic1\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!b.is_empty(), \"panic1\");\n-   |\n+   | |_____^ help: try instead: `assert!(!b.is_empty(), \"panic1\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:54:5\n    |\n LL | /     if b.is_empty() && a.is_empty() {\n LL | |         panic!(\"panic2\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(b.is_empty() && a.is_empty()), \"panic2\");\n-   |\n+   | |_____^ help: try instead: `assert!(!(b.is_empty() && a.is_empty()), \"panic2\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:57:5\n    |\n LL | /     if a.is_empty() && !b.is_empty() {\n LL | |         panic!(\"panic3\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(a.is_empty() && !b.is_empty()), \"panic3\");\n-   |\n+   | |_____^ help: try instead: `assert!(!(a.is_empty() && !b.is_empty()), \"panic3\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:60:5\n    |\n LL | /     if b.is_empty() || a.is_empty() {\n LL | |         panic!(\"panic4\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(b.is_empty() || a.is_empty()), \"panic4\");\n-   |\n+   | |_____^ help: try instead: `assert!(!(b.is_empty() || a.is_empty()), \"panic4\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:63:5\n    |\n LL | /     if a.is_empty() || !b.is_empty() {\n LL | |         panic!(\"panic5\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(a.is_empty() || !b.is_empty()), \"panic5\");\n-   |\n+   | |_____^ help: try instead: `assert!(!(a.is_empty() || !b.is_empty()), \"panic5\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:66:5\n    |\n LL | /     if a.is_empty() {\n LL | |         panic!(\"with expansion {}\", one!())\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!a.is_empty(), \"with expansion {}\", one!());\n-   |\n+   | |_____^ help: try instead: `assert!(!a.is_empty(), \"with expansion {}\", one!());`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:73:5"}, {"sha": "237638ee1344c60274bb31c1accbcf7f7456cee3", "filename": "tests/ui/manual_assert.edition2021.stderr", "status": "modified", "additions": 8, "deletions": 47, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/56506730c827e02a69cb803fcaa7e912cf25826b/tests%2Fui%2Fmanual_assert.edition2021.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/56506730c827e02a69cb803fcaa7e912cf25826b/tests%2Fui%2Fmanual_assert.edition2021.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.edition2021.stderr?ref=56506730c827e02a69cb803fcaa7e912cf25826b", "patch": "@@ -4,104 +4,65 @@ error: only a `panic!` in `if`-then statement\n LL | /     if !a.is_empty() {\n LL | |         panic!(\"qaqaq{:?}\", a);\n LL | |     }\n-   | |_____^\n+   | |_____^ help: try instead: `assert!(a.is_empty(), \"qaqaq{:?}\", a);`\n    |\n    = note: `-D clippy::manual-assert` implied by `-D warnings`\n-help: try instead\n-   |\n-LL |     assert!(a.is_empty(), \"qaqaq{:?}\", a);\n-   |\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:34:5\n    |\n LL | /     if !a.is_empty() {\n LL | |         panic!(\"qwqwq\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(a.is_empty(), \"qwqwq\");\n-   |\n+   | |_____^ help: try instead: `assert!(a.is_empty(), \"qwqwq\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:51:5\n    |\n LL | /     if b.is_empty() {\n LL | |         panic!(\"panic1\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!b.is_empty(), \"panic1\");\n-   |\n+   | |_____^ help: try instead: `assert!(!b.is_empty(), \"panic1\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:54:5\n    |\n LL | /     if b.is_empty() && a.is_empty() {\n LL | |         panic!(\"panic2\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(b.is_empty() && a.is_empty()), \"panic2\");\n-   |\n+   | |_____^ help: try instead: `assert!(!(b.is_empty() && a.is_empty()), \"panic2\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:57:5\n    |\n LL | /     if a.is_empty() && !b.is_empty() {\n LL | |         panic!(\"panic3\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(a.is_empty() && !b.is_empty()), \"panic3\");\n-   |\n+   | |_____^ help: try instead: `assert!(!(a.is_empty() && !b.is_empty()), \"panic3\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:60:5\n    |\n LL | /     if b.is_empty() || a.is_empty() {\n LL | |         panic!(\"panic4\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(b.is_empty() || a.is_empty()), \"panic4\");\n-   |\n+   | |_____^ help: try instead: `assert!(!(b.is_empty() || a.is_empty()), \"panic4\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:63:5\n    |\n LL | /     if a.is_empty() || !b.is_empty() {\n LL | |         panic!(\"panic5\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(a.is_empty() || !b.is_empty()), \"panic5\");\n-   |\n+   | |_____^ help: try instead: `assert!(!(a.is_empty() || !b.is_empty()), \"panic5\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:66:5\n    |\n LL | /     if a.is_empty() {\n LL | |         panic!(\"with expansion {}\", one!())\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!a.is_empty(), \"with expansion {}\", one!());\n-   |\n+   | |_____^ help: try instead: `assert!(!a.is_empty(), \"with expansion {}\", one!());`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:73:5"}]}