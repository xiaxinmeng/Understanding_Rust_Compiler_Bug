{"sha": "9e1aa9c5f7e9fe6969000101169e8d3773dab212", "node_id": "C_kwDOAAsO6NoAKDllMWFhOWM1ZjdlOWZlNjk2OTAwMDEwMTE2OWU4ZDM3NzNkYWIyMTI", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-08-04T16:48:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-04T16:48:09Z"}, "message": "Merge pull request #1254 from afonso360/float-intrinsics-fix\n\nUse native cranelift instructions when lowering float intrinsics", "tree": {"sha": "3214141cfc39aaa19b5b4508e72b85e2932bd449", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3214141cfc39aaa19b5b4508e72b85e2932bd449"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e1aa9c5f7e9fe6969000101169e8d3773dab212", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi6/hJCRBK7hj4Ov3rIwAAnUYIAEBsa9oddD8ngd6wRglMDVDq\nv+FC07jo8y0YZZONOf8k96he1d+6T/bEztva8z++pC+s5Bqm+rW4QV0WaSANl0mz\nfJJ+GOL1eHeSrfhg+jPXJNWGVoA2zqAfc/pmsbHr08cRJCXxIFYjhhx7zZHH8Ppa\ni22WWfPGRTOAzhIX4dpdQST2BtA3jWkmI1NN+NOYwFZP3R1DJTW6B8a9KMK846Px\nJjk74dHrNT1V8shJTjQWXF++fVnYEzcrr8342/tG59S+MZClu7vav6SMWPguTyZa\nyiNzmczYvDNCsj3SwO3Foro3YYjmhV8AlzHJdD9b4q6PsT2OSpAwBzlmk4V1DYs=\n=XFdK\n-----END PGP SIGNATURE-----\n", "payload": "tree 3214141cfc39aaa19b5b4508e72b85e2932bd449\nparent 0c5b61fca892bfa2cd032d28254aaf8acaa76d66\nparent 8c8fc6af33c0a10340535fb9eb6ab9b7648bf742\nauthor bjorn3 <17426603+bjorn3@users.noreply.github.com> 1659631689 +0200\ncommitter GitHub <noreply@github.com> 1659631689 +0200\n\nMerge pull request #1254 from afonso360/float-intrinsics-fix\n\nUse native cranelift instructions when lowering float intrinsics"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e1aa9c5f7e9fe6969000101169e8d3773dab212", "html_url": "https://github.com/rust-lang/rust/commit/9e1aa9c5f7e9fe6969000101169e8d3773dab212", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e1aa9c5f7e9fe6969000101169e8d3773dab212/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c5b61fca892bfa2cd032d28254aaf8acaa76d66", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c5b61fca892bfa2cd032d28254aaf8acaa76d66", "html_url": "https://github.com/rust-lang/rust/commit/0c5b61fca892bfa2cd032d28254aaf8acaa76d66"}, {"sha": "8c8fc6af33c0a10340535fb9eb6ab9b7648bf742", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c8fc6af33c0a10340535fb9eb6ab9b7648bf742", "html_url": "https://github.com/rust-lang/rust/commit/8c8fc6af33c0a10340535fb9eb6ab9b7648bf742"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "77caf741acf3b28b387706fe3f1ca42cade0b1b2", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/9e1aa9c5f7e9fe6969000101169e8d3773dab212/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e1aa9c5f7e9fe6969000101169e8d3773dab212/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=9e1aa9c5f7e9fe6969000101169e8d3773dab212", "patch": "@@ -301,7 +301,38 @@ fn codegen_float_intrinsic_call<'tcx>(\n         _ => unreachable!(),\n     };\n \n-    let res = fx.easy_call(name, &args, ty);\n+    let layout = fx.layout_of(ty);\n+    let res = match intrinsic {\n+        sym::copysignf32 | sym::copysignf64 => {\n+            let a = args[0].load_scalar(fx);\n+            let b = args[1].load_scalar(fx);\n+            CValue::by_val(fx.bcx.ins().fcopysign(a, b), layout)\n+        }\n+        sym::fabsf32\n+        | sym::fabsf64\n+        | sym::floorf32\n+        | sym::floorf64\n+        | sym::ceilf32\n+        | sym::ceilf64\n+        | sym::truncf32\n+        | sym::truncf64 => {\n+            let a = args[0].load_scalar(fx);\n+\n+            let val = match intrinsic {\n+                sym::fabsf32 | sym::fabsf64 => fx.bcx.ins().fabs(a),\n+                sym::floorf32 | sym::floorf64 => fx.bcx.ins().floor(a),\n+                sym::ceilf32 | sym::ceilf64 => fx.bcx.ins().ceil(a),\n+                sym::truncf32 | sym::truncf64 => fx.bcx.ins().trunc(a),\n+                _ => unreachable!(),\n+            };\n+\n+            CValue::by_val(val, layout)\n+        }\n+        // These intrinsics aren't supported natively by Cranelift.\n+        // Lower them to a libcall.\n+        _ => fx.easy_call(name, &args, ty),\n+    };\n+\n     ret.write_cvalue(fx, res);\n \n     true"}]}