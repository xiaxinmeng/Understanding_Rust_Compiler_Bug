{"sha": "b998497bd41d6de71ec035433247dee856d1f3a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5OTg0OTdiZDQxZDZkZTcxZWMwMzU0MzMyNDdkZWU4NTZkMWYzYTU=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-05-08T19:00:32Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-05-09T09:51:39Z"}, "message": "Address review comments", "tree": {"sha": "894d937fa83a8c0300213024fb590d1f6177b446", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/894d937fa83a8c0300213024fb590d1f6177b446"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b998497bd41d6de71ec035433247dee856d1f3a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b998497bd41d6de71ec035433247dee856d1f3a5", "html_url": "https://github.com/rust-lang/rust/commit/b998497bd41d6de71ec035433247dee856d1f3a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b998497bd41d6de71ec035433247dee856d1f3a5/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a030c923412b0a0f7b02a585debe7bf60357370d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a030c923412b0a0f7b02a585debe7bf60357370d", "html_url": "https://github.com/rust-lang/rust/commit/a030c923412b0a0f7b02a585debe7bf60357370d"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "ffe84e9b655123967a8101c0d7569ab65f70e729", "filename": "src/librustc_mir/dataflow/move_paths/builder.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b998497bd41d6de71ec035433247dee856d1f3a5/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b998497bd41d6de71ec035433247dee856d1f3a5/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs?ref=b998497bd41d6de71ec035433247dee856d1f3a5", "patch": "@@ -361,12 +361,16 @@ impl<'b, 'a, 'tcx> Gatherer<'b, 'a, 'tcx> {\n     fn gather_terminator(&mut self, term: &Terminator<'tcx>) {\n         match term.kind {\n             TerminatorKind::Goto { target: _ }\n+            | TerminatorKind::FalseEdges { .. }\n+            | TerminatorKind::FalseUnwind { .. }\n+            // In some sense returning moves the return place into the current\n+            // call's destination, however, since there are no statements after\n+            // this that could possibly access the return place, this doesn't\n+            // need recording.\n             | TerminatorKind::Return\n             | TerminatorKind::Resume\n             | TerminatorKind::Abort\n             | TerminatorKind::GeneratorDrop\n-            | TerminatorKind::FalseEdges { .. }\n-            | TerminatorKind::FalseUnwind { .. }\n             | TerminatorKind::Unreachable => {}\n \n             TerminatorKind::Assert { ref cond, .. } => {"}, {"sha": "710a41bc8fdb554a3ac3c2d2a0187dc20245e521", "filename": "src/librustc_mir_build/build/scope.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b998497bd41d6de71ec035433247dee856d1f3a5/src%2Flibrustc_mir_build%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b998497bd41d6de71ec035433247dee856d1f3a5/src%2Flibrustc_mir_build%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fscope.rs?ref=b998497bd41d6de71ec035433247dee856d1f3a5", "patch": "@@ -69,7 +69,7 @@ scheduled in a [DropTree]. Later, before `in_breakable_scope` exits, the drops\n will be added to the CFG.\n \n Panics are handled in a similar fashion, except that the drops are added to the\n-mir once the rest of the function has finished being lowered. If a terminator\n+MIR once the rest of the function has finished being lowered. If a terminator\n can panic, call `diverge_from(block)` with the block containing the terminator\n `block`.\n \n@@ -284,8 +284,8 @@ impl DropTree {\n         blocks: &mut IndexVec<DropIdx, Option<BasicBlock>>,\n     ) {\n         // StorageDead statements can share blocks with each other and also with\n-        // a Drop terminator. We iterate through the blocks to find which blocks\n-        // need\n+        // a Drop terminator. We iterate through the drops to find which drops\n+        // need their own block.\n         #[derive(Clone, Copy)]\n         enum Block {\n             // This drop is unreachable\n@@ -294,7 +294,7 @@ impl DropTree {\n             // specified index.\n             Shares(DropIdx),\n             // This drop has more than one way of being reached, or it is\n-            // branched to from outside the tree, or it's predecessor is a\n+            // branched to from outside the tree, or its predecessor is a\n             // `Value` drop.\n             Own,\n         }\n@@ -307,7 +307,7 @@ impl DropTree {\n             needs_block[ROOT_NODE] = Block::Own;\n         }\n \n-        // Sort so that we only need to check the last\n+        // Sort so that we only need to check the last value.\n         let entry_points = &mut self.entry_points;\n         entry_points.sort();\n "}]}