{"sha": "a421b631ba0af42878250174e57ee25b8f7dbf03", "node_id": "C_kwDOAAsO6NoAKGE0MjFiNjMxYmEwYWY0Mjg3ODI1MDE3NGU1N2VlMjViOGY3ZGJmMDM", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-02-09T22:17:04Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-02-20T23:58:22Z"}, "message": "Delete read_enum_variant_arg", "tree": {"sha": "59b47df9a1ab4c1c90a367a3842743c0ee34e789", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59b47df9a1ab4c1c90a367a3842743c0ee34e789"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a421b631ba0af42878250174e57ee25b8f7dbf03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a421b631ba0af42878250174e57ee25b8f7dbf03", "html_url": "https://github.com/rust-lang/rust/commit/a421b631ba0af42878250174e57ee25b8f7dbf03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a421b631ba0af42878250174e57ee25b8f7dbf03/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c87060a72d68f7df1feaaa395437ce33e9856399", "url": "https://api.github.com/repos/rust-lang/rust/commits/c87060a72d68f7df1feaaa395437ce33e9856399", "html_url": "https://github.com/rust-lang/rust/commit/c87060a72d68f7df1feaaa395437ce33e9856399"}], "stats": {"total": 35, "additions": 14, "deletions": 21}, "files": [{"sha": "2c4b794ffa19e67c860abdd5a8a712de3450e789", "filename": "compiler/rustc_macros/src/serialize.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a421b631ba0af42878250174e57ee25b8f7dbf03/compiler%2Frustc_macros%2Fsrc%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a421b631ba0af42878250174e57ee25b8f7dbf03/compiler%2Frustc_macros%2Fsrc%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fserialize.rs?ref=a421b631ba0af42878250174e57ee25b8f7dbf03", "patch": "@@ -96,19 +96,20 @@ fn decode_field(field: &syn::Field, index: usize, is_struct: bool) -> proc_macro\n     } else {\n         quote! { ::rustc_serialize::Decodable::decode }\n     };\n-    let (decode_method, opt_field_name) = if is_struct {\n+    let __decoder = quote! { __decoder };\n+    let decode_call = if is_struct {\n         let field_name = field.ident.as_ref().map_or_else(|| index.to_string(), |i| i.to_string());\n-        (proc_macro2::Ident::new(\"read_struct_field\", field_span), quote! { #field_name, })\n+        let decode_method = proc_macro2::Ident::new(\"read_struct_field\", field_span);\n+        // Use the span of the field for the method call, so\n+        // that backtraces will point to the field.\n+        quote_spanned! {field_span=>\n+            ::rustc_serialize::Decoder::#decode_method(\n+                    #__decoder, #field_name, #decode_inner_method)\n+        }\n     } else {\n-        (proc_macro2::Ident::new(\"read_enum_variant_arg\", field_span), quote! {})\n-    };\n-\n-    let __decoder = quote! { __decoder };\n-    // Use the span of the field for the method call, so\n-    // that backtraces will point to the field.\n-    let decode_call = quote_spanned! {field_span=>\n-        ::rustc_serialize::Decoder::#decode_method(\n-                #__decoder, #opt_field_name #decode_inner_method)\n+        // Use the span of the field for the method call, so\n+        // that backtraces will point to the field.\n+        quote_spanned! {field_span=> #decode_inner_method(#__decoder) }\n     };\n \n     quote! { #decode_call }"}, {"sha": "5e62a0f1eb2e62fc2f7b728d1af4e72d9c70e0b6", "filename": "compiler/rustc_serialize/src/serialize.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a421b631ba0af42878250174e57ee25b8f7dbf03/compiler%2Frustc_serialize%2Fsrc%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a421b631ba0af42878250174e57ee25b8f7dbf03/compiler%2Frustc_serialize%2Fsrc%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2Fsrc%2Fserialize.rs?ref=a421b631ba0af42878250174e57ee25b8f7dbf03", "patch": "@@ -210,14 +210,6 @@ pub trait Decoder {\n         f(self, disr)\n     }\n \n-    #[inline]\n-    fn read_enum_variant_arg<T, F>(&mut self, f: F) -> T\n-    where\n-        F: FnOnce(&mut Self) -> T,\n-    {\n-        f(self)\n-    }\n-\n     #[inline]\n     fn read_struct<T, F>(&mut self, f: F) -> T\n     where\n@@ -572,8 +564,8 @@ impl<S: Encoder, T1: Encodable<S>, T2: Encodable<S>> Encodable<S> for Result<T1,\n impl<D: Decoder, T1: Decodable<D>, T2: Decodable<D>> Decodable<D> for Result<T1, T2> {\n     fn decode(d: &mut D) -> Result<T1, T2> {\n         d.read_enum_variant(|d, disr| match disr {\n-            0 => Ok(d.read_enum_variant_arg(|d| T1::decode(d))),\n-            1 => Err(d.read_enum_variant_arg(|d| T2::decode(d))),\n+            0 => Ok(T1::decode(d)),\n+            1 => Err(T2::decode(d)),\n             _ => panic!(\"Encountered invalid discriminant while decoding `Result`.\"),\n         })\n     }"}]}