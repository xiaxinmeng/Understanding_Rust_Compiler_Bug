{"sha": "7f3572fa0da8b8a50422714570bf83f056b6d6d3", "node_id": "C_kwDOAAsO6NoAKDdmMzU3MmZhMGRhOGI4YTUwNDIyNzE0NTcwYmY4M2YwNTZiNmQ2ZDM", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-10T10:42:16Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-10T18:02:06Z"}, "message": "Simplify", "tree": {"sha": "0e93c868df27a21e3c9e1afe5a7cb09ae9aa846a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e93c868df27a21e3c9e1afe5a7cb09ae9aa846a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f3572fa0da8b8a50422714570bf83f056b6d6d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f3572fa0da8b8a50422714570bf83f056b6d6d3", "html_url": "https://github.com/rust-lang/rust/commit/7f3572fa0da8b8a50422714570bf83f056b6d6d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f3572fa0da8b8a50422714570bf83f056b6d6d3/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e691ae0ab287a77dcf42842d7c564362b45460eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e691ae0ab287a77dcf42842d7c564362b45460eb", "html_url": "https://github.com/rust-lang/rust/commit/e691ae0ab287a77dcf42842d7c564362b45460eb"}], "stats": {"total": 89, "additions": 54, "deletions": 35}, "files": [{"sha": "9fcaa4b06dd998bd621a297839a30b611ce5ce82", "filename": "crates/base_db/src/input.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/7f3572fa0da8b8a50422714570bf83f056b6d6d3/crates%2Fbase_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f3572fa0da8b8a50422714570bf83f056b6d6d3/crates%2Fbase_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Finput.rs?ref=7f3572fa0da8b8a50422714570bf83f056b6d6d3", "patch": "@@ -135,6 +135,33 @@ pub enum LangCrateOrigin {\n     Other,\n }\n \n+impl From<&str> for LangCrateOrigin {\n+    fn from(s: &str) -> Self {\n+        match s {\n+            \"alloc\" => LangCrateOrigin::Alloc,\n+            \"core\" => LangCrateOrigin::Core,\n+            \"proc-macro\" => LangCrateOrigin::ProcMacro,\n+            \"std\" => LangCrateOrigin::Std,\n+            \"test\" => LangCrateOrigin::Test,\n+            _ => LangCrateOrigin::Other,\n+        }\n+    }\n+}\n+\n+impl fmt::Display for LangCrateOrigin {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        let text = match self {\n+            LangCrateOrigin::Alloc => \"alloc\",\n+            LangCrateOrigin::Core => \"core\",\n+            LangCrateOrigin::ProcMacro => \"proc_macro\",\n+            LangCrateOrigin::Std => \"std\",\n+            LangCrateOrigin::Test => \"test\",\n+            LangCrateOrigin::Other => \"other\",\n+        };\n+        f.write_str(text)\n+    }\n+}\n+\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct CrateDisplayName {\n     // The name we use to display various paths (with `_`)."}, {"sha": "a1e170634b7f40fe9e58df5773f2f5847a7e532c", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7f3572fa0da8b8a50422714570bf83f056b6d6d3/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f3572fa0da8b8a50422714570bf83f056b6d6d3/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=7f3572fa0da8b8a50422714570bf83f056b6d6d3", "patch": "@@ -12,6 +12,7 @@ use url::Url;\n \n use hir::{db::HirDatabase, Adt, AsAssocItem, AssocItem, AssocItemContainer, Crate, HasAttrs};\n use ide_db::{\n+    base_db::{CrateOrigin, LangCrateOrigin, SourceDatabase},\n     defs::{Definition, NameClass, NameRefClass},\n     helpers::pick_best_token,\n     RootDatabase,\n@@ -293,7 +294,7 @@ fn get_doc_link(db: &RootDatabase, def: Definition) -> Option<String> {\n     let (target, file, frag) = filename_and_frag_for_def(db, def)?;\n \n     let krate = crate_of_def(db, target)?;\n-    let mut url = get_doc_base_url(db, &krate)?;\n+    let mut url = get_doc_base_url(db, krate)?;\n \n     if let Some(path) = mod_path_of_def(db, target) {\n         url = url.join(&path).ok()?;\n@@ -315,7 +316,7 @@ fn rewrite_intra_doc_link(\n \n     let resolved = resolve_doc_path_for_def(db, def, link, ns)?;\n     let krate = crate_of_def(db, resolved)?;\n-    let mut url = get_doc_base_url(db, &krate)?;\n+    let mut url = get_doc_base_url(db, krate)?;\n \n     let (_, file, frag) = filename_and_frag_for_def(db, resolved)?;\n     if let Some(path) = mod_path_of_def(db, resolved) {\n@@ -335,7 +336,7 @@ fn rewrite_url_link(db: &RootDatabase, def: Definition, target: &str) -> Option<\n     }\n \n     let krate = crate_of_def(db, def)?;\n-    let mut url = get_doc_base_url(db, &krate)?;\n+    let mut url = get_doc_base_url(db, krate)?;\n     let (def, file, frag) = filename_and_frag_for_def(db, def)?;\n \n     if let Some(path) = mod_path_of_def(db, def) {\n@@ -406,13 +407,20 @@ fn map_links<'e>(\n /// https://doc.rust-lang.org/std/iter/trait.Iterator.html#tymethod.next\n /// ^^^^^^^^^^^^^^^^^^^^^^^^^^\n /// ```\n-fn get_doc_base_url(db: &RootDatabase, krate: &Crate) -> Option<Url> {\n+fn get_doc_base_url(db: &RootDatabase, krate: Crate) -> Option<Url> {\n     let display_name = krate.display_name(db)?;\n-    let base = match &**display_name.crate_name() {\n+\n+    let base = match db.crate_graph()[krate.into()].origin {\n         // std and co do not specify `html_root_url` any longer so we gotta handwrite this ourself.\n         // FIXME: Use the toolchains channel instead of nightly\n-        name @ (\"core\" | \"std\" | \"alloc\" | \"proc_macro\" | \"test\") => {\n-            format!(\"https://doc.rust-lang.org/nightly/{}\", name)\n+        CrateOrigin::Lang(\n+            origin @ (LangCrateOrigin::Alloc\n+            | LangCrateOrigin::Core\n+            | LangCrateOrigin::ProcMacro\n+            | LangCrateOrigin::Std\n+            | LangCrateOrigin::Test),\n+        ) => {\n+            format!(\"https://doc.rust-lang.org/nightly/{origin}\")\n         }\n         _ => {\n             krate.get_html_root_url(db).or_else(|| {"}, {"sha": "57e049c10ddaba37ddecbdff775aaeddca0fbbd5", "filename": "crates/ide/src/hover/tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7f3572fa0da8b8a50422714570bf83f056b6d6d3/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f3572fa0da8b8a50422714570bf83f056b6d6d3/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs?ref=7f3572fa0da8b8a50422714570bf83f056b6d6d3", "patch": "@@ -4531,7 +4531,7 @@ foo_macro!(\n \n             ---\n \n-            Doc comment for [`Foo`](https://doc.rust-lang.org/nightly/test/struct.Foo.html)\n+            Doc comment for [`Foo`](https://docs.rs/test/*/test/struct.Foo.html)\n         \"#]],\n     );\n }\n@@ -4556,7 +4556,7 @@ pub struct Foo;\n \n             ---\n \n-            Doc comment for [`Foo`](https://doc.rust-lang.org/nightly/test/struct.Foo.html)\n+            Doc comment for [`Foo`](https://docs.rs/test/*/test/struct.Foo.html)\n         \"#]],\n     );\n }"}, {"sha": "6bab9fa1ebbb89d24f027426b99997182462812b", "filename": "crates/ide/src/moniker.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7f3572fa0da8b8a50422714570bf83f056b6d6d3/crates%2Fide%2Fsrc%2Fmoniker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f3572fa0da8b8a50422714570bf83f056b6d6d3/crates%2Fide%2Fsrc%2Fmoniker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fmoniker.rs?ref=7f3572fa0da8b8a50422714570bf83f056b6d6d3", "patch": "@@ -153,17 +153,12 @@ pub(crate) fn def_to_moniker(\n                 CrateOrigin::CratesIo { repo } => (repo?, krate.version(db)?),\n                 CrateOrigin::Lang(lang) => (\n                     \"https://github.com/rust-lang/rust/\".to_string(),\n-                    format!(\n-                        \"https://github.com/rust-lang/rust/library/{}\",\n-                        match lang {\n-                            LangCrateOrigin::Alloc => \"alloc\",\n-                            LangCrateOrigin::Core => \"core\",\n-                            LangCrateOrigin::ProcMacro => \"proc_macro\",\n-                            LangCrateOrigin::Std => \"std\",\n-                            LangCrateOrigin::Test => \"test\",\n-                            LangCrateOrigin::Other => \"\",\n+                    match lang {\n+                        LangCrateOrigin::Other => {\n+                            \"https://github.com/rust-lang/rust/library/\".into()\n                         }\n-                    ),\n+                        lang => format!(\"https://github.com/rust-lang/rust/library/{lang}\",),\n+                    },\n                 ),\n             };\n             PackageInformation { name, repo, version }"}, {"sha": "f17fd0faa531fc0893836eb89b5de883d5dcadd2", "filename": "crates/ide_db/src/famous_defs.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7f3572fa0da8b8a50422714570bf83f056b6d6d3/crates%2Fide_db%2Fsrc%2Ffamous_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f3572fa0da8b8a50422714570bf83f056b6d6d3/crates%2Fide_db%2Fsrc%2Ffamous_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Ffamous_defs.rs?ref=7f3572fa0da8b8a50422714570bf83f056b6d6d3", "patch": "@@ -158,13 +158,9 @@ impl FamousDefs<'_, '_> {\n         let mut path = path.split(':');\n         let trait_ = path.next_back()?;\n         let lang_crate = path.next()?;\n-        let lang_crate = match lang_crate {\n-            \"core\" => LangCrateOrigin::Core,\n-            \"alloc\" => LangCrateOrigin::Alloc,\n-            \"test\" => LangCrateOrigin::Test,\n-            \"proc_macro\" => LangCrateOrigin::ProcMacro,\n-            \"std\" => LangCrateOrigin::Std,\n-            _ => return None,\n+        let lang_crate = match LangCrateOrigin::from(lang_crate) {\n+            LangCrateOrigin::Other => return None,\n+            lang_crate => lang_crate,\n         };\n         let std_crate = self.find_lang_crate(lang_crate)?;\n         let mut module = std_crate.root_module(db);"}, {"sha": "3d089b61b5a2f65899d424731e5e669fc8a0a07c", "filename": "crates/project_model/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f3572fa0da8b8a50422714570bf83f056b6d6d3/crates%2Fproject_model%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f3572fa0da8b8a50422714570bf83f056b6d6d3/crates%2Fproject_model%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Ftests.rs?ref=7f3572fa0da8b8a50422714570bf83f056b6d6d3", "patch": "@@ -1368,7 +1368,7 @@ fn rust_project_hello_world_project_model() {\n                         ],\n                         proc_macro: [],\n                         origin: Lang(\n-                            ProcMacro,\n+                            Other,\n                         ),\n                         is_proc_macro: false,\n                     },"}, {"sha": "e33ae608620443124b5714df802c89c54fc3e920", "filename": "crates/project_model/src/workspace.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7f3572fa0da8b8a50422714570bf83f056b6d6d3/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f3572fa0da8b8a50422714570bf83f056b6d6d3/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fworkspace.rs?ref=7f3572fa0da8b8a50422714570bf83f056b6d6d3", "patch": "@@ -908,14 +908,7 @@ fn sysroot_to_crate_graph(\n                 env,\n                 proc_macro,\n                 false,\n-                CrateOrigin::Lang(match &*sysroot[krate].name {\n-                    \"alloc\" => LangCrateOrigin::Alloc,\n-                    \"core\" => LangCrateOrigin::Core,\n-                    \"proc_macro\" => LangCrateOrigin::ProcMacro,\n-                    \"std\" => LangCrateOrigin::Std,\n-                    \"test\" => LangCrateOrigin::Test,\n-                    _ => LangCrateOrigin::Other,\n-                }),\n+                CrateOrigin::Lang(LangCrateOrigin::from(&*sysroot[krate].name)),\n             );\n             Some((krate, crate_id))\n         })"}]}