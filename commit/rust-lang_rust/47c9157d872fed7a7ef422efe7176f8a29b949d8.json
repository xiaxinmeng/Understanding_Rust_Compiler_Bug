{"sha": "47c9157d872fed7a7ef422efe7176f8a29b949d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3YzkxNTdkODcyZmVkN2E3ZWY0MjJlZmU3MTc2ZjhhMjliOTQ5ZDg=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-05-16T13:22:01Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-05-16T13:22:01Z"}, "message": "syntax: use fmt! over + in deriving/clone", "tree": {"sha": "80522d0a0a262ed00b371e8551cd8f3d51d149d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80522d0a0a262ed00b371e8551cd8f3d51d149d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47c9157d872fed7a7ef422efe7176f8a29b949d8", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47c9157d872fed7a7ef422efe7176f8a29b949d8", "html_url": "https://github.com/rust-lang/rust/commit/47c9157d872fed7a7ef422efe7176f8a29b949d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47c9157d872fed7a7ef422efe7176f8a29b949d8/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd2eb4701fc16e7acd6934759be043b1f7e5586d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd2eb4701fc16e7acd6934759be043b1f7e5586d", "html_url": "https://github.com/rust-lang/rust/commit/cd2eb4701fc16e7acd6934759be043b1f7e5586d"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "aceb60ebbd7d6fb19c8574fc6de99f6b6afb90b0", "filename": "src/libsyntax/ext/deriving/clone.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/47c9157d872fed7a7ef422efe7176f8a29b949d8/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47c9157d872fed7a7ef422efe7176f8a29b949d8/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs?ref=47c9157d872fed7a7ef422efe7176f8a29b949d8", "patch": "@@ -91,11 +91,11 @@ fn cs_clone(\n             all_fields = af;\n         },\n         EnumNonMatching(*) => cx.span_bug(span,\n-                                          ~\"Non-matching enum variants in `deriving(\" +\n-                                          name + \")`\"),\n+                                          fmt!(\"Non-matching enum variants in `deriving(%s)`\",\n+                                               name)),\n         StaticEnum(*) | StaticStruct(*) => cx.span_bug(span,\n-                                                       ~\"Static method in `deriving(\" +\n-                                                       name + \")`\")\n+                                                       fmt!(\"Static method in `deriving(%s)`\",\n+                                                            name))\n     }\n \n     match *all_fields {\n@@ -110,8 +110,8 @@ fn cs_clone(\n                 let ident = match o_id {\n                     Some(i) => i,\n                     None => cx.span_bug(span,\n-                                        ~\"unnamed field in normal struct \\\n-                                          in `deriving(\" + name + \")`\")\n+                                        fmt!(\"unnamed field in normal struct in `deriving(%s)`\",\n+                                             name))\n                 };\n                 build::Field { ident: ident, ex: subcall(self_f) }\n             };"}]}