{"sha": "c1a66e1e223db7687c28359d95f7a218283b796f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxYTY2ZTFlMjIzZGI3Njg3YzI4MzU5ZDk1ZjdhMjE4MjgzYjc5NmY=", "commit": {"author": {"name": "Caleb Cartwright", "email": "caleb.cartwright@outlook.com", "date": "2020-03-28T03:13:46Z"}, "committer": {"name": "Caleb Cartwright", "email": "caleb.cartwright@outlook.com", "date": "2020-03-28T03:13:46Z"}, "message": "fix: unreachable err on Fn with `None` block", "tree": {"sha": "215c9a32a657fa0d20b5546f3787cf3de1b655b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/215c9a32a657fa0d20b5546f3787cf3de1b655b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1a66e1e223db7687c28359d95f7a218283b796f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1a66e1e223db7687c28359d95f7a218283b796f", "html_url": "https://github.com/rust-lang/rust/commit/c1a66e1e223db7687c28359d95f7a218283b796f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1a66e1e223db7687c28359d95f7a218283b796f/comments", "author": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "537d746e08dc7feda17e07a3cf4442837aec0030", "url": "https://api.github.com/repos/rust-lang/rust/commits/537d746e08dc7feda17e07a3cf4442837aec0030", "html_url": "https://github.com/rust-lang/rust/commit/537d746e08dc7feda17e07a3cf4442837aec0030"}], "stats": {"total": 49, "additions": 47, "deletions": 2}, "files": [{"sha": "593e3ac6a211d82fdca2156912e3543d4fa5d3e7", "filename": "src/visitor.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c1a66e1e223db7687c28359d95f7a218283b796f/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1a66e1e223db7687c28359d95f7a218283b796f/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=c1a66e1e223db7687c28359d95f7a218283b796f", "patch": "@@ -514,7 +514,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n                 ast::ItemKind::Static(..) | ast::ItemKind::Const(..) => {\n                     self.visit_static(&StaticParts::from_item(item));\n                 }\n-                ast::ItemKind::Fn(defaultness, ref fn_signature, ref generics, ref body) => {\n+                ast::ItemKind::Fn(defaultness, ref fn_signature, ref generics, Some(ref body)) => {\n                     let inner_attrs = inner_attributes(&item.attrs);\n                     let fn_ctxt = match fn_signature.header.ext {\n                         ast::Extern::None => visit::FnCtxt::Free,\n@@ -526,7 +526,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n                             item.ident,\n                             &fn_signature,\n                             &item.vis,\n-                            body.as_deref(),\n+                            Some(body),\n                         ),\n                         generics,\n                         &fn_signature.decl,\n@@ -535,6 +535,18 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n                         Some(&inner_attrs),\n                     )\n                 }\n+                ast::ItemKind::Fn(_, ref fn_signature, ref generics, None) => {\n+                    let indent = self.block_indent;\n+                    let rewrite = self.rewrite_required_fn(\n+                        indent,\n+                        item.ident,\n+                        &fn_signature,\n+                        generics,\n+                        item.span,\n+                    );\n+\n+                    self.push_rewrite(item.span, rewrite);\n+                }\n                 ast::ItemKind::TyAlias(_, ref generics, ref generic_bounds, ref ty) => match ty {\n                     Some(ty) => {\n                         let rewrite = rewrite_type_alias("}, {"sha": "7cd80734bd99567ca2d3d63e7ba54f305c7088e5", "filename": "tests/source/issue_4057.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c1a66e1e223db7687c28359d95f7a218283b796f/tests%2Fsource%2Fissue_4057.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1a66e1e223db7687c28359d95f7a218283b796f/tests%2Fsource%2Fissue_4057.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue_4057.rs?ref=c1a66e1e223db7687c28359d95f7a218283b796f", "patch": "@@ -0,0 +1,15 @@\n+// rustfmt-format_code_in_doc_comments: true\n+\n+/// ```\n+/// # #[rustversion::since(1.36)]\n+/// # fn dox() {\n+/// # use std::pin::Pin;\n+/// # type Projection<'a> = &'a ();\n+/// # type ProjectionRef<'a> = &'a ();\n+/// # trait Dox {\n+/// fn   project_ex (self: Pin<&mut Self>) -> Projection<'_>;\n+/// fn   project_ref(self: Pin<&Self>) -> ProjectionRef<'_>;\n+/// # }\n+/// # }\n+/// ```\n+struct Foo;"}, {"sha": "cd8a1f2765f1865c003755601e383de8ab20fbe4", "filename": "tests/target/issue-4068.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c1a66e1e223db7687c28359d95f7a218283b796f/tests%2Ftarget%2Fissue-4068.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1a66e1e223db7687c28359d95f7a218283b796f/tests%2Ftarget%2Fissue-4068.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-4068.rs?ref=c1a66e1e223db7687c28359d95f7a218283b796f", "patch": "@@ -0,0 +1,3 @@\n+fn main() {\n+    extern \"C\" fn packet_records_options_impl_layout_length_encoding_option_len_multiplier();\n+}"}, {"sha": "467e67bca7c3c0626e3262ce08a934f63eff2b44", "filename": "tests/target/issue_4057.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c1a66e1e223db7687c28359d95f7a218283b796f/tests%2Ftarget%2Fissue_4057.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1a66e1e223db7687c28359d95f7a218283b796f/tests%2Ftarget%2Fissue_4057.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue_4057.rs?ref=c1a66e1e223db7687c28359d95f7a218283b796f", "patch": "@@ -0,0 +1,15 @@\n+// rustfmt-format_code_in_doc_comments: true\n+\n+/// ```\n+/// # #[rustversion::since(1.36)]\n+/// # fn dox() {\n+/// # use std::pin::Pin;\n+/// # type Projection<'a> = &'a ();\n+/// # type ProjectionRef<'a> = &'a ();\n+/// # trait Dox {\n+/// fn project_ex(self: Pin<&mut Self>) -> Projection<'_>;\n+/// fn project_ref(self: Pin<&Self>) -> ProjectionRef<'_>;\n+/// # }\n+/// # }\n+/// ```\n+struct Foo;"}]}