{"sha": "274d813cff34576d3fe9d343e73669385214d3c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3NGQ4MTNjZmYzNDU3NmQzZmU5ZDM0M2U3MzY2OTM4NTIxNGQzYzM=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-05-19T19:05:58Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-05-19T19:05:58Z"}, "message": "Fix derive collection after unresolved attribute fallback", "tree": {"sha": "f7ffe2abb7a854d1673b5d8015dc2b44e4614fd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7ffe2abb7a854d1673b5d8015dc2b44e4614fd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/274d813cff34576d3fe9d343e73669385214d3c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/274d813cff34576d3fe9d343e73669385214d3c3", "html_url": "https://github.com/rust-lang/rust/commit/274d813cff34576d3fe9d343e73669385214d3c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/274d813cff34576d3fe9d343e73669385214d3c3/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d76b176c0b0f86648a038a5e4ca84fb04e809dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d76b176c0b0f86648a038a5e4ca84fb04e809dc", "html_url": "https://github.com/rust-lang/rust/commit/2d76b176c0b0f86648a038a5e4ca84fb04e809dc"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "54e9c8d20e0700a583dbccdd0a71bc7ca51cf4bd", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/274d813cff34576d3fe9d343e73669385214d3c3/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d813cff34576d3fe9d343e73669385214d3c3/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=274d813cff34576d3fe9d343e73669385214d3c3", "patch": "@@ -367,6 +367,8 @@ impl DefCollector<'_> {\n     /// This improves UX when proc macros are turned off or don't work, and replicates the behavior\n     /// before we supported proc. attribute macros.\n     fn reseed_with_unresolved_attributes(&mut self) -> ReachedFixedPoint {\n+        cov_mark::hit!(unresolved_attribute_fallback);\n+\n         let mut added_items = false;\n         let unexpanded_macros = std::mem::replace(&mut self.unexpanded_macros, Vec::new());\n         for directive in &unexpanded_macros {\n@@ -391,7 +393,9 @@ impl DefCollector<'_> {\n                 added_items = true;\n             }\n         }\n-        self.unexpanded_macros = unexpanded_macros;\n+\n+        // The collection above might add new unresolved macros (eg. derives), so merge the lists.\n+        self.unexpanded_macros.extend(unexpanded_macros);\n \n         if added_items {\n             // Continue name resolution with the new data."}, {"sha": "b34ba885d8a58a0222b42834aeacb6e97a736405", "filename": "crates/hir_def/src/nameres/tests/macros.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/274d813cff34576d3fe9d343e73669385214d3c3/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d813cff34576d3fe9d343e73669385214d3c3/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs?ref=274d813cff34576d3fe9d343e73669385214d3c3", "patch": "@@ -685,6 +685,27 @@ pub trait Clone {}\n     );\n }\n \n+#[test]\n+fn builtin_derive_with_unresolved_attributes_fall_back() {\n+    // Tests that we still resolve derives after ignoring an unresolved attribute.\n+    cov_mark::check!(unresolved_attribute_fallback);\n+    let map = compute_crate_def_map(\n+        r#\"\n+        //- /main.rs crate:main deps:core\n+        use core::Clone;\n+\n+        #[derive(Clone)]\n+        #[unresolved]\n+        struct Foo;\n+\n+        //- /core.rs crate:core\n+        #[rustc_builtin_macro]\n+        pub macro Clone {}\n+        \"#,\n+    );\n+    assert_eq!(map.modules[map.root].scope.impls().len(), 1);\n+}\n+\n #[test]\n fn macro_expansion_overflow() {\n     cov_mark::check!(macro_expansion_overflow);\n@@ -842,7 +863,6 @@ fn collects_derive_helpers() {\n fn resolve_macro_def() {\n     check(\n         r#\"\n-//- /lib.rs\n pub macro structs($($i:ident),*) {\n     $(struct $i { field: u32 } )*\n }"}]}