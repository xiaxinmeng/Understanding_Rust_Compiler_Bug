{"sha": "8ac0d0a59ee47d9f8027955ca13f545f89bcc687", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhYzBkMGE1OWVlNDdkOWY4MDI3OTU1Y2ExM2Y1NDVmODliY2M2ODc=", "commit": {"author": {"name": "S\u00e9bastien Crozet", "email": "developer@crozet.re", "date": "2013-10-08T18:57:17Z"}, "committer": {"name": "S\u00e9bastien Crozet", "email": "developer@crozet.re", "date": "2013-10-08T19:49:35Z"}, "message": "Fix float to float ToPrimitive implementation.\n\nThe mimimum (negative) value of a float is -Bounded::max_value(), not Bounded::min_value().", "tree": {"sha": "9a3af805698c45ed86a57d047be90018094bf0ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a3af805698c45ed86a57d047be90018094bf0ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ac0d0a59ee47d9f8027955ca13f545f89bcc687", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ac0d0a59ee47d9f8027955ca13f545f89bcc687", "html_url": "https://github.com/rust-lang/rust/commit/8ac0d0a59ee47d9f8027955ca13f545f89bcc687", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ac0d0a59ee47d9f8027955ca13f545f89bcc687/comments", "author": {"login": "sebcrozet", "id": 1734958, "node_id": "MDQ6VXNlcjE3MzQ5NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1734958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebcrozet", "html_url": "https://github.com/sebcrozet", "followers_url": "https://api.github.com/users/sebcrozet/followers", "following_url": "https://api.github.com/users/sebcrozet/following{/other_user}", "gists_url": "https://api.github.com/users/sebcrozet/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebcrozet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebcrozet/subscriptions", "organizations_url": "https://api.github.com/users/sebcrozet/orgs", "repos_url": "https://api.github.com/users/sebcrozet/repos", "events_url": "https://api.github.com/users/sebcrozet/events{/privacy}", "received_events_url": "https://api.github.com/users/sebcrozet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebcrozet", "id": 1734958, "node_id": "MDQ6VXNlcjE3MzQ5NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1734958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebcrozet", "html_url": "https://github.com/sebcrozet", "followers_url": "https://api.github.com/users/sebcrozet/followers", "following_url": "https://api.github.com/users/sebcrozet/following{/other_user}", "gists_url": "https://api.github.com/users/sebcrozet/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebcrozet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebcrozet/subscriptions", "organizations_url": "https://api.github.com/users/sebcrozet/orgs", "repos_url": "https://api.github.com/users/sebcrozet/repos", "events_url": "https://api.github.com/users/sebcrozet/events{/privacy}", "received_events_url": "https://api.github.com/users/sebcrozet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e42e32291ea779a30818521e8aea9693899b8188", "url": "https://api.github.com/repos/rust-lang/rust/commits/e42e32291ea779a30818521e8aea9693899b8188", "html_url": "https://github.com/rust-lang/rust/commit/e42e32291ea779a30818521e8aea9693899b8188"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "aacf807a875e8217b119572e83bb839630fcb4f9", "filename": "src/libstd/num/num.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ac0d0a59ee47d9f8027955ca13f545f89bcc687/src%2Flibstd%2Fnum%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ac0d0a59ee47d9f8027955ca13f545f89bcc687/src%2Flibstd%2Fnum%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fnum.rs?ref=8ac0d0a59ee47d9f8027955ca13f545f89bcc687", "patch": "@@ -567,9 +567,8 @@ macro_rules! impl_to_primitive_float_to_float(\n             Some(*self as $DstT)\n         } else {\n             let n = *self as f64;\n-            let min_value: $SrcT = Bounded::min_value();\n             let max_value: $SrcT = Bounded::max_value();\n-            if min_value as f64 <= n && n <= max_value as f64 {\n+            if -max_value as f64 <= n && n <= max_value as f64 {\n                 Some(*self as $DstT)\n             } else {\n                 None"}]}