{"sha": "be0691b02bd739310f6d6518dc10f01b9a692598", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlMDY5MWIwMmJkNzM5MzEwZjZkNjUxOGRjMTBmMDFiOWE2OTI1OTg=", "commit": {"author": {"name": "Thi\u00e9baud Weksteen", "email": "tweek@google.com", "date": "2021-01-22T10:17:45Z"}, "committer": {"name": "Thi\u00e9baud Weksteen", "email": "tweek@google.com", "date": "2021-01-22T12:50:23Z"}, "message": "Handle box with allocator\n\nIn 1.49.0, the definition of Box was modified to support an optional\nAllocator[1]. Adapt the parsing of the `box` keyword to supply the\nexpected number of parameters to the constructor.\n\n[1] https://github.com/rust-lang/rust/commit/f288cd2e179f600fa00c2a407206a12f6c5a91e0", "tree": {"sha": "5969dde061abd29d96d0c74f16d1d65775cb5937", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5969dde061abd29d96d0c74f16d1d65775cb5937"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be0691b02bd739310f6d6518dc10f01b9a692598", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be0691b02bd739310f6d6518dc10f01b9a692598", "html_url": "https://github.com/rust-lang/rust/commit/be0691b02bd739310f6d6518dc10f01b9a692598", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be0691b02bd739310f6d6518dc10f01b9a692598/comments", "author": {"login": "tweksteen", "id": 109376, "node_id": "MDQ6VXNlcjEwOTM3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/109376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tweksteen", "html_url": "https://github.com/tweksteen", "followers_url": "https://api.github.com/users/tweksteen/followers", "following_url": "https://api.github.com/users/tweksteen/following{/other_user}", "gists_url": "https://api.github.com/users/tweksteen/gists{/gist_id}", "starred_url": "https://api.github.com/users/tweksteen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tweksteen/subscriptions", "organizations_url": "https://api.github.com/users/tweksteen/orgs", "repos_url": "https://api.github.com/users/tweksteen/repos", "events_url": "https://api.github.com/users/tweksteen/events{/privacy}", "received_events_url": "https://api.github.com/users/tweksteen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tweksteen", "id": 109376, "node_id": "MDQ6VXNlcjEwOTM3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/109376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tweksteen", "html_url": "https://github.com/tweksteen", "followers_url": "https://api.github.com/users/tweksteen/followers", "following_url": "https://api.github.com/users/tweksteen/following{/other_user}", "gists_url": "https://api.github.com/users/tweksteen/gists{/gist_id}", "starred_url": "https://api.github.com/users/tweksteen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tweksteen/subscriptions", "organizations_url": "https://api.github.com/users/tweksteen/orgs", "repos_url": "https://api.github.com/users/tweksteen/repos", "events_url": "https://api.github.com/users/tweksteen/events{/privacy}", "received_events_url": "https://api.github.com/users/tweksteen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fde4a860aea903a0455a05c1def1d07a6573639b", "url": "https://api.github.com/repos/rust-lang/rust/commits/fde4a860aea903a0455a05c1def1d07a6573639b", "html_url": "https://github.com/rust-lang/rust/commit/fde4a860aea903a0455a05c1def1d07a6573639b"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "d7351d21270193138c6d380e1f894648d4b9dfd3", "filename": "crates/hir_ty/src/infer/expr.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/be0691b02bd739310f6d6518dc10f01b9a692598/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be0691b02bd739310f6d6518dc10f01b9a692598/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs?ref=be0691b02bd739310f6d6518dc10f01b9a692598", "patch": "@@ -491,7 +491,10 @@ impl<'a> InferenceContext<'a> {\n             Expr::Box { expr } => {\n                 let inner_ty = self.infer_expr_inner(*expr, &Expectation::none());\n                 if let Some(box_) = self.resolve_boxed_box() {\n-                    Ty::apply_one(TypeCtor::Adt(box_), inner_ty)\n+                    let mut sb = Substs::build_for_type_ctor(self.db, TypeCtor::Adt(box_));\n+                    sb = sb.push(inner_ty);\n+                    sb = sb.fill(repeat_with(|| self.table.new_type_var()));\n+                    Ty::apply(TypeCtor::Adt(box_), sb.build())\n                 } else {\n                     Ty::Unknown\n                 }"}, {"sha": "16682f76fce29276f8ae15195446cee3bb2952d9", "filename": "crates/hir_ty/src/tests/simple.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/be0691b02bd739310f6d6518dc10f01b9a692598/crates%2Fhir_ty%2Fsrc%2Ftests%2Fsimple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be0691b02bd739310f6d6518dc10f01b9a692598/crates%2Fhir_ty%2Fsrc%2Ftests%2Fsimple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fsimple.rs?ref=be0691b02bd739310f6d6518dc10f01b9a692598", "patch": "@@ -28,6 +28,30 @@ mod boxed {\n     );\n }\n \n+#[test]\n+fn infer_box_with_allocator() {\n+    check_types(\n+        r#\"\n+//- /main.rs crate:main deps:std\n+fn test() {\n+    let x = box 1;\n+    let t = (x, box x, box &1, box [1]);\n+    t;\n+} //^ (Box<i32, {unknown}>, Box<Box<i32, {unknown}>, {unknown}>, Box<&i32, {unknown}>, Box<[i32; _], {unknown}>)\n+\n+//- /std.rs crate:std\n+#[prelude_import] use prelude::*;\n+mod boxed {\n+    #[lang = \"owned_box\"]\n+    pub struct Box<T: ?Sized, A: Allocator> {\n+        inner: *mut T,\n+        allocator: A,\n+    }\n+}\n+\"#,\n+    );\n+}\n+\n #[test]\n fn infer_adt_self() {\n     check_types("}]}