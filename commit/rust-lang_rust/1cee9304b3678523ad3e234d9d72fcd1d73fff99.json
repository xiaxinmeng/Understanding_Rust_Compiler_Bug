{"sha": "1cee9304b3678523ad3e234d9d72fcd1d73fff99", "node_id": "C_kwDOAAsO6NoAKDFjZWU5MzA0YjM2Nzg1MjNhZDNlMjM0ZDlkNzJmY2QxZDczZmZmOTk", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2022-05-22T00:08:38Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2022-05-22T00:08:38Z"}, "message": "Fix generic_const_exprs feature", "tree": {"sha": "1a80318ad922d2359f7216228de7c711f8a23386", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a80318ad922d2359f7216228de7c711f8a23386"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cee9304b3678523ad3e234d9d72fcd1d73fff99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cee9304b3678523ad3e234d9d72fcd1d73fff99", "html_url": "https://github.com/rust-lang/rust/commit/1cee9304b3678523ad3e234d9d72fcd1d73fff99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cee9304b3678523ad3e234d9d72fcd1d73fff99/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7fea94c96769e939ecdc98f368bb6daa330aa0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7fea94c96769e939ecdc98f368bb6daa330aa0b", "html_url": "https://github.com/rust-lang/rust/commit/b7fea94c96769e939ecdc98f368bb6daa330aa0b"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "11d7288eccb2b8d4ad63bad31440e7048b68d3a6", "filename": "crates/core_simd/src/masks.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1cee9304b3678523ad3e234d9d72fcd1d73fff99/crates%2Fcore_simd%2Fsrc%2Fmasks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cee9304b3678523ad3e234d9d72fcd1d73fff99/crates%2Fcore_simd%2Fsrc%2Fmasks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fmasks.rs?ref=1cee9304b3678523ad3e234d9d72fcd1d73fff99", "patch": "@@ -13,10 +13,10 @@\n mod mask_impl;\n \n mod to_bitmask;\n-pub use to_bitmask::{ToBitMask, ToBitMaskArray};\n+pub use to_bitmask::ToBitMask;\n \n #[cfg(feature = \"generic_const_exprs\")]\n-pub use to_bitmask::bitmask_len;\n+pub use to_bitmask::{bitmask_len, ToBitMaskArray};\n \n use crate::simd::{intrinsics, LaneCount, Simd, SimdElement, SimdPartialEq, SupportedLaneCount};\n use core::cmp::Ordering;"}, {"sha": "365ecc0a3251ec0687515ec443c1b8e505e939b2", "filename": "crates/core_simd/src/masks/bitmask.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1cee9304b3678523ad3e234d9d72fcd1d73fff99/crates%2Fcore_simd%2Fsrc%2Fmasks%2Fbitmask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cee9304b3678523ad3e234d9d72fcd1d73fff99/crates%2Fcore_simd%2Fsrc%2Fmasks%2Fbitmask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fmasks%2Fbitmask.rs?ref=1cee9304b3678523ad3e234d9d72fcd1d73fff99", "patch": "@@ -1,7 +1,7 @@\n #![allow(unused_imports)]\n use super::MaskElement;\n use crate::simd::intrinsics;\n-use crate::simd::{LaneCount, Simd, SupportedLaneCount, ToBitMask, ToBitMaskArray};\n+use crate::simd::{LaneCount, Simd, SupportedLaneCount, ToBitMask};\n use core::marker::PhantomData;\n \n /// A mask where each lane is represented by a single bit.\n@@ -115,6 +115,7 @@ where\n         unsafe { Self(intrinsics::simd_bitmask(value), PhantomData) }\n     }\n \n+    #[cfg(feature = \"generic_const_exprs\")]\n     #[inline]\n     #[must_use = \"method returns a new array and does not mutate the original value\"]\n     pub fn to_bitmask_array<const N: usize>(self) -> [u8; N] {\n@@ -124,6 +125,7 @@ where\n         unsafe { core::mem::transmute_copy(&self.0) }\n     }\n \n+    #[cfg(feature = \"generic_const_exprs\")]\n     #[inline]\n     #[must_use = \"method returns a new mask and does not mutate the original value\"]\n     pub fn from_bitmask_array<const N: usize>(bitmask: [u8; N]) -> Self {"}, {"sha": "7ed844de6251189a5329a831f8e0c688c51bb4a0", "filename": "crates/core_simd/src/masks/full_masks.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1cee9304b3678523ad3e234d9d72fcd1d73fff99/crates%2Fcore_simd%2Fsrc%2Fmasks%2Ffull_masks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cee9304b3678523ad3e234d9d72fcd1d73fff99/crates%2Fcore_simd%2Fsrc%2Fmasks%2Ffull_masks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fmasks%2Ffull_masks.rs?ref=1cee9304b3678523ad3e234d9d72fcd1d73fff99", "patch": "@@ -2,7 +2,10 @@\n \n use super::MaskElement;\n use crate::simd::intrinsics;\n-use crate::simd::{LaneCount, Simd, SupportedLaneCount, ToBitMask, ToBitMaskArray};\n+use crate::simd::{LaneCount, Simd, SupportedLaneCount, ToBitMask};\n+\n+#[cfg(feature = \"generic_const_exprs\")]\n+use crate::simd::ToBitMaskArray;\n \n #[repr(transparent)]\n pub struct Mask<T, const LANES: usize>(Simd<T, LANES>)\n@@ -139,6 +142,7 @@ where\n         unsafe { Mask(intrinsics::simd_cast(self.0)) }\n     }\n \n+    #[cfg(feature = \"generic_const_exprs\")]\n     #[inline]\n     #[must_use = \"method returns a new array and does not mutate the original value\"]\n     pub fn to_bitmask_array<const N: usize>(self) -> [u8; N]\n@@ -171,6 +175,7 @@ where\n         }\n     }\n \n+    #[cfg(feature = \"generic_const_exprs\")]\n     #[inline]\n     #[must_use = \"method returns a new mask and does not mutate the original value\"]\n     pub fn from_bitmask_array<const N: usize>(mut bitmask: [u8; N]) -> Self"}, {"sha": "954f88ea51118d31cc43bd7722bac078dc0c923e", "filename": "crates/core_simd/src/masks/to_bitmask.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1cee9304b3678523ad3e234d9d72fcd1d73fff99/crates%2Fcore_simd%2Fsrc%2Fmasks%2Fto_bitmask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cee9304b3678523ad3e234d9d72fcd1d73fff99/crates%2Fcore_simd%2Fsrc%2Fmasks%2Fto_bitmask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fmasks%2Fto_bitmask.rs?ref=1cee9304b3678523ad3e234d9d72fcd1d73fff99", "patch": "@@ -38,6 +38,7 @@ pub unsafe trait ToBitMask: Sealed {\n /// # Safety\n /// This trait is `unsafe` and sealed, since the `BYTES` value must match the number of lanes in\n /// the mask.\n+#[cfg(feature = \"generic_const_exprs\")]\n pub unsafe trait ToBitMaskArray: Sealed {\n     /// The length of the bitmask array.\n     const BYTES: usize;\n@@ -78,10 +79,12 @@ impl_integer_intrinsic! {\n }\n \n /// Returns the minimum numnber of bytes in a bitmask with `lanes` lanes.\n+#[cfg(feature = \"generic_const_exprs\")]\n pub const fn bitmask_len(lanes: usize) -> usize {\n     (lanes + 7) / 8\n }\n \n+#[cfg(feature = \"generic_const_exprs\")]\n unsafe impl<T: MaskElement, const LANES: usize> ToBitMaskArray for Mask<T, LANES>\n where\n     LaneCount<LANES>: SupportedLaneCount,"}, {"sha": "673d0db93fee5c65544734858431a55ebf8c78a1", "filename": "crates/core_simd/tests/masks.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1cee9304b3678523ad3e234d9d72fcd1d73fff99/crates%2Fcore_simd%2Ftests%2Fmasks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cee9304b3678523ad3e234d9d72fcd1d73fff99/crates%2Fcore_simd%2Ftests%2Fmasks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Ftests%2Fmasks.rs?ref=1cee9304b3678523ad3e234d9d72fcd1d73fff99", "patch": "@@ -123,6 +123,7 @@ macro_rules! test_mask_api {\n                 cast_impl::<isize>();\n             }\n \n+            #[cfg(feature = \"generic_const_exprs\")]\n             #[test]\n             fn roundtrip_bitmask_array_conversion() {\n                 use core_simd::ToBitMaskArray;"}]}