{"sha": "f4e107e6c76701047bd16840dae9023e92a42fdc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0ZTEwN2U2Yzc2NzAxMDQ3YmQxNjg0MGRhZTkwMjNlOTJhNDJmZGM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-11-13T19:30:37Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-11-13T19:30:37Z"}, "message": "whitespace police 2", "tree": {"sha": "66a0c37a1bcf7c38dc45d0accb82c845d4d9a552", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66a0c37a1bcf7c38dc45d0accb82c845d4d9a552"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4e107e6c76701047bd16840dae9023e92a42fdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4e107e6c76701047bd16840dae9023e92a42fdc", "html_url": "https://github.com/rust-lang/rust/commit/f4e107e6c76701047bd16840dae9023e92a42fdc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4e107e6c76701047bd16840dae9023e92a42fdc/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2f93fd290f6ab7cd1b0b0af78487c25aec0db89", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2f93fd290f6ab7cd1b0b0af78487c25aec0db89", "html_url": "https://github.com/rust-lang/rust/commit/d2f93fd290f6ab7cd1b0b0af78487c25aec0db89"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "93f65b5ad0e1de2d705604550fdf31f1d9f25e3c", "filename": "src/librustc/middle/trans/deriving.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f4e107e6c76701047bd16840dae9023e92a42fdc/src%2Flibrustc%2Fmiddle%2Ftrans%2Fderiving.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4e107e6c76701047bd16840dae9023e92a42fdc/src%2Flibrustc%2Fmiddle%2Ftrans%2Fderiving.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fderiving.rs?ref=f4e107e6c76701047bd16840dae9023e92a42fdc", "patch": "@@ -23,8 +23,8 @@ use syntax::ast_util::local_def;\n \n /// The kind of deriving method this is.\n enum DerivingKind {\n-    BoolKind,\t// fn f(&self, other: &other) -> bool\n-    UnitKind,\t// fn f(&self) -> ()\n+    BoolKind,   // fn f(&self, other: &other) -> bool\n+    UnitKind,   // fn f(&self) -> ()\n }\n \n impl DerivingKind {"}]}