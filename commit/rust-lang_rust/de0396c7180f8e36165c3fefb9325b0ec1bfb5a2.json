{"sha": "de0396c7180f8e36165c3fefb9325b0ec1bfb5a2", "node_id": "C_kwDOAAsO6NoAKGRlMDM5NmM3MTgwZjhlMzYxNjVjM2ZlZmI5MzI1YjBlYzFiZmI1YTI", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-10-13T15:44:31Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-10-13T15:44:47Z"}, "message": "Ensure enum cast moves", "tree": {"sha": "c43eca07016e503d80a157771e3bab6f74f214b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c43eca07016e503d80a157771e3bab6f74f214b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de0396c7180f8e36165c3fefb9325b0ec1bfb5a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de0396c7180f8e36165c3fefb9325b0ec1bfb5a2", "html_url": "https://github.com/rust-lang/rust/commit/de0396c7180f8e36165c3fefb9325b0ec1bfb5a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de0396c7180f8e36165c3fefb9325b0ec1bfb5a2/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4891d57f7aab37b5d6a84f2901c0bb8903111d53", "url": "https://api.github.com/repos/rust-lang/rust/commits/4891d57f7aab37b5d6a84f2901c0bb8903111d53", "html_url": "https://github.com/rust-lang/rust/commit/4891d57f7aab37b5d6a84f2901c0bb8903111d53"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "3dafdcb788710ba99c583c10b4f050d02324b8f4", "filename": "compiler/rustc_mir_build/src/build/expr/as_rvalue.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/de0396c7180f8e36165c3fefb9325b0ec1bfb5a2/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de0396c7180f8e36165c3fefb9325b0ec1bfb5a2/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=de0396c7180f8e36165c3fefb9325b0ec1bfb5a2", "patch": "@@ -197,13 +197,13 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                 // create all the steps directly in MIR with operations all backends need to support anyway.\n                 let (source, ty) = if let ty::Adt(adt_def, ..) = source.ty.kind() && adt_def.is_enum() {\n                     let discr_ty = adt_def.repr().discr_type().to_ty(this.tcx);\n-                    let place = unpack!(block = this.as_place(block, source));\n+                    let temp = unpack!(block = this.as_temp(block, scope, source, Mutability::Not));\n                     let discr = this.temp(discr_ty, source.span);\n                     this.cfg.push_assign(\n                         block,\n                         source_info,\n                         discr,\n-                        Rvalue::Discriminant(place),\n+                        Rvalue::Discriminant(temp.into()),\n                     );\n \n                     (Operand::Move(discr), discr_ty)"}]}