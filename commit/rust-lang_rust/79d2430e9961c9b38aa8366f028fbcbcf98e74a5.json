{"sha": "79d2430e9961c9b38aa8366f028fbcbcf98e74a5", "node_id": "C_kwDOAAsO6NoAKDc5ZDI0MzBlOTk2MWM5YjM4YWE4MzY2ZjAyOGZiY2JjZjk4ZTc0YTU", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2023-02-12T18:37:25Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2023-02-12T18:37:25Z"}, "message": "Add a doc note about why `Chain` is not `ExactSizeIterator`", "tree": {"sha": "a23277cb98b567583286a18df847555ff50a66d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a23277cb98b567583286a18df847555ff50a66d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79d2430e9961c9b38aa8366f028fbcbcf98e74a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79d2430e9961c9b38aa8366f028fbcbcf98e74a5", "html_url": "https://github.com/rust-lang/rust/commit/79d2430e9961c9b38aa8366f028fbcbcf98e74a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79d2430e9961c9b38aa8366f028fbcbcf98e74a5/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50d3ba5bcbf5c7e13d4ce068d3339710701dd603", "url": "https://api.github.com/repos/rust-lang/rust/commits/50d3ba5bcbf5c7e13d4ce068d3339710701dd603", "html_url": "https://github.com/rust-lang/rust/commit/50d3ba5bcbf5c7e13d4ce068d3339710701dd603"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "908830d8a95141763e1db55464e48faa9e8ee5c4", "filename": "library/core/src/iter/traits/exact_size.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/79d2430e9961c9b38aa8366f028fbcbcf98e74a5/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fexact_size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d2430e9961c9b38aa8366f028fbcbcf98e74a5/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fexact_size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fexact_size.rs?ref=79d2430e9961c9b38aa8366f028fbcbcf98e74a5", "patch": "@@ -21,6 +21,16 @@\n ///\n /// [`len`]: ExactSizeIterator::len\n ///\n+/// # When *shouldn't* an adapter be `ExactSizeIterator`?\n+///\n+/// If an adapter makes an iterator *longer*, then it's usually incorrect for\n+/// that adapter to implement `ExactSizeIterator`.  The inner exact-sized\n+/// iterator might already be `usize::MAX`-long, and thus the length of the\n+/// longer adapted iterator would no longer be exactly representable in `usize`.\n+///\n+/// This is why [`Chain<A, B>`](crate::iter::Chain) isn't `ExactSizeIterator`,\n+/// even when `A` and `B` are both `ExactSizeIterator`.\n+///\n /// # Examples\n ///\n /// Basic usage:"}, {"sha": "af02848233d997cab74c88d8052865e707ce3894", "filename": "library/core/src/iter/traits/marker.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/79d2430e9961c9b38aa8366f028fbcbcf98e74a5/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d2430e9961c9b38aa8366f028fbcbcf98e74a5/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fmarker.rs?ref=79d2430e9961c9b38aa8366f028fbcbcf98e74a5", "patch": "@@ -31,6 +31,17 @@ impl<I: FusedIterator + ?Sized> FusedIterator for &mut I {}\n /// The iterator must produce exactly the number of elements it reported\n /// or diverge before reaching the end.\n ///\n+/// # When *shouldn't* an adapter be `TrustedLen`?\n+///\n+/// If an adapter makes an iterator *shorter* by a given amount, then it's\n+/// usually incorrect for that adapter to implement `TrustedLen`.  The inner\n+/// iterator might return more than `usize::MAX` items, but there's no way to\n+/// know what `k` elements less than that will be, since the `size_hint` from\n+/// the inner iterator has already saturated and lost that information.\n+///\n+/// This is why [`Skip<I>`](crate::iter::Skip) isn't `TrustedLen`, even when\n+/// `I` implements `TrustedLen`.\n+///\n /// # Safety\n ///\n /// This trait must only be implemented when the contract is upheld. Consumers"}]}