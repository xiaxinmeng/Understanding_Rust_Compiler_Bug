{"sha": "4faf8fad106bbcff03a22b64cba57b8c09c4bb6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmYWY4ZmFkMTA2YmJjZmYwM2EyMmI2NGNiYTU3YjhjMDljNGJiNmU=", "commit": {"author": {"name": "Andrew Poelstra", "email": "apoelstra@wpsoftware.net", "date": "2018-10-15T18:38:07Z"}, "committer": {"name": "Andrew Poelstra", "email": "apoelstra@wpsoftware.net", "date": "2018-10-15T18:38:07Z"}, "message": "cargo-miri: support running unit tests for libraries as well as test binaries", "tree": {"sha": "2e0dd965e1c4436496cc1a2ea412b185f78beb35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e0dd965e1c4436496cc1a2ea412b185f78beb35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4faf8fad106bbcff03a22b64cba57b8c09c4bb6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4faf8fad106bbcff03a22b64cba57b8c09c4bb6e", "html_url": "https://github.com/rust-lang/rust/commit/4faf8fad106bbcff03a22b64cba57b8c09c4bb6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4faf8fad106bbcff03a22b64cba57b8c09c4bb6e/comments", "author": {"login": "apoelstra", "id": 1351933, "node_id": "MDQ6VXNlcjEzNTE5MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apoelstra", "html_url": "https://github.com/apoelstra", "followers_url": "https://api.github.com/users/apoelstra/followers", "following_url": "https://api.github.com/users/apoelstra/following{/other_user}", "gists_url": "https://api.github.com/users/apoelstra/gists{/gist_id}", "starred_url": "https://api.github.com/users/apoelstra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions", "organizations_url": "https://api.github.com/users/apoelstra/orgs", "repos_url": "https://api.github.com/users/apoelstra/repos", "events_url": "https://api.github.com/users/apoelstra/events{/privacy}", "received_events_url": "https://api.github.com/users/apoelstra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apoelstra", "id": 1351933, "node_id": "MDQ6VXNlcjEzNTE5MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apoelstra", "html_url": "https://github.com/apoelstra", "followers_url": "https://api.github.com/users/apoelstra/followers", "following_url": "https://api.github.com/users/apoelstra/following{/other_user}", "gists_url": "https://api.github.com/users/apoelstra/gists{/gist_id}", "starred_url": "https://api.github.com/users/apoelstra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions", "organizations_url": "https://api.github.com/users/apoelstra/orgs", "repos_url": "https://api.github.com/users/apoelstra/repos", "events_url": "https://api.github.com/users/apoelstra/events{/privacy}", "received_events_url": "https://api.github.com/users/apoelstra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e0180d4e7c3ad320c10177d32a361951e30dde7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e0180d4e7c3ad320c10177d32a361951e30dde7", "html_url": "https://github.com/rust-lang/rust/commit/8e0180d4e7c3ad320c10177d32a361951e30dde7"}], "stats": {"total": 46, "additions": 30, "deletions": 16}, "files": [{"sha": "4cd20901333071701197e661bd9a231ead6f7bf4", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 30, "deletions": 16, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/4faf8fad106bbcff03a22b64cba57b8c09c4bb6e/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4faf8fad106bbcff03a22b64cba57b8c09c4bb6e/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=4faf8fad106bbcff03a22b64cba57b8c09c4bb6e", "patch": "@@ -97,24 +97,38 @@ fn main() {\n             let kind = target.kind.get(0).expect(\n                 \"badly formatted cargo metadata: target::kind is an empty array\",\n             );\n-            if test && kind == \"test\" {\n-                if let Err(code) = process(\n-                    vec![\"--test\".to_string(), target.name].into_iter().chain(\n-                        args,\n-                    ),\n-                )\n-                {\n-                    std::process::exit(code);\n+            match (test, &kind[..]) {\n+                (true, \"test\") => {\n+                    if let Err(code) = process(\n+                        vec![\"--test\".to_string(), target.name].into_iter().chain(\n+                            args,\n+                        ),\n+                    )\n+                    {\n+                        std::process::exit(code);\n+                    }\n                 }\n-            } else if !test && kind == \"bin\" {\n-                if let Err(code) = process(\n-                    vec![\"--bin\".to_string(), target.name].into_iter().chain(\n-                        args,\n-                    ),\n-                )\n-                {\n-                    std::process::exit(code);\n+                (true, \"lib\") => {\n+                    if let Err(code) = process(\n+                        vec![\"--\".to_string(), \"--test\".to_string()].into_iter().chain(\n+                            args,\n+                        ),\n+                    )\n+                    {\n+                        std::process::exit(code);\n+                    }\n                 }\n+                (false, \"bin\") => {\n+                    if let Err(code) = process(\n+                        vec![\"--bin\".to_string(), target.name].into_iter().chain(\n+                            args,\n+                        ),\n+                    )\n+                    {\n+                        std::process::exit(code);\n+                    }\n+                }\n+                _ => {}\n             }\n         }\n     } else {"}]}