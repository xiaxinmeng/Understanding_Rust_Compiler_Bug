{"sha": "76d1f93896fb642cd27cbe8ef481b66e974dbdf9", "node_id": "C_kwDOAAsO6NoAKDc2ZDFmOTM4OTZmYjY0MmNkMjdjYmU4ZWY0ODFiNjZlOTc0ZGJkZjk", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-03-06T07:10:23Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-05-02T10:30:09Z"}, "message": "update and add a few tests", "tree": {"sha": "b0d2e91cf2772020af75eb631874fdb3aaffb11a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0d2e91cf2772020af75eb631874fdb3aaffb11a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76d1f93896fb642cd27cbe8ef481b66e974dbdf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76d1f93896fb642cd27cbe8ef481b66e974dbdf9", "html_url": "https://github.com/rust-lang/rust/commit/76d1f93896fb642cd27cbe8ef481b66e974dbdf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ff3903643b530c9029e8f2c6c6956fda8f21d77", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ff3903643b530c9029e8f2c6c6956fda8f21d77", "html_url": "https://github.com/rust-lang/rust/commit/8ff3903643b530c9029e8f2c6c6956fda8f21d77"}], "stats": {"total": 51, "additions": 48, "deletions": 3}, "files": [{"sha": "fb90d309fcde7f9b42ed570ab96ec22c8a32290c", "filename": "compiler/rustc_ast/src/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast.rs?ref=76d1f93896fb642cd27cbe8ef481b66e974dbdf9", "patch": "@@ -1814,7 +1814,7 @@ pub enum LitKind {\n     /// A byte string (`b\"foo\"`). Not stored as a symbol because it might be\n     /// non-utf8, and symbols only allow utf8 strings.\n     ByteStr(Lrc<[u8]>, StrStyle),\n-    /// A C String (`c\"foo\"`).\n+    /// A C String (`c\"foo\"`). Guaranteed only have `\\0` in the end.\n     CStr(Lrc<[u8]>, StrStyle),\n     /// A byte char (`b'f'`).\n     Byte(u8),"}, {"sha": "5fa0ea354550a01534ae73c50d95bee96dbdfff3", "filename": "compiler/rustc_ast/src/util/literal.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/compiler%2Frustc_ast%2Fsrc%2Futil%2Fliteral.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/compiler%2Frustc_ast%2Fsrc%2Futil%2Fliteral.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Futil%2Fliteral.rs?ref=76d1f93896fb642cd27cbe8ef481b66e974dbdf9", "patch": "@@ -181,7 +181,7 @@ impl LitKind {\n                     }\n                 });\n                 error?;\n-                buf.push(b'\\0');\n+                buf.push(0);\n                 LitKind::CStr(buf.into(), StrStyle::Cooked)\n             }\n             token::CStrRaw(n) => {\n@@ -204,7 +204,7 @@ impl LitKind {\n                     }\n                 });\n                 error?;\n-                buf.push(b'\\0');\n+                buf.push(0);\n                 LitKind::CStr(buf.into(), StrStyle::Raw(n))\n             }\n             token::Err => LitKind::Err,"}, {"sha": "9defc6603e837b7b9c1dca57cf513b0a8c86265c", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=76d1f93896fb642cd27cbe8ef481b66e974dbdf9", "patch": "@@ -1,3 +1,4 @@\n+use ast::token;\n use rustc_ast as ast;\n use rustc_ast::visit::{self, AssocCtxt, FnCtxt, FnKind, Visitor};\n use rustc_ast::{attr, AssocConstraint, AssocConstraintKind, NodeId};"}, {"sha": "45f462a63ee8c523e33bd1b08cf6dc9830e6f8f2", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=76d1f93896fb642cd27cbe8ef481b66e974dbdf9", "patch": "@@ -313,6 +313,8 @@ declare_features! (\n     (active, async_fn_in_trait, \"1.66.0\", Some(91611), None),\n     /// Treat `extern \"C\"` function as nounwind.\n     (active, c_unwind, \"1.52.0\", Some(74990), None),\n+    /// Allows `c\"foo\"` literals.\n+    (active, c_str_literals, \"CURRENT_RUSTC_VERSION\", Some(105723), None),\n     /// Allows using C-variadics.\n     (active, c_variadic, \"1.34.0\", Some(44930), None),\n     /// Allows the use of `#[cfg(sanitize = \"option\")]`; set when -Zsanitizer is used."}, {"sha": "59549435233c53dad8d2cc84caa85dc35ed927a3", "filename": "compiler/rustc_mir_build/src/build/expr/as_constant.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_constant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_constant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_constant.rs?ref=76d1f93896fb642cd27cbe8ef481b66e974dbdf9", "patch": "@@ -146,6 +146,12 @@ pub(crate) fn lit_to_mir_constant<'tcx>(\n             let id = tcx.allocate_bytes(data);\n             ConstValue::Scalar(Scalar::from_pointer(id.into(), &tcx))\n         }\n+        (ast::LitKind::CStr(data, _), ty::Ref(_, inner_ty, _)) if matches!(inner_ty.kind(), ty::Adt(def, _) if Some(def.did()) == tcx.lang_items().c_str()) =>\n+        {\n+            let allocation = Allocation::from_bytes_byte_aligned_immutable(data as &[u8]);\n+            let allocation = tcx.mk_const_alloc(allocation);\n+            ConstValue::Slice { data: allocation, start: 0, end: data.len() }\n+        }\n         (ast::LitKind::Byte(n), ty::Uint(ty::UintTy::U8)) => {\n             ConstValue::Scalar(Scalar::from_uint(*n, Size::from_bytes(1)))\n         }"}, {"sha": "f83aa504b90e6bd7140d1c3cacb8c65dbc6f0910", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=76d1f93896fb642cd27cbe8ef481b66e974dbdf9", "patch": "@@ -441,6 +441,7 @@ symbols! {\n         bridge,\n         bswap,\n         c_str,\n+        c_str_literals,\n         c_unwind,\n         c_variadic,\n         call,"}, {"sha": "e4b07ab8108e09f5d1a8839bf0c8f94d45d31290", "filename": "tests/ui/rfcs/rfc-3348-c-string-literals/basic.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/tests%2Fui%2Frfcs%2Frfc-3348-c-string-literals%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/tests%2Fui%2Frfcs%2Frfc-3348-c-string-literals%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frfcs%2Frfc-3348-c-string-literals%2Fbasic.rs?ref=76d1f93896fb642cd27cbe8ef481b66e974dbdf9", "patch": "@@ -0,0 +1,7 @@\n+// run-pass\n+\n+#![feature(c_str_literals)]\n+\n+fn main() {\n+    assert_eq!(b\"test\\0\", c\"test\".to_bytes_with_nul());\n+}"}, {"sha": "674b0c5e233515735d811e3c8630720c0b9a3045", "filename": "tests/ui/rfcs/rfc-3348-c-string-literals/gate.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/tests%2Fui%2Frfcs%2Frfc-3348-c-string-literals%2Fgate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/tests%2Fui%2Frfcs%2Frfc-3348-c-string-literals%2Fgate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frfcs%2Frfc-3348-c-string-literals%2Fgate.rs?ref=76d1f93896fb642cd27cbe8ef481b66e974dbdf9", "patch": "@@ -0,0 +1,7 @@\n+fn main() {\n+    c\"foo\";\n+    //~^ ERROR: `c\"..\"` literals are experimental\n+\n+    m!(c\"test\");\n+    //~^ ERROR: `c\"..\"` literals are experimental\n+}"}, {"sha": "bc0c537aada839c55f02caada18e79a432af73f4", "filename": "tests/ui/rfcs/rfc-3348-c-string-literals/gate.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/tests%2Fui%2Frfcs%2Frfc-3348-c-string-literals%2Fgate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/tests%2Fui%2Frfcs%2Frfc-3348-c-string-literals%2Fgate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frfcs%2Frfc-3348-c-string-literals%2Fgate.stderr?ref=76d1f93896fb642cd27cbe8ef481b66e974dbdf9", "patch": "@@ -0,0 +1,21 @@\n+error[E0658]: `c\"..\"` literals are experimental\n+  --> $DIR/gate.rs:8:5\n+   |\n+LL |     c\"foo\";\n+   |     ^^^^^^\n+   |\n+   = note: see issue #105723 <https://github.com/rust-lang/rust/issues/105723> for more information\n+   = help: add `#![feature(c_str_literals)]` to the crate attributes to enable\n+\n+error[E0658]: `c\"..\"` literals are experimental\n+  --> $DIR/gate.rs:11:8\n+   |\n+LL |     m!(c\"test\");\n+   |        ^^^^^^^\n+   |\n+   = note: see issue #105723 <https://github.com/rust-lang/rust/issues/105723> for more information\n+   = help: add `#![feature(c_str_literals)]` to the crate attributes to enable\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "f6c86a1ba8762358537827376cbffc5c3f4508e9", "filename": "tests/ui/rfcs/rfc-3348-c-string-literals/no-nuls.rs", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/tests%2Fui%2Frfcs%2Frfc-3348-c-string-literals%2Fno-nuls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/tests%2Fui%2Frfcs%2Frfc-3348-c-string-literals%2Fno-nuls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frfcs%2Frfc-3348-c-string-literals%2Fno-nuls.rs?ref=76d1f93896fb642cd27cbe8ef481b66e974dbdf9"}, {"sha": "8a1669b285adaaf14161a49780a7a61dcf4673c9", "filename": "tests/ui/rfcs/rfc-3348-c-string-literals/no-nuls.stderr", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/tests%2Fui%2Frfcs%2Frfc-3348-c-string-literals%2Fno-nuls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/76d1f93896fb642cd27cbe8ef481b66e974dbdf9/tests%2Fui%2Frfcs%2Frfc-3348-c-string-literals%2Fno-nuls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frfcs%2Frfc-3348-c-string-literals%2Fno-nuls.stderr?ref=76d1f93896fb642cd27cbe8ef481b66e974dbdf9"}]}