{"sha": "b27d5233bb3d68ae27e97879c85e5a8851d0501e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyN2Q1MjMzYmIzZDY4YWUyN2U5Nzg3OWM4NWU1YTg4NTFkMDUwMWU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2020-08-12T10:31:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-12T10:31:17Z"}, "message": "Merge pull request #5716 from jonas-schievink/musl\n\nFix build on musl and test it in CI", "tree": {"sha": "0e905210a9e04cd6b8a2f8a09d724ce7cc9ed6f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e905210a9e04cd6b8a2f8a09d724ce7cc9ed6f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b27d5233bb3d68ae27e97879c85e5a8851d0501e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfM8T1CRBK7hj4Ov3rIwAAdHIIAIQKHHcBaA31TtGX4Alg/PzL\nSt1799Y5QAYz8jzpkzB7AMl4Fsowvpz4/0Moy079qn4RlHzeNha/6K+yQL0Z0XRk\nDjCjjj+Iy2mCyZLILtxy6QPd4czgQ70iS8/SpdjI1TfxHiiv1zGep9H5zEDFl+mo\ncgkAA4tZ/Pi5WZPJKJZjxOviq+hW6Q/C2WVy4vlLYOJmLu5w0UWsZK7oCE/2VtKr\nICU0bbLYey+bDOXqy5jinu86wBlNzNyGRIWnCqguAs4e7/yewewy5pGi6Cbwm2lW\nA4s3eHunnLiLF1RxJ6Onk1veuwU56f8ekyTjZ0JBBIAuvcljXr6eiXV6iF1eP0Y=\n=VwRA\n-----END PGP SIGNATURE-----\n", "payload": "tree 0e905210a9e04cd6b8a2f8a09d724ce7cc9ed6f5\nparent 87429768bd6cbe73a818e73ac1aaee65a8b59ec5\nparent 67b2b3d0ce59fe082b442de30627c3386048eaca\nauthor Jonas Schievink <jonas.schievink@ferrous-systems.com> 1597228277 +0200\ncommitter GitHub <noreply@github.com> 1597228277 +0200\n\nMerge pull request #5716 from jonas-schievink/musl\n\nFix build on musl and test it in CI"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b27d5233bb3d68ae27e97879c85e5a8851d0501e", "html_url": "https://github.com/rust-lang/rust/commit/b27d5233bb3d68ae27e97879c85e5a8851d0501e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b27d5233bb3d68ae27e97879c85e5a8851d0501e/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87429768bd6cbe73a818e73ac1aaee65a8b59ec5", "url": "https://api.github.com/repos/rust-lang/rust/commits/87429768bd6cbe73a818e73ac1aaee65a8b59ec5", "html_url": "https://github.com/rust-lang/rust/commit/87429768bd6cbe73a818e73ac1aaee65a8b59ec5"}, {"sha": "67b2b3d0ce59fe082b442de30627c3386048eaca", "url": "https://api.github.com/repos/rust-lang/rust/commits/67b2b3d0ce59fe082b442de30627c3386048eaca", "html_url": "https://github.com/rust-lang/rust/commit/67b2b3d0ce59fe082b442de30627c3386048eaca"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "f977c88bee70a3743bee3551cbda3579b9577ba7", "filename": ".github/workflows/ci.yaml", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b27d5233bb3d68ae27e97879c85e5a8851d0501e/.github%2Fworkflows%2Fci.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/b27d5233bb3d68ae27e97879c85e5a8851d0501e/.github%2Fworkflows%2Fci.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yaml?ref=b27d5233bb3d68ae27e97879c85e5a8851d0501e", "patch": "@@ -88,11 +88,14 @@ jobs:\n       if: matrix.os == 'windows-latest'\n       run: Remove-Item ./target/debug/xtask.exe, ./target/debug/deps/xtask.exe\n \n-  # Weird target to catch non-portable code\n-  rust-power:\n-    name: Rust Power\n+  # Weird targets to catch non-portable code\n+  rust-cross:\n+    name: Rust Cross\n     runs-on: ubuntu-latest\n \n+    env:\n+      targets: \"powerpc-unknown-linux-gnu x86_64-unknown-linux-musl\"\n+\n     steps:\n     - name: Checkout repository\n       uses: actions/checkout@v2\n@@ -103,7 +106,9 @@ jobs:\n         toolchain: stable\n         profile: minimal\n         override: true\n-        target: 'powerpc-unknown-linux-gnu'\n+\n+    - name: Install Rust targets\n+      run: rustup target add ${{ env.targets }}\n \n     - name: Cache cargo directories\n       uses: actions/cache@v2\n@@ -114,7 +119,10 @@ jobs:\n         key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}\n \n     - name: Check\n-      run: cargo check --target=powerpc-unknown-linux-gnu --all-targets\n+      run: |\n+        for target in ${{ env.targets }}; do\n+          cargo check --target=$target --all-targets\n+        done\n \n   typescript:\n     name: TypeScript"}, {"sha": "26588916254f082c22aebdb5e6b879333c8f2561", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b27d5233bb3d68ae27e97879c85e5a8851d0501e/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/b27d5233bb3d68ae27e97879c85e5a8851d0501e/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=b27d5233bb3d68ae27e97879c85e5a8851d0501e", "patch": "@@ -852,9 +852,9 @@ dependencies = [\n \n [[package]]\n name = \"perf-event-open-sys\"\n-version = \"0.3.1\"\n+version = \"0.3.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"95db63e37862bc1b842135d2234ef9418f222cc660c6752f45e7cf9ddfb97f96\"\n+checksum = \"83e7183862f36d10263d0a1ccaef50fef734ade948bf026afd1bd97355c78273\"\n dependencies = [\n  \"libc\",\n ]"}, {"sha": "83390212ae0bbc81691430c2a332d2eecdd9725e", "filename": "crates/ra_prof/src/memory_usage.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b27d5233bb3d68ae27e97879c85e5a8851d0501e/crates%2Fra_prof%2Fsrc%2Fmemory_usage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b27d5233bb3d68ae27e97879c85e5a8851d0501e/crates%2Fra_prof%2Fsrc%2Fmemory_usage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2Fsrc%2Fmemory_usage.rs?ref=b27d5233bb3d68ae27e97879c85e5a8851d0501e", "patch": "@@ -24,7 +24,7 @@ impl std::ops::Sub for MemoryUsage {\n impl MemoryUsage {\n     pub fn current() -> MemoryUsage {\n         cfg_if! {\n-            if #[cfg(target_os = \"linux\")] {\n+            if #[cfg(all(target_os = \"linux\", target_env = \"gnu\"))] {\n                 // Note: This is incredibly slow.\n                 let alloc = unsafe { libc::mallinfo() }.uordblks as isize;\n                 MemoryUsage { allocated: Bytes(alloc) }"}]}