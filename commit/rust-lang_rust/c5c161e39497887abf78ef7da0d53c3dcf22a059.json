{"sha": "c5c161e39497887abf78ef7da0d53c3dcf22a059", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1YzE2MWUzOTQ5Nzg4N2FiZjc4ZWY3ZGEwZDUzYzNkY2YyMmEwNTk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-04T11:49:04Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-04T11:49:04Z"}, "message": "match on type directlty", "tree": {"sha": "bc5695c8899e885a11a09ff0d3d05a61066fa1cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc5695c8899e885a11a09ff0d3d05a61066fa1cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5c161e39497887abf78ef7da0d53c3dcf22a059", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5c161e39497887abf78ef7da0d53c3dcf22a059", "html_url": "https://github.com/rust-lang/rust/commit/c5c161e39497887abf78ef7da0d53c3dcf22a059", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5c161e39497887abf78ef7da0d53c3dcf22a059/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64967b693cb2692f0c3f770a66bbde7eaa38153e", "url": "https://api.github.com/repos/rust-lang/rust/commits/64967b693cb2692f0c3f770a66bbde7eaa38153e", "html_url": "https://github.com/rust-lang/rust/commit/64967b693cb2692f0c3f770a66bbde7eaa38153e"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "772cbcf9447ef9e688e4dd182dfb583917db147d", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c5c161e39497887abf78ef7da0d53c3dcf22a059/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5c161e39497887abf78ef7da0d53c3dcf22a059/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=c5c161e39497887abf78ef7da0d53c3dcf22a059", "patch": "@@ -264,10 +264,11 @@ impl<'rt, 'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>>\n         variant_id: VariantIdx,\n         new_op: OpTy<'tcx, M::PointerTag>\n     ) -> EvalResult<'tcx> {\n-        let name = match old_op.layout.ty.ty_adt_def() {\n-            Some(def) => PathElem::Variant(def.variants[variant_id].ident.name),\n-            // Generators also have variants but no def\n-            None => PathElem::GeneratoreState(variant_id),\n+        let name = match old_op.layout.ty.sty {\n+            ty::Adt(adt, _) => PathElem::Variant(adt.variants[variant_id].ident.name),\n+            // Generators also have variants\n+            ty::Generator(..) => PathElem::GeneratoreState(variant_id),\n+            _ => bug!(\"Unexpected type with variant: {:?}\", old_op.layout.ty),\n         };\n         self.visit_elem(new_op, name)\n     }"}]}