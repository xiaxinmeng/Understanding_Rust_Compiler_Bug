{"sha": "c18292f6a3d97d51f8a1950fa121d4f0a4c52f19", "node_id": "C_kwDOAAsO6NoAKGMxODI5MmY2YTNkOTdkNTFmOGExOTUwZmExMjFkNGYwYTRjNTJmMTk", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-08-30T05:56:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-30T05:56:52Z"}, "message": "Rollup merge of #101123 - JohnTitor:rm-register-attr, r=TaKO8Ki\n\nRemove `register_attr` feature\n\nCloses #66080\n\nSigned-off-by: Yuki Okushi <jtitor@2k36.org>", "tree": {"sha": "617eebca1d6bd84f36f5c0ba6c2b4bc11db601c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/617eebca1d6bd84f36f5c0ba6c2b4bc11db601c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjDaakCRBK7hj4Ov3rIwAAy1UIAKo6ITdwpYd0yu5LX7zzIfqD\nvpHNUOFNV+NymGsI3AG3MjoRcTDE65BqiapVaYZ3PrduyVyEJXCa7/f9cit7WulA\nezkxHBiKt1j2A6zUqTiVi89TsIr82EGKB3/ImcZcw77PKiduMItoPSVt3Y19uhj4\nHOMTayia4hg5JayEA9lZEjQlgqT04otOCGfqTPVwSfLEzDui+f9U+ZtHhEeSCgdA\nehNCqMociFRURY8/Gp9Bc6R76Wc27NbYxHUmUoY15R/tvyFELRmfGdmluAFxoSJk\nPuyb40EuRqZyza8xzukIF9g7pB48PneP7lfsBEUD8Wom62Q6r5reggTVR/iF2I0=\n=ZlyP\n-----END PGP SIGNATURE-----\n", "payload": "tree 617eebca1d6bd84f36f5c0ba6c2b4bc11db601c6\nparent 81f3841cfb5eae52d7914dfebb6a55b5951c5c3c\nparent 382fa624268538eb3b618a48417d5750b0e9c456\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1661839012 +0530\ncommitter GitHub <noreply@github.com> 1661839012 +0530\n\nRollup merge of #101123 - JohnTitor:rm-register-attr, r=TaKO8Ki\n\nRemove `register_attr` feature\n\nCloses #66080\n\nSigned-off-by: Yuki Okushi <jtitor@2k36.org>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19", "html_url": "https://github.com/rust-lang/rust/commit/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "html_url": "https://github.com/rust-lang/rust/commit/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c"}, {"sha": "382fa624268538eb3b618a48417d5750b0e9c456", "url": "https://api.github.com/repos/rust-lang/rust/commits/382fa624268538eb3b618a48417d5750b0e9c456", "html_url": "https://github.com/rust-lang/rust/commit/382fa624268538eb3b618a48417d5750b0e9c456"}], "stats": {"total": 765, "additions": 197, "deletions": 568}, "files": [{"sha": "0924e0b72c088278654fdbe5222b77069839cd0a", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=c18292f6a3d97d51f8a1950fa121d4f0a4c52f19", "patch": "@@ -479,8 +479,6 @@ declare_features! (\n     (incomplete, raw_dylib, \"1.40.0\", Some(58713), None),\n     /// Allows `&raw const $place_expr` and `&raw mut $place_expr` expressions.\n     (active, raw_ref_op, \"1.41.0\", Some(64490), None),\n-    /// Allows using the `#[register_attr]` attribute.\n-    (active, register_attr, \"1.41.0\", Some(66080), None),\n     /// Allows using the `#[register_tool]` attribute.\n     (active, register_tool, \"1.41.0\", Some(66079), None),\n     /// Allows the `#[repr(i128)]` attribute for enums."}, {"sha": "0487270b52a9aaad0e0dce49ac753a2c8ba84b98", "filename": "compiler/rustc_feature/src/builtin_attrs.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs?ref=c18292f6a3d97d51f8a1950fa121d4f0a4c52f19", "patch": "@@ -458,10 +458,6 @@ pub const BUILTIN_ATTRIBUTES: &[BuiltinAttribute] = &[\n     ),\n     gated!(ffi_pure, Normal, template!(Word), WarnFollowing, experimental!(ffi_pure)),\n     gated!(ffi_const, Normal, template!(Word), WarnFollowing, experimental!(ffi_const)),\n-    gated!(\n-        register_attr, CrateLevel, template!(List: \"attr1, attr2, ...\"), DuplicatesOk,\n-        experimental!(register_attr),\n-    ),\n     gated!(\n         register_tool, CrateLevel, template!(List: \"tool1, tool2, ...\"), DuplicatesOk,\n         experimental!(register_tool),"}, {"sha": "13f275bb6a0c923c8faf88df743e4409fc28b686", "filename": "compiler/rustc_feature/src/removed.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs?ref=c18292f6a3d97d51f8a1950fa121d4f0a4c52f19", "patch": "@@ -163,6 +163,9 @@ declare_features! (\n     (removed, quad_precision_float, \"1.0.0\", None, None, None),\n     (removed, quote, \"1.33.0\", Some(29601), None, None),\n     (removed, reflect, \"1.0.0\", Some(27749), None, None),\n+    /// Allows using the `#[register_attr]` attribute.\n+    (removed, register_attr, \"CURRENT_RUSTC_VERSION\", Some(66080), None,\n+     Some(\"removed in favor of `#![register_tool]`\")),\n     /// Allows using the macros:\n     /// + `__diagnostic_used`\n     /// + `__register_diagnostic`"}, {"sha": "2d2648a8f35af5e586d70b998e4407a8e5251713", "filename": "compiler/rustc_hir/src/def.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/compiler%2Frustc_hir%2Fsrc%2Fdef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/compiler%2Frustc_hir%2Fsrc%2Fdef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fdef.rs?ref=c18292f6a3d97d51f8a1950fa121d4f0a4c52f19", "patch": "@@ -45,8 +45,6 @@ pub enum NonMacroAttrKind {\n     /// Single-segment custom attribute registered by a derive macro\n     /// but used before that derive macro was expanded (deprecated).\n     DeriveHelperCompat,\n-    /// Single-segment custom attribute registered with `#[register_attr]`.\n-    Registered,\n }\n \n /// What kind of definition something is; e.g., `mod` vs `struct`.\n@@ -564,15 +562,11 @@ impl NonMacroAttrKind {\n             NonMacroAttrKind::DeriveHelper | NonMacroAttrKind::DeriveHelperCompat => {\n                 \"derive helper attribute\"\n             }\n-            NonMacroAttrKind::Registered => \"explicitly registered attribute\",\n         }\n     }\n \n     pub fn article(self) -> &'static str {\n-        match self {\n-            NonMacroAttrKind::Registered => \"an\",\n-            _ => \"a\",\n-        }\n+        \"a\"\n     }\n \n     /// Users of some attributes cannot mark them as used, so they are considered always used.\n@@ -581,7 +575,7 @@ impl NonMacroAttrKind {\n             NonMacroAttrKind::Tool\n             | NonMacroAttrKind::DeriveHelper\n             | NonMacroAttrKind::DeriveHelperCompat => true,\n-            NonMacroAttrKind::Builtin(..) | NonMacroAttrKind::Registered => false,\n+            NonMacroAttrKind::Builtin(..) => false,\n         }\n     }\n }"}, {"sha": "2d15b1b0a1b94fbb23740e9248407b6732a2d570", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=c18292f6a3d97d51f8a1950fa121d4f0a4c52f19", "patch": "@@ -1172,16 +1172,6 @@ impl<'a> Resolver<'a> {\n                 Scope::Module(module, _) => {\n                     this.add_module_candidates(module, &mut suggestions, filter_fn);\n                 }\n-                Scope::RegisteredAttrs => {\n-                    let res = Res::NonMacroAttr(NonMacroAttrKind::Registered);\n-                    if filter_fn(res) {\n-                        suggestions.extend(\n-                            this.registered_attrs\n-                                .iter()\n-                                .map(|ident| TypoSuggestion::typo_from_res(ident.name, res)),\n-                        );\n-                    }\n-                }\n                 Scope::MacroUsePrelude => {\n                     suggestions.extend(this.macro_use_prelude.iter().filter_map(\n                         |(name, binding)| {"}, {"sha": "2afba94d793af192258f03affa50a5c65e63093c", "filename": "compiler/rustc_resolve/src/ident.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/compiler%2Frustc_resolve%2Fsrc%2Fident.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/compiler%2Frustc_resolve%2Fsrc%2Fident.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fident.rs?ref=c18292f6a3d97d51f8a1950fa121d4f0a4c52f19", "patch": "@@ -127,7 +127,6 @@ impl<'a> Resolver<'a> {\n                 }\n                 Scope::CrateRoot => true,\n                 Scope::Module(..) => true,\n-                Scope::RegisteredAttrs => use_prelude,\n                 Scope::MacroUsePrelude => use_prelude || rust_2015,\n                 Scope::BuiltinAttrs => true,\n                 Scope::ExternPrelude => use_prelude || is_absolute_path,\n@@ -187,12 +186,11 @@ impl<'a> Resolver<'a> {\n                             match ns {\n                                 TypeNS => Scope::ExternPrelude,\n                                 ValueNS => Scope::StdLibPrelude,\n-                                MacroNS => Scope::RegisteredAttrs,\n+                                MacroNS => Scope::MacroUsePrelude,\n                             }\n                         }\n                     }\n                 }\n-                Scope::RegisteredAttrs => Scope::MacroUsePrelude,\n                 Scope::MacroUsePrelude => Scope::StdLibPrelude,\n                 Scope::BuiltinAttrs => break, // nowhere else to search\n                 Scope::ExternPrelude if is_absolute_path => break,\n@@ -556,14 +554,6 @@ impl<'a> Resolver<'a> {\n                             Err((Determinacy::Determined, _)) => Err(Determinacy::Determined),\n                         }\n                     }\n-                    Scope::RegisteredAttrs => match this.registered_attrs.get(&ident).cloned() {\n-                        Some(ident) => ok(\n-                            Res::NonMacroAttr(NonMacroAttrKind::Registered),\n-                            ident.span,\n-                            this.arenas,\n-                        ),\n-                        None => Err(Determinacy::Determined),\n-                    },\n                     Scope::MacroUsePrelude => {\n                         match this.macro_use_prelude.get(&ident.name).cloned() {\n                             Some(binding) => Ok((binding, Flags::MISC_FROM_PRELUDE)),"}, {"sha": "f7351184422db6e6070659ad5e662b14b24c7e0c", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=c18292f6a3d97d51f8a1950fa121d4f0a4c52f19", "patch": "@@ -107,7 +107,6 @@ enum Scope<'a> {\n     // The node ID is for reporting the `PROC_MACRO_DERIVE_RESOLUTION_FALLBACK`\n     // lint if it should be reported.\n     Module(Module<'a>, Option<NodeId>),\n-    RegisteredAttrs,\n     MacroUsePrelude,\n     BuiltinAttrs,\n     ExternPrelude,\n@@ -975,7 +974,6 @@ pub struct Resolver<'a> {\n     /// A small map keeping true kinds of built-in macros that appear to be fn-like on\n     /// the surface (`macro` items in libcore), but are actually attributes or derives.\n     builtin_macro_kinds: FxHashMap<LocalDefId, MacroKind>,\n-    registered_attrs: FxHashSet<Ident>,\n     registered_tools: RegisteredTools,\n     macro_use_prelude: FxHashMap<Symbol, &'a NameBinding<'a>>,\n     macro_map: FxHashMap<DefId, MacroData>,\n@@ -1252,8 +1250,7 @@ impl<'a> Resolver<'a> {\n             }\n         }\n \n-        let (registered_attrs, registered_tools) =\n-            macros::registered_attrs_and_tools(session, &krate.attrs);\n+        let registered_tools = macros::registered_tools(session, &krate.attrs);\n \n         let features = session.features_untracked();\n \n@@ -1318,7 +1315,6 @@ impl<'a> Resolver<'a> {\n             macro_names: FxHashSet::default(),\n             builtin_macros: Default::default(),\n             builtin_macro_kinds: Default::default(),\n-            registered_attrs,\n             registered_tools,\n             macro_use_prelude: FxHashMap::default(),\n             macro_map: FxHashMap::default(),"}, {"sha": "0c428aa6cc05c16b82c4a7f6a9e8a6539277bb82", "filename": "compiler/rustc_resolve/src/macros.rs", "status": "modified", "additions": 7, "deletions": 22, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs?ref=c18292f6a3d97d51f8a1950fa121d4f0a4c52f19", "patch": "@@ -112,47 +112,32 @@ fn fast_print_path(path: &ast::Path) -> Symbol {\n     }\n }\n \n-/// The code common between processing `#![register_tool]` and `#![register_attr]`.\n-fn registered_idents(\n-    sess: &Session,\n-    attrs: &[ast::Attribute],\n-    attr_name: Symbol,\n-    descr: &str,\n-) -> FxHashSet<Ident> {\n-    let mut registered = FxHashSet::default();\n-    for attr in sess.filter_by_name(attrs, attr_name) {\n+pub(crate) fn registered_tools(sess: &Session, attrs: &[ast::Attribute]) -> FxHashSet<Ident> {\n+    let mut registered_tools = FxHashSet::default();\n+    for attr in sess.filter_by_name(attrs, sym::register_tool) {\n         for nested_meta in attr.meta_item_list().unwrap_or_default() {\n             match nested_meta.ident() {\n                 Some(ident) => {\n-                    if let Some(old_ident) = registered.replace(ident) {\n-                        let msg = format!(\"{} `{}` was already registered\", descr, ident);\n+                    if let Some(old_ident) = registered_tools.replace(ident) {\n+                        let msg = format!(\"{} `{}` was already registered\", \"tool\", ident);\n                         sess.struct_span_err(ident.span, &msg)\n                             .span_label(old_ident.span, \"already registered here\")\n                             .emit();\n                     }\n                 }\n                 None => {\n-                    let msg = format!(\"`{}` only accepts identifiers\", attr_name);\n+                    let msg = format!(\"`{}` only accepts identifiers\", sym::register_tool);\n                     let span = nested_meta.span();\n                     sess.struct_span_err(span, &msg).span_label(span, \"not an identifier\").emit();\n                 }\n             }\n         }\n     }\n-    registered\n-}\n-\n-pub(crate) fn registered_attrs_and_tools(\n-    sess: &Session,\n-    attrs: &[ast::Attribute],\n-) -> (FxHashSet<Ident>, FxHashSet<Ident>) {\n-    let registered_attrs = registered_idents(sess, attrs, sym::register_attr, \"attribute\");\n-    let mut registered_tools = registered_idents(sess, attrs, sym::register_tool, \"tool\");\n     // We implicitly add `rustfmt` and `clippy` to known tools,\n     // but it's not an error to register them explicitly.\n     let predefined_tools = [sym::clippy, sym::rustfmt];\n     registered_tools.extend(predefined_tools.iter().cloned().map(Ident::with_dummy_span));\n-    (registered_attrs, registered_tools)\n+    registered_tools\n }\n \n // Some feature gates for inner attributes are reported as lints for backward compatibility."}, {"sha": "c031dbc7155db2c49888f7c8f91340f8ecb9a289", "filename": "src/test/ui-fulldeps/issue-15778-pass.rs", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui-fulldeps%2Fissue-15778-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui-fulldeps%2Fissue-15778-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fissue-15778-pass.rs?ref=81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "patch": "@@ -1,23 +0,0 @@\n-// check-pass\n-// aux-build:lint-for-crate-rpass.rs\n-// ignore-stage1\n-// compile-flags: -D crate-not-okay\n-\n-#![feature(plugin, register_attr, custom_inner_attributes)]\n-\n-#![register_attr(\n-    crate_okay,\n-    crate_blue,\n-    crate_red,\n-    crate_grey,\n-    crate_green,\n-)]\n-\n-#![plugin(lint_for_crate_rpass)] //~ WARNING compiler plugins are deprecated\n-#![crate_okay]\n-#![crate_blue]\n-#![crate_red]\n-#![crate_grey]\n-#![crate_green]\n-\n-fn main() {}"}, {"sha": "a9d9721ac7b89ebde6022f8c719c25b3dc0aaaf1", "filename": "src/test/ui-fulldeps/issue-15778-pass.stderr", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui-fulldeps%2Fissue-15778-pass.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui-fulldeps%2Fissue-15778-pass.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fissue-15778-pass.stderr?ref=81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "patch": "@@ -1,10 +0,0 @@\n-warning: use of deprecated attribute `plugin`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-15778-pass.rs:16:1\n-   |\n-LL | #![plugin(lint_for_crate_rpass)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n-   |\n-   = note: `#[warn(deprecated)]` on by default\n-\n-warning: 1 warning emitted\n-"}, {"sha": "84736be844ba688682e734aeed48b52b7f509cb4", "filename": "src/test/ui/attributes/register-attr-tool-fail.rs", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-fail.rs?ref=81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "patch": "@@ -1,13 +0,0 @@\n-#![feature(register_attr)]\n-#![feature(register_tool)]\n-\n-#![register_attr] //~ ERROR malformed `register_attr` attribute input\n-#![register_tool] //~ ERROR malformed `register_tool` attribute input\n-\n-#![register_attr(a::b)] //~ ERROR `register_attr` only accepts identifiers\n-#![register_tool(a::b)] //~ ERROR `register_tool` only accepts identifiers\n-\n-#![register_attr(attr, attr)] //~ ERROR attribute `attr` was already registered\n-#![register_tool(tool, tool)] //~ ERROR tool `tool` was already registered\n-\n-fn main() {}"}, {"sha": "8f6977cb55f25b06db7444c53432a4be153359ed", "filename": "src/test/ui/attributes/register-attr-tool-fail.stderr", "status": "removed", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-fail.stderr?ref=81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "patch": "@@ -1,42 +0,0 @@\n-error: `register_attr` only accepts identifiers\n-  --> $DIR/register-attr-tool-fail.rs:7:18\n-   |\n-LL | #![register_attr(a::b)]\n-   |                  ^^^^ not an identifier\n-\n-error: attribute `attr` was already registered\n-  --> $DIR/register-attr-tool-fail.rs:10:24\n-   |\n-LL | #![register_attr(attr, attr)]\n-   |                  ----  ^^^^\n-   |                  |\n-   |                  already registered here\n-\n-error: `register_tool` only accepts identifiers\n-  --> $DIR/register-attr-tool-fail.rs:8:18\n-   |\n-LL | #![register_tool(a::b)]\n-   |                  ^^^^ not an identifier\n-\n-error: tool `tool` was already registered\n-  --> $DIR/register-attr-tool-fail.rs:11:24\n-   |\n-LL | #![register_tool(tool, tool)]\n-   |                  ----  ^^^^\n-   |                  |\n-   |                  already registered here\n-\n-error: malformed `register_attr` attribute input\n-  --> $DIR/register-attr-tool-fail.rs:4:1\n-   |\n-LL | #![register_attr]\n-   | ^^^^^^^^^^^^^^^^^ help: must be of the form: `#![register_attr(attr1, attr2, ...)]`\n-\n-error: malformed `register_tool` attribute input\n-  --> $DIR/register-attr-tool-fail.rs:5:1\n-   |\n-LL | #![register_tool]\n-   | ^^^^^^^^^^^^^^^^^ help: must be of the form: `#![register_tool(tool1, tool2, ...)]`\n-\n-error: aborting due to 6 previous errors\n-"}, {"sha": "d3502c71f2d887b08e257c5bbac443415b28b183", "filename": "src/test/ui/attributes/register-attr-tool-import.rs", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-import.rs?ref=81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "patch": "@@ -1,17 +0,0 @@\n-// edition:2018\n-// compile-flags: -Zsave-analysis\n-// ~^ Also regression test for #69588\n-\n-#![feature(register_attr)]\n-#![feature(register_tool)]\n-\n-#![register_attr(attr)]\n-#![register_tool(tool)]\n-\n-use attr as renamed_attr; // OK\n-use tool as renamed_tool; // OK\n-\n-#[renamed_attr] //~ ERROR cannot use an explicitly registered attribute through an import\n-#[renamed_tool::attr] //~ ERROR cannot use a tool module through an import\n-                      //~| ERROR cannot use a tool module through an import\n-fn main() {}"}, {"sha": "90b7e169a2fb7907c5c9a7f8eef8aa0cfd30c6d6", "filename": "src/test/ui/attributes/register-attr-tool-import.stderr", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-import.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-import.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-import.stderr?ref=81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "patch": "@@ -1,38 +0,0 @@\n-error: cannot use an explicitly registered attribute through an import\n-  --> $DIR/register-attr-tool-import.rs:14:3\n-   |\n-LL | #[renamed_attr]\n-   |   ^^^^^^^^^^^^\n-   |\n-note: the explicitly registered attribute imported here\n-  --> $DIR/register-attr-tool-import.rs:11:5\n-   |\n-LL | use attr as renamed_attr; // OK\n-   |     ^^^^^^^^^^^^^^^^^^^^\n-\n-error: cannot use a tool module through an import\n-  --> $DIR/register-attr-tool-import.rs:15:3\n-   |\n-LL | #[renamed_tool::attr]\n-   |   ^^^^^^^^^^^^\n-   |\n-note: the tool module imported here\n-  --> $DIR/register-attr-tool-import.rs:12:5\n-   |\n-LL | use tool as renamed_tool; // OK\n-   |     ^^^^^^^^^^^^^^^^^^^^\n-\n-error: cannot use a tool module through an import\n-  --> $DIR/register-attr-tool-import.rs:15:3\n-   |\n-LL | #[renamed_tool::attr]\n-   |   ^^^^^^^^^^^^\n-   |\n-note: the tool module imported here\n-  --> $DIR/register-attr-tool-import.rs:12:5\n-   |\n-LL | use tool as renamed_tool; // OK\n-   |     ^^^^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to 3 previous errors\n-"}, {"sha": "d217a8146d2ac934515b8c888f85e159beb7f4d7", "filename": "src/test/ui/attributes/register-attr-tool-prelude.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-prelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-prelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-prelude.rs?ref=81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "patch": "@@ -1,14 +0,0 @@\n-#![feature(register_attr)]\n-#![feature(register_tool)]\n-\n-#![register_attr(attr)]\n-#![register_tool(tool)]\n-\n-#[no_implicit_prelude]\n-mod m {\n-    #[attr] //~ ERROR cannot find attribute `attr` in this scope\n-    #[tool::attr] //~ ERROR failed to resolve: use of undeclared crate or module `tool`\n-    fn check() {}\n-}\n-\n-fn main() {}"}, {"sha": "905b661206a6bc49e9a121a5fbfa52870b2bb39b", "filename": "src/test/ui/attributes/register-attr-tool-prelude.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-prelude.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-prelude.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-prelude.stderr?ref=81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "patch": "@@ -1,15 +0,0 @@\n-error[E0433]: failed to resolve: use of undeclared crate or module `tool`\n-  --> $DIR/register-attr-tool-prelude.rs:10:7\n-   |\n-LL |     #[tool::attr]\n-   |       ^^^^ use of undeclared crate or module `tool`\n-\n-error: cannot find attribute `attr` in this scope\n-  --> $DIR/register-attr-tool-prelude.rs:9:7\n-   |\n-LL |     #[attr]\n-   |       ^^^^\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0433`."}, {"sha": "680614656538afebe2273ca1bf529a242dd6a967", "filename": "src/test/ui/attributes/register-attr-tool-unused.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-unused.rs?ref=81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "patch": "@@ -1,8 +0,0 @@\n-#![deny(unused)]\n-\n-#![feature(register_attr)]\n-#![feature(register_tool)]\n-\n-#[register_attr(attr)] //~ ERROR crate-level attribute should be an inner attribute\n-#[register_tool(tool)] //~ ERROR crate-level attribute should be an inner attribute\n-fn main() {}"}, {"sha": "8d2e1b6bc2894dbf5224bc62d8cba45eb4441457", "filename": "src/test/ui/attributes/register-attr-tool-unused.stderr", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-unused.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-unused.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool-unused.stderr?ref=81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "patch": "@@ -1,21 +0,0 @@\n-error: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/register-attr-tool-unused.rs:6:1\n-   |\n-LL | #[register_attr(attr)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-note: the lint level is defined here\n-  --> $DIR/register-attr-tool-unused.rs:1:9\n-   |\n-LL | #![deny(unused)]\n-   |         ^^^^^^\n-   = note: `#[deny(unused_attributes)]` implied by `#[deny(unused)]`\n-\n-error: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/register-attr-tool-unused.rs:7:1\n-   |\n-LL | #[register_tool(tool)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to 2 previous errors\n-"}, {"sha": "ee9da74d4fb1ca2e672d8c8eae74824f5793114f", "filename": "src/test/ui/attributes/register-attr-tool.rs", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fregister-attr-tool.rs?ref=81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "patch": "@@ -1,19 +0,0 @@\n-// check-pass\n-// compile-flags: --cfg foo\n-\n-#![feature(register_attr)]\n-#![feature(register_tool)]\n-\n-#![register_attr(attr)]\n-#![register_tool(tool)]\n-#![register_tool(rustfmt, clippy)] // OK\n-#![cfg_attr(foo, register_attr(conditional_attr))]\n-#![cfg_attr(foo, register_tool(conditional_tool))]\n-\n-#[attr]\n-#[tool::attr]\n-#[rustfmt::attr]\n-#[clippy::attr]\n-#[conditional_attr]\n-#[conditional_tool::attr]\n-fn main() {}"}, {"sha": "36dce2aa7b9e0e8b0deadc066960b5c19f811ee4", "filename": "src/test/ui/feature-gates/feature-gate-register_attr.rs", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-register_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-register_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-register_attr.rs?ref=81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "patch": "@@ -1,3 +0,0 @@\n-#![register_attr(attr)] //~ ERROR the `#[register_attr]` attribute is an experimental feature\n-\n-fn main() {}"}, {"sha": "8ca3845d28aa7f18994a4d84d3e5956dc249bf5e", "filename": "src/test/ui/feature-gates/feature-gate-register_attr.stderr", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-register_attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-register_attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-register_attr.stderr?ref=81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "patch": "@@ -1,12 +0,0 @@\n-error[E0658]: the `#[register_attr]` attribute is an experimental feature\n-  --> $DIR/feature-gate-register_attr.rs:1:1\n-   |\n-LL | #![register_attr(attr)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #66080 <https://github.com/rust-lang/rust/issues/66080> for more information\n-   = help: add `#![feature(register_attr)]` to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "4160e5418b78a79bb488589aa2c9de7097baa437", "filename": "src/test/ui/proc-macro/expand-to-unstable-2.rs", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.rs?ref=81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "patch": "@@ -1,17 +0,0 @@\n-// aux-build:derive-unstable-2.rs\n-\n-#![feature(register_attr)]\n-\n-#![register_attr(rustc_foo)]\n-\n-#[macro_use]\n-extern crate derive_unstable_2;\n-\n-#[derive(Unstable)]\n-//~^ ERROR attributes starting with `rustc` are reserved for use by the `rustc` compiler\n-\n-struct A;\n-\n-fn main() {\n-    foo();\n-}"}, {"sha": "8b16ffb76f26fc1e419cba16fad42760f5ddc5ae", "filename": "src/test/ui/proc-macro/expand-to-unstable-2.stderr", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.stderr?ref=81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "patch": "@@ -1,10 +0,0 @@\n-error: attributes starting with `rustc` are reserved for use by the `rustc` compiler\n-  --> $DIR/expand-to-unstable-2.rs:10:10\n-   |\n-LL | #[derive(Unstable)]\n-   |          ^^^^^^^^\n-   |\n-   = note: this error originates in the derive macro `Unstable` (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: aborting due to previous error\n-"}, {"sha": "1000c9c755ffc255bff7cad35dc9df29fd2a0bb1", "filename": "src/test/ui/proc-macro/inner-attrs.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.rs?ref=c18292f6a3d97d51f8a1950fa121d4f0a4c52f19", "patch": "@@ -1,3 +1,4 @@\n+// gate-test-custom_inner_attributes\n // compile-flags: -Z span-debug --error-format human\n // aux-build:test-macros.rs\n // edition:2018"}, {"sha": "a332e143a79f1d0de39c2cea8364ed1cf4b6cf38", "filename": "src/test/ui/proc-macro/inner-attrs.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.stderr?ref=c18292f6a3d97d51f8a1950fa121d4f0a4c52f19", "patch": "@@ -1,23 +1,23 @@\n error: expected non-macro inner attribute, found attribute macro `print_attr`\n-  --> $DIR/inner-attrs.rs:63:12\n+  --> $DIR/inner-attrs.rs:64:12\n    |\n LL |         #![print_attr]\n    |            ^^^^^^^^^^ not a non-macro inner attribute\n \n error: expected non-macro inner attribute, found attribute macro `print_attr`\n-  --> $DIR/inner-attrs.rs:67:12\n+  --> $DIR/inner-attrs.rs:68:12\n    |\n LL |         #![print_attr]\n    |            ^^^^^^^^^^ not a non-macro inner attribute\n \n error: expected non-macro inner attribute, found attribute macro `print_attr`\n-  --> $DIR/inner-attrs.rs:71:12\n+  --> $DIR/inner-attrs.rs:72:12\n    |\n LL |         #![print_attr]\n    |            ^^^^^^^^^^ not a non-macro inner attribute\n \n error: expected non-macro inner attribute, found attribute macro `print_attr`\n-  --> $DIR/inner-attrs.rs:75:12\n+  --> $DIR/inner-attrs.rs:76:12\n    |\n LL |         #![print_attr]\n    |            ^^^^^^^^^^ not a non-macro inner attribute"}, {"sha": "490fc02f510372d0380b458ab125cfe3aaab6c9d", "filename": "src/test/ui/proc-macro/inner-attrs.stdout", "status": "modified", "additions": 178, "deletions": 178, "changes": 356, "blob_url": "https://github.com/rust-lang/rust/blob/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/c18292f6a3d97d51f8a1950fa121d4f0a4c52f19/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finner-attrs.stdout?ref=c18292f6a3d97d51f8a1950fa121d4f0a4c52f19", "patch": "@@ -2,7 +2,7 @@ PRINT-ATTR_ARGS INPUT (DISPLAY): first\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"first\",\n-        span: $DIR/inner-attrs.rs:16:25: 16:30 (#0),\n+        span: $DIR/inner-attrs.rs:17:25: 17:30 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): #[print_target_and_args(second)] fn foo()\n@@ -11,290 +11,290 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Punct {\n         ch: '#',\n         spacing: Alone,\n-        span: $DIR/inner-attrs.rs:17:1: 17:2 (#0),\n+        span: $DIR/inner-attrs.rs:18:1: 18:2 (#0),\n     },\n     Group {\n         delimiter: Bracket,\n         stream: TokenStream [\n             Ident {\n                 ident: \"print_target_and_args\",\n-                span: $DIR/inner-attrs.rs:17:3: 17:24 (#0),\n+                span: $DIR/inner-attrs.rs:18:3: 18:24 (#0),\n             },\n             Group {\n                 delimiter: Parenthesis,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"second\",\n-                        span: $DIR/inner-attrs.rs:17:25: 17:31 (#0),\n+                        span: $DIR/inner-attrs.rs:18:25: 18:31 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:17:24: 17:32 (#0),\n+                span: $DIR/inner-attrs.rs:18:24: 18:32 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:17:2: 17:33 (#0),\n+        span: $DIR/inner-attrs.rs:18:2: 18:33 (#0),\n     },\n     Ident {\n         ident: \"fn\",\n-        span: $DIR/inner-attrs.rs:18:1: 18:3 (#0),\n+        span: $DIR/inner-attrs.rs:19:1: 19:3 (#0),\n     },\n     Ident {\n         ident: \"foo\",\n-        span: $DIR/inner-attrs.rs:18:4: 18:7 (#0),\n+        span: $DIR/inner-attrs.rs:19:4: 19:7 (#0),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [],\n-        span: $DIR/inner-attrs.rs:18:7: 18:9 (#0),\n+        span: $DIR/inner-attrs.rs:19:7: 19:9 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:19:5: 19:6 (#0),\n+                span: $DIR/inner-attrs.rs:20:5: 20:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:19:6: 19:7 (#0),\n+                span: $DIR/inner-attrs.rs:20:6: 20:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:19:8: 19:29 (#0),\n+                        span: $DIR/inner-attrs.rs:20:8: 20:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"third\",\n-                                span: $DIR/inner-attrs.rs:19:30: 19:35 (#0),\n+                                span: $DIR/inner-attrs.rs:20:30: 20:35 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:19:29: 19:36 (#0),\n+                        span: $DIR/inner-attrs.rs:20:29: 20:36 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:19:7: 19:37 (#0),\n+                span: $DIR/inner-attrs.rs:20:7: 20:37 (#0),\n             },\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:20:5: 20:6 (#0),\n+                span: $DIR/inner-attrs.rs:21:5: 21:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:20:6: 20:7 (#0),\n+                span: $DIR/inner-attrs.rs:21:6: 21:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:20:8: 20:29 (#0),\n+                        span: $DIR/inner-attrs.rs:21:8: 21:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"fourth\",\n-                                span: $DIR/inner-attrs.rs:20:30: 20:36 (#0),\n+                                span: $DIR/inner-attrs.rs:21:30: 21:36 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:20:29: 20:37 (#0),\n+                        span: $DIR/inner-attrs.rs:21:29: 21:37 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:20:7: 20:38 (#0),\n+                span: $DIR/inner-attrs.rs:21:7: 21:38 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:18:10: 21:2 (#0),\n+        span: $DIR/inner-attrs.rs:19:10: 22:2 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): second\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"second\",\n-        span: $DIR/inner-attrs.rs:17:25: 17:31 (#0),\n+        span: $DIR/inner-attrs.rs:18:25: 18:31 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): fn foo()\n { #! [print_target_and_args(third)] #! [print_target_and_args(fourth)] }\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"fn\",\n-        span: $DIR/inner-attrs.rs:18:1: 18:3 (#0),\n+        span: $DIR/inner-attrs.rs:19:1: 19:3 (#0),\n     },\n     Ident {\n         ident: \"foo\",\n-        span: $DIR/inner-attrs.rs:18:4: 18:7 (#0),\n+        span: $DIR/inner-attrs.rs:19:4: 19:7 (#0),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [],\n-        span: $DIR/inner-attrs.rs:18:7: 18:9 (#0),\n+        span: $DIR/inner-attrs.rs:19:7: 19:9 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:19:5: 19:6 (#0),\n+                span: $DIR/inner-attrs.rs:20:5: 20:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:19:6: 19:7 (#0),\n+                span: $DIR/inner-attrs.rs:20:6: 20:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:19:8: 19:29 (#0),\n+                        span: $DIR/inner-attrs.rs:20:8: 20:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"third\",\n-                                span: $DIR/inner-attrs.rs:19:30: 19:35 (#0),\n+                                span: $DIR/inner-attrs.rs:20:30: 20:35 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:19:29: 19:36 (#0),\n+                        span: $DIR/inner-attrs.rs:20:29: 20:36 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:19:7: 19:37 (#0),\n+                span: $DIR/inner-attrs.rs:20:7: 20:37 (#0),\n             },\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:20:5: 20:6 (#0),\n+                span: $DIR/inner-attrs.rs:21:5: 21:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:20:6: 20:7 (#0),\n+                span: $DIR/inner-attrs.rs:21:6: 21:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:20:8: 20:29 (#0),\n+                        span: $DIR/inner-attrs.rs:21:8: 21:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"fourth\",\n-                                span: $DIR/inner-attrs.rs:20:30: 20:36 (#0),\n+                                span: $DIR/inner-attrs.rs:21:30: 21:36 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:20:29: 20:37 (#0),\n+                        span: $DIR/inner-attrs.rs:21:29: 21:37 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:20:7: 20:38 (#0),\n+                span: $DIR/inner-attrs.rs:21:7: 21:38 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:18:10: 21:2 (#0),\n+        span: $DIR/inner-attrs.rs:19:10: 22:2 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): third\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"third\",\n-        span: $DIR/inner-attrs.rs:19:30: 19:35 (#0),\n+        span: $DIR/inner-attrs.rs:20:30: 20:35 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): fn foo() { #! [print_target_and_args(fourth)] }\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"fn\",\n-        span: $DIR/inner-attrs.rs:18:1: 18:3 (#0),\n+        span: $DIR/inner-attrs.rs:19:1: 19:3 (#0),\n     },\n     Ident {\n         ident: \"foo\",\n-        span: $DIR/inner-attrs.rs:18:4: 18:7 (#0),\n+        span: $DIR/inner-attrs.rs:19:4: 19:7 (#0),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [],\n-        span: $DIR/inner-attrs.rs:18:7: 18:9 (#0),\n+        span: $DIR/inner-attrs.rs:19:7: 19:9 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:20:5: 20:6 (#0),\n+                span: $DIR/inner-attrs.rs:21:5: 21:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:20:6: 20:7 (#0),\n+                span: $DIR/inner-attrs.rs:21:6: 21:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:20:8: 20:29 (#0),\n+                        span: $DIR/inner-attrs.rs:21:8: 21:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"fourth\",\n-                                span: $DIR/inner-attrs.rs:20:30: 20:36 (#0),\n+                                span: $DIR/inner-attrs.rs:21:30: 21:36 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:20:29: 20:37 (#0),\n+                        span: $DIR/inner-attrs.rs:21:29: 21:37 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:20:7: 20:38 (#0),\n+                span: $DIR/inner-attrs.rs:21:7: 21:38 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:18:10: 21:2 (#0),\n+        span: $DIR/inner-attrs.rs:19:10: 22:2 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): fourth\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"fourth\",\n-        span: $DIR/inner-attrs.rs:20:30: 20:36 (#0),\n+        span: $DIR/inner-attrs.rs:21:30: 21:36 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): fn foo() {}\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"fn\",\n-        span: $DIR/inner-attrs.rs:18:1: 18:3 (#0),\n+        span: $DIR/inner-attrs.rs:19:1: 19:3 (#0),\n     },\n     Ident {\n         ident: \"foo\",\n-        span: $DIR/inner-attrs.rs:18:4: 18:7 (#0),\n+        span: $DIR/inner-attrs.rs:19:4: 19:7 (#0),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [],\n-        span: $DIR/inner-attrs.rs:18:7: 18:9 (#0),\n+        span: $DIR/inner-attrs.rs:19:7: 19:9 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [],\n-        span: $DIR/inner-attrs.rs:18:10: 21:2 (#0),\n+        span: $DIR/inner-attrs.rs:19:10: 22:2 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): mod_first\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"mod_first\",\n-        span: $DIR/inner-attrs.rs:23:25: 23:34 (#0),\n+        span: $DIR/inner-attrs.rs:24:25: 24:34 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): #[print_target_and_args(mod_second)] mod inline_mod\n@@ -306,108 +306,108 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Punct {\n         ch: '#',\n         spacing: Alone,\n-        span: $DIR/inner-attrs.rs:24:1: 24:2 (#0),\n+        span: $DIR/inner-attrs.rs:25:1: 25:2 (#0),\n     },\n     Group {\n         delimiter: Bracket,\n         stream: TokenStream [\n             Ident {\n                 ident: \"print_target_and_args\",\n-                span: $DIR/inner-attrs.rs:24:3: 24:24 (#0),\n+                span: $DIR/inner-attrs.rs:25:3: 25:24 (#0),\n             },\n             Group {\n                 delimiter: Parenthesis,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"mod_second\",\n-                        span: $DIR/inner-attrs.rs:24:25: 24:35 (#0),\n+                        span: $DIR/inner-attrs.rs:25:25: 25:35 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:24:24: 24:36 (#0),\n+                span: $DIR/inner-attrs.rs:25:24: 25:36 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:24:2: 24:37 (#0),\n+        span: $DIR/inner-attrs.rs:25:2: 25:37 (#0),\n     },\n     Ident {\n         ident: \"mod\",\n-        span: $DIR/inner-attrs.rs:25:1: 25:4 (#0),\n+        span: $DIR/inner-attrs.rs:26:1: 26:4 (#0),\n     },\n     Ident {\n         ident: \"inline_mod\",\n-        span: $DIR/inner-attrs.rs:25:5: 25:15 (#0),\n+        span: $DIR/inner-attrs.rs:26:5: 26:15 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:26:5: 26:6 (#0),\n+                span: $DIR/inner-attrs.rs:27:5: 27:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:26:6: 26:7 (#0),\n+                span: $DIR/inner-attrs.rs:27:6: 27:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:26:8: 26:29 (#0),\n+                        span: $DIR/inner-attrs.rs:27:8: 27:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"mod_third\",\n-                                span: $DIR/inner-attrs.rs:26:30: 26:39 (#0),\n+                                span: $DIR/inner-attrs.rs:27:30: 27:39 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:26:29: 26:40 (#0),\n+                        span: $DIR/inner-attrs.rs:27:29: 27:40 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:26:7: 26:41 (#0),\n+                span: $DIR/inner-attrs.rs:27:7: 27:41 (#0),\n             },\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:27:5: 27:6 (#0),\n+                span: $DIR/inner-attrs.rs:28:5: 28:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:27:6: 27:7 (#0),\n+                span: $DIR/inner-attrs.rs:28:6: 28:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:27:8: 27:29 (#0),\n+                        span: $DIR/inner-attrs.rs:28:8: 28:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"mod_fourth\",\n-                                span: $DIR/inner-attrs.rs:27:30: 27:40 (#0),\n+                                span: $DIR/inner-attrs.rs:28:30: 28:40 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:27:29: 27:41 (#0),\n+                        span: $DIR/inner-attrs.rs:28:29: 28:41 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:27:7: 27:42 (#0),\n+                span: $DIR/inner-attrs.rs:28:7: 28:42 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:25:16: 28:2 (#0),\n+        span: $DIR/inner-attrs.rs:26:16: 29:2 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): mod_second\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"mod_second\",\n-        span: $DIR/inner-attrs.rs:24:25: 24:35 (#0),\n+        span: $DIR/inner-attrs.rs:25:25: 25:35 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): mod inline_mod\n@@ -418,154 +418,154 @@ PRINT-ATTR INPUT (DISPLAY): mod inline_mod\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"mod\",\n-        span: $DIR/inner-attrs.rs:25:1: 25:4 (#0),\n+        span: $DIR/inner-attrs.rs:26:1: 26:4 (#0),\n     },\n     Ident {\n         ident: \"inline_mod\",\n-        span: $DIR/inner-attrs.rs:25:5: 25:15 (#0),\n+        span: $DIR/inner-attrs.rs:26:5: 26:15 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:26:5: 26:6 (#0),\n+                span: $DIR/inner-attrs.rs:27:5: 27:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:26:6: 26:7 (#0),\n+                span: $DIR/inner-attrs.rs:27:6: 27:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:26:8: 26:29 (#0),\n+                        span: $DIR/inner-attrs.rs:27:8: 27:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"mod_third\",\n-                                span: $DIR/inner-attrs.rs:26:30: 26:39 (#0),\n+                                span: $DIR/inner-attrs.rs:27:30: 27:39 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:26:29: 26:40 (#0),\n+                        span: $DIR/inner-attrs.rs:27:29: 27:40 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:26:7: 26:41 (#0),\n+                span: $DIR/inner-attrs.rs:27:7: 27:41 (#0),\n             },\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:27:5: 27:6 (#0),\n+                span: $DIR/inner-attrs.rs:28:5: 28:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:27:6: 27:7 (#0),\n+                span: $DIR/inner-attrs.rs:28:6: 28:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:27:8: 27:29 (#0),\n+                        span: $DIR/inner-attrs.rs:28:8: 28:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"mod_fourth\",\n-                                span: $DIR/inner-attrs.rs:27:30: 27:40 (#0),\n+                                span: $DIR/inner-attrs.rs:28:30: 28:40 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:27:29: 27:41 (#0),\n+                        span: $DIR/inner-attrs.rs:28:29: 28:41 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:27:7: 27:42 (#0),\n+                span: $DIR/inner-attrs.rs:28:7: 28:42 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:25:16: 28:2 (#0),\n+        span: $DIR/inner-attrs.rs:26:16: 29:2 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): mod_third\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"mod_third\",\n-        span: $DIR/inner-attrs.rs:26:30: 26:39 (#0),\n+        span: $DIR/inner-attrs.rs:27:30: 27:39 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): mod inline_mod { #! [print_target_and_args(mod_fourth)] }\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"mod\",\n-        span: $DIR/inner-attrs.rs:25:1: 25:4 (#0),\n+        span: $DIR/inner-attrs.rs:26:1: 26:4 (#0),\n     },\n     Ident {\n         ident: \"inline_mod\",\n-        span: $DIR/inner-attrs.rs:25:5: 25:15 (#0),\n+        span: $DIR/inner-attrs.rs:26:5: 26:15 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [\n             Punct {\n                 ch: '#',\n                 spacing: Joint,\n-                span: $DIR/inner-attrs.rs:27:5: 27:6 (#0),\n+                span: $DIR/inner-attrs.rs:28:5: 28:6 (#0),\n             },\n             Punct {\n                 ch: '!',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:27:6: 27:7 (#0),\n+                span: $DIR/inner-attrs.rs:28:6: 28:7 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"print_target_and_args\",\n-                        span: $DIR/inner-attrs.rs:27:8: 27:29 (#0),\n+                        span: $DIR/inner-attrs.rs:28:8: 28:29 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"mod_fourth\",\n-                                span: $DIR/inner-attrs.rs:27:30: 27:40 (#0),\n+                                span: $DIR/inner-attrs.rs:28:30: 28:40 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:27:29: 27:41 (#0),\n+                        span: $DIR/inner-attrs.rs:28:29: 28:41 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:27:7: 27:42 (#0),\n+                span: $DIR/inner-attrs.rs:28:7: 28:42 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:25:16: 28:2 (#0),\n+        span: $DIR/inner-attrs.rs:26:16: 29:2 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): mod_fourth\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"mod_fourth\",\n-        span: $DIR/inner-attrs.rs:27:30: 27:40 (#0),\n+        span: $DIR/inner-attrs.rs:28:30: 28:40 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): mod inline_mod {}\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"mod\",\n-        span: $DIR/inner-attrs.rs:25:1: 25:4 (#0),\n+        span: $DIR/inner-attrs.rs:26:1: 26:4 (#0),\n     },\n     Ident {\n         ident: \"inline_mod\",\n-        span: $DIR/inner-attrs.rs:25:5: 25:15 (#0),\n+        span: $DIR/inner-attrs.rs:26:5: 26:15 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [],\n-        span: $DIR/inner-attrs.rs:25:16: 28:2 (#0),\n+        span: $DIR/inner-attrs.rs:26:16: 29:2 (#0),\n     },\n ]\n PRINT-DERIVE INPUT (DISPLAY): struct MyDerivePrint\n@@ -576,133 +576,133 @@ PRINT-DERIVE INPUT (DISPLAY): struct MyDerivePrint\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n-        span: $DIR/inner-attrs.rs:35:1: 35:7 (#0),\n+        span: $DIR/inner-attrs.rs:36:1: 36:7 (#0),\n     },\n     Ident {\n         ident: \"MyDerivePrint\",\n-        span: $DIR/inner-attrs.rs:35:8: 35:21 (#0),\n+        span: $DIR/inner-attrs.rs:36:8: 36:21 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [\n             Ident {\n                 ident: \"field\",\n-                span: $DIR/inner-attrs.rs:36:5: 36:10 (#0),\n+                span: $DIR/inner-attrs.rs:37:5: 37:10 (#0),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:36:10: 36:11 (#0),\n+                span: $DIR/inner-attrs.rs:37:10: 37:11 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"u8\",\n-                        span: $DIR/inner-attrs.rs:36:13: 36:15 (#0),\n+                        span: $DIR/inner-attrs.rs:37:13: 37:15 (#0),\n                     },\n                     Punct {\n                         ch: ';',\n                         spacing: Alone,\n-                        span: $DIR/inner-attrs.rs:36:15: 36:16 (#0),\n+                        span: $DIR/inner-attrs.rs:37:15: 37:16 (#0),\n                     },\n                     Group {\n                         delimiter: Brace,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"match\",\n-                                span: $DIR/inner-attrs.rs:37:9: 37:14 (#0),\n+                                span: $DIR/inner-attrs.rs:38:9: 38:14 (#0),\n                             },\n                             Ident {\n                                 ident: \"true\",\n-                                span: $DIR/inner-attrs.rs:37:15: 37:19 (#0),\n+                                span: $DIR/inner-attrs.rs:38:15: 38:19 (#0),\n                             },\n                             Group {\n                                 delimiter: Brace,\n                                 stream: TokenStream [\n                                     Ident {\n                                         ident: \"_\",\n-                                        span: $DIR/inner-attrs.rs:38:13: 38:14 (#0),\n+                                        span: $DIR/inner-attrs.rs:39:13: 39:14 (#0),\n                                     },\n                                     Punct {\n                                         ch: '=',\n                                         spacing: Joint,\n-                                        span: $DIR/inner-attrs.rs:38:15: 38:17 (#0),\n+                                        span: $DIR/inner-attrs.rs:39:15: 39:17 (#0),\n                                     },\n                                     Punct {\n                                         ch: '>',\n                                         spacing: Alone,\n-                                        span: $DIR/inner-attrs.rs:38:15: 38:17 (#0),\n+                                        span: $DIR/inner-attrs.rs:39:15: 39:17 (#0),\n                                     },\n                                     Group {\n                                         delimiter: Brace,\n                                         stream: TokenStream [\n                                             Punct {\n                                                 ch: '#',\n                                                 spacing: Alone,\n-                                                span: $DIR/inner-attrs.rs:39:17: 39:18 (#0),\n+                                                span: $DIR/inner-attrs.rs:40:17: 40:18 (#0),\n                                             },\n                                             Punct {\n                                                 ch: '!',\n                                                 spacing: Alone,\n-                                                span: $DIR/inner-attrs.rs:39:18: 39:19 (#0),\n+                                                span: $DIR/inner-attrs.rs:40:18: 40:19 (#0),\n                                             },\n                                             Group {\n                                                 delimiter: Bracket,\n                                                 stream: TokenStream [\n                                                     Ident {\n                                                         ident: \"rustc_dummy\",\n-                                                        span: $DIR/inner-attrs.rs:39:41: 39:52 (#0),\n+                                                        span: $DIR/inner-attrs.rs:40:41: 40:52 (#0),\n                                                     },\n                                                     Group {\n                                                         delimiter: Parenthesis,\n                                                         stream: TokenStream [\n                                                             Ident {\n                                                                 ident: \"third\",\n-                                                                span: $DIR/inner-attrs.rs:39:53: 39:58 (#0),\n+                                                                span: $DIR/inner-attrs.rs:40:53: 40:58 (#0),\n                                                             },\n                                                         ],\n-                                                        span: $DIR/inner-attrs.rs:39:52: 39:59 (#0),\n+                                                        span: $DIR/inner-attrs.rs:40:52: 40:59 (#0),\n                                                     },\n                                                 ],\n-                                                span: $DIR/inner-attrs.rs:39:17: 39:18 (#0),\n+                                                span: $DIR/inner-attrs.rs:40:17: 40:18 (#0),\n                                             },\n                                             Ident {\n                                                 ident: \"true\",\n-                                                span: $DIR/inner-attrs.rs:40:17: 40:21 (#0),\n+                                                span: $DIR/inner-attrs.rs:41:17: 41:21 (#0),\n                                             },\n                                         ],\n-                                        span: $DIR/inner-attrs.rs:38:18: 41:14 (#0),\n+                                        span: $DIR/inner-attrs.rs:39:18: 42:14 (#0),\n                                     },\n                                 ],\n-                                span: $DIR/inner-attrs.rs:37:20: 42:10 (#0),\n+                                span: $DIR/inner-attrs.rs:38:20: 43:10 (#0),\n                             },\n                             Punct {\n                                 ch: ';',\n                                 spacing: Alone,\n-                                span: $DIR/inner-attrs.rs:42:10: 42:11 (#0),\n+                                span: $DIR/inner-attrs.rs:43:10: 43:11 (#0),\n                             },\n                             Literal {\n                                 kind: Integer,\n                                 symbol: \"0\",\n                                 suffix: None,\n-                                span: $DIR/inner-attrs.rs:43:9: 43:10 (#0),\n+                                span: $DIR/inner-attrs.rs:44:9: 44:10 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:36:17: 44:6 (#0),\n+                        span: $DIR/inner-attrs.rs:37:17: 45:6 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:36:12: 44:7 (#0),\n+                span: $DIR/inner-attrs.rs:37:12: 45:7 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:35:22: 45:2 (#0),\n+        span: $DIR/inner-attrs.rs:36:22: 46:2 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): tuple_attrs\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"tuple_attrs\",\n-        span: $DIR/inner-attrs.rs:48:29: 48:40 (#0),\n+        span: $DIR/inner-attrs.rs:49:29: 49:40 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): (3, 4, { #! [cfg_attr(not(FALSE), rustc_dummy(innermost))] 5 }) ;\n@@ -714,109 +714,109 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n                 kind: Integer,\n                 symbol: \"3\",\n                 suffix: None,\n-                span: $DIR/inner-attrs.rs:49:9: 49:10 (#0),\n+                span: $DIR/inner-attrs.rs:50:9: 50:10 (#0),\n             },\n             Punct {\n                 ch: ',',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:49:10: 49:11 (#0),\n+                span: $DIR/inner-attrs.rs:50:10: 50:11 (#0),\n             },\n             Literal {\n                 kind: Integer,\n                 symbol: \"4\",\n                 suffix: None,\n-                span: $DIR/inner-attrs.rs:49:12: 49:13 (#0),\n+                span: $DIR/inner-attrs.rs:50:12: 50:13 (#0),\n             },\n             Punct {\n                 ch: ',',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:49:13: 49:14 (#0),\n+                span: $DIR/inner-attrs.rs:50:13: 50:14 (#0),\n             },\n             Group {\n                 delimiter: Brace,\n                 stream: TokenStream [\n                     Punct {\n                         ch: '#',\n                         spacing: Joint,\n-                        span: $DIR/inner-attrs.rs:50:13: 50:14 (#0),\n+                        span: $DIR/inner-attrs.rs:51:13: 51:14 (#0),\n                     },\n                     Punct {\n                         ch: '!',\n                         spacing: Alone,\n-                        span: $DIR/inner-attrs.rs:50:14: 50:15 (#0),\n+                        span: $DIR/inner-attrs.rs:51:14: 51:15 (#0),\n                     },\n                     Group {\n                         delimiter: Bracket,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"cfg_attr\",\n-                                span: $DIR/inner-attrs.rs:50:16: 50:24 (#0),\n+                                span: $DIR/inner-attrs.rs:51:16: 51:24 (#0),\n                             },\n                             Group {\n                                 delimiter: Parenthesis,\n                                 stream: TokenStream [\n                                     Ident {\n                                         ident: \"not\",\n-                                        span: $DIR/inner-attrs.rs:50:25: 50:28 (#0),\n+                                        span: $DIR/inner-attrs.rs:51:25: 51:28 (#0),\n                                     },\n                                     Group {\n                                         delimiter: Parenthesis,\n                                         stream: TokenStream [\n                                             Ident {\n                                                 ident: \"FALSE\",\n-                                                span: $DIR/inner-attrs.rs:50:29: 50:34 (#0),\n+                                                span: $DIR/inner-attrs.rs:51:29: 51:34 (#0),\n                                             },\n                                         ],\n-                                        span: $DIR/inner-attrs.rs:50:28: 50:35 (#0),\n+                                        span: $DIR/inner-attrs.rs:51:28: 51:35 (#0),\n                                     },\n                                     Punct {\n                                         ch: ',',\n                                         spacing: Alone,\n-                                        span: $DIR/inner-attrs.rs:50:35: 50:36 (#0),\n+                                        span: $DIR/inner-attrs.rs:51:35: 51:36 (#0),\n                                     },\n                                     Ident {\n                                         ident: \"rustc_dummy\",\n-                                        span: $DIR/inner-attrs.rs:50:37: 50:48 (#0),\n+                                        span: $DIR/inner-attrs.rs:51:37: 51:48 (#0),\n                                     },\n                                     Group {\n                                         delimiter: Parenthesis,\n                                         stream: TokenStream [\n                                             Ident {\n                                                 ident: \"innermost\",\n-                                                span: $DIR/inner-attrs.rs:50:49: 50:58 (#0),\n+                                                span: $DIR/inner-attrs.rs:51:49: 51:58 (#0),\n                                             },\n                                         ],\n-                                        span: $DIR/inner-attrs.rs:50:48: 50:59 (#0),\n+                                        span: $DIR/inner-attrs.rs:51:48: 51:59 (#0),\n                                     },\n                                 ],\n-                                span: $DIR/inner-attrs.rs:50:24: 50:60 (#0),\n+                                span: $DIR/inner-attrs.rs:51:24: 51:60 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:50:15: 50:61 (#0),\n+                        span: $DIR/inner-attrs.rs:51:15: 51:61 (#0),\n                     },\n                     Literal {\n                         kind: Integer,\n                         symbol: \"5\",\n                         suffix: None,\n-                        span: $DIR/inner-attrs.rs:51:13: 51:14 (#0),\n+                        span: $DIR/inner-attrs.rs:52:13: 52:14 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:49:15: 52:10 (#0),\n+                span: $DIR/inner-attrs.rs:50:15: 53:10 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:48:43: 53:6 (#0),\n+        span: $DIR/inner-attrs.rs:49:43: 54:6 (#0),\n     },\n     Punct {\n         ch: ';',\n         spacing: Alone,\n-        span: $DIR/inner-attrs.rs:53:6: 53:7 (#0),\n+        span: $DIR/inner-attrs.rs:54:6: 54:7 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): tuple_attrs\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"tuple_attrs\",\n-        span: $DIR/inner-attrs.rs:55:29: 55:40 (#0),\n+        span: $DIR/inner-attrs.rs:56:29: 56:40 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): (3, 4, { #! [cfg_attr(not(FALSE), rustc_dummy(innermost))] 5 }) ;\n@@ -828,129 +828,129 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n                 kind: Integer,\n                 symbol: \"3\",\n                 suffix: None,\n-                span: $DIR/inner-attrs.rs:56:9: 56:10 (#0),\n+                span: $DIR/inner-attrs.rs:57:9: 57:10 (#0),\n             },\n             Punct {\n                 ch: ',',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:56:10: 56:11 (#0),\n+                span: $DIR/inner-attrs.rs:57:10: 57:11 (#0),\n             },\n             Literal {\n                 kind: Integer,\n                 symbol: \"4\",\n                 suffix: None,\n-                span: $DIR/inner-attrs.rs:56:12: 56:13 (#0),\n+                span: $DIR/inner-attrs.rs:57:12: 57:13 (#0),\n             },\n             Punct {\n                 ch: ',',\n                 spacing: Alone,\n-                span: $DIR/inner-attrs.rs:56:13: 56:14 (#0),\n+                span: $DIR/inner-attrs.rs:57:13: 57:14 (#0),\n             },\n             Group {\n                 delimiter: Brace,\n                 stream: TokenStream [\n                     Punct {\n                         ch: '#',\n                         spacing: Joint,\n-                        span: $DIR/inner-attrs.rs:57:13: 57:14 (#0),\n+                        span: $DIR/inner-attrs.rs:58:13: 58:14 (#0),\n                     },\n                     Punct {\n                         ch: '!',\n                         spacing: Alone,\n-                        span: $DIR/inner-attrs.rs:57:14: 57:15 (#0),\n+                        span: $DIR/inner-attrs.rs:58:14: 58:15 (#0),\n                     },\n                     Group {\n                         delimiter: Bracket,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"cfg_attr\",\n-                                span: $DIR/inner-attrs.rs:57:16: 57:24 (#0),\n+                                span: $DIR/inner-attrs.rs:58:16: 58:24 (#0),\n                             },\n                             Group {\n                                 delimiter: Parenthesis,\n                                 stream: TokenStream [\n                                     Ident {\n                                         ident: \"not\",\n-                                        span: $DIR/inner-attrs.rs:57:25: 57:28 (#0),\n+                                        span: $DIR/inner-attrs.rs:58:25: 58:28 (#0),\n                                     },\n                                     Group {\n                                         delimiter: Parenthesis,\n                                         stream: TokenStream [\n                                             Ident {\n                                                 ident: \"FALSE\",\n-                                                span: $DIR/inner-attrs.rs:57:29: 57:34 (#0),\n+                                                span: $DIR/inner-attrs.rs:58:29: 58:34 (#0),\n                                             },\n                                         ],\n-                                        span: $DIR/inner-attrs.rs:57:28: 57:35 (#0),\n+                                        span: $DIR/inner-attrs.rs:58:28: 58:35 (#0),\n                                     },\n                                     Punct {\n                                         ch: ',',\n                                         spacing: Alone,\n-                                        span: $DIR/inner-attrs.rs:57:35: 57:36 (#0),\n+                                        span: $DIR/inner-attrs.rs:58:35: 58:36 (#0),\n                                     },\n                                     Ident {\n                                         ident: \"rustc_dummy\",\n-                                        span: $DIR/inner-attrs.rs:57:37: 57:48 (#0),\n+                                        span: $DIR/inner-attrs.rs:58:37: 58:48 (#0),\n                                     },\n                                     Group {\n                                         delimiter: Parenthesis,\n                                         stream: TokenStream [\n                                             Ident {\n                                                 ident: \"innermost\",\n-                                                span: $DIR/inner-attrs.rs:57:49: 57:58 (#0),\n+                                                span: $DIR/inner-attrs.rs:58:49: 58:58 (#0),\n                                             },\n                                         ],\n-                                        span: $DIR/inner-attrs.rs:57:48: 57:59 (#0),\n+                                        span: $DIR/inner-attrs.rs:58:48: 58:59 (#0),\n                                     },\n                                 ],\n-                                span: $DIR/inner-attrs.rs:57:24: 57:60 (#0),\n+                                span: $DIR/inner-attrs.rs:58:24: 58:60 (#0),\n                             },\n                         ],\n-                        span: $DIR/inner-attrs.rs:57:15: 57:61 (#0),\n+                        span: $DIR/inner-attrs.rs:58:15: 58:61 (#0),\n                     },\n                     Literal {\n                         kind: Integer,\n                         symbol: \"5\",\n                         suffix: None,\n-                        span: $DIR/inner-attrs.rs:58:13: 58:14 (#0),\n+                        span: $DIR/inner-attrs.rs:59:13: 59:14 (#0),\n                     },\n                 ],\n-                span: $DIR/inner-attrs.rs:56:15: 59:10 (#0),\n+                span: $DIR/inner-attrs.rs:57:15: 60:10 (#0),\n             },\n         ],\n-        span: $DIR/inner-attrs.rs:55:43: 60:6 (#0),\n+        span: $DIR/inner-attrs.rs:56:43: 61:6 (#0),\n     },\n     Punct {\n         ch: ';',\n         spacing: Alone,\n-        span: $DIR/inner-attrs.rs:60:6: 60:7 (#0),\n+        span: $DIR/inner-attrs.rs:61:6: 61:7 (#0),\n     },\n ]\n PRINT-ATTR_ARGS INPUT (DISPLAY): tenth\n PRINT-ATTR_ARGS INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"tenth\",\n-        span: $DIR/inner-attrs.rs:82:42: 82:47 (#0),\n+        span: $DIR/inner-attrs.rs:83:42: 83:47 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): fn weird_extern() {}\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"fn\",\n-        span: $DIR/inner-attrs.rs:81:5: 81:7 (#0),\n+        span: $DIR/inner-attrs.rs:82:5: 82:7 (#0),\n     },\n     Ident {\n         ident: \"weird_extern\",\n-        span: $DIR/inner-attrs.rs:81:8: 81:20 (#0),\n+        span: $DIR/inner-attrs.rs:82:8: 82:20 (#0),\n     },\n     Group {\n         delimiter: Parenthesis,\n         stream: TokenStream [],\n-        span: $DIR/inner-attrs.rs:81:20: 81:22 (#0),\n+        span: $DIR/inner-attrs.rs:82:20: 82:22 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [],\n-        span: $DIR/inner-attrs.rs:81:23: 83:6 (#0),\n+        span: $DIR/inner-attrs.rs:82:23: 84:6 (#0),\n     },\n ]"}, {"sha": "072a63baf3a47ff519856e31f18c814b64ccebe4", "filename": "src/test/ui/proc-macro/issue-41211.rs", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.rs?ref=81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "patch": "@@ -1,16 +0,0 @@\n-// aux-build:test-macros.rs\n-\n-// FIXME: https://github.com/rust-lang/rust/issues/41430\n-// This is a temporary regression test for the ICE reported in #41211\n-\n-#![feature(custom_inner_attributes)]\n-#![feature(register_attr)]\n-\n-#![register_attr(identity_attr)]\n-\n-#![identity_attr]\n-//~^ ERROR `identity_attr` is ambiguous\n-extern crate test_macros;\n-use test_macros::identity_attr;\n-\n-fn main() {}"}, {"sha": "60cd36a9cceb92d3c4d3ff5617238a8e4eb197a9", "filename": "src/test/ui/proc-macro/issue-41211.stderr", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.stderr?ref=81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "patch": "@@ -1,22 +0,0 @@\n-error[E0659]: `identity_attr` is ambiguous\n-  --> $DIR/issue-41211.rs:11:4\n-   |\n-LL | #![identity_attr]\n-   |    ^^^^^^^^^^^^^ ambiguous name\n-   |\n-   = note: ambiguous because of a conflict between a macro-expanded name and a less macro-expanded name from outer scope during import or macro resolution\n-note: `identity_attr` could refer to the attribute macro imported here\n-  --> $DIR/issue-41211.rs:14:5\n-   |\n-LL | use test_macros::identity_attr;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = help: use `crate::identity_attr` to refer to this attribute macro unambiguously\n-note: `identity_attr` could also refer to the explicitly registered attribute defined here\n-  --> $DIR/issue-41211.rs:9:18\n-   |\n-LL | #![register_attr(identity_attr)]\n-   |                  ^^^^^^^^^^^^^\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0659`."}, {"sha": "70e04bf7ee6e81216918bf504e5925ef0596fb1d", "filename": "src/test/ui/span/issue-36530.rs", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fspan%2Fissue-36530.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fspan%2Fissue-36530.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-36530.rs?ref=81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "patch": "@@ -1,12 +0,0 @@\n-// gate-test-custom_inner_attributes\n-\n-#![feature(register_attr)]\n-\n-#![register_attr(foo)]\n-\n-#[foo]\n-mod foo {\n-    #![foo] //~ ERROR custom inner attributes are unstable\n-}\n-\n-fn main() {}"}, {"sha": "a998d7217a13f563322a74698f5f29addd1c408c", "filename": "src/test/ui/span/issue-36530.stderr", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fspan%2Fissue-36530.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81f3841cfb5eae52d7914dfebb6a55b5951c5c3c/src%2Ftest%2Fui%2Fspan%2Fissue-36530.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-36530.stderr?ref=81f3841cfb5eae52d7914dfebb6a55b5951c5c3c", "patch": "@@ -1,12 +0,0 @@\n-error[E0658]: custom inner attributes are unstable\n-  --> $DIR/issue-36530.rs:9:8\n-   |\n-LL |     #![foo]\n-   |        ^^^\n-   |\n-   = note: see issue #54726 <https://github.com/rust-lang/rust/issues/54726> for more information\n-   = help: add `#![feature(custom_inner_attributes)]` to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}]}