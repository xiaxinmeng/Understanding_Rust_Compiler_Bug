{"sha": "dbeb5bf890211608bff5d28c3801c1a217a78d81", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZWI1YmY4OTAyMTE2MDhiZmY1ZDI4YzM4MDFjMWEyMTdhNzhkODE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-14T16:18:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-14T16:18:19Z"}, "message": "Auto merge of #45981 - GuillaumeGomez:rollup, r=GuillaumeGomez\n\nRollup of 7 pull requests\n\n- Successful merges: #45815, #45941, #45950, #45961, #45967, #45970, #45977\n- Failed merges:", "tree": {"sha": "8af03b854cd599a9fdba0c750f3f9988e4183a1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8af03b854cd599a9fdba0c750f3f9988e4183a1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbeb5bf890211608bff5d28c3801c1a217a78d81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbeb5bf890211608bff5d28c3801c1a217a78d81", "html_url": "https://github.com/rust-lang/rust/commit/dbeb5bf890211608bff5d28c3801c1a217a78d81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbeb5bf890211608bff5d28c3801c1a217a78d81/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9cd994cdc192e09a4b1028e828d6c3343364f37f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cd994cdc192e09a4b1028e828d6c3343364f37f", "html_url": "https://github.com/rust-lang/rust/commit/9cd994cdc192e09a4b1028e828d6c3343364f37f"}, {"sha": "66d0537ebe5441f740adb1c7f6b4eab5ee1801f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/66d0537ebe5441f740adb1c7f6b4eab5ee1801f1", "html_url": "https://github.com/rust-lang/rust/commit/66d0537ebe5441f740adb1c7f6b4eab5ee1801f1"}], "stats": {"total": 414, "additions": 175, "deletions": 239}, "files": [{"sha": "f9444a35a8b7918225c6dff98f0540790e9d5c5a", "filename": "src/ci/docker/cross/build-arm-musl.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fcross%2Fbuild-arm-musl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fcross%2Fbuild-arm-musl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fcross%2Fbuild-arm-musl.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "ad38cf872ad07bce5afb43a40040b0c4270e7083", "filename": "src/ci/docker/cross/build-rumprun.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fcross%2Fbuild-rumprun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fcross%2Fbuild-rumprun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fcross%2Fbuild-rumprun.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "9bfb57f5741c569c77e9327edba2fc15e9ad3c2f", "filename": "src/ci/docker/cross/install-x86_64-redox.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fcross%2Finstall-x86_64-redox.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fcross%2Finstall-x86_64-redox.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fcross%2Finstall-x86_64-redox.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "ef8f0c37f8c370073c277c984203524ccab5db24", "filename": "src/ci/docker/cross2/build-fuchsia-toolchain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fcross2%2Fbuild-fuchsia-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fcross2%2Fbuild-fuchsia-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fcross2%2Fbuild-fuchsia-toolchain.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "c04c8b7194c710e0c344ed94a43c558e5f0abbf8", "filename": "src/ci/docker/cross2/build-solaris-toolchain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fcross2%2Fbuild-solaris-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fcross2%2Fbuild-solaris-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fcross2%2Fbuild-solaris-toolchain.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "2ebbe0cdee9b806e063b95f91d592ad879bbb16b", "filename": "src/ci/docker/disabled/dist-x86_64-dragonfly/build-toolchain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-dragonfly%2Fbuild-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-dragonfly%2Fbuild-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-dragonfly%2Fbuild-toolchain.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "a1115e254b5b2b67053fca98ae046c3fd048f681", "filename": "src/ci/docker/disabled/dist-x86_64-haiku/build-toolchain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Fbuild-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Fbuild-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Fbuild-toolchain.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "a37532e203aa49d771c92a82f9849e44593b5663", "filename": "src/ci/docker/disabled/dist-x86_64-haiku/fetch-packages.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Ffetch-packages.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Ffetch-packages.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Ffetch-packages.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "2bfddb0de99b01bb1f3df1d3351e8bc97a70c5aa", "filename": "src/ci/docker/disabled/wasm32-exp/node.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32-exp%2Fnode.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32-exp%2Fnode.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32-exp%2Fnode.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "22b719bb30755841740a4a2e8c4ddcec6edf6b56", "filename": "src/ci/docker/dist-aarch64-linux/build-toolchains.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2Fbuild-toolchains.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2Fbuild-toolchains.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2Fbuild-toolchains.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "c53cca0bb982c672352abcb69f16cf04d3622720", "filename": "src/ci/docker/dist-arm-linux/build-toolchains.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-arm-linux%2Fbuild-toolchains.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-arm-linux%2Fbuild-toolchains.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-arm-linux%2Fbuild-toolchains.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "964182a5ad5448102c1a72f028a890196d0a0fc4", "filename": "src/ci/docker/dist-armhf-linux/build-toolchains.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Fbuild-toolchains.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Fbuild-toolchains.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Fbuild-toolchains.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "40adfe5d53e0bd38d008d5fe529605319c68a801", "filename": "src/ci/docker/dist-armv7-linux/build-toolchains.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Fbuild-toolchains.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Fbuild-toolchains.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Fbuild-toolchains.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "3c86a8e38175eaabe43c3fcb8c2403b98ddf1b59", "filename": "src/ci/docker/dist-i686-freebsd/build-toolchain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-i686-freebsd%2Fbuild-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-i686-freebsd%2Fbuild-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-freebsd%2Fbuild-toolchain.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "f4bdbd80d0edb761dc08e34286e0c76a1ef4a0a0", "filename": "src/ci/docker/dist-i686-linux/build-binutils.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-binutils.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-binutils.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-binutils.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "9a3763d421ad2b721d773494cc11fc2d7ffbec28", "filename": "src/ci/docker/dist-i686-linux/build-cmake.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-cmake.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-cmake.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-cmake.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "edf3175b81c436321f510ec99b560f627d93a677", "filename": "src/ci/docker/dist-i686-linux/build-curl.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-curl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-curl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-curl.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "6b991bb59e4b0dcc5fd9018b51e70960afe9a6c9", "filename": "src/ci/docker/dist-i686-linux/build-gcc.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-gcc.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-gcc.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-gcc.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "ff62a68629a8bfdb79bee9d727f35c6066030434", "filename": "src/ci/docker/dist-i686-linux/build-git.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-git.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-git.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-git.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "2f15114d6f98028857bbeef289cedc70d1c887e0", "filename": "src/ci/docker/dist-i686-linux/build-headers.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-headers.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-headers.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-headers.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "e7226ace020bd8bc8dc35b11e1e07b3ab9b66a53", "filename": "src/ci/docker/dist-i686-linux/build-openssl.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-openssl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-openssl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-openssl.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "c6b8cdde4b9af4d57737dd910efe1ebb67c4425e", "filename": "src/ci/docker/dist-i686-linux/build-python.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-python.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-python.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-python.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "15211acb4459b8fba9e12be5ba242b65cd6aaa7d", "filename": "src/ci/docker/dist-powerpc-linux/build-powerpc-toolchain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2Fbuild-powerpc-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2Fbuild-powerpc-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2Fbuild-powerpc-toolchain.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "ac6460a472993d5411ff76eeeb3f5b6faee6d4d6", "filename": "src/ci/docker/dist-powerpc64-linux/build-powerpc64-toolchain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fbuild-powerpc64-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fbuild-powerpc64-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fbuild-powerpc64-toolchain.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "2f6937afff032cc432c453b4656ce90be5a24e99", "filename": "src/ci/docker/dist-powerpc64le-linux/build-powerpc64le-toolchain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2Fbuild-powerpc64le-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2Fbuild-powerpc64le-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2Fbuild-powerpc64le-toolchain.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "306204dd0e1f6414a62b9c89b87c45b92d40ad25", "filename": "src/ci/docker/dist-s390x-linux/build-s390x-toolchain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fbuild-s390x-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fbuild-s390x-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fbuild-s390x-toolchain.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "3c86a8e38175eaabe43c3fcb8c2403b98ddf1b59", "filename": "src/ci/docker/dist-x86_64-freebsd/build-toolchain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-freebsd%2Fbuild-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-freebsd%2Fbuild-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-freebsd%2Fbuild-toolchain.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "f4bdbd80d0edb761dc08e34286e0c76a1ef4a0a0", "filename": "src/ci/docker/dist-x86_64-linux/build-binutils.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-binutils.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-binutils.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-binutils.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "9a3763d421ad2b721d773494cc11fc2d7ffbec28", "filename": "src/ci/docker/dist-x86_64-linux/build-cmake.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-cmake.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-cmake.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-cmake.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "edf3175b81c436321f510ec99b560f627d93a677", "filename": "src/ci/docker/dist-x86_64-linux/build-curl.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-curl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-curl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-curl.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "6b991bb59e4b0dcc5fd9018b51e70960afe9a6c9", "filename": "src/ci/docker/dist-x86_64-linux/build-gcc.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-gcc.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-gcc.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-gcc.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "ff62a68629a8bfdb79bee9d727f35c6066030434", "filename": "src/ci/docker/dist-x86_64-linux/build-git.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-git.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-git.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-git.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "2f15114d6f98028857bbeef289cedc70d1c887e0", "filename": "src/ci/docker/dist-x86_64-linux/build-headers.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-headers.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-headers.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-headers.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "e7226ace020bd8bc8dc35b11e1e07b3ab9b66a53", "filename": "src/ci/docker/dist-x86_64-linux/build-openssl.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-openssl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-openssl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-openssl.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "c6b8cdde4b9af4d57737dd910efe1ebb67c4425e", "filename": "src/ci/docker/dist-x86_64-linux/build-python.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-python.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-python.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-python.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "9e1b769f6c405ebb345b053698a1959c02cbbd8f", "filename": "src/ci/docker/dist-x86_64-netbsd/build-netbsd-toolchain.sh", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2Fbuild-netbsd-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2Fbuild-netbsd-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2Fbuild-netbsd-toolchain.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT.\n@@ -64,12 +64,12 @@ cd ../..\n rm -rf usr\n \n cat > /x-tools/x86_64-unknown-netbsd/bin/x86_64--netbsd-gcc-sysroot <<'EOF'\n-#!/bin/bash\n+#!/usr/bin/env bash\n exec /x-tools/x86_64-unknown-netbsd/bin/x86_64--netbsd-gcc --sysroot=/x-tools/x86_64-unknown-netbsd/sysroot \"$@\"\n EOF\n \n cat > /x-tools/x86_64-unknown-netbsd/bin/x86_64--netbsd-g++-sysroot <<'EOF'\n-#!/bin/bash\n+#!/usr/bin/env bash\n exec /x-tools/x86_64-unknown-netbsd/bin/x86_64--netbsd-g++ --sysroot=/x-tools/x86_64-unknown-netbsd/sysroot \"$@\"\n EOF\n "}, {"sha": "a863e1a2d5dc07f658ec5e678aa048912fe29219", "filename": "src/ci/docker/run.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Fdocker%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Frun.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "e073a3d99c157dc765293c8ca770a63a34a3ec33", "filename": "src/ci/init_repo.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Finit_repo.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Finit_repo.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Finit_repo.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "a8a7dd5bc27aaa9a973d53ee5dc54ab9b4a1c209", "filename": "src/ci/run.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT."}, {"sha": "f68ee847eb3ab988bec598852d92eea43bf6e84f", "filename": "src/liballoc/str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fliballoc%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Fliballoc%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstr.rs?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -2293,7 +2293,7 @@ impl str {\n     ///\n     /// - U+0021 ... U+002F `! \" # $ % & ' ( ) * + , - . /`, or\n     /// - U+003A ... U+0040 `: ; < = > ? @`, or\n-    /// - U+005B ... U+0060 `[ \\\\ ] ^ _ \\``, or\n+    /// - U+005B ... U+0060 ``[ \\ ] ^ _ ` ``, or\n     /// - U+007B ... U+007E `{ | } ~`\n     #[unstable(feature = \"ascii_ctype\", issue = \"39658\")]\n     #[inline]"}, {"sha": "1230066e2b33bea6c86b3ccec8b82d50b0221698", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -2630,7 +2630,7 @@ impl u8 {\n     ///\n     /// - U+0021 ... U+002F `! \" # $ % & ' ( ) * + , - . /`, or\n     /// - U+003A ... U+0040 `: ; < = > ? @`, or\n-    /// - U+005B ... U+0060 `[ \\\\ ] ^ _ \\``, or\n+    /// - U+005B ... U+0060 ``[ \\ ] ^ _ ` ``, or\n     /// - U+007B ... U+007E `{ | } ~`\n     ///\n     /// # Examples"}, {"sha": "be5108238fc0491a3e8bf2018211636220af0cec", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -76,9 +76,12 @@ pub trait FromStr: Sized {\n \n     /// Parses a string `s` to return a value of this type.\n     ///\n-    /// If parsing succeeds, return the value inside `Ok`, otherwise\n+    /// If parsing succeeds, return the value inside [`Ok`], otherwise\n     /// when the string is ill-formatted return an error specific to the\n-    /// inside `Err`. The error type is specific to implementation of the trait.\n+    /// inside [`Err`]. The error type is specific to implementation of the trait.\n+    ///\n+    /// [`Ok`]: ../../std/result/enum.Result.html#variant.Ok\n+    /// [`Err`]: ../../std/result/enum.Result.html#variant.Err\n     ///\n     /// # Examples\n     ///"}, {"sha": "4f0fff58918092e7a53b8125ad5812902ca1600f", "filename": "src/librustc_mir/borrow_check.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Flibrustc_mir%2Fborrow_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Flibrustc_mir%2Fborrow_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check.rs?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -93,9 +93,7 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(infcx: &InferCtxt<'a, 'gcx, 'tcx>,\n                         tcx.cannot_move_out_of(span, \"borrowed_content\", origin),\n                     IllegalMoveOriginKind::InteriorOfTypeWithDestructor { container_ty: ty } =>\n                         tcx.cannot_move_out_of_interior_of_drop(span, ty, origin),\n-                    IllegalMoveOriginKind::InteriorOfSlice { elem_ty: ty, is_index } =>\n-                        tcx.cannot_move_out_of_interior_noncopy(span, ty, is_index, origin),\n-                    IllegalMoveOriginKind::InteriorOfArray { elem_ty: ty, is_index } =>\n+                    IllegalMoveOriginKind::InteriorOfSliceOrArray { ty, is_index } =>\n                         tcx.cannot_move_out_of_interior_noncopy(span, ty, is_index, origin),\n                 };\n                 err.emit();"}, {"sha": "f333dd4d2a1783c2d74dd643bf44d01b27120697", "filename": "src/librustc_mir/dataflow/move_paths/builder.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -137,21 +137,21 @@ impl<'b, 'a, 'gcx, 'tcx> Gatherer<'b, 'a, 'gcx, 'tcx> {\n             // move out of union - always move the entire union\n             ty::TyAdt(adt, _) if adt.is_union() =>\n                 return Err(MoveError::UnionMove { path: base }),\n-            ty::TySlice(elem_ty) =>\n+            ty::TySlice(_) =>\n                 return Err(MoveError::cannot_move_out_of(\n                     mir.source_info(self.loc).span,\n-                    InteriorOfSlice {\n-                        elem_ty, is_index: match proj.elem {\n+                    InteriorOfSliceOrArray {\n+                        ty: lv_ty, is_index: match proj.elem {\n                             ProjectionElem::Index(..) => true,\n                             _ => false\n                         },\n                     })),\n-            ty::TyArray(elem_ty, _num_elems) => match proj.elem {\n+            ty::TyArray(..) => match proj.elem {\n                 ProjectionElem::Index(..) =>\n                     return Err(MoveError::cannot_move_out_of(\n                         mir.source_info(self.loc).span,\n-                        InteriorOfArray {\n-                            elem_ty, is_index: true\n+                        InteriorOfSliceOrArray {\n+                            ty: lv_ty, is_index: true\n                         })),\n                 _ => {\n                     // FIXME: still badly broken"}, {"sha": "73218c9815024225d8be4eec876796c4f5e50a83", "filename": "src/librustc_mir/dataflow/move_paths/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -239,8 +239,7 @@ pub(crate) enum IllegalMoveOriginKind<'tcx> {\n     Static,\n     BorrowedContent,\n     InteriorOfTypeWithDestructor { container_ty: ty::Ty<'tcx> },\n-    InteriorOfSlice { elem_ty: ty::Ty<'tcx>, is_index: bool, },\n-    InteriorOfArray { elem_ty: ty::Ty<'tcx>, is_index: bool, },\n+    InteriorOfSliceOrArray { ty: ty::Ty<'tcx>, is_index: bool, },\n }\n \n #[derive(Debug)]"}, {"sha": "6b0f209c0c454418f714a4646fe97738eed4d6b3", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -42,7 +42,7 @@ pub fn render_with_highlighting(src: &str, class: Option<&str>, id: Option<&str>\n \n     let mut out = Vec::new();\n     if let Some((tooltip, class)) = tooltip {\n-        write!(out, \"<div class='information'><div class='tooltip {}'>\u26a0<span \\\n+        write!(out, \"<div class='information'><div class='tooltip {}'>\u24d8<span \\\n                      class='tooltiptext'>{}</span></div></div>\",\n                class, tooltip).unwrap();\n     }"}, {"sha": "f7a67b1b9c79cca408bc70f88c1f447be12029ca", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -227,9 +227,9 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for CodeBlocks<'a, I> {\n                 ))\n             });\n             let tooltip = if ignore {\n-                Some((\"Be careful when using this code, it's not being tested!\", \"ignore\"))\n+                Some((\"This example is not tested\", \"ignore\"))\n             } else if compile_fail {\n-                Some((\"This code doesn't compile so be extra careful!\", \"compile_fail\"))\n+                Some((\"This example deliberately fails to compile\", \"compile_fail\"))\n             } else {\n                 None\n             };\n@@ -638,9 +638,9 @@ pub fn render(w: &mut fmt::Formatter,\n                     ))\n                 });\n                 let tooltip = if ignore {\n-                    Some((\"Be careful when using this code, it's not being tested!\", \"ignore\"))\n+                    Some((\"This example is not tested\", \"ignore\"))\n                 } else if compile_fail {\n-                    Some((\"This code doesn't compile so be extra careful!\", \"compile_fail\"))\n+                    Some((\"This example deliberately fails to compile\", \"compile_fail\"))\n                 } else {\n                     None\n                 };"}, {"sha": "57f8c39756e3c8bad6acb6e5836e5a8c307de1e9", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -737,7 +737,7 @@ pub trait Read {\n     /// Transforms this `Read` instance to an [`Iterator`] over its bytes.\n     ///\n     /// The returned type implements [`Iterator`] where the `Item` is\n-    /// [`Result`]`<`[`u8`]`, `[`io::Error`]>`.\n+    /// [`Result`]`<`[`u8`]`, `[`io::Error`]`>`.\n     /// The yielded item is [`Ok`] if a byte was successfully read and [`Err`]\n     /// otherwise. EOF is mapped to returning [`None`] from this iterator.\n     ///\n@@ -748,7 +748,7 @@ pub trait Read {\n     /// [file]: ../fs/struct.File.html\n     /// [`Iterator`]: ../../std/iter/trait.Iterator.html\n     /// [`Result`]: ../../std/result/enum.Result.html\n-    /// [`io::Error``]: ../../std/io/struct.Error.html\n+    /// [`io::Error`]: ../../std/io/struct.Error.html\n     /// [`u8`]: ../../std/primitive.u8.html\n     /// [`Ok`]: ../../std/result/enum.Result.html#variant.Ok\n     /// [`Err`]: ../../std/result/enum.Result.html#variant.Err"}, {"sha": "e20937c6c7bdb0a983a78347c0be3540b982acdd", "filename": "src/libstd_unicode/char.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Flibstd_unicode%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Flibstd_unicode%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd_unicode%2Fchar.rs?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -1292,7 +1292,7 @@ impl char {\n     ///\n     /// - U+0021 ... U+002F `! \" # $ % & ' ( ) * + , - . /`, or\n     /// - U+003A ... U+0040 `: ; < = > ? @`, or\n-    /// - U+005B ... U+0060 `[ \\\\ ] ^ _ \\``, or\n+    /// - U+005B ... U+0060 ``[ \\ ] ^ _ ` ``, or\n     /// - U+007B ... U+007E `{ | } ~`\n     ///\n     /// # Examples"}, {"sha": "d75f92580cc1d2fc9e6d5e4d490970827e285c84", "filename": "src/test/compile-fail/E0508.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Ftest%2Fcompile-fail%2FE0508.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Ftest%2Fcompile-fail%2FE0508.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0508.rs?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -8,9 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// revisions: ast mir\n+//[mir]compile-flags: -Zborrowck-mir\n+\n struct NonCopy;\n \n fn main() {\n     let array = [NonCopy; 1];\n-    let _value = array[0]; //~ ERROR E0508\n+    let _value = array[0];  //[ast]~ ERROR E0508\n+                            //[mir]~^ ERROR (Ast) [E0508]\n+                            //[mir]~| ERROR (Mir) [E0508]\n }"}, {"sha": "0d1444b376156be6be2f19dfd875f84ddda40825", "filename": "src/test/incremental/hashes/match_expressions.rs", "status": "modified", "additions": 47, "deletions": 60, "changes": 107, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Ftest%2Fincremental%2Fhashes%2Fmatch_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Ftest%2Fincremental%2Fhashes%2Fmatch_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fmatch_expressions.rs?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -36,10 +36,9 @@ pub fn add_arm(x: u32) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\",\n+    except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn add_arm(x: u32) -> u32 {\n@@ -64,10 +63,9 @@ pub fn change_order_of_arms(x: u32) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\",\n+    except=\"HirBody,MirValidated,MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_order_of_arms(x: u32) -> u32 {\n@@ -91,10 +89,9 @@ pub fn add_guard_clause(x: u32, y: bool) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\",\n+    except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn add_guard_clause(x: u32, y: bool) -> u32 {\n@@ -118,10 +115,9 @@ pub fn change_guard_clause(x: u32, y: bool) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\",\n+    except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_guard_clause(x: u32, y: bool) -> u32 {\n@@ -145,10 +141,9 @@ pub fn add_at_binding(x: u32) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\",\n+    except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn add_at_binding(x: u32) -> u32 {\n@@ -172,10 +167,9 @@ pub fn change_name_of_at_binding(x: u32) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\",\n+    except=\"HirBody,MirValidated,MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_name_of_at_binding(x: u32) -> u32 {\n@@ -193,21 +187,20 @@ pub fn change_name_of_at_binding(x: u32) -> u32 {\n pub fn change_simple_name_to_pattern(x: u32) -> u32 {\n     match (x, x & 1) {\n         (0, 0) => 0,\n-        a      => 1\n+        a => 1,\n     }\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\",\n+    except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_simple_name_to_pattern(x: u32) -> u32 {\n     match (x, x & 1) {\n         (0, 0) => 0,\n-        (x, y) => 1\n+        (x, y) => 1,\n     }\n }\n \n@@ -224,10 +217,9 @@ pub fn change_name_in_pattern(x: u32) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\",\n+    except=\"HirBody,MirValidated,MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_name_in_pattern(x: u32) -> u32 {\n@@ -245,21 +237,20 @@ pub fn change_name_in_pattern(x: u32) -> u32 {\n pub fn change_mutability_of_binding_in_pattern(x: u32) -> u32 {\n     match (x, x & 1) {\n         (a, 0) => 0,\n-        _      => 1\n+        _ => 1,\n     }\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\",\n+    except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_mutability_of_binding_in_pattern(x: u32) -> u32 {\n     match (x, x & 1) {\n         (mut a, 0) => 0,\n-        _      => 1\n+        _ => 1,\n     }\n }\n \n@@ -270,21 +261,20 @@ pub fn change_mutability_of_binding_in_pattern(x: u32) -> u32 {\n pub fn add_ref_to_binding_in_pattern(x: u32) -> u32 {\n     match (x, x & 1) {\n         (a, 0) => 0,\n-        _      => 1\n+        _ => 1,\n     }\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\",\n+    except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn add_ref_to_binding_in_pattern(x: u32) -> u32 {\n     match (x, x & 1) {\n         (ref a, 0) => 0,\n-        _      => 1,\n+        _ => 1,\n     }\n }\n \n@@ -295,21 +285,20 @@ pub fn add_ref_to_binding_in_pattern(x: u32) -> u32 {\n pub fn add_amp_to_binding_in_pattern(x: u32) -> u32 {\n     match (&x, x & 1) {\n         (a, 0) => 0,\n-        _      => 1\n+        _ => 1,\n     }\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\",\n+except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn add_amp_to_binding_in_pattern(x: u32) -> u32 {\n     match (&x, x & 1) {\n         (&a, 0) => 0,\n-        _      => 1,\n+        _ => 1,\n     }\n }\n \n@@ -326,10 +315,9 @@ pub fn change_rhs_of_arm(x: u32) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\",\n+    except=\"HirBody,MirValidated,MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn change_rhs_of_arm(x: u32) -> u32 {\n@@ -353,10 +341,9 @@ pub fn add_alternative_to_arm(x: u32) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\",\n+    except=\"HirBody,MirValidated,MirOptimized,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn add_alternative_to_arm(x: u32) -> u32 {"}, {"sha": "351039c678024c1dc795e62f1ecca3ec1af8ee68", "filename": "src/test/incremental/hashes/unary_and_binary_exprs.rs", "status": "modified", "additions": 56, "deletions": 112, "changes": 168, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Ftest%2Fincremental%2Fhashes%2Funary_and_binary_exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Ftest%2Fincremental%2Fhashes%2Funary_and_binary_exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Funary_and_binary_exprs.rs?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -32,10 +32,8 @@ pub fn const_negation() -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn const_negation() -> i32 {\n@@ -51,10 +49,8 @@ pub fn const_bitwise_not() -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn const_bitwise_not() -> i32 {\n@@ -70,10 +66,8 @@ pub fn var_negation(x: i32, y: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn var_negation(x: i32, y: i32) -> i32 {\n@@ -89,10 +83,8 @@ pub fn var_bitwise_not(x: i32, y: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn var_bitwise_not(x: i32, y: i32) -> i32 {\n@@ -108,10 +100,8 @@ pub fn var_deref(x: &i32, y: &i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated,TypeckTables\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn var_deref(x: &i32, y: &i32) -> i32 {\n@@ -127,10 +117,8 @@ pub fn first_const_add() -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn first_const_add() -> i32 {\n@@ -146,10 +134,8 @@ pub fn second_const_add() -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn second_const_add() -> i32 {\n@@ -165,10 +151,8 @@ pub fn first_var_add(a: i32, b: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn first_var_add(a: i32, b: i32) -> i32 {\n@@ -184,10 +168,8 @@ pub fn second_var_add(a: i32, b: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn second_var_add(a: i32, b: i32) -> i32 {\n@@ -203,10 +185,8 @@ pub fn plus_to_minus(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn plus_to_minus(a: i32) -> i32 {\n@@ -222,10 +202,8 @@ pub fn plus_to_mult(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn plus_to_mult(a: i32) -> i32 {\n@@ -241,10 +219,8 @@ pub fn plus_to_div(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn plus_to_div(a: i32) -> i32 {\n@@ -260,10 +236,8 @@ pub fn plus_to_mod(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn plus_to_mod(a: i32) -> i32 {\n@@ -279,10 +253,8 @@ pub fn and_to_or(a: bool, b: bool) -> bool {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn and_to_or(a: bool, b: bool) -> bool {\n@@ -298,10 +270,8 @@ pub fn bitwise_and_to_bitwise_or(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn bitwise_and_to_bitwise_or(a: i32) -> i32 {\n@@ -317,10 +287,8 @@ pub fn bitwise_and_to_bitwise_xor(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn bitwise_and_to_bitwise_xor(a: i32) -> i32 {\n@@ -336,10 +304,8 @@ pub fn bitwise_and_to_lshift(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn bitwise_and_to_lshift(a: i32) -> i32 {\n@@ -355,10 +321,8 @@ pub fn bitwise_and_to_rshift(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn bitwise_and_to_rshift(a: i32) -> i32 {\n@@ -374,10 +338,8 @@ pub fn eq_to_uneq(a: i32) -> bool {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn eq_to_uneq(a: i32) -> bool {\n@@ -393,10 +355,8 @@ pub fn eq_to_lt(a: i32) -> bool {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn eq_to_lt(a: i32) -> bool {\n@@ -412,10 +372,8 @@ pub fn eq_to_gt(a: i32) -> bool {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn eq_to_gt(a: i32) -> bool {\n@@ -431,10 +389,8 @@ pub fn eq_to_le(a: i32) -> bool {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn eq_to_le(a: i32) -> bool {\n@@ -450,10 +406,8 @@ pub fn eq_to_ge(a: i32) -> bool {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn eq_to_ge(a: i32) -> bool {\n@@ -471,10 +425,8 @@ pub fn type_cast(a: u8) -> u64 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated,TypeckTables\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn type_cast(a: u8) -> u64 {\n@@ -492,10 +444,8 @@ pub fn value_cast(a: u32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn value_cast(a: u32) -> i32 {\n@@ -514,10 +464,8 @@ pub fn lvalue() -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn lvalue() -> i32 {\n@@ -538,10 +486,8 @@ pub fn rvalue() -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn rvalue() -> i32 {\n@@ -559,10 +505,8 @@ pub fn index_to_slice(s: &[u8], i: usize, j: usize) -> u8 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(except=\"HirBody,MirOptimized,MirValidated\", cfg=\"cfail2\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n pub fn index_to_slice(s: &[u8], i: usize, j: usize) -> u8 {"}, {"sha": "d6cd5a24d915fedfe37d012689dd2809c4bb8545", "filename": "src/test/rustdoc/codeblock-title.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Ftest%2Frustdoc%2Fcodeblock-title.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbeb5bf890211608bff5d28c3801c1a217a78d81/src%2Ftest%2Frustdoc%2Fcodeblock-title.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fcodeblock-title.rs?ref=dbeb5bf890211608bff5d28c3801c1a217a78d81", "patch": "@@ -12,8 +12,8 @@\n \n // ignore-tidy-linelength\n \n-// @has foo/fn.bar.html '//*[@class=\"tooltip compile_fail\"]/span' \"This code doesn't compile so be extra careful!\"\n-// @has foo/fn.bar.html '//*[@class=\"tooltip ignore\"]/span' \"Be careful when using this code, it's not being tested!\"\n+// @has foo/fn.bar.html '//*[@class=\"tooltip compile_fail\"]/span' \"This example deliberately fails to compile\"\n+// @has foo/fn.bar.html '//*[@class=\"tooltip ignore\"]/span' \"This example is not tested\"\n \n /// foo\n ///"}]}