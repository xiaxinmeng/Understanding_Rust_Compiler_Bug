{"sha": "7f2a4f78224f9442bca6ceb7739d3d86a7591153", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmMmE0Zjc4MjI0Zjk0NDJiY2E2Y2ViNzczOWQzZDg2YTc1OTExNTM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-20T01:12:46Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-05T22:08:44Z"}, "message": "Add ConstValue::Param and ConstValue::Infer\n\nCo-Authored-By: Gabriel Smith <yodaldevoid@users.noreply.github.com>", "tree": {"sha": "5590d2e250aff6da4d8389e909a88a5692b02100", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5590d2e250aff6da4d8389e909a88a5692b02100"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f2a4f78224f9442bca6ceb7739d3d86a7591153", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f2a4f78224f9442bca6ceb7739d3d86a7591153", "html_url": "https://github.com/rust-lang/rust/commit/7f2a4f78224f9442bca6ceb7739d3d86a7591153", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f2a4f78224f9442bca6ceb7739d3d86a7591153/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ebc858e5dd01417a05b08bac067bff2c55faca7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ebc858e5dd01417a05b08bac067bff2c55faca7", "html_url": "https://github.com/rust-lang/rust/commit/1ebc858e5dd01417a05b08bac067bff2c55faca7"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "dbbeda3e578e46af8851d698f88a589e954a8f74", "filename": "src/librustc/mir/interpret/value.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7f2a4f78224f9442bca6ceb7739d3d86a7591153/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f2a4f78224f9442bca6ceb7739d3d86a7591153/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs?ref=7f2a4f78224f9442bca6ceb7739d3d86a7591153", "patch": "@@ -1,6 +1,6 @@\n use std::fmt;\n \n-use crate::ty::{Ty, layout::{HasDataLayout, Size}};\n+use crate::ty::{Ty, InferConst, ParamConst, layout::{HasDataLayout, Size}};\n \n use super::{EvalResult, Pointer, PointerArithmetic, Allocation, AllocId, sign_extend, truncate};\n \n@@ -17,6 +17,12 @@ pub struct RawConst<'tcx> {\n /// match the `LocalState` optimizations for easy conversions between `Value` and `ConstValue`.\n #[derive(Copy, Clone, Debug, Eq, PartialEq, PartialOrd, Ord, RustcEncodable, RustcDecodable, Hash)]\n pub enum ConstValue<'tcx> {\n+    /// A const generic parameter.\n+    Param(ParamConst),\n+\n+    /// Infer the value of the const.\n+    Infer(InferConst<'tcx>),\n+\n     /// Used only for types with `layout::abi::Scalar` ABI and ZSTs.\n     ///\n     /// Not using the enum `Value` to encode that this must not be `Undef`.\n@@ -43,6 +49,8 @@ impl<'tcx> ConstValue<'tcx> {\n     #[inline]\n     pub fn try_to_scalar(&self) -> Option<Scalar> {\n         match *self {\n+            ConstValue::Param(_) |\n+            ConstValue::Infer(_) |\n             ConstValue::ByRef(..) |\n             ConstValue::Slice(..) => None,\n             ConstValue::Scalar(val) => Some(val),"}]}