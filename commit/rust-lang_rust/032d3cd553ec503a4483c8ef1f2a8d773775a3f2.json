{"sha": "032d3cd553ec503a4483c8ef1f2a8d773775a3f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzMmQzY2Q1NTNlYzUwM2E0NDgzYzhlZjFmMmE4ZDc3Mzc3NWEzZjI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-30T10:03:55Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-30T10:04:05Z"}, "message": "fix BTreeMap test compilation with Miri", "tree": {"sha": "b81366a3d094a61b2251ae32befccbe075962025", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b81366a3d094a61b2251ae32befccbe075962025"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/032d3cd553ec503a4483c8ef1f2a8d773775a3f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/032d3cd553ec503a4483c8ef1f2a8d773775a3f2", "html_url": "https://github.com/rust-lang/rust/commit/032d3cd553ec503a4483c8ef1f2a8d773775a3f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/032d3cd553ec503a4483c8ef1f2a8d773775a3f2/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8926bb497d9b127eb318aea5aed0e745d8381591", "url": "https://api.github.com/repos/rust-lang/rust/commits/8926bb497d9b127eb318aea5aed0e745d8381591", "html_url": "https://github.com/rust-lang/rust/commit/8926bb497d9b127eb318aea5aed0e745d8381591"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e28b71510ce71c8aa2785f33a46d796f7da3585a", "filename": "src/liballoc/tests/btree/map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/032d3cd553ec503a4483c8ef1f2a8d773775a3f2/src%2Fliballoc%2Ftests%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/032d3cd553ec503a4483c8ef1f2a8d773775a3f2/src%2Fliballoc%2Ftests%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fbtree%2Fmap.rs?ref=032d3cd553ec503a4483c8ef1f2a8d773775a3f2", "patch": "@@ -528,7 +528,7 @@ fn test_range_1000() {\n     #[cfg(not(miri))] // Miri is too slow\n     let size = 1000;\n     #[cfg(miri)]\n-    let size = MIN_INSERTS_HEIGHT_2;\n+    let size = MIN_INSERTS_HEIGHT_2 as u32;\n     let map: BTreeMap<_, _> = (0..size).map(|i| (i, i)).collect();\n \n     fn test(map: &BTreeMap<u32, u32>, size: u32, min: Bound<&u32>, max: Bound<&u32>) {"}]}