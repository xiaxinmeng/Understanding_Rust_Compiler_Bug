{"sha": "a789b49e4c0e7d742cc39713484596293d844537", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3ODliNDllNGMwZTdkNzQyY2MzOTcxMzQ4NDU5NjI5M2Q4NDQ1Mzc=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-07-30T13:28:34Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-07-30T13:28:34Z"}, "message": "Use `Lrc` instead of `Rc` in `MiriCompilerCalls::config()`", "tree": {"sha": "2fdbd92221022cb73feca4b188355be0f02a8e67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2fdbd92221022cb73feca4b188355be0f02a8e67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a789b49e4c0e7d742cc39713484596293d844537", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYQP+ghUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLgc5wEA7gMYsnoXf/QER97zr9b0x/sd5OpQ\nNMemYnVsb8f8ZlgBAPDDR5wa6lyTiPnaL75uUPtKJ/j/w+MalknKKEi3UmkI\n=kZOO\n-----END PGP SIGNATURE-----", "payload": "tree 2fdbd92221022cb73feca4b188355be0f02a8e67\nparent 453e3ef7dab5aad6450bee09b2c02de94c5b18cb\nauthor hyd-dev <yd-huang@outlook.com> 1627651714 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1627651714 +0800\n\nUse `Lrc` instead of `Rc` in `MiriCompilerCalls::config()`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a789b49e4c0e7d742cc39713484596293d844537", "html_url": "https://github.com/rust-lang/rust/commit/a789b49e4c0e7d742cc39713484596293d844537", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a789b49e4c0e7d742cc39713484596293d844537/comments", "author": null, "committer": null, "parents": [{"sha": "453e3ef7dab5aad6450bee09b2c02de94c5b18cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/453e3ef7dab5aad6450bee09b2c02de94c5b18cb", "html_url": "https://github.com/rust-lang/rust/commit/453e3ef7dab5aad6450bee09b2c02de94c5b18cb"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "18c393815ca5e9422fe0428e519eef710afa828c", "filename": "src/bin/miri.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a789b49e4c0e7d742cc39713484596293d844537/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a789b49e4c0e7d742cc39713484596293d844537/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=a789b49e4c0e7d742cc39713484596293d844537", "patch": "@@ -1,5 +1,6 @@\n #![feature(rustc_private, bool_to_option, stmt_expr_attributes)]\n \n+extern crate rustc_data_structures;\n extern crate rustc_driver;\n extern crate rustc_errors;\n extern crate rustc_hir;\n@@ -12,12 +13,12 @@ use std::convert::TryFrom;\n use std::env;\n use std::num::NonZeroU64;\n use std::path::PathBuf;\n-use std::rc::Rc;\n use std::str::FromStr;\n \n use hex::FromHexError;\n use log::debug;\n \n+use rustc_data_structures::sync::Lrc;\n use rustc_driver::Compilation;\n use rustc_errors::emitter::{ColorConfig, HumanReadableErrorType};\n use rustc_hir::{self as hir, def_id::LOCAL_CRATE, Node};\n@@ -42,7 +43,7 @@ impl rustc_driver::Callbacks for MiriCompilerCalls {\n                 // HACK: rustc will emit \"crate ... required to be available in rlib format, but\n                 // was not found in this form\" errors once we use `tcx.dependency_formats()` if\n                 // there's no rlib provided, so setting a dummy path here to workaround those errors.\n-                Rc::make_mut(&mut crate_source).rlib = Some((PathBuf::new(), PathKind::All));\n+                Lrc::make_mut(&mut crate_source).rlib = Some((PathBuf::new(), PathKind::All));\n                 crate_source\n             };\n         });"}]}