{"sha": "12796cd6886989c449e62818fb8f0bb40b9ce41e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyNzk2Y2Q2ODg2OTg5YzQ0OWU2MjgxOGZiOGYwYmI0MGI5Y2U0MWU=", "commit": {"author": {"name": "mgr-inz-rafal", "email": "rchabowski@gmail.com", "date": "2020-03-23T19:29:12Z"}, "committer": {"name": "mgr-inz-rafal", "email": "rchabowski@gmail.com", "date": "2020-03-23T19:29:12Z"}, "message": "Initial lint without suggestion", "tree": {"sha": "41aa4dc928d61c952e3cd704d08c32fd434d7e49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41aa4dc928d61c952e3cd704d08c32fd434d7e49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12796cd6886989c449e62818fb8f0bb40b9ce41e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12796cd6886989c449e62818fb8f0bb40b9ce41e", "html_url": "https://github.com/rust-lang/rust/commit/12796cd6886989c449e62818fb8f0bb40b9ce41e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12796cd6886989c449e62818fb8f0bb40b9ce41e/comments", "author": {"login": "mgr-inz-rafal", "id": 22395284, "node_id": "MDQ6VXNlcjIyMzk1Mjg0", "avatar_url": "https://avatars.githubusercontent.com/u/22395284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgr-inz-rafal", "html_url": "https://github.com/mgr-inz-rafal", "followers_url": "https://api.github.com/users/mgr-inz-rafal/followers", "following_url": "https://api.github.com/users/mgr-inz-rafal/following{/other_user}", "gists_url": "https://api.github.com/users/mgr-inz-rafal/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgr-inz-rafal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgr-inz-rafal/subscriptions", "organizations_url": "https://api.github.com/users/mgr-inz-rafal/orgs", "repos_url": "https://api.github.com/users/mgr-inz-rafal/repos", "events_url": "https://api.github.com/users/mgr-inz-rafal/events{/privacy}", "received_events_url": "https://api.github.com/users/mgr-inz-rafal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mgr-inz-rafal", "id": 22395284, "node_id": "MDQ6VXNlcjIyMzk1Mjg0", "avatar_url": "https://avatars.githubusercontent.com/u/22395284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgr-inz-rafal", "html_url": "https://github.com/mgr-inz-rafal", "followers_url": "https://api.github.com/users/mgr-inz-rafal/followers", "following_url": "https://api.github.com/users/mgr-inz-rafal/following{/other_user}", "gists_url": "https://api.github.com/users/mgr-inz-rafal/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgr-inz-rafal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgr-inz-rafal/subscriptions", "organizations_url": "https://api.github.com/users/mgr-inz-rafal/orgs", "repos_url": "https://api.github.com/users/mgr-inz-rafal/repos", "events_url": "https://api.github.com/users/mgr-inz-rafal/events{/privacy}", "received_events_url": "https://api.github.com/users/mgr-inz-rafal/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ff81c1b6d7abdcc9ee47f4a8ab175082cad4421", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ff81c1b6d7abdcc9ee47f4a8ab175082cad4421", "html_url": "https://github.com/rust-lang/rust/commit/1ff81c1b6d7abdcc9ee47f4a8ab175082cad4421"}], "stats": {"total": 67, "additions": 63, "deletions": 4}, "files": [{"sha": "8de2fe2f3ba77872309083defa7686ad6f8dc81b", "filename": "clippy_lints/src/needless_bool.rs", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/12796cd6886989c449e62818fb8f0bb40b9ce41e/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12796cd6886989c449e62818fb8f0bb40b9ce41e/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=12796cd6886989c449e62818fb8f0bb40b9ce41e", "patch": "@@ -3,10 +3,11 @@\n //! This lint is **warn** by default\n \n use crate::utils::sugg::Sugg;\n-use crate::utils::{higher, parent_node_is_if_expr, span_lint, span_lint_and_sugg};\n+use crate::utils::{higher, parent_node_is_if_expr, span_lint, span_lint_and_help, span_lint_and_sugg};\n+use if_chain::if_chain;\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n-use rustc_hir::{BinOpKind, Block, Expr, ExprKind, StmtKind};\n+use rustc_hir::{BinOpKind, Block, Expr, ExprKind, StmtKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n@@ -188,6 +189,21 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for BoolComparison {\n     }\n }\n \n+fn is_unary_not<'tcx>(e: &'tcx Expr<'_>) -> bool {\n+    if_chain! {\n+        if let ExprKind::Unary(unop, _) = e.kind;\n+        if let UnOp::UnNot = unop;\n+        then {\n+            return true;\n+        }\n+    };\n+    false\n+}\n+\n+fn one_side_is_unary_not<'tcx>(left_side: &'tcx Expr<'_>, right_side: &'tcx Expr<'_>) -> bool {\n+    is_unary_not(left_side) ^ is_unary_not(right_side)\n+}\n+\n fn check_comparison<'a, 'tcx>(\n     cx: &LateContext<'a, 'tcx>,\n     e: &'tcx Expr<'_>,\n@@ -199,9 +215,16 @@ fn check_comparison<'a, 'tcx>(\n ) {\n     use self::Expression::{Bool, Other};\n \n-    if let ExprKind::Binary(_, ref left_side, ref right_side) = e.kind {\n+    if let ExprKind::Binary(op, ref left_side, ref right_side) = e.kind {\n         let (l_ty, r_ty) = (cx.tables.expr_ty(left_side), cx.tables.expr_ty(right_side));\n         if l_ty.is_bool() && r_ty.is_bool() {\n+            if_chain! {\n+                if let BinOpKind::Eq = op.node;\n+                if one_side_is_unary_not(&left_side, &right_side);\n+                then {\n+                    span_lint_and_help(cx, BOOL_COMPARISON, e.span, \"Here comes\", \"the suggestion\");\n+                }\n+            };\n             let mut applicability = Applicability::MachineApplicable;\n             match (fetch_bool_expr(left_side), fetch_bool_expr(right_side)) {\n                 (Bool(true), Other) => left_true.map_or((), |(h, m)| {"}, {"sha": "d217d03ead4ac8c3a8e1b9a94a42d3161ba7ffe2", "filename": "tests/ui/bool_comparison.fixed", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/12796cd6886989c449e62818fb8f0bb40b9ce41e/tests%2Fui%2Fbool_comparison.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/12796cd6886989c449e62818fb8f0bb40b9ce41e/tests%2Fui%2Fbool_comparison.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_comparison.fixed?ref=12796cd6886989c449e62818fb8f0bb40b9ce41e", "patch": "@@ -111,3 +111,13 @@ fn issue3703() {\n     if Foo < false {}\n     if false < Foo {}\n }\n+\n+fn issue4983() {\n+    let a = true;\n+    let b = false;\n+\n+    if a == !b {};\n+    if !a == b {};\n+    if a == b {};\n+    if !a == !b {};\n+}"}, {"sha": "c13575eae717902bda38b2c9b6cbafe36b68f665", "filename": "tests/ui/bool_comparison.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/12796cd6886989c449e62818fb8f0bb40b9ce41e/tests%2Fui%2Fbool_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12796cd6886989c449e62818fb8f0bb40b9ce41e/tests%2Fui%2Fbool_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_comparison.rs?ref=12796cd6886989c449e62818fb8f0bb40b9ce41e", "patch": "@@ -111,3 +111,13 @@ fn issue3703() {\n     if Foo < false {}\n     if false < Foo {}\n }\n+\n+fn issue4983() {\n+    let a = true;\n+    let b = false;\n+\n+    if a == !b {};\n+    if !a == b {};\n+    if a == b {};\n+    if !a == !b {};\n+}"}, {"sha": "cec7b196a23f1d3e99da3ff34e86c7259c4586cd", "filename": "tests/ui/bool_comparison.stderr", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/12796cd6886989c449e62818fb8f0bb40b9ce41e/tests%2Fui%2Fbool_comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12796cd6886989c449e62818fb8f0bb40b9ce41e/tests%2Fui%2Fbool_comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_comparison.stderr?ref=12796cd6886989c449e62818fb8f0bb40b9ce41e", "patch": "@@ -84,5 +84,21 @@ error: order comparisons between booleans can be simplified\n LL |     if x > y {\n    |        ^^^^^ help: try simplifying it as shown: `x & !y`\n \n-error: aborting due to 14 previous errors\n+error: Here comes\n+  --> $DIR/bool_comparison.rs:119:8\n+   |\n+LL |     if a == !b {};\n+   |        ^^^^^^^\n+   |\n+   = help: the suggestion\n+\n+error: Here comes\n+  --> $DIR/bool_comparison.rs:120:8\n+   |\n+LL |     if !a == b {};\n+   |        ^^^^^^^\n+   |\n+   = help: the suggestion\n+\n+error: aborting due to 16 previous errors\n "}]}