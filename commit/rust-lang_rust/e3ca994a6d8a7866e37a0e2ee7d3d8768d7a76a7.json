{"sha": "e3ca994a6d8a7866e37a0e2ee7d3d8768d7a76a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzY2E5OTRhNmQ4YTc4NjZlMzdhMGUyZWU3ZDNkODc2OGQ3YTc2YTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-23T15:59:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-23T15:59:58Z"}, "message": "Auto merge of #1684 - RalfJung:env, r=oli-obk\n\nprefer build-time env vars over run-time values\n\nFixes https://github.com/rust-lang/miri/issues/1661", "tree": {"sha": "131664ffd540dae9e72893dc18a1dc8e3e4ff865", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/131664ffd540dae9e72893dc18a1dc8e3e4ff865"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3ca994a6d8a7866e37a0e2ee7d3d8768d7a76a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3ca994a6d8a7866e37a0e2ee7d3d8768d7a76a7", "html_url": "https://github.com/rust-lang/rust/commit/e3ca994a6d8a7866e37a0e2ee7d3d8768d7a76a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3ca994a6d8a7866e37a0e2ee7d3d8768d7a76a7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fdda8aac97c57c84671ae54b6c9377245bc33e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fdda8aac97c57c84671ae54b6c9377245bc33e8", "html_url": "https://github.com/rust-lang/rust/commit/6fdda8aac97c57c84671ae54b6c9377245bc33e8"}, {"sha": "4a13f24839b2e0fdbf356530d5569a8e322c39d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a13f24839b2e0fdbf356530d5569a8e322c39d7", "html_url": "https://github.com/rust-lang/rust/commit/4a13f24839b2e0fdbf356530d5569a8e322c39d7"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "f4a762937ecd7474787fa7fcc897bf0c1d1e3ea1", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3ca994a6d8a7866e37a0e2ee7d3d8768d7a76a7/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/e3ca994a6d8a7866e37a0e2ee7d3d8768d7a76a7/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=e3ca994a6d8a7866e37a0e2ee7d3d8768d7a76a7", "patch": "@@ -286,6 +286,8 @@ different Miri binaries, and as such worth documenting:\n   directory after loading all the source files, but before commencing\n   interpretation. This is useful if the interpreted program wants a different\n   working directory at run-time than at build-time.\n+* `MIRI_VERBOSE` when set to any value tells the various `cargo-miri` phases to\n+  perform verbose logging.\n   \n [testing-miri]: CONTRIBUTING.md#testing-the-miri-driver\n "}, {"sha": "b413a0b222e51f2c797c8e4a6804fff382c87ae9", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e3ca994a6d8a7866e37a0e2ee7d3d8768d7a76a7/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3ca994a6d8a7866e37a0e2ee7d3d8768d7a76a7/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=e3ca994a6d8a7866e37a0e2ee7d3d8768d7a76a7", "patch": "@@ -655,16 +655,21 @@ fn phase_cargo_runner(binary: &Path, binary_args: env::Args) {\n     let info: CrateRunInfo = serde_json::from_reader(file)\n         .unwrap_or_else(|_| show_error(format!(\"file {:?} contains outdated or invalid JSON; try `cargo clean`\", binary)));\n \n-    // Set missing env vars. Looks like `build.rs` vars are still set at run-time, but\n-    // `CARGO_BIN_EXE_*` are not. This means we can give the run-time environment precedence,\n-    // to rather do too little than too much.\n+    let mut cmd = miri();\n+\n+    // Set missing env vars. We prefer build-time env vars over run-time ones; see\n+    // <https://github.com/rust-lang/miri/issues/1661> for the kind of issue that fixes.\n     for (name, val) in info.env {\n-        if env::var_os(&name).is_none() {\n-            env::set_var(name, val);\n+        if verbose {\n+            if let Some(old_val) = env::var_os(&name) {\n+                if old_val != val {\n+                    eprintln!(\"[cargo-miri runner] Overwriting run-time env var {:?}={:?} with build-time value {:?}\", name, old_val, val);\n+                }\n+            }\n         }\n+        cmd.env(name, val);\n     }\n \n-    let mut cmd = miri();\n     // Forward rustc arguments.\n     // We need to patch \"--extern\" filenames because we forced a check-only\n     // build without cargo knowing about that: replace `.rlib` suffix by"}]}