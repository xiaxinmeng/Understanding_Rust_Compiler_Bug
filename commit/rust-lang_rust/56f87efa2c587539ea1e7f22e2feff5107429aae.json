{"sha": "56f87efa2c587539ea1e7f22e2feff5107429aae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2Zjg3ZWZhMmM1ODc1MzllYTFlN2YyMmUyZmVmZjUxMDc0MjlhYWU=", "commit": {"author": {"name": "Camelid", "email": "37223377+camelid@users.noreply.github.com", "date": "2020-06-01T20:01:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-01T20:01:01Z"}, "message": "Include kind in `bug!`\n\nCo-authored-by: hafiz <20735482+ayazhafiz@users.noreply.github.com>", "tree": {"sha": "48522d269990f970a9e4b085aca0a8bccb08e456", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48522d269990f970a9e4b085aca0a8bccb08e456"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56f87efa2c587539ea1e7f22e2feff5107429aae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe1V59CRBK7hj4Ov3rIwAAdHIIAEUstBgzrSeHQOsZlVJWIZb4\nYGq83Phnq+j4HKn5o1mEizi1mCR1mLZnondX1dUTIM743i+4SaSsXOoR47sKyaAT\n02++OySKRKZZQSempqoP0aADTZGdB91B16KY4AqS3wbm77LhC5t4n73MNzvqyiII\noq4yGWPnYMBh75UWCuymLV8EaaOgJlYoJe8OTEOv1zZ7RhzrHdS2zsU6pRrbq3iM\nEeUQ0Az5ZuN+5uh2GwGoHOihbnZzoQq4/xGGedkKbZJfkQNUwGVp9nQzb9JU8wf9\n3mIq3GF39667jPbCfx5nRgbsSt256q9WjCN/eco4Rr7V9rEYtsPU8Qc1pzDnUz8=\n=cCx8\n-----END PGP SIGNATURE-----\n", "payload": "tree 48522d269990f970a9e4b085aca0a8bccb08e456\nparent fd76d236e42378d0feaf5df6dbdbd2db89ba0f1f\nauthor Camelid <37223377+camelid@users.noreply.github.com> 1591041661 -0700\ncommitter GitHub <noreply@github.com> 1591041661 -0700\n\nInclude kind in `bug!`\n\nCo-authored-by: hafiz <20735482+ayazhafiz@users.noreply.github.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56f87efa2c587539ea1e7f22e2feff5107429aae", "html_url": "https://github.com/rust-lang/rust/commit/56f87efa2c587539ea1e7f22e2feff5107429aae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56f87efa2c587539ea1e7f22e2feff5107429aae/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd76d236e42378d0feaf5df6dbdbd2db89ba0f1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd76d236e42378d0feaf5df6dbdbd2db89ba0f1f", "html_url": "https://github.com/rust-lang/rust/commit/fd76d236e42378d0feaf5df6dbdbd2db89ba0f1f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f1dc7e5390629a11f297d36f73ebe94b9bf5faa4", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56f87efa2c587539ea1e7f22e2feff5107429aae/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56f87efa2c587539ea1e7f22e2feff5107429aae/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=56f87efa2c587539ea1e7f22e2feff5107429aae", "patch": "@@ -491,7 +491,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             \"constant\" => ParamKindOrd::Const,\n             // It's more concise to match on the string representation, though it means\n             // the match is non-exhaustive.\n-            _ => bug!(\"invalid generic parameter kind\"),\n+            _ => bug!(\"invalid generic parameter kind {}\", kind),\n         };\n         let arg_ord = match arg {\n             GenericArg::Lifetime(_) => ParamKindOrd::Lifetime,"}]}