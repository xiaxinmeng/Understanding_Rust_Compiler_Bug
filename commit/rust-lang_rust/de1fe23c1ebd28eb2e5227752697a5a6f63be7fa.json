{"sha": "de1fe23c1ebd28eb2e5227752697a5a6f63be7fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMWZlMjNjMWViZDI4ZWIyZTUyMjc3NTI2OTdhNWE2ZjYzYmU3ZmE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-05-11T17:25:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-11T17:25:34Z"}, "message": "Merge #4403\n\n4403: Check client capabilities before sending progress notifications r=kjeremy a=kjeremy\n\nFixes #4384\n\nCo-authored-by: Jeremy Kolb <kjeremy@gmail.com>", "tree": {"sha": "6207a95afd306764bc2b04956e8c5688a4b00939", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6207a95afd306764bc2b04956e8c5688a4b00939"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de1fe23c1ebd28eb2e5227752697a5a6f63be7fa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeuYqOCRBK7hj4Ov3rIwAAdHIIAJvjJz8Vb83lOWobQoSPt+5Z\neB54NVt5fLqOv/KobJFlFd0g6lcrSN3a5YPDhmD9psiMNxVKPL1ofskxZLXKK5FB\ngliDo7gZdJqJBxv+RJl5Xrge6U17HBjW7utKPv8WxL0z2KhEcdmYBLWJX5jgLvxy\nbwEuUGL+JfW9kwYtMa3GmrPFKptaISU3FTOgVNBYvAOzmN/SAKU8poXt3VrSXdwv\nh/l5ZRMOccSzKe6uhQ7OIzkWAUbo6bmwQiOkbBSikwrClylUFgOQMM+URr1C1ZVC\n1TgT10CIH4YhdJ9Yi6rO0sfrJ/RXklDKklWzWGwZPBYxHlIH9EB6K7N5cQ40aCs=\n=kJAi\n-----END PGP SIGNATURE-----\n", "payload": "tree 6207a95afd306764bc2b04956e8c5688a4b00939\nparent 115347a9c63bc7c18cf701338532a8622ac15592\nparent d4471dccfea8c9d6e721d22911947230d05899a7\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1589217934 +0000\ncommitter GitHub <noreply@github.com> 1589217934 +0000\n\nMerge #4403\n\n4403: Check client capabilities before sending progress notifications r=kjeremy a=kjeremy\n\nFixes #4384\n\nCo-authored-by: Jeremy Kolb <kjeremy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de1fe23c1ebd28eb2e5227752697a5a6f63be7fa", "html_url": "https://github.com/rust-lang/rust/commit/de1fe23c1ebd28eb2e5227752697a5a6f63be7fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de1fe23c1ebd28eb2e5227752697a5a6f63be7fa/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "115347a9c63bc7c18cf701338532a8622ac15592", "url": "https://api.github.com/repos/rust-lang/rust/commits/115347a9c63bc7c18cf701338532a8622ac15592", "html_url": "https://github.com/rust-lang/rust/commit/115347a9c63bc7c18cf701338532a8622ac15592"}, {"sha": "d4471dccfea8c9d6e721d22911947230d05899a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4471dccfea8c9d6e721d22911947230d05899a7", "html_url": "https://github.com/rust-lang/rust/commit/d4471dccfea8c9d6e721d22911947230d05899a7"}], "stats": {"total": 85, "additions": 52, "deletions": 33}, "files": [{"sha": "09908458dba72ababd59038fb4bf090805cd55dc", "filename": "crates/rust-analyzer/src/bin/main.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/de1fe23c1ebd28eb2e5227752697a5a6f63be7fa/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de1fe23c1ebd28eb2e5227752697a5a6f63be7fa/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs?ref=de1fe23c1ebd28eb2e5227752697a5a6f63be7fa", "patch": "@@ -100,9 +100,8 @@ fn run_server() -> Result<()> {\n         if let Some(value) = &initialize_params.initialization_options {\n             config.update(value);\n         }\n-        if let Some(caps) = &initialize_params.capabilities.text_document {\n-            config.update_caps(caps);\n-        }\n+        config.update_caps(&initialize_params.capabilities);\n+\n         config\n     };\n "}, {"sha": "53aee833d62b007bedc69e4a03cefb147eb297a9", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 37, "deletions": 23, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/de1fe23c1ebd28eb2e5227752697a5a6f63be7fa/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de1fe23c1ebd28eb2e5227752697a5a6f63be7fa/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=de1fe23c1ebd28eb2e5227752697a5a6f63be7fa", "patch": "@@ -9,7 +9,7 @@\n \n use std::{ffi::OsString, path::PathBuf};\n \n-use lsp_types::TextDocumentClientCapabilities;\n+use lsp_types::ClientCapabilities;\n use ra_flycheck::FlycheckConfig;\n use ra_ide::{CompletionConfig, InlayHintsConfig};\n use ra_project_model::CargoConfig;\n@@ -70,6 +70,7 @@ pub struct ClientCapsConfig {\n     pub line_folding_only: bool,\n     pub hierarchical_symbols: bool,\n     pub code_action_literals: bool,\n+    pub work_done_progress: bool,\n }\n \n impl Default for Config {\n@@ -208,30 +209,43 @@ impl Config {\n         }\n     }\n \n-    pub fn update_caps(&mut self, caps: &TextDocumentClientCapabilities) {\n-        if let Some(value) = caps.definition.as_ref().and_then(|it| it.link_support) {\n-            self.client_caps.location_link = value;\n-        }\n-        if let Some(value) = caps.folding_range.as_ref().and_then(|it| it.line_folding_only) {\n-            self.client_caps.line_folding_only = value\n-        }\n-        if let Some(value) =\n-            caps.document_symbol.as_ref().and_then(|it| it.hierarchical_document_symbol_support)\n-        {\n-            self.client_caps.hierarchical_symbols = value\n-        }\n-        if let Some(value) =\n-            caps.code_action.as_ref().and_then(|it| Some(it.code_action_literal_support.is_some()))\n-        {\n-            self.client_caps.code_action_literals = value;\n-        }\n-        self.completion.allow_snippets(false);\n-        if let Some(completion) = &caps.completion {\n-            if let Some(completion_item) = &completion.completion_item {\n-                if let Some(value) = completion_item.snippet_support {\n-                    self.completion.allow_snippets(value);\n+    pub fn update_caps(&mut self, caps: &ClientCapabilities) {\n+        if let Some(doc_caps) = caps.text_document.as_ref() {\n+            if let Some(value) = doc_caps.definition.as_ref().and_then(|it| it.link_support) {\n+                self.client_caps.location_link = value;\n+            }\n+            if let Some(value) = doc_caps.folding_range.as_ref().and_then(|it| it.line_folding_only)\n+            {\n+                self.client_caps.line_folding_only = value\n+            }\n+            if let Some(value) = doc_caps\n+                .document_symbol\n+                .as_ref()\n+                .and_then(|it| it.hierarchical_document_symbol_support)\n+            {\n+                self.client_caps.hierarchical_symbols = value\n+            }\n+            if let Some(value) = doc_caps\n+                .code_action\n+                .as_ref()\n+                .and_then(|it| Some(it.code_action_literal_support.is_some()))\n+            {\n+                self.client_caps.code_action_literals = value;\n+            }\n+            self.completion.allow_snippets(false);\n+            if let Some(completion) = &doc_caps.completion {\n+                if let Some(completion_item) = &completion.completion_item {\n+                    if let Some(value) = completion_item.snippet_support {\n+                        self.completion.allow_snippets(value);\n+                    }\n                 }\n             }\n         }\n+\n+        if let Some(window_caps) = caps.window.as_ref() {\n+            if let Some(value) = window_caps.work_done_progress {\n+                self.client_caps.work_done_progress = value;\n+            }\n+        }\n     }\n }"}, {"sha": "13d305b973412f63e5d018631884368357c0d37f", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/de1fe23c1ebd28eb2e5227752697a5a6f63be7fa/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de1fe23c1ebd28eb2e5227752697a5a6f63be7fa/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=de1fe23c1ebd28eb2e5227752697a5a6f63be7fa", "patch": "@@ -415,7 +415,8 @@ fn loop_turn(\n         });\n     }\n \n-    let show_progress = !loop_state.workspace_loaded;\n+    let show_progress =\n+        !loop_state.workspace_loaded && world_state.config.client_caps.work_done_progress;\n \n     if !loop_state.workspace_loaded\n         && loop_state.roots_scanned == loop_state.roots_total\n@@ -750,12 +751,16 @@ fn on_check_task(\n         }\n \n         CheckTask::Status(progress) => {\n-            let params = lsp_types::ProgressParams {\n-                token: lsp_types::ProgressToken::String(\"rustAnalyzer/cargoWatcher\".to_string()),\n-                value: lsp_types::ProgressParamsValue::WorkDone(progress),\n-            };\n-            let not = notification_new::<lsp_types::notification::Progress>(params);\n-            task_sender.send(Task::Notify(not)).unwrap();\n+            if world_state.config.client_caps.work_done_progress {\n+                let params = lsp_types::ProgressParams {\n+                    token: lsp_types::ProgressToken::String(\n+                        \"rustAnalyzer/cargoWatcher\".to_string(),\n+                    ),\n+                    value: lsp_types::ProgressParamsValue::WorkDone(progress),\n+                };\n+                let not = notification_new::<lsp_types::notification::Progress>(params);\n+                task_sender.send(Task::Notify(not)).unwrap();\n+            }\n         }\n     };\n "}, {"sha": "9acbae066fea346f1b468fda96c7168fc0e3b2c3", "filename": "crates/rust-analyzer/tests/heavy_tests/support.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de1fe23c1ebd28eb2e5227752697a5a6f63be7fa/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fsupport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de1fe23c1ebd28eb2e5227752697a5a6f63be7fa/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fsupport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fsupport.rs?ref=de1fe23c1ebd28eb2e5227752697a5a6f63be7fa", "patch": "@@ -80,6 +80,7 @@ impl<'a> Project<'a> {\n             client_caps: ClientCapsConfig {\n                 location_link: true,\n                 code_action_literals: true,\n+                work_done_progress: true,\n                 ..Default::default()\n             },\n             with_sysroot: self.with_sysroot,"}]}