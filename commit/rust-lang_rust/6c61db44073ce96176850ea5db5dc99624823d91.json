{"sha": "6c61db44073ce96176850ea5db5dc99624823d91", "node_id": "C_kwDOAAsO6NoAKDZjNjFkYjQ0MDczY2U5NjE3Njg1MGVhNWRiNWRjOTk2MjQ4MjNkOTE", "commit": {"author": {"name": "Ilya Yanok", "email": "ilya.yanok@gmail.com", "date": "2021-10-28T12:49:46Z"}, "committer": {"name": "Ilya Yanok", "email": "ilya.yanok@gmail.com", "date": "2021-10-28T12:49:46Z"}, "message": "Use `is_global` in `candidate_should_be_dropped_in_favor_of`\n\nThis manifistated in #90195 with compiler being unable to keep\none candidate for a trait impl, if where is a global impl and more\nthan one trait bound in the where clause.\n\nBefore #87280 `candidate_should_be_dropped_in_favor_of` was using\n`TypeFoldable::is_global()` that was enough to discard the two\n`ParamCandidate`s. But #87280 changed it to use\n`TypeFoldable::is_known_global()` instead, which is pessimistic, so\nnow the compiler drops the global impl instead (because\n`is_known_global` is not sure) and then can't decide between the\ntwo `ParamCandidate`s.\n\nSwitching it to use `is_global` again solves the issue.\n\nFixes #90195.", "tree": {"sha": "478f38ac81e762825397acec45f5804700e039f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/478f38ac81e762825397acec45f5804700e039f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c61db44073ce96176850ea5db5dc99624823d91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c61db44073ce96176850ea5db5dc99624823d91", "html_url": "https://github.com/rust-lang/rust/commit/6c61db44073ce96176850ea5db5dc99624823d91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c61db44073ce96176850ea5db5dc99624823d91/comments", "author": {"login": "yanok", "id": 468850, "node_id": "MDQ6VXNlcjQ2ODg1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/468850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanok", "html_url": "https://github.com/yanok", "followers_url": "https://api.github.com/users/yanok/followers", "following_url": "https://api.github.com/users/yanok/following{/other_user}", "gists_url": "https://api.github.com/users/yanok/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanok/subscriptions", "organizations_url": "https://api.github.com/users/yanok/orgs", "repos_url": "https://api.github.com/users/yanok/repos", "events_url": "https://api.github.com/users/yanok/events{/privacy}", "received_events_url": "https://api.github.com/users/yanok/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yanok", "id": 468850, "node_id": "MDQ6VXNlcjQ2ODg1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/468850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanok", "html_url": "https://github.com/yanok", "followers_url": "https://api.github.com/users/yanok/followers", "following_url": "https://api.github.com/users/yanok/following{/other_user}", "gists_url": "https://api.github.com/users/yanok/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanok/subscriptions", "organizations_url": "https://api.github.com/users/yanok/orgs", "repos_url": "https://api.github.com/users/yanok/repos", "events_url": "https://api.github.com/users/yanok/events{/privacy}", "received_events_url": "https://api.github.com/users/yanok/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e0d3973fafdfb1c51011bc74e44257b5e3863f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e0d3973fafdfb1c51011bc74e44257b5e3863f1", "html_url": "https://github.com/rust-lang/rust/commit/4e0d3973fafdfb1c51011bc74e44257b5e3863f1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8bd842a5e062c6c9897174a7982dce1b03e81a7d", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c61db44073ce96176850ea5db5dc99624823d91/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c61db44073ce96176850ea5db5dc99624823d91/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=6c61db44073ce96176850ea5db5dc99624823d91", "patch": "@@ -1548,7 +1548,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n         // the param_env so that it can be given the lowest priority. See\n         // #50825 for the motivation for this.\n         let is_global =\n-            |cand: &ty::PolyTraitRef<'_>| cand.is_known_global() && !cand.has_late_bound_regions();\n+            |cand: &ty::PolyTraitRef<'tcx>| cand.is_global(self.infcx.tcx) && !cand.has_late_bound_regions();\n \n         // (*) Prefer `BuiltinCandidate { has_nested: false }`, `PointeeCandidate`,\n         // and `DiscriminantKindCandidate` to anything else."}]}