{"sha": "f12d7a55fca7215a08029c90634ab54f883a9f1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxMmQ3YTU1ZmNhNzIxNWEwODAyOWM5MDYzNGFiNTRmODgzYTlmMWM=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-04-16T10:41:32Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-05-01T20:28:54Z"}, "message": "Update ui/generator tests to reflect changes from new generator drop rules.", "tree": {"sha": "8392814ab271ea510b9d10da41bb1ddf04f99952", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8392814ab271ea510b9d10da41bb1ddf04f99952"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f12d7a55fca7215a08029c90634ab54f883a9f1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f12d7a55fca7215a08029c90634ab54f883a9f1c", "html_url": "https://github.com/rust-lang/rust/commit/f12d7a55fca7215a08029c90634ab54f883a9f1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f12d7a55fca7215a08029c90634ab54f883a9f1c/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edb8d1c0d4b2e32088f3c6a77437b091b10ddf7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/edb8d1c0d4b2e32088f3c6a77437b091b10ddf7e", "html_url": "https://github.com/rust-lang/rust/commit/edb8d1c0d4b2e32088f3c6a77437b091b10ddf7e"}], "stats": {"total": 106, "additions": 74, "deletions": 32}, "files": [{"sha": "243e9018585138442786b9830af0e71b0b978069", "filename": "src/test/ui/generator/borrowing.nll.stderr", "status": "modified", "additions": 27, "deletions": 11, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f12d7a55fca7215a08029c90634ab54f883a9f1c/src%2Ftest%2Fui%2Fgenerator%2Fborrowing.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f12d7a55fca7215a08029c90634ab54f883a9f1c/src%2Ftest%2Fui%2Fgenerator%2Fborrowing.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fborrowing.nll.stderr?ref=f12d7a55fca7215a08029c90634ab54f883a9f1c", "patch": "@@ -1,14 +1,30 @@\n-error: compilation successful\n-  --> $DIR/borrowing.rs:15:1\n+error[E0597]: `a` does not live long enough\n+  --> $DIR/borrowing.rs:18:18\n    |\n-LL | / fn main() { #![rustc_error] // rust-lang/rust#49855\n-LL | |     let _b = {\n-LL | |         let a = 3;\n-LL | |         unsafe { (|| yield &a).resume() }\n-...  |\n-LL | |     };\n-LL | | }\n-   | |_^\n+LL |         unsafe { (|| yield &a).resume() }\n+   |                  ^^^^^^^^^^^^^\n+   |                  |\n+   |                  borrowed value does not live long enough\n+   |                  borrow may end up in a temporary, created here\n+LL |         //~^ ERROR: `a` does not live long enough\n+LL |     };\n+   |     -- temporary later dropped here, potentially using the reference\n+   |     |\n+   |     borrowed value only lives until here\n \n-error: aborting due to previous error\n+error[E0597]: `a` does not live long enough\n+  --> $DIR/borrowing.rs:24:9\n+   |\n+LL | /         || {\n+LL | |             yield &a\n+LL | |             //~^ ERROR: `a` does not live long enough\n+LL | |         }\n+   | |_________^ borrowed value does not live long enough\n+LL |       };\n+   |       - borrowed value only lives until here\n+LL |   }\n+   |   - borrow later used here, when `_b` is dropped\n+\n+error: aborting due to 2 previous errors\n \n+For more information about this error, try `rustc --explain E0597`."}, {"sha": "e56927d81823131b1e38e66cbff0394b743489fe", "filename": "src/test/ui/generator/borrowing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f12d7a55fca7215a08029c90634ab54f883a9f1c/src%2Ftest%2Fui%2Fgenerator%2Fborrowing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f12d7a55fca7215a08029c90634ab54f883a9f1c/src%2Ftest%2Fui%2Fgenerator%2Fborrowing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fborrowing.rs?ref=f12d7a55fca7215a08029c90634ab54f883a9f1c", "patch": "@@ -8,11 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(generators, generator_trait, rustc_attrs)]\n+#![feature(generators, generator_trait)]\n \n use std::ops::Generator;\n \n-fn main() { #![rustc_error] // rust-lang/rust#49855\n+fn main() {\n     let _b = {\n         let a = 3;\n         unsafe { (|| yield &a).resume() }"}, {"sha": "c352fd6a62f28522f2fa1763579479dd94926b83", "filename": "src/test/ui/generator/dropck.nll.stderr", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f12d7a55fca7215a08029c90634ab54f883a9f1c/src%2Ftest%2Fui%2Fgenerator%2Fdropck.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f12d7a55fca7215a08029c90634ab54f883a9f1c/src%2Ftest%2Fui%2Fgenerator%2Fdropck.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fdropck.nll.stderr?ref=f12d7a55fca7215a08029c90634ab54f883a9f1c", "patch": "@@ -1,14 +1,20 @@\n-error: compilation successful\n-  --> $DIR/dropck.rs:16:1\n+error[E0597]: `ref_` does not live long enough\n+  --> $DIR/dropck.rs:22:11\n    |\n-LL | / fn main() { #![rustc_error] // rust-lang/rust#49855\n-LL | |     let (cell, mut gen);\n-LL | |     cell = Box::new(RefCell::new(0));\n-LL | |     let ref_ = Box::leak(Box::new(Some(cell.borrow_mut())));\n-...  |\n-LL | |     // drops the RefCell and then the Ref, leading to use-after-free\n-LL | | }\n-   | |_^\n+LL |       gen = || {\n+   |  ___________^\n+LL | |         // but the generator can use it to drop a `Ref<'a, i32>`.\n+LL | |         let _d = ref_.take(); //~ ERROR `ref_` does not live long enough\n+LL | |         yield;\n+LL | |     };\n+   | |_____^ borrowed value does not live long enough\n+...\n+LL |   }\n+   |   -\n+   |   |\n+   |   borrowed value only lives until here\n+   |   borrow later used here, when `gen` is dropped\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0597`."}, {"sha": "857288818c67c5e0f80a7bef0b77b0a80d8eef84", "filename": "src/test/ui/generator/dropck.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f12d7a55fca7215a08029c90634ab54f883a9f1c/src%2Ftest%2Fui%2Fgenerator%2Fdropck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f12d7a55fca7215a08029c90634ab54f883a9f1c/src%2Ftest%2Fui%2Fgenerator%2Fdropck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fdropck.rs?ref=f12d7a55fca7215a08029c90634ab54f883a9f1c", "patch": "@@ -8,15 +8,16 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(generators, generator_trait, box_leak, rustc_attrs)]\n+#![feature(generators, generator_trait, box_leak)]\n \n use std::cell::RefCell;\n use std::ops::Generator;\n \n-fn main() { #![rustc_error] // rust-lang/rust#49855\n+fn main() {\n     let (cell, mut gen);\n     cell = Box::new(RefCell::new(0));\n     let ref_ = Box::leak(Box::new(Some(cell.borrow_mut())));\n+    //~^ ERROR `*cell` does not live long enough [E0597]\n     // the upvar is the non-dropck `&mut Option<Ref<'a, i32>>`.\n     gen = || {\n         // but the generator can use it to drop a `Ref<'a, i32>`."}, {"sha": "1a6fed2dd35944d0947eccee78ad7145e3b38a5e", "filename": "src/test/ui/generator/dropck.stderr", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f12d7a55fca7215a08029c90634ab54f883a9f1c/src%2Ftest%2Fui%2Fgenerator%2Fdropck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f12d7a55fca7215a08029c90634ab54f883a9f1c/src%2Ftest%2Fui%2Fgenerator%2Fdropck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fdropck.stderr?ref=f12d7a55fca7215a08029c90634ab54f883a9f1c", "patch": "@@ -1,5 +1,16 @@\n+error[E0597]: `*cell` does not live long enough\n+  --> $DIR/dropck.rs:19:40\n+   |\n+LL |     let ref_ = Box::leak(Box::new(Some(cell.borrow_mut())));\n+   |                                        ^^^^ borrowed value does not live long enough\n+...\n+LL | }\n+   | - `*cell` dropped here while still borrowed\n+   |\n+   = note: values in a scope are dropped in the opposite order they are created\n+\n error[E0597]: `ref_` does not live long enough\n-  --> $DIR/dropck.rs:23:18\n+  --> $DIR/dropck.rs:24:18\n    |\n LL |     gen = || {\n    |           -- capture occurs here\n@@ -12,6 +23,6 @@ LL | }\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0597`."}, {"sha": "70870b98365b9d1a1cb11fe0dd41f726273d5222", "filename": "src/test/ui/generator/ref-escapes-but-not-over-yield.nll.stderr", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f12d7a55fca7215a08029c90634ab54f883a9f1c/src%2Ftest%2Fui%2Fgenerator%2Fref-escapes-but-not-over-yield.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f12d7a55fca7215a08029c90634ab54f883a9f1c/src%2Ftest%2Fui%2Fgenerator%2Fref-escapes-but-not-over-yield.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fref-escapes-but-not-over-yield.nll.stderr?ref=f12d7a55fca7215a08029c90634ab54f883a9f1c", "patch": "@@ -1,11 +1,19 @@\n error[E0597]: `b` does not live long enough\n   --> $DIR/ref-escapes-but-not-over-yield.rs:24:13\n    |\n-LL |         a = &b;\n-   |             ^^ borrowed value does not live long enough\n-LL |         //~^ ERROR `b` does not live long enough\n-LL |     };\n-   |     - borrowed value only lives until here\n+LL |       let mut b = move || {\n+   |  _________________-\n+LL | |         yield();\n+LL | |         let b = 5;\n+LL | |         a = &b;\n+   | |             ^^ borrowed value does not live long enough\n+LL | |         //~^ ERROR `b` does not live long enough\n+LL | |     };\n+   | |     -\n+   | |     |\n+   | |     borrowed value only lives until here\n+   | |_____temporary later dropped here, potentially using the reference\n+   |       borrow may end up in a temporary, created here\n \n error: aborting due to previous error\n "}]}