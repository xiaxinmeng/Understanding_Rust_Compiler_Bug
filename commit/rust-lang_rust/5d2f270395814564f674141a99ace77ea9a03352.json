{"sha": "5d2f270395814564f674141a99ace77ea9a03352", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkMmYyNzAzOTU4MTQ1NjRmNjc0MTQxYTk5YWNlNzdlYTlhMDMzNTI=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2017-04-08T01:43:18Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2017-04-08T01:45:48Z"}, "message": "slice: Implement .rfind() for slice iterators Iter and IterMut\n\nJust like the forward case find, implement rfind explicitly", "tree": {"sha": "77f924c7b1488d285e000c2dafb298216310f4ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77f924c7b1488d285e000c2dafb298216310f4ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d2f270395814564f674141a99ace77ea9a03352", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d2f270395814564f674141a99ace77ea9a03352", "html_url": "https://github.com/rust-lang/rust/commit/5d2f270395814564f674141a99ace77ea9a03352", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d2f270395814564f674141a99ace77ea9a03352/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53f4bc311b5ff11a16185dd40dc116cf6b8cc162", "url": "https://api.github.com/repos/rust-lang/rust/commits/53f4bc311b5ff11a16185dd40dc116cf6b8cc162", "html_url": "https://github.com/rust-lang/rust/commit/53f4bc311b5ff11a16185dd40dc116cf6b8cc162"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "87dfdfe57b65c77db0443d99ea6e7d46143c5089", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5d2f270395814564f674141a99ace77ea9a03352/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d2f270395814564f674141a99ace77ea9a03352/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=5d2f270395814564f674141a99ace77ea9a03352", "patch": "@@ -1190,6 +1190,19 @@ macro_rules! iterator {\n                     }\n                 }\n             }\n+\n+            fn rfind<F>(&mut self, mut predicate: F) -> Option<Self::Item>\n+                where F: FnMut(&Self::Item) -> bool,\n+            {\n+                self.rsearch_while(None, move |elt| {\n+                    if predicate(&elt) {\n+                        SearchWhile::Done(Some(elt))\n+                    } else {\n+                        SearchWhile::Continue\n+                    }\n+                })\n+            }\n+\n         }\n \n         // search_while is a generalization of the internal iteration methods."}, {"sha": "528ab3bc84523e184ee7b41b12bbce7d9e36ee57", "filename": "src/libcore/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5d2f270395814564f674141a99ace77ea9a03352/src%2Flibcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d2f270395814564f674141a99ace77ea9a03352/src%2Flibcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Flib.rs?ref=5d2f270395814564f674141a99ace77ea9a03352", "patch": "@@ -20,6 +20,7 @@\n #![feature(fixed_size_array)]\n #![feature(flt2dec)]\n #![feature(fmt_internals)]\n+#![feature(iter_rfind)]\n #![feature(libc)]\n #![feature(nonzero)]\n #![feature(rand)]"}, {"sha": "15047204e50d609699e5df8bcee730d9aa37ee6c", "filename": "src/libcore/tests/slice.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5d2f270395814564f674141a99ace77ea9a03352/src%2Flibcore%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d2f270395814564f674141a99ace77ea9a03352/src%2Flibcore%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fslice.rs?ref=5d2f270395814564f674141a99ace77ea9a03352", "patch": "@@ -225,6 +225,19 @@ fn get_unchecked_mut_range() {\n     }\n }\n \n+#[test]\n+fn test_find_rfind() {\n+    let v = [0, 1, 2, 3, 4, 5];\n+    let mut iter = v.iter();\n+    let mut i = v.len();\n+    while let Some(&elt) = iter.rfind(|_| true) {\n+        i -= 1;\n+        assert_eq!(elt, v[i]);\n+    }\n+    assert_eq!(i, 0);\n+    assert_eq!(v.iter().rfind(|&&x| x <= 3), Some(&3));\n+}\n+\n #[test]\n fn sort_unstable() {\n     let mut v = [0; 600];"}]}