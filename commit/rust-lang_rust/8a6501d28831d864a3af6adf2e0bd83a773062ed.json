{"sha": "8a6501d28831d864a3af6adf2e0bd83a773062ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNjUwMWQyODgzMWQ4NjRhM2FmNmFkZjJlMGJkODNhNzczMDYyZWQ=", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-08-25T21:40:06Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-08-25T21:40:06Z"}, "message": "Adjust spans\n\n* Highlight the whole pattern if it has no fields\n* Highlight the whole definition if it has no fields\n* Only highlight the pattern name if the pattern is multi-line\n* Determine whether a pattern is multi-line based on distance from name\n  to last field, rather than first field", "tree": {"sha": "42571e65520484301d3061ff4e6724d5d08469bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42571e65520484301d3061ff4e6724d5d08469bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a6501d28831d864a3af6adf2e0bd83a773062ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a6501d28831d864a3af6adf2e0bd83a773062ed", "html_url": "https://github.com/rust-lang/rust/commit/8a6501d28831d864a3af6adf2e0bd83a773062ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a6501d28831d864a3af6adf2e0bd83a773062ed/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19f45101e72ed6880b0fd1ebee73d74ea782c8c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/19f45101e72ed6880b0fd1ebee73d74ea782c8c4", "html_url": "https://github.com/rust-lang/rust/commit/19f45101e72ed6880b0fd1ebee73d74ea782c8c4"}], "stats": {"total": 296, "additions": 211, "deletions": 85}, "files": [{"sha": "e1f0d3c436366bd83f78ab15d4c8aae07c3a14b8", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8a6501d28831d864a3af6adf2e0bd83a773062ed/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a6501d28831d864a3af6adf2e0bd83a773062ed/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=8a6501d28831d864a3af6adf2e0bd83a773062ed", "patch": "@@ -992,15 +992,15 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         let fields_ending = pluralize!(fields.len());\n \n         let subpat_spans = if subpats.is_empty() {\n-            vec![pat_span.trim_start(qpath.span()).unwrap_or(pat_span)]\n+            vec![pat_span]\n         } else {\n             subpats.iter().map(|p| p.span).collect()\n         };\n         let last_subpat_span = *subpat_spans.last().unwrap();\n         let res_span = self.tcx.def_span(res.def_id());\n         let def_ident_span = self.tcx.def_ident_span(res.def_id()).unwrap_or(res_span);\n         let field_def_spans = if fields.is_empty() {\n-            vec![res_span.trim_start(def_ident_span).unwrap_or(res_span)]\n+            vec![res_span]\n         } else {\n             fields.iter().map(|f| f.ident.span).collect()\n         };\n@@ -1021,8 +1021,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             last_subpat_span,\n             &format!(\"expected {} field{}, found {}\", fields.len(), fields_ending, subpats.len()),\n         );\n-        err.span_label(qpath.span(), \"\");\n-        if self.tcx.sess.source_map().is_multiline(def_ident_span.between(field_def_spans[0])) {\n+        if self.tcx.sess.source_map().is_multiline(qpath.span().between(last_subpat_span)) {\n+            err.span_label(qpath.span(), \"\");\n+        }\n+        if self.tcx.sess.source_map().is_multiline(def_ident_span.between(last_field_def_span)) {\n             err.span_label(def_ident_span, format!(\"{} defined here\", res.descr()));\n         }\n         for span in &field_def_spans[..field_def_spans.len() - 1] {"}, {"sha": "9aae4b0a3faed76175690c36c9f153cb626a6b6e", "filename": "src/test/ui/destructuring-assignment/tuple_struct_destructure_fail.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr?ref=8a6501d28831d864a3af6adf2e0bd83a773062ed", "patch": "@@ -21,7 +21,7 @@ LL | struct TupleStruct<S, T>(S, T);\n    |                          -  - tuple struct has 2 fields\n ...\n LL |     TupleStruct(a, a, b) = TupleStruct(1, 2);\n-   |     ----------- ^  ^  ^ expected 2 fields, found 3\n+   |                 ^  ^  ^ expected 2 fields, found 3\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple struct has 2 fields\n   --> $DIR/tuple_struct_destructure_fail.rs:32:17\n@@ -30,7 +30,7 @@ LL | struct TupleStruct<S, T>(S, T);\n    |                          -  - tuple struct has 2 fields\n ...\n LL |     TupleStruct(_) = TupleStruct(1, 2);\n-   |     ----------- ^ expected 2 fields, found 1\n+   |                 ^ expected 2 fields, found 1\n    |\n help: use `_` to explicitly ignore each field\n    |\n@@ -48,7 +48,7 @@ LL |     SingleVariant(S, T)\n    |                   -  - tuple variant has 2 fields\n ...\n LL |     Enum::SingleVariant(a, a, b) = Enum::SingleVariant(1, 2);\n-   |     ------------------- ^  ^  ^ expected 2 fields, found 3\n+   |                         ^  ^  ^ expected 2 fields, found 3\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n   --> $DIR/tuple_struct_destructure_fail.rs:36:25\n@@ -57,7 +57,7 @@ LL |     SingleVariant(S, T)\n    |                   -  - tuple variant has 2 fields\n ...\n LL |     Enum::SingleVariant(_) = Enum::SingleVariant(1, 2);\n-   |     ------------------- ^ expected 2 fields, found 1\n+   |                         ^ expected 2 fields, found 1\n    |\n help: use `_` to explicitly ignore each field\n    |"}, {"sha": "3e321b037b2b2d5ba59f171e8c1a594c91ee1f90", "filename": "src/test/ui/error-codes/E0023.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr?ref=8a6501d28831d864a3af6adf2e0bd83a773062ed", "patch": "@@ -5,7 +5,7 @@ LL |     Apple(String, String),\n    |           ------  ------ tuple variant has 2 fields\n ...\n LL |         Fruit::Apple(a) => {},\n-   |         ------------ ^ expected 2 fields, found 1\n+   |                      ^ expected 2 fields, found 1\n    |\n help: use `_` to explicitly ignore each field\n    |\n@@ -19,7 +19,7 @@ LL |     Apple(String, String),\n    |           ------  ------ tuple variant has 2 fields\n ...\n LL |         Fruit::Apple(a, b, c) => {},\n-   |         ------------ ^  ^  ^ expected 2 fields, found 3\n+   |                      ^  ^  ^ expected 2 fields, found 3\n \n error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field\n   --> $DIR/E0023.rs:13:21\n@@ -28,7 +28,7 @@ LL |     Pear(u32),\n    |          --- tuple variant has 1 field\n ...\n LL |         Fruit::Pear(1, 2) => {},\n-   |         ----------- ^  ^ expected 1 field, found 2\n+   |                     ^  ^ expected 1 field, found 2\n \n error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field\n   --> $DIR/E0023.rs:14:23\n@@ -37,21 +37,21 @@ LL |     Orange((String, String)),\n    |            ---------------- tuple variant has 1 field\n ...\n LL |         Fruit::Orange(a, b) => {},\n-   |         ------------- ^  ^ expected 1 field, found 2\n+   |                       ^  ^ expected 1 field, found 2\n    |\n help: missing parentheses\n    |\n LL |         Fruit::Orange((a, b)) => {},\n    |                       +    +\n \n error[E0023]: this pattern has 0 fields, but the corresponding tuple variant has 1 field\n-  --> $DIR/E0023.rs:15:22\n+  --> $DIR/E0023.rs:15:9\n    |\n LL |     Banana(()),\n    |            -- tuple variant has 1 field\n ...\n LL |         Fruit::Banana() => {},\n-   |         -------------^^ expected 1 field, found 0\n+   |         ^^^^^^^^^^^^^^^ expected 1 field, found 0\n    |\n help: missing parentheses\n    |"}, {"sha": "05650f05cbf5b24b94fbde014dc456705f0529cf", "filename": "src/test/ui/issues/issue-72574-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr?ref=8a6501d28831d864a3af6adf2e0bd83a773062ed", "patch": "@@ -25,7 +25,7 @@ LL | struct Binder(i32, i32, i32);\n    |               ---  ---  --- tuple struct has 3 fields\n ...\n LL |         Binder(_a, _x @ ..) => {}\n-   |         ------ ^^  ^^^^^^^ expected 3 fields, found 2\n+   |                ^^  ^^^^^^^ expected 3 fields, found 2\n    |\n help: use `_` to explicitly ignore each field\n    |"}, {"sha": "c994ee4f6d4ffe39b4246a51a77f2fd8ee8b63cb", "filename": "src/test/ui/match/match-pattern-field-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr?ref=8a6501d28831d864a3af6adf2e0bd83a773062ed", "patch": "@@ -5,7 +5,7 @@ LL |         Rgb(usize, usize, usize),\n    |             -----  -----  ----- tuple variant has 3 fields\n ...\n LL |           Color::Rgb(_, _) => { }\n-   |           ---------- ^  ^ expected 3 fields, found 2\n+   |                      ^  ^ expected 3 fields, found 2\n    |\n help: use `_` to explicitly ignore each field\n    |"}, {"sha": "75a231f6b4ba32fee613d9327a7bd82df5782e05", "filename": "src/test/ui/pattern/issue-67037-pat-tup-scrut-ty-diff-less-fields.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fpattern%2Fissue-67037-pat-tup-scrut-ty-diff-less-fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fpattern%2Fissue-67037-pat-tup-scrut-ty-diff-less-fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fissue-67037-pat-tup-scrut-ty-diff-less-fields.stderr?ref=8a6501d28831d864a3af6adf2e0bd83a773062ed", "patch": "@@ -10,13 +10,13 @@ LL |     let P() = U {};\n               found struct `P<_>`\n \n error[E0023]: this pattern has 0 fields, but the corresponding tuple struct has 1 field\n-  --> $DIR/issue-67037-pat-tup-scrut-ty-diff-less-fields.rs:19:10\n+  --> $DIR/issue-67037-pat-tup-scrut-ty-diff-less-fields.rs:19:9\n    |\n LL | struct P<T>(T); // 1 type parameter wanted\n    |             - tuple struct has 1 field\n ...\n LL |     let P() = U {};\n-   |         -^^ expected 1 field, found 0\n+   |         ^^^ expected 1 field, found 0\n    |\n help: use `_` to explicitly ignore each field\n    |"}, {"sha": "7443946c013f7294bb51bed7e9389897ce75873a", "filename": "src/test/ui/pattern/issue-74539.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.stderr?ref=8a6501d28831d864a3af6adf2e0bd83a773062ed", "patch": "@@ -25,7 +25,7 @@ LL |     A(u8, u8),\n    |       --  -- tuple variant has 2 fields\n ...\n LL |         E::A(x @ ..) => {\n-   |         ---- ^^^^^^ expected 2 fields, found 1\n+   |              ^^^^^^ expected 2 fields, found 1\n    |\n help: use `_` to explicitly ignore each field\n    |"}, {"sha": "cab8d4759df6414b2c49a38fa63994ed9640c00e", "filename": "src/test/ui/pattern/pat-tuple-field-count-cross.stderr", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-field-count-cross.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-field-count-cross.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-field-count-cross.stderr?ref=8a6501d28831d864a3af6adf2e0bd83a773062ed", "patch": "@@ -121,18 +121,18 @@ error[E0023]: this pattern has 1 field, but the corresponding tuple struct has 0\n   --> $DIR/pat-tuple-field-count-cross.rs:14:12\n    |\n LL |         Z1(x) => {}\n-   |         -- ^ expected 0 fields, found 1\n+   |            ^ expected 0 fields, found 1\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:2:1\n    |\n LL | pub struct Z1();\n    | ---------------- tuple struct has 0 fields\n \n error[E0023]: this pattern has 0 fields, but the corresponding tuple struct has 3 fields\n-  --> $DIR/pat-tuple-field-count-cross.rs:18:10\n+  --> $DIR/pat-tuple-field-count-cross.rs:18:9\n    |\n LL |         S() => {}\n-   |         -^^ expected 3 fields, found 0\n+   |         ^^^ expected 3 fields, found 0\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:4:14\n    |\n@@ -152,7 +152,7 @@ error[E0023]: this pattern has 1 field, but the corresponding tuple struct has 3\n   --> $DIR/pat-tuple-field-count-cross.rs:19:11\n    |\n LL |         S(1) => {}\n-   |         - ^ expected 3 fields, found 1\n+   |           ^ expected 3 fields, found 1\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:4:14\n    |\n@@ -172,7 +172,7 @@ error[E0023]: this pattern has 2 fields, but the corresponding tuple struct has\n   --> $DIR/pat-tuple-field-count-cross.rs:20:11\n    |\n LL |         S(xyz, abc) => {}\n-   |         - ^^^  ^^^ expected 3 fields, found 2\n+   |           ^^^  ^^^ expected 3 fields, found 2\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:4:14\n    |\n@@ -188,18 +188,18 @@ error[E0023]: this pattern has 4 fields, but the corresponding tuple struct has\n   --> $DIR/pat-tuple-field-count-cross.rs:21:11\n    |\n LL |         S(1, 2, 3, 4) => {}\n-   |         - ^  ^  ^  ^ expected 3 fields, found 4\n+   |           ^  ^  ^  ^ expected 3 fields, found 4\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:4:14\n    |\n LL | pub struct S(pub u8, pub u8, pub u8);\n    |              ------  ------  ------ tuple struct has 3 fields\n \n error[E0023]: this pattern has 0 fields, but the corresponding tuple struct has 3 fields\n-  --> $DIR/pat-tuple-field-count-cross.rs:24:10\n+  --> $DIR/pat-tuple-field-count-cross.rs:24:9\n    |\n LL |           M() => {}\n-   |           -^^ expected 3 fields, found 0\n+   |           ^^^ expected 3 fields, found 0\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:5:1\n    |\n@@ -226,7 +226,7 @@ error[E0023]: this pattern has 1 field, but the corresponding tuple struct has 3\n   --> $DIR/pat-tuple-field-count-cross.rs:25:11\n    |\n LL |           M(1) => {}\n-   |           - ^ expected 3 fields, found 1\n+   |             ^ expected 3 fields, found 1\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:5:1\n    |\n@@ -253,7 +253,7 @@ error[E0023]: this pattern has 2 fields, but the corresponding tuple struct has\n   --> $DIR/pat-tuple-field-count-cross.rs:26:11\n    |\n LL |           M(xyz, abc) => {}\n-   |           - ^^^  ^^^ expected 3 fields, found 2\n+   |             ^^^  ^^^ expected 3 fields, found 2\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:5:1\n    |\n@@ -276,7 +276,7 @@ error[E0023]: this pattern has 4 fields, but the corresponding tuple struct has\n   --> $DIR/pat-tuple-field-count-cross.rs:27:11\n    |\n LL |           M(1, 2, 3, 4) => {}\n-   |           - ^  ^  ^  ^ expected 3 fields, found 4\n+   |             ^  ^  ^  ^ expected 3 fields, found 4\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:5:1\n    |\n@@ -294,18 +294,18 @@ error[E0023]: this pattern has 1 field, but the corresponding tuple variant has\n   --> $DIR/pat-tuple-field-count-cross.rs:36:16\n    |\n LL |         E1::Z1(x) => {}\n-   |         ------ ^ expected 0 fields, found 1\n+   |                ^ expected 0 fields, found 1\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:11:19\n    |\n LL | pub enum E1 { Z0, Z1(), S(u8, u8, u8) }\n    |                   ---- tuple variant has 0 fields\n \n error[E0023]: this pattern has 0 fields, but the corresponding tuple variant has 3 fields\n-  --> $DIR/pat-tuple-field-count-cross.rs:39:14\n+  --> $DIR/pat-tuple-field-count-cross.rs:39:9\n    |\n LL |         E1::S() => {}\n-   |         -----^^ expected 3 fields, found 0\n+   |         ^^^^^^^ expected 3 fields, found 0\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:11:27\n    |\n@@ -325,7 +325,7 @@ error[E0023]: this pattern has 1 field, but the corresponding tuple variant has\n   --> $DIR/pat-tuple-field-count-cross.rs:40:15\n    |\n LL |         E1::S(1) => {}\n-   |         ----- ^ expected 3 fields, found 1\n+   |               ^ expected 3 fields, found 1\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:11:27\n    |\n@@ -345,7 +345,7 @@ error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has\n   --> $DIR/pat-tuple-field-count-cross.rs:41:15\n    |\n LL |         E1::S(xyz, abc) => {}\n-   |         ----- ^^^  ^^^ expected 3 fields, found 2\n+   |               ^^^  ^^^ expected 3 fields, found 2\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:11:27\n    |\n@@ -361,18 +361,18 @@ error[E0023]: this pattern has 4 fields, but the corresponding tuple variant has\n   --> $DIR/pat-tuple-field-count-cross.rs:42:15\n    |\n LL |         E1::S(1, 2, 3, 4) => {}\n-   |         ----- ^  ^  ^  ^ expected 3 fields, found 4\n+   |               ^  ^  ^  ^ expected 3 fields, found 4\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:11:27\n    |\n LL | pub enum E1 { Z0, Z1(), S(u8, u8, u8) }\n    |                           --  --  -- tuple variant has 3 fields\n \n error[E0023]: this pattern has 0 fields, but the corresponding tuple variant has 3 fields\n-  --> $DIR/pat-tuple-field-count-cross.rs:46:14\n+  --> $DIR/pat-tuple-field-count-cross.rs:46:9\n    |\n LL |         E2::S() => {}\n-   |         -----^^ expected 3 fields, found 0\n+   |         ^^^^^^^ expected 3 fields, found 0\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:14:7\n    |\n@@ -392,7 +392,7 @@ error[E0023]: this pattern has 1 field, but the corresponding tuple variant has\n   --> $DIR/pat-tuple-field-count-cross.rs:47:15\n    |\n LL |         E2::S(1) => {}\n-   |         ----- ^ expected 3 fields, found 1\n+   |               ^ expected 3 fields, found 1\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:14:7\n    |\n@@ -412,7 +412,7 @@ error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has\n   --> $DIR/pat-tuple-field-count-cross.rs:48:15\n    |\n LL |         E2::S(xyz, abc) => {}\n-   |         ----- ^^^  ^^^ expected 3 fields, found 2\n+   |               ^^^  ^^^ expected 3 fields, found 2\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:14:7\n    |\n@@ -428,18 +428,18 @@ error[E0023]: this pattern has 4 fields, but the corresponding tuple variant has\n   --> $DIR/pat-tuple-field-count-cross.rs:49:15\n    |\n LL |         E2::S(1, 2, 3, 4) => {}\n-   |         ----- ^  ^  ^  ^ expected 3 fields, found 4\n+   |               ^  ^  ^  ^ expected 3 fields, found 4\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:14:7\n    |\n LL |     S(u8, u8, u8),\n    |       --  --  -- tuple variant has 3 fields\n \n error[E0023]: this pattern has 0 fields, but the corresponding tuple variant has 3 fields\n-  --> $DIR/pat-tuple-field-count-cross.rs:52:14\n+  --> $DIR/pat-tuple-field-count-cross.rs:52:9\n    |\n LL |           E2::M() => {}\n-   |           -----^^ expected 3 fields, found 0\n+   |           ^^^^^^^ expected 3 fields, found 0\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:15:5\n    |\n@@ -466,7 +466,7 @@ error[E0023]: this pattern has 1 field, but the corresponding tuple variant has\n   --> $DIR/pat-tuple-field-count-cross.rs:53:15\n    |\n LL |           E2::M(1) => {}\n-   |           ----- ^ expected 3 fields, found 1\n+   |                 ^ expected 3 fields, found 1\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:15:5\n    |\n@@ -493,7 +493,7 @@ error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has\n   --> $DIR/pat-tuple-field-count-cross.rs:54:15\n    |\n LL |           E2::M(xyz, abc) => {}\n-   |           ----- ^^^  ^^^ expected 3 fields, found 2\n+   |                 ^^^  ^^^ expected 3 fields, found 2\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:15:5\n    |\n@@ -516,7 +516,7 @@ error[E0023]: this pattern has 4 fields, but the corresponding tuple variant has\n   --> $DIR/pat-tuple-field-count-cross.rs:55:15\n    |\n LL |           E2::M(1, 2, 3, 4) => {}\n-   |           ----- ^  ^  ^  ^ expected 3 fields, found 4\n+   |                 ^  ^  ^  ^ expected 3 fields, found 4\n    |\n   ::: $DIR/auxiliary/declarations-for-tuple-field-count-errors.rs:15:5\n    |"}, {"sha": "c863c657514f393271655e8165d1826a1039d74c", "filename": "src/test/ui/pattern/pat-tuple-overfield.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.rs?ref=8a6501d28831d864a3af6adf2e0bd83a773062ed", "patch": "@@ -30,6 +30,22 @@ fn main() {\n     match M(1, 2, 3, 4, 5) {\n         M(1, 2, 3, 4, 5, 6) => {}\n         //~^ ERROR this pattern has 6 fields, but the corresponding tuple struct has 5 fields\n+        M(1,\n+          2,\n+          3,\n+          4,\n+          5,\n+          6) => {}\n+        //~^ ERROR this pattern has 6 fields, but the corresponding tuple struct has 5 fields\n+        M(\n+            1,\n+            2,\n+            3,\n+            4,\n+            5,\n+            6,\n+        ) => {}\n+        //~^^ ERROR this pattern has 6 fields, but the corresponding tuple struct has 5 fields\n     }\n     match Z0 {\n         Z0 => {}"}, {"sha": "1c44f7e5f6f1fa8e1015628fc662c57ffa388a10", "filename": "src/test/ui/pattern/pat-tuple-overfield.stderr", "status": "modified", "additions": 84, "deletions": 24, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.stderr?ref=8a6501d28831d864a3af6adf2e0bd83a773062ed", "patch": "@@ -1,5 +1,5 @@\n error[E0530]: match bindings cannot shadow tuple structs\n-  --> $DIR/pat-tuple-overfield.rs:41:9\n+  --> $DIR/pat-tuple-overfield.rs:57:9\n    |\n LL | struct Z1();\n    | ------------ the tuple struct `Z1` is defined here\n@@ -8,7 +8,7 @@ LL |         Z1 => {}\n    |         ^^ cannot be named the same as a tuple struct\n \n error[E0532]: expected tuple struct or tuple variant, found unit struct `Z0`\n-  --> $DIR/pat-tuple-overfield.rs:36:9\n+  --> $DIR/pat-tuple-overfield.rs:52:9\n    |\n LL | struct Z0;\n    | ---------- `Z0` defined here\n@@ -28,7 +28,7 @@ LL |         Z1() => {}\n    |         ~~\n \n error[E0532]: expected tuple struct or tuple variant, found unit struct `Z0`\n-  --> $DIR/pat-tuple-overfield.rs:37:9\n+  --> $DIR/pat-tuple-overfield.rs:53:9\n    |\n LL | struct Z0;\n    | ---------- `Z0` defined here\n@@ -48,7 +48,7 @@ LL |         Z1(_) => {}\n    |         ~~\n \n error[E0532]: expected tuple struct or tuple variant, found unit struct `Z0`\n-  --> $DIR/pat-tuple-overfield.rs:38:9\n+  --> $DIR/pat-tuple-overfield.rs:54:9\n    |\n LL | struct Z0;\n    | ---------- `Z0` defined here\n@@ -68,7 +68,7 @@ LL |         Z1(_, _) => {}\n    |         ~~\n \n error[E0532]: expected tuple struct or tuple variant, found unit variant `E1::Z0`\n-  --> $DIR/pat-tuple-overfield.rs:48:9\n+  --> $DIR/pat-tuple-overfield.rs:64:9\n    |\n LL |     Z0,\n    |     -- `E1::Z0` defined here\n@@ -88,7 +88,7 @@ LL |         E1::Z1() => {}\n    |             ~~\n \n error[E0532]: expected tuple struct or tuple variant, found unit variant `E1::Z0`\n-  --> $DIR/pat-tuple-overfield.rs:49:9\n+  --> $DIR/pat-tuple-overfield.rs:65:9\n    |\n LL |     Z0,\n    |     -- `E1::Z0` defined here\n@@ -108,7 +108,7 @@ LL |         E1::Z1(_) => {}\n    |             ~~\n \n error[E0532]: expected tuple struct or tuple variant, found unit variant `E1::Z0`\n-  --> $DIR/pat-tuple-overfield.rs:50:9\n+  --> $DIR/pat-tuple-overfield.rs:66:9\n    |\n LL |     Z0,\n    |     -- `E1::Z0` defined here\n@@ -128,7 +128,7 @@ LL |         E1::Z1(_, _) => {}\n    |             ~~\n \n error[E0532]: expected unit struct, unit variant or constant, found tuple variant `E1::Z1`\n-  --> $DIR/pat-tuple-overfield.rs:53:9\n+  --> $DIR/pat-tuple-overfield.rs:69:9\n    |\n LL |     Z0,\n    |     -- similarly named unit variant `Z0` defined here\n@@ -177,7 +177,7 @@ LL | struct S(u8, u8, u8);\n    |          --  --  -- tuple struct has 3 fields\n ...\n LL |         S(1, 2, 3, 4) => {}\n-   |         - ^  ^  ^  ^ expected 3 fields, found 4\n+   |           ^  ^  ^  ^ expected 3 fields, found 4\n \n error[E0023]: this pattern has 4 fields, but the corresponding tuple struct has 3 fields\n   --> $DIR/pat-tuple-overfield.rs:26:11\n@@ -186,7 +186,7 @@ LL | struct S(u8, u8, u8);\n    |          --  --  -- tuple struct has 3 fields\n ...\n LL |         S(1, 2, .., 3, 4) => {}\n-   |         - ^  ^      ^  ^ expected 3 fields, found 4\n+   |           ^  ^      ^  ^ expected 3 fields, found 4\n \n error[E0023]: this pattern has 6 fields, but the corresponding tuple struct has 5 fields\n   --> $DIR/pat-tuple-overfield.rs:31:11\n@@ -205,45 +205,105 @@ LL |     u8,\n    |     -- tuple struct has 5 fields\n ...\n LL |         M(1, 2, 3, 4, 5, 6) => {}\n-   |         - ^  ^  ^  ^  ^  ^ expected 5 fields, found 6\n+   |           ^  ^  ^  ^  ^  ^ expected 5 fields, found 6\n+\n+error[E0023]: this pattern has 6 fields, but the corresponding tuple struct has 5 fields\n+  --> $DIR/pat-tuple-overfield.rs:33:11\n+   |\n+LL | struct M(\n+   |        - tuple struct defined here\n+LL |     u8,\n+   |     --\n+LL |     u8,\n+   |     --\n+LL |     u8,\n+   |     --\n+LL |     u8,\n+   |     --\n+LL |     u8,\n+   |     -- tuple struct has 5 fields\n+...\n+LL |         M(1,\n+   |         - ^\n+LL |           2,\n+   |           ^\n+LL |           3,\n+   |           ^\n+LL |           4,\n+   |           ^\n+LL |           5,\n+   |           ^\n+LL |           6) => {}\n+   |           ^ expected 5 fields, found 6\n+\n+error[E0023]: this pattern has 6 fields, but the corresponding tuple struct has 5 fields\n+  --> $DIR/pat-tuple-overfield.rs:41:13\n+   |\n+LL | struct M(\n+   |        - tuple struct defined here\n+LL |     u8,\n+   |     --\n+LL |     u8,\n+   |     --\n+LL |     u8,\n+   |     --\n+LL |     u8,\n+   |     --\n+LL |     u8,\n+   |     -- tuple struct has 5 fields\n+...\n+LL |         M(\n+   |         -\n+LL |             1,\n+   |             ^\n+LL |             2,\n+   |             ^\n+LL |             3,\n+   |             ^\n+LL |             4,\n+   |             ^\n+LL |             5,\n+   |             ^\n+LL |             6,\n+   |             ^ expected 5 fields, found 6\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple struct has 0 fields\n-  --> $DIR/pat-tuple-overfield.rs:43:12\n+  --> $DIR/pat-tuple-overfield.rs:59:12\n    |\n LL | struct Z1();\n-   |          --- tuple struct has 0 fields\n+   | ------------ tuple struct has 0 fields\n ...\n LL |         Z1(_) => {}\n-   |         -- ^ expected 0 fields, found 1\n+   |            ^ expected 0 fields, found 1\n \n error[E0023]: this pattern has 2 fields, but the corresponding tuple struct has 0 fields\n-  --> $DIR/pat-tuple-overfield.rs:44:12\n+  --> $DIR/pat-tuple-overfield.rs:60:12\n    |\n LL | struct Z1();\n-   |          --- tuple struct has 0 fields\n+   | ------------ tuple struct has 0 fields\n ...\n LL |         Z1(_, _) => {}\n-   |         -- ^  ^ expected 0 fields, found 2\n+   |            ^  ^ expected 0 fields, found 2\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 0 fields\n-  --> $DIR/pat-tuple-overfield.rs:55:16\n+  --> $DIR/pat-tuple-overfield.rs:71:16\n    |\n LL |     Z1(),\n-   |       -- tuple variant has 0 fields\n+   |     ---- tuple variant has 0 fields\n ...\n LL |         E1::Z1(_) => {}\n-   |         ------ ^ expected 0 fields, found 1\n+   |                ^ expected 0 fields, found 1\n \n error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 0 fields\n-  --> $DIR/pat-tuple-overfield.rs:56:16\n+  --> $DIR/pat-tuple-overfield.rs:72:16\n    |\n LL |     Z1(),\n-   |       -- tuple variant has 0 fields\n+   |     ---- tuple variant has 0 fields\n ...\n LL |         E1::Z1(_, _) => {}\n-   |         ------ ^  ^ expected 0 fields, found 2\n+   |                ^  ^ expected 0 fields, found 2\n \n-error: aborting due to 17 previous errors\n+error: aborting due to 19 previous errors\n \n Some errors have detailed explanations: E0023, E0308, E0530, E0532.\n For more information about an error, try `rustc --explain E0023`."}, {"sha": "dac60e3fab2c0038e2d617007f80bf23b65c4c86", "filename": "src/test/ui/pattern/pat-tuple-underfield.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.rs?ref=8a6501d28831d864a3af6adf2e0bd83a773062ed", "patch": "@@ -21,6 +21,12 @@ fn main() {\n         //~^ ERROR this pattern has 0 fields, but the corresponding tuple struct has 2 fields\n         //~| HELP use `_` to explicitly ignore each field\n         //~| HELP use `..` to ignore all fields\n+\n+        // Test non-standard formatting\n+        S () => {}\n+        //~^ ERROR this pattern has 0 fields, but the corresponding tuple struct has 2 fields\n+        //~| HELP use `_` to explicitly ignore each field\n+        //~| HELP use `..` to ignore all fields\n     }\n \n     match E::S(0, 1.0) {\n@@ -39,6 +45,12 @@ fn main() {\n         //~^ ERROR this pattern has 0 fields, but the corresponding tuple variant has 2 fields\n         //~| HELP use `_` to explicitly ignore each field\n         //~| HELP use `..` to ignore all fields\n+\n+        // Test non-standard formatting\n+        E::S () => {}\n+        //~^ ERROR this pattern has 0 fields, but the corresponding tuple variant has 2 fields\n+        //~| HELP use `_` to explicitly ignore each field\n+        //~| HELP use `..` to ignore all fields\n     }\n     match E::S(0, 1.0) {\n         E::S => {}"}, {"sha": "e75f9b38da56640a90e20896aee3f6dafd4b26a6", "filename": "src/test/ui/pattern/pat-tuple-underfield.stderr", "status": "modified", "additions": 50, "deletions": 14, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr?ref=8a6501d28831d864a3af6adf2e0bd83a773062ed", "patch": "@@ -1,5 +1,5 @@\n error[E0532]: expected unit struct, unit variant or constant, found tuple variant `E::S`\n-  --> $DIR/pat-tuple-underfield.rs:44:9\n+  --> $DIR/pat-tuple-underfield.rs:56:9\n    |\n LL |     S(i32, f32),\n    |     ----------- `E::S` defined here\n@@ -14,7 +14,7 @@ LL | struct S(i32, f32);\n    |          ---  --- tuple struct has 2 fields\n ...\n LL |         S(x) => {}\n-   |         - ^ expected 2 fields, found 1\n+   |           ^ expected 2 fields, found 1\n    |\n help: use `_` to explicitly ignore each field\n    |\n@@ -28,7 +28,7 @@ LL | struct S(i32, f32);\n    |          ---  --- tuple struct has 2 fields\n ...\n LL |         S(_) => {}\n-   |         - ^ expected 2 fields, found 1\n+   |           ^ expected 2 fields, found 1\n    |\n help: use `_` to explicitly ignore each field\n    |\n@@ -40,13 +40,13 @@ LL |         S(..) => {}\n    |           ~~\n \n error[E0023]: this pattern has 0 fields, but the corresponding tuple struct has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:20:10\n+  --> $DIR/pat-tuple-underfield.rs:20:9\n    |\n LL | struct S(i32, f32);\n    |          ---  --- tuple struct has 2 fields\n ...\n LL |         S() => {}\n-   |         -^^ expected 2 fields, found 0\n+   |         ^^^ expected 2 fields, found 0\n    |\n help: use `_` to explicitly ignore each field\n    |\n@@ -57,28 +57,46 @@ help: use `..` to ignore all fields\n LL |         S(..) => {}\n    |           ++\n \n+error[E0023]: this pattern has 0 fields, but the corresponding tuple struct has 2 fields\n+  --> $DIR/pat-tuple-underfield.rs:26:9\n+   |\n+LL | struct S(i32, f32);\n+   |          ---  --- tuple struct has 2 fields\n+...\n+LL |         S () => {}\n+   |         ^^^^ expected 2 fields, found 0\n+   |\n+help: use `_` to explicitly ignore each field\n+   |\n+LL |         S (_, _) => {}\n+   |            ++++\n+help: use `..` to ignore all fields\n+   |\n+LL |         S (..) => {}\n+   |            ++\n+\n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:27:14\n+  --> $DIR/pat-tuple-underfield.rs:33:14\n    |\n LL |     S(i32, f32),\n    |       ---  --- tuple variant has 2 fields\n ...\n LL |         E::S(x) => {}\n-   |         ---- ^ expected 2 fields, found 1\n+   |              ^ expected 2 fields, found 1\n    |\n help: use `_` to explicitly ignore each field\n    |\n LL |         E::S(x, _) => {}\n    |               +++\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:32:14\n+  --> $DIR/pat-tuple-underfield.rs:38:14\n    |\n LL |     S(i32, f32),\n    |       ---  --- tuple variant has 2 fields\n ...\n LL |         E::S(_) => {}\n-   |         ---- ^ expected 2 fields, found 1\n+   |              ^ expected 2 fields, found 1\n    |\n help: use `_` to explicitly ignore each field\n    |\n@@ -90,13 +108,13 @@ LL |         E::S(..) => {}\n    |              ~~\n \n error[E0023]: this pattern has 0 fields, but the corresponding tuple variant has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:38:13\n+  --> $DIR/pat-tuple-underfield.rs:44:9\n    |\n LL |     S(i32, f32),\n    |       ---  --- tuple variant has 2 fields\n ...\n LL |         E::S() => {}\n-   |         ----^^ expected 2 fields, found 0\n+   |         ^^^^^^ expected 2 fields, found 0\n    |\n help: use `_` to explicitly ignore each field\n    |\n@@ -107,14 +125,32 @@ help: use `..` to ignore all fields\n LL |         E::S(..) => {}\n    |              ++\n \n+error[E0023]: this pattern has 0 fields, but the corresponding tuple variant has 2 fields\n+  --> $DIR/pat-tuple-underfield.rs:50:9\n+   |\n+LL |     S(i32, f32),\n+   |       ---  --- tuple variant has 2 fields\n+...\n+LL |         E::S () => {}\n+   |         ^^^^^^^ expected 2 fields, found 0\n+   |\n+help: use `_` to explicitly ignore each field\n+   |\n+LL |         E::S (_, _) => {}\n+   |               ++++\n+help: use `..` to ignore all fields\n+   |\n+LL |         E::S (..) => {}\n+   |               ++\n+\n error[E0023]: this pattern has 2 fields, but the corresponding tuple struct has 4 fields\n-  --> $DIR/pat-tuple-underfield.rs:50:19\n+  --> $DIR/pat-tuple-underfield.rs:62:19\n    |\n LL | struct Point4(i32, i32, i32, i32);\n    |               ---  ---  ---  --- tuple struct has 4 fields\n ...\n LL |         Point4(   a   ,     _    ) => {}\n-   |         ------    ^         ^ expected 4 fields, found 2\n+   |                   ^         ^ expected 4 fields, found 2\n    |\n help: use `_` to explicitly ignore each field\n    |\n@@ -125,7 +161,7 @@ help: use `..` to ignore the rest of the fields\n LL |         Point4(   a, ..) => {}\n    |                    ~~~~\n \n-error: aborting due to 8 previous errors\n+error: aborting due to 10 previous errors\n \n Some errors have detailed explanations: E0023, E0532.\n For more information about an error, try `rustc --explain E0023`."}, {"sha": "c800afdae2afb4ef205fbfdce14a090139c75504", "filename": "src/test/ui/pattern/pattern-error-continue.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8a6501d28831d864a3af6adf2e0bd83a773062ed/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr?ref=8a6501d28831d864a3af6adf2e0bd83a773062ed", "patch": "@@ -32,7 +32,7 @@ LL |     B(isize, isize),\n    |       -----  ----- tuple variant has 2 fields\n ...\n LL |         A::B(_, _, _) => (),\n-   |         ---- ^  ^  ^ expected 2 fields, found 3\n+   |              ^  ^  ^ expected 2 fields, found 3\n \n error[E0308]: mismatched types\n   --> $DIR/pattern-error-continue.rs:22:9"}]}