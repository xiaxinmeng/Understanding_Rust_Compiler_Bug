{"sha": "f1758a043f068b2c15d8c30ad6962006d022539b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNzU4YTA0M2YwNjhiMmMxNWQ4YzMwYWQ2OTYyMDA2ZDAyMjUzOWI=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-12-24T16:43:17Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-12-25T09:13:15Z"}, "message": "Feature gate or patterns in const contexts", "tree": {"sha": "9fdbc5191fbf795f92040ef46f2bd119c1147077", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fdbc5191fbf795f92040ef46f2bd119c1147077"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1758a043f068b2c15d8c30ad6962006d022539b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1758a043f068b2c15d8c30ad6962006d022539b", "html_url": "https://github.com/rust-lang/rust/commit/f1758a043f068b2c15d8c30ad6962006d022539b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1758a043f068b2c15d8c30ad6962006d022539b/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58a6a201c007c52ca585fb882e714a928b61b066", "url": "https://api.github.com/repos/rust-lang/rust/commits/58a6a201c007c52ca585fb882e714a928b61b066", "html_url": "https://github.com/rust-lang/rust/commit/58a6a201c007c52ca585fb882e714a928b61b066"}], "stats": {"total": 115, "additions": 110, "deletions": 5}, "files": [{"sha": "a0aead9891101ad9ba6f14847235e97aa6a9699e", "filename": "src/librustc_passes/check_const.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f1758a043f068b2c15d8c30ad6962006d022539b/src%2Flibrustc_passes%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1758a043f068b2c15d8c30ad6962006d022539b/src%2Flibrustc_passes%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fcheck_const.rs?ref=f1758a043f068b2c15d8c30ad6962006d022539b", "patch": "@@ -27,13 +27,15 @@ use std::fmt;\n enum NonConstExpr {\n     Loop(hir::LoopSource),\n     Match(hir::MatchSource),\n+    OrPattern,\n }\n \n impl NonConstExpr {\n-    fn name(self) -> &'static str {\n+    fn name(self) -> String {\n         match self {\n-            Self::Loop(src) => src.name(),\n-            Self::Match(src) => src.name(),\n+            Self::Loop(src) => format!(\"`{}`\", src.name()),\n+            Self::Match(src) => format!(\"`{}`\", src.name()),\n+            Self::OrPattern => format!(\"or-pattern\"),\n         }\n     }\n \n@@ -44,7 +46,8 @@ impl NonConstExpr {\n         let gates: &[_] = match self {\n             Self::Match(Normal)\n             | Self::Match(IfDesugar { .. })\n-            | Self::Match(IfLetDesugar { .. }) => &[sym::const_if_match],\n+            | Self::Match(IfLetDesugar { .. })\n+            | Self::OrPattern => &[sym::const_if_match],\n \n             Self::Loop(Loop) => &[sym::const_loop],\n \n@@ -144,7 +147,7 @@ impl<'tcx> CheckConstVisitor<'tcx> {\n         let const_kind = self\n             .const_kind\n             .expect(\"`const_check_violated` may only be called inside a const context\");\n-        let msg = format!(\"`{}` is not allowed in a `{}`\", expr.name(), const_kind);\n+        let msg = format!(\"{} is not allowed in a `{}`\", expr.name(), const_kind);\n \n         let required_gates = required_gates.unwrap_or(&[]);\n         let missing_gates: Vec<_> =\n@@ -211,6 +214,15 @@ impl<'tcx> Visitor<'tcx> for CheckConstVisitor<'tcx> {\n         self.recurse_into(kind, |this| hir::intravisit::walk_body(this, body));\n     }\n \n+    fn visit_pat(&mut self, p: &'tcx hir::Pat) {\n+        if self.const_kind.is_some() {\n+            if let hir::PatKind::Or { .. } = p.kind {\n+                self.const_check_violated(NonConstExpr::OrPattern, p.span);\n+            }\n+        }\n+        hir::intravisit::walk_pat(self, p)\n+    }\n+\n     fn visit_expr(&mut self, e: &'tcx hir::Expr) {\n         match &e.kind {\n             // Skip the following checks if we are not currently in a const context."}, {"sha": "d73dcf26666483b388192b96ec1cafd49f601aaf", "filename": "src/test/ui/or-patterns/feature-gate-const-fn.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f1758a043f068b2c15d8c30ad6962006d022539b/src%2Ftest%2Fui%2For-patterns%2Ffeature-gate-const-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1758a043f068b2c15d8c30ad6962006d022539b/src%2Ftest%2Fui%2For-patterns%2Ffeature-gate-const-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Ffeature-gate-const-fn.rs?ref=f1758a043f068b2c15d8c30ad6962006d022539b", "patch": "@@ -0,0 +1,36 @@\n+#![feature(or_patterns)]\n+#![allow(incomplete_features)]\n+\n+const fn foo((Ok(a) | Err(a)): Result<i32, i32>) {\n+    //~^ ERROR or-pattern is not allowed in a `const fn`\n+    let x = Ok(3);\n+    let Ok(y) | Err(y) = x;\n+    //~^ ERROR or-pattern is not allowed in a `const fn`\n+}\n+\n+const X: () = {\n+    let x = Ok(3);\n+    let Ok(y) | Err(y) = x;\n+    //~^ ERROR or-pattern is not allowed in a `const`\n+};\n+\n+static Y: () = {\n+    let x = Ok(3);\n+    let Ok(y) | Err(y) = x;\n+    //~^ ERROR or-pattern is not allowed in a `static`\n+};\n+\n+static mut Z: () = {\n+    let x = Ok(3);\n+    let Ok(y) | Err(y) = x;\n+    //~^ ERROR or-pattern is not allowed in a `static mut`\n+};\n+\n+fn main() {\n+    let _: [(); {\n+        let x = Ok(3);\n+        let Ok(y) | Err(y) = x;\n+        //~^ ERROR or-pattern is not allowed in a `const`\n+        2\n+    }];\n+}"}, {"sha": "26143d2f19d335f3268b96f1bfea0e71ec7adbed", "filename": "src/test/ui/or-patterns/feature-gate-const-fn.stderr", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/f1758a043f068b2c15d8c30ad6962006d022539b/src%2Ftest%2Fui%2For-patterns%2Ffeature-gate-const-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1758a043f068b2c15d8c30ad6962006d022539b/src%2Ftest%2Fui%2For-patterns%2Ffeature-gate-const-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Ffeature-gate-const-fn.stderr?ref=f1758a043f068b2c15d8c30ad6962006d022539b", "patch": "@@ -0,0 +1,57 @@\n+error[E0658]: or-pattern is not allowed in a `const fn`\n+  --> $DIR/feature-gate-const-fn.rs:4:15\n+   |\n+LL | const fn foo((Ok(a) | Err(a)): Result<i32, i32>) {\n+   |               ^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49146\n+   = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n+\n+error[E0658]: or-pattern is not allowed in a `const fn`\n+  --> $DIR/feature-gate-const-fn.rs:7:9\n+   |\n+LL |     let Ok(y) | Err(y) = x;\n+   |         ^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49146\n+   = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n+\n+error[E0658]: or-pattern is not allowed in a `const`\n+  --> $DIR/feature-gate-const-fn.rs:13:9\n+   |\n+LL |     let Ok(y) | Err(y) = x;\n+   |         ^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49146\n+   = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n+\n+error[E0658]: or-pattern is not allowed in a `static`\n+  --> $DIR/feature-gate-const-fn.rs:19:9\n+   |\n+LL |     let Ok(y) | Err(y) = x;\n+   |         ^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49146\n+   = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n+\n+error[E0658]: or-pattern is not allowed in a `static mut`\n+  --> $DIR/feature-gate-const-fn.rs:25:9\n+   |\n+LL |     let Ok(y) | Err(y) = x;\n+   |         ^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49146\n+   = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n+\n+error[E0658]: or-pattern is not allowed in a `const`\n+  --> $DIR/feature-gate-const-fn.rs:32:13\n+   |\n+LL |         let Ok(y) | Err(y) = x;\n+   |             ^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49146\n+   = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n+\n+error: aborting due to 6 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}]}