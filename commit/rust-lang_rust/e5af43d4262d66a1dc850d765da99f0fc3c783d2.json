{"sha": "e5af43d4262d66a1dc850d765da99f0fc3c783d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1YWY0M2Q0MjYyZDY2YTFkYzg1MGQ3NjVkYTk5ZjBmYzNjNzgzZDI=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-10-30T20:36:52Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-11-02T06:19:30Z"}, "message": "UI test cleanup: Extract match_overlapping_arm tests", "tree": {"sha": "08f3a181c1f430279979892c0889fd9ab748968d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08f3a181c1f430279979892c0889fd9ab748968d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5af43d4262d66a1dc850d765da99f0fc3c783d2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlvb7HIACgkQtvoGpuDi\nZluldQ/+K2nA00vV0jJMY+JMYXyZS/2CbZsSEXtn/FhJZAduAF1vDQJCzo+EsStB\ndmpTjb+sS8pkP97TeXvhoinSk9W9Wagyz0dZ36/rkvOTtm4dEJn11NXri96x692z\n5HDMta1LJK5jSTHsxX0k3zL0bnbbebgRcb+k3v1k37qmf1Ds38ZGe6Wu0TytBdIg\nwYXs0kz2LbDF7EnZodSHWk11pWjjiwmeEAqgAtaIV25AYlyGcJBJAMUVDG8gAwTC\nrC07V7oTcM8HtyJM+yd1iPw9lPW1nZJN3n3W1RF8BW0gOcXDs8v/sTNlKnFo81zu\nREhoK2CPoxADbP5sbGv3gSf5k9ApPJZRNln2wKTqDaTrVgRfut5map3+JFC03qNV\nasSxFVWxE1Jgumd7RmaSxoUR5ChJQnj4cqquR+LzSDAVnMB6+4aVSZ4AwH2I1ayf\ngUq4t4e/ds1Y/6CaYt8apugsA43sjM9s5Fs+JyPMpHQ+JUqiiMRk6wFhF09WkHsC\nw39rRf3W4ou2U9j9TJgF4tKvPBWTiE7SZt0q3/xWHgNuTzCw1GGR3lTLuyWAPZGN\nY3agB5BH0SGlPnBwhA4J99rpKXsvz7AMgtLGo29YgSysw9rUZ8fZGUB8tlsREq1i\nX4cAwpk9m1M15Oh+mEFW5HlqYFbr7Lp32P5VuQBGUzctdkdjS0o=\n=TYoj\n-----END PGP SIGNATURE-----", "payload": "tree 08f3a181c1f430279979892c0889fd9ab748968d\nparent 5172271e70173122bde3018ba455dfa97850c7f6\nauthor Philipp Hansch <dev@phansch.net> 1540931812 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1541139570 +0100\n\nUI test cleanup: Extract match_overlapping_arm tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5af43d4262d66a1dc850d765da99f0fc3c783d2", "html_url": "https://github.com/rust-lang/rust/commit/e5af43d4262d66a1dc850d765da99f0fc3c783d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5af43d4262d66a1dc850d765da99f0fc3c783d2/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5172271e70173122bde3018ba455dfa97850c7f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/5172271e70173122bde3018ba455dfa97850c7f6", "html_url": "https://github.com/rust-lang/rust/commit/5172271e70173122bde3018ba455dfa97850c7f6"}], "stats": {"total": 472, "additions": 245, "deletions": 227}, "files": [{"sha": "1f2c3f8a8910e5715d873ed6562b1973d9ad7759", "filename": "tests/ui/match_overlapping_arm.rs", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/e5af43d4262d66a1dc850d765da99f0fc3c783d2/tests%2Fui%2Fmatch_overlapping_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5af43d4262d66a1dc850d765da99f0fc3c783d2/tests%2Fui%2Fmatch_overlapping_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_overlapping_arm.rs?ref=e5af43d4262d66a1dc850d765da99f0fc3c783d2", "patch": "@@ -0,0 +1,75 @@\n+// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(exclusive_range_pattern)]\n+#![warn(clippy::match_overlapping_arm)]\n+#![allow(clippy::redundant_pattern_matching)]\n+\n+/// Tests for match_overlapping_arm\n+\n+fn overlapping() {\n+    const FOO : u64 = 2;\n+\n+    match 42 {\n+        0 ... 10 => println!(\"0 ... 10\"),\n+        0 ... 11 => println!(\"0 ... 11\"),\n+        _ => (),\n+    }\n+\n+    match 42 {\n+        0 ... 5 => println!(\"0 ... 5\"),\n+        6 ... 7 => println!(\"6 ... 7\"),\n+        FOO ... 11 => println!(\"0 ... 11\"),\n+        _ => (),\n+    }\n+\n+    match 42 {\n+        2 => println!(\"2\"),\n+        0 ... 5 => println!(\"0 ... 5\"),\n+        _ => (),\n+    }\n+\n+    match 42 {\n+        2 => println!(\"2\"),\n+        0 ... 2 => println!(\"0 ... 2\"),\n+        _ => (),\n+    }\n+\n+    match 42 {\n+        0 ... 10 => println!(\"0 ... 10\"),\n+        11 ... 50 => println!(\"11 ... 50\"),\n+        _ => (),\n+    }\n+\n+    match 42 {\n+        2 => println!(\"2\"),\n+        0 .. 2 => println!(\"0 .. 2\"),\n+        _ => (),\n+    }\n+\n+    match 42 {\n+        0 .. 10 => println!(\"0 .. 10\"),\n+        10 .. 50 => println!(\"10 .. 50\"),\n+        _ => (),\n+    }\n+\n+    match 42 {\n+        0 .. 11 => println!(\"0 .. 11\"),\n+        0 ... 11 => println!(\"0 ... 11\"),\n+        _ => (),\n+    }\n+\n+    if let None = Some(42) {\n+        // nothing\n+    } else if let None = Some(42) {\n+        // another nothing :-)\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "4f9d8ac768397139205bf7ae663f66adb13eb30d", "filename": "tests/ui/match_overlapping_arm.stderr", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/e5af43d4262d66a1dc850d765da99f0fc3c783d2/tests%2Fui%2Fmatch_overlapping_arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e5af43d4262d66a1dc850d765da99f0fc3c783d2/tests%2Fui%2Fmatch_overlapping_arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_overlapping_arm.stderr?ref=e5af43d4262d66a1dc850d765da99f0fc3c783d2", "patch": "@@ -0,0 +1,63 @@\n+error: some ranges overlap\n+  --> $DIR/match_overlapping_arm.rs:20:9\n+   |\n+20 |         0 ... 10 => println!(\"0 ... 10\"),\n+   |         ^^^^^^^^\n+   |\n+   = note: `-D clippy::match-overlapping-arm` implied by `-D warnings`\n+note: overlaps with this\n+  --> $DIR/match_overlapping_arm.rs:21:9\n+   |\n+21 |         0 ... 11 => println!(\"0 ... 11\"),\n+   |         ^^^^^^^^\n+\n+error: some ranges overlap\n+  --> $DIR/match_overlapping_arm.rs:26:9\n+   |\n+26 |         0 ... 5 => println!(\"0 ... 5\"),\n+   |         ^^^^^^^\n+   |\n+note: overlaps with this\n+  --> $DIR/match_overlapping_arm.rs:28:9\n+   |\n+28 |         FOO ... 11 => println!(\"0 ... 11\"),\n+   |         ^^^^^^^^^^\n+\n+error: some ranges overlap\n+  --> $DIR/match_overlapping_arm.rs:34:9\n+   |\n+34 |         0 ... 5 => println!(\"0 ... 5\"),\n+   |         ^^^^^^^\n+   |\n+note: overlaps with this\n+  --> $DIR/match_overlapping_arm.rs:33:9\n+   |\n+33 |         2 => println!(\"2\"),\n+   |         ^\n+\n+error: some ranges overlap\n+  --> $DIR/match_overlapping_arm.rs:40:9\n+   |\n+40 |         0 ... 2 => println!(\"0 ... 2\"),\n+   |         ^^^^^^^\n+   |\n+note: overlaps with this\n+  --> $DIR/match_overlapping_arm.rs:39:9\n+   |\n+39 |         2 => println!(\"2\"),\n+   |         ^\n+\n+error: some ranges overlap\n+  --> $DIR/match_overlapping_arm.rs:63:9\n+   |\n+63 |         0 .. 11 => println!(\"0 .. 11\"),\n+   |         ^^^^^^^\n+   |\n+note: overlaps with this\n+  --> $DIR/match_overlapping_arm.rs:64:9\n+   |\n+64 |         0 ... 11 => println!(\"0 ... 11\"),\n+   |         ^^^^^^^^\n+\n+error: aborting due to 5 previous errors\n+"}, {"sha": "c7630b0533d2e9e3b9620ee11dec5764a01f20d5", "filename": "tests/ui/matches.rs", "status": "modified", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/e5af43d4262d66a1dc850d765da99f0fc3c783d2/tests%2Fui%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5af43d4262d66a1dc850d765da99f0fc3c783d2/tests%2Fui%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.rs?ref=e5af43d4262d66a1dc850d765da99f0fc3c783d2", "patch": "@@ -74,65 +74,6 @@ fn ref_pats() {\n     }\n }\n \n-fn overlapping() {\n-    const FOO : u64 = 2;\n-\n-    match 42 {\n-        0 ... 10 => println!(\"0 ... 10\"),\n-        0 ... 11 => println!(\"0 ... 11\"),\n-        _ => (),\n-    }\n-\n-    match 42 {\n-        0 ... 5 => println!(\"0 ... 5\"),\n-        6 ... 7 => println!(\"6 ... 7\"),\n-        FOO ... 11 => println!(\"0 ... 11\"),\n-        _ => (),\n-    }\n-\n-    match 42 {\n-        2 => println!(\"2\"),\n-        0 ... 5 => println!(\"0 ... 5\"),\n-        _ => (),\n-    }\n-\n-    match 42 {\n-        2 => println!(\"2\"),\n-        0 ... 2 => println!(\"0 ... 2\"),\n-        _ => (),\n-    }\n-\n-    match 42 {\n-        0 ... 10 => println!(\"0 ... 10\"),\n-        11 ... 50 => println!(\"11 ... 50\"),\n-        _ => (),\n-    }\n-\n-    match 42 {\n-        2 => println!(\"2\"),\n-        0 .. 2 => println!(\"0 .. 2\"),\n-        _ => (),\n-    }\n-\n-    match 42 {\n-        0 .. 10 => println!(\"0 .. 10\"),\n-        10 .. 50 => println!(\"10 .. 50\"),\n-        _ => (),\n-    }\n-\n-    match 42 {\n-        0 .. 11 => println!(\"0 .. 11\"),\n-        0 ... 11 => println!(\"0 ... 11\"),\n-        _ => (),\n-    }\n-\n-    if let None = Some(42) {\n-        // nothing\n-    } else if let None = Some(42) {\n-        // another nothing :-)\n-    }\n-}\n-\n fn match_wild_err_arm() {\n     let x: Result<i32, &str> = Ok(3);\n "}, {"sha": "aebb166d3bcd41d8341732aab51031af1b892819", "filename": "tests/ui/matches.stderr", "status": "modified", "additions": 107, "deletions": 168, "changes": 275, "blob_url": "https://github.com/rust-lang/rust/blob/e5af43d4262d66a1dc850d765da99f0fc3c783d2/tests%2Fui%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e5af43d4262d66a1dc850d765da99f0fc3c783d2/tests%2Fui%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.stderr?ref=e5af43d4262d66a1dc850d765da99f0fc3c783d2", "patch": "@@ -88,276 +88,215 @@ help: try\n 72 |     if let None = b {\n    |            ^^^^   ^\n \n-error: some ranges overlap\n-  --> $DIR/matches.rs:81:9\n-   |\n-81 |         0 ... 10 => println!(\"0 ... 10\"),\n-   |         ^^^^^^^^\n-   |\n-   = note: `-D clippy::match-overlapping-arm` implied by `-D warnings`\n-note: overlaps with this\n-  --> $DIR/matches.rs:82:9\n-   |\n-82 |         0 ... 11 => println!(\"0 ... 11\"),\n-   |         ^^^^^^^^\n-\n-error: some ranges overlap\n-  --> $DIR/matches.rs:87:9\n-   |\n-87 |         0 ... 5 => println!(\"0 ... 5\"),\n-   |         ^^^^^^^\n+error: Err(_) will match all errors, maybe not a good idea\n+  --> $DIR/matches.rs:83:9\n    |\n-note: overlaps with this\n-  --> $DIR/matches.rs:89:9\n+83 |         Err(_) => panic!(\"err\")\n+   |         ^^^^^^\n    |\n-89 |         FOO ... 11 => println!(\"0 ... 11\"),\n-   |         ^^^^^^^^^^\n+   = note: `-D clippy::match-wild-err-arm` implied by `-D warnings`\n+   = note: to remove this warning, match each error separately or use unreachable macro\n \n-error: some ranges overlap\n-  --> $DIR/matches.rs:95:9\n-   |\n-95 |         0 ... 5 => println!(\"0 ... 5\"),\n-   |         ^^^^^^^\n+error: this `match` has identical arm bodies\n+  --> $DIR/matches.rs:82:18\n    |\n-note: overlaps with this\n-  --> $DIR/matches.rs:94:9\n+82 |         Ok(_) => println!(\"ok\"),\n+   |                  ^^^^^^^^^^^^^^\n    |\n-94 |         2 => println!(\"2\"),\n-   |         ^\n-\n-error: some ranges overlap\n-   --> $DIR/matches.rs:101:9\n-    |\n-101 |         0 ... 2 => println!(\"0 ... 2\"),\n-    |         ^^^^^^^\n-    |\n-note: overlaps with this\n-   --> $DIR/matches.rs:100:9\n-    |\n-100 |         2 => println!(\"2\"),\n-    |         ^\n-\n-error: some ranges overlap\n-   --> $DIR/matches.rs:124:9\n-    |\n-124 |         0 .. 11 => println!(\"0 .. 11\"),\n-    |         ^^^^^^^\n-    |\n-note: overlaps with this\n-   --> $DIR/matches.rs:125:9\n-    |\n-125 |         0 ... 11 => println!(\"0 ... 11\"),\n-    |         ^^^^^^^^\n-\n-error: Err(_) will match all errors, maybe not a good idea\n-   --> $DIR/matches.rs:142:9\n-    |\n-142 |         Err(_) => panic!(\"err\")\n-    |         ^^^^^^\n-    |\n-    = note: `-D clippy::match-wild-err-arm` implied by `-D warnings`\n-    = note: to remove this warning, match each error separately or use unreachable macro\n-\n-error: this `match` has identical arm bodies\n-   --> $DIR/matches.rs:141:18\n-    |\n-141 |         Ok(_) => println!(\"ok\"),\n-    |                  ^^^^^^^^^^^^^^\n-    |\n-    = note: `-D clippy::match-same-arms` implied by `-D warnings`\n+   = note: `-D clippy::match-same-arms` implied by `-D warnings`\n note: same as this\n-   --> $DIR/matches.rs:140:18\n-    |\n-140 |         Ok(3) => println!(\"ok\"),\n-    |                  ^^^^^^^^^^^^^^\n+  --> $DIR/matches.rs:81:18\n+   |\n+81 |         Ok(3) => println!(\"ok\"),\n+   |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n-   --> $DIR/matches.rs:140:18\n-    |\n-140 |         Ok(3) => println!(\"ok\"),\n-    |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+  --> $DIR/matches.rs:81:18\n+   |\n+81 |         Ok(3) => println!(\"ok\"),\n+   |                  ^^^^^^^^^^^^^^\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: Err(_) will match all errors, maybe not a good idea\n-   --> $DIR/matches.rs:148:9\n-    |\n-148 |         Err(_) => {panic!()}\n-    |         ^^^^^^\n-    |\n-    = note: to remove this warning, match each error separately or use unreachable macro\n+  --> $DIR/matches.rs:89:9\n+   |\n+89 |         Err(_) => {panic!()}\n+   |         ^^^^^^\n+   |\n+   = note: to remove this warning, match each error separately or use unreachable macro\n \n error: this `match` has identical arm bodies\n-   --> $DIR/matches.rs:147:18\n-    |\n-147 |         Ok(_) => println!(\"ok\"),\n-    |                  ^^^^^^^^^^^^^^\n-    |\n+  --> $DIR/matches.rs:88:18\n+   |\n+88 |         Ok(_) => println!(\"ok\"),\n+   |                  ^^^^^^^^^^^^^^\n+   |\n note: same as this\n-   --> $DIR/matches.rs:146:18\n-    |\n-146 |         Ok(3) => println!(\"ok\"),\n-    |                  ^^^^^^^^^^^^^^\n+  --> $DIR/matches.rs:87:18\n+   |\n+87 |         Ok(3) => println!(\"ok\"),\n+   |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n-   --> $DIR/matches.rs:146:18\n-    |\n-146 |         Ok(3) => println!(\"ok\"),\n-    |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+  --> $DIR/matches.rs:87:18\n+   |\n+87 |         Ok(3) => println!(\"ok\"),\n+   |                  ^^^^^^^^^^^^^^\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: Err(_) will match all errors, maybe not a good idea\n-   --> $DIR/matches.rs:154:9\n-    |\n-154 |         Err(_) => {panic!();}\n-    |         ^^^^^^\n-    |\n-    = note: to remove this warning, match each error separately or use unreachable macro\n+  --> $DIR/matches.rs:95:9\n+   |\n+95 |         Err(_) => {panic!();}\n+   |         ^^^^^^\n+   |\n+   = note: to remove this warning, match each error separately or use unreachable macro\n \n error: this `match` has identical arm bodies\n-   --> $DIR/matches.rs:153:18\n-    |\n-153 |         Ok(_) => println!(\"ok\"),\n-    |                  ^^^^^^^^^^^^^^\n-    |\n+  --> $DIR/matches.rs:94:18\n+   |\n+94 |         Ok(_) => println!(\"ok\"),\n+   |                  ^^^^^^^^^^^^^^\n+   |\n note: same as this\n-   --> $DIR/matches.rs:152:18\n-    |\n-152 |         Ok(3) => println!(\"ok\"),\n-    |                  ^^^^^^^^^^^^^^\n+  --> $DIR/matches.rs:93:18\n+   |\n+93 |         Ok(3) => println!(\"ok\"),\n+   |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n-   --> $DIR/matches.rs:152:18\n-    |\n-152 |         Ok(3) => println!(\"ok\"),\n-    |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+  --> $DIR/matches.rs:93:18\n+   |\n+93 |         Ok(3) => println!(\"ok\"),\n+   |                  ^^^^^^^^^^^^^^\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n-   --> $DIR/matches.rs:160:18\n+   --> $DIR/matches.rs:101:18\n     |\n-160 |         Ok(_) => println!(\"ok\"),\n+101 |         Ok(_) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n     |\n note: same as this\n-   --> $DIR/matches.rs:159:18\n+   --> $DIR/matches.rs:100:18\n     |\n-159 |         Ok(3) => println!(\"ok\"),\n+100 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n-   --> $DIR/matches.rs:159:18\n+   --> $DIR/matches.rs:100:18\n     |\n-159 |         Ok(3) => println!(\"ok\"),\n+100 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n     = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n-   --> $DIR/matches.rs:167:18\n+   --> $DIR/matches.rs:108:18\n     |\n-167 |         Ok(_) => println!(\"ok\"),\n+108 |         Ok(_) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n     |\n note: same as this\n-   --> $DIR/matches.rs:166:18\n+   --> $DIR/matches.rs:107:18\n     |\n-166 |         Ok(3) => println!(\"ok\"),\n+107 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n-   --> $DIR/matches.rs:166:18\n+   --> $DIR/matches.rs:107:18\n     |\n-166 |         Ok(3) => println!(\"ok\"),\n+107 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n     = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n-   --> $DIR/matches.rs:173:18\n+   --> $DIR/matches.rs:114:18\n     |\n-173 |         Ok(_) => println!(\"ok\"),\n+114 |         Ok(_) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n     |\n note: same as this\n-   --> $DIR/matches.rs:172:18\n+   --> $DIR/matches.rs:113:18\n     |\n-172 |         Ok(3) => println!(\"ok\"),\n+113 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n-   --> $DIR/matches.rs:172:18\n+   --> $DIR/matches.rs:113:18\n     |\n-172 |         Ok(3) => println!(\"ok\"),\n+113 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n     = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n-   --> $DIR/matches.rs:179:18\n+   --> $DIR/matches.rs:120:18\n     |\n-179 |         Ok(_) => println!(\"ok\"),\n+120 |         Ok(_) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n     |\n note: same as this\n-   --> $DIR/matches.rs:178:18\n+   --> $DIR/matches.rs:119:18\n     |\n-178 |         Ok(3) => println!(\"ok\"),\n+119 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n-   --> $DIR/matches.rs:178:18\n+   --> $DIR/matches.rs:119:18\n     |\n-178 |         Ok(3) => println!(\"ok\"),\n+119 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n     = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n-   --> $DIR/matches.rs:200:29\n+   --> $DIR/matches.rs:141:29\n     |\n-200 |         (Ok(_), Some(x)) => println!(\"ok {}\", x),\n+141 |         (Ok(_), Some(x)) => println!(\"ok {}\", x),\n     |                             ^^^^^^^^^^^^^^^^^^^^\n     |\n note: same as this\n-   --> $DIR/matches.rs:199:29\n+   --> $DIR/matches.rs:140:29\n     |\n-199 |         (Ok(x), Some(_)) => println!(\"ok {}\", x),\n+140 |         (Ok(x), Some(_)) => println!(\"ok {}\", x),\n     |                             ^^^^^^^^^^^^^^^^^^^^\n note: consider refactoring into `(Ok(x), Some(_)) | (Ok(_), Some(x))`\n-   --> $DIR/matches.rs:199:29\n+   --> $DIR/matches.rs:140:29\n     |\n-199 |         (Ok(x), Some(_)) => println!(\"ok {}\", x),\n+140 |         (Ok(x), Some(_)) => println!(\"ok {}\", x),\n     |                             ^^^^^^^^^^^^^^^^^^^^\n     = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n-   --> $DIR/matches.rs:215:18\n+   --> $DIR/matches.rs:156:18\n     |\n-215 |         Ok(_) => println!(\"ok\"),\n+156 |         Ok(_) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n     |\n note: same as this\n-   --> $DIR/matches.rs:214:18\n+   --> $DIR/matches.rs:155:18\n     |\n-214 |         Ok(3) => println!(\"ok\"),\n+155 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n-   --> $DIR/matches.rs:214:18\n+   --> $DIR/matches.rs:155:18\n     |\n-214 |         Ok(3) => println!(\"ok\"),\n+155 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n     = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: use as_ref() instead\n-   --> $DIR/matches.rs:222:33\n+   --> $DIR/matches.rs:163:33\n     |\n-222 |       let borrowed: Option<&()> = match owned {\n+163 |       let borrowed: Option<&()> = match owned {\n     |  _________________________________^\n-223 | |         None => None,\n-224 | |         Some(ref v) => Some(v),\n-225 | |     };\n+164 | |         None => None,\n+165 | |         Some(ref v) => Some(v),\n+166 | |     };\n     | |_____^ help: try this: `owned.as_ref()`\n     |\n     = note: `-D clippy::match-as-ref` implied by `-D warnings`\n \n error: use as_mut() instead\n-   --> $DIR/matches.rs:228:39\n+   --> $DIR/matches.rs:169:39\n     |\n-228 |       let borrow_mut: Option<&mut ()> = match mut_owned {\n+169 |       let borrow_mut: Option<&mut ()> = match mut_owned {\n     |  _______________________________________^\n-229 | |         None => None,\n-230 | |         Some(ref mut v) => Some(v),\n-231 | |     };\n+170 | |         None => None,\n+171 | |         Some(ref mut v) => Some(v),\n+172 | |     };\n     | |_____^ help: try this: `mut_owned.as_mut()`\n \n-error: aborting due to 26 previous errors\n+error: aborting due to 21 previous errors\n "}]}