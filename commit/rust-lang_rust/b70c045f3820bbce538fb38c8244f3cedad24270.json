{"sha": "b70c045f3820bbce538fb38c8244f3cedad24270", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3MGMwNDVmMzgyMGJiY2U1MzhmYjM4YzgyNDRmM2NlZGFkMjQyNzA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-19T02:10:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-19T02:10:41Z"}, "message": "auto merge of #7856 : brson/rust/no-thread-per-core, r=pcwalton\n\nThis doesn't make sense under the new scheduler.", "tree": {"sha": "f788a4bb40c02c2bf59212e91f1a52a87a1bf776", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f788a4bb40c02c2bf59212e91f1a52a87a1bf776"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b70c045f3820bbce538fb38c8244f3cedad24270", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b70c045f3820bbce538fb38c8244f3cedad24270", "html_url": "https://github.com/rust-lang/rust/commit/b70c045f3820bbce538fb38c8244f3cedad24270", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b70c045f3820bbce538fb38c8244f3cedad24270/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f28e581268c01f1c44021e6670fed03a118929e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f28e581268c01f1c44021e6670fed03a118929e0", "html_url": "https://github.com/rust-lang/rust/commit/f28e581268c01f1c44021e6670fed03a118929e0"}, {"sha": "1dbcc8b188a88fe594da5157b9b61e6d9b3d0881", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dbcc8b188a88fe594da5157b9b61e6d9b3d0881", "html_url": "https://github.com/rust-lang/rust/commit/1dbcc8b188a88fe594da5157b9b61e6d9b3d0881"}], "stats": {"total": 29, "additions": 1, "deletions": 28}, "files": [{"sha": "2fec9858c88d8d7cb7644bf723ea76c5a396d60e", "filename": "src/libstd/task/mod.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b70c045f3820bbce538fb38c8244f3cedad24270/src%2Flibstd%2Ftask%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b70c045f3820bbce538fb38c8244f3cedad24270/src%2Flibstd%2Ftask%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftask%2Fmod.rs?ref=b70c045f3820bbce538fb38c8244f3cedad24270", "patch": "@@ -110,8 +110,6 @@ pub enum SchedMode {\n     /// All tasks run in the same OS thread\n     SingleThreaded,\n     /// Tasks are distributed among available CPUs\n-    ThreadPerCore,\n-    /// Each task runs in its own OS thread\n     ThreadPerTask,\n     /// Tasks are distributed among a fixed number of OS threads\n     ManualThreads(uint),\n@@ -1147,22 +1145,6 @@ fn test_child_doesnt_ref_parent() {\n     task::spawn(child_no(0));\n }\n \n-#[test]\n-fn test_sched_thread_per_core() {\n-    let (port, chan) = comm::stream();\n-\n-    do spawn_sched(ThreadPerCore) || {\n-        unsafe {\n-            let cores = rt::rust_num_threads();\n-            let reported_threads = rt::rust_sched_threads();\n-            assert_eq!(cores as uint, reported_threads as uint);\n-            chan.send(());\n-        }\n-    }\n-\n-    port.recv();\n-}\n-\n #[test]\n fn test_spawn_thread_on_demand() {\n     let (port, chan) = comm::stream();"}, {"sha": "1c98283410a73fdeef7585b52d2b36fd546d790b", "filename": "src/libstd/task/rt.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b70c045f3820bbce538fb38c8244f3cedad24270/src%2Flibstd%2Ftask%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b70c045f3820bbce538fb38c8244f3cedad24270/src%2Flibstd%2Ftask%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftask%2Frt.rs?ref=b70c045f3820bbce538fb38c8244f3cedad24270", "patch": "@@ -38,7 +38,6 @@ pub extern {\n     fn rust_new_sched(num_threads: libc::uintptr_t) -> sched_id;\n     fn rust_sched_threads() -> libc::size_t;\n     fn rust_sched_current_nonlazy_threads() -> libc::size_t;\n-    fn rust_num_threads() -> libc::uintptr_t;\n \n     fn get_task_id() -> task_id;\n     #[rust_stack]"}, {"sha": "a08214ea40cafb446529935cdc895a9945f4b936", "filename": "src/libstd/task/spawn.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b70c045f3820bbce538fb38c8244f3cedad24270/src%2Flibstd%2Ftask%2Fspawn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b70c045f3820bbce538fb38c8244f3cedad24270/src%2Flibstd%2Ftask%2Fspawn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftask%2Fspawn.rs?ref=b70c045f3820bbce538fb38c8244f3cedad24270", "patch": "@@ -85,7 +85,7 @@ use task::local_data_priv::{local_get, local_set, OldHandle};\n use task::rt::rust_task;\n use task::rt;\n use task::{Failure, ManualThreads, PlatformThread, SchedOpts, SingleThreaded};\n-use task::{Success, TaskOpts, TaskResult, ThreadPerCore, ThreadPerTask};\n+use task::{Success, TaskOpts, TaskResult, ThreadPerTask};\n use task::{ExistingScheduler, SchedulerHandle};\n use task::unkillable;\n use uint;\n@@ -752,7 +752,6 @@ fn spawn_raw_oldsched(mut opts: TaskOpts, f: ~fn()) {\n             | ExistingScheduler(*)\n             | PlatformThread => 0u, /* Won't be used */\n             SingleThreaded => 1u,\n-            ThreadPerCore => unsafe { rt::rust_num_threads() },\n             ThreadPerTask => {\n                 fail!(\"ThreadPerTask scheduling mode unimplemented\")\n             }"}, {"sha": "7e69e2e4ccb9958fcb1c9d65905e2c971377c63c", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b70c045f3820bbce538fb38c8244f3cedad24270/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/b70c045f3820bbce538fb38c8244f3cedad24270/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=b70c045f3820bbce538fb38c8244f3cedad24270", "patch": "@@ -476,12 +476,6 @@ rust_get_sched_id() {\n     return task->sched->get_id();\n }\n \n-extern \"C\" CDECL uintptr_t\n-rust_num_threads() {\n-    rust_task *task = rust_get_current_task();\n-    return task->kernel->env->num_sched_threads;\n-}\n-\n extern \"C\" CDECL int\n rust_get_argc() {\n     rust_task *task = rust_get_current_task();"}, {"sha": "3c3e9a56827b33c996217279e9d84f5e47d8ee94", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b70c045f3820bbce538fb38c8244f3cedad24270/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/b70c045f3820bbce538fb38c8244f3cedad24270/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=b70c045f3820bbce538fb38c8244f3cedad24270", "patch": "@@ -28,7 +28,6 @@ rust_get_argc\n rust_get_argv\n rust_new_sched\n rust_new_task_in_sched\n-rust_num_threads\n rust_path_is_dir\n rust_path_exists\n rust_get_stdin"}]}