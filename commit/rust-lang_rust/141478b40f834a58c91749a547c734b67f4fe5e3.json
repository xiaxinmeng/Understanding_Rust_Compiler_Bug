{"sha": "141478b40f834a58c91749a547c734b67f4fe5e3", "node_id": "C_kwDOAAsO6NoAKDE0MTQ3OGI0MGY4MzRhNThjOTE3NDlhNTQ3YzczNGI2N2Y0ZmU1ZTM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-10-22T10:58:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-22T10:58:08Z"}, "message": "Rollup merge of #103280 - finnbear:impl_string_leak_2, r=joshtriplett\n\n(#102929) Implement `String::leak` (attempt 2)\n\nImplementation of `String::leak` (#102929)\n\nACP: https://github.com/rust-lang/libs-team/issues/109\n\nSupersedes #102941 (see previous reviews there)\n\n```@rustbot``` label +T-libs-api -T-libs", "tree": {"sha": "a38029538145da2cd7476d9ad2ce43ef719d9320", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a38029538145da2cd7476d9ad2ce43ef719d9320"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/141478b40f834a58c91749a547c734b67f4fe5e3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjU8zACRBK7hj4Ov3rIwAA7WMIAKOW/pdjXWsw7KHvJrm3G2YM\nqyhs3fd1tx9LE+WSGLbmmIEVCHpZJDLlyVmXShGHWRPkd3JGjHXbjhlGYWWXqAm/\nksK7PMMx/4zJ0gTaCFKWv8bD22rnbuPQvpO4azO0qfA8V6U7ZZLUtXIN+UJ1ZRSv\n/4f2E5ZIb0AVCytZPemg+87fMwx29WDRGLwGExtsfLnDK/IECF7IWtisqcjUkg1B\nxOMHhJXEzcBxsHLlSlm9ilUzVIt5aeN8nj4TKZwczPXROGxhwKIUY9WVGbltJldS\noxbufl6tosTocMWRfClICnEIPo3/goxubGSWcFYtg1Dopcik0cnSLWmPioNdDug=\n=lGOz\n-----END PGP SIGNATURE-----\n", "payload": "tree a38029538145da2cd7476d9ad2ce43ef719d9320\nparent ada50112ba6fab327b8e55483343ac00a16369a5\nparent 4f44d6253d02484400afa315a1f0306f4cf35d16\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1666436288 +0530\ncommitter GitHub <noreply@github.com> 1666436288 +0530\n\nRollup merge of #103280 - finnbear:impl_string_leak_2, r=joshtriplett\n\n(#102929) Implement `String::leak` (attempt 2)\n\nImplementation of `String::leak` (#102929)\n\nACP: https://github.com/rust-lang/libs-team/issues/109\n\nSupersedes #102941 (see previous reviews there)\n\n```@rustbot``` label +T-libs-api -T-libs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/141478b40f834a58c91749a547c734b67f4fe5e3", "html_url": "https://github.com/rust-lang/rust/commit/141478b40f834a58c91749a547c734b67f4fe5e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/141478b40f834a58c91749a547c734b67f4fe5e3/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ada50112ba6fab327b8e55483343ac00a16369a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ada50112ba6fab327b8e55483343ac00a16369a5", "html_url": "https://github.com/rust-lang/rust/commit/ada50112ba6fab327b8e55483343ac00a16369a5"}, {"sha": "4f44d6253d02484400afa315a1f0306f4cf35d16", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f44d6253d02484400afa315a1f0306f4cf35d16", "html_url": "https://github.com/rust-lang/rust/commit/4f44d6253d02484400afa315a1f0306f4cf35d16"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "209abfac6bbf9f92a64e1942079c3c60fb5582e9", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/141478b40f834a58c91749a547c734b67f4fe5e3/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/141478b40f834a58c91749a547c734b67f4fe5e3/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=141478b40f834a58c91749a547c734b67f4fe5e3", "patch": "@@ -67,7 +67,7 @@ use core::str::Utf8Chunks;\n use crate::borrow::{Cow, ToOwned};\n use crate::boxed::Box;\n use crate::collections::TryReserveError;\n-use crate::str::{self, Chars, Utf8Error};\n+use crate::str::{self, from_utf8_unchecked_mut, Chars, Utf8Error};\n #[cfg(not(no_global_oom_handling))]\n use crate::str::{from_boxed_utf8_unchecked, FromStr};\n use crate::vec::Vec;\n@@ -1849,6 +1849,35 @@ impl String {\n         let slice = self.vec.into_boxed_slice();\n         unsafe { from_boxed_utf8_unchecked(slice) }\n     }\n+\n+    /// Consumes and leaks the `String`, returning a mutable reference to the contents,\n+    /// `&'a mut str`.\n+    ///\n+    /// This is mainly useful for data that lives for the remainder of\n+    /// the program's life. Dropping the returned reference will cause a memory\n+    /// leak.\n+    ///\n+    /// It does not reallocate or shrink the `String`,\n+    /// so the leaked allocation may include unused capacity that is not part\n+    /// of the returned slice.\n+    ///\n+    /// # Examples\n+    ///\n+    /// Simple usage:\n+    ///\n+    /// ```\n+    /// #![feature(string_leak)]\n+    ///\n+    /// let x = String::from(\"bucket\");\n+    /// let static_ref: &'static mut str = x.leak();\n+    /// assert_eq!(static_ref, \"bucket\");\n+    /// ```\n+    #[unstable(feature = \"string_leak\", issue = \"102929\")]\n+    #[inline]\n+    pub fn leak(self) -> &'static mut str {\n+        let slice = self.vec.leak();\n+        unsafe { from_utf8_unchecked_mut(slice) }\n+    }\n }\n \n impl FromUtf8Error {"}]}