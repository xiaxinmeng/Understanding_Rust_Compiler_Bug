{"sha": "9c252f14bcfd987d6c1fb9fd4253336ab46fe7a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljMjUyZjE0YmNmZDk4N2Q2YzFmYjlmZDQyNTMzMzZhYjQ2ZmU3YTU=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-10-08T10:02:41Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-10-25T14:08:35Z"}, "message": "ci: extract verifying line endings into a script", "tree": {"sha": "d4bf0274103d1656f3acdac1c575718c367054d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4bf0274103d1656f3acdac1c575718c367054d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c252f14bcfd987d6c1fb9fd4253336ab46fe7a5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl2zAeMACgkQPgar6Auq\n8ZydXw//ei2kFc3gLNvNnu0/7a7ScIHe7o0NAPhRK6eT70DiihjgBXKn8Buoogcy\nTI07P3GYMO91J4Z+E2GoiIadOhBFEj9Mz54tLrNPPOVAhvGeG1sLg/7voCm7coKq\nIP3VFnsMKZip1XFIlDEPSDaso0ABLUx5Jaz5mFx+Sm7AVgf9657clXGOxbvcrMBk\nrfCatEe5gU3X/uYTtivPxMxDkfnnZ64c24MTMPLE1i5CGAUCrSLbtdt7mlXEAnx4\nJvI4DLJAyUdOkWmky/1h/EMMUPvhgaUT8QwyZgW9WbnBq6PIcnwW57spQ5Jc5lUz\nst8XTt1KXohYVNoFxCW3wELOo3xa11UDEKmRQI0r+dAJ9PSE3OSrneCRXz1FG/3t\nAPp1mEcRoPqXLEr12ldrtWhINSePlgev0gnEWBzhW/XiMOQ50hMxbOPwLcodXX16\ns5IEbZgIerf9NaXVFfaqjt0ofFidtX9qDAB1N2yXkg9Yi3RF7TgH1DJoJkTMY2Uh\n0/2KfGXDZGn+GLtF7zy5Ct29LMMXggGVw2DgWzM0+VBj4hWL5VKgTM9mkPl1aTpG\nkLrw9G7aAeAODjARFmtbXHzr5nkaI6djtouHa/xFRlZSd5fSSqnISUKknD9aeuJz\nOzQXuXbOLFLrtaLXQfFuYgvG0teohFkHvtgI4NUm1R0M9T8oSlc=\n=P3il\n-----END PGP SIGNATURE-----", "payload": "tree d4bf0274103d1656f3acdac1c575718c367054d4\nparent 9a9d427ef903422301a62a02c2a90d9e7f7dbb2b\nauthor Pietro Albini <pietro@pietroalbini.org> 1570528961 +0200\ncommitter Pietro Albini <pietro@pietroalbini.org> 1572012515 +0200\n\nci: extract verifying line endings into a script\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c252f14bcfd987d6c1fb9fd4253336ab46fe7a5", "html_url": "https://github.com/rust-lang/rust/commit/9c252f14bcfd987d6c1fb9fd4253336ab46fe7a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c252f14bcfd987d6c1fb9fd4253336ab46fe7a5/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a9d427ef903422301a62a02c2a90d9e7f7dbb2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a9d427ef903422301a62a02c2a90d9e7f7dbb2b", "html_url": "https://github.com/rust-lang/rust/commit/9a9d427ef903422301a62a02c2a90d9e7f7dbb2b"}], "stats": {"total": 50, "additions": 29, "deletions": 21}, "files": [{"sha": "1f8ef40ec21ab2a5a41e020ebc82558f345ef8a3", "filename": "src/ci/azure-pipelines/steps/run.yml", "status": "modified", "additions": 5, "deletions": 21, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9c252f14bcfd987d6c1fb9fd4253336ab46fe7a5/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml", "raw_url": "https://github.com/rust-lang/rust/raw/9c252f14bcfd987d6c1fb9fd4253336ab46fe7a5/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml?ref=9c252f14bcfd987d6c1fb9fd4253336ab46fe7a5", "patch": "@@ -126,33 +126,17 @@ steps:\n   displayName: Disable git automatic line ending conversion\n   condition: and(succeeded(), not(variables.SKIP_JOB))\n \n-# Check out all our submodules, but more quickly than using git by using one of\n-# our custom scripts\n - bash: src/ci/scripts/checkout-submodules.sh\n   env:\n     AGENT_OS: $(Agent.OS)\n   displayName: Checkout submodules\n   condition: and(succeeded(), not(variables.SKIP_JOB))\n \n-# See also the disable for autocrlf above, this just checks that it worked\n-#\n-# We check both in rust-lang/rust and in a submodule to make sure both are\n-# accurate. Submodules are checked out significantly later than the main\n-# repository in this script, so settings can (and do!) change between then.\n-#\n-# Linux (and maybe macOS) builders don't currently have dos2unix so just only\n-# run this step on Windows.\n-- bash: |\n-    set -x\n-    # print out the git configuration so we can better investigate failures in\n-    # the following\n-    git config --list --show-origin\n-    dos2unix -ih Cargo.lock src/tools/rust-installer/install-template.sh\n-    endings=$(dos2unix -ic Cargo.lock src/tools/rust-installer/install-template.sh)\n-    # if endings has non-zero length, error out\n-    if [ -n \"$endings\" ]; then exit 1 ; fi\n-  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))\n-  displayName: Verify line endings are LF\n+- bash: src/ci/scripts/verify-line-endings.sh\n+  env:\n+    AGENT_OS: $(Agent.OS)\n+  displayName: Verify line endings\n+  condition: and(succeeded(), not(variables.SKIP_JOB))\n \n # Ensure the `aws` CLI is installed so we can deploy later on, cache docker\n # images, etc."}, {"sha": "f3cac13ea4802f207338c00b2964f413fa345a80", "filename": "src/ci/scripts/verify-line-endings.sh", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9c252f14bcfd987d6c1fb9fd4253336ab46fe7a5/src%2Fci%2Fscripts%2Fverify-line-endings.sh", "raw_url": "https://github.com/rust-lang/rust/raw/9c252f14bcfd987d6c1fb9fd4253336ab46fe7a5/src%2Fci%2Fscripts%2Fverify-line-endings.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Fverify-line-endings.sh?ref=9c252f14bcfd987d6c1fb9fd4253336ab46fe7a5", "patch": "@@ -0,0 +1,24 @@\n+#!/bin/bash\n+# See also the disable for autocrlf, this just checks that it worked.\n+#\n+# We check both in rust-lang/rust and in a submodule to make sure both are\n+# accurate. Submodules are checked out significantly later than the main\n+# repository in this script, so settings can (and do!) change between then.\n+#\n+# Linux (and maybe macOS) builders don't currently have dos2unix so just only\n+# run this step on Windows.\n+\n+set -euo pipefail\n+IFS=$'\\n\\t'\n+\n+source \"$(cd \"$(dirname \"$0\")\" && pwd)/../shared.sh\"\n+\n+if isWindows; then\n+    # print out the git configuration so we can better investigate failures in\n+    # the following\n+    git config --list --show-origin\n+    dos2unix -ih Cargo.lock src/tools/rust-installer/install-template.sh\n+    endings=$(dos2unix -ic Cargo.lock src/tools/rust-installer/install-template.sh)\n+    # if endings has non-zero length, error out\n+    if [ -n \"$endings\" ]; then exit 1 ; fi\n+fi"}]}