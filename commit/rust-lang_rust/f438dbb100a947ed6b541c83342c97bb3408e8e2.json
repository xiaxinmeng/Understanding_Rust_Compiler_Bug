{"sha": "f438dbb100a947ed6b541c83342c97bb3408e8e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0MzhkYmIxMDBhOTQ3ZWQ2YjU0MWM4MzM0MmM5N2JiMzQwOGU4ZTI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-11T15:10:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-11T15:10:26Z"}, "message": "Merge #9860\n\n9860: fix: Fix extract_function tagging params as mut unnecessarily r=Veykril a=Veykril\n\nFixes #9822\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "e6d3331c204ffeff401724e06fb0df7ad4949c72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6d3331c204ffeff401724e06fb0df7ad4949c72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f438dbb100a947ed6b541c83342c97bb3408e8e2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhE+hiCRBK7hj4Ov3rIwAAXhoIAF5w7i58T+xH2ocjOdSEb4e0\n7QrKHpItS6iJE2nhwfELRmfu1kl9WyU7CiG/aYqHf8P7rRk95ZX3PwlNBvzdmsEc\nY9ml8d+Yq1q9vccGKqZsxeKLw5a3tuRm/liimajeypg35aG/yBhETILSW0ts4Si3\ngf4k+ZFFx+X0+RS988mUGFs6eo44vYbMLZmNZcAWqL0KtEagwKE1HtEb7TLsx5CI\nsPPGvjUhZiDZY22R5IggFMrrFcxrZTKyFbleQFgxfZHVyTnSFVF9nTb1+EFs4mKF\nQddk+19QCJDwX8VNYNYaSpqMtMDAjsO2syodFHTmIIM+nTRr+8NggHVuEtxZjrU=\n=SVYu\n-----END PGP SIGNATURE-----\n", "payload": "tree e6d3331c204ffeff401724e06fb0df7ad4949c72\nparent 50617ee5c5daa6c085818d61add1fcc527a9e757\nparent 6d960ab03211f389827860c56cf067af832cc376\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1628694626 +0000\ncommitter GitHub <noreply@github.com> 1628694626 +0000\n\nMerge #9860\n\n9860: fix: Fix extract_function tagging params as mut unnecessarily r=Veykril a=Veykril\n\nFixes #9822\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f438dbb100a947ed6b541c83342c97bb3408e8e2", "html_url": "https://github.com/rust-lang/rust/commit/f438dbb100a947ed6b541c83342c97bb3408e8e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f438dbb100a947ed6b541c83342c97bb3408e8e2/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50617ee5c5daa6c085818d61add1fcc527a9e757", "url": "https://api.github.com/repos/rust-lang/rust/commits/50617ee5c5daa6c085818d61add1fcc527a9e757", "html_url": "https://github.com/rust-lang/rust/commit/50617ee5c5daa6c085818d61add1fcc527a9e757"}, {"sha": "6d960ab03211f389827860c56cf067af832cc376", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d960ab03211f389827860c56cf067af832cc376", "html_url": "https://github.com/rust-lang/rust/commit/6d960ab03211f389827860c56cf067af832cc376"}], "stats": {"total": 63, "additions": 54, "deletions": 9}, "files": [{"sha": "757c754339669919d5eb0225ed5fc297757cf9a1", "filename": "crates/ide_assists/src/handlers/extract_function.rs", "status": "modified", "additions": 54, "deletions": 9, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/f438dbb100a947ed6b541c83342c97bb3408e8e2/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f438dbb100a947ed6b541c83342c97bb3408e8e2/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs?ref=f438dbb100a947ed6b541c83342c97bb3408e8e2", "patch": "@@ -827,16 +827,21 @@ impl FunctionBody {\n             .map(|(var, src)| {\n                 let usages = LocalUsages::find_local_usages(ctx, var);\n                 let ty = var.ty(ctx.db());\n+\n+                let defined_outside_parent_loop = container_info\n+                    .parent_loop\n+                    .as_ref()\n+                    .map_or(true, |it| it.text_range().contains_range(src.syntax().text_range()));\n+\n                 let is_copy = ty.is_copy(ctx.db());\n-                Param {\n-                    var,\n-                    ty,\n-                    move_local: container_info.parent_loop.as_ref().map_or(true, |it| {\n-                        it.text_range().contains_range(src.syntax().text_range())\n-                    }) && !self.has_usages_after_body(&usages),\n-                    requires_mut: has_exclusive_usages(ctx, &usages, self),\n-                    is_copy,\n-                }\n+                let has_usages = self.has_usages_after_body(&usages);\n+                let requires_mut =\n+                    !ty.is_mutable_reference() && has_exclusive_usages(ctx, &usages, self);\n+                // We can move the value into the function call if it's not used after the call,\n+                // if the var is not used but defined outside a loop we are extracting from we can't move it either\n+                // as the function will reuse it in the next iteration.\n+                let move_local = !has_usages && defined_outside_parent_loop;\n+                Param { var, ty, move_local, requires_mut, is_copy }\n             })\n             .collect()\n     }\n@@ -4114,6 +4119,46 @@ fn foo() {\n fn $0fun_name(x: &mut i32) {\n     *x += 1;\n }\n+\"#,\n+        );\n+    }\n+\n+    // regression test for #9822\n+    #[test]\n+    fn extract_mut_ref_param_has_no_mut_binding_in_loop() {\n+        check_assist(\n+            extract_function,\n+            r#\"\n+struct Foo;\n+impl Foo {\n+    fn foo(&mut self) {}\n+}\n+fn foo() {\n+    let mut x = Foo;\n+    while false {\n+        let y = &mut x;\n+        $0y.foo();$0\n+    }\n+    let z = x;\n+}\n+\"#,\n+            r#\"\n+struct Foo;\n+impl Foo {\n+    fn foo(&mut self) {}\n+}\n+fn foo() {\n+    let mut x = Foo;\n+    while false {\n+        let y = &mut x;\n+        fun_name(y);\n+    }\n+    let z = x;\n+}\n+\n+fn $0fun_name(y: &mut Foo) {\n+    y.foo();\n+}\n \"#,\n         );\n     }"}]}