{"sha": "1833fa1df24eb546d7bd9d7eb37a579b34779238", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MzNmYTFkZjI0ZWI1NDZkN2JkOWQ3ZWIzN2E1NzliMzQ3NzkyMzg=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-04T23:42:58Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-04T23:42:58Z"}, "message": "Fix generic-derived-type.rs and generic-obj-with-derived-type.rs.", "tree": {"sha": "94ca25ec88ac36e341120eaf8075c382a75bccb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94ca25ec88ac36e341120eaf8075c382a75bccb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1833fa1df24eb546d7bd9d7eb37a579b34779238", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1833fa1df24eb546d7bd9d7eb37a579b34779238", "html_url": "https://github.com/rust-lang/rust/commit/1833fa1df24eb546d7bd9d7eb37a579b34779238", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1833fa1df24eb546d7bd9d7eb37a579b34779238/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8217ce622874c1b99124328800e697eb235121f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/8217ce622874c1b99124328800e697eb235121f1", "html_url": "https://github.com/rust-lang/rust/commit/8217ce622874c1b99124328800e697eb235121f1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b27e68dc7dcd902e5c30bd35dba9be962b9d84c2", "filename": "src/boot/me/type.ml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1833fa1df24eb546d7bd9d7eb37a579b34779238/src%2Fboot%2Fme%2Ftype.ml", "raw_url": "https://github.com/rust-lang/rust/raw/1833fa1df24eb546d7bd9d7eb37a579b34779238/src%2Fboot%2Fme%2Ftype.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftype.ml?ref=1833fa1df24eb546d7bd9d7eb37a579b34779238", "patch": "@@ -1068,7 +1068,7 @@ let process_crate (cx:ctxt) (crate:Ast.crate) : unit =\n                       TYSPEC_dictionary names\n \n                 | Ast.COMP_named (Ast.COMP_idx i) ->\n-                    let init j = if i + 1 == j then tv else ref TYSPEC_all in\n+                    let init j = if i = j then tv else ref TYSPEC_all in\n                       TYSPEC_tuple (Array.init (i + 1) init)\n \n                 | Ast.COMP_atom atom ->"}]}