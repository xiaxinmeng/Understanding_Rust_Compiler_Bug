{"sha": "2f03180040b0a3c0a0e5dcd75670a9323f5f312d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMDMxODAwNDBiMGEzYzBhMGU1ZGNkNzU2NzBhOTMyM2Y1ZjMxMmQ=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-07-24T19:22:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-24T19:22:08Z"}, "message": "Merge pull request #2860 from topecongiro/rustc-ap-syntax\n\nFormat existetenial type", "tree": {"sha": "ea7453692157f0c967ef48a55b6f9763c44802ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea7453692157f0c967ef48a55b6f9763c44802ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f03180040b0a3c0a0e5dcd75670a9323f5f312d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbV3xgCRBK7hj4Ov3rIwAAdHIIAAwgKsvnRPvPOJMEetnjsKoy\nFUn8dXwqrCW7s1C3U4haGDrv7Mu5I4xAtQoB4lYB37kvBuNEXfaTEOO10C0rn5mj\ncW6ht8kZmFPDVH66fG/CKxAle6xqpQkfIPTqP8iGL8VZWv/dLKNJ9+CotxhvvQhc\nNJClcycDbjzvUL2wENmnRv9JNdm/dESWKkR2bKMaWmE0T8v9rE25fB7gfFoTvGkF\n1OKXYxbFoW4T8jVAg5KSe2s8qOPLhpy/8EDTmT0qt9xhEtjT2M5royPCeTBvr/iV\nDh3DTZaXlKzAm3VQeb0AT9JLqutYTMEeIIX0TrYV659b08UHhuUTNthW7sfO6U8=\n=Hj0D\n-----END PGP SIGNATURE-----\n", "payload": "tree ea7453692157f0c967ef48a55b6f9763c44802ea\nparent 43f178bd58b02f4be0bd38a2169b5d446bd39da5\nparent a2b40bd70f194414e0973ad0e391df6330ec75f0\nauthor Nick Cameron <nrc@ncameron.org> 1532460128 +1200\ncommitter GitHub <noreply@github.com> 1532460128 +1200\n\nMerge pull request #2860 from topecongiro/rustc-ap-syntax\n\nFormat existetenial type"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f03180040b0a3c0a0e5dcd75670a9323f5f312d", "html_url": "https://github.com/rust-lang/rust/commit/2f03180040b0a3c0a0e5dcd75670a9323f5f312d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f03180040b0a3c0a0e5dcd75670a9323f5f312d/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43f178bd58b02f4be0bd38a2169b5d446bd39da5", "url": "https://api.github.com/repos/rust-lang/rust/commits/43f178bd58b02f4be0bd38a2169b5d446bd39da5", "html_url": "https://github.com/rust-lang/rust/commit/43f178bd58b02f4be0bd38a2169b5d446bd39da5"}, {"sha": "a2b40bd70f194414e0973ad0e391df6330ec75f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2b40bd70f194414e0973ad0e391df6330ec75f0", "html_url": "https://github.com/rust-lang/rust/commit/a2b40bd70f194414e0973ad0e391df6330ec75f0"}], "stats": {"total": 339, "additions": 223, "deletions": 116}, "files": [{"sha": "92696677fff1c8b9ea6fdb04a147f8c955e108ef", "filename": "Cargo.lock", "status": "modified", "additions": 76, "deletions": 58, "changes": 134, "blob_url": "https://github.com/rust-lang/rust/blob/2f03180040b0a3c0a0e5dcd75670a9323f5f312d/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/2f03180040b0a3c0a0e5dcd75670a9323f5f312d/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=2f03180040b0a3c0a0e5dcd75670a9323f5f312d", "patch": "@@ -29,7 +29,7 @@ dependencies = [\n \n [[package]]\n name = \"atty\"\n-version = \"0.2.10\"\n+version = \"0.2.11\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -134,9 +134,9 @@ name = \"derive-new\"\n version = \"0.5.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"proc-macro2 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"quote 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syn 0.14.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"proc-macro2 0.4.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"quote 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syn 0.14.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -169,14 +169,14 @@ dependencies = [\n \n [[package]]\n name = \"env_logger\"\n-version = \"0.5.10\"\n+version = \"0.5.11\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"atty 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"humantime 1.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"termcolor 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"termcolor 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -338,7 +338,7 @@ dependencies = [\n \n [[package]]\n name = \"proc-macro2\"\n-version = \"0.4.8\"\n+version = \"0.4.9\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -356,10 +356,10 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"quote\"\n-version = \"0.6.3\"\n+version = \"0.6.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"proc-macro2 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"proc-macro2 0.4.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -407,15 +407,15 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-arena\"\n-version = \"201.0.0\"\n+version = \"206.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"rustc-ap-rustc_data_structures 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_cratesio_shim\"\n-version = \"201.0.0\"\n+version = \"206.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -424,16 +424,16 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_data_structures\"\n-version = \"201.0.0\"\n+version = \"206.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cfg-if 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ena 0.9.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.5.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot_core 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_cratesio_shim 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_cratesio_shim 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-rayon 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-rayon-core 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -442,57 +442,57 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_errors\"\n-version = \"201.0.0\"\n+version = \"206.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"atty 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-syntax_pos 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-syntax_pos 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"termcolor 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_target\"\n-version = \"201.0.0\"\n+version = \"206.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_cratesio_shim 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_cratesio_shim 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-serialize\"\n-version = \"201.0.0\"\n+version = \"206.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"rustc-ap-syntax\"\n-version = \"201.0.0\"\n+version = \"206.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_errors 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_target 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-syntax_pos 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_errors 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_target 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-syntax_pos 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"scoped-tls 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-syntax_pos\"\n-version = \"201.0.0\"\n+version = \"206.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cfg-if 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-arena 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-arena 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"scoped-tls 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -539,17 +539,17 @@ dependencies = [\n  \"cargo_metadata 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"derive-new 0.5.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"diff 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"env_logger 0.5.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"env_logger 0.5.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"failure 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"getopts 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"isatty 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_target 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-syntax 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-syntax_pos 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_target 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-syntax 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-syntax_pos 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.70 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.70 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -592,9 +592,9 @@ name = \"serde_derive\"\n version = \"1.0.70\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"proc-macro2 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"quote 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syn 0.14.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"proc-macro2 0.4.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"quote 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syn 0.14.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -632,11 +632,11 @@ dependencies = [\n \n [[package]]\n name = \"syn\"\n-version = \"0.14.4\"\n+version = \"0.14.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"proc-macro2 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"quote 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"proc-macro2 0.4.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"quote 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -674,6 +674,14 @@ dependencies = [\n  \"wincolor 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"termcolor\"\n+version = \"1.0.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"wincolor 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"termion\"\n version = \"1.5.1\"\n@@ -771,11 +779,19 @@ dependencies = [\n  \"winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"wincolor\"\n+version = \"1.0.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [metadata]\n \"checksum aho-corasick 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c1c6d463cbe7ed28720b5b489e7c083eeb8f90d08be2a0d6bb9e1ffea9ce1afa\"\n \"checksum arrayvec 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a1e964f9e24d588183fcb43503abda40d288c8657dfc27311516ce2f05675aef\"\n \"checksum assert_cli 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a29ab7c0ed62970beb0534d637a8688842506d0ff9157de83286dacd065c8149\"\n-\"checksum atty 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2fc4a1aa4c24c0718a250f0681885c1af91419d242f29eb8f2ab28502d80dbd1\"\n+\"checksum atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9a7d5b8723950951411ee34d271d99dddcc2035a16ab25310ea2c8cfd4369652\"\n \"checksum backtrace 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"89a47830402e9981c5c41223151efcced65a0510c13097c769cede7efb34782a\"\n \"checksum backtrace-sys 0.1.23 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bff67d0c06556c0b8e6b5f090f0eac52d950d9dfd1d35ba04e4ca3543eaf6a7e\"\n \"checksum bitflags 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d0c54bb8f454c567f21197eefcdbf5679d0bd99f2ddbe52e84c77061952e6789\"\n@@ -793,7 +809,7 @@ dependencies = [\n \"checksum dtoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6d301140eb411af13d3115f9a562c85cc6b541ade9dfa314132244aaee7489dd\"\n \"checksum either 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3be565ca5c557d7f59e7cfcf1844f9e3033650c929c6566f511e8005f205c1d0\"\n \"checksum ena 0.9.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"88dc8393b3c7352f94092497f6b52019643e493b6b890eb417cdb7c46117e621\"\n-\"checksum env_logger 0.5.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0e6e40ebb0e66918a37b38c7acab4e10d299e0463fe2af5d29b9cc86710cfd2a\"\n+\"checksum env_logger 0.5.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7873e292d20e8778f951278972596b3df36ac72a65c5b406f6d4961070a870c1\"\n \"checksum environment 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1f4b14e20978669064c33b4c1e0fb4083412e40fe56cbea2eae80fd7591503ee\"\n \"checksum error-chain 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"07e791d3be96241c77c43846b665ef1384606da2cd2a48730abe606a12906e02\"\n \"checksum failure 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"934799b6c1de475a012a02dab0ace1ace43789ee4b99bcfbf1a2e3e8ced5de82\"\n@@ -815,23 +831,23 @@ dependencies = [\n \"checksum owning_ref 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cdf84f41639e037b484f93433aa3897863b561ed65c6e59c7073d7c561710f37\"\n \"checksum parking_lot 0.5.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d4d05f1349491390b1730afba60bb20d55761bef489a954546b58b4b34e1e2ac\"\n \"checksum parking_lot_core 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4db1a8ccf734a7bce794cc19b3df06ed87ab2f3907036b693c68f56b4d4537fa\"\n-\"checksum proc-macro2 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c65b1ea15bb859d922cade2d1765b4b88beac339cbfad545ef2d2ef8c8215ee6\"\n+\"checksum proc-macro2 0.4.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cccdc7557a98fe98453030f077df7f3a042052fae465bb61d2c2c41435cfd9b6\"\n \"checksum quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9274b940887ce9addde99c4eee6b5c44cc494b182b97e73dc8ffdcb3397fd3f0\"\n \"checksum quote 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7a6e920b65c65f10b2ae65c831a81a073a89edd28c7cce89475bff467ab4167a\"\n-\"checksum quote 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e44651a0dc4cdd99f71c83b561e221f714912d11af1a4dff0631f923d53af035\"\n+\"checksum quote 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b71f9f575d55555aa9c06188be9d4e2bfc83ed02537948ac0d520c24d0419f1a\"\n \"checksum rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"eba5f8cb59cc50ed56be8880a5c7b496bfd9bd26394e176bc67884094145c2c5\"\n \"checksum redox_syscall 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c214e91d3ecf43e9a4e41e578973adeb14b474f2bee858742d127af75a0112b1\"\n \"checksum redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7e891cfe48e9100a70a3b6eb652fef28920c117d366339687bd5576160db0f76\"\n \"checksum regex 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5bbbea44c5490a1e84357ff28b7d518b4619a159fed5d25f6c1de2d19cc42814\"\n \"checksum regex-syntax 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"747ba3b235651f6e2f67dfa8bcdcd073ddb7c243cb21c442fc12395dfcac212d\"\n-\"checksum rustc-ap-arena 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6c4824e6a8dc04ee2ecc2f096955d89285460875c2ca824b51edfbb2925b3cb1\"\n-\"checksum rustc-ap-rustc_cratesio_shim 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3972f2e48e0d0b17585a61f687caa1f767aeb59b6202231909495e54517e0de3\"\n-\"checksum rustc-ap-rustc_data_structures 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d7a721bc31880ad4cb8d48b5b8fcb16944667534a90c0cf68163912a3b0576f4\"\n-\"checksum rustc-ap-rustc_errors 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"885f2800e78f716582c0001985fac450c154f98eec5323b1fd71cc972cf4d516\"\n-\"checksum rustc-ap-rustc_target 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"698506472e2441eb16a853ac767dbb73cfe94a389f36d474d55d4935cf775903\"\n-\"checksum rustc-ap-serialize 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"531dcb205a578ebeed3e0a3ef49722eb8b06b510fc9550cca11a59b418972e10\"\n-\"checksum rustc-ap-syntax 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0629b3d87fcb4bce2efa82cb3af879b2e85df4322cdfc814f1c0e08bd5a3a316\"\n-\"checksum rustc-ap-syntax_pos 201.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b8c5969a34ef45ad20b50da0f29a2a135ad12eb3b38137fd62abd724ca85339b\"\n+\"checksum rustc-ap-arena 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6e6aa9448b877af00e24f26695e6b8c3f79f0071dc099a37ae6da3f70a739477\"\n+\"checksum rustc-ap-rustc_cratesio_shim 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2b9037a77c73574c6327e0e7015b0e61fa877f9b2a59329a477307f25585179d\"\n+\"checksum rustc-ap-rustc_data_structures 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3e80f1375718ade61bcb59e470fe423179da9cb5fa47f9e88a105255ed1c403d\"\n+\"checksum rustc-ap-rustc_errors 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"246c386a001364fa904171b18e7936865ad9d2656127dfd34949c3ef5b2f8e86\"\n+\"checksum rustc-ap-rustc_target 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fdba5e32a4c5096b0e8bc5b5fed28ec97eb8e348af5ef11e5922b15daf35b660\"\n+\"checksum rustc-ap-serialize 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d5c2d53d0d466bbedb104d5bf83e233bc61b87ff945667b690356727dc8eaa8b\"\n+\"checksum rustc-ap-syntax 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6e3a964adf0905c73d3e9d97a25e6eabe0daf3abe8f9dc3b8f178f40b25fcc11\"\n+\"checksum rustc-ap-syntax_pos 206.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e245600d4cf83f71b62b925b92ef5fe32555154273984b4f7fb4edde4e83fafd\"\n \"checksum rustc-demangle 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bcfe5b13211b4d78e5c2cadfebd7769197d95c639c35a50057eb4c05de811395\"\n \"checksum rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7540fc8b0c49f096ee9c961cda096467dce8084bec6bdca2fc83895fd9b28cb8\"\n \"checksum rustc-rayon 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8c6d5a683c6ba4ed37959097e88d71c9e8e26659a3cb5be8b389078e7ad45306\"\n@@ -846,11 +862,12 @@ dependencies = [\n \"checksum smallvec 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"26df3bb03ca5eac2e64192b723d51f56c1b1e0860e7c766281f4598f181acdc8\"\n \"checksum stable_deref_trait 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ffbc596e092fe5f598b12ef46cc03754085ac2f4d8c739ad61c4ae266cc3b3fa\"\n \"checksum syn 0.11.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d3b891b9015c88c576343b9b3e41c2c11a51c219ef067b264bd9c8aa9b441dad\"\n-\"checksum syn 0.14.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2beff8ebc3658f07512a413866875adddd20f4fd47b2a4e6c9da65cd281baaea\"\n+\"checksum syn 0.14.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4bad7abdf6633f07c7046b90484f1d9dc055eca39f8c991177b1046ce61dba9a\"\n \"checksum synom 0.11.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a393066ed9010ebaed60b9eafa373d4b1baac186dd7e008555b0f702b51945b6\"\n \"checksum synstructure 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3a761d12e6d8dcb4dcf952a7a89b475e3a9d69e4a69307e01a470977642914bd\"\n \"checksum term 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5e6b677dd1e8214ea1ef4297f85dbcbed8e8cdddb561040cc998ca2551c37561\"\n \"checksum termcolor 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"adc4587ead41bf016f11af03e55a624c06568b5a19db4e90fde573d805074f83\"\n+\"checksum termcolor 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"722426c4a0539da2c4ffd9b419d90ad540b4cff4a053be9069c908d4d07e2836\"\n \"checksum termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"689a3bdfaab439fd92bc87df5c4c78417d3cbe537487274e9b0b2dce76e92096\"\n \"checksum thread_local 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"279ef31c19ededf577bfd12dfae728040a21f635b06a24cd670ff510edd38963\"\n \"checksum toml 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a0263c6c02c4db6c8f7681f9fd35e90de799ebd4cfdeab77a38f4ff6b3d8c0d9\"\n@@ -866,3 +883,4 @@ dependencies = [\n \"checksum winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n \"checksum winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n \"checksum wincolor 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"eeb06499a3a4d44302791052df005d5232b927ed1a9658146d842165c4de7767\"\n+\"checksum wincolor 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b9dc3aa9dcda98b5a16150c54619c1ead22e3d3a5d458778ae914be760aa981a\""}, {"sha": "d08cb976f78c6065ac642cfb4f587188db3e8720", "filename": "Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2f03180040b0a3c0a0e5dcd75670a9323f5f312d/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/2f03180040b0a3c0a0e5dcd75670a9323f5f312d/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=2f03180040b0a3c0a0e5dcd75670a9323f5f312d", "patch": "@@ -47,9 +47,9 @@ env_logger = \"0.5\"\n getopts = \"0.2\"\n derive-new = \"0.5\"\n cargo_metadata = \"0.6\"\n-rustc-ap-rustc_target = \"201.0.0\"\n-rustc-ap-syntax = \"201.0.0\"\n-rustc-ap-syntax_pos = \"201.0.0\"\n+rustc-ap-rustc_target = \"206.0.0\"\n+rustc-ap-syntax = \"206.0.0\"\n+rustc-ap-syntax_pos = \"206.0.0\"\n failure = \"0.1.1\"\n \n [dev-dependencies]"}, {"sha": "6b81dbaf7966be156f2c825d39deb559466f822a", "filename": "src/items.rs", "status": "modified", "additions": 91, "deletions": 52, "changes": 143, "blob_url": "https://github.com/rust-lang/rust/blob/2f03180040b0a3c0a0e5dcd75670a9323f5f312d/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f03180040b0a3c0a0e5dcd75670a9323f5f312d/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=2f03180040b0a3c0a0e5dcd75670a9323f5f312d", "patch": "@@ -801,17 +801,12 @@ fn format_impl_ref_and_type(\n         result.push_str(format_defaultness(defaultness));\n         result.push_str(format_unsafety(unsafety));\n \n-        let lo = context.snippet_provider.span_after(item.span, \"impl\");\n-        let hi = match *trait_ref {\n-            Some(ref tr) => tr.path.span.lo(),\n-            None => self_ty.span.lo(),\n-        };\n         let shape = generics_shape_from_config(\n             context.config,\n             Shape::indented(offset + last_line_width(&result), context.config),\n             0,\n         )?;\n-        let generics_str = rewrite_generics(context, \"impl\", generics, shape, mk_sp(lo, hi))?;\n+        let generics_str = rewrite_generics(context, \"impl\", generics, shape)?;\n         result.push_str(&generics_str);\n \n         let polarity_str = if polarity == ast::ImplPolarity::Negative {\n@@ -986,13 +981,8 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n         let body_lo = context.snippet_provider.span_after(item.span, \"{\");\n \n         let shape = Shape::indented(offset, context.config).offset_left(result.len())?;\n-        let generics_str = rewrite_generics(\n-            context,\n-            rewrite_ident(context, item.ident),\n-            generics,\n-            shape,\n-            mk_sp(item.span.lo(), body_lo),\n-        )?;\n+        let generics_str =\n+            rewrite_generics(context, rewrite_ident(context, item.ident), generics, shape)?;\n         result.push_str(&generics_str);\n \n         // FIXME(#2055): rustfmt fails to format when there are comments between trait bounds.\n@@ -1138,7 +1128,7 @@ pub fn format_trait_alias(\n     let alias = rewrite_ident(context, ident);\n     // 6 = \"trait \", 2 = \" =\"\n     let g_shape = shape.offset_left(6)?.sub_width(2)?;\n-    let generics_str = rewrite_generics(context, &alias, generics, g_shape, generics.span)?;\n+    let generics_str = rewrite_generics(context, &alias, generics, g_shape)?;\n     let lhs = format!(\"trait {} =\", generics_str);\n     // 1 = \";\"\n     rewrite_assign_rhs(context, lhs, generic_bounds, shape.sub_width(1)?).map(|s| s + \";\")\n@@ -1340,8 +1330,7 @@ fn format_tuple_struct(\n         Some(generics) => {\n             let budget = context.budget(last_line_width(&header_str));\n             let shape = Shape::legacy(budget, offset);\n-            let g_span = mk_sp(span.lo(), body_lo);\n-            let generics_str = rewrite_generics(context, \"\", generics, shape, g_span)?;\n+            let generics_str = rewrite_generics(context, \"\", generics, shape)?;\n             result.push_str(&generics_str);\n \n             let where_budget = context.budget(last_line_width(&result));\n@@ -1400,36 +1389,27 @@ fn format_tuple_struct(\n     Some(result)\n }\n \n-pub fn rewrite_type_alias(\n+fn rewrite_type_prefix(\n     context: &RewriteContext,\n     indent: Indent,\n+    prefix: &str,\n     ident: ast::Ident,\n-    ty: &ast::Ty,\n     generics: &ast::Generics,\n-    vis: &ast::Visibility,\n-    span: Span,\n ) -> Option<String> {\n     let mut result = String::with_capacity(128);\n-\n-    result.push_str(&format_visibility(context, vis));\n-    result.push_str(\"type \");\n+    result.push_str(prefix);\n+    let ident_str = rewrite_ident(context, ident);\n \n     // 2 = `= `\n-    let g_shape = Shape::indented(indent, context.config)\n-        .offset_left(result.len())?\n-        .sub_width(2)?;\n-    let g_span = mk_sp(\n-        context.snippet_provider.span_after(span, \"type\"),\n-        ty.span.lo(),\n-    );\n-    let generics_str = rewrite_generics(\n-        context,\n-        rewrite_ident(context, ident),\n-        generics,\n-        g_shape,\n-        g_span,\n-    )?;\n-    result.push_str(&generics_str);\n+    if generics.params.is_empty() {\n+        result.push_str(ident_str)\n+    } else {\n+        let g_shape = Shape::indented(indent, context.config)\n+            .offset_left(result.len())?\n+            .sub_width(2)?;\n+        let generics_str = rewrite_generics(context, ident_str, generics, g_shape)?;\n+        result.push_str(&generics_str);\n+    }\n \n     let where_budget = context.budget(last_line_width(&result));\n     let option = WhereClauseOption::snuggled(&result);\n@@ -1440,24 +1420,76 @@ pub fn rewrite_type_alias(\n         Shape::legacy(where_budget, indent),\n         Density::Vertical,\n         \"=\",\n-        Some(span.hi()),\n+        None,\n         generics.span.hi(),\n         option,\n         false,\n     )?;\n     result.push_str(&where_clause_str);\n-    if where_clause_str.is_empty() {\n-        result.push_str(\" =\");\n+\n+    Some(result)\n+}\n+\n+fn rewrite_type_item<R: Rewrite>(\n+    context: &RewriteContext,\n+    indent: Indent,\n+    prefix: &str,\n+    suffix: &str,\n+    ident: ast::Ident,\n+    rhs: &R,\n+    generics: &ast::Generics,\n+    vis: &ast::Visibility,\n+) -> Option<String> {\n+    let mut result = String::with_capacity(128);\n+    result.push_str(&rewrite_type_prefix(\n+        context,\n+        indent,\n+        &format!(\"{}{} \", format_visibility(context, vis), prefix),\n+        ident,\n+        generics,\n+    )?);\n+\n+    if generics.where_clause.predicates.is_empty() {\n+        result.push_str(suffix);\n     } else {\n-        result.push_str(&format!(\n-            \"{}=\",\n-            indent.to_string_with_newline(context.config)\n-        ));\n+        result.push_str(&indent.to_string_with_newline(context.config));\n+        result.push_str(suffix.trim_left());\n     }\n \n     // 1 = \";\"\n-    let ty_shape = Shape::indented(indent, context.config).sub_width(1)?;\n-    rewrite_assign_rhs(context, result, ty, ty_shape).map(|s| s + \";\")\n+    let rhs_shape = Shape::indented(indent, context.config).sub_width(1)?;\n+    rewrite_assign_rhs(context, result, rhs, rhs_shape).map(|s| s + \";\")\n+}\n+\n+pub fn rewrite_type_alias(\n+    context: &RewriteContext,\n+    indent: Indent,\n+    ident: ast::Ident,\n+    ty: &ast::Ty,\n+    generics: &ast::Generics,\n+    vis: &ast::Visibility,\n+) -> Option<String> {\n+    rewrite_type_item(context, indent, \"type\", \" =\", ident, ty, generics, vis)\n+}\n+\n+pub fn rewrite_existential_type(\n+    context: &RewriteContext,\n+    indent: Indent,\n+    ident: ast::Ident,\n+    generic_bounds: &ast::GenericBounds,\n+    generics: &ast::Generics,\n+    vis: &ast::Visibility,\n+) -> Option<String> {\n+    rewrite_type_item(\n+        context,\n+        indent,\n+        \"existential type\",\n+        \":\",\n+        ident,\n+        generic_bounds,\n+        generics,\n+        vis,\n+    )\n }\n \n fn type_annotation_spacing(config: &Config) -> (&str, &str) {\n@@ -1706,6 +1738,16 @@ pub fn rewrite_associated_type(\n     }\n }\n \n+pub fn rewrite_existential_impl_type(\n+    context: &RewriteContext,\n+    ident: ast::Ident,\n+    generic_bounds: &ast::GenericBounds,\n+    indent: Indent,\n+) -> Option<String> {\n+    rewrite_associated_type(ident, None, Some(generic_bounds), context, indent)\n+        .map(|s| format!(\"existential {}\", s))\n+}\n+\n pub fn rewrite_associated_impl_type(\n     ident: ast::Ident,\n     defaultness: ast::Defaultness,\n@@ -1889,13 +1931,11 @@ fn rewrite_fn_base(\n         offset: used_width,\n     };\n     let fd = fn_sig.decl;\n-    let g_span = mk_sp(span.lo(), fd.output.span().lo());\n     let generics_str = rewrite_generics(\n         context,\n         rewrite_ident(context, ident),\n         fn_sig.generics,\n         shape,\n-        g_span,\n     )?;\n     result.push_str(&generics_str);\n \n@@ -2413,7 +2453,6 @@ fn rewrite_generics(\n     ident: &str,\n     generics: &ast::Generics,\n     shape: Shape,\n-    span: Span,\n ) -> Option<String> {\n     // FIXME: convert bounds to where clauses where they get too big or if\n     // there is a where clause at all.\n@@ -2423,7 +2462,7 @@ fn rewrite_generics(\n     }\n \n     let params = &generics.params.iter().map(|e| &*e).collect::<Vec<_>>();\n-    overflow::rewrite_with_angle_brackets(context, ident, params, shape, span)\n+    overflow::rewrite_with_angle_brackets(context, ident, params, shape, generics.span)\n }\n \n pub fn generics_shape_from_config(config: &Config, shape: Shape, offset: usize) -> Option<Shape> {\n@@ -2711,7 +2750,7 @@ fn format_generics(\n     used_width: usize,\n ) -> Option<String> {\n     let shape = Shape::legacy(context.budget(used_width + offset.width()), offset);\n-    let mut result = rewrite_generics(context, \"\", generics, shape, span)?;\n+    let mut result = rewrite_generics(context, \"\", generics, shape)?;\n \n     let same_line_brace = if !generics.where_clause.predicates.is_empty() || result.contains('\\n') {\n         let budget = context.budget(last_line_used_width(&result, offset.width()));"}, {"sha": "4fabb3301fc0b2a589a62abc9bf7aeb69e4cebdd", "filename": "src/visitor.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2f03180040b0a3c0a0e5dcd75670a9323f5f312d/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f03180040b0a3c0a0e5dcd75670a9323f5f312d/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=2f03180040b0a3c0a0e5dcd75670a9323f5f312d", "patch": "@@ -19,8 +19,9 @@ use comment::{CodeCharKind, CommentCodeSlices, FindUncommented};\n use config::{BraceStyle, Config};\n use items::{\n     format_impl, format_trait, format_trait_alias, is_mod_decl, is_use_item,\n-    rewrite_associated_impl_type, rewrite_associated_type, rewrite_extern_crate,\n-    rewrite_type_alias, FnSig, StaticParts, StructParts,\n+    rewrite_associated_impl_type, rewrite_associated_type, rewrite_existential_impl_type,\n+    rewrite_existential_type, rewrite_extern_crate, rewrite_type_alias, FnSig, StaticParts,\n+    StructParts,\n };\n use macros::{rewrite_macro, rewrite_macro_def, MacroPosition};\n use rewrite::{Rewrite, RewriteContext};\n@@ -412,7 +413,17 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n                     ty,\n                     generics,\n                     &item.vis,\n-                    item.span,\n+                );\n+                self.push_rewrite(item.span, rewrite);\n+            }\n+            ast::ItemKind::Existential(ref generic_bounds, ref generics) => {\n+                let rewrite = rewrite_existential_type(\n+                    &self.get_context(),\n+                    self.block_indent,\n+                    item.ident,\n+                    generic_bounds,\n+                    generics,\n+                    &item.vis,\n                 );\n                 self.push_rewrite(item.span, rewrite);\n             }\n@@ -510,6 +521,15 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n                 );\n                 self.push_rewrite(ii.span, rewrite);\n             }\n+            ast::ImplItemKind::Existential(ref generic_bounds) => {\n+                let rewrite = rewrite_existential_impl_type(\n+                    &self.get_context(),\n+                    ii.ident,\n+                    generic_bounds,\n+                    self.block_indent,\n+                );\n+                self.push_rewrite(ii.span, rewrite);\n+            }\n             ast::ImplItemKind::Macro(ref mac) => {\n                 self.visit_mac(mac, Some(ii.ident), MacroPosition::Item);\n             }"}, {"sha": "cbffbd99fd8d9c5cdaa53a46b99838fc85de7ae4", "filename": "tests/source/existential_type.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2f03180040b0a3c0a0e5dcd75670a9323f5f312d/tests%2Fsource%2Fexistential_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f03180040b0a3c0a0e5dcd75670a9323f5f312d/tests%2Fsource%2Fexistential_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fexistential_type.rs?ref=2f03180040b0a3c0a0e5dcd75670a9323f5f312d", "patch": "@@ -0,0 +1,15 @@\n+// Existential type.\n+\n+    #![feature(existential_type)]\n+\n+pub existential type Adder<F, T>\n+where\n+    T: Clone,\n+    F: Copy\n+    : Fn(T) -> T;\n+\n+pub existential type Adderrr<T>: Fn(  T  ) -> T;\n+\n+impl Foo for Bar {\n+existential type E  : Trait;\n+}"}, {"sha": "806220502e003525c3b9fcd888d2a741f2021c86", "filename": "tests/target/existential_type.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2f03180040b0a3c0a0e5dcd75670a9323f5f312d/tests%2Ftarget%2Fexistential_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f03180040b0a3c0a0e5dcd75670a9323f5f312d/tests%2Ftarget%2Fexistential_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexistential_type.rs?ref=2f03180040b0a3c0a0e5dcd75670a9323f5f312d", "patch": "@@ -0,0 +1,15 @@\n+// Existential type.\n+\n+#![feature(existential_type)]\n+\n+pub existential type Adder<F, T>\n+where\n+    T: Clone,\n+    F: Copy,\n+: Fn(T) -> T;\n+\n+pub existential type Adderrr<T>: Fn(T) -> T;\n+\n+impl Foo for Bar {\n+    existential type E: Trait;\n+}"}]}