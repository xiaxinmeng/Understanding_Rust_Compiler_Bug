{"sha": "0207a15fa14c2c05e33acac1abd4604fce1f346a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyMDdhMTVmYTE0YzJjMDVlMzNhY2FjMWFiZDQ2MDRmY2UxZjM0NmE=", "commit": {"author": {"name": "Gabriel Smith", "email": "gsmith@d3engineering.com", "date": "2019-11-18T19:57:46Z"}, "committer": {"name": "Gabriel Smith", "email": "gsmith@d3engineering.com", "date": "2019-11-18T22:23:22Z"}, "message": "test: Update tests with fallout of changes\n\nThe error messages of the two tests effected degraded in quality. The\nerrors no longer suggest types in other modules as they now assume that\nthe arguments are const args, not type args.", "tree": {"sha": "9991770e705cd11838728d821a895d4fdf7480fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9991770e705cd11838728d821a895d4fdf7480fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0207a15fa14c2c05e33acac1abd4604fce1f346a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0207a15fa14c2c05e33acac1abd4604fce1f346a", "html_url": "https://github.com/rust-lang/rust/commit/0207a15fa14c2c05e33acac1abd4604fce1f346a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0207a15fa14c2c05e33acac1abd4604fce1f346a/comments", "author": null, "committer": null, "parents": [{"sha": "eaf8fd056942cd8da2d5d5c844bba145b95f6d1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/eaf8fd056942cd8da2d5d5c844bba145b95f6d1a", "html_url": "https://github.com/rust-lang/rust/commit/eaf8fd056942cd8da2d5d5c844bba145b95f6d1a"}], "stats": {"total": 128, "additions": 54, "deletions": 74}, "files": [{"sha": "614375e5e51d5268d00bae3f37e96a76d9331a31", "filename": "src/test/ui/privacy/privacy-ns1.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0207a15fa14c2c05e33acac1abd4604fce1f346a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0207a15fa14c2c05e33acac1abd4604fce1f346a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns1.rs?ref=0207a15fa14c2c05e33acac1abd4604fce1f346a", "patch": "@@ -32,7 +32,8 @@ pub mod foo2 {\n fn test_glob2() {\n     use foo2::*;\n \n-    let _x: Box<Bar>;  //~ ERROR expected type, found function `Bar`\n+    let _x: Box<Bar>;  //~ ERROR wrong number of const arguments: expected 0, found 1\n+    //~^ ERROR wrong number of type arguments: expected 1, found 0\n }\n \n // neither public"}, {"sha": "45ca00f55ab596598b61c54ecaae4cf7e267b246", "filename": "src/test/ui/privacy/privacy-ns1.stderr", "status": "modified", "additions": 17, "deletions": 27, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/0207a15fa14c2c05e33acac1abd4604fce1f346a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0207a15fa14c2c05e33acac1abd4604fce1f346a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns1.stderr?ref=0207a15fa14c2c05e33acac1abd4604fce1f346a", "patch": "@@ -20,30 +20,8 @@ LL | use foo2::Bar;\n LL | use foo3::Bar;\n    |\n \n-error[E0573]: expected type, found function `Bar`\n-  --> $DIR/privacy-ns1.rs:35:17\n-   |\n-LL |     pub struct Baz;\n-   |     --------------- similarly named struct `Baz` defined here\n-...\n-LL |     let _x: Box<Bar>;\n-   |                 ^^^\n-   |\n-help: a struct with a similar name exists\n-   |\n-LL |     let _x: Box<Baz>;\n-   |                 ^^^\n-help: possible better candidates are found in other modules, you can import them into scope\n-   |\n-LL | use foo1::Bar;\n-   |\n-LL | use foo2::Bar;\n-   |\n-LL | use foo3::Bar;\n-   |\n-\n error[E0425]: cannot find function, tuple struct or tuple variant `Bar` in this scope\n-  --> $DIR/privacy-ns1.rs:50:5\n+  --> $DIR/privacy-ns1.rs:51:5\n    |\n LL |     pub struct Baz;\n    |     --------------- similarly named unit struct `Baz` defined here\n@@ -65,7 +43,7 @@ LL | use foo3::Bar;\n    |\n \n error[E0412]: cannot find type `Bar` in this scope\n-  --> $DIR/privacy-ns1.rs:51:17\n+  --> $DIR/privacy-ns1.rs:52:17\n    |\n LL |     pub struct Baz;\n    |     --------------- similarly named struct `Baz` defined here\n@@ -86,7 +64,19 @@ LL | use foo2::Bar;\n LL | use foo3::Bar;\n    |\n \n-error: aborting due to 4 previous errors\n+error[E0107]: wrong number of const arguments: expected 0, found 1\n+  --> $DIR/privacy-ns1.rs:35:17\n+   |\n+LL |     let _x: Box<Bar>;\n+   |                 ^^^ unexpected const argument\n+\n+error[E0107]: wrong number of type arguments: expected 1, found 0\n+  --> $DIR/privacy-ns1.rs:35:13\n+   |\n+LL |     let _x: Box<Bar>;\n+   |             ^^^^^^^^ expected 1 type argument\n+\n+error: aborting due to 5 previous errors\n \n-Some errors have detailed explanations: E0412, E0423, E0425, E0573.\n-For more information about an error, try `rustc --explain E0412`.\n+Some errors have detailed explanations: E0107, E0412, E0423, E0425.\n+For more information about an error, try `rustc --explain E0107`."}, {"sha": "0546de873f3404aeaa7ab4092bed04b92f3b0ee7", "filename": "src/test/ui/privacy/privacy-ns2.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0207a15fa14c2c05e33acac1abd4604fce1f346a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0207a15fa14c2c05e33acac1abd4604fce1f346a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.rs?ref=0207a15fa14c2c05e33acac1abd4604fce1f346a", "patch": "@@ -38,14 +38,16 @@ pub mod foo2 {\n fn test_single2() {\n     use foo2::Bar;\n \n-    let _x : Box<Bar>; //~ ERROR expected type, found function `Bar`\n+    let _x : Box<Bar>; //~ ERROR wrong number of const arguments: expected 0, found 1\n+    //~^ ERROR wrong number of type arguments: expected 1, found 0\n     let _x : Bar(); //~ ERROR expected type, found function `Bar`\n }\n \n fn test_list2() {\n     use foo2::{Bar,Baz};\n \n-    let _x: Box<Bar>; //~ ERROR expected type, found function `Bar`\n+    let _x: Box<Bar>; //~ ERROR wrong number of const arguments: expected 0, found 1\n+    //~^ ERROR wrong number of type arguments: expected 1, found 0\n }\n \n // neither public"}, {"sha": "2871573130a60c8eb97af63ef38c8e75ea97ca4a", "filename": "src/test/ui/privacy/privacy-ns2.stderr", "status": "modified", "additions": 31, "deletions": 44, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/0207a15fa14c2c05e33acac1abd4604fce1f346a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0207a15fa14c2c05e33acac1abd4604fce1f346a/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.stderr?ref=0207a15fa14c2c05e33acac1abd4604fce1f346a", "patch": "@@ -36,22 +36,7 @@ LL | use foo3::Bar;\n    |\n \n error[E0573]: expected type, found function `Bar`\n-  --> $DIR/privacy-ns2.rs:41:18\n-   |\n-LL |     let _x : Box<Bar>;\n-   |                  ^^^ not a type\n-   |\n-help: possible better candidates are found in other modules, you can import them into scope\n-   |\n-LL | use foo1::Bar;\n-   |\n-LL | use foo2::Bar;\n-   |\n-LL | use foo3::Bar;\n-   |\n-\n-error[E0573]: expected type, found function `Bar`\n-  --> $DIR/privacy-ns2.rs:42:14\n+  --> $DIR/privacy-ns2.rs:43:14\n    |\n LL |     let _x : Bar();\n    |              ^^^^^ not a type\n@@ -69,47 +54,49 @@ LL | use foo2::Bar;\n LL | use foo3::Bar;\n    |\n \n-error[E0573]: expected type, found function `Bar`\n-  --> $DIR/privacy-ns2.rs:48:17\n-   |\n-LL |     pub struct Baz;\n-   |     --------------- similarly named struct `Baz` defined here\n-...\n-LL |     let _x: Box<Bar>;\n-   |                 ^^^\n-   |\n-help: a struct with a similar name exists\n-   |\n-LL |     let _x: Box<Baz>;\n-   |                 ^^^\n-help: possible better candidates are found in other modules, you can import them into scope\n-   |\n-LL | use foo1::Bar;\n-   |\n-LL | use foo2::Bar;\n-   |\n-LL | use foo3::Bar;\n-   |\n-\n error[E0603]: trait `Bar` is private\n-  --> $DIR/privacy-ns2.rs:61:15\n+  --> $DIR/privacy-ns2.rs:63:15\n    |\n LL |     use foo3::Bar;\n    |               ^^^\n \n error[E0603]: trait `Bar` is private\n-  --> $DIR/privacy-ns2.rs:65:15\n+  --> $DIR/privacy-ns2.rs:67:15\n    |\n LL |     use foo3::Bar;\n    |               ^^^\n \n error[E0603]: trait `Bar` is private\n-  --> $DIR/privacy-ns2.rs:72:16\n+  --> $DIR/privacy-ns2.rs:74:16\n    |\n LL |     use foo3::{Bar,Baz};\n    |                ^^^\n \n-error: aborting due to 8 previous errors\n+error[E0107]: wrong number of const arguments: expected 0, found 1\n+  --> $DIR/privacy-ns2.rs:41:18\n+   |\n+LL |     let _x : Box<Bar>;\n+   |                  ^^^ unexpected const argument\n+\n+error[E0107]: wrong number of type arguments: expected 1, found 0\n+  --> $DIR/privacy-ns2.rs:41:14\n+   |\n+LL |     let _x : Box<Bar>;\n+   |              ^^^^^^^^ expected 1 type argument\n+\n+error[E0107]: wrong number of const arguments: expected 0, found 1\n+  --> $DIR/privacy-ns2.rs:49:17\n+   |\n+LL |     let _x: Box<Bar>;\n+   |                 ^^^ unexpected const argument\n+\n+error[E0107]: wrong number of type arguments: expected 1, found 0\n+  --> $DIR/privacy-ns2.rs:49:13\n+   |\n+LL |     let _x: Box<Bar>;\n+   |             ^^^^^^^^ expected 1 type argument\n+\n+error: aborting due to 10 previous errors\n \n-Some errors have detailed explanations: E0423, E0573, E0603.\n-For more information about an error, try `rustc --explain E0423`.\n+Some errors have detailed explanations: E0107, E0423, E0573, E0603.\n+For more information about an error, try `rustc --explain E0107`."}]}