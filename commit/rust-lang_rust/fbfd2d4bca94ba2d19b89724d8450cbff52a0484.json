{"sha": "fbfd2d4bca94ba2d19b89724d8450cbff52a0484", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiZmQyZDRiY2E5NGJhMmQxOWI4OTcyNGQ4NDUwY2JmZjUyYTA0ODQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-02-08T08:17:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-08T08:17:48Z"}, "message": "re-add spaces before static kind", "tree": {"sha": "8903dc89a378aad3aadc317f8004ffd213d721cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8903dc89a378aad3aadc317f8004ffd213d721cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbfd2d4bca94ba2d19b89724d8450cbff52a0484", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbfd2d4bca94ba2d19b89724d8450cbff52a0484", "html_url": "https://github.com/rust-lang/rust/commit/fbfd2d4bca94ba2d19b89724d8450cbff52a0484", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbfd2d4bca94ba2d19b89724d8450cbff52a0484/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aaba692effbcaff0acc6a0700f66818b648cdf47", "url": "https://api.github.com/repos/rust-lang/rust/commits/aaba692effbcaff0acc6a0700f66818b648cdf47", "html_url": "https://github.com/rust-lang/rust/commit/aaba692effbcaff0acc6a0700f66818b648cdf47"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "8f0c3a5622c96639e7aca0165a007ec5f1e04d9d", "filename": "src/memory.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fbfd2d4bca94ba2d19b89724d8450cbff52a0484/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbfd2d4bca94ba2d19b89724d8450cbff52a0484/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=fbfd2d4bca94ba2d19b89724d8450cbff52a0484", "patch": "@@ -528,8 +528,8 @@ impl<'a, 'tcx> Memory<'a, 'tcx> {\n             }\n \n             let immutable = match alloc.static_kind {\n-                StaticKind::Mutable => \"(static mut)\",\n-                StaticKind::Immutable => \"(immutable)\",\n+                StaticKind::Mutable => \" (static mut)\",\n+                StaticKind::Immutable => \" (immutable)\",\n                 StaticKind::NotStatic => \"\",\n             };\n             trace!(\"{}({} bytes){}\", msg, alloc.bytes.len(), immutable);"}]}