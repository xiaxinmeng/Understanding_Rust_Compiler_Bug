{"sha": "fa3eebb26e103a8f0fa81b378e8c8525a80baf32", "node_id": "C_kwDOAAsO6NoAKGZhM2VlYmIyNmUxMDNhOGYwZmE4MWIzNzhlOGM4NTI1YTgwYmFmMzI", "commit": {"author": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-11-17T23:35:38Z"}, "committer": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-12-03T18:41:39Z"}, "message": "Modify `bounds_span` to ignore bounds coming from a `derive` macro", "tree": {"sha": "accdd684bc0438766ab4b60cdb97c68c1b7690db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/accdd684bc0438766ab4b60cdb97c68c1b7690db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa3eebb26e103a8f0fa81b378e8c8525a80baf32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa3eebb26e103a8f0fa81b378e8c8525a80baf32", "html_url": "https://github.com/rust-lang/rust/commit/fa3eebb26e103a8f0fa81b378e8c8525a80baf32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa3eebb26e103a8f0fa81b378e8c8525a80baf32/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e70105f9719351990fe026c1c0777b1d685ed744", "url": "https://api.github.com/repos/rust-lang/rust/commits/e70105f9719351990fe026c1c0777b1d685ed744", "html_url": "https://github.com/rust-lang/rust/commit/e70105f9719351990fe026c1c0777b1d685ed744"}], "stats": {"total": 39, "additions": 24, "deletions": 15}, "files": [{"sha": "d5132ad5bdf26d614a44c6a7c06570112a6e860c", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fa3eebb26e103a8f0fa81b378e8c8525a80baf32/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa3eebb26e103a8f0fa81b378e8c8525a80baf32/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=fa3eebb26e103a8f0fa81b378e8c8525a80baf32", "patch": "@@ -17,7 +17,7 @@ use rustc_index::vec::IndexVec;\n use rustc_macros::HashStable_Generic;\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n-use rustc_span::{def_id::LocalDefId, BytePos, MultiSpan, Span, DUMMY_SP};\n+use rustc_span::{def_id::LocalDefId, BytePos, ExpnKind, MacroKind, MultiSpan, Span, DUMMY_SP};\n use rustc_target::asm::InlineAsmRegOrRegClass;\n use rustc_target::spec::abi::Abi;\n \n@@ -527,8 +527,17 @@ pub struct GenericParam<'hir> {\n impl GenericParam<'hir> {\n     pub fn bounds_span(&self) -> Option<Span> {\n         self.bounds.iter().fold(None, |span, bound| {\n-            let span = span.map(|s| s.to(bound.span())).unwrap_or_else(|| bound.span());\n-            Some(span)\n+            if let ExpnKind::Macro(MacroKind::Derive, _) =\n+                bound.span().ctxt().outer_expn_data().kind\n+            {\n+                // We ignore bounds that come from exclusively from a `#[derive(_)]`, because we\n+                // can't really point at them, and we sometimes use this method to get a span\n+                // appropriate for suggestions.\n+                span\n+            } else {\n+                let span = span.map(|s| s.to(bound.span())).unwrap_or_else(|| bound.span());\n+                Some(span)\n+            }\n         })\n     }\n }"}, {"sha": "7a4f7e209c1957f7d0b58f647ad5cebc18154048", "filename": "src/test/ui/suggestions/derive-macro-missing-bounds.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/fa3eebb26e103a8f0fa81b378e8c8525a80baf32/src%2Ftest%2Fui%2Fsuggestions%2Fderive-macro-missing-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa3eebb26e103a8f0fa81b378e8c8525a80baf32/src%2Ftest%2Fui%2Fsuggestions%2Fderive-macro-missing-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fderive-macro-missing-bounds.stderr?ref=fa3eebb26e103a8f0fa81b378e8c8525a80baf32", "patch": "@@ -31,10 +31,10 @@ LL |     impl<T: Debug + Trait> Debug for Inner<T> {\n    = note: required because of the requirements on the impl of `Debug` for `&c::Inner<T>`\n    = note: required for the cast to the object type `dyn Debug`\n    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\n-help: consider further restricting this bound\n+help: consider restricting type parameter `T`\n    |\n-LL |     #[derive(Debug + c::Trait)]\n-   |                    ++++++++++\n+LL |     struct Outer<T: c::Trait>(Inner<T>);\n+   |                   ++++++++++\n \n error[E0277]: the trait bound `T: d::Trait` is not satisfied\n   --> $DIR/derive-macro-missing-bounds.rs:56:21\n@@ -53,10 +53,10 @@ LL |     impl<T> Debug for Inner<T> where T: Debug, T: Trait {\n    = note: required because of the requirements on the impl of `Debug` for `&d::Inner<T>`\n    = note: required for the cast to the object type `dyn Debug`\n    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\n-help: consider further restricting this bound\n+help: consider restricting type parameter `T`\n    |\n-LL |     #[derive(Debug + d::Trait)]\n-   |                    ++++++++++\n+LL |     struct Outer<T: d::Trait>(Inner<T>);\n+   |                   ++++++++++\n \n error[E0277]: the trait bound `T: e::Trait` is not satisfied\n   --> $DIR/derive-macro-missing-bounds.rs:71:21\n@@ -75,10 +75,10 @@ LL |     impl<T> Debug for Inner<T> where T: Debug + Trait {\n    = note: required because of the requirements on the impl of `Debug` for `&e::Inner<T>`\n    = note: required for the cast to the object type `dyn Debug`\n    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\n-help: consider further restricting this bound\n+help: consider restricting type parameter `T`\n    |\n-LL |     #[derive(Debug + e::Trait)]\n-   |                    ++++++++++\n+LL |     struct Outer<T: e::Trait>(Inner<T>);\n+   |                   ++++++++++\n \n error[E0277]: the trait bound `T: f::Trait` is not satisfied\n   --> $DIR/derive-macro-missing-bounds.rs:86:21\n@@ -97,10 +97,10 @@ LL |     impl<T: Debug> Debug for Inner<T> where T: Trait {\n    = note: required because of the requirements on the impl of `Debug` for `&f::Inner<T>`\n    = note: required for the cast to the object type `dyn Debug`\n    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\n-help: consider further restricting this bound\n+help: consider restricting type parameter `T`\n    |\n-LL |     #[derive(Debug + f::Trait)]\n-   |                    ++++++++++\n+LL |     struct Outer<T: f::Trait>(Inner<T>);\n+   |                   ++++++++++\n \n error: aborting due to 5 previous errors\n "}]}