{"sha": "8b9ff46b378e37b256f6b93f1f6f3bb5bc122064", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiOWZmNDZiMzc4ZTM3YjI1NmY2YjkzZjFmNmYzYmI1YmMxMjIwNjQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-09T09:24:52Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-09T10:33:16Z"}, "message": "make resolver fields private", "tree": {"sha": "214828c8e3aa2a397a56556af90775e4686cfb1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/214828c8e3aa2a397a56556af90775e4686cfb1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b9ff46b378e37b256f6b93f1f6f3bb5bc122064", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b9ff46b378e37b256f6b93f1f6f3bb5bc122064", "html_url": "https://github.com/rust-lang/rust/commit/8b9ff46b378e37b256f6b93f1f6f3bb5bc122064", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b9ff46b378e37b256f6b93f1f6f3bb5bc122064/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74fe581061be5175835efda69ee1fa3817716a59", "url": "https://api.github.com/repos/rust-lang/rust/commits/74fe581061be5175835efda69ee1fa3817716a59", "html_url": "https://github.com/rust-lang/rust/commit/74fe581061be5175835efda69ee1fa3817716a59"}], "stats": {"total": 34, "additions": 22, "deletions": 12}, "files": [{"sha": "c75c1bbea56e6d5f09dfdbee970809babdec44aa", "filename": "crates/ra_hir/src/module/nameres.rs", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/8b9ff46b378e37b256f6b93f1f6f3bb5bc122064/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b9ff46b378e37b256f6b93f1f6f3bb5bc122064/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs?ref=8b9ff46b378e37b256f6b93f1f6f3bb5bc122064", "patch": "@@ -200,17 +200,32 @@ impl ModuleItem {\n }\n \n pub(crate) struct Resolver<'a, DB> {\n-    pub(crate) db: &'a DB,\n-    pub(crate) input: &'a FxHashMap<ModuleId, Arc<InputModuleItems>>,\n-    pub(crate) source_root: SourceRootId,\n-    pub(crate) module_tree: Arc<ModuleTree>,\n-    pub(crate) result: ItemMap,\n+    db: &'a DB,\n+    input: &'a FxHashMap<ModuleId, Arc<InputModuleItems>>,\n+    source_root: SourceRootId,\n+    module_tree: Arc<ModuleTree>,\n+    result: ItemMap,\n }\n \n impl<'a, DB> Resolver<'a, DB>\n where\n     DB: HirDatabase,\n {\n+    pub(crate) fn new(\n+        db: &'a DB,\n+        input: &'a FxHashMap<ModuleId, Arc<InputModuleItems>>,\n+        source_root: SourceRootId,\n+        module_tree: Arc<ModuleTree>,\n+    ) -> Resolver<'a, DB> {\n+        Resolver {\n+            db: db,\n+            input: &input,\n+            source_root,\n+            module_tree,\n+            result: ItemMap::default(),\n+        }\n+    }\n+\n     pub(crate) fn resolve(mut self) -> Cancelable<ItemMap> {\n         for (&module_id, items) in self.input.iter() {\n             self.populate_module(module_id, items)"}, {"sha": "37c4f9e4fc921aa9c6349e558fc124d90a56bc54", "filename": "crates/ra_hir/src/query_definitions.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8b9ff46b378e37b256f6b93f1f6f3bb5bc122064/crates%2Fra_hir%2Fsrc%2Fquery_definitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b9ff46b378e37b256f6b93f1f6f3bb5bc122064/crates%2Fra_hir%2Fsrc%2Fquery_definitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fquery_definitions.rs?ref=8b9ff46b378e37b256f6b93f1f6f3bb5bc122064", "patch": "@@ -141,13 +141,8 @@ pub(super) fn item_map(\n             Ok((id, items))\n         })\n         .collect::<Cancelable<FxHashMap<_, _>>>()?;\n-    let resolver = Resolver {\n-        db: db,\n-        input: &input,\n-        source_root,\n-        module_tree,\n-        result: ItemMap::default(),\n-    };\n+\n+    let resolver = Resolver::new(db, &input, source_root, module_tree);\n     let res = resolver.resolve()?;\n     let elapsed = start.elapsed();\n     log::info!(\"item_map: {:?}\", elapsed);"}]}