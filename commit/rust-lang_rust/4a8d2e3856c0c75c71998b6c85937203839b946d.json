{"sha": "4a8d2e3856c0c75c71998b6c85937203839b946d", "node_id": "C_kwDOAAsO6NoAKDRhOGQyZTM4NTZjMGM3NWM3MTk5OGI2Yzg1OTM3MjAzODM5Yjk0NmQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-30T17:39:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-30T17:39:58Z"}, "message": "Auto merge of #97480 - conradludgate:faster-format-literals, r=joshtriplett\n\nimprove format impl for literals\n\nThe basic idea of this change can be seen here https://godbolt.org/z/MT37cWoe1.\n\nUpdates the format impl to have a fast path for string literals and the default path for regular format args.\n\nThis change will allow `format!(\"string literal\")` to be used interchangably with `\"string literal\".to_owned()`.\n\nThis would be relevant in the case of `f!\"string literal\"` being legal (https://github.com/rust-lang/rfcs/pull/3267) in which case it would be the easiest way to create owned strings from literals, while also being just as efficient as any other impl", "tree": {"sha": "68c4e985080db02c2bfbe9e337fd37814ba94e8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68c4e985080db02c2bfbe9e337fd37814ba94e8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a8d2e3856c0c75c71998b6c85937203839b946d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a8d2e3856c0c75c71998b6c85937203839b946d", "html_url": "https://github.com/rust-lang/rust/commit/4a8d2e3856c0c75c71998b6c85937203839b946d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a8d2e3856c0c75c71998b6c85937203839b946d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e810f750a2a407f9caeabba39059578e844add14", "url": "https://api.github.com/repos/rust-lang/rust/commits/e810f750a2a407f9caeabba39059578e844add14", "html_url": "https://github.com/rust-lang/rust/commit/e810f750a2a407f9caeabba39059578e844add14"}, {"sha": "5dd0fe301ac0180afddc12ad3124ab0a1f813298", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dd0fe301ac0180afddc12ad3124ab0a1f813298", "html_url": "https://github.com/rust-lang/rust/commit/5dd0fe301ac0180afddc12ad3124ab0a1f813298"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "ed398b56612ce700f68b444f6aaf0da652850dd5", "filename": "library/alloc/src/fmt.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4a8d2e3856c0c75c71998b6c85937203839b946d/library%2Falloc%2Fsrc%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a8d2e3856c0c75c71998b6c85937203839b946d/library%2Falloc%2Fsrc%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Ffmt.rs?ref=4a8d2e3856c0c75c71998b6c85937203839b946d", "patch": "@@ -604,9 +604,14 @@ use crate::string;\n #[cfg(not(no_global_oom_handling))]\n #[must_use]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[inline]\n pub fn format(args: Arguments<'_>) -> string::String {\n-    let capacity = args.estimated_capacity();\n-    let mut output = string::String::with_capacity(capacity);\n-    output.write_fmt(args).expect(\"a formatting trait implementation returned an error\");\n-    output\n+    fn format_inner(args: Arguments<'_>) -> string::String {\n+        let capacity = args.estimated_capacity();\n+        let mut output = string::String::with_capacity(capacity);\n+        output.write_fmt(args).expect(\"a formatting trait implementation returned an error\");\n+        output\n+    }\n+\n+    args.as_str().map_or_else(|| format_inner(args), crate::borrow::ToOwned::to_owned)\n }"}]}