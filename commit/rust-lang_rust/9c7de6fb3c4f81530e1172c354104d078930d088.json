{"sha": "9c7de6fb3c4f81530e1172c354104d078930d088", "node_id": "C_kwDOAAsO6NoAKDljN2RlNmZiM2M0ZjgxNTMwZTExNzJjMzU0MTA0ZDA3ODkzMGQwODg", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-04T12:44:18Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-04T14:27:01Z"}, "message": "Move hir_bounds after lifetime_defs", "tree": {"sha": "879baf8ae8a3a5e8cc0141b2035e5c19087b3521", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/879baf8ae8a3a5e8cc0141b2035e5c19087b3521"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c7de6fb3c4f81530e1172c354104d078930d088", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmLr1zUACgkQgTGiTgx5\n76/vgQ/9GnIAc+aRul4QS4LZQNCCaM/LGyivKa5hs7QhZHnAqCFKRQH3Lgd5nkx7\nbapZB3QqDsw9Tag/MKCps7KvtEkc3p945tlHcQwGYLCo3y4+DCWdF6Vo7WL6MRMe\nDBfpzgrBIbUBXp6mw6VHArmRtRj8NsywDGXJ1T18UntAYv/3dNqm6JiOU9C65+8e\nQZo9yvBjgt9xktUc89v0/3iCm8m7GEnkpivJZdEwxN2EvNzmr+H5u1cs93sz7lzs\nvO0TpMcJz0dcBYYHycq9x3xc+70Ho1Ihc9ygMsH7CP+mR2HVaQa6kt1QrEBmDpev\n3dbSytd4tHZAP17lFbKXLIudH8qNlM4SmXKQ7u4HN/K33W4PjbSETpXh16F5gclM\nNHE05PUxxMfphGpLxp/ryCdeK94d6AFM3QuSGQ5zC5p6ZiZJ9NqkXLyDE1+MZoMK\nRk82cGkbRe4AuwLusY4sirLR44y3A3bVKfVMhSyBha1uL3yrCYgtDgbWHGMbzRJt\nWMSfP86VO9DFazQzfApbr8H2mjdfFHv7RPqRTPEfN3krlJluTRC9WNX8DhqFjJkS\nwnPhFuOIcrkErk8UMklwIUkmxOJRAzWvKdYfaBTMINzY5B7GCd1p2QulXx37b0jJ\njXCcCuXG5c3wMVxurk9QMaZdnDCexBz+hmQeuExukRyzz3rtsg8=\n=KkIL\n-----END PGP SIGNATURE-----", "payload": "tree 879baf8ae8a3a5e8cc0141b2035e5c19087b3521\nparent 3f7db370efffa24143e6a2415e6fda314f3de058\nauthor Santiago Pastorino <spastorino@gmail.com> 1659617058 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1659623221 -0300\n\nMove hir_bounds after lifetime_defs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c7de6fb3c4f81530e1172c354104d078930d088", "html_url": "https://github.com/rust-lang/rust/commit/9c7de6fb3c4f81530e1172c354104d078930d088", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c7de6fb3c4f81530e1172c354104d078930d088/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f7db370efffa24143e6a2415e6fda314f3de058", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f7db370efffa24143e6a2415e6fda314f3de058", "html_url": "https://github.com/rust-lang/rust/commit/3f7db370efffa24143e6a2415e6fda314f3de058"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "17e91b22e4b88c34aeed3e32164f3521902f398f", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9c7de6fb3c4f81530e1172c354104d078930d088/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c7de6fb3c4f81530e1172c354104d078930d088/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=9c7de6fb3c4f81530e1172c354104d078930d088", "patch": "@@ -1427,10 +1427,6 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n \n             // Install the remapping from old to new (if any):\n             lctx.with_remapping(new_remapping, |lctx| {\n-                // Then when we lower the param bounds, references to 'a are remapped to 'a1, so we\n-                // get back Debug + 'a1, which is suitable for use on the TAIT.\n-                let hir_bounds = lctx.lower_param_bounds(bounds, itctx);\n-\n                 let lifetime_defs = lctx.arena.alloc_from_iter(collected_lifetimes.iter().map(\n                     |&(new_node_id, lifetime)| {\n                         let hir_id = lctx.lower_node_id(new_node_id);\n@@ -1455,9 +1451,12 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                         }\n                     },\n                 ));\n-\n                 debug!(\"lower_opaque_impl_trait: lifetime_defs={:#?}\", lifetime_defs);\n \n+                // Then when we lower the param bounds, references to 'a are remapped to 'a1, so we\n+                // get back Debug + 'a1, which is suitable for use on the TAIT.\n+                let hir_bounds = lctx.lower_param_bounds(bounds, itctx);\n+\n                 let opaque_ty_item = hir::OpaqueTy {\n                     generics: self.arena.alloc(hir::Generics {\n                         params: lifetime_defs,"}]}