{"sha": "c0add813e9005a3356c7a8062c9a9c8f8bca6895", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwYWRkODEzZTkwMDVhMzM1NmM3YTgwNjJjOWE5YzhmOGJjYTY4OTU=", "commit": {"author": {"name": "gfreezy", "email": "gfreezy@gmail.com", "date": "2018-12-22T14:40:41Z"}, "committer": {"name": "gfreezy", "email": "gfreezy@gmail.com", "date": "2018-12-22T14:40:41Z"}, "message": "mark as visited on entry instead of left", "tree": {"sha": "a49c18fab055e9ee2c3f86ee487247b2e995b77e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a49c18fab055e9ee2c3f86ee487247b2e995b77e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0add813e9005a3356c7a8062c9a9c8f8bca6895", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0add813e9005a3356c7a8062c9a9c8f8bca6895", "html_url": "https://github.com/rust-lang/rust/commit/c0add813e9005a3356c7a8062c9a9c8f8bca6895", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0add813e9005a3356c7a8062c9a9c8f8bca6895/comments", "author": {"login": "gfreezy", "id": 510012, "node_id": "MDQ6VXNlcjUxMDAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/510012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfreezy", "html_url": "https://github.com/gfreezy", "followers_url": "https://api.github.com/users/gfreezy/followers", "following_url": "https://api.github.com/users/gfreezy/following{/other_user}", "gists_url": "https://api.github.com/users/gfreezy/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfreezy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfreezy/subscriptions", "organizations_url": "https://api.github.com/users/gfreezy/orgs", "repos_url": "https://api.github.com/users/gfreezy/repos", "events_url": "https://api.github.com/users/gfreezy/events{/privacy}", "received_events_url": "https://api.github.com/users/gfreezy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gfreezy", "id": 510012, "node_id": "MDQ6VXNlcjUxMDAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/510012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfreezy", "html_url": "https://github.com/gfreezy", "followers_url": "https://api.github.com/users/gfreezy/followers", "following_url": "https://api.github.com/users/gfreezy/following{/other_user}", "gists_url": "https://api.github.com/users/gfreezy/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfreezy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfreezy/subscriptions", "organizations_url": "https://api.github.com/users/gfreezy/orgs", "repos_url": "https://api.github.com/users/gfreezy/repos", "events_url": "https://api.github.com/users/gfreezy/events{/privacy}", "received_events_url": "https://api.github.com/users/gfreezy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0267df38156d5d67f0b636913a3fe54d84d906ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/0267df38156d5d67f0b636913a3fe54d84d906ab", "html_url": "https://github.com/rust-lang/rust/commit/0267df38156d5d67f0b636913a3fe54d84d906ab"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f445e03bc1497e1a2081864f72b55d03bbf7d12a", "filename": "crates/ra_db/src/input.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c0add813e9005a3356c7a8062c9a9c8f8bca6895/crates%2Fra_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0add813e9005a3356c7a8062c9a9c8f8bca6895/crates%2Fra_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Finput.rs?ref=c0add813e9005a3356c7a8062c9a9c8f8bca6895", "patch": "@@ -118,9 +118,10 @@ impl CrateGraph {\n         self.arena[&crate_id].dependencies.iter()\n     }\n     fn dfs_find(&self, target: CrateId, from: CrateId, visited: &mut FxHashSet<CrateId>) -> bool {\n-        if visited.contains(&from) {\n+        if !visited.insert(from) {\n             return false;\n         }\n+\n         for dep in self.dependencies(from) {\n             let crate_id = dep.crate_id();\n             if crate_id == target {\n@@ -131,7 +132,6 @@ impl CrateGraph {\n                 return true;\n             }\n         }\n-        visited.insert(from);\n         return false;\n     }\n }"}]}