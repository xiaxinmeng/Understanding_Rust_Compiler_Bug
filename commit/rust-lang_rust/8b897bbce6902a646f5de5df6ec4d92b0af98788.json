{"sha": "8b897bbce6902a646f5de5df6ec4d92b0af98788", "node_id": "C_kwDOAAsO6NoAKDhiODk3YmJjZTY5MDJhNjQ2ZjVkZTVkZjZlYzRkOTJiMGFmOTg3ODg", "commit": {"author": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2022-09-18T14:31:35Z"}, "committer": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2023-01-09T22:07:25Z"}, "message": "migrate: `early.rs` and `enum_intrinsics_non_enums.rs`", "tree": {"sha": "2a48d030c389bf58ef430253a61c4c9aff011de4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a48d030c389bf58ef430253a61c4c9aff011de4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b897bbce6902a646f5de5df6ec4d92b0af98788", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b897bbce6902a646f5de5df6ec4d92b0af98788", "html_url": "https://github.com/rust-lang/rust/commit/8b897bbce6902a646f5de5df6ec4d92b0af98788", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b897bbce6902a646f5de5df6ec4d92b0af98788/comments", "author": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c63ba52562a0c6c8d19b320c558d437bb8d87bd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c63ba52562a0c6c8d19b320c558d437bb8d87bd8", "html_url": "https://github.com/rust-lang/rust/commit/c63ba52562a0c6c8d19b320c558d437bb8d87bd8"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "58b1ae6e800108e9e5fc6be4ce5df6fe2af6836e", "filename": "compiler/rustc_lint/src/early.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8b897bbce6902a646f5de5df6ec4d92b0af98788/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b897bbce6902a646f5de5df6ec4d92b0af98788/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fearly.rs?ref=8b897bbce6902a646f5de5df6ec4d92b0af98788", "patch": "@@ -1,3 +1,5 @@\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n //! Implementation of lint checking.\n //!\n //! The lint checking is mostly consolidated into one pass which runs\n@@ -39,6 +41,7 @@ pub struct EarlyContextAndPass<'a, T: EarlyLintPass> {\n impl<'a, T: EarlyLintPass> EarlyContextAndPass<'a, T> {\n     // This always-inlined function is for the hot call site.\n     #[inline(always)]\n+    #[allow(rustc::diagnostic_outside_of_impl)]\n     fn inlined_check_id(&mut self, id: ast::NodeId) {\n         for early_lint in self.context.buffered.take(id) {\n             let BufferedEarlyLint { span, msg, node_id: _, lint_id, diagnostic } = early_lint;"}, {"sha": "6c398cebee77010635814505f4488e02e77dc8a1", "filename": "compiler/rustc_lint/src/enum_intrinsics_non_enums.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/8b897bbce6902a646f5de5df6ec4d92b0af98788/compiler%2Frustc_lint%2Fsrc%2Fenum_intrinsics_non_enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b897bbce6902a646f5de5df6ec4d92b0af98788/compiler%2Frustc_lint%2Fsrc%2Fenum_intrinsics_non_enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fenum_intrinsics_non_enums.rs?ref=8b897bbce6902a646f5de5df6ec4d92b0af98788", "patch": "@@ -1,5 +1,10 @@\n-use crate::{context::LintContext, LateContext, LateLintPass};\n-use rustc_errors::fluent;\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n+use crate::{\n+    context::LintContext,\n+    lints::{EnumIntrinsicsMemDiscriminate, EnumIntrinsicsMemVariant},\n+    LateContext, LateLintPass,\n+};\n use rustc_hir as hir;\n use rustc_middle::ty::{visit::TypeVisitable, Ty};\n use rustc_span::{symbol::sym, Span};\n@@ -50,23 +55,21 @@ fn enforce_mem_discriminant(\n ) {\n     let ty_param = cx.typeck_results().node_substs(func_expr.hir_id).type_at(0);\n     if is_non_enum(ty_param) {\n-        cx.struct_span_lint(\n+        cx.emit_spanned_lint(\n             ENUM_INTRINSICS_NON_ENUMS,\n             expr_span,\n-            fluent::lint_enum_intrinsics_mem_discriminant,\n-            |lint| lint.set_arg(\"ty_param\", ty_param).span_note(args_span, fluent::note),\n+            EnumIntrinsicsMemDiscriminate { ty_param, note: args_span },\n         );\n     }\n }\n \n fn enforce_mem_variant_count(cx: &LateContext<'_>, func_expr: &hir::Expr<'_>, span: Span) {\n     let ty_param = cx.typeck_results().node_substs(func_expr.hir_id).type_at(0);\n     if is_non_enum(ty_param) {\n-        cx.struct_span_lint(\n+        cx.emit_spanned_lint(\n             ENUM_INTRINSICS_NON_ENUMS,\n             span,\n-            fluent::lint_enum_intrinsics_mem_variant,\n-            |lint| lint.set_arg(\"ty_param\", ty_param).note(fluent::note),\n+            EnumIntrinsicsMemVariant { ty_param },\n         );\n     }\n }"}, {"sha": "cc34357fa4bc5b8ceaf15af5b3e29c4098f079b6", "filename": "compiler/rustc_lint/src/errors.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b897bbce6902a646f5de5df6ec4d92b0af98788/compiler%2Frustc_lint%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b897bbce6902a646f5de5df6ec4d92b0af98788/compiler%2Frustc_lint%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ferrors.rs?ref=8b897bbce6902a646f5de5df6ec4d92b0af98788", "patch": "@@ -38,6 +38,7 @@ impl AddToDiagnostic for OverruledAttributeSub {\n             OverruledAttributeSub::NodeSource { span, reason } => {\n                 diag.span_label(span, fluent::lint_node_source);\n                 if let Some(rationale) = reason {\n+                    #[allow(rustc::diagnostic_outside_of_impl)]\n                     diag.note(rationale.as_str());\n                 }\n             }"}, {"sha": "686aca2d404e475192b2bccf5254045c2305351c", "filename": "compiler/rustc_lint/src/lints.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8b897bbce6902a646f5de5df6ec4d92b0af98788/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b897bbce6902a646f5de5df6ec4d92b0af98788/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flints.rs?ref=8b897bbce6902a646f5de5df6ec4d92b0af98788", "patch": "@@ -32,6 +32,21 @@ pub enum ArrayIntoIterDiagSub {\n     },\n }\n \n+#[derive(LintDiagnostic)]\n+#[diag(lint_enum_intrinsics_mem_discriminant)]\n+pub struct EnumIntrinsicsMemDiscriminate<'a> {\n+    pub ty_param: Ty<'a>,\n+    #[note]\n+    pub note: Span,\n+}\n+\n+#[derive(LintDiagnostic)]\n+#[diag(lint_enum_intrinsics_mem_variant)]\n+#[note]\n+pub struct EnumIntrinsicsMemVariant<'a> {\n+    pub ty_param: Ty<'a>,\n+}\n+\n #[derive(LintDiagnostic)]\n #[diag(lint_cstring_ptr)]\n #[note]"}]}