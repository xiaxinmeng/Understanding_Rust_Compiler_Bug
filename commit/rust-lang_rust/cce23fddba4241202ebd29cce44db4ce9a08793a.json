{"sha": "cce23fddba4241202ebd29cce44db4ce9a08793a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjZTIzZmRkYmE0MjQxMjAyZWJkMjljY2U0NGRiNGNlOWEwODc5M2E=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-20T19:52:32Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-20T19:52:32Z"}, "message": "flattern module structure", "tree": {"sha": "6f1385feff4b4cdfaac1fb9b93abad4757fc6918", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f1385feff4b4cdfaac1fb9b93abad4757fc6918"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cce23fddba4241202ebd29cce44db4ce9a08793a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cce23fddba4241202ebd29cce44db4ce9a08793a", "html_url": "https://github.com/rust-lang/rust/commit/cce23fddba4241202ebd29cce44db4ce9a08793a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cce23fddba4241202ebd29cce44db4ce9a08793a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2acb21e8f72896c7a2855ca6042d0ee1870d8643", "url": "https://api.github.com/repos/rust-lang/rust/commits/2acb21e8f72896c7a2855ca6042d0ee1870d8643", "html_url": "https://github.com/rust-lang/rust/commit/2acb21e8f72896c7a2855ca6042d0ee1870d8643"}], "stats": {"total": 44, "additions": 30, "deletions": 14}, "files": [{"sha": "f74c365d5cc9778f90575b299455573d22b68b1f", "filename": "crates/ra_syntax/src/parsing.rs", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/cce23fddba4241202ebd29cce44db4ce9a08793a/crates%2Fra_syntax%2Fsrc%2Fparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cce23fddba4241202ebd29cce44db4ce9a08793a/crates%2Fra_syntax%2Fsrc%2Fparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing.rs?ref=cce23fddba4241202ebd29cce44db4ce9a08793a", "patch": "@@ -2,14 +2,20 @@\n mod token_set;\n mod builder;\n mod lexer;\n-mod parser_impl;\n+mod event;\n+mod input;\n mod parser_api;\n mod grammar;\n mod reparsing;\n \n use crate::{\n     SyntaxError, SyntaxKind, SmolStr,\n-    parsing::builder::GreenBuilder,\n+    parsing::{\n+        builder::GreenBuilder,\n+        input::ParserInput,\n+        event::EventProcessor,\n+        parser_api::Parser,\n+    },\n     syntax_node::GreenNode,\n };\n \n@@ -19,9 +25,22 @@ pub(crate) use self::reparsing::incremental_reparse;\n \n pub(crate) fn parse_text(text: &str) -> (GreenNode, Vec<SyntaxError>) {\n     let tokens = tokenize(&text);\n-    let (green, errors) =\n-        parser_impl::parse_with(GreenBuilder::new(), text, &tokens, grammar::root);\n-    (green, errors)\n+    parse_with(GreenBuilder::new(), text, &tokens, grammar::root)\n+}\n+\n+fn parse_with<S: TreeSink>(\n+    tree_sink: S,\n+    text: &str,\n+    tokens: &[Token],\n+    f: fn(&mut Parser),\n+) -> S::Tree {\n+    let mut events = {\n+        let input = ParserInput::new(text, &tokens);\n+        let mut p = Parser::new(&input);\n+        f(&mut p);\n+        p.finish()\n+    };\n+    EventProcessor::new(tree_sink, text, tokens, &mut events).process().finish()\n }\n \n /// `TreeSink` abstracts details of a particular syntax tree implementation."}, {"sha": "893a42e9ac63fc75af1d446d97e85d7839ff8e05", "filename": "crates/ra_syntax/src/parsing/event.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cce23fddba4241202ebd29cce44db4ce9a08793a/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fevent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cce23fddba4241202ebd29cce44db4ce9a08793a/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fevent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fevent.rs?ref=cce23fddba4241202ebd29cce44db4ce9a08793a", "patch": "@@ -20,7 +20,7 @@ use crate::{\n     },\n     parsing::{\n         lexer::Token,\n-        parser_impl::TreeSink,\n+        TreeSink,\n     },\n };\n \n@@ -113,7 +113,7 @@ impl<'a, S: TreeSink> EventProcessor<'a, S> {\n     }\n \n     /// Generate the syntax tree with the control of events.\n-    pub(super) fn process(mut self) -> S {\n+    pub(crate) fn process(mut self) -> S {\n         let mut forward_parents = Vec::new();\n \n         for i in 0..self.events.len() {", "previous_filename": "crates/ra_syntax/src/parsing/parser_impl/event.rs"}, {"sha": "0f1810df55b027da26fe8234a796b3f5e6ebcbf3", "filename": "crates/ra_syntax/src/parsing/input.rs", "status": "renamed", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cce23fddba4241202ebd29cce44db4ce9a08793a/crates%2Fra_syntax%2Fsrc%2Fparsing%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cce23fddba4241202ebd29cce44db4ce9a08793a/crates%2Fra_syntax%2Fsrc%2Fparsing%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Finput.rs?ref=cce23fddba4241202ebd29cce44db4ce9a08793a", "patch": "@@ -1,8 +1,7 @@\n use crate::{\n     SyntaxKind, SyntaxKind::EOF, TextRange, TextUnit,\n     parsing::{\n-        TokenPos,\n-        parser_impl::TokenSource,\n+        TokenPos, TokenSource,\n         lexer::Token,\n     },\n };", "previous_filename": "crates/ra_syntax/src/parsing/parser_impl/input.rs"}, {"sha": "99f6183a4e98f2596bda316a40243e44cff65c19", "filename": "crates/ra_syntax/src/parsing/parser_api.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cce23fddba4241202ebd29cce44db4ce9a08793a/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fparser_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cce23fddba4241202ebd29cce44db4ce9a08793a/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fparser_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fparser_api.rs?ref=cce23fddba4241202ebd29cce44db4ce9a08793a", "patch": "@@ -8,7 +8,7 @@ use crate::{\n     parsing::{\n         TokenSource, TokenPos,\n         token_set::TokenSet,\n-        parser_impl::event::Event,\n+        event::Event,\n     },\n };\n "}, {"sha": "f45326dffefee9050381a9ff27e45c0a33740765", "filename": "crates/ra_syntax/src/parsing/reparsing.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cce23fddba4241202ebd29cce44db4ce9a08793a/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cce23fddba4241202ebd29cce44db4ce9a08793a/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs?ref=cce23fddba4241202ebd29cce44db4ce9a08793a", "patch": "@@ -4,8 +4,7 @@ use crate::{\n     syntax_node::{GreenNode, SyntaxNode},\n     syntax_error::SyntaxError,\n     parsing::{\n-        grammar,\n-        parser_impl,\n+        grammar, parse_with,\n         builder::GreenBuilder,\n         parser_api::Parser,\n         lexer::{tokenize, Token},\n@@ -62,8 +61,7 @@ fn reparse_block<'node>(\n     if !is_balanced(&tokens) {\n         return None;\n     }\n-    let (green, new_errors) =\n-        parser_impl::parse_with(GreenBuilder::new(), &text, &tokens, reparser);\n+    let (green, new_errors) = parse_with(GreenBuilder::new(), &text, &tokens, reparser);\n     Some((node, green, new_errors))\n }\n "}]}