{"sha": "44d37a44bc9d6382424c903a624080bd8d9fa966", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ZDM3YTQ0YmM5ZDYzODI0MjRjOTAzYTYyNDA4MGJkOGQ5ZmE5NjY=", "commit": {"author": {"name": "Devin Ragotzy", "email": "devin.ragotzy@gmail.com", "date": "2021-07-24T11:03:52Z"}, "committer": {"name": "Devin Ragotzy", "email": "devin.ragotzy@gmail.com", "date": "2021-07-24T11:30:22Z"}, "message": "Lint inside macro when owned by current crate", "tree": {"sha": "3e045b22a0fe9d08669e19e1a2752f736006a90b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e045b22a0fe9d08669e19e1a2752f736006a90b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44d37a44bc9d6382424c903a624080bd8d9fa966", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44d37a44bc9d6382424c903a624080bd8d9fa966", "html_url": "https://github.com/rust-lang/rust/commit/44d37a44bc9d6382424c903a624080bd8d9fa966", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44d37a44bc9d6382424c903a624080bd8d9fa966/comments", "author": {"login": "DevinR528", "id": 29749111, "node_id": "MDQ6VXNlcjI5NzQ5MTEx", "avatar_url": "https://avatars.githubusercontent.com/u/29749111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevinR528", "html_url": "https://github.com/DevinR528", "followers_url": "https://api.github.com/users/DevinR528/followers", "following_url": "https://api.github.com/users/DevinR528/following{/other_user}", "gists_url": "https://api.github.com/users/DevinR528/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevinR528/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevinR528/subscriptions", "organizations_url": "https://api.github.com/users/DevinR528/orgs", "repos_url": "https://api.github.com/users/DevinR528/repos", "events_url": "https://api.github.com/users/DevinR528/events{/privacy}", "received_events_url": "https://api.github.com/users/DevinR528/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DevinR528", "id": 29749111, "node_id": "MDQ6VXNlcjI5NzQ5MTEx", "avatar_url": "https://avatars.githubusercontent.com/u/29749111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevinR528", "html_url": "https://github.com/DevinR528", "followers_url": "https://api.github.com/users/DevinR528/followers", "following_url": "https://api.github.com/users/DevinR528/following{/other_user}", "gists_url": "https://api.github.com/users/DevinR528/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevinR528/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevinR528/subscriptions", "organizations_url": "https://api.github.com/users/DevinR528/orgs", "repos_url": "https://api.github.com/users/DevinR528/repos", "events_url": "https://api.github.com/users/DevinR528/events{/privacy}", "received_events_url": "https://api.github.com/users/DevinR528/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5c3ed4463acfcfd014a40f743b0a4863863e0f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5c3ed4463acfcfd014a40f743b0a4863863e0f8", "html_url": "https://github.com/rust-lang/rust/commit/f5c3ed4463acfcfd014a40f743b0a4863863e0f8"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "2a31894665667ad99c78f5351dabab1909a3af4e", "filename": "clippy_lints/src/nonstandard_macro_braces.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/44d37a44bc9d6382424c903a624080bd8d9fa966/clippy_lints%2Fsrc%2Fnonstandard_macro_braces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44d37a44bc9d6382424c903a624080bd8d9fa966/clippy_lints%2Fsrc%2Fnonstandard_macro_braces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnonstandard_macro_braces.rs?ref=44d37a44bc9d6382424c903a624080bd8d9fa966", "patch": "@@ -93,14 +93,21 @@ impl EarlyLintPass for MacroBraces {\n }\n \n fn is_offending_macro<'a>(cx: &EarlyContext<'_>, span: Span, mac_braces: &'a MacroBraces) -> Option<MacroInfo<'a>> {\n+    let unnested_or_local = || {\n+        let nested = in_macro(span.ctxt().outer_expn_data().call_site);\n+        let in_local_macro = nested\n+            && matches!(span.macro_backtrace().last().and_then(|e| e.macro_def_id), Some(defid) if defid.is_local());\n+        !nested || in_local_macro\n+    };\n     if_chain! {\n         // Make sure we are only one level deep otherwise there are to many FP's\n-        if in_macro(span) && !in_macro(span.ctxt().outer_expn_data().call_site);\n+        if in_macro(span);\n         if let Some((name, braces)) = find_matching_macro(span, &mac_braces.macro_braces);\n         if let Some(snip) = snippet_opt(cx, span.ctxt().outer_expn_data().call_site);\n         // we must check only invocation sites\n         // https://github.com/rust-lang/rust-clippy/issues/7422\n         if snip.starts_with(&format!(\"{}!\", name));\n+        if unnested_or_local();\n         // make formatting consistent\n         let c = snip.replace(\" \", \"\");\n         if !c.starts_with(&format!(\"{}!{}\", name, braces.0));"}, {"sha": "5b4adc868dff19259611c087a3623dfdacf2d3d0", "filename": "tests/ui-toml/nonstandard_macro_braces/conf_nonstandard_macro_braces.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44d37a44bc9d6382424c903a624080bd8d9fa966/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44d37a44bc9d6382424c903a624080bd8d9fa966/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.rs?ref=44d37a44bc9d6382424c903a624080bd8d9fa966", "patch": "@@ -44,7 +44,7 @@ fn main() {\n     let _ = format![\"ugh {} stop being such a good compiler\", \"hello\"];\n     let _ = quote!(let x = 1;);\n     let _ = quote::quote!(match match match);\n-    let _ = test!(); // don't trigger for macro calls inside macros\n+    let _ = test!(); // trigger when macro def is inside our own crate\n     let _ = vec![1,2,3];\n \n     let _ = quote::quote! {true || false};"}, {"sha": "87e962b9228c4b74627e5d7623761b0f5a246141", "filename": "tests/ui-toml/nonstandard_macro_braces/conf_nonstandard_macro_braces.stderr", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/44d37a44bc9d6382424c903a624080bd8d9fa966/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44d37a44bc9d6382424c903a624080bd8d9fa966/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.stderr?ref=44d37a44bc9d6382424c903a624080bd8d9fa966", "patch": "@@ -47,6 +47,25 @@ help: consider writing `quote::quote! {match match match}`\n LL |     let _ = quote::quote!(match match match);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n+error: use of irregular braces for `vec!` macro\n+  --> $DIR/conf_nonstandard_macro_braces.rs:18:9\n+   |\n+LL |         vec!{0, 0, 0}\n+   |         ^^^^^^^^^^^^^\n+...\n+LL |     let _ = test!(); // trigger when macro def is inside our own crate\n+   |             ------- in this macro invocation\n+   |\n+help: consider writing `vec![0, 0, 0]`\n+  --> $DIR/conf_nonstandard_macro_braces.rs:18:9\n+   |\n+LL |         vec!{0, 0, 0}\n+   |         ^^^^^^^^^^^^^\n+...\n+LL |     let _ = test!(); // trigger when macro def is inside our own crate\n+   |             ------- in this macro invocation\n+   = note: this error originates in the macro `test` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n error: use of irregular braces for `type_pos!` macro\n   --> $DIR/conf_nonstandard_macro_braces.rs:55:12\n    |\n@@ -71,5 +90,5 @@ help: consider writing `eprint![\"test if user config overrides defaults\"];`\n LL |     eprint!(\"test if user config overrides defaults\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 7 previous errors\n "}]}