{"sha": "c979189867d4af957a50cd4ad39c230dc06344f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5NzkxODk4NjdkNGFmOTU3YTUwY2Q0YWQzOWMyMzBkYzA2MzQ0Zjk=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-02-15T09:52:26Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-03-27T23:27:58Z"}, "message": "Make ParseSess thread-safe", "tree": {"sha": "8d57731206e1431d9a86c666f36db0c809eaa324", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d57731206e1431d9a86c666f36db0c809eaa324"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c979189867d4af957a50cd4ad39c230dc06344f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c979189867d4af957a50cd4ad39c230dc06344f9", "html_url": "https://github.com/rust-lang/rust/commit/c979189867d4af957a50cd4ad39c230dc06344f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c979189867d4af957a50cd4ad39c230dc06344f9/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f0cb8ccffa55abd430074cf2b2d785c85c7de54", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f0cb8ccffa55abd430074cf2b2d785c85c7de54", "html_url": "https://github.com/rust-lang/rust/commit/3f0cb8ccffa55abd430074cf2b2d785c85c7de54"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "5db279c768182f32615c1bc8954423051b3ac4b5", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c979189867d4af957a50cd4ad39c230dc06344f9/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c979189867d4af957a50cd4ad39c230dc06344f9/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=c979189867d4af957a50cd4ad39c230dc06344f9", "patch": "@@ -1781,7 +1781,6 @@ mod tests {\n     use errors;\n     use feature_gate::UnstableFeatures;\n     use parse::token;\n-    use std::cell::RefCell;\n     use std::collections::HashSet;\n     use std::io;\n     use std::path::PathBuf;\n@@ -1797,12 +1796,12 @@ mod tests {\n             span_diagnostic: errors::Handler::with_emitter(true, false, Box::new(emitter)),\n             unstable_features: UnstableFeatures::from_environment(),\n             config: CrateConfig::new(),\n-            included_mod_stack: RefCell::new(Vec::new()),\n+            included_mod_stack: Lock::new(Vec::new()),\n             code_map: cm,\n-            missing_fragment_specifiers: RefCell::new(HashSet::new()),\n-            raw_identifier_spans: RefCell::new(Vec::new()),\n+            missing_fragment_specifiers: Lock::new(HashSet::new()),\n+            raw_identifier_spans: Lock::new(Vec::new()),\n             registered_diagnostics: Lock::new(ErrorMap::new()),\n-            non_modrs_mods: RefCell::new(vec![]),\n+            non_modrs_mods: Lock::new(vec![]),\n         }\n     }\n "}, {"sha": "d5103eb18334fc91eebb6aa28697d9993582b587", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c979189867d4af957a50cd4ad39c230dc06344f9/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c979189867d4af957a50cd4ad39c230dc06344f9/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=c979189867d4af957a50cd4ad39c230dc06344f9", "patch": "@@ -23,7 +23,6 @@ use symbol::Symbol;\n use tokenstream::{TokenStream, TokenTree};\n use diagnostics::plugin::ErrorMap;\n \n-use std::cell::RefCell;\n use std::collections::HashSet;\n use std::iter;\n use std::path::{Path, PathBuf};\n@@ -47,17 +46,17 @@ pub struct ParseSess {\n     pub span_diagnostic: Handler,\n     pub unstable_features: UnstableFeatures,\n     pub config: CrateConfig,\n-    pub missing_fragment_specifiers: RefCell<HashSet<Span>>,\n+    pub missing_fragment_specifiers: Lock<HashSet<Span>>,\n     /// Places where raw identifiers were used. This is used for feature gating\n     /// raw identifiers\n-    pub raw_identifier_spans: RefCell<Vec<Span>>,\n+    pub raw_identifier_spans: Lock<Vec<Span>>,\n     /// The registered diagnostics codes\n     pub registered_diagnostics: Lock<ErrorMap>,\n     // Spans where a `mod foo;` statement was included in a non-mod.rs file.\n     // These are used to issue errors if the non_modrs_mods feature is not enabled.\n-    pub non_modrs_mods: RefCell<Vec<(ast::Ident, Span)>>,\n+    pub non_modrs_mods: Lock<Vec<(ast::Ident, Span)>>,\n     /// Used to determine and report recursive mod inclusions\n-    included_mod_stack: RefCell<Vec<PathBuf>>,\n+    included_mod_stack: Lock<Vec<PathBuf>>,\n     code_map: Lrc<CodeMap>,\n }\n \n@@ -76,12 +75,12 @@ impl ParseSess {\n             span_diagnostic: handler,\n             unstable_features: UnstableFeatures::from_environment(),\n             config: HashSet::new(),\n-            missing_fragment_specifiers: RefCell::new(HashSet::new()),\n-            raw_identifier_spans: RefCell::new(Vec::new()),\n+            missing_fragment_specifiers: Lock::new(HashSet::new()),\n+            raw_identifier_spans: Lock::new(Vec::new()),\n             registered_diagnostics: Lock::new(ErrorMap::new()),\n-            included_mod_stack: RefCell::new(vec![]),\n+            included_mod_stack: Lock::new(vec![]),\n             code_map,\n-            non_modrs_mods: RefCell::new(vec![]),\n+            non_modrs_mods: Lock::new(vec![]),\n         }\n     }\n "}]}