{"sha": "9ac468b841cf01e7b575f4c20d10df8096c31f7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhYzQ2OGI4NDFjZjAxZTdiNTc1ZjRjMjBkMTBkZjgwOTZjMzFmN2E=", "commit": {"author": {"name": "Ms2ger", "email": "Ms2ger@gmail.com", "date": "2016-05-10T13:34:25Z"}, "committer": {"name": "Ms2ger", "email": "Ms2ger@gmail.com", "date": "2016-05-10T13:34:25Z"}, "message": "Store a reference rather than a RefCell in LocalCrateReader.", "tree": {"sha": "901937d1292821debb4130d6a124b4bc48014928", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/901937d1292821debb4130d6a124b4bc48014928"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ac468b841cf01e7b575f4c20d10df8096c31f7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ac468b841cf01e7b575f4c20d10df8096c31f7a", "html_url": "https://github.com/rust-lang/rust/commit/9ac468b841cf01e7b575f4c20d10df8096c31f7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ac468b841cf01e7b575f4c20d10df8096c31f7a/comments", "author": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1939b76903eb8a4aa02dadc52353541637e3b98c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1939b76903eb8a4aa02dadc52353541637e3b98c", "html_url": "https://github.com/rust-lang/rust/commit/1939b76903eb8a4aa02dadc52353541637e3b98c"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "8841480f7f6448bd845100a9cb43258d23e28399", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9ac468b841cf01e7b575f4c20d10df8096c31f7a/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ac468b841cf01e7b575f4c20d10df8096c31f7a/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=9ac468b841cf01e7b575f4c20d10df8096c31f7a", "patch": "@@ -148,7 +148,7 @@ pub fn compile_input(sess: &Session,\n \n         time(sess.time_passes(),\n              \"external crate/lib resolution\",\n-             || LocalCrateReader::new(sess, &cstore, defs, &expanded_crate, &id)\n+             || LocalCrateReader::new(sess, &cstore, &defs.borrow(), &expanded_crate, &id)\n                     .read_crates(&dep_graph));\n \n         time(sess.time_passes(),"}, {"sha": "ed9a092b6ff2fbfd1f60ab4851dc668f2fbb91eb", "filename": "src/librustc_driver/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9ac468b841cf01e7b575f4c20d10df8096c31f7a/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ac468b841cf01e7b575f4c20d10df8096c31f7a/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=9ac468b841cf01e7b575f4c20d10df8096c31f7a", "patch": "@@ -121,7 +121,7 @@ fn test_env<F>(source_string: &str,\n     let dep_graph = DepGraph::new(false);\n     let krate = driver::assign_node_ids(&sess, krate);\n     let defs = &RefCell::new(hir_map::collect_definitions(&krate));\n-    LocalCrateReader::new(&sess, &cstore, defs, &krate, \"test_crate\").read_crates(&dep_graph);\n+    LocalCrateReader::new(&sess, &cstore, &defs.borrow(), &krate, \"test_crate\").read_crates(&dep_graph);\n     let _ignore = dep_graph.in_ignore();\n \n     let (_, resolutions, mut hir_forest) = {"}, {"sha": "2b02a745bef74ec6c00f00bcece8956a555fa543", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9ac468b841cf01e7b575f4c20d10df8096c31f7a/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ac468b841cf01e7b575f4c20d10df8096c31f7a/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=9ac468b841cf01e7b575f4c20d10df8096c31f7a", "patch": "@@ -46,7 +46,7 @@ pub struct LocalCrateReader<'a> {\n     cstore: &'a CStore,\n     creader: CrateReader<'a>,\n     krate: &'a ast::Crate,\n-    defintions: &'a RefCell<hir_map::Definitions>,\n+    defintions: &'a hir_map::Definitions,\n }\n \n pub struct CrateReader<'a> {\n@@ -843,7 +843,7 @@ impl<'a> CrateReader<'a> {\n impl<'a> LocalCrateReader<'a> {\n     pub fn new(sess: &'a Session,\n                cstore: &'a CStore,\n-               defs: &'a RefCell<hir_map::Definitions>,\n+               defs: &'a hir_map::Definitions,\n                krate: &'a ast::Crate,\n                local_crate_name: &str)\n                -> LocalCrateReader<'a> {\n@@ -902,9 +902,8 @@ impl<'a> LocalCrateReader<'a> {\n                                                                       PathKind::Crate,\n                                                                       true);\n \n-                        let defs = self.defintions.borrow();\n-                        let def_id = defs.opt_local_def_id(i.id).unwrap();\n-                        let len = defs.def_path(def_id.index).data.len();\n+                        let def_id = self.defintions.opt_local_def_id(i.id).unwrap();\n+                        let len = self.defintions.def_path(def_id.index).data.len();\n \n                         self.creader.update_extern_crate(cnum,\n                                                          ExternCrate {"}, {"sha": "77a780805a695426b18a736b03f222a06d375d02", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9ac468b841cf01e7b575f4c20d10df8096c31f7a/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ac468b841cf01e7b575f4c20d10df8096c31f7a/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=9ac468b841cf01e7b575f4c20d10df8096c31f7a", "patch": "@@ -154,7 +154,7 @@ pub fn run_core(search_paths: SearchPaths,\n     let dep_graph = DepGraph::new(false);\n \n     let defs = &RefCell::new(hir_map::collect_definitions(&krate));\n-    LocalCrateReader::new(&sess, &cstore, &defs, &krate, &name).read_crates(&dep_graph);\n+    LocalCrateReader::new(&sess, &cstore, &defs.borrow(), &krate, &name).read_crates(&dep_graph);\n \n     // Lower ast -> hir and resolve.\n     let (analysis, resolutions, mut hir_forest) = {"}, {"sha": "f46846c34a5ef9665f0c9588c89f891f5fa0c175", "filename": "src/test/run-make/execution-engine/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9ac468b841cf01e7b575f4c20d10df8096c31f7a/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ac468b841cf01e7b575f4c20d10df8096c31f7a/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs?ref=9ac468b841cf01e7b575f4c20d10df8096c31f7a", "patch": "@@ -241,7 +241,7 @@ fn compile_program(input: &str, sysroot: PathBuf)\n         let dep_graph = DepGraph::new(sess.opts.build_dep_graph());\n         let krate = driver::assign_node_ids(&sess, krate);\n         let defs = RefCell::new(ast_map::collect_definitions(&krate));\n-        LocalCrateReader::new(&sess, &cstore, &defs, &krate, &id).read_crates(&dep_graph);\n+        LocalCrateReader::new(&sess, &cstore, &defs.borrow(), &krate, &id).read_crates(&dep_graph);\n         let (analysis, resolutions, mut hir_forest) = {\n             let defs = &mut *defs.borrow_mut();\n             driver::lower_and_resolve(&sess, &id, defs, &krate, dep_graph, MakeGlobMap::No)"}]}