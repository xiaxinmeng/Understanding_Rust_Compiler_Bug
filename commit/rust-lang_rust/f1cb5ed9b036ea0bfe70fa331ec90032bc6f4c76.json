{"sha": "f1cb5ed9b036ea0bfe70fa331ec90032bc6f4c76", "node_id": "C_kwDOAAsO6NoAKGYxY2I1ZWQ5YjAzNmVhMGJmZTcwZmEzMzFlYzkwMDMyYmM2ZjRjNzY", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-01-14T10:07:53Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-01-14T10:07:53Z"}, "message": "fix: Properly cache files in Semantics when ascending macros", "tree": {"sha": "90f864e3e86c45eb6ad0fc36695d02eda303ce40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90f864e3e86c45eb6ad0fc36695d02eda303ce40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1cb5ed9b036ea0bfe70fa331ec90032bc6f4c76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1cb5ed9b036ea0bfe70fa331ec90032bc6f4c76", "html_url": "https://github.com/rust-lang/rust/commit/f1cb5ed9b036ea0bfe70fa331ec90032bc6f4c76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1cb5ed9b036ea0bfe70fa331ec90032bc6f4c76/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f8dd64830d9892a94d437a65e4e0e221b225790", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f8dd64830d9892a94d437a65e4e0e221b225790", "html_url": "https://github.com/rust-lang/rust/commit/2f8dd64830d9892a94d437a65e4e0e221b225790"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "9596e818185a05c71a420b2dc5737049990daf3f", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f1cb5ed9b036ea0bfe70fa331ec90032bc6f4c76/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1cb5ed9b036ea0bfe70fa331ec90032bc6f4c76/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=f1cb5ed9b036ea0bfe70fa331ec90032bc6f4c76", "patch": "@@ -2,7 +2,7 @@\n \n mod source_to_def;\n \n-use std::{cell::RefCell, fmt};\n+use std::{cell::RefCell, fmt, iter};\n \n use base_db::{FileId, FileRange};\n use either::Either;\n@@ -749,8 +749,8 @@ impl<'db> SemanticsImpl<'db> {\n \n     fn diagnostics_display_range(&self, src: InFile<SyntaxNodePtr>) -> FileRange {\n         let root = self.parse_or_expand(src.file_id).unwrap();\n-        let node = src.value.to_node(&root);\n-        src.with_value(&node).original_file_range(self.db.upcast())\n+        let node = src.map(|it| it.to_node(&root));\n+        node.as_ref().original_file_range(self.db.upcast())\n     }\n \n     fn token_ancestors_with_macros(\n@@ -765,7 +765,17 @@ impl<'db> SemanticsImpl<'db> {\n         node: SyntaxNode,\n     ) -> impl Iterator<Item = SyntaxNode> + Clone + '_ {\n         let node = self.find_file(&node);\n-        node.ancestors_with_macros(self.db.upcast()).map(|it| it.value)\n+        let db = self.db.upcast();\n+        iter::successors(Some(node.cloned()), move |&InFile { file_id, ref value }| {\n+            match value.parent() {\n+                Some(parent) => Some(InFile::new(file_id, parent)),\n+                None => {\n+                    self.cache(value.clone(), file_id);\n+                    file_id.call_node(db)\n+                }\n+            }\n+        })\n+        .map(|it| it.value)\n     }\n \n     fn ancestors_at_offset_with_macros("}, {"sha": "b455fd59172a76e971e1139c4ff697583cd7260b", "filename": "crates/hir_expand/src/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f1cb5ed9b036ea0bfe70fa331ec90032bc6f4c76/crates%2Fhir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1cb5ed9b036ea0bfe70fa331ec90032bc6f4c76/crates%2Fhir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Flib.rs?ref=f1cb5ed9b036ea0bfe70fa331ec90032bc6f4c76", "patch": "@@ -636,10 +636,7 @@ impl<'a> InFile<&'a SyntaxNode> {\n     ) -> impl Iterator<Item = InFile<SyntaxNode>> + Clone + '_ {\n         iter::successors(Some(self.cloned()), move |node| match node.value.parent() {\n             Some(parent) => Some(node.with_value(parent)),\n-            None => {\n-                let parent_node = node.file_id.call_node(db)?;\n-                Some(parent_node)\n-            }\n+            None => node.file_id.call_node(db),\n         })\n     }\n "}]}