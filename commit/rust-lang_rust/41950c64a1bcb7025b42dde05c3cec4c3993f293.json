{"sha": "41950c64a1bcb7025b42dde05c3cec4c3993f293", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxOTUwYzY0YTFiY2I3MDI1YjQyZGRlMDVjM2NlYzRjMzk5M2YyOTM=", "commit": {"author": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2016-05-26T08:04:05Z"}, "committer": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2016-05-26T08:04:05Z"}, "message": "Explain the order of the enumeration items\n\nSimply a micro-optimization to reduce code size and to open up\ninlining opportunities.", "tree": {"sha": "ad9e2e96e83e7c888c6e0b95deabece3f8daa4c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad9e2e96e83e7c888c6e0b95deabece3f8daa4c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41950c64a1bcb7025b42dde05c3cec4c3993f293", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41950c64a1bcb7025b42dde05c3cec4c3993f293", "html_url": "https://github.com/rust-lang/rust/commit/41950c64a1bcb7025b42dde05c3cec4c3993f293", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41950c64a1bcb7025b42dde05c3cec4c3993f293/comments", "author": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da03950f62a43ff3ca32f931a3edecc71a214f3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/da03950f62a43ff3ca32f931a3edecc71a214f3b", "html_url": "https://github.com/rust-lang/rust/commit/da03950f62a43ff3ca32f931a3edecc71a214f3b"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "d80b456181ae475d8e53651b30b2aefab89a38a5", "filename": "src/libcore/char.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/41950c64a1bcb7025b42dde05c3cec4c3993f293/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41950c64a1bcb7025b42dde05c3cec4c3993f293/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=41950c64a1bcb7025b42dde05c3cec4c3993f293", "patch": "@@ -411,6 +411,9 @@ pub struct EscapeUnicode {\n     hex_digit_idx: usize,\n }\n \n+// The enum values are ordered so that their representation is the\n+// same as the remaining length (besides the hexadecimal digits). This\n+// likely makes `len()` a single load from memory) and inline-worth.\n #[derive(Clone, Debug)]\n enum EscapeUnicodeState {\n     Done,"}]}