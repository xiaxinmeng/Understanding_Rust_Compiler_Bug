{"sha": "6c964fd0303041066381204328d4368b5c29d3f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjOTY0ZmQwMzAzMDQxMDY2MzgxMjA0MzI4ZDQzNjhiNWMyOWQzZjc=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2018-10-15T12:20:03Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2018-10-15T14:59:08Z"}, "message": "Reduce allocations", "tree": {"sha": "c1d69e74cb6f9d8f3f71de796489c99f94891acb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1d69e74cb6f9d8f3f71de796489c99f94891acb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c964fd0303041066381204328d4368b5c29d3f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c964fd0303041066381204328d4368b5c29d3f7", "html_url": "https://github.com/rust-lang/rust/commit/6c964fd0303041066381204328d4368b5c29d3f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c964fd0303041066381204328d4368b5c29d3f7/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fb188bd43840f4a99c6a4b4cdbdb21ccf3304e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fb188bd43840f4a99c6a4b4cdbdb21ccf3304e7", "html_url": "https://github.com/rust-lang/rust/commit/6fb188bd43840f4a99c6a4b4cdbdb21ccf3304e7"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "561989a1a11bba8265053e41e97f089b18d97d77", "filename": "src/comment.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6c964fd0303041066381204328d4368b5c29d3f7/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c964fd0303041066381204328d4368b5c29d3f7/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=6c964fd0303041066381204328d4368b5c29d3f7", "patch": "@@ -764,12 +764,12 @@ fn trim_custom_comment_prefix(s: &str) -> String {\n                 // due to comment wrapping, a line that was originaly behind `#` is split over\n                 // multiple lines, which needs then to be prefixed with a `#`\n                 if !orig.trim_left().starts_with(\"# \") {\n-                    format!(\"# {}\", orig)\n+                    Cow::from(format!(\"# {}\", orig))\n                 } else {\n-                    orig.to_string()\n+                    Cow::from(orig)\n                 }\n             } else {\n-                line.to_string()\n+                Cow::from(line)\n             }\n         })\n         .collect::<Vec<_>>()"}, {"sha": "291a59e1055eee539cb614396b2f4a3e2607357d", "filename": "src/config/config_type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c964fd0303041066381204328d4368b5c29d3f7/src%2Fconfig%2Fconfig_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c964fd0303041066381204328d4368b5c29d3f7/src%2Fconfig%2Fconfig_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fconfig_type.rs?ref=6c964fd0303041066381204328d4368b5c29d3f7", "patch": "@@ -112,7 +112,7 @@ macro_rules! create_config {\n                 cloned.width_heuristics = None;\n \n                 ::toml::to_string(&cloned)\n-                    .map_err(|e| format!(\"Could not output config: {}\", e.to_string()))\n+                    .map_err(|e| format!(\"Could not output config: {}\", e))\n             }\n         }\n "}, {"sha": "19caafbfb828c3587eb24cc3b5e81efeb905ca0b", "filename": "src/items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6c964fd0303041066381204328d4368b5c29d3f7/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c964fd0303041066381204328d4368b5c29d3f7/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=6c964fd0303041066381204328d4368b5c29d3f7", "patch": "@@ -779,7 +779,7 @@ pub fn format_impl(\n             let outer_indent_str = offset.block_only().to_string_with_newline(context.config);\n \n             result.push_str(&inner_indent_str);\n-            result.push_str(visitor.buffer.to_string().trim());\n+            result.push_str(visitor.buffer.trim());\n             result.push_str(&outer_indent_str);\n         } else if need_newline || !context.config.empty_item_single_line() {\n             result.push_str(&sep);\n@@ -1137,7 +1137,7 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n             let inner_indent_str = visitor.block_indent.to_string_with_newline(context.config);\n \n             result.push_str(&inner_indent_str);\n-            result.push_str(visitor.buffer.to_string().trim());\n+            result.push_str(visitor.buffer.trim());\n             result.push_str(&outer_indent_str);\n         } else if result.contains('\\n') {\n             result.push_str(&outer_indent_str);"}]}