{"sha": "4d20dd4b788a9e825bac43c8c0b0b4858de78296", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkMjBkZDRiNzg4YTllODI1YmFjNDNjOGMwYjBiNDg1OGRlNzgyOTY=", "commit": {"author": {"name": "Tom Tromey", "email": "tom@tromey.com", "date": "2018-11-05T15:37:00Z"}, "committer": {"name": "Tom Tromey", "email": "tom@tromey.com", "date": "2018-11-05T15:44:36Z"}, "message": "Fix emission of niche-filling discriminant values\n\nBug #55606 points out a regression introduced by #54004; namely that\nan assertion can erroneously fire when a niche-filling discriminant\nvalue is emitted.\n\nThis fixes the bug by removing the assertion, and furthermore by\narranging for the discriminant value to be masked according to the\nsize of the niche.  This makes handling the discriminant a bit simpler\nfor debuggers.\n\nThe test case is from Jonathan Turner.\n\nCloses #55606", "tree": {"sha": "2c38115187a62af86b99653894a00fa406801fdc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c38115187a62af86b99653894a00fa406801fdc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d20dd4b788a9e825bac43c8c0b0b4858de78296", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d20dd4b788a9e825bac43c8c0b0b4858de78296", "html_url": "https://github.com/rust-lang/rust/commit/4d20dd4b788a9e825bac43c8c0b0b4858de78296", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d20dd4b788a9e825bac43c8c0b0b4858de78296/comments", "author": {"login": "tromey", "id": 1557670, "node_id": "MDQ6VXNlcjE1NTc2NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tromey", "html_url": "https://github.com/tromey", "followers_url": "https://api.github.com/users/tromey/followers", "following_url": "https://api.github.com/users/tromey/following{/other_user}", "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}", "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tromey/subscriptions", "organizations_url": "https://api.github.com/users/tromey/orgs", "repos_url": "https://api.github.com/users/tromey/repos", "events_url": "https://api.github.com/users/tromey/events{/privacy}", "received_events_url": "https://api.github.com/users/tromey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tromey", "id": 1557670, "node_id": "MDQ6VXNlcjE1NTc2NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tromey", "html_url": "https://github.com/tromey", "followers_url": "https://api.github.com/users/tromey/followers", "following_url": "https://api.github.com/users/tromey/following{/other_user}", "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}", "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tromey/subscriptions", "organizations_url": "https://api.github.com/users/tromey/orgs", "repos_url": "https://api.github.com/users/tromey/repos", "events_url": "https://api.github.com/users/tromey/events{/privacy}", "received_events_url": "https://api.github.com/users/tromey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cfc6033955dd2685dfa7baeec6f6bc3bfdfe2f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cfc6033955dd2685dfa7baeec6f6bc3bfdfe2f1", "html_url": "https://github.com/rust-lang/rust/commit/6cfc6033955dd2685dfa7baeec6f6bc3bfdfe2f1"}], "stats": {"total": 71, "additions": 67, "deletions": 4}, "files": [{"sha": "6c70aa23dc2e6ee00b29ce2548798ee8fb6050d0", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4d20dd4b788a9e825bac43c8c0b0b4858de78296/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d20dd4b788a9e825bac43c8c0b0b4858de78296/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=4d20dd4b788a9e825bac43c8c0b0b4858de78296", "patch": "@@ -1279,7 +1279,7 @@ impl EnumMemberDescriptionFactory<'ll, 'tcx> {\n                 niche_start,\n                 ref variants,\n                 dataful_variant,\n-                ..\n+                ref niche,\n             } => {\n                 if fallback {\n                     let variant = self.layout.for_variant(cx, dataful_variant);\n@@ -1361,11 +1361,11 @@ impl EnumMemberDescriptionFactory<'ll, 'tcx> {\n                         let niche_value = if i == dataful_variant {\n                             None\n                         } else {\n-                            let niche = (i as u128)\n+                            let value = (i as u128)\n                                 .wrapping_sub(*niche_variants.start() as u128)\n                                 .wrapping_add(niche_start);\n-                            assert_eq!(niche as u64 as u128, niche);\n-                            Some(niche as u64)\n+                            let value = value & ((1u128 << niche.value.size(cx).bits()) - 1);\n+                            Some(value as u64)\n                         };\n \n                         MemberDescription {"}, {"sha": "c0ee05110fcdc2d1bfd8736d308582cc1209ed8c", "filename": "src/test/codegen/enum-debug-niche-2.rs", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/4d20dd4b788a9e825bac43c8c0b0b4858de78296/src%2Ftest%2Fcodegen%2Fenum-debug-niche-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d20dd4b788a9e825bac43c8c0b0b4858de78296/src%2Ftest%2Fcodegen%2Fenum-debug-niche-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fenum-debug-niche-2.rs?ref=4d20dd4b788a9e825bac43c8c0b0b4858de78296", "patch": "@@ -0,0 +1,63 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// This test depends on a patch that was committed to upstream LLVM\n+// before 7.0, then backported to the Rust LLVM fork.  It tests that\n+// optimized enum debug info accurately reflects the enum layout.\n+\n+// ignore-tidy-linelength\n+// ignore-windows\n+// min-system-llvm-version 7.0\n+\n+// compile-flags: -g -C no-prepopulate-passes\n+\n+// CHECK: {{.*}}DICompositeType{{.*}}tag: DW_TAG_variant_part,{{.*}}size: 32,{{.*}}\n+// CHECK: {{.*}}DIDerivedType{{.*}}tag: DW_TAG_member,{{.*}}name: \"Placeholder\",{{.*}}extraData: i64 4294967295{{[,)].*}}\n+// CHECK: {{.*}}DIDerivedType{{.*}}tag: DW_TAG_member,{{.*}}name: \"Error\",{{.*}}extraData: i64 0{{[,)].*}}\n+\n+#![feature(never_type)]\n+#![feature(nll)]\n+\n+#[derive(Copy, Clone)]\n+pub struct Entity {\n+    private: std::num::NonZeroU32,\n+}\n+\n+#[derive(Copy, Clone, PartialEq, Eq)]\n+pub struct Declaration;\n+\n+impl TypeFamily for Declaration {\n+    type Base = Base;\n+    type Placeholder = !;\n+\n+    fn intern_base_data(_: BaseKind<Self>) {}\n+}\n+\n+#[derive(Copy, Clone)]\n+pub struct Base;\n+\n+pub trait TypeFamily: Copy + 'static {\n+    type Base: Copy;\n+    type Placeholder: Copy;\n+\n+    fn intern_base_data(_: BaseKind<Self>);\n+}\n+\n+#[derive(Copy, Clone)]\n+pub enum BaseKind<F: TypeFamily> {\n+    Named(Entity),\n+    Placeholder(F::Placeholder),\n+    Error,\n+}\n+\n+pub fn main() {\n+    let x = BaseKind::Error::<Declaration>;\n+    let y = 7;\n+}"}]}