{"sha": "ad5403e2e5d071583d741701f00f56e9a4336f1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkNTQwM2UyZTVkMDcxNTgzZDc0MTcwMWYwMGY1NmU5YTQzMzZmMWI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-14T13:58:29Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-14T13:58:49Z"}, "message": "fix layout in discriminant_value", "tree": {"sha": "905635a00f4d0520c96ba0d5ef61fe600ea64321", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/905635a00f4d0520c96ba0d5ef61fe600ea64321"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad5403e2e5d071583d741701f00f56e9a4336f1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad5403e2e5d071583d741701f00f56e9a4336f1b", "html_url": "https://github.com/rust-lang/rust/commit/ad5403e2e5d071583d741701f00f56e9a4336f1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad5403e2e5d071583d741701f00f56e9a4336f1b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cec39d7014221ea160d616e82d85ded62ac4778c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cec39d7014221ea160d616e82d85ded62ac4778c", "html_url": "https://github.com/rust-lang/rust/commit/cec39d7014221ea160d616e82d85ded62ac4778c"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "cd953ba7c569351e5ba2ea39f975118a622895a5", "filename": "src/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ad5403e2e5d071583d741701f00f56e9a4336f1b/src%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad5403e2e5d071583d741701f00f56e9a4336f1b/src%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsic.rs?ref=ad5403e2e5d071583d741701f00f56e9a4336f1b", "patch": "@@ -250,8 +250,7 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'mir, 'tcx, super:\n                 let adt_align = self.layout_of(args[0].ty)?.align;\n                 let place = Place::from_scalar_ptr(adt_ptr, adt_align);\n                 let discr_val = self.read_discriminant_value(place, layout)?;\n-                let ptr_size = self.memory.pointer_size();\n-                self.write_scalar(dest, Scalar::from_uint(discr_val, ptr_size), dest_layout.ty)?;\n+                self.write_scalar(dest, Scalar::from_uint(discr_val, dest_layout.size), dest_layout.ty)?;\n             }\n \n             \"sinf32\" | \"fabsf32\" | \"cosf32\" | \"sqrtf32\" | \"expf32\" | \"exp2f32\" | \"logf32\" |"}]}