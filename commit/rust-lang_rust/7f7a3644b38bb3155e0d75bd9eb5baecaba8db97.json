{"sha": "7f7a3644b38bb3155e0d75bd9eb5baecaba8db97", "node_id": "C_kwDOAAsO6NoAKDdmN2EzNjQ0YjM4YmIzMTU1ZTBkNzViZDllYjViYWVjYWJhOGRiOTc", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-12-21T15:36:04Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-12-21T15:36:23Z"}, "message": "Fully render type alias completions from hir", "tree": {"sha": "0250d5587d51658877c22699ebd8d993bac9a4ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0250d5587d51658877c22699ebd8d993bac9a4ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f7a3644b38bb3155e0d75bd9eb5baecaba8db97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f7a3644b38bb3155e0d75bd9eb5baecaba8db97", "html_url": "https://github.com/rust-lang/rust/commit/7f7a3644b38bb3155e0d75bd9eb5baecaba8db97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f7a3644b38bb3155e0d75bd9eb5baecaba8db97/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40d5c58a805f147a2e0cd6ed4097b167674f042d", "url": "https://api.github.com/repos/rust-lang/rust/commits/40d5c58a805f147a2e0cd6ed4097b167674f042d", "html_url": "https://github.com/rust-lang/rust/commit/40d5c58a805f147a2e0cd6ed4097b167674f042d"}], "stats": {"total": 53, "additions": 17, "deletions": 36}, "files": [{"sha": "88fb3959203286746991a29c134c21944ee48f97", "filename": "crates/ide_completion/src/completions/qualified_path.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7f7a3644b38bb3155e0d75bd9eb5baecaba8db97/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f7a3644b38bb3155e0d75bd9eb5baecaba8db97/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs?ref=7f7a3644b38bb3155e0d75bd9eb5baecaba8db97", "patch": "@@ -288,7 +288,7 @@ fn foo() { let _ = lib::S::$0 }\n             expect![[r#\"\n                 fn public_method() fn()\n                 ct PUBLIC_CONST    pub const PUBLIC_CONST: u32\n-                ta PublicType      pub type PublicType;\n+                ta PublicType      pub type PublicType = u32\n             \"#]],\n         );\n     }\n@@ -377,8 +377,8 @@ trait Sub: Super {\n fn foo<T: Sub>() { T::$0 }\n \"#,\n             expect![[r#\"\n-                ta SubTy (as Sub)        type SubTy;\n-                ta Ty (as Super)         type Ty;\n+                ta SubTy (as Sub)        type SubTy\n+                ta Ty (as Super)         type Ty\n                 ct C2 (as Sub)           const C2: ()\n                 fn subfunc() (as Sub)    fn()\n                 me submethod(\u2026) (as Sub) fn(&self)\n@@ -417,8 +417,8 @@ impl<T> Sub for Wrap<T> {\n }\n \"#,\n             expect![[r#\"\n-                ta SubTy (as Sub)        type SubTy;\n-                ta Ty (as Super)         type Ty;\n+                ta SubTy (as Sub)        type SubTy\n+                ta Ty (as Super)         type Ty\n                 ct CONST (as Super)      const CONST: u8\n                 fn func() (as Super)     fn()\n                 me method(\u2026) (as Super)  fn(&self)"}, {"sha": "be1d3212810f05e8f465da31d352789101ff3a1e", "filename": "crates/ide_completion/src/render/type_alias.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7f7a3644b38bb3155e0d75bd9eb5baecaba8db97/crates%2Fide_completion%2Fsrc%2Frender%2Ftype_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f7a3644b38bb3155e0d75bd9eb5baecaba8db97/crates%2Fide_completion%2Fsrc%2Frender%2Ftype_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Ftype_alias.rs?ref=7f7a3644b38bb3155e0d75bd9eb5baecaba8db97", "patch": "@@ -1,8 +1,7 @@\n //! Renderer for type aliases.\n \n-use hir::{AsAssocItem, HasSource};\n+use hir::{AsAssocItem, HirDisplay};\n use ide_db::SymbolKind;\n-use syntax::{ast::HasName, display::type_label};\n \n use crate::{item::CompletionItem, render::RenderContext};\n \n@@ -29,16 +28,13 @@ fn render(\n ) -> Option<CompletionItem> {\n     let db = ctx.db();\n \n-    // FIXME: This parses the file!\n-    let ast_node = type_alias.source(db)?.value;\n-    let name = ast_node.name().map(|name| {\n-        if with_eq {\n-            format!(\"{} = \", name.text())\n-        } else {\n-            name.text().to_string()\n-        }\n-    })?;\n-    let detail = type_label(&ast_node);\n+    // FIXME: smolstr?\n+    let name = if with_eq {\n+        format!(\"{} = \", type_alias.name(db))\n+    } else {\n+        type_alias.name(db).to_string()\n+    };\n+    let detail = type_alias.display(db).to_string();\n \n     let mut item = CompletionItem::new(SymbolKind::TypeAlias, ctx.source_range(), name.clone());\n     item.set_documentation(ctx.docs(type_alias))"}, {"sha": "56a2cd6e9dcc2e912592288bbc96332696c5e3b8", "filename": "crates/ide_completion/src/tests/expression.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f7a3644b38bb3155e0d75bd9eb5baecaba8db97/crates%2Fide_completion%2Fsrc%2Ftests%2Fexpression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f7a3644b38bb3155e0d75bd9eb5baecaba8db97/crates%2Fide_completion%2Fsrc%2Ftests%2Fexpression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fexpression.rs?ref=7f7a3644b38bb3155e0d75bd9eb5baecaba8db97", "patch": "@@ -548,7 +548,7 @@ fn func() {\n             ev UnitV       ()\n             ct ASSOC_CONST const ASSOC_CONST: ()\n             fn assoc_fn()  fn()\n-            ta AssocType   type AssocType;\n+            ta AssocType   type AssocType = ()\n         \"#]],\n     );\n }"}, {"sha": "c9a31eea8497928335a608c2156a14d0c6ca4cc0", "filename": "crates/ide_completion/src/tests/pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f7a3644b38bb3155e0d75bd9eb5baecaba8db97/crates%2Fide_completion%2Fsrc%2Ftests%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f7a3644b38bb3155e0d75bd9eb5baecaba8db97/crates%2Fide_completion%2Fsrc%2Ftests%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fpattern.rs?ref=7f7a3644b38bb3155e0d75bd9eb5baecaba8db97", "patch": "@@ -296,7 +296,7 @@ fn func() {\n             ev UnitV       ()\n             ct ASSOC_CONST const ASSOC_CONST: ()\n             fn assoc_fn()  fn()\n-            ta AssocType   type AssocType;\n+            ta AssocType   type AssocType = ()\n         \"#]],\n     );\n }"}, {"sha": "d6c1a787ff9b2a03829ad84eda72f9ad9178436c", "filename": "crates/ide_completion/src/tests/type_pos.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7f7a3644b38bb3155e0d75bd9eb5baecaba8db97/crates%2Fide_completion%2Fsrc%2Ftests%2Ftype_pos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f7a3644b38bb3155e0d75bd9eb5baecaba8db97/crates%2Fide_completion%2Fsrc%2Ftests%2Ftype_pos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Ftype_pos.rs?ref=7f7a3644b38bb3155e0d75bd9eb5baecaba8db97", "patch": "@@ -148,7 +148,7 @@ fn foo<'lt, T: Trait2<$0>, const CONST_PARAM: usize>(_: T) {}\n             kw self\n             kw super\n             kw crate\n-            ta Foo =  (as Trait2) type Foo;\n+            ta Foo =  (as Trait2) type Foo\n             tp T\n             cp CONST_PARAM\n             tt Trait\n@@ -199,7 +199,7 @@ impl Enum {\n fn func(_: Enum::$0) {}\n \"#,\n         expect![[r#\"\n-            ta AssocType type AssocType;\n+            ta AssocType type AssocType = ()\n         \"#]],\n     );\n }"}, {"sha": "d03e94d05832ca60e38792cb979b9ec27dce6f29", "filename": "crates/syntax/src/display.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7f7a3644b38bb3155e0d75bd9eb5baecaba8db97/crates%2Fsyntax%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f7a3644b38bb3155e0d75bd9eb5baecaba8db97/crates%2Fsyntax%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fdisplay.rs?ref=7f7a3644b38bb3155e0d75bd9eb5baecaba8db97", "patch": "@@ -50,21 +50,6 @@ pub fn function_declaration(node: &ast::Fn) -> String {\n     buf\n }\n \n-pub fn type_label(node: &ast::TypeAlias) -> String {\n-    let mut s = String::new();\n-    if let Some(vis) = node.visibility() {\n-        format_to!(s, \"{} \", vis);\n-    }\n-    format_to!(s, \"type \");\n-    if let Some(name) = node.name() {\n-        format_to!(s, \"{}\", name);\n-    } else {\n-        format_to!(s, \"?\");\n-    }\n-    format_to!(s, \";\");\n-    s\n-}\n-\n pub fn macro_label(node: &ast::Macro) -> String {\n     let name = node.name();\n     let mut s = String::new();"}]}