{"sha": "da06898a7539ff66e636a5bf9d3b176b865a2737", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhMDY4OThhNzUzOWZmNjZlNjM2YTViZjlkM2IxNzZiODY1YTI3Mzc=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2019-01-16T18:34:37Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2019-01-16T23:30:11Z"}, "message": "Avoid erase_regions_ty queries if there are no regions to erase\n\nIt's overall faster to perform this extra check than to perform the\nquery, even if the result is already in the query cache.", "tree": {"sha": "b15ea97189b3320c88ab8504f1853e09f3d829c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b15ea97189b3320c88ab8504f1853e09f3d829c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da06898a7539ff66e636a5bf9d3b176b865a2737", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da06898a7539ff66e636a5bf9d3b176b865a2737", "html_url": "https://github.com/rust-lang/rust/commit/da06898a7539ff66e636a5bf9d3b176b865a2737", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da06898a7539ff66e636a5bf9d3b176b865a2737/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ceb2512144d1fc26330e85fb9d41c22ba1866259", "url": "https://api.github.com/repos/rust-lang/rust/commits/ceb2512144d1fc26330e85fb9d41c22ba1866259", "html_url": "https://github.com/rust-lang/rust/commit/ceb2512144d1fc26330e85fb9d41c22ba1866259"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "da7e021b2d54b79d1bd12cc59b1af888f940de88", "filename": "src/librustc/ty/erase_regions.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/da06898a7539ff66e636a5bf9d3b176b865a2737/src%2Flibrustc%2Fty%2Ferase_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da06898a7539ff66e636a5bf9d3b176b865a2737/src%2Flibrustc%2Fty%2Ferase_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ferase_regions.rs?ref=da06898a7539ff66e636a5bf9d3b176b865a2737", "patch": "@@ -1,4 +1,4 @@\n-use ty::{self, Ty, TyCtxt};\n+use ty::{self, Ty, TyCtxt, TypeFlags};\n use ty::fold::{TypeFolder, TypeFoldable};\n \n pub(super) fn provide(providers: &mut ty::query::Providers<'_>) {\n@@ -21,6 +21,11 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n     pub fn erase_regions<T>(self, value: &T) -> T\n         where T : TypeFoldable<'tcx>\n     {\n+        // If there's nothing to erase avoid performing the query at all\n+        if !value.has_type_flags(TypeFlags::HAS_RE_LATE_BOUND | TypeFlags::HAS_FREE_REGIONS) {\n+            return value.clone();\n+        }\n+\n         let value1 = value.fold_with(&mut RegionEraserVisitor { tcx: self });\n         debug!(\"erase_regions({:?}) = {:?}\", value, value1);\n         value1"}]}