{"sha": "71982aa65725a2e630b3abdbb5f48e1abf1acf91", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxOTgyYWE2NTcyNWEyZTYzMGIzYWJkYmI1ZjQ4ZTFhYmYxYWNmOTE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-31T21:41:59Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-31T21:46:11Z"}, "message": "std: Add a process::exit function\n\nThis commit is an implementation of [RFC #1011][rfc] which adds an `exit`\nfunction to the standard library for immediately terminating the current process\nwith a specified exit code.\n\n[rfc]: https://github.com/rust-lang/rfcs/pull/1011", "tree": {"sha": "d90f4cf1e4464e949d155cd7e540f3889e287cf3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d90f4cf1e4464e949d155cd7e540f3889e287cf3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71982aa65725a2e630b3abdbb5f48e1abf1acf91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71982aa65725a2e630b3abdbb5f48e1abf1acf91", "html_url": "https://github.com/rust-lang/rust/commit/71982aa65725a2e630b3abdbb5f48e1abf1acf91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71982aa65725a2e630b3abdbb5f48e1abf1acf91/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80bf31dd514055177b22c3dc66836d39eb5b1648", "url": "https://api.github.com/repos/rust-lang/rust/commits/80bf31dd514055177b22c3dc66836d39eb5b1648", "html_url": "https://github.com/rust-lang/rust/commit/80bf31dd514055177b22c3dc66836d39eb5b1648"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "5f29275df1f8f8fd7cbd4d4eab3322e50a4b878f", "filename": "src/libstd/process.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/71982aa65725a2e630b3abdbb5f48e1abf1acf91/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71982aa65725a2e630b3abdbb5f48e1abf1acf91/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=71982aa65725a2e630b3abdbb5f48e1abf1acf91", "patch": "@@ -527,6 +527,22 @@ impl Child {\n     }\n }\n \n+/// Terminates the current process with the specified exit code.\n+///\n+/// This function will never return and will immediately terminate the current\n+/// process. The exit code is passed through to the underlying OS and will be\n+/// available for consumption by another process.\n+///\n+/// Note that because this function never returns, and that it terminates the\n+/// process, no destructors on the current stack or any other thread's stack\n+/// will be run. If a clean shutdown is needed it is recommended to only call\n+/// this function at a known point where there are no more destructors left\n+/// to run.\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub fn exit(code: i32) -> ! {\n+    ::sys::os::exit(code)\n+}\n+\n #[cfg(test)]\n mod tests {\n     use io::ErrorKind;"}, {"sha": "2ff7eba5732749e63c7bf290ba344070969aee9c", "filename": "src/libstd/sys/unix/os.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/71982aa65725a2e630b3abdbb5f48e1abf1acf91/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71982aa65725a2e630b3abdbb5f48e1abf1acf91/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos.rs?ref=71982aa65725a2e630b3abdbb5f48e1abf1acf91", "patch": "@@ -505,3 +505,7 @@ pub fn home_dir() -> Option<PathBuf> {\n         }\n     }\n }\n+\n+pub fn exit(code: i32) -> ! {\n+    unsafe { libc::exit(code as c_int) }\n+}"}, {"sha": "b930e35c0641f23b6ac034112b8b9ebb8c5d4ce6", "filename": "src/libstd/sys/windows/c.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/71982aa65725a2e630b3abdbb5f48e1abf1acf91/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71982aa65725a2e630b3abdbb5f48e1abf1acf91/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs?ref=71982aa65725a2e630b3abdbb5f48e1abf1acf91", "patch": "@@ -433,6 +433,7 @@ extern \"system\" {\n                             TokenHandle: *mut libc::HANDLE) -> libc::BOOL;\n     pub fn GetCurrentProcess() -> libc::HANDLE;\n     pub fn GetStdHandle(which: libc::DWORD) -> libc::HANDLE;\n+    pub fn ExitProcess(uExitCode: libc::UINT) -> !;\n }\n \n #[link(name = \"userenv\")]"}, {"sha": "cbbce7f8f0ad2f9ebca0250c556404d445b992f4", "filename": "src/libstd/sys/windows/os.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/71982aa65725a2e630b3abdbb5f48e1abf1acf91/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71982aa65725a2e630b3abdbb5f48e1abf1acf91/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs?ref=71982aa65725a2e630b3abdbb5f48e1abf1acf91", "patch": "@@ -379,3 +379,7 @@ pub fn home_dir() -> Option<PathBuf> {\n         }, super::os2path).ok()\n     })\n }\n+\n+pub fn exit(code: i32) -> ! {\n+    unsafe { libc::ExitProcess(code as libc::UINT) }\n+}"}, {"sha": "9ef66ff2d713c6890dfa54dbfb1fe256a72cf826", "filename": "src/test/run-pass/process-exit.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/71982aa65725a2e630b3abdbb5f48e1abf1acf91/src%2Ftest%2Frun-pass%2Fprocess-exit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71982aa65725a2e630b3abdbb5f48e1abf1acf91/src%2Ftest%2Frun-pass%2Fprocess-exit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprocess-exit.rs?ref=71982aa65725a2e630b3abdbb5f48e1abf1acf91", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::env;\n+use std::process::{self, Command, Stdio};\n+\n+fn main() {\n+    let args: Vec<String> = env::args().collect();\n+    if args.len() > 1 && args[1] == \"child\" {\n+        child();\n+    } else {\n+        parent();\n+    }\n+}\n+\n+fn parent() {\n+    let args: Vec<String> = env::args().collect();\n+    let status = Command::new(&args[0]).arg(\"child\").status().unwrap();\n+    assert_eq!(status.code(), Some(2));\n+}\n+\n+fn child() -> i32 {\n+    process::exit(2);\n+}"}]}