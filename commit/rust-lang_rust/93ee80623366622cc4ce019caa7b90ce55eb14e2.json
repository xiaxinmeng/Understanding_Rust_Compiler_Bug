{"sha": "93ee80623366622cc4ce019caa7b90ce55eb14e2", "node_id": "C_kwDOAAsO6NoAKDkzZWU4MDYyMzM2NjYyMmNjNGNlMDE5Y2FhN2I5MGNlNTVlYjE0ZTI", "commit": {"author": {"name": "Jannis Christopher K\u00f6hl", "email": "mail@koehl.dev", "date": "2022-08-29T22:57:49Z"}, "committer": {"name": "Jannis Christopher K\u00f6hl", "email": "mail@koehl.dev", "date": "2022-11-07T09:35:09Z"}, "message": "Update test results", "tree": {"sha": "c8b830a65c7f63c305be545bef6a665c328fd7e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8b830a65c7f63c305be545bef6a665c328fd7e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93ee80623366622cc4ce019caa7b90ce55eb14e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93ee80623366622cc4ce019caa7b90ce55eb14e2", "html_url": "https://github.com/rust-lang/rust/commit/93ee80623366622cc4ce019caa7b90ce55eb14e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93ee80623366622cc4ce019caa7b90ce55eb14e2/comments", "author": {"login": "jachris", "id": 30163784, "node_id": "MDQ6VXNlcjMwMTYzNzg0", "avatar_url": "https://avatars.githubusercontent.com/u/30163784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jachris", "html_url": "https://github.com/jachris", "followers_url": "https://api.github.com/users/jachris/followers", "following_url": "https://api.github.com/users/jachris/following{/other_user}", "gists_url": "https://api.github.com/users/jachris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jachris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jachris/subscriptions", "organizations_url": "https://api.github.com/users/jachris/orgs", "repos_url": "https://api.github.com/users/jachris/repos", "events_url": "https://api.github.com/users/jachris/events{/privacy}", "received_events_url": "https://api.github.com/users/jachris/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jachris", "id": 30163784, "node_id": "MDQ6VXNlcjMwMTYzNzg0", "avatar_url": "https://avatars.githubusercontent.com/u/30163784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jachris", "html_url": "https://github.com/jachris", "followers_url": "https://api.github.com/users/jachris/followers", "following_url": "https://api.github.com/users/jachris/following{/other_user}", "gists_url": "https://api.github.com/users/jachris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jachris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jachris/subscriptions", "organizations_url": "https://api.github.com/users/jachris/orgs", "repos_url": "https://api.github.com/users/jachris/repos", "events_url": "https://api.github.com/users/jachris/events{/privacy}", "received_events_url": "https://api.github.com/users/jachris/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56ff16d19f2a34eaf54bf30a2d71e6924ca1bff0", "url": "https://api.github.com/repos/rust-lang/rust/commits/56ff16d19f2a34eaf54bf30a2d71e6924ca1bff0", "html_url": "https://github.com/rust-lang/rust/commit/56ff16d19f2a34eaf54bf30a2d71e6924ca1bff0"}], "stats": {"total": 72, "additions": 56, "deletions": 16}, "files": [{"sha": "075cf35a545484b7a810019aed31bf81508e1b6b", "filename": "src/test/mir-opt/dataflow-const-prop/issue_81605.f.DataflowConstProp.diff", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/93ee80623366622cc4ce019caa7b90ce55eb14e2/src%2Ftest%2Fmir-opt%2Fdataflow-const-prop%2Fissue_81605.f.DataflowConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/93ee80623366622cc4ce019caa7b90ce55eb14e2/src%2Ftest%2Fmir-opt%2Fdataflow-const-prop%2Fissue_81605.f.DataflowConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fdataflow-const-prop%2Fissue_81605.f.DataflowConstProp.diff?ref=93ee80623366622cc4ce019caa7b90ce55eb14e2", "patch": "@@ -0,0 +1,34 @@\n+- // MIR for `f` before DataflowConstProp\n++ // MIR for `f` after DataflowConstProp\n+  \n+  fn f() -> usize {\n+      let mut _0: usize;                   // return place in scope 0 at $DIR/issue_81605.rs:+0:11: +0:16\n+      let mut _1: usize;                   // in scope 0 at $DIR/issue_81605.rs:+1:9: +1:33\n+      let mut _2: bool;                    // in scope 0 at $DIR/issue_81605.rs:+1:12: +1:16\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/issue_81605.rs:+1:9: +1:33\n+          StorageLive(_2);                 // scope 0 at $DIR/issue_81605.rs:+1:12: +1:16\n+          _2 = const true;                 // scope 0 at $DIR/issue_81605.rs:+1:12: +1:16\n+-         switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/issue_81605.rs:+1:12: +1:16\n++         switchInt(const true) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/issue_81605.rs:+1:12: +1:16\n+      }\n+  \n+      bb1: {\n+          _1 = const 1_usize;              // scope 0 at $DIR/issue_81605.rs:+1:19: +1:20\n+          goto -> bb3;                     // scope 0 at $DIR/issue_81605.rs:+1:9: +1:33\n+      }\n+  \n+      bb2: {\n+          _1 = const 2_usize;              // scope 0 at $DIR/issue_81605.rs:+1:30: +1:31\n+          goto -> bb3;                     // scope 0 at $DIR/issue_81605.rs:+1:9: +1:33\n+      }\n+  \n+      bb3: {\n+          StorageDead(_2);                 // scope 0 at $DIR/issue_81605.rs:+1:32: +1:33\n+          _0 = Add(const 1_usize, move _1); // scope 0 at $DIR/issue_81605.rs:+1:5: +1:33\n+          StorageDead(_1);                 // scope 0 at $DIR/issue_81605.rs:+1:32: +1:33\n+          return;                          // scope 0 at $DIR/issue_81605.rs:+2:2: +2:2\n+      }\n+  }\n+  "}, {"sha": "d75e2a28bef6b61b26ffac6675431e16079c1dfa", "filename": "src/test/mir-opt/dataflow-const-prop/issue_81605.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/93ee80623366622cc4ce019caa7b90ce55eb14e2/src%2Ftest%2Fmir-opt%2Fdataflow-const-prop%2Fissue_81605.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93ee80623366622cc4ce019caa7b90ce55eb14e2/src%2Ftest%2Fmir-opt%2Fdataflow-const-prop%2Fissue_81605.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fdataflow-const-prop%2Fissue_81605.rs?ref=93ee80623366622cc4ce019caa7b90ce55eb14e2", "patch": "@@ -0,0 +1,10 @@\n+// unit-test: DataflowConstProp\n+\n+// EMIT_MIR issue_81605.f.DataflowConstProp.diff\n+fn f() -> usize {\n+    1 + if true { 1 } else { 2 }\n+}\n+\n+fn main() {\n+    f();\n+}"}, {"sha": "b305fa16d1b496cd551aa2dec4c78626660955a3", "filename": "src/test/mir-opt/issue_73223.main.SimplifyArmIdentity.diff", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/93ee80623366622cc4ce019caa7b90ce55eb14e2/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.diff", "raw_url": "https://github.com/rust-lang/rust/raw/93ee80623366622cc4ce019caa7b90ce55eb14e2/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.diff?ref=93ee80623366622cc4ce019caa7b90ce55eb14e2", "patch": "@@ -1,6 +1,6 @@\n - // MIR for `main` before SimplifyArmIdentity\n + // MIR for `main` after SimplifyArmIdentity\n-\n+  \n   fn main() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/issue_73223.rs:+0:11: +0:11\n       let _1: i32;                         // in scope 0 at $DIR/issue_73223.rs:+1:9: +1:14\n@@ -47,7 +47,7 @@\n       scope 2 {\n           debug v => _4;                   // in scope 2 at $DIR/issue_73223.rs:+2:14: +2:15\n       }\n-\n+  \n       bb0: {\n           StorageLive(_1);                 // scope 0 at $DIR/issue_73223.rs:+1:9: +1:14\n           StorageLive(_2);                 // scope 0 at $DIR/issue_73223.rs:+1:23: +1:30\n@@ -57,18 +57,18 @@\n           _3 = const 1_isize;              // scope 0 at $DIR/issue_73223.rs:+1:23: +1:30\n           goto -> bb3;                     // scope 0 at $DIR/issue_73223.rs:+1:17: +1:30\n       }\n-\n+  \n       bb1: {\n           nop;                             // scope 0 at $DIR/issue_73223.rs:+3:17: +3:23\n           StorageDead(_2);                 // scope 0 at $DIR/issue_73223.rs:+4:6: +4:7\n           StorageDead(_1);                 // scope 0 at $DIR/issue_73223.rs:+8:1: +8:2\n           return;                          // scope 0 at $DIR/issue_73223.rs:+8:2: +8:2\n       }\n-\n+  \n       bb2: {\n           unreachable;                     // scope 0 at $DIR/issue_73223.rs:+1:23: +1:30\n       }\n-\n+  \n       bb3: {\n           StorageLive(_4);                 // scope 0 at $DIR/issue_73223.rs:+2:14: +2:15\n           _4 = ((_2 as Some).0: i32);      // scope 0 at $DIR/issue_73223.rs:+2:14: +2:15\n@@ -104,21 +104,17 @@\n           StorageLive(_15);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_16);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_17);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n--\t      _17 = (*_13);                    // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-+\t      _17 = const 1_i32;               // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _17 = const 1_i32;               // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_18);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           _18 = const 1_i32;               // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n--\t      _16 = Eq(move _17, const 1_i32); // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-+\t      _16 = const true;                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _16 = const true;                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageDead(_18);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageDead(_17);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n--\t      _15 = Not(move _16);             // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-+\t      _15 = const false;               // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _15 = const false;               // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageDead(_16);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n--\t      switchInt(move _15) -> [false: bb5, otherwise: bb4]; // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-+\t      goto -> bb5;                     // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          goto -> bb5;                     // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       }\n-\n+  \n       bb4: {\n           StorageLive(_20);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           Deinit(_20);                     // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n@@ -148,7 +144,7 @@\n                                            // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }\n       }\n-\n+  \n       bb5: {\n           nop;                             // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageDead(_15);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n@@ -162,4 +158,4 @@\n           return;                          // scope 0 at $DIR/issue_73223.rs:+8:2: +8:2\n       }\n   }\n-\n+  "}]}