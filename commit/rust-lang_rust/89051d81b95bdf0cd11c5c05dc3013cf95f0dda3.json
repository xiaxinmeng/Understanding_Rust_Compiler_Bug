{"sha": "89051d81b95bdf0cd11c5c05dc3013cf95f0dda3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MDUxZDgxYjk1YmRmMGNkMTFjNWMwNWRjMzAxM2NmOTVmMGRkYTM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-12-13T02:05:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-13T02:05:32Z"}, "message": "Rollup merge of #79834 - m-ou-se:bye-linked-list-extras, r=Mark-Simulacrum\n\nRemove deprecated linked_list_extras methods.\n\nhttps://github.com/rust-lang/rust/issues/27794#issuecomment-667524201:\n> I'd say give it about 2 weeks then remove them.\n\nIt's been 18 weeks. Time to remove them. :)\n\nCloses #27794.", "tree": {"sha": "101b803d743df2af2cbc16f480a6fa9f403a02b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/101b803d743df2af2cbc16f480a6fa9f403a02b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89051d81b95bdf0cd11c5c05dc3013cf95f0dda3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf1XbtCRBK7hj4Ov3rIwAAdHIIAA1qzj0gTInUf9DUybqKQVI8\n29YyqeaR/cNEfAuNNfcVoz4PXgxuYQmtmHxUPWq5JbfBXlQFQiNXjAom5Gs4U2sN\n18igmviidouH8yV3bhiSINMp6Z0xxLkq50o++Hir4UHV5BcNds/kf+DmtgCcsCU7\nsA6wXyBeTm21cUnkJOVESSSYbVf+GIIglHr8Cqkvctt8exZnKKTU9DookyH8Vx1r\nxLo7c2hQ+mwPuofMwGXnT+ckywsay09ChK8y69hf1grglnODv7KHdeyNOSBY93gp\nu4CMJU0EhI1aDNfwMxLWUFTif6WMN34V8Bj4+vDDLJaNMl8yzMUmiBt0bJYEH/E=\n=QyK7\n-----END PGP SIGNATURE-----\n", "payload": "tree 101b803d743df2af2cbc16f480a6fa9f403a02b8\nparent d559bb67073cda2a996fb1b6dc1c83312c29ac5f\nparent 5cab04ea92355ed3a71caf96ac7ffcb638cd37cb\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1607825132 +0900\ncommitter GitHub <noreply@github.com> 1607825132 +0900\n\nRollup merge of #79834 - m-ou-se:bye-linked-list-extras, r=Mark-Simulacrum\n\nRemove deprecated linked_list_extras methods.\n\nhttps://github.com/rust-lang/rust/issues/27794#issuecomment-667524201:\n> I'd say give it about 2 weeks then remove them.\n\nIt's been 18 weeks. Time to remove them. :)\n\nCloses #27794.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89051d81b95bdf0cd11c5c05dc3013cf95f0dda3", "html_url": "https://github.com/rust-lang/rust/commit/89051d81b95bdf0cd11c5c05dc3013cf95f0dda3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89051d81b95bdf0cd11c5c05dc3013cf95f0dda3/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d559bb67073cda2a996fb1b6dc1c83312c29ac5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d559bb67073cda2a996fb1b6dc1c83312c29ac5f", "html_url": "https://github.com/rust-lang/rust/commit/d559bb67073cda2a996fb1b6dc1c83312c29ac5f"}, {"sha": "5cab04ea92355ed3a71caf96ac7ffcb638cd37cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cab04ea92355ed3a71caf96ac7ffcb638cd37cb", "html_url": "https://github.com/rust-lang/rust/commit/5cab04ea92355ed3a71caf96ac7ffcb638cd37cb"}], "stats": {"total": 62, "additions": 0, "deletions": 62}, "files": [{"sha": "4707f12940171105ec41b55547dc0737b5dc09b8", "filename": "library/alloc/src/collections/linked_list.rs", "status": "modified", "additions": 0, "deletions": 62, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/89051d81b95bdf0cd11c5c05dc3013cf95f0dda3/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89051d81b95bdf0cd11c5c05dc3013cf95f0dda3/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list.rs?ref=89051d81b95bdf0cd11c5c05dc3013cf95f0dda3", "patch": "@@ -1099,68 +1099,6 @@ impl<T> ExactSizeIterator for IterMut<'_, T> {}\n #[stable(feature = \"fused\", since = \"1.26.0\")]\n impl<T> FusedIterator for IterMut<'_, T> {}\n \n-impl<T> IterMut<'_, T> {\n-    /// Inserts the given element just after the element most recently returned by `.next()`.\n-    /// The inserted element does not appear in the iteration.\n-    ///\n-    /// This method will be removed soon.\n-    #[inline]\n-    #[unstable(\n-        feature = \"linked_list_extras\",\n-        reason = \"this is probably better handled by a cursor type -- we'll see\",\n-        issue = \"27794\"\n-    )]\n-    #[rustc_deprecated(\n-        reason = \"Deprecated in favor of CursorMut methods. This method will be removed soon.\",\n-        since = \"1.47.0\"\n-    )]\n-    pub fn insert_next(&mut self, element: T) {\n-        match self.head {\n-            // `push_back` is okay with aliasing `element` references\n-            None => self.list.push_back(element),\n-            Some(head) => unsafe {\n-                let prev = match head.as_ref().prev {\n-                    // `push_front` is okay with aliasing nodes\n-                    None => return self.list.push_front(element),\n-                    Some(prev) => prev,\n-                };\n-\n-                let node = Some(\n-                    Box::leak(box Node { next: Some(head), prev: Some(prev), element }).into(),\n-                );\n-\n-                // Not creating references to entire nodes to not invalidate the\n-                // reference to `element` we handed to the user.\n-                (*prev.as_ptr()).next = node;\n-                (*head.as_ptr()).prev = node;\n-\n-                self.list.len += 1;\n-            },\n-        }\n-    }\n-\n-    /// Provides a reference to the next element, without changing the iterator.\n-    ///\n-    /// This method will be removed soon.\n-    #[inline]\n-    #[unstable(\n-        feature = \"linked_list_extras\",\n-        reason = \"this is probably better handled by a cursor type -- we'll see\",\n-        issue = \"27794\"\n-    )]\n-    #[rustc_deprecated(\n-        reason = \"Deprecated in favor of CursorMut methods. This method will be removed soon.\",\n-        since = \"1.47.0\"\n-    )]\n-    pub fn peek_next(&mut self) -> Option<&mut T> {\n-        if self.len == 0 {\n-            None\n-        } else {\n-            unsafe { self.head.as_mut().map(|node| &mut node.as_mut().element) }\n-        }\n-    }\n-}\n-\n /// A cursor over a `LinkedList`.\n ///\n /// A `Cursor` is like an iterator, except that it can freely seek back-and-forth."}]}