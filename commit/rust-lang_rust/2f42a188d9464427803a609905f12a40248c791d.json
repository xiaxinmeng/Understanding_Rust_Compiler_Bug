{"sha": "2f42a188d9464427803a609905f12a40248c791d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmNDJhMTg4ZDk0NjQ0Mjc4MDNhNjA5OTA1ZjEyYTQwMjQ4Yzc5MWQ=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2018-11-21T09:10:16Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2018-12-30T13:47:12Z"}, "message": "Fix failing diagnostic test.", "tree": {"sha": "fee33ca41ec85dd5a49783048447f82bb19d5f28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fee33ca41ec85dd5a49783048447f82bb19d5f28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f42a188d9464427803a609905f12a40248c791d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f42a188d9464427803a609905f12a40248c791d", "html_url": "https://github.com/rust-lang/rust/commit/2f42a188d9464427803a609905f12a40248c791d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f42a188d9464427803a609905f12a40248c791d/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f518cf9ba9f3580c9f6d1d9adf45c4490250c275", "url": "https://api.github.com/repos/rust-lang/rust/commits/f518cf9ba9f3580c9f6d1d9adf45c4490250c275", "html_url": "https://github.com/rust-lang/rust/commit/f518cf9ba9f3580c9f6d1d9adf45c4490250c275"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "f10985a4d0eaa5b0227ff6a4bf64db7acacb8401", "filename": "src/librustc_typeck/check/callee.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2f42a188d9464427803a609905f12a40248c791d/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f42a188d9464427803a609905f12a40248c791d/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs?ref=2f42a188d9464427803a609905f12a40248c791d", "patch": "@@ -145,6 +145,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         }\n \n         self.try_overloaded_call_traits(call_expr, adjusted_ty, Some(arg_exprs))\n+            .or_else(|| self.try_overloaded_call_traits(call_expr, adjusted_ty, None))\n             .map(|(autoref, method)| {\n                 let mut adjustments = autoderef.adjust_steps(self, Needs::None);\n                 adjustments.extend(autoref);"}]}