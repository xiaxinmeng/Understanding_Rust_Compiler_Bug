{"sha": "bb8ac2159feb1739992b1b511a0a9afeaab10a8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiOGFjMjE1OWZlYjE3Mzk5OTJiMWI1MTFhMGE5YWZlYWFiMTBhOGU=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-03-09T03:14:07Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-03-09T09:59:43Z"}, "message": "docs: render rustdoc docs with rustdoc, hack around sundown code-fence\nparsing limitations.\n\nSundown parses\n\n    ```\n    ~~~\n\nas a valid codeblock (i.e. mismatching delimiters), which made using\nrustdoc on its own documentation impossible (since it used nested\ncodeblocks to demonstrate how testable codesnippets worked).\n\nThis modifies those snippets so that they're delimited by indentation,\nbut this then means they're tested by `rustdoc --test` & rendered as\nRust code (because there's no way to add `notrust` to\nindentation-delimited code blocks). A comment is added to stop the\ncompiler reading the text too closely, but this unfortunately has to be\nvisible in the final docs, since that's the text on which the\nhighlighting happens.", "tree": {"sha": "ea9c5ff4eef6a61dd834b5b088c7d8384fc72d25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea9c5ff4eef6a61dd834b5b088c7d8384fc72d25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb8ac2159feb1739992b1b511a0a9afeaab10a8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb8ac2159feb1739992b1b511a0a9afeaab10a8e", "html_url": "https://github.com/rust-lang/rust/commit/bb8ac2159feb1739992b1b511a0a9afeaab10a8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb8ac2159feb1739992b1b511a0a9afeaab10a8e/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d6e2880d2f1b3e00d28957a5e6f540fcfda2556", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d6e2880d2f1b3e00d28957a5e6f540fcfda2556", "html_url": "https://github.com/rust-lang/rust/commit/6d6e2880d2f1b3e00d28957a5e6f540fcfda2556"}], "stats": {"total": 95, "additions": 55, "deletions": 40}, "files": [{"sha": "72ef088704ce183a53d4f739b5009612fc75ca34", "filename": "mk/docs.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb8ac2159feb1739992b1b511a0a9afeaab10a8e/mk%2Fdocs.mk", "raw_url": "https://github.com/rust-lang/rust/raw/bb8ac2159feb1739992b1b511a0a9afeaab10a8e/mk%2Fdocs.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdocs.mk?ref=bb8ac2159feb1739992b1b511a0a9afeaab10a8e", "patch": "@@ -26,7 +26,7 @@\n DOCS := index tutorial guide-ffi guide-macros guide-lifetimes \\\n \tguide-tasks guide-container guide-pointers \\\n \tcomplement-cheatsheet guide-runtime \\\n-\trust\n+\trust rustdoc\n \n RUSTDOC_DEPS_rust := doc/full-toc.inc\n RUSTDOC_FLAGS_rust := --markdown-in-header=doc/full-toc.inc"}, {"sha": "3359cd4f40d9552af25b1b7c865f6d7f625abf5c", "filename": "src/doc/rustdoc.md", "status": "modified", "additions": 54, "deletions": 39, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/bb8ac2159feb1739992b1b511a0a9afeaab10a8e/src%2Fdoc%2Frustdoc.md", "raw_url": "https://github.com/rust-lang/rust/raw/bb8ac2159feb1739992b1b511a0a9afeaab10a8e/src%2Fdoc%2Frustdoc.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc.md?ref=bb8ac2159feb1739992b1b511a0a9afeaab10a8e", "patch": "@@ -20,6 +20,7 @@ comments\":\n //! the crate index page. The ! makes it apply to the parent of the comment,\n //! rather than what follows).\n \n+# mod workaround_the_outer_function_rustdoc_inserts {\n /// Widgets are very common (this is a doc comment, and will show up on\n /// Widget's documentation).\n pub struct Widget {\n@@ -36,6 +37,7 @@ pub fn recalibrate() {\n \t//! `recalibrate`).\n \t/* ... */\n }\n+# }\n ~~~\n \n Doc comments are markdown, and are currently parsed with the\n@@ -94,7 +96,7 @@ source code.\n \n To test documentation, the `--test` argument is passed to rustdoc:\n \n-~~~\n+~~~ {.notrust}\n rustdoc --test crate.rs\n ~~~\n \n@@ -105,56 +107,68 @@ code blocks as testable-by-default. In order to not run a test over a block of\n code, the `ignore` string can be added to the three-backtick form of markdown\n code block.\n \n-~~~\n-```\n-// This is a testable code block\n-```\n+    /**\n+    # nested codefences confuse sundown => indentation + comment to\n+    #  avoid failing tests\n+    ```\n+    // This is a testable code block\n+    ```\n \n-```ignore\n-// This is not a testable code block\n-```\n+    ```ignore\n+    // This is not a testable code block\n+    ```\n \n-    // This is a testable code block (4-space indent)\n-~~~\n+        // This is a testable code block (4-space indent)\n+    */\n+    # fn foo() {}\n \n You can specify that the test's execution should fail with the `should_fail`\n directive.\n \n-~~~\n-```should_fail\n-// This code block is expected to generate a failure when run\n-```\n-~~~\n+    /**\n+    # nested codefences confuse sundown => indentation + comment to\n+    #  avoid failing tests\n+    ```should_fail\n+    // This code block is expected to generate a failure when run\n+    ```\n+    */\n+    # fn foo() {}\n \n You can specify that the code block should be compiled but not run with the\n `no_run` directive.\n \n-~~~\n-```no_run\n-// This code will be compiled but not executed\n-```\n-~~~\n+    /**\n+    # nested codefences confuse sundown => indentation + comment to\n+    #  avoid failing tests\n+    ```no_run\n+    // This code will be compiled but not executed\n+    ```\n+    */\n+    # fn foo() {}\n \n Rustdoc also supplies some extra sugar for helping with some tedious\n documentation examples. If a line is prefixed with `# `, then the line\n will not show up in the HTML documentation, but it will be used when\n testing the code block (NB. the space after the `#` is required, so\n that one can still write things like `#[deriving(Eq)]`).\n \n-~~~\n-```rust\n-# /!\\ The three following lines are comments, which are usually stripped off by\n-# the doc-generating tool.  In order to display them anyway in this particular\n-# case, the character following the leading '#' is not a usual space like in\n-# these first five lines but a non breakable one.\n-#\n-#\u00a0// showing 'fib' in this documentation would just be tedious and detracts from\n-#\u00a0// what's actualy being documented.\n-#\u00a0fn fib(n: int) { n + 2 }\n-\n-do spawn { fib(200); }\n-```\n-~~~\n+    /**\n+    # nested codefences confuse sundown => indentation + comment to\n+    #  avoid failing tests\n+    ```rust\n+    # /!\\ The three following lines are comments, which are usually stripped off by\n+    # the doc-generating tool.  In order to display them anyway in this particular\n+    # case, the character following the leading '#' is not a usual space like in\n+    # these first five lines but a non breakable one.\n+    #\n+    #\u00a0// showing 'fib' in this documentation would just be tedious and detracts from\n+    #\u00a0// what's actualy being documented.\n+    #\u00a0fn fib(n: int) { n + 2 }\n+\n+    do spawn { fib(200); }\n+    ```\n+    */\n+    # fn foo() {}\n \n The documentation online would look like `do spawn { fib(200); }`, but when\n testing this code, the `fib` function will be included (so it can compile).\n@@ -167,12 +181,12 @@ uses is build on crate `test`, which is also used when you compile crates with\n rustc's `--test` flag. Extra arguments can be passed to rustdoc's test harness\n with the `--test-args` flag.\n \n-~~~\n-// Only run tests containing 'foo' in their name\n-rustdoc --test lib.rs --test-args 'foo'\n+~~~ {.notrust}\n+$ # Only run tests containing 'foo' in their name\n+$ rustdoc --test lib.rs --test-args 'foo'\n \n-// See what's possible when running tests\n-rustdoc --test lib.rs --test-args '--help'\n+$ # See what's possible when running tests\n+$ rustdoc --test lib.rs --test-args '--help'\n ~~~\n \n When testing a library, code examples will often show how functions are used,\n@@ -189,6 +203,7 @@ into HTML and testing the code snippets from them. A Markdown file is\n detected by a `.md` or `.markdown` extension.\n \n There are 4 options to modify the output that Rustdoc creates.\n+\n - `--markdown-css PATH`: adds a `<link rel=\"stylesheet\">` tag pointing to `PATH`.\n - `--markdown-in-header FILE`: includes the contents of `FILE` at the\n   end of the `<head>...</head>` section."}]}