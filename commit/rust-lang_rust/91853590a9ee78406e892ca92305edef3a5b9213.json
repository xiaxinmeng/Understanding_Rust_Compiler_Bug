{"sha": "91853590a9ee78406e892ca92305edef3a5b9213", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxODUzNTkwYTllZTc4NDA2ZTg5MmNhOTIzMDVlZGVmM2E1YjkyMTM=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-12-15T20:06:08Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-12-15T20:06:08Z"}, "message": "Add test mark", "tree": {"sha": "911458abbefcddd06e131c410bd1e1710e77ca95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/911458abbefcddd06e131c410bd1e1710e77ca95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91853590a9ee78406e892ca92305edef3a5b9213", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91853590a9ee78406e892ca92305edef3a5b9213", "html_url": "https://github.com/rust-lang/rust/commit/91853590a9ee78406e892ca92305edef3a5b9213", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91853590a9ee78406e892ca92305edef3a5b9213/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e1c2d0df89a390be33c81b6e03a5ad352763593", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e1c2d0df89a390be33c81b6e03a5ad352763593", "html_url": "https://github.com/rust-lang/rust/commit/6e1c2d0df89a390be33c81b6e03a5ad352763593"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "98ba05fc27050400f99c4b9d3b731ebe63356ded", "filename": "crates/ra_hir_ty/src/infer.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91853590a9ee78406e892ca92305edef3a5b9213/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91853590a9ee78406e892ca92305edef3a5b9213/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs?ref=91853590a9ee78406e892ca92305edef3a5b9213", "patch": "@@ -32,6 +32,7 @@ use hir_def::{\n use hir_expand::{diagnostics::DiagnosticSink, name::name};\n use ra_arena::map::ArenaMap;\n use ra_prof::profile;\n+use test_utils::tested_by;\n \n use super::{\n     primitive::{FloatTy, IntTy},\n@@ -282,6 +283,7 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n     fn insert_vars_for_impl_trait(&mut self, ty: Ty) -> Ty {\n         ty.fold(&mut |ty| match ty {\n             Ty::Opaque(preds) => {\n+                tested_by!(insert_vars_for_impl_trait);\n                 let var = self.table.new_type_var();\n                 let var_subst = Substs::builder(1).push(var.clone()).build();\n                 self.obligations.extend("}, {"sha": "fe74acf119b80a953ecf925ae3efce683ff06425", "filename": "crates/ra_hir_ty/src/marks.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/91853590a9ee78406e892ca92305edef3a5b9213/crates%2Fra_hir_ty%2Fsrc%2Fmarks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91853590a9ee78406e892ca92305edef3a5b9213/crates%2Fra_hir_ty%2Fsrc%2Fmarks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fmarks.rs?ref=91853590a9ee78406e892ca92305edef3a5b9213", "patch": "@@ -6,4 +6,5 @@ test_utils::marks!(\n     type_var_resolves_to_int_var\n     match_ergonomics_ref\n     coerce_merge_fail_fallback\n+    insert_vars_for_impl_trait\n );"}, {"sha": "802937cb02a6eeadc94d15353bfa9ce4829fca7b", "filename": "crates/ra_hir_ty/src/tests/traits.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/91853590a9ee78406e892ca92305edef3a5b9213/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91853590a9ee78406e892ca92305edef3a5b9213/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs?ref=91853590a9ee78406e892ca92305edef3a5b9213", "patch": "@@ -1,7 +1,10 @@\n-use super::{infer, infer_with_mismatches, type_at, type_at_pos};\n-use crate::test_db::TestDB;\n use insta::assert_snapshot;\n+\n use ra_db::fixture::WithFixture;\n+use test_utils::covers;\n+\n+use super::{infer, infer_with_mismatches, type_at, type_at_pos};\n+use crate::test_db::TestDB;\n \n #[test]\n fn infer_await() {\n@@ -1489,6 +1492,7 @@ fn test<T, U>() where T: Trait<U::Item>, U: Trait<T::Item> {\n \n #[test]\n fn unify_impl_trait() {\n+    covers!(insert_vars_for_impl_trait);\n     assert_snapshot!(\n         infer_with_mismatches(r#\"\n trait Trait<T> {}"}]}