{"sha": "42661a3b27f039f4eb11ef7c5f4733bb79b4a1ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyNjYxYTNiMjdmMDM5ZjRlYjExZWY3YzVmNDczM2JiNzliNGExZWM=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-11-04T16:33:19Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-11-04T16:33:19Z"}, "message": "Change Option<u32> to u32 for shift value", "tree": {"sha": "024de12385c4356d6159ba78f79eb0275062d2ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/024de12385c4356d6159ba78f79eb0275062d2ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42661a3b27f039f4eb11ef7c5f4733bb79b4a1ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42661a3b27f039f4eb11ef7c5f4733bb79b4a1ec", "html_url": "https://github.com/rust-lang/rust/commit/42661a3b27f039f4eb11ef7c5f4733bb79b4a1ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42661a3b27f039f4eb11ef7c5f4733bb79b4a1ec/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63e42bb5bdd57b8b0155d9e38ebe78e0e864c4d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/63e42bb5bdd57b8b0155d9e38ebe78e0e864c4d5", "html_url": "https://github.com/rust-lang/rust/commit/63e42bb5bdd57b8b0155d9e38ebe78e0e864c4d5"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "1c076b36b3c3bc8d464e72c5a4faca8deca3cd21", "filename": "crates/ra_mbe/src/lib.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/42661a3b27f039f4eb11ef7c5f4733bb79b4a1ec/crates%2Fra_mbe%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42661a3b27f039f4eb11ef7c5f4733bb79b4a1ec/crates%2Fra_mbe%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Flib.rs?ref=42661a3b27f039f4eb11ef7c5f4733bb79b4a1ec", "patch": "@@ -43,7 +43,7 @@ pub use crate::syntax_bridge::{\n pub struct MacroRules {\n     pub(crate) rules: Vec<Rule>,\n     /// Highest id of the token we have in TokenMap\n-    pub(crate) shift: Option<u32>,\n+    pub(crate) shift: u32,\n }\n \n #[derive(Clone, Debug, PartialEq, Eq)]\n@@ -53,14 +53,14 @@ pub(crate) struct Rule {\n }\n \n /// Find the \"shift\" (the highest id of the TokenId) inside a subtree\n-fn find_subtree_shift(tt: &tt::Subtree, mut cur: Option<u32>) -> Option<u32> {\n+fn find_subtree_shift(tt: &tt::Subtree, mut cur: u32) -> u32 {\n     use std::cmp::max;\n \n     for t in &tt.token_trees {\n         cur = match t {\n             tt::TokenTree::Leaf(leaf) => match leaf {\n                 tt::Leaf::Ident(ident) if ident.id != tt::TokenId::unspecified() => {\n-                    Some(max(cur.unwrap_or(0), ident.id.0))\n+                    max(cur, ident.id.0)\n                 }\n                 _ => cur,\n             },\n@@ -110,16 +110,13 @@ impl MacroRules {\n             validate(&rule.lhs)?;\n         }\n \n-        Ok(MacroRules { rules, shift: find_subtree_shift(tt, None) })\n+        Ok(MacroRules { rules, shift: find_subtree_shift(tt, 0) })\n     }\n \n     pub fn expand(&self, tt: &tt::Subtree) -> Result<tt::Subtree, ExpandError> {\n         // apply shift\n         let mut tt = tt.clone();\n-        if let Some(shift) = self.shift {\n-            shift_subtree(&mut tt, shift)\n-        }\n-\n+        shift_subtree(&mut tt, self.shift);\n         mbe_expander::expand(self, &tt)\n     }\n }"}]}