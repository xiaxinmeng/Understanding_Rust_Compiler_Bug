{"sha": "aa69cbde8279cd90457454c3b3f40a36e8a79dff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhNjljYmRlODI3OWNkOTA0NTc0NTRjM2IzZjQwYTM2ZThhNzlkZmY=", "commit": {"author": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2015-01-02T20:50:45Z"}, "committer": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2015-01-06T02:21:13Z"}, "message": "Allow selective macro import", "tree": {"sha": "6fadc77e821fb42ff743b355a5432180848e1a30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fadc77e821fb42ff743b355a5432180848e1a30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa69cbde8279cd90457454c3b3f40a36e8a79dff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa69cbde8279cd90457454c3b3f40a36e8a79dff", "html_url": "https://github.com/rust-lang/rust/commit/aa69cbde8279cd90457454c3b3f40a36e8a79dff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa69cbde8279cd90457454c3b3f40a36e8a79dff/comments", "author": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0816255c80ee3f2a8870ee5e4379e3739d8ed72e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0816255c80ee3f2a8870ee5e4379e3739d8ed72e", "html_url": "https://github.com/rust-lang/rust/commit/0816255c80ee3f2a8870ee5e4379e3739d8ed72e"}], "stats": {"total": 307, "additions": 299, "deletions": 8}, "files": [{"sha": "171bfd74a816b4604c281b7ac1933a002d453447", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=aa69cbde8279cd90457454c3b3f40a36e8a79dff", "patch": "@@ -552,7 +552,10 @@ impl<'a> PluginMetadata<'a> {\n                     id: ast::DUMMY_NODE_ID,\n                     span: span,\n                     imported_from: imported_from,\n-                    export: false,  // overridden in plugin/load.rs\n+                    // overridden in plugin/load.rs\n+                    export: false,\n+                    use_locally: false,\n+\n                     body: body,\n                 });\n                 true"}, {"sha": "3a9083828fc703148dab8fd6b6731668a7e39b37", "filename": "src/librustc/plugin/load.rs", "status": "modified", "additions": 28, "deletions": 5, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Flibrustc%2Fplugin%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Flibrustc%2Fplugin%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fplugin%2Fload.rs?ref=aa69cbde8279cd90457454c3b3f40a36e8a79dff", "patch": "@@ -87,8 +87,8 @@ impl<'a, 'v> Visitor<'v> for PluginLoader<'a> {\n         }\n \n         // Parse the attributes relating to macro / plugin loading.\n-        let mut load_macros = false;\n         let mut load_registrar = false;\n+        let mut macro_selection = Some(HashSet::new());  // None => load all\n         let mut reexport = HashSet::new();\n         for attr in vi.attrs.iter() {\n             let mut used = true;\n@@ -98,7 +98,22 @@ impl<'a, 'v> Visitor<'v> for PluginLoader<'a> {\n                                        #[macro_use], #[plugin], and/or #[no_link]\");\n                 }\n                 \"plugin\" => load_registrar = true,\n-                \"macro_use\" => load_macros = true,\n+                \"macro_use\" => {\n+                    let names = attr.meta_item_list();\n+                    if names.is_none() {\n+                        // no names => load all\n+                        macro_selection = None;\n+                    }\n+                    if let (Some(sel), Some(names)) = (macro_selection.as_mut(), names) {\n+                        for name in names.iter() {\n+                            if let ast::MetaWord(ref name) = name.node {\n+                                sel.insert(name.clone());\n+                            } else {\n+                                self.sess.span_err(name.span, \"bad macro import\");\n+                            }\n+                        }\n+                    }\n+                }\n                 \"macro_reexport\" => {\n                     let names = match attr.meta_item_list() {\n                         Some(names) => names,\n@@ -126,6 +141,11 @@ impl<'a, 'v> Visitor<'v> for PluginLoader<'a> {\n         let mut macros = vec![];\n         let mut registrar = None;\n \n+        let load_macros = match macro_selection.as_ref() {\n+            Some(sel) => sel.len() != 0 || reexport.len() != 0,\n+            None => true,\n+        };\n+\n         if load_macros || load_registrar {\n             let pmd = self.reader.read_plugin_metadata(vi);\n             if load_macros {\n@@ -137,9 +157,12 @@ impl<'a, 'v> Visitor<'v> for PluginLoader<'a> {\n         }\n \n         for mut def in macros.into_iter() {\n-            if reexport.contains(&token::get_ident(def.ident)) {\n-                def.export = true;\n-            }\n+            let name = token::get_ident(def.ident);\n+            def.use_locally = match macro_selection.as_ref() {\n+                None => true,\n+                Some(sel) => sel.contains(&name),\n+            };\n+            def.export = reexport.contains(&name);\n             self.plugins.macros.push(def);\n         }\n "}, {"sha": "0f90e31c17eeef9afde9a8880e6092343fc30010", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=aa69cbde8279cd90457454c3b3f40a36e8a79dff", "patch": "@@ -1709,6 +1709,7 @@ pub struct MacroDef {\n     pub span: Span,\n     pub imported_from: Option<Ident>,\n     pub export: bool,\n+    pub use_locally: bool,\n     pub body: Vec<TokenTree>,\n }\n "}, {"sha": "91ae7396ea46920b4a97f1b188e30b9a714f2438", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=aa69cbde8279cd90457454c3b3f40a36e8a79dff", "patch": "@@ -574,8 +574,10 @@ impl<'a> ExtCtxt<'a> {\n         if def.export {\n             self.exported_macros.push(def.clone());\n         }\n-        let ext = macro_rules::compile(self, &def);\n-        self.syntax_env.insert(def.ident.name, ext);\n+        if def.use_locally {\n+            let ext = macro_rules::compile(self, &def);\n+            self.syntax_env.insert(def.ident.name, ext);\n+        }\n     }\n \n     /// Emit `msg` attached to `sp`, and stop compilation immediately."}, {"sha": "d3f2e0ea095b6e8b6411b1a5f8644fc13b08eb78", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=aa69cbde8279cd90457454c3b3f40a36e8a79dff", "patch": "@@ -636,6 +636,7 @@ pub fn expand_item_mac(it: P<ast::Item>,\n                         span: it.span,\n                         imported_from: None,\n                         export: attr::contains_name(it.attrs.as_slice(), \"macro_export\"),\n+                        use_locally: true,\n                         body: tts,\n                     };\n                     fld.cx.insert_macro(def);"}, {"sha": "63142b0a69935bd63308ef2a8ff8321fece1c287", "filename": "src/test/auxiliary/macro_reexport_2_no_use.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Fauxiliary%2Fmacro_reexport_2_no_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Fauxiliary%2Fmacro_reexport_2_no_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fmacro_reexport_2_no_use.rs?ref=aa69cbde8279cd90457454c3b3f40a36e8a79dff", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"dylib\"]\n+\n+#[macro_reexport(reexported)]\n+#[no_link]\n+extern crate macro_reexport_1;"}, {"sha": "39393b77f25f0e0bd3b505f678fda1d9f4a9eca2", "filename": "src/test/auxiliary/two_macros.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Fauxiliary%2Ftwo_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Fauxiliary%2Ftwo_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ftwo_macros.rs?ref=aa69cbde8279cd90457454c3b3f40a36e8a79dff", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(macro_rules)]\n+\n+#[macro_export]\n+macro_rules! macro_one { () => (\"one\") }\n+\n+#[macro_export]\n+macro_rules! macro_two { () => (\"two\") }"}, {"sha": "fbf6287db9444fcd18a9855b0e9e84ef01615586", "filename": "src/test/compile-fail/empty-macro-use.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Fcompile-fail%2Fempty-macro-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Fcompile-fail%2Fempty-macro-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fempty-macro-use.rs?ref=aa69cbde8279cd90457454c3b3f40a36e8a79dff", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:two_macros.rs\n+// ignore-stage1\n+\n+#[macro_use()]\n+extern crate two_macros;\n+\n+pub fn main() {\n+    macro_two!();  //~ ERROR macro undefined\n+}"}, {"sha": "c8e59f98d3cea2ec9d51486f715911e02eca134c", "filename": "src/test/compile-fail/macro-reexport-not-locally-visible.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-not-locally-visible.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-not-locally-visible.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-not-locally-visible.rs?ref=aa69cbde8279cd90457454c3b3f40a36e8a79dff", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:macro_reexport_1.rs\n+// ignore-stage1\n+\n+#[macro_reexport(reexported)]\n+#[no_link]\n+extern crate macro_reexport_1;\n+\n+fn main() {\n+    assert_eq!(reexported!(), 3u);  //~ ERROR macro undefined\n+}"}, {"sha": "a73c4adb71f9ff0e651b535de78e0b15d6aadc22", "filename": "src/test/compile-fail/macro-use-bad-args-1.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Fcompile-fail%2Fmacro-use-bad-args-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Fcompile-fail%2Fmacro-use-bad-args-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-use-bad-args-1.rs?ref=aa69cbde8279cd90457454c3b3f40a36e8a79dff", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[macro_use(foo(bar))]  //~ ERROR bad macro import\n+extern crate std;\n+\n+fn main() {\n+}"}, {"sha": "31efe857605b412730e4b943ab7f4e4ab2895d7e", "filename": "src/test/compile-fail/macro-use-bad-args-2.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Fcompile-fail%2Fmacro-use-bad-args-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Fcompile-fail%2Fmacro-use-bad-args-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-use-bad-args-2.rs?ref=aa69cbde8279cd90457454c3b3f40a36e8a79dff", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[macro_use(foo=\"bar\")]  //~ ERROR bad macro import\n+extern crate std;\n+\n+fn main() {\n+}"}, {"sha": "4e0486f0db7e9e649a2866dd40e45ea66395b37d", "filename": "src/test/compile-fail/macro-use-wrong-name.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Fcompile-fail%2Fmacro-use-wrong-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Fcompile-fail%2Fmacro-use-wrong-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-use-wrong-name.rs?ref=aa69cbde8279cd90457454c3b3f40a36e8a79dff", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:two_macros.rs\n+// ignore-stage1\n+\n+#[macro_use(macro_one)]\n+extern crate two_macros;\n+\n+pub fn main() {\n+    macro_two!();  //~ ERROR macro undefined\n+}"}, {"sha": "0153d71fb268fbbdbb93fe4c8c69034f10c788af", "filename": "src/test/compile-fail/missing-macro-use.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Fcompile-fail%2Fmissing-macro-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Fcompile-fail%2Fmissing-macro-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmissing-macro-use.rs?ref=aa69cbde8279cd90457454c3b3f40a36e8a79dff", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:two_macros.rs\n+// ignore-stage1\n+\n+extern crate two_macros;\n+\n+pub fn main() {\n+    macro_two!();  //~ ERROR macro undefined\n+}"}, {"sha": "77ef9421273ef96d846512a811ec85e6083f8c3a", "filename": "src/test/run-pass/macro-reexport-no-intermediate-use.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Frun-pass%2Fmacro-reexport-no-intermediate-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Frun-pass%2Fmacro-reexport-no-intermediate-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-reexport-no-intermediate-use.rs?ref=aa69cbde8279cd90457454c3b3f40a36e8a79dff", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:macro_reexport_1.rs\n+// aux-build:macro_reexport_2_no_use.rs\n+// ignore-stage1\n+\n+#[macro_use] #[no_link]\n+extern crate macro_reexport_2_no_use;\n+\n+fn main() {\n+    assert_eq!(reexported!(), 3u);\n+}"}, {"sha": "b46910290a8a09d3c139baedb7b2c5cf78294161", "filename": "src/test/run-pass/macro-use-all-and-none.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Frun-pass%2Fmacro-use-all-and-none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Frun-pass%2Fmacro-use-all-and-none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-use-all-and-none.rs?ref=aa69cbde8279cd90457454c3b3f40a36e8a79dff", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:two_macros.rs\n+// ignore-stage1\n+\n+#[macro_use]\n+#[macro_use()]\n+extern crate two_macros;\n+\n+pub fn main() {\n+    macro_one!();\n+    macro_two!();\n+}"}, {"sha": "cf72d2c623044149cf8a27a548b2467c0b6a0d3c", "filename": "src/test/run-pass/macro-use-all.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Frun-pass%2Fmacro-use-all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Frun-pass%2Fmacro-use-all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-use-all.rs?ref=aa69cbde8279cd90457454c3b3f40a36e8a79dff", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:two_macros.rs\n+// ignore-stage1\n+\n+#[macro_use]\n+extern crate two_macros;\n+\n+pub fn main() {\n+    macro_one!();\n+    macro_two!();\n+}"}, {"sha": "4b0814bef04b811516938725cef95a1d8ca9506d", "filename": "src/test/run-pass/macro-use-both.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Frun-pass%2Fmacro-use-both.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Frun-pass%2Fmacro-use-both.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-use-both.rs?ref=aa69cbde8279cd90457454c3b3f40a36e8a79dff", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:two_macros.rs\n+// ignore-stage1\n+\n+#[macro_use(macro_one, macro_two)]\n+extern crate two_macros;\n+\n+pub fn main() {\n+    macro_one!();\n+    macro_two!();\n+}"}, {"sha": "7911fec94da8bd74b915fbff33557368d93e3d97", "filename": "src/test/run-pass/macro-use-one.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Frun-pass%2Fmacro-use-one.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Frun-pass%2Fmacro-use-one.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-use-one.rs?ref=aa69cbde8279cd90457454c3b3f40a36e8a79dff", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:two_macros.rs\n+// ignore-stage1\n+\n+#[macro_use(macro_two)]\n+extern crate two_macros;\n+\n+pub fn main() {\n+    macro_two!();\n+}"}, {"sha": "51c0b75e8fbe6d41fcc7446c3e0eb6c90c183654", "filename": "src/test/run-pass/two-macro-use.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Frun-pass%2Ftwo-macro-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa69cbde8279cd90457454c3b3f40a36e8a79dff/src%2Ftest%2Frun-pass%2Ftwo-macro-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftwo-macro-use.rs?ref=aa69cbde8279cd90457454c3b3f40a36e8a79dff", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:two_macros.rs\n+// ignore-stage1\n+\n+#[macro_use(macro_one)]\n+#[macro_use(macro_two)]\n+extern crate two_macros;\n+\n+pub fn main() {\n+    macro_one!();\n+    macro_two!();\n+}"}]}