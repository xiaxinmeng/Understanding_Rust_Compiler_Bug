{"sha": "232c1f331c8703f6484e29b8da1cec9bb67f443e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzMmMxZjMzMWM4NzAzZjY0ODRlMjliOGRhMWNlYzliYjY3ZjQ0M2U=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-01-05T00:04:18Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-02-21T18:42:28Z"}, "message": "Format code", "tree": {"sha": "921d4e2c50d9e33fc6bff3b29b5ceb1a8aead9e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/921d4e2c50d9e33fc6bff3b29b5ceb1a8aead9e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/232c1f331c8703f6484e29b8da1cec9bb67f443e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/232c1f331c8703f6484e29b8da1cec9bb67f443e", "html_url": "https://github.com/rust-lang/rust/commit/232c1f331c8703f6484e29b8da1cec9bb67f443e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/232c1f331c8703f6484e29b8da1cec9bb67f443e/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec501903994911892bb43c388564326b70b7104b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec501903994911892bb43c388564326b70b7104b", "html_url": "https://github.com/rust-lang/rust/commit/ec501903994911892bb43c388564326b70b7104b"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "b2169413f46efed7ad2d5de9f23b2feb4828755d", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/232c1f331c8703f6484e29b8da1cec9bb67f443e/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/232c1f331c8703f6484e29b8da1cec9bb67f443e/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=232c1f331c8703f6484e29b8da1cec9bb67f443e", "patch": "@@ -435,23 +435,18 @@ fn check_trait(tcx: TyCtxt<'_>, item: &hir::Item<'_>) {\n ///\n /// Assuming the defaults are used, check that all predicates (bounds on the\n /// assoc type and where clauses on the trait) hold.\n-fn check_associated_type_defaults(\n-    fcx: &FnCtxt<'_, '_>,\n-    trait_def_id: DefId,\n-) {\n+fn check_associated_type_defaults(fcx: &FnCtxt<'_, '_>, trait_def_id: DefId) {\n     let tcx = fcx.tcx;\n     let substs = InternalSubsts::identity_for_item(tcx, trait_def_id);\n \n     // For all assoc. types with defaults, build a map from\n     // `<Self as Trait<...>>::Assoc` to the default type.\n-    let map = tcx.associated_items(trait_def_id)\n+    let map = tcx\n+        .associated_items(trait_def_id)\n         .filter_map(|item| {\n             if item.kind == ty::AssocKind::Type && item.defaultness.has_value() {\n                 // `<Self as Trait<...>>::Assoc`\n-                let proj = ty::ProjectionTy {\n-                    substs,\n-                    item_def_id: item.def_id,\n-                };\n+                let proj = ty::ProjectionTy { substs, item_def_id: item.def_id };\n                 let default_ty = tcx.type_of(item.def_id);\n                 debug!(\"assoc. type default mapping: {} -> {}\", proj, default_ty);\n                 Some((proj, default_ty))"}]}