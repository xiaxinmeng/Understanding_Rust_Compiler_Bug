{"sha": "6404620f18da68a07299d6fe02d886141b9d0347", "node_id": "C_kwDOAAsO6NoAKDY0MDQ2MjBmMThkYTY4YTA3Mjk5ZDZmZTAyZDg4NjE0MWI5ZDAzNDc", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-07-01T14:49:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-01T14:49:21Z"}, "message": "Rollup merge of #98756 - TaKO8Ki:use-const-instead-of-function, r=Dylan-DPC\n\nUse const instead of function and make it private", "tree": {"sha": "b2b619cbf281f8b3ef69958a213a9773382dc720", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2b619cbf281f8b3ef69958a213a9773382dc720"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6404620f18da68a07299d6fe02d886141b9d0347", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJivwlyCRBK7hj4Ov3rIwAA2/kIAKizf5/TPsfojZ3JyGWFffZZ\nTCoq5mXIetaiM5KFINhSqjpu5SiawkGXDIukY4FVLbmqxRUR5YlS3VbUmExJmhBm\nEYJpuoQ7I+tgroyqszoVS21e8pVV9jrUCroVgcV4nDH+2hh9d0XxsCYKLDqr/PuH\nFe9Q3AxROO3VkfjA7JDenoFZS4x72D0t6vIb1QETfyTspCp2JMDY1vwqxTVaQXIn\nQRICnDVoWsf/ON1mNHNQEHLMVOaZjZTwtgwalwhpT1wohjX4buls2/gAZ72K4pBq\njKldOCaoVXFs4Eyxw7mZ7cQ67g6zBResMnFzM+DwYGRqCFhloDkKx8AjVIS6avs=\n=EjmF\n-----END PGP SIGNATURE-----\n", "payload": "tree b2b619cbf281f8b3ef69958a213a9773382dc720\nparent c0cf363ca17070540fbbb6bd1b47f75861a0cdb0\nparent f791ac6a798a6b4c1b2b0c59e904e08340ff593e\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1656686961 +0530\ncommitter GitHub <noreply@github.com> 1656686961 +0530\n\nRollup merge of #98756 - TaKO8Ki:use-const-instead-of-function, r=Dylan-DPC\n\nUse const instead of function and make it private\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6404620f18da68a07299d6fe02d886141b9d0347", "html_url": "https://github.com/rust-lang/rust/commit/6404620f18da68a07299d6fe02d886141b9d0347", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6404620f18da68a07299d6fe02d886141b9d0347/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0cf363ca17070540fbbb6bd1b47f75861a0cdb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0cf363ca17070540fbbb6bd1b47f75861a0cdb0", "html_url": "https://github.com/rust-lang/rust/commit/c0cf363ca17070540fbbb6bd1b47f75861a0cdb0"}, {"sha": "f791ac6a798a6b4c1b2b0c59e904e08340ff593e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f791ac6a798a6b4c1b2b0c59e904e08340ff593e", "html_url": "https://github.com/rust-lang/rust/commit/f791ac6a798a6b4c1b2b0c59e904e08340ff593e"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "0dac4f8978e0d190b45773dc3aa069b9c0bb83e8", "filename": "compiler/rustc_const_eval/src/const_eval/eval_queries.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6404620f18da68a07299d6fe02d886141b9d0347/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6404620f18da68a07299d6fe02d886141b9d0347/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Feval_queries.rs?ref=6404620f18da68a07299d6fe02d886141b9d0347", "patch": "@@ -19,11 +19,9 @@ use rustc_target::abi::{self, Abi};\n use std::borrow::Cow;\n use std::convert::TryInto;\n \n-pub fn note_on_undefined_behavior_error() -> &'static str {\n-    \"The rules on what exactly is undefined behavior aren't clear, \\\n+const NOTE_ON_UNDEFINED_BEHAVIOR_ERROR: &str = \"The rules on what exactly is undefined behavior aren't clear, \\\n      so this check might be overzealous. Please open an issue on the rustc \\\n-     repository if you believe it should not be considered undefined behavior.\"\n-}\n+     repository if you believe it should not be considered undefined behavior.\";\n \n // Returns a pointer to where the result lives\n fn eval_body_using_ecx<'mir, 'tcx>(\n@@ -375,7 +373,7 @@ pub fn eval_to_allocation_raw_provider<'tcx>(\n                     ecx.tcx,\n                     \"it is undefined behavior to use this value\",\n                     |diag| {\n-                        diag.note(note_on_undefined_behavior_error());\n+                        diag.note(NOTE_ON_UNDEFINED_BEHAVIOR_ERROR);\n                         diag.note(&format!(\n                             \"the raw bytes of the constant ({}\",\n                             display_allocation("}]}