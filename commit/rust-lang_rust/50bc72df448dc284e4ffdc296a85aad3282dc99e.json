{"sha": "50bc72df448dc284e4ffdc296a85aad3282dc99e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwYmM3MmRmNDQ4ZGMyODRlNGZmZGMyOTZhODVhYWQzMjgyZGM5OWU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-16T20:24:10Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-17T09:18:30Z"}, "message": "Make sure the float comparison output is consistent with the expected\nbehavior when NaN is involved.", "tree": {"sha": "4d092a01f742955d371e6aff79b1322907e4fabd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d092a01f742955d371e6aff79b1322907e4fabd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50bc72df448dc284e4ffdc296a85aad3282dc99e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlr9SOcACgkQ/vbIBR0O\nATwqsBAAnH/zxWpvQKKng3khIPHMumWk6EP2Lhfjd+7FIlwOqG61bQeLUGvzwji0\nE7tlwGVW8qAzsHkzIV0YE9vqHDIEgLipSpMZuJ3JqMCacI2iAG1/Tsy1uLPlkCM5\nHIAO1As5xl0PzjBxV5zlxecAqvDTBPoXXWA+POUyXYuReDEA5MOg9/IoJptzm7F0\n3eBPbt64hTj67b6eGowEI4ZPmBDC4d0dwXkZCHWmIJxwjG874SRgdFnUsw4E0KLF\nyYSAqKrkpHOG32PKfRPpYlGB/2gVTROgiRr6gdvJcm/+FqVCVq1pY2kYqeHHLtfF\nOfNu5fUxzef9B/k6nu4V51cQeIkP1hqG2JEv8ow9nsdc1ZEKU5aETEXrv+RCTNmO\nCH1Opl7BLefA3YmcUsRJ9krIES5dOMLZ+EuuZ3AkmlPepZdHQGIJ2IuFncmOeAl+\n9hCvxJdVcMAPkUtZ+gMUC8nOZ7J+HJwu2t4ai6lI5JX1ePfi0uUXVA5HO7DHr/0l\nFLaHASLzBKdgys8HFu509NOu5WAvisLHkGICyuqpmHAuw0MdmH8wjPl+1ZSV6OpR\n6w1VPRnJsulKQEeyo95G06ZdtRbpqC2JwF9nJ6R2HjqNO1+vRTAXykh93ranEzo2\ntTmAkiraXRWkMuaOl6OrMhgP02EwBZHhwsSlqw/0T/pmBMr09X4=\n=EbFI\n-----END PGP SIGNATURE-----", "payload": "tree 4d092a01f742955d371e6aff79b1322907e4fabd\nparent ed9a29a976f8b73f3fc91a10d0b5addd86a394c7\nauthor kennytm <kennytm@gmail.com> 1526502250 +0800\ncommitter kennytm <kennytm@gmail.com> 1526548710 +0800\n\nMake sure the float comparison output is consistent with the expected\nbehavior when NaN is involved.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50bc72df448dc284e4ffdc296a85aad3282dc99e", "html_url": "https://github.com/rust-lang/rust/commit/50bc72df448dc284e4ffdc296a85aad3282dc99e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50bc72df448dc284e4ffdc296a85aad3282dc99e/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed9a29a976f8b73f3fc91a10d0b5addd86a394c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed9a29a976f8b73f3fc91a10d0b5addd86a394c7", "html_url": "https://github.com/rust-lang/rust/commit/ed9a29a976f8b73f3fc91a10d0b5addd86a394c7"}], "stats": {"total": 78, "additions": 71, "deletions": 7}, "files": [{"sha": "a4a36b0b35581ca43154329f5f954545cbf17659", "filename": "src/librustc_mir/interpret/operator.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/50bc72df448dc284e4ffdc296a85aad3282dc99e/src%2Flibrustc_mir%2Finterpret%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50bc72df448dc284e4ffdc296a85aad3282dc99e/src%2Flibrustc_mir%2Finterpret%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperator.rs?ref=50bc72df448dc284e4ffdc296a85aad3282dc99e", "patch": "@@ -1,7 +1,6 @@\n use rustc::mir;\n use rustc::ty::{self, Ty};\n use syntax::ast::FloatTy;\n-use std::cmp::Ordering;\n use rustc::ty::layout::LayoutOf;\n use rustc_apfloat::ieee::{Double, Single};\n use rustc_apfloat::Float;\n@@ -181,12 +180,12 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n                     let l = <$ty>::from_bits(l);\n                     let r = <$ty>::from_bits(r);\n                     let val = match bin_op {\n-                        Eq => PrimVal::from_bool(l.partial_cmp(&r).unwrap_or(Ordering::Greater) == Ordering::Equal),\n-                        Ne => PrimVal::from_bool(l.partial_cmp(&r).unwrap_or(Ordering::Greater) != Ordering::Equal),\n-                        Lt => PrimVal::from_bool(l.partial_cmp(&r).unwrap_or(Ordering::Greater) == Ordering::Less),\n-                        Le => PrimVal::from_bool(l.partial_cmp(&r).unwrap_or(Ordering::Greater) != Ordering::Greater),\n-                        Gt => PrimVal::from_bool(l.partial_cmp(&r).unwrap_or(Ordering::Greater) == Ordering::Greater),\n-                        Ge => PrimVal::from_bool(l.partial_cmp(&r).unwrap_or(Ordering::Greater) != Ordering::Less),\n+                        Eq => PrimVal::from_bool(l == r),\n+                        Ne => PrimVal::from_bool(l != r),\n+                        Lt => PrimVal::from_bool(l < r),\n+                        Le => PrimVal::from_bool(l <= r),\n+                        Gt => PrimVal::from_bool(l > r),\n+                        Ge => PrimVal::from_bool(l >= r),\n                         Add => PrimVal::Bytes((l + r).value.to_bits()),\n                         Sub => PrimVal::Bytes((l - r).value.to_bits()),\n                         Mul => PrimVal::Bytes((l * r).value.to_bits()),"}, {"sha": "05b168d98f1f24c9fc470882688c84880731a036", "filename": "src/test/run-pass/issue-50811.rs", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/50bc72df448dc284e4ffdc296a85aad3282dc99e/src%2Ftest%2Frun-pass%2Fissue-50811.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50bc72df448dc284e4ffdc296a85aad3282dc99e/src%2Ftest%2Frun-pass%2Fissue-50811.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-50811.rs?ref=50bc72df448dc284e4ffdc296a85aad3282dc99e", "patch": "@@ -0,0 +1,65 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(test)]\n+\n+extern crate test;\n+\n+use std::f64::{NAN, NEG_INFINITY, INFINITY, MAX};\n+use std::mem::size_of;\n+use test::black_box;\n+\n+// Ensure the const-eval result and runtime result of float comparison are equivalent.\n+\n+macro_rules! compare {\n+    ($op:tt) => {\n+        compare!(\n+            [NEG_INFINITY, -MAX, -1.0, -0.0, 0.0, 1.0, MAX, INFINITY, NAN],\n+            $op\n+        );\n+    };\n+    ([$($lhs:expr),+], $op:tt) => {\n+        $(compare!(\n+            $lhs,\n+            $op,\n+            [NEG_INFINITY, -MAX, -1.0, -0.0, 0.0, 1.0, MAX, INFINITY, NAN]\n+        );)+\n+    };\n+    ($lhs:expr, $op:tt, [$($rhs:expr),+]) => {\n+        $({\n+            // Wrap the check in its own function to reduce time needed to borrowck.\n+            fn check() {\n+                static CONST_EVAL: bool = $lhs $op $rhs;\n+                let runtime_eval = black_box($lhs) $op black_box($rhs);\n+                assert_eq!(CONST_EVAL, runtime_eval, stringify!($lhs $op $rhs));\n+                assert_eq!(\n+                    size_of::<[u8; ($lhs $op $rhs) as usize]>(),\n+                    runtime_eval as usize,\n+                    stringify!($lhs $op $rhs (forced const eval))\n+                );\n+            }\n+            check();\n+        })+\n+    };\n+}\n+\n+fn main() {\n+    assert_eq!(0.0/0.0 < 0.0/0.0, false);\n+    assert_eq!(0.0/0.0 > 0.0/0.0, false);\n+    assert_eq!(NAN < NAN, false);\n+    assert_eq!(NAN > NAN, false);\n+\n+    compare!(==);\n+    compare!(!=);\n+    compare!(<);\n+    compare!(<=);\n+    compare!(>);\n+    compare!(>=);\n+}"}]}