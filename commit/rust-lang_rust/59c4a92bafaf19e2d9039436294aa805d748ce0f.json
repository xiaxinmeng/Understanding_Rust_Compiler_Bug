{"sha": "59c4a92bafaf19e2d9039436294aa805d748ce0f", "node_id": "C_kwDOAAsO6NoAKDU5YzRhOTJiYWZhZjE5ZTJkOTAzOTQzNjI5NGFhODA1ZDc0OGNlMGY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-22T22:53:32Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-24T19:26:54Z"}, "message": "Resolve async fn signature even without body (in trait)", "tree": {"sha": "f78cd6c268d974bdbe3782685a96f9b334babf83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f78cd6c268d974bdbe3782685a96f9b334babf83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59c4a92bafaf19e2d9039436294aa805d748ce0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59c4a92bafaf19e2d9039436294aa805d748ce0f", "html_url": "https://github.com/rust-lang/rust/commit/59c4a92bafaf19e2d9039436294aa805d748ce0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59c4a92bafaf19e2d9039436294aa805d748ce0f/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6580010551063718462f9dfe41c9490d92994d0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6580010551063718462f9dfe41c9490d92994d0e", "html_url": "https://github.com/rust-lang/rust/commit/6580010551063718462f9dfe41c9490d92994d0e"}], "stats": {"total": 105, "additions": 98, "deletions": 7}, "files": [{"sha": "d38eca23ade1072d319541549ad2e03656472013", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/59c4a92bafaf19e2d9039436294aa805d748ce0f/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59c4a92bafaf19e2d9039436294aa805d748ce0f/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=59c4a92bafaf19e2d9039436294aa805d748ce0f", "patch": "@@ -789,9 +789,8 @@ impl<'a: 'ast, 'ast> Visitor<'ast> for LateResolutionVisitor<'a, '_, 'ast> {\n         let previous_value = self.diagnostic_metadata.current_function;\n         match fn_kind {\n             // Bail if the function is foreign, and thus cannot validly have\n-            // a body, or if there's no body for some other reason.\n-            FnKind::Fn(FnCtxt::Foreign, _, sig, _, generics, _)\n-            | FnKind::Fn(_, _, sig, _, generics, None) => {\n+            // a body.\n+            FnKind::Fn(FnCtxt::Foreign, _, sig, _, generics, _) => {\n                 self.visit_fn_header(&sig.header);\n                 self.visit_generics(generics);\n                 self.with_lifetime_rib("}, {"sha": "f61b34ed99e00b56cad0c4ff3432fbe38bdbc3bf", "filename": "src/test/ui/async-await/in-trait/issue-102138.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/59c4a92bafaf19e2d9039436294aa805d748ce0f/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fissue-102138.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59c4a92bafaf19e2d9039436294aa805d748ce0f/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fissue-102138.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fissue-102138.rs?ref=59c4a92bafaf19e2d9039436294aa805d748ce0f", "patch": "@@ -0,0 +1,46 @@\n+// check-pass\n+// edition:2021\n+\n+#![feature(async_fn_in_trait)]\n+#![allow(incomplete_features)]\n+\n+use std::future::Future;\n+\n+async fn yield_now() {}\n+\n+trait AsyncIterator {\n+    type Item;\n+    async fn next(&mut self) -> Option<Self::Item>;\n+}\n+\n+struct YieldingRange {\n+    counter: u32,\n+    stop: u32,\n+}\n+\n+impl AsyncIterator for YieldingRange {\n+    type Item = u32;\n+\n+    async fn next(&mut self) -> Option<Self::Item> {\n+        if self.counter == self.stop {\n+            None\n+        } else {\n+            let c = self.counter;\n+            self.counter += 1;\n+            yield_now().await;\n+            Some(c)\n+        }\n+    }\n+}\n+\n+async fn async_main() {\n+    let mut x = YieldingRange { counter: 0, stop: 10 };\n+\n+    while let Some(v) = x.next().await {\n+        println!(\"Hi: {v}\");\n+    }\n+}\n+\n+fn main() {\n+    let _ = async_main();\n+}"}, {"sha": "91a14523c63b2ecad25327dcd2cd2df036146e04", "filename": "src/test/ui/async-await/issue-102138.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/59c4a92bafaf19e2d9039436294aa805d748ce0f/src%2Ftest%2Fui%2Fasync-await%2Fissue-102138.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59c4a92bafaf19e2d9039436294aa805d748ce0f/src%2Ftest%2Fui%2Fasync-await%2Fissue-102138.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-102138.rs?ref=59c4a92bafaf19e2d9039436294aa805d748ce0f", "patch": "@@ -0,0 +1,46 @@\n+// check-pass\n+// edition:2021\n+\n+#![feature(return_position_impl_trait_in_trait)]\n+#![allow(incomplete_features)]\n+\n+use std::future::Future;\n+\n+async fn yield_now() {}\n+\n+trait AsyncIterator {\n+    type Item;\n+    async fn next(&mut self) -> Option<Self::Item>;\n+}\n+\n+struct YieldingRange {\n+    counter: u32,\n+    stop: u32,\n+}\n+\n+impl AsyncIterator for YieldingRange {\n+    type Item = u32;\n+\n+    async fn next(&mut self) -> Option<Self::Item> {\n+        if self.counter == self.stop {\n+            None\n+        } else {\n+            let c = self.counter;\n+            self.counter += 1;\n+            yield_now().await;\n+            Some(c)\n+        }\n+    }\n+}\n+\n+async fn async_main() {\n+    let mut x = YieldingRange { counter: 0, stop: 10 };\n+\n+    while let Some(v) = x.next().await {\n+        println!(\"Hi: {v}\");\n+    }\n+}\n+\n+fn main() {\n+    let _ = async_main();\n+}"}, {"sha": "4ec4472cc9aeacd2ab36d1d36bc65ecab2daa033", "filename": "src/test/ui/resolve/issue-69401-trait-fn-no-body-ty-local.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/59c4a92bafaf19e2d9039436294aa805d748ce0f/src%2Ftest%2Fui%2Fresolve%2Fissue-69401-trait-fn-no-body-ty-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59c4a92bafaf19e2d9039436294aa805d748ce0f/src%2Ftest%2Fui%2Fresolve%2Fissue-69401-trait-fn-no-body-ty-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-69401-trait-fn-no-body-ty-local.rs?ref=59c4a92bafaf19e2d9039436294aa805d748ce0f", "patch": "@@ -2,5 +2,5 @@ fn main() {}\n \n trait Foo {\n     fn fn_with_type_named_same_as_local_in_param(b: b);\n-    //~^ ERROR cannot find type `b` in this scope [E0412]\n+    //~^ ERROR expected type, found local variable `b`\n }"}, {"sha": "c53028e9b2ad798ebf685e063272ef46ba0c0b13", "filename": "src/test/ui/resolve/issue-69401-trait-fn-no-body-ty-local.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/59c4a92bafaf19e2d9039436294aa805d748ce0f/src%2Ftest%2Fui%2Fresolve%2Fissue-69401-trait-fn-no-body-ty-local.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59c4a92bafaf19e2d9039436294aa805d748ce0f/src%2Ftest%2Fui%2Fresolve%2Fissue-69401-trait-fn-no-body-ty-local.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-69401-trait-fn-no-body-ty-local.stderr?ref=59c4a92bafaf19e2d9039436294aa805d748ce0f", "patch": "@@ -1,9 +1,9 @@\n-error[E0412]: cannot find type `b` in this scope\n+error[E0573]: expected type, found local variable `b`\n   --> $DIR/issue-69401-trait-fn-no-body-ty-local.rs:4:53\n    |\n LL |     fn fn_with_type_named_same_as_local_in_param(b: b);\n-   |                                                     ^ not found in this scope\n+   |                                                     ^ not a type\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0412`.\n+For more information about this error, try `rustc --explain E0573`."}]}