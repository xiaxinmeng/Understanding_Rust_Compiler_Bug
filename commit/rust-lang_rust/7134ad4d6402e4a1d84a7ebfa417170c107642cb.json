{"sha": "7134ad4d6402e4a1d84a7ebfa417170c107642cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxMzRhZDRkNjQwMmU0YTFkODRhN2ViZmE0MTcxNzBjMTA3NjQyY2I=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-13T22:31:44Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-18T20:23:34Z"}, "message": "Move `tcx` from `Typer` into `ClosureTyper`", "tree": {"sha": "bd124b5ec3c14ab131d4cd7e50c893cf2fcefbb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd124b5ec3c14ab131d4cd7e50c893cf2fcefbb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7134ad4d6402e4a1d84a7ebfa417170c107642cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7134ad4d6402e4a1d84a7ebfa417170c107642cb", "html_url": "https://github.com/rust-lang/rust/commit/7134ad4d6402e4a1d84a7ebfa417170c107642cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7134ad4d6402e4a1d84a7ebfa417170c107642cb/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e84a719e375ac48c6792d0495fb3302879bf7916", "url": "https://api.github.com/repos/rust-lang/rust/commits/e84a719e375ac48c6792d0495fb3302879bf7916", "html_url": "https://github.com/rust-lang/rust/commit/e84a719e375ac48c6792d0495fb3302879bf7916"}], "stats": {"total": 18, "additions": 4, "deletions": 14}, "files": [{"sha": "4be7bb9c365a16d57d846ac70a178dfda6f944ff", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7134ad4d6402e4a1d84a7ebfa417170c107642cb/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7134ad4d6402e4a1d84a7ebfa417170c107642cb/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=7134ad4d6402e4a1d84a7ebfa417170c107642cb", "patch": "@@ -281,7 +281,6 @@ pub type McResult<T> = Result<T, ()>;\n /// know that no errors have occurred, so we simply consult the tcx and we\n /// can be sure that only `Ok` results will occur.\n pub trait Typer<'tcx> : ty::ClosureTyper<'tcx> {\n-    fn tcx<'a>(&'a self) -> &'a ty::ctxt<'tcx>;\n     fn node_ty(&self, id: ast::NodeId) -> McResult<Ty<'tcx>>;\n     fn expr_ty_adjusted(&self, expr: &ast::Expr) -> McResult<Ty<'tcx>>;\n     fn type_moves_by_default(&self, span: Span, ty: Ty<'tcx>) -> bool;"}, {"sha": "a9cac4be3e368026e319a32b890df4a6f36263fb", "filename": "src/librustc/middle/traits/fulfill.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7134ad4d6402e4a1d84a7ebfa417170c107642cb/src%2Flibrustc%2Fmiddle%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7134ad4d6402e4a1d84a7ebfa417170c107642cb/src%2Flibrustc%2Fmiddle%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Ffulfill.rs?ref=7134ad4d6402e4a1d84a7ebfa417170c107642cb", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n use middle::infer::{InferCtxt};\n-use middle::mem_categorization::Typer;\n use middle::ty::{self, RegionEscape, Ty};\n use std::collections::HashSet;\n use std::collections::hash_map::Entry::{Occupied, Vacant};"}, {"sha": "0df59c917edea88f5e6a1f72cfc466b03a99f0d6", "filename": "src/librustc/middle/traits/select.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7134ad4d6402e4a1d84a7ebfa417170c107642cb/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7134ad4d6402e4a1d84a7ebfa417170c107642cb/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs?ref=7134ad4d6402e4a1d84a7ebfa417170c107642cb", "patch": "@@ -32,7 +32,6 @@ use super::object_safety;\n use super::{util};\n \n use middle::fast_reject;\n-use middle::mem_categorization::Typer;\n use middle::subst::{Subst, Substs, TypeSpace, VecPerParamSpace};\n use middle::ty::{self, RegionEscape, ToPolyTraitRef, Ty};\n use middle::infer;"}, {"sha": "e3eda02b0a8429a0e7283995f4534e756cd89291", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7134ad4d6402e4a1d84a7ebfa417170c107642cb/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7134ad4d6402e4a1d84a7ebfa417170c107642cb/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=7134ad4d6402e4a1d84a7ebfa417170c107642cb", "patch": "@@ -2337,6 +2337,10 @@ impl ClosureKind {\n }\n \n pub trait ClosureTyper<'tcx> {\n+    fn tcx(&self) -> &ty::ctxt<'tcx> {\n+        self.param_env().tcx\n+    }\n+\n     fn param_env<'a>(&'a self) -> &'a ty::ParameterEnvironment<'a, 'tcx>;\n \n     /// Is this a `Fn`, `FnMut` or `FnOnce` closure? During typeck,\n@@ -6463,10 +6467,6 @@ impl<'tcx> ctxt<'tcx> {\n }\n \n impl<'a,'tcx> mc::Typer<'tcx> for ParameterEnvironment<'a,'tcx> {\n-    fn tcx(&self) -> &ty::ctxt<'tcx> {\n-        self.tcx\n-    }\n-\n     fn node_ty(&self, id: ast::NodeId) -> mc::McResult<Ty<'tcx>> {\n         Ok(ty::node_id_to_type(self.tcx, id))\n     }"}, {"sha": "3709490d8dad796121c83ad626222ebb2a023708", "filename": "src/librustc_trans/trans/common.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7134ad4d6402e4a1d84a7ebfa417170c107642cb/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7134ad4d6402e4a1d84a7ebfa417170c107642cb/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs?ref=7134ad4d6402e4a1d84a7ebfa417170c107642cb", "patch": "@@ -637,10 +637,6 @@ impl<'blk, 'tcx> BlockS<'blk, 'tcx> {\n }\n \n impl<'blk, 'tcx> mc::Typer<'tcx> for BlockS<'blk, 'tcx> {\n-    fn tcx<'a>(&'a self) -> &'a ty::ctxt<'tcx> {\n-        self.tcx()\n-    }\n-\n     fn node_ty(&self, id: ast::NodeId) -> mc::McResult<Ty<'tcx>> {\n         Ok(node_id_type(self, id))\n     }"}, {"sha": "7bb2af606f5a145657b7325ae403146b942c7338", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7134ad4d6402e4a1d84a7ebfa417170c107642cb/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7134ad4d6402e4a1d84a7ebfa417170c107642cb/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=7134ad4d6402e4a1d84a7ebfa417170c107642cb", "patch": "@@ -309,9 +309,6 @@ pub struct FnCtxt<'a, 'tcx: 'a> {\n }\n \n impl<'a, 'tcx> mc::Typer<'tcx> for FnCtxt<'a, 'tcx> {\n-    fn tcx(&self) -> &ty::ctxt<'tcx> {\n-        self.ccx.tcx\n-    }\n     fn node_ty(&self, id: ast::NodeId) -> McResult<Ty<'tcx>> {\n         let ty = self.node_ty(id);\n         self.resolve_type_vars_or_error(&ty)"}]}