{"sha": "4dd5afb7fe2eb20748ade9141e74b04f5dd2f922", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkZDVhZmI3ZmUyZWIyMDc0OGFkZTkxNDFlNzRiMDRmNWRkMmY5MjI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-22T08:08:22Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-22T08:08:22Z"}, "message": "show error to the user when deserializing config", "tree": {"sha": "5addeedbb0d01fe1a0385aedb7d16ac700a1d1b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5addeedbb0d01fe1a0385aedb7d16ac700a1d1b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4dd5afb7fe2eb20748ade9141e74b04f5dd2f922", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4dd5afb7fe2eb20748ade9141e74b04f5dd2f922", "html_url": "https://github.com/rust-lang/rust/commit/4dd5afb7fe2eb20748ade9141e74b04f5dd2f922", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4dd5afb7fe2eb20748ade9141e74b04f5dd2f922/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fd9a5be0984faa138281e46dd4b73cfdad073b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fd9a5be0984faa138281e46dd4b73cfdad073b1", "html_url": "https://github.com/rust-lang/rust/commit/5fd9a5be0984faa138281e46dd4b73cfdad073b1"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "2c5d7c72d971fae37e9ad3321bffb2d1c34da58e", "filename": "crates/ra_lsp_server/src/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4dd5afb7fe2eb20748ade9141e74b04f5dd2f922/crates%2Fra_lsp_server%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dd5afb7fe2eb20748ade9141e74b04f5dd2f922/crates%2Fra_lsp_server%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Flib.rs?ref=4dd5afb7fe2eb20748ade9141e74b04f5dd2f922", "patch": "@@ -11,5 +11,8 @@ mod world;\n \n pub type Result<T> = std::result::Result<T, Box<dyn std::error::Error + Send + Sync>>;\n pub use crate::{\n-    caps::server_capabilities, config::ServerConfig, main_loop::main_loop, main_loop::LspError,\n+    caps::server_capabilities,\n+    config::ServerConfig,\n+    main_loop::LspError,\n+    main_loop::{main_loop, show_message},\n };"}, {"sha": "ae1392cb5d349fe6884bea3b1f4cb299d1a25e0a", "filename": "crates/ra_lsp_server/src/main.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4dd5afb7fe2eb20748ade9141e74b04f5dd2f922/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dd5afb7fe2eb20748ade9141e74b04f5dd2f922/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs?ref=4dd5afb7fe2eb20748ade9141e74b04f5dd2f922", "patch": "@@ -1,8 +1,7 @@\n use flexi_logger::{Duplicate, Logger};\n use gen_lsp_server::{run_server, stdio_transport};\n-use serde::Deserialize;\n \n-use ra_lsp_server::{Result, ServerConfig};\n+use ra_lsp_server::{show_message, Result, ServerConfig};\n use ra_prof;\n \n fn main() -> Result<()> {\n@@ -46,15 +45,23 @@ fn main_inner() -> Result<()> {\n             .filter(|workspaces| !workspaces.is_empty())\n             .unwrap_or_else(|| vec![root]);\n \n-        let opts = params\n+        let server_config: ServerConfig = params\n             .initialization_options\n             .and_then(|v| {\n-                ServerConfig::deserialize(v)\n-                    .map_err(|e| log::error!(\"failed to deserialize config: {}\", e))\n+                serde_json::from_value(v)\n+                    .map_err(|e| {\n+                        log::error!(\"failed to deserialize config: {}\", e);\n+                        show_message(\n+                            lsp_types::MessageType::Error,\n+                            format!(\"failed to deserialize config: {}\", e),\n+                            s,\n+                        );\n+                    })\n                     .ok()\n             })\n             .unwrap_or_default();\n-        ra_lsp_server::main_loop(workspace_roots, params.capabilities, opts, r, s)\n+\n+        ra_lsp_server::main_loop(workspace_roots, params.capabilities, server_config, r, s)\n     })?;\n     log::info!(\"shutting down IO...\");\n     threads.join()?;"}, {"sha": "c0395c6d825eb04126f929c99437afc7d21041c1", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4dd5afb7fe2eb20748ade9141e74b04f5dd2f922/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dd5afb7fe2eb20748ade9141e74b04f5dd2f922/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=4dd5afb7fe2eb20748ade9141e74b04f5dd2f922", "patch": "@@ -617,7 +617,11 @@ fn update_file_notifications_on_threadpool(\n     });\n }\n \n-fn show_message(typ: req::MessageType, message: impl Into<String>, sender: &Sender<RawMessage>) {\n+pub fn show_message(\n+    typ: req::MessageType,\n+    message: impl Into<String>,\n+    sender: &Sender<RawMessage>,\n+) {\n     let message = message.into();\n     let params = req::ShowMessageParams { typ, message };\n     let not = RawNotification::new::<req::ShowMessage>(&params);"}]}