{"sha": "bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6", "node_id": "C_kwDOAAsO6NoAKGJiYjI0Y2UzZGE1YTZiM2U1ZTg2NGZkNzZlMmRkMzA0YTU1MjE2YzY", "commit": {"author": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2023-03-27T19:05:43Z"}, "committer": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2023-05-10T17:36:01Z"}, "message": "Drop uplifted clippy::drop_copy", "tree": {"sha": "c294a19c070f99702bc160c234e043bf3409b0b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c294a19c070f99702bc160c234e043bf3409b0b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6", "html_url": "https://github.com/rust-lang/rust/commit/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/comments", "author": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "156f5563c7cb72947fc27365098217003cab2357", "url": "https://api.github.com/repos/rust-lang/rust/commits/156f5563c7cb72947fc27365098217003cab2357", "html_url": "https://github.com/rust-lang/rust/commit/156f5563c7cb72947fc27365098217003cab2357"}], "stats": {"total": 219, "additions": 102, "deletions": 117}, "files": [{"sha": "81288ca91015895d16da3db831bd8897b3f92937", "filename": "src/tools/clippy/clippy_lints/src/declared_lints.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdeclared_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdeclared_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdeclared_lints.rs?ref=bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6", "patch": "@@ -132,7 +132,6 @@ pub(crate) static LINTS: &[&crate::LintInfo] = &[\n     crate::doc::NEEDLESS_DOCTEST_MAIN_INFO,\n     crate::doc::UNNECESSARY_SAFETY_DOC_INFO,\n     crate::double_parens::DOUBLE_PARENS_INFO,\n-    crate::drop_forget_ref::DROP_COPY_INFO,\n     crate::drop_forget_ref::DROP_NON_DROP_INFO,\n     crate::drop_forget_ref::FORGET_COPY_INFO,\n     crate::drop_forget_ref::FORGET_NON_DROP_INFO,"}, {"sha": "9858243f3397b0864bef78f1fd41e6a468bc5fa5", "filename": "src/tools/clippy/clippy_lints/src/drop_forget_ref.rs", "status": "modified", "additions": 2, "deletions": 27, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdrop_forget_ref.rs?ref=bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6", "patch": "@@ -29,28 +29,6 @@ declare_clippy_lint! {\n     \"calls to `std::mem::forget` with a reference instead of an owned value\"\n }\n \n-declare_clippy_lint! {\n-    /// ### What it does\n-    /// Checks for calls to `std::mem::drop` with a value\n-    /// that derives the Copy trait\n-    ///\n-    /// ### Why is this bad?\n-    /// Calling `std::mem::drop` [does nothing for types that\n-    /// implement Copy](https://doc.rust-lang.org/std/mem/fn.drop.html), since the\n-    /// value will be copied and moved into the function on invocation.\n-    ///\n-    /// ### Example\n-    /// ```rust\n-    /// let x: i32 = 42; // i32 implements Copy\n-    /// std::mem::drop(x) // A copy of x is passed to the function, leaving the\n-    ///                   // original unaffected\n-    /// ```\n-    #[clippy::version = \"pre 1.29.0\"]\n-    pub DROP_COPY,\n-    correctness,\n-    \"calls to `std::mem::drop` with a value that implements Copy\"\n-}\n-\n declare_clippy_lint! {\n     /// ### What it does\n     /// Checks for calls to `std::mem::forget` with a value that\n@@ -150,8 +128,6 @@ declare_clippy_lint! {\n \n const FORGET_REF_SUMMARY: &str = \"calls to `std::mem::forget` with a reference instead of an owned value. \\\n                                   Forgetting a reference does nothing\";\n-const DROP_COPY_SUMMARY: &str = \"calls to `std::mem::drop` with a value that implements `Copy`. \\\n-                                 Dropping a copy leaves the original intact\";\n const FORGET_COPY_SUMMARY: &str = \"calls to `std::mem::forget` with a value that implements `Copy`. \\\n                                    Forgetting a copy leaves the original intact\";\n const DROP_NON_DROP_SUMMARY: &str = \"call to `std::mem::drop` with a value that does not implement `Drop`. \\\n@@ -161,7 +137,6 @@ const FORGET_NON_DROP_SUMMARY: &str = \"call to `std::mem::forget` with a value t\n \n declare_lint_pass!(DropForgetRef => [\n     FORGET_REF,\n-    DROP_COPY,\n     FORGET_COPY,\n     DROP_NON_DROP,\n     FORGET_NON_DROP,\n@@ -179,10 +154,10 @@ impl<'tcx> LateLintPass<'tcx> for DropForgetRef {\n             let is_copy = is_copy(cx, arg_ty);\n             let drop_is_single_call_in_arm = is_single_call_in_arm(cx, arg, expr);\n             let (lint, msg) = match fn_name {\n-                // early return for uplifted lints: drop_ref\n+                // early return for uplifted lints: drop_ref, drop_copy\n                 sym::mem_drop if arg_ty.is_ref() && !drop_is_single_call_in_arm => return,\n                 sym::mem_forget if arg_ty.is_ref() => (FORGET_REF, FORGET_REF_SUMMARY),\n-                sym::mem_drop if is_copy && !drop_is_single_call_in_arm => (DROP_COPY, DROP_COPY_SUMMARY),\n+                sym::mem_drop if is_copy && !drop_is_single_call_in_arm => return,\n                 sym::mem_forget if is_copy => (FORGET_COPY, FORGET_COPY_SUMMARY),\n                 sym::mem_drop if is_type_lang_item(cx, arg_ty, LangItem::ManuallyDrop) => {\n                     span_lint_and_help("}, {"sha": "31c9f39c9bf01de810f457a56a6148638d746b7b", "filename": "src/tools/clippy/clippy_lints/src/renamed_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Frenamed_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Frenamed_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Frenamed_lints.rs?ref=bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6", "patch": "@@ -32,6 +32,7 @@ pub static RENAMED_LINTS: &[(&str, &str)] = &[\n     (\"clippy::zero_width_space\", \"clippy::invisible_characters\"),\n     (\"clippy::clone_double_ref\", \"suspicious_double_ref_op\"),\n     (\"clippy::drop_bounds\", \"drop_bounds\"),\n+    (\"clippy::drop_copy\", \"drop_copy\"),\n     (\"clippy::drop_ref\", \"drop_ref\"),\n     (\"clippy::for_loop_over_option\", \"for_loops_over_fallibles\"),\n     (\"clippy::for_loop_over_result\", \"for_loops_over_fallibles\"),"}, {"sha": "f723b03a979cf78ab044b86748d6d01e950ed0a2", "filename": "src/tools/clippy/tests/ui/drop_forget_copy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdrop_forget_copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdrop_forget_copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdrop_forget_copy.rs?ref=bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6", "patch": "@@ -1,4 +1,4 @@\n-#![warn(clippy::drop_copy, clippy::forget_copy)]\n+#![warn(drop_copy, clippy::forget_copy)]\n #![allow(clippy::toplevel_ref_arg, drop_ref, clippy::forget_ref, unused_mut)]\n \n use std::mem::{drop, forget};"}, {"sha": "3b19cf3968f6e104aaad743ebc633dca290832fa", "filename": "src/tools/clippy/tests/ui/drop_forget_copy.stderr", "status": "modified", "additions": 40, "deletions": 40, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdrop_forget_copy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdrop_forget_copy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fdrop_forget_copy.stderr?ref=bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6", "patch": "@@ -1,40 +1,3 @@\n-error: calls to `std::mem::drop` with a value that implements `Copy`. Dropping a copy leaves the original intact\n-  --> $DIR/drop_forget_copy.rs:33:5\n-   |\n-LL |     drop(s1);\n-   |     ^^^^^^^^\n-   |\n-note: argument has type `SomeStruct`\n-  --> $DIR/drop_forget_copy.rs:33:10\n-   |\n-LL |     drop(s1);\n-   |          ^^\n-   = note: `-D clippy::drop-copy` implied by `-D warnings`\n-\n-error: calls to `std::mem::drop` with a value that implements `Copy`. Dropping a copy leaves the original intact\n-  --> $DIR/drop_forget_copy.rs:34:5\n-   |\n-LL |     drop(s2);\n-   |     ^^^^^^^^\n-   |\n-note: argument has type `SomeStruct`\n-  --> $DIR/drop_forget_copy.rs:34:10\n-   |\n-LL |     drop(s2);\n-   |          ^^\n-\n-error: calls to `std::mem::drop` with a value that implements `Copy`. Dropping a copy leaves the original intact\n-  --> $DIR/drop_forget_copy.rs:36:5\n-   |\n-LL |     drop(s4);\n-   |     ^^^^^^^^\n-   |\n-note: argument has type `SomeStruct`\n-  --> $DIR/drop_forget_copy.rs:36:10\n-   |\n-LL |     drop(s4);\n-   |          ^^\n-\n error: calls to `std::mem::forget` with a value that implements `Copy`. Forgetting a copy leaves the original intact\n   --> $DIR/drop_forget_copy.rs:39:5\n    |\n@@ -72,7 +35,44 @@ note: argument has type `SomeStruct`\n LL |     forget(s4);\n    |            ^^\n \n-error: calls to `std::mem::drop` with a value that implements `Copy`. Dropping a copy leaves the original intact\n+error: calls to `std::mem::drop` with a value that implements `Copy`.\n+  --> $DIR/drop_forget_copy.rs:33:5\n+   |\n+LL |     drop(s1);\n+   |     ^^^^^^^^\n+   |\n+note: argument has type `SomeStruct`\n+  --> $DIR/drop_forget_copy.rs:33:10\n+   |\n+LL |     drop(s1);\n+   |          ^^\n+   = note: `-D drop-copy` implied by `-D warnings`\n+\n+error: calls to `std::mem::drop` with a value that implements `Copy`.\n+  --> $DIR/drop_forget_copy.rs:34:5\n+   |\n+LL |     drop(s2);\n+   |     ^^^^^^^^\n+   |\n+note: argument has type `SomeStruct`\n+  --> $DIR/drop_forget_copy.rs:34:10\n+   |\n+LL |     drop(s2);\n+   |          ^^\n+\n+error: calls to `std::mem::drop` with a value that implements `Copy`.\n+  --> $DIR/drop_forget_copy.rs:36:5\n+   |\n+LL |     drop(s4);\n+   |     ^^^^^^^^\n+   |\n+note: argument has type `SomeStruct`\n+  --> $DIR/drop_forget_copy.rs:36:10\n+   |\n+LL |     drop(s4);\n+   |          ^^\n+\n+error: calls to `std::mem::drop` with a value that implements `Copy`.\n   --> $DIR/drop_forget_copy.rs:80:13\n    |\n LL |             drop(println_and(13)); // Lint, even if we only care about the side-effect, it's already in a block\n@@ -84,7 +84,7 @@ note: argument has type `i32`\n LL |             drop(println_and(13)); // Lint, even if we only care about the side-effect, it's already in a block\n    |                  ^^^^^^^^^^^^^^^\n \n-error: calls to `std::mem::drop` with a value that implements `Copy`. Dropping a copy leaves the original intact\n+error: calls to `std::mem::drop` with a value that implements `Copy`.\n   --> $DIR/drop_forget_copy.rs:82:14\n    |\n LL |         3 if drop(println_and(14)) == () => (), // Lint, idiomatic use is only in body of `Arm`\n@@ -96,7 +96,7 @@ note: argument has type `i32`\n LL |         3 if drop(println_and(14)) == () => (), // Lint, idiomatic use is only in body of `Arm`\n    |                   ^^^^^^^^^^^^^^^\n \n-error: calls to `std::mem::drop` with a value that implements `Copy`. Dropping a copy leaves the original intact\n+error: calls to `std::mem::drop` with a value that implements `Copy`.\n   --> $DIR/drop_forget_copy.rs:83:14\n    |\n LL |         4 => drop(2),                           // Lint, not a fn/method call"}, {"sha": "f28153e56b0fe732a4354352d73a2ae9c2241655", "filename": "src/tools/clippy/tests/ui/multiple_unsafe_ops_per_block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmultiple_unsafe_ops_per_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmultiple_unsafe_ops_per_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmultiple_unsafe_ops_per_block.rs?ref=bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6", "patch": "@@ -2,7 +2,7 @@\n #![allow(unused)]\n #![allow(deref_nullptr)]\n #![allow(clippy::unnecessary_operation)]\n-#![allow(clippy::drop_copy)]\n+#![allow(drop_copy)]\n #![warn(clippy::multiple_unsafe_ops_per_block)]\n \n extern crate proc_macros;"}, {"sha": "a618dcd806fbcf657dfc3c3551dd2692f8a4fb23", "filename": "src/tools/clippy/tests/ui/rename.fixed", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.fixed?ref=bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6", "patch": "@@ -29,6 +29,7 @@\n #![allow(clippy::invisible_characters)]\n #![allow(suspicious_double_ref_op)]\n #![allow(drop_bounds)]\n+#![allow(drop_copy)]\n #![allow(drop_ref)]\n #![allow(for_loops_over_fallibles)]\n #![allow(array_into_iter)]\n@@ -72,6 +73,7 @@\n #![warn(clippy::invisible_characters)]\n #![warn(suspicious_double_ref_op)]\n #![warn(drop_bounds)]\n+#![warn(drop_copy)]\n #![warn(drop_ref)]\n #![warn(for_loops_over_fallibles)]\n #![warn(for_loops_over_fallibles)]"}, {"sha": "bca0cba7ee802afca75355c732c2cfe5faa63585", "filename": "src/tools/clippy/tests/ui/rename.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.rs?ref=bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6", "patch": "@@ -29,6 +29,7 @@\n #![allow(clippy::invisible_characters)]\n #![allow(suspicious_double_ref_op)]\n #![allow(drop_bounds)]\n+#![allow(drop_copy)]\n #![allow(drop_ref)]\n #![allow(for_loops_over_fallibles)]\n #![allow(array_into_iter)]\n@@ -72,6 +73,7 @@\n #![warn(clippy::zero_width_space)]\n #![warn(clippy::clone_double_ref)]\n #![warn(clippy::drop_bounds)]\n+#![warn(clippy::drop_copy)]\n #![warn(clippy::drop_ref)]\n #![warn(clippy::for_loop_over_option)]\n #![warn(clippy::for_loop_over_result)]"}, {"sha": "1f1cc932b38f937b97de0c442f1fbd0f542b2a88", "filename": "src/tools/clippy/tests/ui/rename.stderr", "status": "modified", "additions": 51, "deletions": 45, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Frename.stderr?ref=bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6", "patch": "@@ -1,268 +1,274 @@\n error: lint `clippy::almost_complete_letter_range` has been renamed to `clippy::almost_complete_range`\n-  --> $DIR/rename.rs:45:9\n+  --> $DIR/rename.rs:46:9\n    |\n LL | #![warn(clippy::almost_complete_letter_range)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::almost_complete_range`\n    |\n    = note: `-D renamed-and-removed-lints` implied by `-D warnings`\n \n error: lint `clippy::blacklisted_name` has been renamed to `clippy::disallowed_names`\n-  --> $DIR/rename.rs:46:9\n+  --> $DIR/rename.rs:47:9\n    |\n LL | #![warn(clippy::blacklisted_name)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::disallowed_names`\n \n error: lint `clippy::block_in_if_condition_expr` has been renamed to `clippy::blocks_in_if_conditions`\n-  --> $DIR/rename.rs:47:9\n+  --> $DIR/rename.rs:48:9\n    |\n LL | #![warn(clippy::block_in_if_condition_expr)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::blocks_in_if_conditions`\n \n error: lint `clippy::block_in_if_condition_stmt` has been renamed to `clippy::blocks_in_if_conditions`\n-  --> $DIR/rename.rs:48:9\n+  --> $DIR/rename.rs:49:9\n    |\n LL | #![warn(clippy::block_in_if_condition_stmt)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::blocks_in_if_conditions`\n \n error: lint `clippy::box_vec` has been renamed to `clippy::box_collection`\n-  --> $DIR/rename.rs:49:9\n+  --> $DIR/rename.rs:50:9\n    |\n LL | #![warn(clippy::box_vec)]\n    |         ^^^^^^^^^^^^^^^ help: use the new name: `clippy::box_collection`\n \n error: lint `clippy::const_static_lifetime` has been renamed to `clippy::redundant_static_lifetimes`\n-  --> $DIR/rename.rs:50:9\n+  --> $DIR/rename.rs:51:9\n    |\n LL | #![warn(clippy::const_static_lifetime)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::redundant_static_lifetimes`\n \n error: lint `clippy::cyclomatic_complexity` has been renamed to `clippy::cognitive_complexity`\n-  --> $DIR/rename.rs:51:9\n+  --> $DIR/rename.rs:52:9\n    |\n LL | #![warn(clippy::cyclomatic_complexity)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::cognitive_complexity`\n \n error: lint `clippy::derive_hash_xor_eq` has been renamed to `clippy::derived_hash_with_manual_eq`\n-  --> $DIR/rename.rs:52:9\n+  --> $DIR/rename.rs:53:9\n    |\n LL | #![warn(clippy::derive_hash_xor_eq)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::derived_hash_with_manual_eq`\n \n error: lint `clippy::disallowed_method` has been renamed to `clippy::disallowed_methods`\n-  --> $DIR/rename.rs:53:9\n+  --> $DIR/rename.rs:54:9\n    |\n LL | #![warn(clippy::disallowed_method)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::disallowed_methods`\n \n error: lint `clippy::disallowed_type` has been renamed to `clippy::disallowed_types`\n-  --> $DIR/rename.rs:54:9\n+  --> $DIR/rename.rs:55:9\n    |\n LL | #![warn(clippy::disallowed_type)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::disallowed_types`\n \n error: lint `clippy::eval_order_dependence` has been renamed to `clippy::mixed_read_write_in_expression`\n-  --> $DIR/rename.rs:55:9\n+  --> $DIR/rename.rs:56:9\n    |\n LL | #![warn(clippy::eval_order_dependence)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::mixed_read_write_in_expression`\n \n error: lint `clippy::identity_conversion` has been renamed to `clippy::useless_conversion`\n-  --> $DIR/rename.rs:56:9\n+  --> $DIR/rename.rs:57:9\n    |\n LL | #![warn(clippy::identity_conversion)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::useless_conversion`\n \n error: lint `clippy::if_let_some_result` has been renamed to `clippy::match_result_ok`\n-  --> $DIR/rename.rs:57:9\n+  --> $DIR/rename.rs:58:9\n    |\n LL | #![warn(clippy::if_let_some_result)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::match_result_ok`\n \n error: lint `clippy::logic_bug` has been renamed to `clippy::overly_complex_bool_expr`\n-  --> $DIR/rename.rs:58:9\n+  --> $DIR/rename.rs:59:9\n    |\n LL | #![warn(clippy::logic_bug)]\n    |         ^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::overly_complex_bool_expr`\n \n error: lint `clippy::new_without_default_derive` has been renamed to `clippy::new_without_default`\n-  --> $DIR/rename.rs:59:9\n+  --> $DIR/rename.rs:60:9\n    |\n LL | #![warn(clippy::new_without_default_derive)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::new_without_default`\n \n error: lint `clippy::option_and_then_some` has been renamed to `clippy::bind_instead_of_map`\n-  --> $DIR/rename.rs:60:9\n+  --> $DIR/rename.rs:61:9\n    |\n LL | #![warn(clippy::option_and_then_some)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::bind_instead_of_map`\n \n error: lint `clippy::option_expect_used` has been renamed to `clippy::expect_used`\n-  --> $DIR/rename.rs:61:9\n+  --> $DIR/rename.rs:62:9\n    |\n LL | #![warn(clippy::option_expect_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::expect_used`\n \n error: lint `clippy::option_map_unwrap_or` has been renamed to `clippy::map_unwrap_or`\n-  --> $DIR/rename.rs:62:9\n+  --> $DIR/rename.rs:63:9\n    |\n LL | #![warn(clippy::option_map_unwrap_or)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::map_unwrap_or`\n \n error: lint `clippy::option_map_unwrap_or_else` has been renamed to `clippy::map_unwrap_or`\n-  --> $DIR/rename.rs:63:9\n+  --> $DIR/rename.rs:64:9\n    |\n LL | #![warn(clippy::option_map_unwrap_or_else)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::map_unwrap_or`\n \n error: lint `clippy::option_unwrap_used` has been renamed to `clippy::unwrap_used`\n-  --> $DIR/rename.rs:64:9\n+  --> $DIR/rename.rs:65:9\n    |\n LL | #![warn(clippy::option_unwrap_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::unwrap_used`\n \n error: lint `clippy::ref_in_deref` has been renamed to `clippy::needless_borrow`\n-  --> $DIR/rename.rs:65:9\n+  --> $DIR/rename.rs:66:9\n    |\n LL | #![warn(clippy::ref_in_deref)]\n    |         ^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::needless_borrow`\n \n error: lint `clippy::result_expect_used` has been renamed to `clippy::expect_used`\n-  --> $DIR/rename.rs:66:9\n+  --> $DIR/rename.rs:67:9\n    |\n LL | #![warn(clippy::result_expect_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::expect_used`\n \n error: lint `clippy::result_map_unwrap_or_else` has been renamed to `clippy::map_unwrap_or`\n-  --> $DIR/rename.rs:67:9\n+  --> $DIR/rename.rs:68:9\n    |\n LL | #![warn(clippy::result_map_unwrap_or_else)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::map_unwrap_or`\n \n error: lint `clippy::result_unwrap_used` has been renamed to `clippy::unwrap_used`\n-  --> $DIR/rename.rs:68:9\n+  --> $DIR/rename.rs:69:9\n    |\n LL | #![warn(clippy::result_unwrap_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::unwrap_used`\n \n error: lint `clippy::single_char_push_str` has been renamed to `clippy::single_char_add_str`\n-  --> $DIR/rename.rs:69:9\n+  --> $DIR/rename.rs:70:9\n    |\n LL | #![warn(clippy::single_char_push_str)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::single_char_add_str`\n \n error: lint `clippy::stutter` has been renamed to `clippy::module_name_repetitions`\n-  --> $DIR/rename.rs:70:9\n+  --> $DIR/rename.rs:71:9\n    |\n LL | #![warn(clippy::stutter)]\n    |         ^^^^^^^^^^^^^^^ help: use the new name: `clippy::module_name_repetitions`\n \n error: lint `clippy::to_string_in_display` has been renamed to `clippy::recursive_format_impl`\n-  --> $DIR/rename.rs:71:9\n+  --> $DIR/rename.rs:72:9\n    |\n LL | #![warn(clippy::to_string_in_display)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::recursive_format_impl`\n \n error: lint `clippy::zero_width_space` has been renamed to `clippy::invisible_characters`\n-  --> $DIR/rename.rs:72:9\n+  --> $DIR/rename.rs:73:9\n    |\n LL | #![warn(clippy::zero_width_space)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::invisible_characters`\n \n error: lint `clippy::clone_double_ref` has been renamed to `suspicious_double_ref_op`\n-  --> $DIR/rename.rs:73:9\n+  --> $DIR/rename.rs:74:9\n    |\n LL | #![warn(clippy::clone_double_ref)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `suspicious_double_ref_op`\n \n error: lint `clippy::drop_bounds` has been renamed to `drop_bounds`\n-  --> $DIR/rename.rs:74:9\n+  --> $DIR/rename.rs:75:9\n    |\n LL | #![warn(clippy::drop_bounds)]\n    |         ^^^^^^^^^^^^^^^^^^^ help: use the new name: `drop_bounds`\n \n+error: lint `clippy::drop_copy` has been renamed to `drop_copy`\n+  --> $DIR/rename.rs:76:9\n+   |\n+LL | #![warn(clippy::drop_copy)]\n+   |         ^^^^^^^^^^^^^^^^^ help: use the new name: `drop_copy`\n+\n error: lint `clippy::drop_ref` has been renamed to `drop_ref`\n-  --> $DIR/rename.rs:75:9\n+  --> $DIR/rename.rs:77:9\n    |\n LL | #![warn(clippy::drop_ref)]\n    |         ^^^^^^^^^^^^^^^^ help: use the new name: `drop_ref`\n \n error: lint `clippy::for_loop_over_option` has been renamed to `for_loops_over_fallibles`\n-  --> $DIR/rename.rs:76:9\n+  --> $DIR/rename.rs:78:9\n    |\n LL | #![warn(clippy::for_loop_over_option)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `for_loops_over_fallibles`\n \n error: lint `clippy::for_loop_over_result` has been renamed to `for_loops_over_fallibles`\n-  --> $DIR/rename.rs:77:9\n+  --> $DIR/rename.rs:79:9\n    |\n LL | #![warn(clippy::for_loop_over_result)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `for_loops_over_fallibles`\n \n error: lint `clippy::for_loops_over_fallibles` has been renamed to `for_loops_over_fallibles`\n-  --> $DIR/rename.rs:78:9\n+  --> $DIR/rename.rs:80:9\n    |\n LL | #![warn(clippy::for_loops_over_fallibles)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `for_loops_over_fallibles`\n \n error: lint `clippy::into_iter_on_array` has been renamed to `array_into_iter`\n-  --> $DIR/rename.rs:79:9\n+  --> $DIR/rename.rs:81:9\n    |\n LL | #![warn(clippy::into_iter_on_array)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `array_into_iter`\n \n error: lint `clippy::invalid_atomic_ordering` has been renamed to `invalid_atomic_ordering`\n-  --> $DIR/rename.rs:80:9\n+  --> $DIR/rename.rs:82:9\n    |\n LL | #![warn(clippy::invalid_atomic_ordering)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `invalid_atomic_ordering`\n \n error: lint `clippy::invalid_ref` has been renamed to `invalid_value`\n-  --> $DIR/rename.rs:81:9\n+  --> $DIR/rename.rs:83:9\n    |\n LL | #![warn(clippy::invalid_ref)]\n    |         ^^^^^^^^^^^^^^^^^^^ help: use the new name: `invalid_value`\n \n error: lint `clippy::let_underscore_drop` has been renamed to `let_underscore_drop`\n-  --> $DIR/rename.rs:82:9\n+  --> $DIR/rename.rs:84:9\n    |\n LL | #![warn(clippy::let_underscore_drop)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `let_underscore_drop`\n \n error: lint `clippy::mem_discriminant_non_enum` has been renamed to `enum_intrinsics_non_enums`\n-  --> $DIR/rename.rs:83:9\n+  --> $DIR/rename.rs:85:9\n    |\n LL | #![warn(clippy::mem_discriminant_non_enum)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `enum_intrinsics_non_enums`\n \n error: lint `clippy::panic_params` has been renamed to `non_fmt_panics`\n-  --> $DIR/rename.rs:84:9\n+  --> $DIR/rename.rs:86:9\n    |\n LL | #![warn(clippy::panic_params)]\n    |         ^^^^^^^^^^^^^^^^^^^^ help: use the new name: `non_fmt_panics`\n \n error: lint `clippy::positional_named_format_parameters` has been renamed to `named_arguments_used_positionally`\n-  --> $DIR/rename.rs:85:9\n+  --> $DIR/rename.rs:87:9\n    |\n LL | #![warn(clippy::positional_named_format_parameters)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `named_arguments_used_positionally`\n \n error: lint `clippy::temporary_cstring_as_ptr` has been renamed to `temporary_cstring_as_ptr`\n-  --> $DIR/rename.rs:86:9\n+  --> $DIR/rename.rs:88:9\n    |\n LL | #![warn(clippy::temporary_cstring_as_ptr)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `temporary_cstring_as_ptr`\n \n error: lint `clippy::unknown_clippy_lints` has been renamed to `unknown_lints`\n-  --> $DIR/rename.rs:87:9\n+  --> $DIR/rename.rs:89:9\n    |\n LL | #![warn(clippy::unknown_clippy_lints)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `unknown_lints`\n \n error: lint `clippy::unused_label` has been renamed to `unused_labels`\n-  --> $DIR/rename.rs:88:9\n+  --> $DIR/rename.rs:90:9\n    |\n LL | #![warn(clippy::unused_label)]\n    |         ^^^^^^^^^^^^^^^^^^^^ help: use the new name: `unused_labels`\n \n-error: aborting due to 44 previous errors\n+error: aborting due to 45 previous errors\n "}, {"sha": "49c0e4dc7eb101b2a5b1d8bf8329ea5d917b8c8c", "filename": "src/tools/clippy/tests/ui/unknown_clippy_lints.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funknown_clippy_lints.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funknown_clippy_lints.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funknown_clippy_lints.fixed?ref=bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6", "patch": "@@ -10,7 +10,7 @@\n #[warn(clippy::unnecessary_cast)]\n #[warn(clippy::useless_transmute)]\n // Shouldn't suggest rustc lint name(`dead_code`)\n-#[warn(clippy::drop_copy)]\n+#[warn(clippy::eq_op)]\n // Shouldn't suggest removed/deprecated clippy lint name(`unused_collect`)\n #[warn(clippy::unused_self)]\n // Shouldn't suggest renamed clippy lint name(`const_static_lifetime`)"}, {"sha": "584c428932fee8ead45dfc41e240fde385290519", "filename": "src/tools/clippy/tests/ui/unknown_clippy_lints.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funknown_clippy_lints.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funknown_clippy_lints.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funknown_clippy_lints.stderr?ref=bbb24ce3da5a6b3e5e864fd76e2dd304a55216c6", "patch": "@@ -34,7 +34,7 @@ error: unknown lint: `clippy::dead_cod`\n   --> $DIR/unknown_clippy_lints.rs:13:8\n    |\n LL | #[warn(clippy::dead_cod)]\n-   |        ^^^^^^^^^^^^^^^^ help: did you mean: `clippy::drop_copy`\n+   |        ^^^^^^^^^^^^^^^^ help: did you mean: `clippy::eq_op`\n \n error: unknown lint: `clippy::unused_colle`\n   --> $DIR/unknown_clippy_lints.rs:15:8"}]}