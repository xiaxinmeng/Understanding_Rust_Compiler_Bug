{"sha": "49e14a99ed4d0baf849bbd5766f6c16e7d37930c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5ZTE0YTk5ZWQ0ZDBiYWY4NDliYmQ1NzY2ZjZjMTZlN2QzNzkzMGM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-30T17:03:18Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-30T17:03:18Z"}, "message": "Complete types", "tree": {"sha": "080b101c51c4f2c5921ee14000950abd65917994", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/080b101c51c4f2c5921ee14000950abd65917994"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49e14a99ed4d0baf849bbd5766f6c16e7d37930c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49e14a99ed4d0baf849bbd5766f6c16e7d37930c", "html_url": "https://github.com/rust-lang/rust/commit/49e14a99ed4d0baf849bbd5766f6c16e7d37930c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49e14a99ed4d0baf849bbd5766f6c16e7d37930c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fcebbc51284408203c05219a0ee92519f51ea74", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fcebbc51284408203c05219a0ee92519f51ea74", "html_url": "https://github.com/rust-lang/rust/commit/9fcebbc51284408203c05219a0ee92519f51ea74"}], "stats": {"total": 43, "additions": 35, "deletions": 8}, "files": [{"sha": "f733cd2b2ba52dcf26d2268b273b2b65f72b4f55", "filename": "crates/libeditor/src/completion.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/49e14a99ed4d0baf849bbd5766f6c16e7d37930c/crates%2Flibeditor%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49e14a99ed4d0baf849bbd5766f6c16e7d37930c/crates%2Flibeditor%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Fcompletion.rs?ref=49e14a99ed4d0baf849bbd5766f6c16e7d37930c", "patch": "@@ -21,11 +21,10 @@ pub fn scope_completion(file: &File, offset: TextUnit) -> Option<Vec<CompletionI\n     // Insert a fake ident to get a valid parse tree\n     let file = {\n         let edit = AtomEdit::insert(offset, \"intellijRulezz\".to_string());\n-        // Don't bother with completion if incremental reparse fails\n-        file.incremental_reparse(&edit)?\n+        file.reparse(&edit)\n     };\n     let name_ref = find_node_at_offset::<ast::NameRef>(file.syntax(), offset)?;\n-    if !is_ident_expr(name_ref) {\n+    if !is_single_segment(name_ref) {\n         return None;\n     }\n \n@@ -50,11 +49,11 @@ pub fn scope_completion(file: &File, offset: TextUnit) -> Option<Vec<CompletionI\n     Some(res)\n }\n \n-fn is_ident_expr(name_ref: ast::NameRef) -> bool {\n-    match ancestors(name_ref.syntax()).filter_map(ast::Expr::cast).next() {\n+fn is_single_segment(name_ref: ast::NameRef) -> bool {\n+    match ancestors(name_ref.syntax()).filter_map(ast::Path::cast).next() {\n         None => false,\n-        Some(expr) => {\n-            expr.syntax().range() == name_ref.syntax().range()\n+        Some(path) => {\n+            path.syntax().range() == name_ref.syntax().range()\n         }\n     }\n }\n@@ -203,6 +202,15 @@ mod tests {\n                    CompletionItem { name: \"quux\", snippet: None }]\"#);\n     }\n \n+    #[test]\n+    fn test_complete_type() {\n+        check_scope_completion(r\"\n+            struct Foo;\n+            fn x() -> <|>\n+        \", r#\"[CompletionItem { name: \"Foo\", snippet: None },\n+               CompletionItem { name: \"x\", snippet: None }]\"#)\n+    }\n+\n     #[test]\n     fn test_completion_kewords() {\n         check_snippet_completion(r\""}, {"sha": "c2a22c8fc47413bdfb2dede175db2ebb3298abd5", "filename": "crates/libsyntax2/src/ast/generated.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/49e14a99ed4d0baf849bbd5766f6c16e7d37930c/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49e14a99ed4d0baf849bbd5766f6c16e7d37930c/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs?ref=49e14a99ed4d0baf849bbd5766f6c16e7d37930c", "patch": "@@ -1278,6 +1278,24 @@ impl<'a> AstNode<'a> for Pat<'a> {\n \n impl<'a> Pat<'a> {}\n \n+// Path\n+#[derive(Debug, Clone, Copy)]\n+pub struct Path<'a> {\n+    syntax: SyntaxNodeRef<'a>,\n+}\n+\n+impl<'a> AstNode<'a> for Path<'a> {\n+    fn cast(syntax: SyntaxNodeRef<'a>) -> Option<Self> {\n+        match syntax.kind() {\n+            PATH => Some(Path { syntax }),\n+            _ => None,\n+        }\n+    }\n+    fn syntax(self) -> SyntaxNodeRef<'a> { self.syntax }\n+}\n+\n+impl<'a> Path<'a> {}\n+\n // PathExpr\n #[derive(Debug, Clone, Copy)]\n pub struct PathExpr<'a> {"}, {"sha": "0bb40f5abd690d6284061cad4698e9360c60f661", "filename": "crates/libsyntax2/src/grammar.ron", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/49e14a99ed4d0baf849bbd5766f6c16e7d37930c/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/49e14a99ed4d0baf849bbd5766f6c16e7d37930c/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron?ref=49e14a99ed4d0baf849bbd5766f6c16e7d37930c", "patch": "@@ -513,6 +513,7 @@ Grammar(\n             collections: [\n                 [\"args\", \"Expr\"]\n             ]\n-        )\n+        ),\n+        \"Path\": (),\n     },\n )"}]}