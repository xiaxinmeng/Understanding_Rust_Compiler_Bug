{"sha": "a003ca6853772ccde7f4af6d3178126120093cc4", "node_id": "C_kwDOAAsO6NoAKGEwMDNjYTY4NTM3NzJjY2RlN2Y0YWY2ZDMxNzgxMjYxMjAwOTNjYzQ", "commit": {"author": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2021-11-10T06:46:00Z"}, "committer": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2021-11-10T06:46:00Z"}, "message": "`semicolon_if_nothing_returned` now checks if the stmt ends with semicolon", "tree": {"sha": "64c00b1cf8ffb0b63e1562d476cf783a8d4e1d9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64c00b1cf8ffb0b63e1562d476cf783a8d4e1d9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a003ca6853772ccde7f4af6d3178126120093cc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a003ca6853772ccde7f4af6d3178126120093cc4", "html_url": "https://github.com/rust-lang/rust/commit/a003ca6853772ccde7f4af6d3178126120093cc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a003ca6853772ccde7f4af6d3178126120093cc4/comments", "author": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8861c807a2aa1dad1aec6daf30064d550736381", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8861c807a2aa1dad1aec6daf30064d550736381", "html_url": "https://github.com/rust-lang/rust/commit/e8861c807a2aa1dad1aec6daf30064d550736381"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d3b4929a18925b832fb7431fc331586f3a7074e4", "filename": "clippy_lints/src/semicolon_if_nothing_returned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a003ca6853772ccde7f4af6d3178126120093cc4/clippy_lints%2Fsrc%2Fsemicolon_if_nothing_returned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a003ca6853772ccde7f4af6d3178126120093cc4/clippy_lints%2Fsrc%2Fsemicolon_if_nothing_returned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsemicolon_if_nothing_returned.rs?ref=a003ca6853772ccde7f4af6d3178126120093cc4", "patch": "@@ -44,7 +44,7 @@ impl LateLintPass<'_> for SemicolonIfNothingReturned {\n             let t_expr = cx.typeck_results().expr_ty(expr);\n             if t_expr.is_unit();\n             if let snippet = snippet_with_macro_callsite(cx, expr.span, \"}\");\n-            if !snippet.ends_with('}');\n+            if !snippet.ends_with('}') && !snippet.ends_with(';');\n             if cx.sess().source_map().is_multiline(block.span);\n             then {\n                 // filter out the desugared `for` loop"}]}