{"sha": "b5cadd734eed6f4ba317550f8d6e3ab019fe1bcb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1Y2FkZDczNGVlZDZmNGJhMzE3NTUwZjhkNmUzYWIwMTlmZTFiY2I=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-25T20:34:55Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-25T20:34:55Z"}, "message": "ignore single-match for or patterns", "tree": {"sha": "9020c533cb5c281019ceb7594bbcfe840876ebe8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9020c533cb5c281019ceb7594bbcfe840876ebe8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5cadd734eed6f4ba317550f8d6e3ab019fe1bcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5cadd734eed6f4ba317550f8d6e3ab019fe1bcb", "html_url": "https://github.com/rust-lang/rust/commit/b5cadd734eed6f4ba317550f8d6e3ab019fe1bcb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5cadd734eed6f4ba317550f8d6e3ab019fe1bcb/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "982c51e769c693644eec19ac9f1e339997bbe579", "url": "https://api.github.com/repos/rust-lang/rust/commits/982c51e769c693644eec19ac9f1e339997bbe579", "html_url": "https://github.com/rust-lang/rust/commit/982c51e769c693644eec19ac9f1e339997bbe579"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "ac4f012f35b3a688d60145a02e7ab4db025eecab", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b5cadd734eed6f4ba317550f8d6e3ab019fe1bcb/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5cadd734eed6f4ba317550f8d6e3ab019fe1bcb/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=b5cadd734eed6f4ba317550f8d6e3ab019fe1bcb", "patch": "@@ -255,6 +255,11 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Matches {\n #[rustfmt::skip]\n fn check_single_match(cx: &LateContext<'_, '_>, ex: &Expr, arms: &[Arm], expr: &Expr) {\n     if arms.len() == 2 && arms[0].guard.is_none() && arms[1].guard.is_none() {\n+        if let PatKind::Or(..) = arms[0].pat.node {\n+            // don't lint for or patterns for now, this makes\n+            // the lint noisy in unnecessary situations\n+            return;\n+        }\n         let els = remove_blocks(&arms[1].body);\n         let els = if is_unit_expr(els) {\n             None"}]}