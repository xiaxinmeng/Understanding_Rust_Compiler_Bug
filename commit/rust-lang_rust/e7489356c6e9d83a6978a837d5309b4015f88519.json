{"sha": "e7489356c6e9d83a6978a837d5309b4015f88519", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3NDg5MzU2YzZlOWQ4M2E2OTc4YTgzN2Q1MzA5YjQwMTVmODg1MTk=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-03-07T21:10:56Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-03-07T21:12:42Z"}, "message": "Format glob imports\n\nFixes #1356", "tree": {"sha": "c8945d86985672af338f88e56e9c48726711e590", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8945d86985672af338f88e56e9c48726711e590"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7489356c6e9d83a6978a837d5309b4015f88519", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7489356c6e9d83a6978a837d5309b4015f88519", "html_url": "https://github.com/rust-lang/rust/commit/e7489356c6e9d83a6978a837d5309b4015f88519", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7489356c6e9d83a6978a837d5309b4015f88519/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92ef8f8fc94409c204e33627f29aa76617887d7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/92ef8f8fc94409c204e33627f29aa76617887d7f", "html_url": "https://github.com/rust-lang/rust/commit/92ef8f8fc94409c204e33627f29aa76617887d7f"}], "stats": {"total": 61, "additions": 36, "deletions": 25}, "files": [{"sha": "cafba0bb2c5aa6ab18b9e73ef7c9816803584603", "filename": "src/imports.rs", "status": "modified", "additions": 28, "deletions": 25, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/e7489356c6e9d83a6978a837d5309b4015f88519/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7489356c6e9d83a6978a837d5309b4015f88519/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=e7489356c6e9d83a6978a837d5309b4015f88519", "patch": "@@ -132,6 +132,26 @@ fn compare_use_items(a: &ast::Item, b: &ast::Item) -> Option<Ordering> {\n // TODO (some day) remove unused imports, expand globs, compress many single\n // imports into a list import.\n \n+fn rewrite_view_path_prefix(path: &ast::Path,\n+                            context: &RewriteContext,\n+                            shape: Shape)\n+                            -> Option<String> {\n+    let path_str = if path.segments\n+           .last()\n+           .unwrap()\n+           .identifier\n+           .to_string() == \"self\" && path.segments.len() > 1 {\n+        let path = &ast::Path {\n+                        span: path.span.clone(),\n+                        segments: path.segments[..path.segments.len() - 1].to_owned(),\n+                    };\n+        try_opt!(rewrite_path(context, PathContext::Import, None, path, shape))\n+    } else {\n+        try_opt!(rewrite_path(context, PathContext::Import, None, path, shape))\n+    };\n+    Some(path_str)\n+}\n+\n impl Rewrite for ast::ViewPath {\n     // Returns an empty string when the ViewPath is empty (like foo::bar::{})\n     fn rewrite(&self, context: &RewriteContext, shape: Shape) -> Option<String> {\n@@ -142,34 +162,17 @@ impl Rewrite for ast::ViewPath {\n             ast::ViewPath_::ViewPathList(ref path, ref path_list) => {\n                 rewrite_use_list(shape, path, path_list, self.span, context)\n             }\n-            ast::ViewPath_::ViewPathGlob(_) => None,\n+            ast::ViewPath_::ViewPathGlob(ref path) => {\n+                // 4 = \"::*\".len()\n+                let prefix_shape = try_opt!(shape.sub_width(3));\n+                let path_str = try_opt!(rewrite_view_path_prefix(path, context, prefix_shape));\n+                Some(format!(\"{}::*\", path_str))\n+            }\n             ast::ViewPath_::ViewPathSimple(ident, ref path) => {\n                 let ident_str = ident.to_string();\n                 // 4 = \" as \".len()\n-                let budget = try_opt!(shape.width.checked_sub(ident_str.len() + 4));\n-\n-                let path_str = if path.segments\n-                       .last()\n-                       .unwrap()\n-                       .identifier\n-                       .to_string() == \"self\" &&\n-                                  path.segments.len() > 1 {\n-                    let path = &ast::Path {\n-                                    span: path.span.clone(),\n-                                    segments: path.segments[..path.segments.len() - 1].to_owned(),\n-                                };\n-                    try_opt!(rewrite_path(context,\n-                                          PathContext::Import,\n-                                          None,\n-                                          &path,\n-                                          Shape::legacy(budget, shape.indent)))\n-                } else {\n-                    try_opt!(rewrite_path(context,\n-                                          PathContext::Import,\n-                                          None,\n-                                          path,\n-                                          Shape::legacy(budget, shape.indent)))\n-                };\n+                let prefix_shape = try_opt!(shape.sub_width(ident_str.len() + 4));\n+                let path_str = try_opt!(rewrite_view_path_prefix(path, context, prefix_shape));\n \n                 Some(if path.segments\n                             .last()"}, {"sha": "91016f8cb7095ea460801c936fb2c1fca9832382", "filename": "tests/source/imports.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7489356c6e9d83a6978a837d5309b4015f88519/tests%2Fsource%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7489356c6e9d83a6978a837d5309b4015f88519/tests%2Fsource%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fimports.rs?ref=e7489356c6e9d83a6978a837d5309b4015f88519", "patch": "@@ -64,3 +64,7 @@ use ::foo::{Bar};\n use ::foo::{Bar, Baz};\n use ::{Foo};\n use ::{Bar, Baz};\n+\n+// spaces used to cause glob imports to disappear (#1356)\n+use super:: * ;\n+use foo::issue_1356:: * ;"}, {"sha": "1f4a692d0cc7e4b1b78cf544702289bfab0f7b70", "filename": "tests/target/imports.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7489356c6e9d83a6978a837d5309b4015f88519/tests%2Ftarget%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7489356c6e9d83a6978a837d5309b4015f88519/tests%2Ftarget%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimports.rs?ref=e7489356c6e9d83a6978a837d5309b4015f88519", "patch": "@@ -59,3 +59,7 @@ use foo::Bar;\n use foo::{Bar, Baz};\n use Foo;\n use {Bar, Baz};\n+\n+// spaces used to cause glob imports to disappear (#1356)\n+use super::*;\n+use foo::issue_1356::*;"}]}