{"sha": "ceec2250a361ee3f84ba225bdbd882e0df859441", "node_id": "C_kwDOAAsO6NoAKGNlZWMyMjUwYTM2MWVlM2Y4NGJhMjI1YmRiZDg4MmUwZGY4NTk0NDE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-06-02T06:07:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-02T06:07:37Z"}, "message": "Rollup merge of #111914 - rcvalle:rust-cfi-fix-111184, r=compiler-errors\n\nCFI: Fix cfi with async: transform_ty: unexpected GeneratorWitness(Bi\u2026\n\nFixes https://github.com/rust-lang/rust/issues/111184 by encoding ty::Generator parent substs only.", "tree": {"sha": "749f96e7382a4e1fab28b98687c52875ce44f0f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/749f96e7382a4e1fab28b98687c52875ce44f0f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ceec2250a361ee3f84ba225bdbd882e0df859441", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkeYcpCRBK7hj4Ov3rIwAAFtMIAF7vJbjTjh0+E08IbD8Fd85I\n7hT2bpQ+8EG39v0VJ0UgQ1srG8+SirJXv4b10v72cQxLWYW69+zSrouQvI9nyaaa\nwtGmM/p+JvPDStj9FRgmKkta/7eGGj5kP5Tx8qv6+s2dbCYlNJ4I/Txj/dSyCMM3\ntYfWMpKsAcXB0ENwUYwJhYTWCrSJ591ebUVikYQstQiCjDvyu2jWTLAhwftpXdx/\nlkIvp0agIEidldaKxGvx+LjGFG/5Z7SjB62hmDnB6UQJcID1CNqEU0Dt8Wf0k8M7\nzFVV5NSVfK+NUeWyxITTiPI6CpOWYaNZBW9GeAJfN1gkN0r3Zl8YPFLZOoKZmXs=\n=wgFV\n-----END PGP SIGNATURE-----\n", "payload": "tree 749f96e7382a4e1fab28b98687c52875ce44f0f6\nparent 24404e6409c0eb824bd7fe8204a2155a29d74887\nparent 76ff5ec88624ea61ae49b728ce4d382df8fb7fe3\nauthor Michael Goulet <michael@errs.io> 1685686057 -0700\ncommitter GitHub <noreply@github.com> 1685686057 -0700\n\nRollup merge of #111914 - rcvalle:rust-cfi-fix-111184, r=compiler-errors\n\nCFI: Fix cfi with async: transform_ty: unexpected GeneratorWitness(Bi\u2026\n\nFixes https://github.com/rust-lang/rust/issues/111184 by encoding ty::Generator parent substs only.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ceec2250a361ee3f84ba225bdbd882e0df859441", "html_url": "https://github.com/rust-lang/rust/commit/ceec2250a361ee3f84ba225bdbd882e0df859441", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ceec2250a361ee3f84ba225bdbd882e0df859441/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24404e6409c0eb824bd7fe8204a2155a29d74887", "url": "https://api.github.com/repos/rust-lang/rust/commits/24404e6409c0eb824bd7fe8204a2155a29d74887", "html_url": "https://github.com/rust-lang/rust/commit/24404e6409c0eb824bd7fe8204a2155a29d74887"}, {"sha": "76ff5ec88624ea61ae49b728ce4d382df8fb7fe3", "url": "https://api.github.com/repos/rust-lang/rust/commits/76ff5ec88624ea61ae49b728ce4d382df8fb7fe3", "html_url": "https://github.com/rust-lang/rust/commit/76ff5ec88624ea61ae49b728ce4d382df8fb7fe3"}], "stats": {"total": 46, "additions": 41, "deletions": 5}, "files": [{"sha": "497131ea79d211176e3ca69f339c6b0306f4060a", "filename": "compiler/rustc_symbol_mangling/src/typeid/typeid_itanium_cxx_abi.rs", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/ceec2250a361ee3f84ba225bdbd882e0df859441/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftypeid%2Ftypeid_itanium_cxx_abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ceec2250a361ee3f84ba225bdbd882e0df859441/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftypeid%2Ftypeid_itanium_cxx_abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftypeid%2Ftypeid_itanium_cxx_abi.rs?ref=ceec2250a361ee3f84ba225bdbd882e0df859441", "patch": "@@ -601,9 +601,7 @@ fn encode_ty<'tcx>(\n         }\n \n         // Function types\n-        ty::FnDef(def_id, substs)\n-        | ty::Closure(def_id, substs)\n-        | ty::Generator(def_id, substs, ..) => {\n+        ty::FnDef(def_id, substs) | ty::Closure(def_id, substs) => {\n             // u<length><name>[I<element-type1..element-typeN>E], where <element-type> is <subst>,\n             // as vendor extended type.\n             let mut s = String::new();\n@@ -614,6 +612,23 @@ fn encode_ty<'tcx>(\n             typeid.push_str(&s);\n         }\n \n+        ty::Generator(def_id, substs, ..) => {\n+            // u<length><name>[I<element-type1..element-typeN>E], where <element-type> is <subst>,\n+            // as vendor extended type.\n+            let mut s = String::new();\n+            let name = encode_ty_name(tcx, *def_id);\n+            let _ = write!(s, \"u{}{}\", name.len(), &name);\n+            // Encode parent substs only\n+            s.push_str(&encode_substs(\n+                tcx,\n+                tcx.mk_substs(substs.as_generator().parent_substs()),\n+                dict,\n+                options,\n+            ));\n+            compress(dict, DictKey::Ty(ty, TyQ::None), &mut s);\n+            typeid.push_str(&s);\n+        }\n+\n         // Pointer types\n         ty::Ref(region, ty0, ..) => {\n             // [U3mut]u3refI<element-type>E as vendor extended type qualifier and type\n@@ -732,7 +747,12 @@ fn transform_ty<'tcx>(tcx: TyCtxt<'tcx>, ty: Ty<'tcx>, options: TransformTyOptio\n     let mut ty = ty;\n \n     match ty.kind() {\n-        ty::Float(..) | ty::Char | ty::Str | ty::Never | ty::Foreign(..) => {}\n+        ty::Float(..)\n+        | ty::Char\n+        | ty::Str\n+        | ty::Never\n+        | ty::Foreign(..)\n+        | ty::GeneratorWitness(..) => {}\n \n         ty::Bool => {\n             if options.contains(EncodeTyOptions::NORMALIZE_INTEGERS) {\n@@ -915,7 +935,6 @@ fn transform_ty<'tcx>(tcx: TyCtxt<'tcx>, ty: Ty<'tcx>, options: TransformTyOptio\n \n         ty::Bound(..)\n         | ty::Error(..)\n-        | ty::GeneratorWitness(..)\n         | ty::GeneratorWitnessMIR(..)\n         | ty::Infer(..)\n         | ty::Alias(..)"}, {"sha": "8f4118057cec4dd931736923c0830e280825fd2a", "filename": "tests/ui/sanitize/issue-111184-generator-witness.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ceec2250a361ee3f84ba225bdbd882e0df859441/tests%2Fui%2Fsanitize%2Fissue-111184-generator-witness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ceec2250a361ee3f84ba225bdbd882e0df859441/tests%2Fui%2Fsanitize%2Fissue-111184-generator-witness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsanitize%2Fissue-111184-generator-witness.rs?ref=ceec2250a361ee3f84ba225bdbd882e0df859441", "patch": "@@ -0,0 +1,17 @@\n+// Regression test for issue 111184, where ty::GeneratorWitness were not expected to occur in\n+// encode_ty and caused the compiler to ICE.\n+//\n+// needs-sanitizer-cfi\n+// compile-flags: -Clto -Ctarget-feature=-crt-static -Zsanitizer=cfi --edition=2021\n+// no-prefer-dynamic\n+// only-x86_64-unknown-linux-gnu\n+// run-pass\n+\n+use std::future::Future;\n+\n+async fn foo() {}\n+fn bar<T>(_: impl Future<Output = T>) {}\n+\n+fn main() {\n+    bar(foo());\n+}"}]}