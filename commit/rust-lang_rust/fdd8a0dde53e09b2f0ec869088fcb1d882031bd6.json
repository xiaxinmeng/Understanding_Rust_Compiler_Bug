{"sha": "fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "node_id": "C_kwDOAAsO6NoAKGZkZDhhMGRkZTUzZTA5YjJmMGVjODY5MDg4ZmNiMWQ4ODIwMzFiZDY", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-10-03T21:29:34Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-10-04T02:53:48Z"}, "message": "Don't suggest replacing region with 'static in NLL\n\nFixes #73159\n\nThis is similar to #69350 - if the user didn't initially\nwrite out a 'static lifetime, adding 'static in response to\na lifetime error is usually the wrong thing to do.", "tree": {"sha": "420e364a1ec92fecd01019cb00090650d1d8b8d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/420e364a1ec92fecd01019cb00090650d1d8b8d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmFabL0ACgkQtAh+UQ6Y\nsWTxvxAAnHfRQ2R9Fv/zaHQFCWVJq/Wtlaw7vNVVsURE0euqmBcjxIj6rE0kzDP+\n341UU69Y00DwTzU3lYvWpTaNYuvVhMAhZvDKxOD79v8sPUFermKeWqpq9VD9N/aQ\nxDDGZLyPF3HbdDC55agbv2JBqvk82ThJT7nOBsBAMCwYHe2FbkijSXvybKPSQtbk\nFwdzMox4Hr6PrgvbXrGTn3fKxOZozFuUOaFiywfUK8KRd9RRaLyU0wGrLksYHZE1\nBguh81mwcDpaiIjWGN5NKR659sEltoQesmBUSwqgrtGhlDX0gcgfTUdeqCPGkjYp\nl6MYapK/zIo3cW93wwNqFBfvLo7WKFwzlVb5qIVsyVhKoWC4C2YJrUngBhSRyzC1\nd79NF+uImHEYszbCpOAie2U9g2Swl1mNYRi/hCXxy2IOmvxfvJfdN6fjDTCrCnii\n31SeRRoh9CK1Tvc29lFL7tnMb8+bGJe/ITD+rA1HiqlYEfzMh94muYcyEN7LfSHD\ny9owBKuRBZ5z0xqJLE6tl4fGD814xzR0n0dxLiyEq8GLLtrCJcJIcfnyFhJ/l0R3\nptvSPl1rYdr8ylhsrvUc3KMUmxF8ViNgm5zWjsjrlIjodAFwxnUnF0vCFEvHz/z1\nSj05bIVeZeGr4fp4lCkAQgbaugZ8fjJPwpRCt0XJ/BRSavmAQ6M=\n=jDXD\n-----END PGP SIGNATURE-----", "payload": "tree 420e364a1ec92fecd01019cb00090650d1d8b8d6\nparent 08759c691e2e9799a3c6780ffdf910240ebd4a6b\nauthor Aaron Hill <aa1ronham@gmail.com> 1633296574 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1633316028 -0500\n\nDon't suggest replacing region with 'static in NLL\n\nFixes #73159\n\nThis is similar to #69350 - if the user didn't initially\nwrite out a 'static lifetime, adding 'static in response to\na lifetime error is usually the wrong thing to do.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "html_url": "https://github.com/rust-lang/rust/commit/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08759c691e2e9799a3c6780ffdf910240ebd4a6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/08759c691e2e9799a3c6780ffdf910240ebd4a6b", "html_url": "https://github.com/rust-lang/rust/commit/08759c691e2e9799a3c6780ffdf910240ebd4a6b"}], "stats": {"total": 239, "additions": 25, "deletions": 214}, "files": [{"sha": "b15e55cd6675e786be24d4fabb6a5362717f6c49", "filename": "compiler/rustc_borrowck/src/diagnostics/outlives_suggestion.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Foutlives_suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Foutlives_suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Foutlives_suggestion.rs?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -171,9 +171,7 @@ impl OutlivesSuggestionBuilder {\n         let outlived_fr_name = self.region_vid_to_name(mbcx, errci.outlived_fr);\n \n         if let (Some(fr_name), Some(outlived_fr_name)) = (fr_name, outlived_fr_name) {\n-            if let RegionNameSource::Static = outlived_fr_name.source {\n-                diag.help(&format!(\"consider replacing `{}` with `'static`\", fr_name));\n-            } else {\n+            if !matches!(outlived_fr_name.source, RegionNameSource::Static) {\n                 diag.help(&format!(\n                     \"consider adding the following bound: `{}: {}`\",\n                     fr_name, outlived_fr_name"}, {"sha": "f532c96ed2cc73ed21a190765b33a79a82eb24d5", "filename": "src/test/ui/associated-types/cache/project-fn-ret-contravariant.transmute.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.transmute.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.transmute.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.transmute.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn baz<'a,'b>(x: &'a u32) -> &'static u32 {\n    |        -- lifetime `'a` defined here\n LL |    bar(foo, x)\n    |    ^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "c417cdd543e4d7b677eb3f4604c130a34d6e27b4", "filename": "src/test/ui/associated-types/cache/project-fn-ret-invariant.transmute.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.transmute.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.transmute.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.transmute.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -6,8 +6,6 @@ LL | fn baz<'a, 'b>(x: Type<'a>) -> Type<'static> {\n ...\n LL |     bar(foo, x)\n    |     ^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "26f47eb684dfc5cca15bb5e64f50de88157d0dbc", "filename": "src/test/ui/closure-expected-type/expect-fn-supply-fn.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fclosure-expected-type%2Fexpect-fn-supply-fn.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fclosure-expected-type%2Fexpect-fn-supply-fn.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosure-expected-type%2Fexpect-fn-supply-fn.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -18,8 +18,6 @@ LL | fn expect_free_supply_free_from_fn<'x>(x: &'x u32) {\n ...\n LL |     with_closure_expecting_fn_with_free_region(|x: fn(&'x u32), y| {});\n    |                                                 ^ requires that `'x` must outlive `'static`\n-   |\n-   = help: consider replacing `'x` with `'static`\n \n error[E0308]: mismatched types\n   --> $DIR/expect-fn-supply-fn.rs:32:49"}, {"sha": "9aab51c986caca241d101e28e59d56bc9749b89a", "filename": "src/test/ui/closures/closure-expected-type/expect-region-supply-region-2.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region-2.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -17,8 +17,6 @@ LL | fn expect_bound_supply_named<'x>() {\n ...\n LL |     closure_expecting_bound(|x: &'x u32| {\n    |                              ^ requires that `'x` must outlive `'static`\n-   |\n-   = help: consider replacing `'x` with `'static`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "a5770431eaff105648be42fac3c8330dfe8975b8", "filename": "src/test/ui/hrtb/hrtb-just-for-static.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-just-for-static.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-just-for-static.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-just-for-static.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -14,8 +14,6 @@ LL | fn give_some<'a>() {\n    |              -- lifetime `'a` defined here\n LL |     want_hrtb::<&'a u32>()\n    |     ^^^^^^^^^^^^^^^^^^^^ requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: implementation of `Foo` is not general enough\n   --> $DIR/hrtb-just-for-static.rs:30:5"}, {"sha": "68da46d46bd14a20fa23b25d9aa33aba934a73ce", "filename": "src/test/ui/hrtb/hrtb-perfect-forwarding.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-perfect-forwarding.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-perfect-forwarding.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-perfect-forwarding.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -54,8 +54,6 @@ LL | fn foo_hrtb_bar_not<'b, T>(mut t: T)\n ...\n LL |     foo_hrtb_bar_not(&mut t);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ requires that `'b` must outlive `'static`\n-   |\n-   = help: consider replacing `'b` with `'static`\n \n error: implementation of `Bar` is not general enough\n   --> $DIR/hrtb-perfect-forwarding.rs:43:5"}, {"sha": "e49bd9da754d6d6c019f2e8fe01b6e9dde5579ff", "filename": "src/test/ui/impl-header-lifetime-elision/dyn-trait.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn with_dyn_debug_static<'a>(x: Box<dyn Debug + 'a>) {\n    |                              - `x` is a reference that is only valid in the function body\n LL |     static_val(x);\n    |     ^^^^^^^^^^^^^ `x` escapes the function body here\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "812093e6e76213ed950eb1da6547f25125ddc4c7", "filename": "src/test/ui/impl-trait/must_outlive_least_region_or_bound.nll.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fimpl-trait%2Fmust_outlive_least_region_or_bound.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fimpl-trait%2Fmust_outlive_least_region_or_bound.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmust_outlive_least_region_or_bound.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -19,7 +19,6 @@ LL | fn explicit<'a>(x: &'a i32) -> impl Copy { x }\n    |             |\n    |             lifetime `'a` defined here\n    |\n-   = help: consider replacing `'a` with `'static`\n help: to allow this `impl Trait` to capture borrowed data with lifetime `'a`, add `'a` as a bound\n    |\n LL | fn explicit<'a>(x: &'a i32) -> impl Copy + 'a { x }\n@@ -42,7 +41,6 @@ LL | fn explicit2<'a>(x: &'a i32) -> impl Copy + 'static { x }\n    |              -- lifetime `'a` defined here            ^ returning this value requires that `'a` must outlive `'static`\n    |\n    = help: consider replacing `'a` with `'static`\n-   = help: consider replacing `'a` with `'static`\n \n error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/must_outlive_least_region_or_bound.rs:11:41\n@@ -67,7 +65,6 @@ LL | fn with_bound<'a>(x: &'a i32) -> impl LifetimeTrait<'a> + 'static { x }\n    |               -- lifetime `'a` defined here                         ^ returning this value requires that `'a` must outlive `'static`\n    |\n    = help: consider replacing `'a` with `'static`\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/must_outlive_least_region_or_bound.rs:32:61"}, {"sha": "a3aeff50eee4cb8cbd7a5dd28352b9436f3a0d15", "filename": "src/test/ui/impl-trait/static-return-lifetime-infered.nll.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fimpl-trait%2Fstatic-return-lifetime-infered.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fimpl-trait%2Fstatic-return-lifetime-infered.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fstatic-return-lifetime-infered.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -19,7 +19,6 @@ LL |     fn iter_values<'a>(&'a self) -> impl Iterator<Item=u32> {\n    |                    |\n    |                    lifetime `'a` defined here\n    |\n-   = help: consider replacing `'a` with `'static`\n help: to allow this `impl Trait` to capture borrowed data with lifetime `'a`, add `'a` as a bound\n    |\n LL |     fn iter_values<'a>(&'a self) -> impl Iterator<Item=u32> + 'a {"}, {"sha": "a7b827d27a87bb8d22249b67322db3f485074c6f", "filename": "src/test/ui/issues/issue-10291.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fissues%2Fissue-10291.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fissues%2Fissue-10291.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-10291.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -6,8 +6,6 @@ LL | fn test<'x>(x: &'x isize) {\n LL |     drop::<Box<dyn for<'z> FnMut(&'z isize) -> &'z isize>>(Box::new(|z| {\n LL |         x\n    |         ^ returning this value requires that `'x` must outlive `'static`\n-   |\n-   = help: consider replacing `'x` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "c7601caacdca3fb4e56bc147a45e82e0a05fb767", "filename": "src/test/ui/issues/issue-26217.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fissues%2Fissue-26217.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fissues%2Fissue-26217.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-26217.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn bar<'a>() {\n    |        -- lifetime `'a` defined here\n LL |     foo::<&'a i32>();\n    |     ^^^^^^^^^^^^^^ requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "59be0f983b9078fb7ed47495f96034d5256a7f93", "filename": "src/test/ui/issues/issue-54943.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fissues%2Fissue-54943.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fissues%2Fissue-54943.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-54943.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -6,8 +6,6 @@ LL | fn boo<'a>() {\n ...\n LL |     let x = foo::<&'a u32>();\n    |             ^^^^^^^^^^^^^^ requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "c1a3084f30eae913a45cf42cee6afe236677e5f3", "filename": "src/test/ui/issues/issue-55796.nll.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fissues%2Fissue-55796.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fissues%2Fissue-55796.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-55796.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -6,8 +6,6 @@ LL | pub trait Graph<'a> {\n ...\n LL |         Box::new(self.out_edges(u).map(|e| e.target()))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/issue-55796.rs:23:9\n@@ -17,8 +15,6 @@ LL | pub trait Graph<'a> {\n ...\n LL |         Box::new(self.in_edges(u).map(|e| e.target()))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "d779753687ed5af1513029d48676637619a01af9", "filename": "src/test/ui/issues/issue-75777.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fissues%2Fissue-75777.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fissues%2Fissue-75777.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-75777.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -6,8 +6,6 @@ LL | fn inject<'a, Env: 'a, A: 'a + Send>(v: A) -> Box<dyn FnOnce(&'a Env) -> Bo\n LL |     let fut: BoxFuture<'a, A> = Box::pin(future::ready(v));\n LL |     Box::new(move |_| fut)\n    |     ^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "050d5fcf05ef43f54e124c83e5df5f9ca16d0217", "filename": "src/test/ui/lifetimes/lifetime-bound-will-change-warning.nll.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Flifetimes%2Flifetime-bound-will-change-warning.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Flifetimes%2Flifetime-bound-will-change-warning.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-bound-will-change-warning.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -6,8 +6,6 @@ LL | fn test2<'a>(x: &'a Box<dyn Fn() + 'a>) {\n LL |     // but ref_obj will not, so warn.\n LL |     ref_obj(x)\n    |     ^^^^^^^^^^ `x` escapes the function body here\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error[E0521]: borrowed data escapes outside of function\n   --> $DIR/lifetime-bound-will-change-warning.rs:39:5\n@@ -17,8 +15,6 @@ LL | fn test2cc<'a>(x: &'a Box<dyn Fn() + 'a>) {\n LL |     // same as test2, but cross crate\n LL |     lib::ref_obj(x)\n    |     ^^^^^^^^^^^^^^^ `x` escapes the function body here\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "832688f5162b346d28b19dccb86d64cd92d09575", "filename": "src/test/ui/lub-if.nll.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Flub-if.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Flub-if.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flub-if.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -6,8 +6,6 @@ LL | pub fn opt_str2<'a>(maybestr: &'a Option<String>) -> &'static str {\n ...\n LL |         s\n    |         ^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/lub-if.rs:35:9\n@@ -17,8 +15,6 @@ LL | pub fn opt_str3<'a>(maybestr: &'a Option<String>) -> &'static str {\n ...\n LL |         s\n    |         ^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "3a344a77d2c2d779935c478cf2e15d2dfe8fdb1b", "filename": "src/test/ui/lub-match.nll.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Flub-match.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Flub-match.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flub-match.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -6,8 +6,6 @@ LL | pub fn opt_str2<'a>(maybestr: &'a Option<String>) -> &'static str {\n ...\n LL |             s\n    |             ^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/lub-match.rs:39:13\n@@ -17,8 +15,6 @@ LL | pub fn opt_str3<'a>(maybestr: &'a Option<String>) -> &'static str {\n ...\n LL |             s\n    |             ^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "d17a40a95c1b8ec01ed6387e2518f90c35309bdc", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-no-bound.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -46,8 +46,6 @@ LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get())\n LL | |     });\n    | |______^ `cell_a` escapes the function body here\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "06c46ec8259a0e0e4592d1d00523e0ef4100babb", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-wrong-bound.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -46,8 +46,6 @@ LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get())\n LL | |     });\n    | |______^ `cell_a` escapes the function body here\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "d0a24a267fd4f3aab01b8e363eaa4799df463947", "filename": "src/test/ui/nll/closure-requirements/region-lbr-named-does-not-outlive-static.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-named-does-not-outlive-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-named-does-not-outlive-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-named-does-not-outlive-static.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn foo<'a>(x: &'a u32) -> &'static u32 {\n    |        -- lifetime `'a` defined here\n LL |     &*x\n    |     ^^^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "38dd1b5f6fe733a77111f4a1367eea83d27c6509", "filename": "src/test/ui/nll/issue-50716.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fissue-50716.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fissue-50716.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-50716.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -6,8 +6,6 @@ LL | fn foo<'a, T: 'static>(s: Box<<&'a T as A>::X>)\n ...\n LL |     let _x = *s;\n    |              ^^ proving this value is `Sized` requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "4f797f26a1a7c4e16c1d4d0ac9179e0c5874243d", "filename": "src/test/ui/nll/issue-55401.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fissue-55401.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fissue-55401.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-55401.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -6,8 +6,6 @@ LL | fn static_to_a_to_static_through_ref_in_tuple<'a>(x: &'a u32) -> &'static u\n LL |     let (ref y, _z): (&'a u32, u32) = (&22, 44);\n LL |     *y\n    |     ^^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "aba07542d026e826b2d8589e14cc306cad81b1a8", "filename": "src/test/ui/nll/issue-58299.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fissue-58299.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fissue-58299.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-58299.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -6,8 +6,6 @@ LL | fn foo<'a>(x: i32) {\n ...\n LL |         A::<'a>::X..=A::<'static>::X => (),\n    |         ^^^^^^^^^^ requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/issue-58299.rs:24:27\n@@ -17,8 +15,6 @@ LL | fn bar<'a>(x: i32) {\n ...\n LL |         A::<'static>::X..=A::<'a>::X => (),\n    |                           ^^^^^^^^^^ requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "a5455a3f9eb7b1bf7e3628f53b40c4145d8e9bac", "filename": "src/test/ui/nll/issue-73159-rpit-static.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fissue-73159-rpit-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fissue-73159-rpit-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-73159-rpit-static.rs?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -0,0 +1,14 @@\n+// Regression test for issue #73159\n+// Tests thar we don't suggest replacing 'a with 'static'\n+\n+#![feature(nll)]\n+\n+struct Foo<'a>(&'a [u8]);\n+\n+impl<'a> Foo<'a> {\n+    fn make_it(&self) -> impl Iterator<Item = u8> { //~ ERROR lifetime may not live\n+        self.0.iter().copied()\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "60b1552701af91eb75e2ba87db04791fa23e54ae", "filename": "src/test/ui/nll/issue-73159-rpit-static.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fissue-73159-rpit-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fissue-73159-rpit-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-73159-rpit-static.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -0,0 +1,10 @@\n+error: lifetime may not live long enough\n+  --> $DIR/issue-73159-rpit-static.rs:9:26\n+   |\n+LL | impl<'a> Foo<'a> {\n+   |      -- lifetime `'a` defined here\n+LL |     fn make_it(&self) -> impl Iterator<Item = u8> {\n+   |                          ^^^^^^^^^^^^^^^^^^^^^^^^ opaque type requires that `'a` must outlive `'static`\n+\n+error: aborting due to previous error\n+"}, {"sha": "4e8eec330a579c8001148f81be056f0115c27864", "filename": "src/test/ui/nll/mir_check_cast_reify.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_reify.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_reify.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_reify.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -6,8 +6,6 @@ LL | fn bar<'a>(x: &'a u32) -> &'static u32 {\n ...\n LL |     f(x)\n    |     ^^^^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "52959850a3332835fdb62d6a55396611acaa6528", "filename": "src/test/ui/nll/mir_check_cast_unsafe_fn.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsafe_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsafe_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsafe_fn.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -6,8 +6,6 @@ LL | fn bar<'a>(input: &'a u32, f: fn(&'a u32) -> &'a u32) -> &'static u32 {\n ...\n LL |     unsafe { g(input) }\n    |              ^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "364d6c17ea7f695afb6342f9e1045dcd3947e806", "filename": "src/test/ui/nll/mir_check_cast_unsize.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsize.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsize.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsize.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn bar<'a>(x: &'a u32) -> &'static dyn Debug {\n    |        -- lifetime `'a` defined here\n LL |     x\n    |     ^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "a80e59d4822fb9ac50448fd98d69de5468abb28c", "filename": "src/test/ui/nll/outlives-suggestion-more.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Foutlives-suggestion-more.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Foutlives-suggestion-more.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Foutlives-suggestion-more.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -46,8 +46,6 @@ LL | fn foo2<'a, 'b, 'c>(x: &'a usize, y: &'b usize) -> (&'c usize, &'static usi\n    |             -- lifetime `'b` defined here\n LL |     (x, y)\n    |     ^^^^^^ returning this value requires that `'b` must outlive `'static`\n-   |\n-   = help: consider replacing `'b` with `'static`\n \n help: the following changes may resolve your lifetime errors\n    |\n@@ -88,8 +86,6 @@ LL | fn foo3<'a, 'b, 'c, 'd, 'e>(\n ...\n LL |     (x, y, z)\n    |     ^^^^^^^^^ returning this value requires that `'c` must outlive `'static`\n-   |\n-   = help: consider replacing `'c` with `'static`\n \n help: the following changes may resolve your lifetime errors\n    |"}, {"sha": "fa85ce27990837876a46d78703f613033c5d3f0d", "filename": "src/test/ui/nll/outlives-suggestion-simple.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Foutlives-suggestion-simple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Foutlives-suggestion-simple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Foutlives-suggestion-simple.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -17,8 +17,6 @@ LL | fn foo2<'a>(x: &'a usize) -> &'static usize {\n    |         -- lifetime `'a` defined here\n LL |     x\n    |     ^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/outlives-suggestion-simple.rs:14:5\n@@ -66,8 +64,6 @@ LL |     pub fn foo<'a>(x: &'a usize) -> Self {\n    |                -- lifetime `'a` defined here\n LL |         Foo { x }\n    |         ^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/outlives-suggestion-simple.rs:41:9"}, {"sha": "9128fd1647959225d59b2b268dce9afcefa6656c", "filename": "src/test/ui/nll/ty-outlives/wf-unreachable.stderr", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fwf-unreachable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fwf-unreachable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fwf-unreachable.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -6,8 +6,6 @@ LL | fn uninit<'a>() {\n LL |     return;\n LL |     let x: &'static &'a ();\n    |            ^^^^^^^^^^^^^^^ type annotation requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/wf-unreachable.rs:13:12\n@@ -17,8 +15,6 @@ LL | fn var_type<'a>() {\n LL |     return;\n LL |     let x: &'static &'a () = &&();\n    |            ^^^^^^^^^^^^^^^ type annotation requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/wf-unreachable.rs:17:12\n@@ -27,8 +23,6 @@ LL | fn uninit_infer<'a>() {\n    |                 -- lifetime `'a` defined here\n LL |     let x: &'static &'a _;\n    |            ^^^^^^^^^^^^^^ type annotation requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/wf-unreachable.rs:23:12\n@@ -38,8 +32,6 @@ LL | fn infer<'a>() {\n LL |     return;\n LL |     let x: &'static &'a _ = &&();\n    |            ^^^^^^^^^^^^^^ type annotation requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/wf-unreachable.rs:28:12\n@@ -49,8 +41,6 @@ LL | fn uninit_no_var<'a>() {\n LL |     return;\n LL |     let _: &'static &'a ();\n    |            ^^^^^^^^^^^^^^^ type annotation requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/wf-unreachable.rs:33:12\n@@ -60,8 +50,6 @@ LL | fn no_var<'a>() {\n LL |     return;\n LL |     let _: &'static &'a () = &&();\n    |            ^^^^^^^^^^^^^^^ type annotation requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/wf-unreachable.rs:38:12\n@@ -71,8 +59,6 @@ LL | fn infer_no_var<'a>() {\n LL |     return;\n LL |     let _: &'static &'a _ = &&();\n    |            ^^^^^^^^^^^^^^ type annotation requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/wf-unreachable.rs:51:12\n@@ -82,8 +68,6 @@ LL | fn required_substs<'a>() {\n LL |     return;\n LL |     let _: C<'static, 'a, _> = C((), &(), &());\n    |            ^^^^^^^^^^^^^^^^^ type annotation requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to 8 previous errors\n "}, {"sha": "55bb3a6090c01e2bc6c27387ea2512388c242ee6", "filename": "src/test/ui/nll/user-annotations/closure-substs.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fclosure-substs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fclosure-substs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fclosure-substs.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -6,8 +6,6 @@ LL | fn foo<'a>() {\n ...\n LL |         return x;\n    |                ^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/closure-substs.rs:15:16\n@@ -25,8 +23,6 @@ LL | fn bar<'a>() {\n ...\n LL |         b(x);\n    |         ^^^^ argument requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error[E0521]: borrowed data escapes outside of closure\n   --> $DIR/closure-substs.rs:29:9"}, {"sha": "c39301588acfa1c02178597cdae68ffd9d2e5279", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-inherent-1.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-inherent-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-inherent-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-inherent-1.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn foo<'a>(_: &'a u32) -> &'static u32 {\n    |        -- lifetime `'a` defined here\n LL |     <Foo<'a>>::C\n    |     ^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "541a2cfaf299aaa3236bf4d1c8105231786efa1f", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-normalize.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-normalize.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-normalize.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-normalize.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn foo<'a>(_: &'a u32) -> &'static u32 {\n    |        -- lifetime `'a` defined here\n LL |     <() as Foo<'a>>::C\n    |     ^^^^^^^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "ea0fcb6d634cd9820ca0d975bf4bd7c9c8380e47", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-trait-item-1.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-1.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn foo<'a>(_: &'a u32) -> &'static u32 {\n    |        -- lifetime `'a` defined here\n LL |     <() as Foo<'a>>::C\n    |     ^^^^^^^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "ff549f1d88bd44bdd6bd88e1eeeaa09c3e45638a", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-trait-item-2.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-2.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn foo<'a, T: Foo<'a>>() -> &'static u32 {\n    |        -- lifetime `'a` defined here\n LL |     <T as Foo<'a>>::C\n    |     ^^^^^^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "7f160d8e398b9553a78b6a3d36c8e24b3d78a8e9", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-trait-item-3.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-trait-item-3.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn foo<'a, T: Foo<'a>>() -> &'static u32 {\n    |        -- lifetime `'a` defined here\n LL |     T::C\n    |     ^^^^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "768454698987edb2a1fe571a627e559a916d45c2", "filename": "src/test/ui/nll/user-annotations/inherent-associated-constants.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Finherent-associated-constants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Finherent-associated-constants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Finherent-associated-constants.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn non_wf_associated_const<'a>(x: i32) {\n    |                            -- lifetime `'a` defined here\n LL |     A::<'a>::IC;\n    |     ^^^^^^^^^^^ requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "6cfccf7cb69cec5f29b8f2d8d709802d97094fdd", "filename": "src/test/ui/nll/user-annotations/issue-54124.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fissue-54124.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fissue-54124.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fissue-54124.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -15,8 +15,6 @@ LL | fn test<'a>() {\n    |         -- lifetime `'a` defined here\n LL |     let _:fn(&()) = |_:&'a ()| {};\n    |                      ^ requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "5929707e41e10ba18c724401fd5503be3db368ae", "filename": "src/test/ui/nll/user-annotations/issue-55748-pat-types-constrain-bindings.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fissue-55748-pat-types-constrain-bindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fissue-55748-pat-types-constrain-bindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fissue-55748-pat-types-constrain-bindings.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -6,8 +6,6 @@ LL | fn coupled_regions_lhs<'a>(_x: &'a u32, s: &'static u32) -> &'static u32 {\n ...\n LL |     y\n    |     ^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/issue-55748-pat-types-constrain-bindings.rs:49:5\n@@ -17,8 +15,6 @@ LL | fn coupled_types_lhs<'a>(_x: &'a u32, s: &'static u32) -> &'static u32 {\n ...\n LL |     y\n    |     ^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/issue-55748-pat-types-constrain-bindings.rs:62:5\n@@ -28,8 +24,6 @@ LL | fn coupled_wilds_lhs<'a>(_x: &'a u32, s: &'static u32) -> &'static u32 {\n ...\n LL |     y\n    |     ^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "c99f53c5aa4c58db0c188b768fe39c2ab4bc053f", "filename": "src/test/ui/nll/user-annotations/issue-57731-ascibed-coupled-types.stderr", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fissue-57731-ascibed-coupled-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fissue-57731-ascibed-coupled-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fissue-57731-ascibed-coupled-types.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -6,8 +6,6 @@ LL | fn coupled_wilds_rhs<'a>(_x: &'a u32, s: &'static u32) -> &'static u32 {\n LL |     let ((y, _z),) = ((s, _x),): (PairCoupledTypes<_>,);\n LL |     y\n    |     ^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/issue-57731-ascibed-coupled-types.rs:22:5\n@@ -17,8 +15,6 @@ LL | fn coupled_regions_rhs<'a>(_x: &'a u32, s: &'static u32) -> &'static u32 {\n LL |     let ((y, _z),) = ((s, _x),): (PairCoupledRegions<_>,);\n LL |     y\n    |     ^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/issue-57731-ascibed-coupled-types.rs:32:5\n@@ -28,8 +24,6 @@ LL | fn cast_coupled_wilds_rhs<'a>(_x: &'a u32, s: &'static u32) -> &'static u32\n LL |     let ((y, _z),) = ((s, _x),) as (PairCoupledTypes<_>,);\n LL |     y\n    |     ^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/issue-57731-ascibed-coupled-types.rs:37:5\n@@ -39,8 +33,6 @@ LL | fn cast_coupled_regions_rhs<'a>(_x: &'a u32, s: &'static u32) -> &'static u\n LL |     let ((y, _z),) = ((s, _x),) as (PairCoupledRegions<_>,);\n LL |     y\n    |     ^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "7ebd0ae227a80e444f611a2fb3023baf4c35fd5b", "filename": "src/test/ui/nll/user-annotations/patterns.stderr", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -156,8 +156,6 @@ LL | fn static_to_a_to_static_through_variable<'a>(x: &'a u32) -> &'static u32 {\n ...\n LL |     y\n    |     ^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/patterns.rs:125:5\n@@ -167,8 +165,6 @@ LL | fn static_to_a_to_static_through_tuple<'a>(x: &'a u32) -> &'static u32 {\n ...\n LL |     y\n    |     ^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/patterns.rs:130:5\n@@ -178,8 +174,6 @@ LL | fn static_to_a_to_static_through_struct<'a>(_x: &'a u32) -> &'static u32 {\n LL |     let Single { value: y }: Single<&'a u32> = Single { value: &22 };\n LL |     y\n    |     ^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/patterns.rs:134:18\n@@ -188,8 +182,6 @@ LL | fn a_to_static_then_static<'a>(x: &'a u32) -> &'static u32 {\n    |                            -- lifetime `'a` defined here\n LL |     let (y, _z): (&'static u32, u32) = (x, 44);\n    |                  ^^^^^^^^^^^^^^^^^^^ type annotation requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to 19 previous errors\n "}, {"sha": "7d6f9f39d13ed278f4bbab199300d749fd7c5acd", "filename": "src/test/ui/object-lifetime/object-lifetime-default-from-rptr-box-error.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-box-error.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-box-error.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-box-error.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn c<'a>(t: &'a Box<dyn Test+'a>, mut ss: SomeStruct<'a>) {\n    |      -- lifetime `'a` defined here\n LL |     ss.t = t;\n    |     ^^^^^^^^ assignment requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "6df54638ce00425262306af2cad2ea9af9538321", "filename": "src/test/ui/object-lifetime/object-lifetime-default-from-rptr-struct-error.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-struct-error.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-struct-error.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-struct-error.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn c<'a>(t: &'a MyBox<dyn Test+'a>, mut ss: SomeStruct<'a>) {\n    |      -- lifetime `'a` defined here\n LL |     ss.t = t;\n    |     ^^^^^^^^ assignment requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "6ce1b2eed85d2b20312d6d6059ebad22208a312e", "filename": "src/test/ui/object-lifetime/object-lifetime-default-mybox.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-mybox.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-mybox.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-mybox.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -18,8 +18,6 @@ LL | fn load2<'a>(ss: &MyBox<dyn SomeTrait + 'a>) -> MyBox<dyn SomeTrait + 'a> {\n    |              -- `ss` is a reference that is only valid in the function body\n LL |     load0(ss)\n    |     ^^^^^^^^^ `ss` escapes the function body here\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "7221759dbd450878c62310c96ba5eae8238777fd", "filename": "src/test/ui/regions/region-invariant-static-error-reporting.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregion-invariant-static-error-reporting.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregion-invariant-static-error-reporting.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregion-invariant-static-error-reporting.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -6,8 +6,6 @@ LL | fn unify<'a>(x: Option<Invariant<'a>>, f: fn(Invariant<'a>)) {\n LL |     let bad = if x.is_some() {\n LL |         x.unwrap()\n    |         ^^^^^^^^^^ `x` escapes the function body here\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "86bd100538d70ce5341cfcdc798a2ef48791028d", "filename": "src/test/ui/regions/regions-bounded-by-trait-requiring-static.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-bounded-by-trait-requiring-static.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-bounded-by-trait-requiring-static.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-bounded-by-trait-requiring-static.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn param_not_ok<'a>(x: &'a isize) {\n    |                 -- lifetime `'a` defined here\n LL |     assert_send::<&'a isize>();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/regions-bounded-by-trait-requiring-static.rs:26:5\n@@ -15,8 +13,6 @@ LL | fn param_not_ok1<'a>(_: &'a isize) {\n    |                  -- lifetime `'a` defined here\n LL |     assert_send::<&'a str>();\n    |     ^^^^^^^^^^^^^^^^^^^^^^ requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/regions-bounded-by-trait-requiring-static.rs:30:5\n@@ -25,8 +21,6 @@ LL | fn param_not_ok2<'a>(_: &'a isize) {\n    |                  -- lifetime `'a` defined here\n LL |     assert_send::<&'a [isize]>();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/regions-bounded-by-trait-requiring-static.rs:44:5\n@@ -35,8 +29,6 @@ LL | fn box_with_region_not_ok<'a>() {\n    |                           -- lifetime `'a` defined here\n LL |     assert_send::<Box<&'a isize>>();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/regions-bounded-by-trait-requiring-static.rs:55:5\n@@ -45,8 +37,6 @@ LL | fn unsafe_ok2<'a>(_: &'a isize) {\n    |               -- lifetime `'a` defined here\n LL |     assert_send::<*const &'a isize>();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/regions-bounded-by-trait-requiring-static.rs:59:5\n@@ -55,8 +45,6 @@ LL | fn unsafe_ok3<'a>(_: &'a isize) {\n    |               -- lifetime `'a` defined here\n LL |     assert_send::<*mut &'a isize>();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to 6 previous errors\n "}, {"sha": "b6d7b8aac5f19f927e399aa28aaec81af9eb87b6", "filename": "src/test/ui/regions/regions-bounded-method-type-parameters.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-bounded-method-type-parameters.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-bounded-method-type-parameters.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-bounded-method-type-parameters.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn caller<'a>(x: &isize) {\n    |           -- lifetime `'a` defined here\n LL |     Foo.some_method::<&'a isize>();\n    |         ^^^^^^^^^^^ requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "6a0e95861610173296f1de7589244c36e5285699", "filename": "src/test/ui/regions/regions-close-object-into-object-2.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-2.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn g<'a, T: 'static>(v: Box<dyn A<T> + 'a>) -> Box<dyn X + 'static> {\n    |      -- lifetime `'a` defined here\n LL |     Box::new(B(&*v)) as Box<dyn X>\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error[E0515]: cannot return value referencing local data `*v`\n   --> $DIR/regions-close-object-into-object-2.rs:9:5"}, {"sha": "b30626830ad6bbbe5d345ce7eb183be51ecb9cf4", "filename": "src/test/ui/regions/regions-close-object-into-object-4.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-4.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-4.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-4.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -29,8 +29,6 @@ LL | fn i<'a, T, U>(v: Box<dyn A<U>+'a>) -> Box<dyn X + 'static> {\n    |      -- lifetime `'a` defined here\n LL |     Box::new(B(&*v)) as Box<dyn X>\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error[E0515]: cannot return value referencing local data `*v`\n   --> $DIR/regions-close-object-into-object-4.rs:9:5"}, {"sha": "0c1e3989b234a84db7663f36baa1b0517c687056", "filename": "src/test/ui/regions/regions-infer-invariance-due-to-decl.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-decl.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-decl.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-decl.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn to_longer_lifetime<'r>(b_isize: Invariant<'r>) -> Invariant<'static> {\n    |                       -- lifetime `'r` defined here\n LL |     b_isize\n    |     ^^^^^^^ returning this value requires that `'r` must outlive `'static`\n-   |\n-   = help: consider replacing `'r` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "0edeb2723998f00e8be7e0a914b51b7905acddc1", "filename": "src/test/ui/regions/regions-infer-invariance-due-to-mutability-3.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-mutability-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-mutability-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-mutability-3.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn to_longer_lifetime<'r>(b_isize: Invariant<'r>) -> Invariant<'static> {\n    |                       -- lifetime `'r` defined here\n LL |     b_isize\n    |     ^^^^^^^ returning this value requires that `'r` must outlive `'static`\n-   |\n-   = help: consider replacing `'r` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "724dd7e3f6d3f36c4a322e20adce132d84f6e29d", "filename": "src/test/ui/regions/regions-infer-invariance-due-to-mutability-4.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-mutability-4.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-mutability-4.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-mutability-4.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn to_longer_lifetime<'r>(b_isize: Invariant<'r>) -> Invariant<'static> {\n    |                       -- lifetime `'r` defined here\n LL |     b_isize\n    |     ^^^^^^^ returning this value requires that `'r` must outlive `'static`\n-   |\n-   = help: consider replacing `'r` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "a0cfa3624722897e5f5479158a389a5af7e7d0dd", "filename": "src/test/ui/regions/regions-nested-fns.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-nested-fns.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-nested-fns.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-nested-fns.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -45,8 +45,6 @@ LL | fn nested<'x>(x: &'x isize) {\n ...\n LL |         if false { return x; }\n    |                           ^ returning this value requires that `'x` must outlive `'static`\n-   |\n-   = help: consider replacing `'x` with `'static`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "a280c6f0a02d28ce7f40889ea450e4eb9dc60414", "filename": "src/test/ui/regions/regions-static-bound.migrate.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.migrate.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.migrate.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.migrate.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn static_id_wrong_way<'a>(t: &'a ()) -> &'static () where 'static: 'a {\n    |                        -- lifetime `'a` defined here\n LL |     t\n    |     ^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error[E0621]: explicit lifetime required in the type of `u`\n   --> $DIR/regions-static-bound.rs:14:5"}, {"sha": "a280c6f0a02d28ce7f40889ea450e4eb9dc60414", "filename": "src/test/ui/regions/regions-static-bound.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn static_id_wrong_way<'a>(t: &'a ()) -> &'static () where 'static: 'a {\n    |                        -- lifetime `'a` defined here\n LL |     t\n    |     ^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error[E0621]: explicit lifetime required in the type of `u`\n   --> $DIR/regions-static-bound.rs:14:5"}, {"sha": "15853e6ca5d691775b246d83e278e5f3c27e7c23", "filename": "src/test/ui/regions/regions-variance-invariant-use-covariant.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-variance-invariant-use-covariant.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fregions%2Fregions-variance-invariant-use-covariant.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-variance-invariant-use-covariant.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -6,8 +6,6 @@ LL | fn use_<'b>(c: Invariant<'b>) {\n ...\n LL |     let _: Invariant<'static> = c;\n    |            ^^^^^^^^^^^^^^^^^^ type annotation requires that `'b` must outlive `'static`\n-   |\n-   = help: consider replacing `'b` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "32a2de1e84d8f2a6d8013a287c0ee64e9391a162", "filename": "src/test/ui/suggestions/impl-on-dyn-trait-with-implicit-static-bound.nll.stderr", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL |     fn use_it<'a, T>(val: &'a dyn ObjectTrait<T>) -> impl OtherTrait<'a> +\n    |                      --- `val` is a reference that is only valid in the function body\n LL |         val.use_self::<T>()\n    |         ^^^^^^^^^^^^^^^^^^^ `val` escapes the function body here\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error[E0521]: borrowed data escapes outside of function\n   --> $DIR/impl-on-dyn-trait-with-implicit-static-bound.rs:69:9\n@@ -15,8 +13,6 @@ LL |     fn use_it<'a>(val: &'a dyn ObjectTrait) -> impl OtherTrait<'a> + 'a {\n    |                   --- `val` is a reference that is only valid in the function body\n LL |         val.use_self()\n    |         ^^^^^^^^^^^^^^ `val` escapes the function body here\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error[E0521]: borrowed data escapes outside of function\n   --> $DIR/impl-on-dyn-trait-with-implicit-static-bound.rs:88:9\n@@ -25,8 +21,6 @@ LL |     fn use_it<'a>(val: &'a dyn ObjectTrait) -> impl OtherTrait<'a> {\n    |                   --- `val` is a reference that is only valid in the function body\n LL |         val.use_self()\n    |         ^^^^^^^^^^^^^^ `val` escapes the function body here\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error[E0521]: borrowed data escapes outside of function\n   --> $DIR/impl-on-dyn-trait-with-implicit-static-bound.rs:108:9\n@@ -35,8 +29,6 @@ LL |     fn use_it<'a>(val: &'a dyn ObjectTrait) -> impl OtherTrait<'a> + 'a {\n    |                   --- `val` is a reference that is only valid in the function body\n LL |         MyTrait::use_self(val)\n    |         ^^^^^^^^^^^^^^^^^^^^^^ `val` escapes the function body here\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "b579635ca7c08acf337f8c0c9979c9b1f7d566ea", "filename": "src/test/ui/suggestions/lifetimes/trait-object-nested-in-impl-trait.nll.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Ftrait-object-nested-in-impl-trait.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Ftrait-object-nested-in-impl-trait.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Ftrait-object-nested-in-impl-trait.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -32,8 +32,6 @@ LL | |             current: None,\n LL | |             remaining: self.0.iter(),\n LL | |         }\n    | |_________^ returning this value requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/trait-object-nested-in-impl-trait.rs:60:30\n@@ -43,7 +41,6 @@ LL |     fn iter<'a>(&'a self) -> impl Iterator<Item = Box<dyn Foo>> {\n    |             |\n    |             lifetime `'a` defined here\n    |\n-   = help: consider replacing `'a` with `'static`\n help: to allow this `impl Trait` to capture borrowed data with lifetime `'a`, add `'a` as a bound\n    |\n LL |     fn iter<'a>(&'a self) -> impl Iterator<Item = Box<dyn Foo>> + 'a {"}, {"sha": "35871c1236fae11cdfec983f1dcbb779aa26b47f", "filename": "src/test/ui/variance/variance-associated-types2.nll.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fvariance%2Fvariance-associated-types2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fvariance%2Fvariance-associated-types2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-associated-types2.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn take<'a>(_: &'a u32) {\n    |         -- lifetime `'a` defined here\n LL |     let _: Box<dyn Foo<Bar = &'a u32>> = make();\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ type annotation requires that `'a` must outlive `'static`\n-   |\n-   = help: consider replacing `'a` with `'static`\n \n error: aborting due to previous error\n "}, {"sha": "1f06949c0331b710854c608c2da810666e972650", "filename": "src/test/ui/variance/variance-btree-invariant-types.nll.stderr", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fvariance%2Fvariance-btree-invariant-types.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8a0dde53e09b2f0ec869088fcb1d882031bd6/src%2Ftest%2Fui%2Fvariance%2Fvariance-btree-invariant-types.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-btree-invariant-types.nll.stderr?ref=fdd8a0dde53e09b2f0ec869088fcb1d882031bd6", "patch": "@@ -5,8 +5,6 @@ LL | fn iter_cov_key<'a, 'new>(v: IterMut<'a, &'static (), ()>) -> IterMut<'a, &\n    |                     ---- lifetime `'new` defined here\n LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n-   |\n-   = help: consider replacing `'new` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/variance-btree-invariant-types.rs:7:5\n@@ -15,8 +13,6 @@ LL | fn iter_cov_val<'a, 'new>(v: IterMut<'a, (), &'static ()>) -> IterMut<'a, (\n    |                     ---- lifetime `'new` defined here\n LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n-   |\n-   = help: consider replacing `'new` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/variance-btree-invariant-types.rs:10:5\n@@ -25,8 +21,6 @@ LL | fn iter_contra_key<'a, 'new>(v: IterMut<'a, &'new (), ()>) -> IterMut<'a, &\n    |                        ---- lifetime `'new` defined here\n LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n-   |\n-   = help: consider replacing `'new` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/variance-btree-invariant-types.rs:13:5\n@@ -35,8 +29,6 @@ LL | fn iter_contra_val<'a, 'new>(v: IterMut<'a, (), &'new ()>) -> IterMut<'a, (\n    |                        ---- lifetime `'new` defined here\n LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n-   |\n-   = help: consider replacing `'new` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/variance-btree-invariant-types.rs:17:5\n@@ -45,8 +37,6 @@ LL | fn range_cov_key<'a, 'new>(v: RangeMut<'a, &'static (), ()>) -> RangeMut<'a\n    |                      ---- lifetime `'new` defined here\n LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n-   |\n-   = help: consider replacing `'new` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/variance-btree-invariant-types.rs:20:5\n@@ -55,8 +45,6 @@ LL | fn range_cov_val<'a, 'new>(v: RangeMut<'a, (), &'static ()>) -> RangeMut<'a\n    |                      ---- lifetime `'new` defined here\n LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n-   |\n-   = help: consider replacing `'new` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/variance-btree-invariant-types.rs:23:5\n@@ -65,8 +53,6 @@ LL | fn range_contra_key<'a, 'new>(v: RangeMut<'a, &'new (), ()>) -> RangeMut<'a\n    |                         ---- lifetime `'new` defined here\n LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n-   |\n-   = help: consider replacing `'new` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/variance-btree-invariant-types.rs:26:5\n@@ -75,8 +61,6 @@ LL | fn range_contra_val<'a, 'new>(v: RangeMut<'a, (), &'new ()>) -> RangeMut<'a\n    |                         ---- lifetime `'new` defined here\n LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n-   |\n-   = help: consider replacing `'new` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/variance-btree-invariant-types.rs:31:5\n@@ -86,8 +70,6 @@ LL | fn occ_cov_key<'a, 'new>(v: OccupiedEntry<'a, &'static (), ()>)\n LL |                          -> OccupiedEntry<'a, &'new (), ()> {\n LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n-   |\n-   = help: consider replacing `'new` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/variance-btree-invariant-types.rs:35:5\n@@ -97,8 +79,6 @@ LL | fn occ_cov_val<'a, 'new>(v: OccupiedEntry<'a, (), &'static ()>)\n LL |                          -> OccupiedEntry<'a, (), &'new ()> {\n LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n-   |\n-   = help: consider replacing `'new` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/variance-btree-invariant-types.rs:39:5\n@@ -108,8 +88,6 @@ LL | fn occ_contra_key<'a, 'new>(v: OccupiedEntry<'a, &'new (), ()>)\n LL |                             -> OccupiedEntry<'a, &'static (), ()> {\n LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n-   |\n-   = help: consider replacing `'new` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/variance-btree-invariant-types.rs:43:5\n@@ -119,8 +97,6 @@ LL | fn occ_contra_val<'a, 'new>(v: OccupiedEntry<'a, (), &'new ()>)\n LL |                             -> OccupiedEntry<'a, (), &'static ()> {\n LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n-   |\n-   = help: consider replacing `'new` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/variance-btree-invariant-types.rs:48:5\n@@ -130,8 +106,6 @@ LL | fn vac_cov_key<'a, 'new>(v: VacantEntry<'a, &'static (), ()>)\n LL |                          -> VacantEntry<'a, &'new (), ()> {\n LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n-   |\n-   = help: consider replacing `'new` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/variance-btree-invariant-types.rs:52:5\n@@ -141,8 +115,6 @@ LL | fn vac_cov_val<'a, 'new>(v: VacantEntry<'a, (), &'static ()>)\n LL |                          -> VacantEntry<'a, (), &'new ()> {\n LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n-   |\n-   = help: consider replacing `'new` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/variance-btree-invariant-types.rs:56:5\n@@ -152,8 +124,6 @@ LL | fn vac_contra_key<'a, 'new>(v: VacantEntry<'a, &'new (), ()>)\n LL |                             -> VacantEntry<'a, &'static (), ()> {\n LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n-   |\n-   = help: consider replacing `'new` with `'static`\n \n error: lifetime may not live long enough\n   --> $DIR/variance-btree-invariant-types.rs:60:5\n@@ -163,8 +133,6 @@ LL | fn vac_contra_val<'a, 'new>(v: VacantEntry<'a, (), &'new ()>)\n LL |                             -> VacantEntry<'a, (), &'static ()> {\n LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n-   |\n-   = help: consider replacing `'new` with `'static`\n \n error: aborting due to 16 previous errors\n "}]}