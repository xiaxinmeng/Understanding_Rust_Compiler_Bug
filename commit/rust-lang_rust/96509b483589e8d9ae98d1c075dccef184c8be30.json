{"sha": "96509b483589e8d9ae98d1c075dccef184c8be30", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2NTA5YjQ4MzU4OWU4ZDlhZTk4ZDFjMDc1ZGNjZWYxODRjOGJlMzA=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-03-28T02:45:01Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-05-09T03:12:04Z"}, "message": "Make `Diagnostic::span_fatal` unconditionally raise an error\n\nIt had no callers which didn't immediately call `raise()`, and this\nunifies the behavior with `Session`.", "tree": {"sha": "22249599d4466b69465b52c1d4d3720170f036e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22249599d4466b69465b52c1d4d3720170f036e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96509b483589e8d9ae98d1c075dccef184c8be30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96509b483589e8d9ae98d1c075dccef184c8be30", "html_url": "https://github.com/rust-lang/rust/commit/96509b483589e8d9ae98d1c075dccef184c8be30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96509b483589e8d9ae98d1c075dccef184c8be30/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e49f4471aaead4317359a21d4913965f176782a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/e49f4471aaead4317359a21d4913965f176782a6", "html_url": "https://github.com/rust-lang/rust/commit/e49f4471aaead4317359a21d4913965f176782a6"}], "stats": {"total": 32, "additions": 13, "deletions": 19}, "files": [{"sha": "ea0770daf0eed86232bc7dca6c1944fdcd6108b1", "filename": "compiler/rustc_ast_lowering/src/expr.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/96509b483589e8d9ae98d1c075dccef184c8be30/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96509b483589e8d9ae98d1c075dccef184c8be30/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs?ref=96509b483589e8d9ae98d1c075dccef184c8be30", "patch": "@@ -1236,9 +1236,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n             (Some(..), Some(..), HalfOpen) => hir::LangItem::Range,\n             (None, Some(..), Closed) => hir::LangItem::RangeToInclusive,\n             (Some(..), Some(..), Closed) => unreachable!(),\n-            (_, None, Closed) => {\n-                self.diagnostic().span_fatal(span, \"inclusive range with no end\").raise()\n-            }\n+            (_, None, Closed) => self.diagnostic().span_fatal(span, \"inclusive range with no end\"),\n         };\n \n         let fields = self.arena.alloc_from_iter("}, {"sha": "cbfb5f951b29fdc312cd05ba7c43756c5eba60d0", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/96509b483589e8d9ae98d1c075dccef184c8be30/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96509b483589e8d9ae98d1c075dccef184c8be30/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=96509b483589e8d9ae98d1c075dccef184c8be30", "patch": "@@ -634,19 +634,19 @@ impl Handler {\n         DiagnosticBuilder::new(self, Level::Note, msg)\n     }\n \n-    pub fn span_fatal(&self, span: impl Into<MultiSpan>, msg: &str) -> FatalError {\n+    pub fn span_fatal(&self, span: impl Into<MultiSpan>, msg: &str) -> ! {\n         self.emit_diag_at_span(Diagnostic::new(Fatal, msg), span);\n-        FatalError\n+        FatalError.raise()\n     }\n \n     pub fn span_fatal_with_code(\n         &self,\n         span: impl Into<MultiSpan>,\n         msg: &str,\n         code: DiagnosticId,\n-    ) -> FatalError {\n+    ) -> ! {\n         self.emit_diag_at_span(Diagnostic::new_with_code(Fatal, Some(code), msg), span);\n-        FatalError\n+        FatalError.raise()\n     }\n \n     pub fn span_err(&self, span: impl Into<MultiSpan>, msg: &str) {"}, {"sha": "1c2f9a9645fe0286401561f2b4ca08c0a5103a9c", "filename": "compiler/rustc_parse/src/lexer/mod.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/96509b483589e8d9ae98d1c075dccef184c8be30/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96509b483589e8d9ae98d1c075dccef184c8be30/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs?ref=96509b483589e8d9ae98d1c075dccef184c8be30", "patch": "@@ -148,15 +148,11 @@ impl<'a> StringReader<'a> {\n                         None => \"unterminated block comment\",\n                     };\n                     let last_bpos = self.pos;\n-                    self.sess\n-                        .span_diagnostic\n-                        .struct_span_fatal_with_code(\n-                            self.mk_sp(start, last_bpos),\n-                            msg,\n-                            error_code!(E0758),\n-                        )\n-                        .emit();\n-                    FatalError.raise();\n+                    self.sess.span_diagnostic.span_fatal_with_code(\n+                        self.mk_sp(start, last_bpos),\n+                        msg,\n+                        error_code!(E0758),\n+                    );\n                 }\n \n                 // Skip non-doc comments"}, {"sha": "a9e14754334c1b8e6f3b45414543e8d822d240ef", "filename": "compiler/rustc_session/src/cgu_reuse_tracker.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/96509b483589e8d9ae98d1c075dccef184c8be30/compiler%2Frustc_session%2Fsrc%2Fcgu_reuse_tracker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96509b483589e8d9ae98d1c075dccef184c8be30/compiler%2Frustc_session%2Fsrc%2Fcgu_reuse_tracker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fcgu_reuse_tracker.rs?ref=96509b483589e8d9ae98d1c075dccef184c8be30", "patch": "@@ -112,7 +112,7 @@ impl CguReuseTracker {\n                                        not recorded\",\n                         cgu_user_name, cgu_name\n                     );\n-                    diag.span_fatal(error_span.0, &msg).raise();\n+                    diag.span_fatal(error_span.0, &msg)\n                 }\n             }\n         }"}, {"sha": "fff4ee7739f4662ef6c9e5224160bc5e382bffe1", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/96509b483589e8d9ae98d1c075dccef184c8be30/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96509b483589e8d9ae98d1c075dccef184c8be30/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=96509b483589e8d9ae98d1c075dccef184c8be30", "patch": "@@ -421,15 +421,15 @@ impl Session {\n     }\n \n     pub fn span_fatal<S: Into<MultiSpan>>(&self, sp: S, msg: &str) -> ! {\n-        self.diagnostic().span_fatal(sp, msg).raise()\n+        self.diagnostic().span_fatal(sp, msg)\n     }\n     pub fn span_fatal_with_code<S: Into<MultiSpan>>(\n         &self,\n         sp: S,\n         msg: &str,\n         code: DiagnosticId,\n     ) -> ! {\n-        self.diagnostic().span_fatal_with_code(sp, msg, code).raise()\n+        self.diagnostic().span_fatal_with_code(sp, msg, code)\n     }\n     pub fn fatal(&self, msg: &str) -> ! {\n         self.diagnostic().fatal(msg).raise()"}]}