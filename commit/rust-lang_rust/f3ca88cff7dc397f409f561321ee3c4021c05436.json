{"sha": "f3ca88cff7dc397f409f561321ee3c4021c05436", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzY2E4OGNmZjdkYzM5N2Y0MDlmNTYxMzIxZWUzYzQwMjFjMDU0MzY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-01-01T04:09:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-01-01T04:09:51Z"}, "message": "Auto merge of #47064 - kennytm:force-trailing-newlines, r=estebank\n\nAdd a tidy check for missing or too many trailing newlines.\n\nI've noticed recently there are lots of review comments requesting to fix trailing newlines. If this is going to be an official style here, it's better to let the CI do this repetitive check.", "tree": {"sha": "730a4f2553bd6c324f195eda51d4347a5c0e5c64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/730a4f2553bd6c324f195eda51d4347a5c0e5c64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3ca88cff7dc397f409f561321ee3c4021c05436", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3ca88cff7dc397f409f561321ee3c4021c05436", "html_url": "https://github.com/rust-lang/rust/commit/f3ca88cff7dc397f409f561321ee3c4021c05436", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3ca88cff7dc397f409f561321ee3c4021c05436/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "037bc651e56ca0bb92c053b31b87db5fa0dda22c", "url": "https://api.github.com/repos/rust-lang/rust/commits/037bc651e56ca0bb92c053b31b87db5fa0dda22c", "html_url": "https://github.com/rust-lang/rust/commit/037bc651e56ca0bb92c053b31b87db5fa0dda22c"}, {"sha": "4577a70934b6167862586cbb7f52b75fad448d05", "url": "https://api.github.com/repos/rust-lang/rust/commits/4577a70934b6167862586cbb7f52b75fad448d05", "html_url": "https://github.com/rust-lang/rust/commit/4577a70934b6167862586cbb7f52b75fad448d05"}], "stats": {"total": 82, "additions": 34, "deletions": 48}, "files": [{"sha": "63939686ab7c2de8ad982da7ef2a4f5f34d2015a", "filename": "src/liballoc/tests/cow_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Fliballoc%2Ftests%2Fcow_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Fliballoc%2Ftests%2Fcow_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fcow_str.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -148,4 +148,4 @@ fn check_cow_clone_from() {\n     let c2: Cow<str> = Cow::Owned(s);\n     c1.clone_from(&c2);\n     assert!(c1.into_owned().capacity() >= 25);\n-}\n\\ No newline at end of file\n+}"}, {"sha": "9d2fa1abff658474e095e4cb4bffd5cc103423b9", "filename": "src/libcore/tests/ops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Flibcore%2Ftests%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Flibcore%2Ftests%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fops.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -67,4 +67,4 @@ fn test_range_inclusive() {\n     r = RangeInclusive { start: 1, end: -1 };\n     assert_eq!(r.size_hint(), (0, Some(0)));\n     assert_eq!(r.next(), None);\n-}\n\\ No newline at end of file\n+}"}, {"sha": "3a05cb7187d80bc0ad2a76fc2322901f95415b0a", "filename": "src/libserialize/collection_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Flibserialize%2Fcollection_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Flibserialize%2Fcollection_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fcollection_impls.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -241,4 +241,4 @@ impl<T: Decodable> Decodable for Arc<[T]> {\n             Ok(vec.into())\n         })\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "3a23c16d5214db76cda02adb53a3dcf460463dc7", "filename": "src/test/codegen/prefetch.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fcodegen%2Fprefetch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fcodegen%2Fprefetch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fprefetch.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -71,5 +71,3 @@ pub fn check_prefetch_write_instruction(data: &[i8]) {\n         prefetch_write_instruction(data.as_ptr(), 3);\n     }\n }\n-\n-"}, {"sha": "8df07a0c1c5b26de75a2e963982bc93a62d8d4f1", "filename": "src/test/compile-fail/E0004.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fcompile-fail%2FE0004.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fcompile-fail%2FE0004.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0004.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -19,4 +19,4 @@ fn main() {\n     match x { //~ ERROR E0004\n         Terminator::TalkToMyHand => {}\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "485519e8c3d7e550e760372a5203ed6c0b067f3b", "filename": "src/test/compile-fail/duplicate_entry_error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fcompile-fail%2Fduplicate_entry_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fcompile-fail%2Fduplicate_entry_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fduplicate_entry_error.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -20,4 +20,4 @@ fn panic_fmt() -> ! {\n     loop {}\n }\n \n-fn main() {}\n\\ No newline at end of file\n+fn main() {}"}, {"sha": "1f07422e21be471a1dd0385174ae360254d45a3d", "filename": "src/test/compile-fail/float-int-invalid-const-cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fcompile-fail%2Ffloat-int-invalid-const-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fcompile-fail%2Ffloat-int-invalid-const-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffloat-int-invalid-const-cast.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -58,4 +58,4 @@ fn main() {\n     { const X: u32 = 4294967296. as u32; force(X); } //~ ERROR constant evaluation error\n     { const X: u128 = 1e40 as u128; force(X); } //~ ERROR constant evaluation error\n     { const X: i128 = 1e40 as i128; force(X); } //~ ERROR constant evaluation error\n-}\n\\ No newline at end of file\n+}"}, {"sha": "1a06d59f0b191a22ba5fb15de4f21670058280f3", "filename": "src/test/compile-fail/issue-28848.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fcompile-fail%2Fissue-28848.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fcompile-fail%2Fissue-28848.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-28848.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -20,4 +20,4 @@ pub fn foo<'a, 'b>(u: &'b ()) -> &'a () {\n     Foo::<'a, 'b>::xmute(u) //~ ERROR lifetime bound not satisfied\n }\n \n-fn main() {}\n\\ No newline at end of file\n+fn main() {}"}, {"sha": "c0dd2cab749f4a24cf0753689a842b4bd33d9742", "filename": "src/test/compile-fail/never-assign-wrong-type.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fcompile-fail%2Fnever-assign-wrong-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fcompile-fail%2Fnever-assign-wrong-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnever-assign-wrong-type.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -16,5 +16,3 @@\n fn main() {\n     let x: ! = \"hello\"; //~ ERROR mismatched types\n }\n-\n-"}, {"sha": "5b063dc1137c0b3be5faaae240277448609ea14c", "filename": "src/test/compile-fail/range_inclusive_gate.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fcompile-fail%2Frange_inclusive_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fcompile-fail%2Frange_inclusive_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frange_inclusive_gate.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -19,5 +19,3 @@ pub fn main() {\n     //~| ERROR core_intrinsics\n     //~| ERROR core_intrinsics\n }\n-\n-"}, {"sha": "90eb66728fce5223ed263932b736b356e8e04d4e", "filename": "src/test/compile-fail/useless_comment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fcompile-fail%2Fuseless_comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fcompile-fail%2Fuseless_comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuseless_comment.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -27,4 +27,4 @@ fn foo() {\n \n fn main() {\n     foo();\n-}\n\\ No newline at end of file\n+}"}, {"sha": "36cbd2239a052bc9e3bd11646121341340f9ef39", "filename": "src/test/incremental/hashes/enum_defs.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fincremental%2Fhashes%2Fenum_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fincremental%2Fhashes%2Fenum_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fenum_defs.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -651,5 +651,3 @@ mod change_trait_bound_indirectly_where {\n         Variant1(T)\n     }\n }\n-\n-"}, {"sha": "3996e92e05a911672b77ca3ac841be5fc3bf69d2", "filename": "src/test/incremental/hashes/inline_asm.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fincremental%2Fhashes%2Finline_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fincremental%2Fhashes%2Finline_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Finline_asm.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -236,6 +236,3 @@ pub fn change_options(_a: i32) -> i32 {\n     }\n     _out\n }\n-\n-\n-"}, {"sha": "bfae5b94389700055b7cf77b54db51aa4de2ecc9", "filename": "src/test/mir-opt/return_an_array.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fmir-opt%2Freturn_an_array.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fmir-opt%2Freturn_an_array.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Freturn_an_array.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -15,4 +15,4 @@ fn foo() -> [u8; 1024] {\n         return x;\n }\n \n-fn main() { }\n\\ No newline at end of file\n+fn main() { }"}, {"sha": "14c6f3944bb59f712a057357c419fec8072d6d6b", "filename": "src/test/parse-fail/issue-37113.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fparse-fail%2Fissue-37113.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fparse-fail%2Fissue-37113.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fissue-37113.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -18,4 +18,4 @@ macro_rules! test_macro {\n \n fn main() {\n     test_macro!(String,);\n-}\n\\ No newline at end of file\n+}"}, {"sha": "6b6afc504e1504c63f865971d058c218c6c73bb0", "filename": "src/test/parse-fail/range_inclusive_gate.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fparse-fail%2Frange_inclusive_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fparse-fail%2Frange_inclusive_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Frange_inclusive_gate.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -72,5 +72,3 @@ pub fn main() {\n     o!(); // not allowed in macros that output cfgs\n     p!(); // not allowed in cfg'ed macros that output cfgs\n }\n-\n-"}, {"sha": "ddcecd97ba5960e4db182a42f6a94f0ed2ea1027", "filename": "src/test/run-fail/return-never-coerce.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-fail%2Freturn-never-coerce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-fail%2Freturn-never-coerce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Freturn-never-coerce.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -24,5 +24,3 @@ fn main() {\n     let x: i32 = call_another_fn(wub);\n     let y: u32 = wub();\n }\n-\n-"}, {"sha": "c6680a78819dba189fe551482ebbe3fbdf790d0a", "filename": "src/test/run-make/a-b-a-linker-guard/a.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-make%2Fa-b-a-linker-guard%2Fa.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-make%2Fa-b-a-linker-guard%2Fa.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fa-b-a-linker-guard%2Fa.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -16,5 +16,3 @@ pub fn foo(x: u32) { }\n \n #[cfg(y)]\n pub fn foo(x: i32) { }\n-\n-"}, {"sha": "b47d780e52984f826d53d3d084a3866a341475b1", "filename": "src/test/run-make/reproducible-build/reproducible-build.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-make%2Freproducible-build%2Freproducible-build.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-make%2Freproducible-build%2Freproducible-build.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Freproducible-build%2Freproducible-build.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -124,5 +124,3 @@ fn main() {\n \n     TupleStruct(1, 2, 3, 4).bar();\n }\n-\n-"}, {"sha": "e701329127502ba4258f5843e6c71e733efb46a1", "filename": "src/test/run-pass/abi-sysv64-register-usage.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Fabi-sysv64-register-usage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Fabi-sysv64-register-usage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fabi-sysv64-register-usage.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -102,4 +102,4 @@ pub fn main() {\n }\n \n #[cfg(not(target_arch = \"x86_64\"))]\n-pub fn main() {}\n\\ No newline at end of file\n+pub fn main() {}"}, {"sha": "91ad9869ed856307da8946baeeaab92c36b59893", "filename": "src/test/run-pass/auxiliary/issue_42007_s.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Fauxiliary%2Fissue_42007_s.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Fauxiliary%2Fissue_42007_s.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauxiliary%2Fissue_42007_s.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -11,4 +11,4 @@\n #[repr(u8)]\n pub enum E {\n     B = 1 as u8,\n-}\n\\ No newline at end of file\n+}"}, {"sha": "556c846b0b8e19d78393a202910cde3808cbb485", "filename": "src/test/run-pass/for-loop-mut-ref-element.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Ffor-loop-mut-ref-element.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Ffor-loop-mut-ref-element.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffor-loop-mut-ref-element.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -12,4 +12,4 @@\n \n fn main() {\n     for ref mut _a in std::iter::once(true) {}\n-}\n\\ No newline at end of file\n+}"}, {"sha": "486fe3c900d8b80c5e8dc5454fd0ef784cc88184", "filename": "src/test/run-pass/generator/borrow-in-tail-expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Fgenerator%2Fborrow-in-tail-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Fgenerator%2Fborrow-in-tail-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgenerator%2Fborrow-in-tail-expr.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -16,4 +16,4 @@ fn main() {\n         let a = String::new();\n         a.len()\n     };\n-}\n\\ No newline at end of file\n+}"}, {"sha": "231aa1b42f021695a083754e896b3bac0a7f8100", "filename": "src/test/run-pass/generator/match-bindings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Fgenerator%2Fmatch-bindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Fgenerator%2Fmatch-bindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgenerator%2Fmatch-bindings.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -27,4 +27,4 @@ fn main() {\n             yield;\n         }\n     };\n-}\n\\ No newline at end of file\n+}"}, {"sha": "5ea4b1fe93c8024684954d1995173b6221426aa1", "filename": "src/test/run-pass/generator/yield-subtype.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Fgenerator%2Fyield-subtype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Fgenerator%2Fyield-subtype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgenerator%2Fyield-subtype.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -20,4 +20,4 @@ fn bar<'a>() {\n     };\n }\n \n-fn main() {}\n\\ No newline at end of file\n+fn main() {}"}, {"sha": "c2486f0dcb49804ed4ced93229e0883f3dea3fc9", "filename": "src/test/run-pass/issue-22066.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Fissue-22066.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Fissue-22066.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-22066.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -18,4 +18,4 @@ pub trait LineFormatter<'a> {\n     }\n }\n \n-fn main() {}\n\\ No newline at end of file\n+fn main() {}"}, {"sha": "ed319b1391dc34a0f25b61babf1e4debcd41ee88", "filename": "src/test/run-pass/issue-32292.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Fissue-32292.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Fissue-32292.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-32292.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -15,4 +15,4 @@ struct Foo;\n \n fn main() {\n     let _ = Foo;\n-}\n\\ No newline at end of file\n+}"}, {"sha": "98da7d46b1aa3867a06ddd4f6b5a293c3b69357f", "filename": "src/test/run-pass/issue-33992.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Fissue-33992.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Fissue-33992.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-33992.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -37,4 +37,4 @@ pub static TEST7: bool = true;\n #[linkage = \"weak_odr\"]\n pub static TEST8: bool = true;\n \n-fn main() {}\n\\ No newline at end of file\n+fn main() {}"}, {"sha": "9e4eb84edc67c5009012ccea8c7794cbbc44e3ce", "filename": "src/test/run-pass/issue-35376.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Fissue-35376.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Fissue-35376.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-35376.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -48,4 +48,4 @@ pub struct Handle;\n \n impl Beta for Handle {\n     type Event = ();\n-}\n\\ No newline at end of file\n+}"}, {"sha": "e3529ebfb0d811fa629df89c0a896aea5730495e", "filename": "src/test/run-pass/optimization-fuel-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Foptimization-fuel-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frun-pass%2Foptimization-fuel-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Foptimization-fuel-1.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -22,5 +22,3 @@ fn main() {\n         +(size_of::<S2>() == 4) as usize;\n     assert_eq!(optimized, 1);\n }\n-\n-"}, {"sha": "8499e5c741ee043e0225f5025af6ea88578bf114", "filename": "src/test/rustdoc/doc-cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frustdoc%2Fdoc-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Frustdoc%2Fdoc-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdoc-cfg.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -44,4 +44,4 @@ pub mod unix_only {\n     impl ArmOnly for super::Portable {\n         fn unix_and_arm_only_function() {}\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "c2c842fcc4984bee519417c0bfea6790b53db4a8", "filename": "src/test/ui-fulldeps/update-references.sh", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fui-fulldeps%2Fupdate-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fui-fulldeps%2Fupdate-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fupdate-references.sh?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -46,5 +46,3 @@ while [[ \"$1\" != \"\" ]]; do\n         cp $BUILD_DIR/$STDERR_NAME $MYDIR/$STDERR_NAME\n     fi\n done\n-\n-"}, {"sha": "4ac8f8c0d4e22cfe12b6198737966fa0b62c0d66", "filename": "src/test/ui/in-band-lifetimes/single_use_lifetimes-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fsingle_use_lifetimes-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fsingle_use_lifetimes-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fsingle_use_lifetimes-4.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -17,4 +17,4 @@ enum Bar<'x> { //~ ERROR lifetime name `'x` only used once\n     Variant(&'x u32)\n }\n \n-fn main() { }\n\\ No newline at end of file\n+fn main() { }"}, {"sha": "a97056b6240ec1bf5b77e0ae731eb12586cdf4e8", "filename": "src/test/ui/in-band-lifetimes/single_use_lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fsingle_use_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fsingle_use_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fsingle_use_lifetimes.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -13,4 +13,4 @@ fn deref<'x>(v: &'x u32) -> u32 { //~ ERROR lifetime name `'x` only used once\n     *v\n }\n \n-fn main() {}\n\\ No newline at end of file\n+fn main() {}"}, {"sha": "c2c842fcc4984bee519417c0bfea6790b53db4a8", "filename": "src/test/ui/update-references.sh", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fui%2Fupdate-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftest%2Fui%2Fupdate-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fupdate-references.sh?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -46,5 +46,3 @@ while [[ \"$1\" != \"\" ]]; do\n         cp $BUILD_DIR/$STDERR_NAME $MYDIR/$STDERR_NAME\n     fi\n done\n-\n-"}, {"sha": "b784a0e4c5fa057d041719f5cdefcd7a20adbed3", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3ca88cff7dc397f409f561321ee3c4021c05436/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=f3ca88cff7dc397f409f561321ee3c4021c05436", "patch": "@@ -130,6 +130,7 @@ pub fn check(path: &Path, bad: &mut bool) {\n         let skip_tab = contents.contains(\"ignore-tidy-tab\");\n         let skip_length = contents.contains(\"ignore-tidy-linelength\");\n         let skip_end_whitespace = contents.contains(\"ignore-tidy-end-whitespace\");\n+        let mut trailing_new_lines = 0;\n         for (i, line) in contents.split(\"\\n\").enumerate() {\n             let mut err = |msg: &str| {\n                 tidy_error!(bad, \"{}:{}: {}\", file.display(), i + 1, msg);\n@@ -161,10 +162,20 @@ pub fn check(path: &Path, bad: &mut bool) {\n             if filename.ends_with(\".cpp\") && line.contains(\"llvm_unreachable\") {\n                 err(LLVM_UNREACHABLE_INFO);\n             }\n+            if line.is_empty() {\n+                trailing_new_lines += 1;\n+            } else {\n+                trailing_new_lines = 0;\n+            }\n         }\n         if !licenseck(file, &contents) {\n             tidy_error!(bad, \"{}: incorrect license\", file.display());\n         }\n+        match trailing_new_lines {\n+            0 => tidy_error!(bad, \"{}: missing trailing newline\", file.display()),\n+            1 | 2 => {}\n+            n => tidy_error!(bad, \"{}: too many trailing newlines ({})\", file.display(), n),\n+        };\n     })\n }\n "}]}