{"sha": "ae472485b77148c30fcb3b206408c1a8fe88e7d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNDcyNDg1Yjc3MTQ4YzMwZmNiM2IyMDY0MDhjMWE4ZmU4OGU3ZDc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-24T06:57:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-24T06:57:29Z"}, "message": "Auto merge of #39145 - nrc:opt-cfg-mod, r=@jseyfried\n\nAdd an option to the parser so cfg'ed out modules can still be parsed\n\nr? @jseyfried\n\ncc @dtolnay, @erickt it would be great if we could get this picked up into Syntex asap - it fixes a pretty nasty bug in Rustfmt.", "tree": {"sha": "6434c8a5df1aaea5011252e07509aedbae82164c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6434c8a5df1aaea5011252e07509aedbae82164c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae472485b77148c30fcb3b206408c1a8fe88e7d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae472485b77148c30fcb3b206408c1a8fe88e7d7", "html_url": "https://github.com/rust-lang/rust/commit/ae472485b77148c30fcb3b206408c1a8fe88e7d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae472485b77148c30fcb3b206408c1a8fe88e7d7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ba60387f27f7a92eb99550442333c4aa6580f52", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ba60387f27f7a92eb99550442333c4aa6580f52", "html_url": "https://github.com/rust-lang/rust/commit/0ba60387f27f7a92eb99550442333c4aa6580f52"}, {"sha": "44180c8f2b1f12927c00fd5659a4dc5c04436a9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/44180c8f2b1f12927c00fd5659a4dc5c04436a9d", "html_url": "https://github.com/rust-lang/rust/commit/44180c8f2b1f12927c00fd5659a4dc5c04436a9d"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "766e0512bdcd189d73a7da3a81c83c58aa17462d", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ae472485b77148c30fcb3b206408c1a8fe88e7d7/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae472485b77148c30fcb3b206408c1a8fe88e7d7/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=ae472485b77148c30fcb3b206408c1a8fe88e7d7", "patch": "@@ -183,6 +183,8 @@ pub struct Parser<'a> {\n     pub expected_tokens: Vec<TokenType>,\n     pub tts: Vec<(TokenTree, usize)>,\n     pub desugar_doc_comments: bool,\n+    /// Whether we should configure out of line modules as we parse.\n+    pub cfg_mods: bool,\n }\n \n #[derive(PartialEq, Eq, Clone)]\n@@ -273,6 +275,7 @@ impl<'a> Parser<'a> {\n             expected_tokens: Vec::new(),\n             tts: if tt.len() > 0 { vec![(tt, 0)] } else { Vec::new() },\n             desugar_doc_comments: desugar_doc_comments,\n+            cfg_mods: true,\n         };\n \n         let tok = parser.next_tok();\n@@ -5210,7 +5213,7 @@ impl<'a> Parser<'a> {\n                 features: None, // don't perform gated feature checking\n             };\n             let outer_attrs = strip_unconfigured.process_cfg_attrs(outer_attrs.to_owned());\n-            (strip_unconfigured.in_cfg(&outer_attrs), outer_attrs)\n+            (!self.cfg_mods || strip_unconfigured.in_cfg(&outer_attrs), outer_attrs)\n         };\n \n         let id_span = self.span;\n@@ -5396,6 +5399,7 @@ impl<'a> Parser<'a> {\n \n         let mut p0 =\n             new_sub_parser_from_file(self.sess, &path, directory_ownership, Some(name), id_sp);\n+        p0.cfg_mods = self.cfg_mods;\n         let mod_inner_lo = p0.span.lo;\n         let mod_attrs = p0.parse_inner_attributes()?;\n         let m0 = p0.parse_mod_items(&token::Eof, mod_inner_lo)?;"}]}