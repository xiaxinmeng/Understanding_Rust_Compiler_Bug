{"sha": "5e4d8b44f9524f28fd1ebca18f48ecad204cf184", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlNGQ4YjQ0Zjk1MjRmMjhmZDFlYmNhMThmNDhlY2FkMjA0Y2YxODQ=", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-08-09T20:26:27Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-08-14T23:50:01Z"}, "message": "Improve doc for `can_move_expr_to_closure_no_visit`", "tree": {"sha": "cf36a7943667a4cdc89a2671f715ba93bb28ee53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf36a7943667a4cdc89a2671f715ba93bb28ee53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e4d8b44f9524f28fd1ebca18f48ecad204cf184", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nComment: Created with Krypton\n\niF4EABYKAAYFAmEYVqwACgkQ2lnoZDo37QasUQD/c4wyAiE0mtHB3Howuyw+awGQ\n429KGTuq2rHdMMoE2J8A/RWgSbi90y6eY05nEhbnl5vlkZbsqARI2Xt5uFTZNkAG\n=Mpal\n-----END PGP SIGNATURE-----", "payload": "tree cf36a7943667a4cdc89a2671f715ba93bb28ee53\nparent 9500974bdb5f7cd9a8ba056b41bd5af5f373e0d3\nauthor Jason Newcomb <jsnewcomb@pm.me> 1628540787 -0400\ncommitter Jason Newcomb <jsnewcomb@pm.me> 1628985001 -0400\n\nImprove doc for `can_move_expr_to_closure_no_visit`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e4d8b44f9524f28fd1ebca18f48ecad204cf184", "html_url": "https://github.com/rust-lang/rust/commit/5e4d8b44f9524f28fd1ebca18f48ecad204cf184", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e4d8b44f9524f28fd1ebca18f48ecad204cf184/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9500974bdb5f7cd9a8ba056b41bd5af5f373e0d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/9500974bdb5f7cd9a8ba056b41bd5af5f373e0d3", "html_url": "https://github.com/rust-lang/rust/commit/9500974bdb5f7cd9a8ba056b41bd5af5f373e0d3"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "b40b42fa6d3b610d817056d448bc22347335ce63", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/5e4d8b44f9524f28fd1ebca18f48ecad204cf184/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e4d8b44f9524f28fd1ebca18f48ecad204cf184/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=5e4d8b44f9524f28fd1ebca18f48ecad204cf184", "patch": "@@ -631,20 +631,45 @@ pub fn can_mut_borrow_both(cx: &LateContext<'_>, e1: &Expr<'_>, e2: &Expr<'_>) -\n \n /// Checks if the top level expression can be moved into a closure as is.\n /// Currently checks for:\n-/// * Break/Continue outside the given jump targets\n+/// * Break/Continue outside the given loop HIR ids.\n /// * Yield/Return statments.\n-/// * Inline assembly\n+/// * Inline assembly.\n /// * Usages of a field of a local where the type of the local can be partially moved.\n+///\n+/// For example, given the following function:\n+///\n+/// ```\n+/// fn f<'a>(iter: &mut impl Iterator<Item = (usize, &'a mut String)>) {\n+///     for item in iter {\n+///         let s = item.1;\n+///         if item.0 > 10 {\n+///             continue;\n+///         } else {\n+///             s.clear();\n+///         }\n+///     }\n+/// }\n+/// ```\n+///\n+/// When called on the expression `item.0` this will return false unless the local `item` is in the\n+/// `ignore_locals` set. The type `(usize, &mut String)` can have the second element moved, so it\n+/// isn't always safe to move into a closure when only a single field is needed.\n+///\n+/// When called on the `continue` expression this will return false unless the outer loop expression\n+/// is in the `loop_ids` set.\n+///\n+/// Note that this check is not recursive, so passing the `if` expression will always return true\n+/// even though sub-expressions might return false.\n pub fn can_move_expr_to_closure_no_visit(\n     cx: &LateContext<'tcx>,\n     expr: &'tcx Expr<'_>,\n-    jump_targets: &[HirId],\n+    loop_ids: &[HirId],\n     ignore_locals: &HirIdSet,\n ) -> bool {\n     match expr.kind {\n         ExprKind::Break(Destination { target_id: Ok(id), .. }, _)\n         | ExprKind::Continue(Destination { target_id: Ok(id), .. })\n-            if jump_targets.contains(&id) =>\n+            if loop_ids.contains(&id) =>\n         {\n             true\n         },"}]}