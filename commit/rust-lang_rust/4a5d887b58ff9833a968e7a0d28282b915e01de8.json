{"sha": "4a5d887b58ff9833a968e7a0d28282b915e01de8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhNWQ4ODdiNThmZjk4MzNhOTY4ZTdhMGQyODI4MmI5MTVlMDFkZTg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-05-28T21:53:43Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-05-30T06:02:55Z"}, "message": "Allow doc(hidden) and --test to disable doc linting", "tree": {"sha": "487123b86102561a5ffaa002dab7c35b576f734d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/487123b86102561a5ffaa002dab7c35b576f734d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a5d887b58ff9833a968e7a0d28282b915e01de8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a5d887b58ff9833a968e7a0d28282b915e01de8", "html_url": "https://github.com/rust-lang/rust/commit/4a5d887b58ff9833a968e7a0d28282b915e01de8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a5d887b58ff9833a968e7a0d28282b915e01de8/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af995ce1e7fe8c30c8f5da3d04e0e2e89762bde4", "url": "https://api.github.com/repos/rust-lang/rust/commits/af995ce1e7fe8c30c8f5da3d04e0e2e89762bde4", "html_url": "https://github.com/rust-lang/rust/commit/af995ce1e7fe8c30c8f5da3d04e0e2e89762bde4"}], "stats": {"total": 52, "additions": 49, "deletions": 3}, "files": [{"sha": "6dd911e8ef321672732e3074e1e5e105d1c7d15e", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 36, "deletions": 3, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/4a5d887b58ff9833a968e7a0d28282b915e01de8/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a5d887b58ff9833a968e7a0d28282b915e01de8/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=4a5d887b58ff9833a968e7a0d28282b915e01de8", "patch": "@@ -297,6 +297,10 @@ struct Context {\n     // Just a simple flag if we're currently recursing into a trait\n     // implementation. This is only used by the lint_missing_doc() pass\n     in_trait_impl: bool,\n+    // Another flag for doc lint emissions. Does some parent of the current node\n+    // have the doc(hidden) attribute? Treating this as allow(missing_doc) would\n+    // play badly with forbid(missing_doc) when it shouldn't.\n+    doc_hidden: bool,\n     // When recursing into an attributed node of the ast which modifies lint\n     // levels, this stack keeps track of the previous lint levels of whatever\n     // was modified.\n@@ -422,9 +426,30 @@ impl Context {\n             }\n         }\n \n+        // detect doc(hidden)\n+        let mut doc_hidden = false;\n+        for attr::find_attrs_by_name(attrs, \"doc\").each |attr| {\n+            match attr::get_meta_item_list(attr.node.value) {\n+                Some(s) => {\n+                    if attr::find_meta_items_by_name(s, \"hidden\").len() > 0 {\n+                        doc_hidden = true;\n+                    }\n+                }\n+                None => {}\n+            }\n+        }\n+        if doc_hidden && !self.doc_hidden {\n+            self.doc_hidden = true;\n+        } else {\n+            doc_hidden = false;\n+        }\n+\n         f();\n \n         // rollback\n+        if doc_hidden && self.doc_hidden {\n+            self.doc_hidden = false;\n+        }\n         for pushed.times {\n             let (lint, lvl, src) = self.lint_stack.pop();\n             self.set_level(lint, lvl, src);\n@@ -980,9 +1005,16 @@ fn lint_unnecessary_allocations() -> visit::vt<@mut Context> {\n fn lint_missing_doc() -> visit::vt<@mut Context> {\n     fn check_attrs(cx: @mut Context, attrs: &[ast::attribute],\n                    sp: span, msg: &str) {\n-        if !attrs.any(|a| a.node.is_sugared_doc) {\n-            cx.span_lint(missing_doc, sp, msg);\n-        }\n+        // If we're building a test harness, then warning about documentation is\n+        // probably not really relevant right now\n+        if cx.tcx.sess.opts.test { return }\n+        // If we have doc(hidden), nothing to do\n+        if cx.doc_hidden { return }\n+        // If we're documented, nothing to do\n+        if attrs.any(|a| a.node.is_sugared_doc) { return }\n+\n+        // otherwise, warn!\n+        cx.span_lint(missing_doc, sp, msg);\n     }\n \n     visit::mk_vt(@visit::Visitor {\n@@ -1067,6 +1099,7 @@ pub fn check_crate(tcx: ty::ctxt, crate: @ast::crate) {\n         lint_stack: ~[],\n         visitors: ~[],\n         in_trait_impl: false,\n+        doc_hidden: false,\n     };\n \n     // Install defaults."}, {"sha": "2350ca68b9747045693072c6605c2137b91a0b47", "filename": "src/test/compile-fail/lint-missing-doc.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4a5d887b58ff9833a968e7a0d28282b915e01de8/src%2Ftest%2Fcompile-fail%2Flint-missing-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a5d887b58ff9833a968e7a0d28282b915e01de8/src%2Ftest%2Fcompile-fail%2Flint-missing-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-missing-doc.rs?ref=4a5d887b58ff9833a968e7a0d28282b915e01de8", "patch": "@@ -69,4 +69,17 @@ impl F for Foo {\n     fn b(&self) {}\n }\n \n+// It sure is nice if doc(hidden) implies allow(missing_doc), and that it\n+// applies recursively\n+#[doc(hidden)]\n+mod a {\n+    pub fn baz() {}\n+    pub mod b {\n+        pub fn baz() {}\n+    }\n+}\n+\n+#[doc(hidden)]\n+pub fn baz() {}\n+\n fn main() {}"}]}