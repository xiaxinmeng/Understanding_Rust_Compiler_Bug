{"sha": "6d84d867360c99a8664118ff44c58c0f838a4cfc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkODRkODY3MzYwYzk5YTg2NjQxMThmZjQ0YzU4YzBmODM4YTRjZmM=", "commit": {"author": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2012-09-07T20:11:03Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-08T21:22:16Z"}, "message": "core: change FutureState Forced(A) to Forced(~A)", "tree": {"sha": "820636913fec80dd5f68763c072a379fd5805dbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/820636913fec80dd5f68763c072a379fd5805dbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d84d867360c99a8664118ff44c58c0f838a4cfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d84d867360c99a8664118ff44c58c0f838a4cfc", "html_url": "https://github.com/rust-lang/rust/commit/6d84d867360c99a8664118ff44c58c0f838a4cfc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d84d867360c99a8664118ff44c58c0f838a4cfc/comments", "author": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ed00ff9286a26119168e08f25cb33f25d39ef33", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ed00ff9286a26119168e08f25cb33f25d39ef33", "html_url": "https://github.com/rust-lang/rust/commit/2ed00ff9286a26119168e08f25cb33f25d39ef33"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "99fc9ce4d377245a3cf0fe3160420af9ebe8963b", "filename": "src/libcore/future.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6d84d867360c99a8664118ff44c58c0f838a4cfc/src%2Flibcore%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d84d867360c99a8664118ff44c58c0f838a4cfc/src%2Flibcore%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffuture.rs?ref=6d84d867360c99a8664118ff44c58c0f838a4cfc", "patch": "@@ -43,7 +43,7 @@ struct Future<A> {\n priv enum FutureState<A> {\n     Pending(fn~() -> A),\n     Evaluating,\n-    Forced(A)\n+    Forced(~A)\n }\n \n /// Methods on the `future` type\n@@ -75,7 +75,7 @@ fn from_value<A>(+val: A) -> Future<A> {\n      * not block.\n      */\n \n-    Future {state: Forced(val)}\n+    Future {state: Forced(~val)}\n }\n \n fn from_port<A:Send>(+port: future_pipe::client::waiting<A>) -> Future<A> {\n@@ -139,7 +139,7 @@ fn get_ref<A>(future: &r/Future<A>) -> &r/A {\n \n     match future.state {\n       Forced(ref v) => { // v here has type &A, but with a shorter lifetime.\n-        return unsafe{ copy_lifetime(future, v) }; // ...extend it.\n+        return unsafe{ copy_lifetime(future, &**v) }; // ...extend it.\n       }\n       Evaluating => {\n         fail ~\"Recursive forcing of future!\";\n@@ -154,7 +154,7 @@ fn get_ref<A>(future: &r/Future<A>) -> &r/A {\n         fail ~\"Logic error.\";\n       }\n       Pending(move f) => {\n-        future.state = Forced(f());\n+        future.state = Forced(~f());\n         return get_ref(future);\n       }\n     }"}]}