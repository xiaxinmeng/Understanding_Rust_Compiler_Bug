{"sha": "3cc5596466c0982e707c4c0a2a2a8a42732ac830", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjYzU1OTY0NjZjMDk4MmU3MDdjNGMwYTJhMmE4YTQyNzMyYWM4MzA=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-01-10T16:29:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-10T16:29:19Z"}, "message": "Merge pull request #1433 from sinkuu/ref\n\nDon't lint needless_borrow when matching `&&mut` by `&ref`", "tree": {"sha": "7792ecebd82ad82acffb6d129ec68337819a303c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7792ecebd82ad82acffb6d129ec68337819a303c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cc5596466c0982e707c4c0a2a2a8a42732ac830", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cc5596466c0982e707c4c0a2a2a8a42732ac830", "html_url": "https://github.com/rust-lang/rust/commit/3cc5596466c0982e707c4c0a2a2a8a42732ac830", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cc5596466c0982e707c4c0a2a2a8a42732ac830/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6ab240d06d50f3f3fc64eb441ae08a9d025567e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6ab240d06d50f3f3fc64eb441ae08a9d025567e", "html_url": "https://github.com/rust-lang/rust/commit/d6ab240d06d50f3f3fc64eb441ae08a9d025567e"}, {"sha": "c9091b71a15dd6b5efc65bb1299ebb7f7c02c339", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9091b71a15dd6b5efc65bb1299ebb7f7c02c339", "html_url": "https://github.com/rust-lang/rust/commit/c9091b71a15dd6b5efc65bb1299ebb7f7c02c339"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "af95bdcecd7fd07baeebe44f3e9975e77abc54db", "filename": "clippy_lints/src/needless_borrow.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3cc5596466c0982e707c4c0a2a2a8a42732ac830/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cc5596466c0982e707c4c0a2a2a8a42732ac830/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrow.rs?ref=3cc5596466c0982e707c4c0a2a2a8a42732ac830", "patch": "@@ -58,14 +58,15 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessBorrow {\n         if in_macro(cx, pat.span) {\n             return;\n         }\n-        if let PatKind::Binding(BindingMode::BindByRef(MutImmutable), _, _, _) = pat.node {\n-            if let ty::TyRef(_, ref tam) = cx.tcx.tables().pat_ty(pat).sty {\n-                if tam.mutbl == MutImmutable {\n-                    if let ty::TyRef(..) = tam.ty.sty {\n-                        span_lint(cx, NEEDLESS_BORROW, pat.span, \"this pattern creates a reference to a reference\")\n-                    }\n-                }\n-            }\n-        }\n+        if_let_chain! {[\n+            let PatKind::Binding(BindingMode::BindByRef(MutImmutable), _, _, _) = pat.node,\n+            let ty::TyRef(_, ref tam) = cx.tcx.tables().pat_ty(pat).sty,\n+            tam.mutbl == MutImmutable,\n+            let ty::TyRef(_, ref tam) = tam.ty.sty,\n+            // only lint immutable refs, because borrowed `&mut T` cannot be moved out\n+            tam.mutbl == MutImmutable,\n+        ], {\n+            span_lint(cx, NEEDLESS_BORROW, pat.span, \"this pattern creates a reference to a reference\")\n+        }}\n     }\n }"}, {"sha": "77992252e102fb33f4a4422f088f016e93d72c8b", "filename": "tests/compile-fail/needless_borrow.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3cc5596466c0982e707c4c0a2a2a8a42732ac830/tests%2Fcompile-fail%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cc5596466c0982e707c4c0a2a2a8a42732ac830/tests%2Fcompile-fail%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fneedless_borrow.rs?ref=3cc5596466c0982e707c4c0a2a2a8a42732ac830", "patch": "@@ -33,3 +33,12 @@ trait Trait {}\n impl<'a> Trait for &'a str {}\n \n fn h(_: &Trait) {}\n+\n+#[allow(dead_code)]\n+fn issue_1432() {\n+    let mut v = Vec::<String>::new();\n+    let _ = v.iter_mut().filter(|&ref a| a.is_empty());\n+    let _ = v.iter().filter(|&ref a| a.is_empty());\n+    //~^WARNING this pattern creates a reference to a reference\n+    let _ = v.iter().filter(|&a| a.is_empty());\n+}"}]}