{"sha": "08f7e32a6ec132649aee2b586a9356a95320c5d8", "node_id": "C_kwDOAAsO6NoAKDA4ZjdlMzJhNmVjMTMyNjQ5YWVlMmI1ODZhOTM1NmE5NTMyMGM1ZDg", "commit": {"author": {"name": "Kor Nielsen", "email": "kor@google.com", "date": "2023-04-27T06:56:55Z"}, "committer": {"name": "Kor Nielsen", "email": "kor@google.com", "date": "2023-04-27T07:22:41Z"}, "message": "Support RISC-V unaligned-scalar-mem target feature\n\nThis adds `unaligned-scalar-mem` as an allowed RISC-V target feature.\nSome RISC-V cores support unaligned access to memory without trapping.\nOn such cores, the compiler could significantly improve code-size and\nperformance when using functions like core::ptr::read_unaligned<u32>\nby emitting a single load or store instruction with an unaligned\naddress, rather than a long sequence of byte load/store/bitmanip\ninstructions.\n\nEnabling the `unaligned-scalar-mem` target feature allows LLVM to do\nthis optimization.\n\nFixes #110883", "tree": {"sha": "d329673dfef03e167a479f9141e2d55340f5447a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d329673dfef03e167a479f9141e2d55340f5447a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08f7e32a6ec132649aee2b586a9356a95320c5d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08f7e32a6ec132649aee2b586a9356a95320c5d8", "html_url": "https://github.com/rust-lang/rust/commit/08f7e32a6ec132649aee2b586a9356a95320c5d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08f7e32a6ec132649aee2b586a9356a95320c5d8/comments", "author": {"login": "korran", "id": 993854, "node_id": "MDQ6VXNlcjk5Mzg1NA==", "avatar_url": "https://avatars.githubusercontent.com/u/993854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/korran", "html_url": "https://github.com/korran", "followers_url": "https://api.github.com/users/korran/followers", "following_url": "https://api.github.com/users/korran/following{/other_user}", "gists_url": "https://api.github.com/users/korran/gists{/gist_id}", "starred_url": "https://api.github.com/users/korran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/korran/subscriptions", "organizations_url": "https://api.github.com/users/korran/orgs", "repos_url": "https://api.github.com/users/korran/repos", "events_url": "https://api.github.com/users/korran/events{/privacy}", "received_events_url": "https://api.github.com/users/korran/received_events", "type": "User", "site_admin": false}, "committer": {"login": "korran", "id": 993854, "node_id": "MDQ6VXNlcjk5Mzg1NA==", "avatar_url": "https://avatars.githubusercontent.com/u/993854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/korran", "html_url": "https://github.com/korran", "followers_url": "https://api.github.com/users/korran/followers", "following_url": "https://api.github.com/users/korran/following{/other_user}", "gists_url": "https://api.github.com/users/korran/gists{/gist_id}", "starred_url": "https://api.github.com/users/korran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/korran/subscriptions", "organizations_url": "https://api.github.com/users/korran/orgs", "repos_url": "https://api.github.com/users/korran/repos", "events_url": "https://api.github.com/users/korran/events{/privacy}", "received_events_url": "https://api.github.com/users/korran/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adaac6b166df57ea5a20d56e4cce503b55aca927", "url": "https://api.github.com/repos/rust-lang/rust/commits/adaac6b166df57ea5a20d56e4cce503b55aca927", "html_url": "https://github.com/rust-lang/rust/commit/adaac6b166df57ea5a20d56e4cce503b55aca927"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "df3d0811879cf7ef3e569e4acd85c71091422662", "filename": "compiler/rustc_codegen_ssa/src/target_features.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/08f7e32a6ec132649aee2b586a9356a95320c5d8/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08f7e32a6ec132649aee2b586a9356a95320c5d8/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs?ref=08f7e32a6ec132649aee2b586a9356a95320c5d8", "patch": "@@ -252,6 +252,7 @@ const RISCV_ALLOWED_FEATURES: &[(&str, Option<Symbol>)] = &[\n     (\"f\", Some(sym::riscv_target_feature)),\n     (\"m\", Some(sym::riscv_target_feature)),\n     (\"relax\", Some(sym::riscv_target_feature)),\n+    (\"unaligned-scalar-mem\", Some(sym::riscv_target_feature)),\n     (\"v\", Some(sym::riscv_target_feature)),\n     (\"zba\", Some(sym::riscv_target_feature)),\n     (\"zbb\", Some(sym::riscv_target_feature)),"}]}