{"sha": "d4755e1f14869834242730d459b1601d961fb1c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0NzU1ZTFmMTQ4Njk4MzQyNDI3MzBkNDU5YjE2MDFkOTYxZmIxYzI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-13T21:10:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-13T21:10:06Z"}, "message": "Auto merge of #3760 - rust-lang:rustup, r=flip1995\n\nRustup\n\ncc rust-lang/rust#58137", "tree": {"sha": "5b0393f65e031bfc43c495f832ecdb3cbebb049b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b0393f65e031bfc43c495f832ecdb3cbebb049b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4755e1f14869834242730d459b1601d961fb1c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4755e1f14869834242730d459b1601d961fb1c2", "html_url": "https://github.com/rust-lang/rust/commit/d4755e1f14869834242730d459b1601d961fb1c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4755e1f14869834242730d459b1601d961fb1c2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db13e6fa34707c62c5d87aa057813a40c67e29c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/db13e6fa34707c62c5d87aa057813a40c67e29c4", "html_url": "https://github.com/rust-lang/rust/commit/db13e6fa34707c62c5d87aa057813a40c67e29c4"}, {"sha": "5a3cd31c9ed76033319a5cb63cbd0acf3d1c43a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a3cd31c9ed76033319a5cb63cbd0acf3d1c43a9", "html_url": "https://github.com/rust-lang/rust/commit/5a3cd31c9ed76033319a5cb63cbd0acf3d1c43a9"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "6c5c5ecbb02757bf17d2a84304814e560ca14db8", "filename": "clippy_lints/src/cyclomatic_complexity.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4755e1f14869834242730d459b1601d961fb1c2/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4755e1f14869834242730d459b1601d961fb1c2/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs?ref=d4755e1f14869834242730d459b1601d961fb1c2", "patch": "@@ -78,7 +78,7 @@ impl CyclomaticComplexity {\n             returns,\n             ..\n         } = helper;\n-        let ret_ty = cx.tables.node_id_to_type(expr.hir_id);\n+        let ret_ty = cx.tables.node_type(expr.hir_id);\n         let ret_adjust = if match_type(cx, ret_ty, &paths::RESULT) {\n             returns\n         } else {\n@@ -159,7 +159,7 @@ impl<'a, 'tcx> Visitor<'tcx> for CCHelper<'a, 'tcx> {\n             },\n             ExprKind::Call(ref callee, _) => {\n                 walk_expr(self, e);\n-                let ty = self.cx.tables.node_id_to_type(callee.hir_id);\n+                let ty = self.cx.tables.node_type(callee.hir_id);\n                 match ty.sty {\n                     ty::FnDef(..) | ty::FnPtr(_) => {\n                         let sig = ty.fn_sig(self.cx.tcx);"}, {"sha": "87a82b2a169e503c10db6dc0ab673ec450b05dad", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4755e1f14869834242730d459b1601d961fb1c2/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4755e1f14869834242730d459b1601d961fb1c2/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=d4755e1f14869834242730d459b1601d961fb1c2", "patch": "@@ -126,7 +126,7 @@ fn get_ufcs_type_name(\n     self_arg: &Expr,\n ) -> std::option::Option<String> {\n     let expected_type_of_self = &cx.tcx.fn_sig(method_def_id).inputs_and_output().skip_binder()[0].sty;\n-    let actual_type_of_self = &cx.tables.node_id_to_type(self_arg.hir_id).sty;\n+    let actual_type_of_self = &cx.tables.node_type(self_arg.hir_id).sty;\n \n     if let Some(trait_id) = cx.tcx.trait_of_item(method_def_id) {\n         //if the method expectes &self, ufcs requires explicit borrowing so closure can't be removed"}, {"sha": "d0032fe78fc3fbfc67604b895223c96a1c4a6fcd", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d4755e1f14869834242730d459b1601d961fb1c2/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4755e1f14869834242730d459b1601d961fb1c2/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=d4755e1f14869834242730d459b1601d961fb1c2", "patch": "@@ -5,7 +5,6 @@\n #![feature(slice_patterns)]\n #![feature(stmt_expr_attributes)]\n #![feature(range_contains)]\n-#![feature(str_escape)]\n #![allow(clippy::missing_docs_in_private_items)]\n #![recursion_limit = \"256\"]\n #![warn(rust_2018_idioms, trivial_casts, trivial_numeric_casts)]"}, {"sha": "058d9adcb514e8ce181522083b3e2710cdba9f02", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d4755e1f14869834242730d459b1601d961fb1c2/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4755e1f14869834242730d459b1601d961fb1c2/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=d4755e1f14869834242730d459b1601d961fb1c2", "patch": "@@ -1781,7 +1781,7 @@ impl<'a, 'tcx> VarVisitor<'a, 'tcx> {\n                             if index_used_directly {\n                                 self.indexed_directly.insert(\n                                     seqvar.segments[0].ident.name,\n-                                    (Some(extent), self.cx.tables.node_id_to_type(seqexpr.hir_id)),\n+                                    (Some(extent), self.cx.tables.node_type(seqexpr.hir_id)),\n                                 );\n                             }\n                             return false;  // no need to walk further *on the variable*\n@@ -1793,7 +1793,7 @@ impl<'a, 'tcx> VarVisitor<'a, 'tcx> {\n                             if index_used_directly {\n                                 self.indexed_directly.insert(\n                                     seqvar.segments[0].ident.name,\n-                                    (None, self.cx.tables.node_id_to_type(seqexpr.hir_id)),\n+                                    (None, self.cx.tables.node_type(seqexpr.hir_id)),\n                                 );\n                             }\n                             return false;  // no need to walk further *on the variable*\n@@ -2418,7 +2418,7 @@ fn check_needless_collect<'a, 'tcx>(expr: &'tcx Expr, cx: &LateContext<'a, 'tcx>\n         if let Some(ref generic_args) = chain_method.args;\n         if let Some(GenericArg::Type(ref ty)) = generic_args.args.get(0);\n         then {\n-            let ty = cx.tables.node_id_to_type(ty.hir_id);\n+            let ty = cx.tables.node_type(ty.hir_id);\n             if match_type(cx, ty, &paths::VEC) ||\n                 match_type(cx, ty, &paths::VEC_DEQUE) ||\n                 match_type(cx, ty, &paths::BTREEMAP) ||"}, {"sha": "9adac2f6d7fa3fa39b08dc39fc1d445915e18eea", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4755e1f14869834242730d459b1601d961fb1c2/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4755e1f14869834242730d459b1601d961fb1c2/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=d4755e1f14869834242730d459b1601d961fb1c2", "patch": "@@ -156,7 +156,7 @@ fn check_local<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, local: &'tcx Local, binding\n }\n \n fn is_binding(cx: &LateContext<'_, '_>, pat_id: HirId) -> bool {\n-    let var_ty = cx.tables.node_id_to_type(pat_id);\n+    let var_ty = cx.tables.node_type(pat_id);\n     match var_ty.sty {\n         ty::Adt(..) => false,\n         _ => true,"}, {"sha": "79e9f4f27d24aba4f03d4a6098d7be78a13fa2eb", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4755e1f14869834242730d459b1601d961fb1c2/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4755e1f14869834242730d459b1601d961fb1c2/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=d4755e1f14869834242730d459b1601d961fb1c2", "patch": "@@ -2343,7 +2343,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for RefToMut {\n             if let TyKind::Ptr(MutTy { mutbl: Mutability::MutMutable, .. }) = t.node;\n             if let ExprKind::Cast(e, t) = &e.node;\n             if let TyKind::Ptr(MutTy { mutbl: Mutability::MutImmutable, .. }) = t.node;\n-            if let ty::Ref(..) = cx.tables.node_id_to_type(e.hir_id).sty;\n+            if let ty::Ref(..) = cx.tables.node_type(e.hir_id).sty;\n             then {\n                 span_lint(\n                     cx,"}, {"sha": "7df1b0eb0e3e31139f08bf55a93ab24607d81529", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4755e1f14869834242730d459b1601d961fb1c2/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4755e1f14869834242730d459b1601d961fb1c2/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=d4755e1f14869834242730d459b1601d961fb1c2", "patch": "@@ -127,7 +127,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n         }\n         match stmt.node {\n             hir::StmtKind::Local(ref local) => {\n-                println!(\"local variable of type {}\", cx.tables.node_id_to_type(local.hir_id));\n+                println!(\"local variable of type {}\", cx.tables.node_type(local.hir_id));\n                 println!(\"pattern:\");\n                 print_pat(cx, &local.pat, 0);\n                 if let Some(ref e) = local.init {"}]}