{"sha": "35c948ff4a36b9c031bda96f79b8bf9e0d5bda26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1Yzk0OGZmNGEzNmI5YzAzMWJkYTk2Zjc5YjhiZjllMGQ1YmRhMjY=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-05-25T12:24:08Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-05-25T12:29:53Z"}, "message": "Fix lowering of FnOnce() without return type\n\nThis should result in an implicit `-> ()`, not leaving out the binding.", "tree": {"sha": "e335ab0ab7271234b269974f92b591ea22174abd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e335ab0ab7271234b269974f92b591ea22174abd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35c948ff4a36b9c031bda96f79b8bf9e0d5bda26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35c948ff4a36b9c031bda96f79b8bf9e0d5bda26", "html_url": "https://github.com/rust-lang/rust/commit/35c948ff4a36b9c031bda96f79b8bf9e0d5bda26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35c948ff4a36b9c031bda96f79b8bf9e0d5bda26/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "835cf55887527bd1953cb7004259214f7c215095", "url": "https://api.github.com/repos/rust-lang/rust/commits/835cf55887527bd1953cb7004259214f7c215095", "html_url": "https://github.com/rust-lang/rust/commit/835cf55887527bd1953cb7004259214f7c215095"}], "stats": {"total": 59, "additions": 42, "deletions": 17}, "files": [{"sha": "54ede73939498ec9fa9e93a238bc41cbd0915f3c", "filename": "crates/hir_def/src/path/lower.rs", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/35c948ff4a36b9c031bda96f79b8bf9e0d5bda26/crates%2Fhir_def%2Fsrc%2Fpath%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35c948ff4a36b9c031bda96f79b8bf9e0d5bda26/crates%2Fhir_def%2Fsrc%2Fpath%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fpath%2Flower.rs?ref=35c948ff4a36b9c031bda96f79b8bf9e0d5bda26", "patch": "@@ -205,26 +205,29 @@ fn lower_generic_args_from_fn_path(\n ) -> Option<GenericArgs> {\n     let mut args = Vec::new();\n     let mut bindings = Vec::new();\n-    if let Some(params) = params {\n-        let mut param_types = Vec::new();\n-        for param in params.params() {\n-            let type_ref = TypeRef::from_ast_opt(&ctx, param.ty());\n-            param_types.push(type_ref);\n-        }\n-        let arg = GenericArg::Type(TypeRef::Tuple(param_types));\n-        args.push(arg);\n+    let params = params?;\n+    let mut param_types = Vec::new();\n+    for param in params.params() {\n+        let type_ref = TypeRef::from_ast_opt(&ctx, param.ty());\n+        param_types.push(type_ref);\n     }\n+    let arg = GenericArg::Type(TypeRef::Tuple(param_types));\n+    args.push(arg);\n     if let Some(ret_type) = ret_type {\n         let type_ref = TypeRef::from_ast_opt(&ctx, ret_type.ty());\n         bindings.push(AssociatedTypeBinding {\n             name: name![Output],\n             type_ref: Some(type_ref),\n             bounds: Vec::new(),\n         });\n-    }\n-    if args.is_empty() && bindings.is_empty() {\n-        None\n     } else {\n-        Some(GenericArgs { args, has_self_type: false, bindings })\n+        // -> ()\n+        let type_ref = TypeRef::Tuple(Vec::new());\n+        bindings.push(AssociatedTypeBinding {\n+            name: name![Output],\n+            type_ref: Some(type_ref),\n+            bounds: Vec::new(),\n+        });\n     }\n+    Some(GenericArgs { args, has_self_type: false, bindings })\n }"}, {"sha": "714f1293782ba3f7cb24f17bcf3c1a348016f11a", "filename": "crates/hir_ty/src/tests/traits.rs", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/35c948ff4a36b9c031bda96f79b8bf9e0d5bda26/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35c948ff4a36b9c031bda96f79b8bf9e0d5bda26/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs?ref=35c948ff4a36b9c031bda96f79b8bf9e0d5bda26", "patch": "@@ -3041,7 +3041,7 @@ fn infer_fn_trait_arg() {\n \n #[test]\n fn infer_box_fn_arg() {\n-    // The type mismatch is a bug\n+    // The type mismatch is because we don't define Unsize and CoerceUnsized\n     check_infer_with_mismatches(\n         r#\"\n //- /lib.rs deps:std\n@@ -3095,16 +3095,16 @@ fn foo() {\n             478..576 '{     ...&s); }': ()\n             488..489 's': Option<i32>\n             492..504 'Option::None': Option<i32>\n-            514..515 'f': Box<dyn FnOnce(&Option<i32>)>\n+            514..515 'f': Box<dyn FnOnce(&Option<i32>) -> ()>\n             549..562 'box (|ps| {})': Box<|{unknown}| -> ()>\n             554..561 '|ps| {}': |{unknown}| -> ()\n             555..557 'ps': {unknown}\n             559..561 '{}': ()\n-            568..569 'f': Box<dyn FnOnce(&Option<i32>)>\n-            568..573 'f(&s)': FnOnce::Output<dyn FnOnce(&Option<i32>), (&Option<i32>,)>\n+            568..569 'f': Box<dyn FnOnce(&Option<i32>) -> ()>\n+            568..573 'f(&s)': ()\n             570..572 '&s': &Option<i32>\n             571..572 's': Option<i32>\n-            549..562: expected Box<dyn FnOnce(&Option<i32>)>, got Box<|{unknown}| -> ()>\n+            549..562: expected Box<dyn FnOnce(&Option<i32>) -> ()>, got Box<|{unknown}| -> ()>\n         \"#]],\n     );\n }\n@@ -3571,3 +3571,25 @@ fn main() {\n         \"#]],\n     )\n }\n+\n+#[test]\n+fn fn_returning_unit() {\n+    check_infer_with_mismatches(\n+        r#\"\n+#[lang = \"fn_once\"]\n+trait FnOnce<Args> {\n+    type Output;\n+}\n+\n+fn test<F: FnOnce()>(f: F) {\n+    let _: () = f();\n+}\"#,\n+        expect![[r#\"\n+            82..83 'f': F\n+            88..112 '{     ...f(); }': ()\n+            98..99 '_': ()\n+            106..107 'f': F\n+            106..109 'f()': ()\n+        \"#]],\n+    );\n+}"}]}