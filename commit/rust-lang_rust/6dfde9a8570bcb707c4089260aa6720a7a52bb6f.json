{"sha": "6dfde9a8570bcb707c4089260aa6720a7a52bb6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkZmRlOWE4NTcwYmNiNzA3YzQwODkyNjBhYTY3MjBhN2E1MmJiNmY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-06-05T17:41:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-05T17:41:42Z"}, "message": "Rollup merge of #85710 - fee1-dead:document-path, r=m-ou-se\n\nDocument `From` impls in path.rs", "tree": {"sha": "dceffa3c0eaae3b3032265ebaf314711e5c5f6a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dceffa3c0eaae3b3032265ebaf314711e5c5f6a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6dfde9a8570bcb707c4089260aa6720a7a52bb6f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgu7dWCRBK7hj4Ov3rIwAAeykIAK15XcI8VrkE/KvnVY/J3Vqz\nqxLbWnpl3+9HENgVKoQzlYhZExL+GgHpP5l5fxw9g6FwTAppRsT0+3Qa1cvN4kKD\nEy7knhP5N9mNqIrFlyXJiXmd9tC64dfMus7Kvl3KaBc0NYow+EJTBYt85xi/RStJ\neehLy/DJxm+Jw0j6px3yRMb2/mzLsqmgYhO4rx6uRvytVK5LoDL4n7PSPqhmsG01\n3csQ6GHy+CQbwp3ONMsj1TdfvTUbQvE6qyVkwiFRc+anmKLxndvsuBnYta3kzzcS\n6KkshIxLqgvbiez0WVuym04BDs3z1l/751zhd/8D9Ai07rrnZI6+XiDGe1HeTdg=\n=QtYl\n-----END PGP SIGNATURE-----\n", "payload": "tree dceffa3c0eaae3b3032265ebaf314711e5c5f6a0\nparent eef4e2a0e8ceaee8c59394a30a9575f90766426a\nparent 296762615078cef9b810f15a7b5d8bbae9f8fc6f\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1622914902 +0200\ncommitter GitHub <noreply@github.com> 1622914902 +0200\n\nRollup merge of #85710 - fee1-dead:document-path, r=m-ou-se\n\nDocument `From` impls in path.rs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6dfde9a8570bcb707c4089260aa6720a7a52bb6f", "html_url": "https://github.com/rust-lang/rust/commit/6dfde9a8570bcb707c4089260aa6720a7a52bb6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6dfde9a8570bcb707c4089260aa6720a7a52bb6f/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eef4e2a0e8ceaee8c59394a30a9575f90766426a", "url": "https://api.github.com/repos/rust-lang/rust/commits/eef4e2a0e8ceaee8c59394a30a9575f90766426a", "html_url": "https://github.com/rust-lang/rust/commit/eef4e2a0e8ceaee8c59394a30a9575f90766426a"}, {"sha": "296762615078cef9b810f15a7b5d8bbae9f8fc6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/296762615078cef9b810f15a7b5d8bbae9f8fc6f", "html_url": "https://github.com/rust-lang/rust/commit/296762615078cef9b810f15a7b5d8bbae9f8fc6f"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "64ff7a23d479cf4d517079e819638073a5c1c36d", "filename": "library/std/src/path.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6dfde9a8570bcb707c4089260aa6720a7a52bb6f/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dfde9a8570bcb707c4089260aa6720a7a52bb6f/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=6dfde9a8570bcb707c4089260aa6720a7a52bb6f", "patch": "@@ -1420,6 +1420,9 @@ impl Clone for PathBuf {\n \n #[stable(feature = \"box_from_path\", since = \"1.17.0\")]\n impl From<&Path> for Box<Path> {\n+    /// Creates a boxed [`Path`] from a reference.\n+    ///\n+    /// This will allocate and clone `path` to it.\n     fn from(path: &Path) -> Box<Path> {\n         let boxed: Box<OsStr> = path.inner.into();\n         let rw = Box::into_raw(boxed) as *mut Path;\n@@ -1429,6 +1432,9 @@ impl From<&Path> for Box<Path> {\n \n #[stable(feature = \"box_from_cow\", since = \"1.45.0\")]\n impl From<Cow<'_, Path>> for Box<Path> {\n+    /// Creates a boxed [`Path`] from a clone-on-write pointer.\n+    ///\n+    /// Converting from a `Cow::Owned` does not clone or allocate.\n     #[inline]\n     fn from(cow: Cow<'_, Path>) -> Box<Path> {\n         match cow {\n@@ -1471,6 +1477,9 @@ impl Clone for Box<Path> {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: ?Sized + AsRef<OsStr>> From<&T> for PathBuf {\n+    /// Converts a borrowed `OsStr` to a `PathBuf`.\n+    ///\n+    /// Allocates a [`PathBuf`] and copies the data into it.\n     #[inline]\n     fn from(s: &T) -> PathBuf {\n         PathBuf::from(s.as_ref().to_os_string())\n@@ -1575,6 +1584,10 @@ impl Default for PathBuf {\n \n #[stable(feature = \"cow_from_path\", since = \"1.6.0\")]\n impl<'a> From<&'a Path> for Cow<'a, Path> {\n+    /// Creates a clone-on-write pointer from a reference to\n+    /// [`Path`].\n+    ///\n+    /// This conversion does not clone or allocate.\n     #[inline]\n     fn from(s: &'a Path) -> Cow<'a, Path> {\n         Cow::Borrowed(s)\n@@ -1583,6 +1596,10 @@ impl<'a> From<&'a Path> for Cow<'a, Path> {\n \n #[stable(feature = \"cow_from_path\", since = \"1.6.0\")]\n impl<'a> From<PathBuf> for Cow<'a, Path> {\n+    /// Creates a clone-on-write pointer from an owned\n+    /// instance of [`PathBuf`].\n+    ///\n+    /// This conversion does not clone or allocate.\n     #[inline]\n     fn from(s: PathBuf) -> Cow<'a, Path> {\n         Cow::Owned(s)\n@@ -1591,6 +1608,10 @@ impl<'a> From<PathBuf> for Cow<'a, Path> {\n \n #[stable(feature = \"cow_from_pathbuf_ref\", since = \"1.28.0\")]\n impl<'a> From<&'a PathBuf> for Cow<'a, Path> {\n+    /// Creates a clone-on-write pointer from a reference to\n+    /// [`PathBuf`].\n+    ///\n+    /// This conversion does not clone or allocate.\n     #[inline]\n     fn from(p: &'a PathBuf) -> Cow<'a, Path> {\n         Cow::Borrowed(p.as_path())\n@@ -1599,6 +1620,9 @@ impl<'a> From<&'a PathBuf> for Cow<'a, Path> {\n \n #[stable(feature = \"pathbuf_from_cow_path\", since = \"1.28.0\")]\n impl<'a> From<Cow<'a, Path>> for PathBuf {\n+    /// Converts a clone-on-write pointer to an owned path.\n+    ///\n+    /// Converting from a `Cow::Owned` does not clone or allocate.\n     #[inline]\n     fn from(p: Cow<'a, Path>) -> Self {\n         p.into_owned()"}]}