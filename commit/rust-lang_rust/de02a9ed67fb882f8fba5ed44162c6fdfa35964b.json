{"sha": "de02a9ed67fb882f8fba5ed44162c6fdfa35964b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMDJhOWVkNjdmYjg4MmY4ZmJhNWVkNDQxNjJjNmZkZmEzNTk2NGI=", "commit": {"author": {"name": "jumbatm", "email": "jumbatm@gmail.com", "date": "2020-04-02T12:47:53Z"}, "committer": {"name": "jumbatm", "email": "jumbatm@gmail.com", "date": "2020-04-02T13:21:13Z"}, "message": "Move #69020 test to ui/associated-const + rebless.", "tree": {"sha": "82536322a9bb097e92c59083063cbf2fc513d220", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82536322a9bb097e92c59083063cbf2fc513d220"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de02a9ed67fb882f8fba5ed44162c6fdfa35964b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de02a9ed67fb882f8fba5ed44162c6fdfa35964b", "html_url": "https://github.com/rust-lang/rust/commit/de02a9ed67fb882f8fba5ed44162c6fdfa35964b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de02a9ed67fb882f8fba5ed44162c6fdfa35964b/comments", "author": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d73bb926c271f494f22818ec25984057dcdfb4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d73bb926c271f494f22818ec25984057dcdfb4d", "html_url": "https://github.com/rust-lang/rust/commit/0d73bb926c271f494f22818ec25984057dcdfb4d"}], "stats": {"total": 252, "additions": 162, "deletions": 90}, "files": [{"sha": "017a6f41dd89ed8ea0d15c20ff169fffee3a8848", "filename": "src/test/ui/associated-const/issue-69020-assoc-const-arith-overflow.noopt.stderr", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/de02a9ed67fb882f8fba5ed44162c6fdfa35964b/src%2Ftest%2Fui%2Fassociated-const%2Fissue-69020-assoc-const-arith-overflow.noopt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de02a9ed67fb882f8fba5ed44162c6fdfa35964b/src%2Ftest%2Fui%2Fassociated-const%2Fissue-69020-assoc-const-arith-overflow.noopt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-const%2Fissue-69020-assoc-const-arith-overflow.noopt.stderr?ref=de02a9ed67fb882f8fba5ed44162c6fdfa35964b", "patch": "@@ -0,0 +1,54 @@\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:28:22\n+   |\n+LL |     const NEG: i32 = -i32::MIN + T::NEG;\n+   |                      ^^^^^^^^^ attempt to negate with overflow\n+   |\n+   = note: `#[deny(arithmetic_overflow)]` on by default\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:30:31\n+   |\n+LL |     const GEN: i32 = T::NEG + (-i32::MIN);\n+   |                               ^^^^^^^^^^^ attempt to negate with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:33:22\n+   |\n+LL |     const ADD: i32 = (i32::MAX+1) + T::ADD;\n+   |                      ^^^^^^^^^^^^ attempt to add with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:35:32\n+   |\n+LL |     const DDA: i32 =  T::ADD + (i32::MAX+1);\n+   |                                ^^^^^^^^^^^^ attempt to add with overflow\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:38:22\n+   |\n+LL |     const DIV: i32 = (1/0) + T::DIV;\n+   |                      ^^^^^ attempt to divide by zero\n+   |\n+   = note: `#[deny(unconditional_panic)]` on by default\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:40:31\n+   |\n+LL |     const VID: i32 = T::DIV + (1/0);\n+   |                               ^^^^^ attempt to divide by zero\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:43:22\n+   |\n+LL |     const OOB: i32 = [1][1] + T::OOB;\n+   |                      ^^^^^^ index out of bounds: the len is 1 but the index is 1\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:45:31\n+   |\n+LL |     const BOO: i32 = T::OOB + [1][1];\n+   |                               ^^^^^^ index out of bounds: the len is 1 but the index is 1\n+\n+error: aborting due to 8 previous errors\n+"}, {"sha": "017a6f41dd89ed8ea0d15c20ff169fffee3a8848", "filename": "src/test/ui/associated-const/issue-69020-assoc-const-arith-overflow.opt.stderr", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/de02a9ed67fb882f8fba5ed44162c6fdfa35964b/src%2Ftest%2Fui%2Fassociated-const%2Fissue-69020-assoc-const-arith-overflow.opt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de02a9ed67fb882f8fba5ed44162c6fdfa35964b/src%2Ftest%2Fui%2Fassociated-const%2Fissue-69020-assoc-const-arith-overflow.opt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-const%2Fissue-69020-assoc-const-arith-overflow.opt.stderr?ref=de02a9ed67fb882f8fba5ed44162c6fdfa35964b", "patch": "@@ -0,0 +1,54 @@\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:28:22\n+   |\n+LL |     const NEG: i32 = -i32::MIN + T::NEG;\n+   |                      ^^^^^^^^^ attempt to negate with overflow\n+   |\n+   = note: `#[deny(arithmetic_overflow)]` on by default\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:30:31\n+   |\n+LL |     const GEN: i32 = T::NEG + (-i32::MIN);\n+   |                               ^^^^^^^^^^^ attempt to negate with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:33:22\n+   |\n+LL |     const ADD: i32 = (i32::MAX+1) + T::ADD;\n+   |                      ^^^^^^^^^^^^ attempt to add with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:35:32\n+   |\n+LL |     const DDA: i32 =  T::ADD + (i32::MAX+1);\n+   |                                ^^^^^^^^^^^^ attempt to add with overflow\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:38:22\n+   |\n+LL |     const DIV: i32 = (1/0) + T::DIV;\n+   |                      ^^^^^ attempt to divide by zero\n+   |\n+   = note: `#[deny(unconditional_panic)]` on by default\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:40:31\n+   |\n+LL |     const VID: i32 = T::DIV + (1/0);\n+   |                               ^^^^^ attempt to divide by zero\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:43:22\n+   |\n+LL |     const OOB: i32 = [1][1] + T::OOB;\n+   |                      ^^^^^^ index out of bounds: the len is 1 but the index is 1\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:45:31\n+   |\n+LL |     const BOO: i32 = T::OOB + [1][1];\n+   |                               ^^^^^^ index out of bounds: the len is 1 but the index is 1\n+\n+error: aborting due to 8 previous errors\n+"}, {"sha": "017a6f41dd89ed8ea0d15c20ff169fffee3a8848", "filename": "src/test/ui/associated-const/issue-69020-assoc-const-arith-overflow.opt_with_overflow_checks.stderr", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/de02a9ed67fb882f8fba5ed44162c6fdfa35964b/src%2Ftest%2Fui%2Fassociated-const%2Fissue-69020-assoc-const-arith-overflow.opt_with_overflow_checks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de02a9ed67fb882f8fba5ed44162c6fdfa35964b/src%2Ftest%2Fui%2Fassociated-const%2Fissue-69020-assoc-const-arith-overflow.opt_with_overflow_checks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-const%2Fissue-69020-assoc-const-arith-overflow.opt_with_overflow_checks.stderr?ref=de02a9ed67fb882f8fba5ed44162c6fdfa35964b", "patch": "@@ -0,0 +1,54 @@\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:28:22\n+   |\n+LL |     const NEG: i32 = -i32::MIN + T::NEG;\n+   |                      ^^^^^^^^^ attempt to negate with overflow\n+   |\n+   = note: `#[deny(arithmetic_overflow)]` on by default\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:30:31\n+   |\n+LL |     const GEN: i32 = T::NEG + (-i32::MIN);\n+   |                               ^^^^^^^^^^^ attempt to negate with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:33:22\n+   |\n+LL |     const ADD: i32 = (i32::MAX+1) + T::ADD;\n+   |                      ^^^^^^^^^^^^ attempt to add with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:35:32\n+   |\n+LL |     const DDA: i32 =  T::ADD + (i32::MAX+1);\n+   |                                ^^^^^^^^^^^^ attempt to add with overflow\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:38:22\n+   |\n+LL |     const DIV: i32 = (1/0) + T::DIV;\n+   |                      ^^^^^ attempt to divide by zero\n+   |\n+   = note: `#[deny(unconditional_panic)]` on by default\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:40:31\n+   |\n+LL |     const VID: i32 = T::DIV + (1/0);\n+   |                               ^^^^^ attempt to divide by zero\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:43:22\n+   |\n+LL |     const OOB: i32 = [1][1] + T::OOB;\n+   |                      ^^^^^^ index out of bounds: the len is 1 but the index is 1\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-69020-assoc-const-arith-overflow.rs:45:31\n+   |\n+LL |     const BOO: i32 = T::OOB + [1][1];\n+   |                               ^^^^^^ index out of bounds: the len is 1 but the index is 1\n+\n+error: aborting due to 8 previous errors\n+"}, {"sha": "9a31c10a0c6403ab0c5ad57895389ea8898bee4e", "filename": "src/test/ui/associated-const/issue-69020-assoc-const-arith-overflow.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de02a9ed67fb882f8fba5ed44162c6fdfa35964b/src%2Ftest%2Fui%2Fassociated-const%2Fissue-69020-assoc-const-arith-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de02a9ed67fb882f8fba5ed44162c6fdfa35964b/src%2Ftest%2Fui%2Fassociated-const%2Fissue-69020-assoc-const-arith-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-const%2Fissue-69020-assoc-const-arith-overflow.rs?ref=de02a9ed67fb882f8fba5ed44162c6fdfa35964b", "previous_filename": "src/test/ui/consts/issue-69020.rs"}, {"sha": "c48a106ef4656ce0287be97b5ec7b186d9c79fbc", "filename": "src/test/ui/consts/issue-69020.noopt.stderr", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/0d73bb926c271f494f22818ec25984057dcdfb4d/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.noopt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d73bb926c271f494f22818ec25984057dcdfb4d/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.noopt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.noopt.stderr?ref=0d73bb926c271f494f22818ec25984057dcdfb4d", "patch": "@@ -1,30 +0,0 @@\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-69020.rs:21:22\n-   |\n-LL |     const NEG: i32 = -i32::MIN + T::NEG;\n-   |                      ^^^^^^^^^ attempt to negate with overflow\n-   |\n-   = note: `#[deny(arithmetic_overflow)]` on by default\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-69020.rs:23:22\n-   |\n-LL |     const ADD: i32 = (i32::MAX+1) + T::ADD;\n-   |                      ^^^^^^^^^^^^ attempt to add with overflow\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-69020.rs:25:22\n-   |\n-LL |     const DIV: i32 = (1/0) + T::DIV;\n-   |                      ^^^^^ attempt to divide by zero\n-   |\n-   = note: `#[deny(unconditional_panic)]` on by default\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-69020.rs:27:22\n-   |\n-LL |     const OOB: i32 = [1][1] + T::OOB;\n-   |                      ^^^^^^ index out of bounds: the len is 1 but the index is 1\n-\n-error: aborting due to 4 previous errors\n-"}, {"sha": "c48a106ef4656ce0287be97b5ec7b186d9c79fbc", "filename": "src/test/ui/consts/issue-69020.opt.stderr", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/0d73bb926c271f494f22818ec25984057dcdfb4d/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.opt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d73bb926c271f494f22818ec25984057dcdfb4d/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.opt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.opt.stderr?ref=0d73bb926c271f494f22818ec25984057dcdfb4d", "patch": "@@ -1,30 +0,0 @@\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-69020.rs:21:22\n-   |\n-LL |     const NEG: i32 = -i32::MIN + T::NEG;\n-   |                      ^^^^^^^^^ attempt to negate with overflow\n-   |\n-   = note: `#[deny(arithmetic_overflow)]` on by default\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-69020.rs:23:22\n-   |\n-LL |     const ADD: i32 = (i32::MAX+1) + T::ADD;\n-   |                      ^^^^^^^^^^^^ attempt to add with overflow\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-69020.rs:25:22\n-   |\n-LL |     const DIV: i32 = (1/0) + T::DIV;\n-   |                      ^^^^^ attempt to divide by zero\n-   |\n-   = note: `#[deny(unconditional_panic)]` on by default\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-69020.rs:27:22\n-   |\n-LL |     const OOB: i32 = [1][1] + T::OOB;\n-   |                      ^^^^^^ index out of bounds: the len is 1 but the index is 1\n-\n-error: aborting due to 4 previous errors\n-"}, {"sha": "c48a106ef4656ce0287be97b5ec7b186d9c79fbc", "filename": "src/test/ui/consts/issue-69020.opt_with_overflow_checks.stderr", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/0d73bb926c271f494f22818ec25984057dcdfb4d/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.opt_with_overflow_checks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d73bb926c271f494f22818ec25984057dcdfb4d/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.opt_with_overflow_checks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.opt_with_overflow_checks.stderr?ref=0d73bb926c271f494f22818ec25984057dcdfb4d", "patch": "@@ -1,30 +0,0 @@\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-69020.rs:21:22\n-   |\n-LL |     const NEG: i32 = -i32::MIN + T::NEG;\n-   |                      ^^^^^^^^^ attempt to negate with overflow\n-   |\n-   = note: `#[deny(arithmetic_overflow)]` on by default\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-69020.rs:23:22\n-   |\n-LL |     const ADD: i32 = (i32::MAX+1) + T::ADD;\n-   |                      ^^^^^^^^^^^^ attempt to add with overflow\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-69020.rs:25:22\n-   |\n-LL |     const DIV: i32 = (1/0) + T::DIV;\n-   |                      ^^^^^ attempt to divide by zero\n-   |\n-   = note: `#[deny(unconditional_panic)]` on by default\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-69020.rs:27:22\n-   |\n-LL |     const OOB: i32 = [1][1] + T::OOB;\n-   |                      ^^^^^^ index out of bounds: the len is 1 but the index is 1\n-\n-error: aborting due to 4 previous errors\n-"}]}