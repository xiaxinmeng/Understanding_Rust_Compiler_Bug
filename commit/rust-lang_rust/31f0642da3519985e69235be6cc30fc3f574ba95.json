{"sha": "31f0642da3519985e69235be6cc30fc3f574ba95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxZjA2NDJkYTM1MTk5ODVlNjkyMzViZTZjYzMwZmMzZjU3NGJhOTU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-16T23:55:28Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-16T23:55:28Z"}, "message": "Stub out translation of obj ctors (no vtbl or body built).", "tree": {"sha": "4e986e1ae96b64325d501b134d2ad55362c3400f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e986e1ae96b64325d501b134d2ad55362c3400f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31f0642da3519985e69235be6cc30fc3f574ba95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31f0642da3519985e69235be6cc30fc3f574ba95", "html_url": "https://github.com/rust-lang/rust/commit/31f0642da3519985e69235be6cc30fc3f574ba95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31f0642da3519985e69235be6cc30fc3f574ba95/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51782d2c21b275b8c9fcbf6cf05222d24aa1ada9", "url": "https://api.github.com/repos/rust-lang/rust/commits/51782d2c21b275b8c9fcbf6cf05222d24aa1ada9", "html_url": "https://github.com/rust-lang/rust/commit/51782d2c21b275b8c9fcbf6cf05222d24aa1ada9"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "b074e6d6a9ef5b58d56ba6e59e3e3423c54dd9ed", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/31f0642da3519985e69235be6cc30fc3f574ba95/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31f0642da3519985e69235be6cc30fc3f574ba95/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=31f0642da3519985e69235be6cc30fc3f574ba95", "patch": "@@ -2253,6 +2253,15 @@ fn arg_tys_of_fn(ast.ann ann) -> vec[typeck.arg] {\n     fail;\n }\n \n+fn ret_ty_of_fn(ast.ann ann) -> @typeck.ty {\n+    alt (typeck.ann_to_type(ann).struct) {\n+        case (typeck.ty_fn(_, ?ret_ty)) {\n+            ret ret_ty;\n+        }\n+    }\n+    fail;\n+}\n+\n impure fn trans_fn(@crate_ctxt cx, &ast._fn f, ast.def_id fid,\n                    &ast.ann ann) {\n \n@@ -2274,6 +2283,33 @@ impure fn trans_fn(@crate_ctxt cx, &ast._fn f, ast.def_id fid,\n     }\n }\n \n+fn trans_obj(@crate_ctxt cx, &ast._obj ob, ast.def_id oid,\n+             &ast.ann ann) {\n+\n+    auto llctor_decl = cx.item_ids.get(oid);\n+    cx.item_names.insert(cx.path, llctor_decl);\n+\n+    // Translate obj ctor fields to function arguments.\n+    let vec[ast.arg] fn_args = vec();\n+    for (ast.obj_field f in ob.fields) {\n+        fn_args += vec(rec(mode=ast.alias,\n+                           ty=f.ty,\n+                           ident=f.ident,\n+                           id=f.id));\n+    }\n+\n+    auto fcx = new_fn_ctxt(cx, cx.path, llctor_decl);\n+    create_llargs_for_fn_args(fcx, fn_args);\n+\n+    auto bcx = new_top_block_ctxt(fcx);\n+\n+    copy_args_to_allocas(bcx, fn_args, arg_tys_of_fn(ann));\n+\n+    auto pair = bcx.build.Alloca(type_of(cx, ret_ty_of_fn(ann)));\n+\n+    bcx.build.Ret(pair);\n+}\n+\n fn trans_tag_variant(@crate_ctxt cx, ast.def_id tag_id,\n                      &ast.variant variant, int index) {\n     if (_vec.len[ast.variant_arg](variant.args) == 0u) {\n@@ -2351,6 +2387,10 @@ impure fn trans_item(@crate_ctxt cx, &ast.item item) {\n             auto sub_cx = @rec(path=cx.path + \".\" + name with *cx);\n             trans_fn(sub_cx, f, fid, ann);\n         }\n+        case (ast.item_obj(?name, ?ob, _, ?oid, ?ann)) {\n+            auto sub_cx = @rec(path=cx.path + \".\" + name with *cx);\n+            trans_obj(sub_cx, ob, oid, ann);\n+        }\n         case (ast.item_mod(?name, ?m, _)) {\n             auto sub_cx = @rec(path=cx.path + \".\" + name with *cx);\n             trans_mod(sub_cx, m);"}]}