{"sha": "53fd0c50d847edb30c5673d7c4625ad8ee82db8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzZmQwYzUwZDg0N2VkYjMwYzU2NzNkN2M0NjI1YWQ4ZWU4MmRiOGY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-01-02T01:53:47Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-01-04T15:21:22Z"}, "message": "Bump to 1.25.0\n\n* Bump the release version to 1.25\n* Bump the bootstrap compiler to the recent beta\n* Allow using unstable rustdoc features on beta - this fix has been applied to\n  the beta branch but needed to go to the master branch as well.", "tree": {"sha": "3e3946aefa4fd769d48a6145f071387781b5e280", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e3946aefa4fd769d48a6145f071387781b5e280"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53fd0c50d847edb30c5673d7c4625ad8ee82db8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53fd0c50d847edb30c5673d7c4625ad8ee82db8f", "html_url": "https://github.com/rust-lang/rust/commit/53fd0c50d847edb30c5673d7c4625ad8ee82db8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53fd0c50d847edb30c5673d7c4625ad8ee82db8f/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b65f0bedd2f22d9661ecb7092f07746dc2ccfb0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b65f0bedd2f22d9661ecb7092f07746dc2ccfb0d", "html_url": "https://github.com/rust-lang/rust/commit/b65f0bedd2f22d9661ecb7092f07746dc2ccfb0d"}], "stats": {"total": 62, "additions": 9, "deletions": 53}, "files": [{"sha": "16de31406f847aa5db99e2237500e039b6cc0602", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/53fd0c50d847edb30c5673d7c4625ad8ee82db8f/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53fd0c50d847edb30c5673d7c4625ad8ee82db8f/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=53fd0c50d847edb30c5673d7c4625ad8ee82db8f", "patch": "@@ -419,7 +419,8 @@ impl<'a> Builder<'a> {\n            .env(\"RUSTC_LIBDIR\", self.sysroot_libdir(compiler, self.build.build))\n            .env(\"CFG_RELEASE_CHANNEL\", &self.build.config.channel)\n            .env(\"RUSTDOC_REAL\", self.rustdoc(host))\n-           .env(\"RUSTDOC_CRATE_VERSION\", self.build.rust_version());\n+           .env(\"RUSTDOC_CRATE_VERSION\", self.build.rust_version())\n+           .env(\"RUSTC_BOOTSTRAP\", \"1\");\n         if let Some(linker) = self.build.linker(host) {\n             cmd.env(\"RUSTC_TARGET_LINKER\", linker);\n         }"}, {"sha": "4e3f3a00b15eee4b1c975207e789a761583941bf", "filename": "src/bootstrap/channel.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/53fd0c50d847edb30c5673d7c4625ad8ee82db8f/src%2Fbootstrap%2Fchannel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53fd0c50d847edb30c5673d7c4625ad8ee82db8f/src%2Fbootstrap%2Fchannel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fchannel.rs?ref=53fd0c50d847edb30c5673d7c4625ad8ee82db8f", "patch": "@@ -24,7 +24,7 @@ use Build;\n use config::Config;\n \n // The version number\n-pub const CFG_RELEASE_NUM: &str = \"1.24.0\";\n+pub const CFG_RELEASE_NUM: &str = \"1.25.0\";\n \n // An optional number to put after the label, e.g. '.2' -> '-beta.2'\n // Be sure to make this starts with a dot to conform to semver pre-release"}, {"sha": "07941e588387ccfe11da9581838d562a9c137095", "filename": "src/bootstrap/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/53fd0c50d847edb30c5673d7c4625ad8ee82db8f/src%2Fbootstrap%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53fd0c50d847edb30c5673d7c4625ad8ee82db8f/src%2Fbootstrap%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Futil.rs?ref=53fd0c50d847edb30c5673d7c4625ad8ee82db8f", "patch": "@@ -315,7 +315,7 @@ pub fn symlink_dir(src: &Path, dest: &Path) -> io::Result<()> {\n             let mut data = [0u8; MAXIMUM_REPARSE_DATA_BUFFER_SIZE];\n             let db = data.as_mut_ptr()\n                             as *mut REPARSE_MOUNTPOINT_DATA_BUFFER;\n-            let buf = &mut (*db).ReparseTarget as *mut _;\n+            let buf = &mut (*db).ReparseTarget as *mut u16;\n             let mut i = 0;\n             // FIXME: this conversion is very hacky\n             let v = br\"\\??\\\";"}, {"sha": "7304ed6015cc9042f5e552df3244d45f105d932e", "filename": "src/ci/docker/x86_64-gnu-incremental/Dockerfile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/53fd0c50d847edb30c5673d7c4625ad8ee82db8f/src%2Fci%2Fdocker%2Fx86_64-gnu-incremental%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/53fd0c50d847edb30c5673d7c4625ad8ee82db8f/src%2Fci%2Fdocker%2Fx86_64-gnu-incremental%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-incremental%2FDockerfile?ref=53fd0c50d847edb30c5673d7c4625ad8ee82db8f", "patch": "@@ -19,3 +19,4 @@ RUN sh /scripts/sccache.sh\n ENV RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu\n ENV RUSTFLAGS -Zincremental=/tmp/rust-incr-cache\n ENV RUST_CHECK_TARGET check\n+ENV CARGO_INCREMENTAL 0"}, {"sha": "a611dc02469e8abc68f2ff67c171b4d6f4ea8c59", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/53fd0c50d847edb30c5673d7c4625ad8ee82db8f/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53fd0c50d847edb30c5673d7c4625ad8ee82db8f/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=53fd0c50d847edb30c5673d7c4625ad8ee82db8f", "patch": "@@ -1390,6 +1390,5 @@ extern \"rust-intrinsic\" {\n \n     /// Emits a `!nontemporal` store according to LLVM (see their docs).\n     /// Probably will never become stable.\n-    #[cfg(not(stage0))]\n     pub fn nontemporal_store<T>(ptr: *mut T, val: T);\n }"}, {"sha": "af414d25b5f949053b33c98558bd4eea65239836", "filename": "src/libstd/rt.rs", "status": "modified", "additions": 2, "deletions": 47, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/53fd0c50d847edb30c5673d7c4625ad8ee82db8f/src%2Flibstd%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53fd0c50d847edb30c5673d7c4625ad8ee82db8f/src%2Flibstd%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt.rs?ref=53fd0c50d847edb30c5673d7c4625ad8ee82db8f", "patch": "@@ -28,7 +28,7 @@ pub use panicking::{begin_panic, begin_panic_fmt, update_panic_count};\n \n // To reduce the generated code of the new `lang_start`, this function is doing\n // the real work.\n-#[cfg(not(any(test, stage0)))]\n+#[cfg(not(test))]\n fn lang_start_internal(main: &(Fn() -> i32 + Sync + ::panic::RefUnwindSafe),\n                        argc: isize, argv: *const *const u8) -> isize {\n     use panic;\n@@ -66,55 +66,10 @@ fn lang_start_internal(main: &(Fn() -> i32 + Sync + ::panic::RefUnwindSafe),\n     }\n }\n \n-#[cfg(not(any(test, stage0)))]\n+#[cfg(not(test))]\n #[lang = \"start\"]\n fn lang_start<T: ::termination::Termination + 'static>\n     (main: fn() -> T, argc: isize, argv: *const *const u8) -> isize\n {\n     lang_start_internal(&move || main().report(), argc, argv)\n }\n-\n-#[cfg(all(not(test), stage0))]\n-#[lang = \"start\"]\n-fn lang_start(main: fn(), argc: isize, argv: *const *const u8) -> isize {\n-    use panic;\n-    use sys;\n-    use sys_common;\n-    use sys_common::thread_info;\n-    use thread::Thread;\n-    #[cfg(not(feature = \"backtrace\"))]\n-    use mem;\n-\n-    sys::init();\n-\n-    let failed = unsafe {\n-        let main_guard = sys::thread::guard::init();\n-        sys::stack_overflow::init();\n-\n-        // Next, set up the current Thread with the guard information we just\n-        // created. Note that this isn't necessary in general for new threads,\n-        // but we just do this to name the main thread and to give it correct\n-        // info about the stack bounds.\n-        let thread = Thread::new(Some(\"main\".to_owned()));\n-        thread_info::set(main_guard, thread);\n-\n-        // Store our args if necessary in a squirreled away location\n-        sys::args::init(argc, argv);\n-\n-        // Let's run some code!\n-        #[cfg(feature = \"backtrace\")]\n-        let res = panic::catch_unwind(|| {\n-            ::sys_common::backtrace::__rust_begin_short_backtrace(main)\n-        });\n-        #[cfg(not(feature = \"backtrace\"))]\n-        let res = panic::catch_unwind(mem::transmute::<_, fn()>(main));\n-        sys_common::cleanup();\n-        res.is_err()\n-    };\n-\n-    if failed {\n-        101\n-    } else {\n-        0\n-    }\n-}"}, {"sha": "93a913bb540b7aa55340c7bc70461944e87c41b1", "filename": "src/libstd/termination.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/53fd0c50d847edb30c5673d7c4625ad8ee82db8f/src%2Flibstd%2Ftermination.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53fd0c50d847edb30c5673d7c4625ad8ee82db8f/src%2Flibstd%2Ftermination.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftermination.rs?ref=53fd0c50d847edb30c5673d7c4625ad8ee82db8f", "patch": "@@ -29,7 +29,7 @@ mod exit {\n ///\n /// The default implementations are returning `libc::EXIT_SUCCESS` to indicate\n /// a successful execution. In case of a failure, `libc::EXIT_FAILURE` is returned.\n-#[cfg_attr(not(any(stage0, test)), lang = \"termination\")]\n+#[cfg_attr(not(test), lang = \"termination\")]\n #[unstable(feature = \"termination_trait\", issue = \"43301\")]\n #[rustc_on_unimplemented =\n   \"`main` can only return types that implement {Termination}, not `{Self}`\"]"}, {"sha": "38a8ef2acd261f213e1cea7f98386b2277f4925d", "filename": "src/stage0.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/53fd0c50d847edb30c5673d7c4625ad8ee82db8f/src%2Fstage0.txt", "raw_url": "https://github.com/rust-lang/rust/raw/53fd0c50d847edb30c5673d7c4625ad8ee82db8f/src%2Fstage0.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstage0.txt?ref=53fd0c50d847edb30c5673d7c4625ad8ee82db8f", "patch": "@@ -12,7 +12,7 @@\n # source tarball for a stable release you'll likely see `1.x.0` for rustc and\n # `0.x.0` for Cargo where they were released on `date`.\n \n-date: 2017-11-21\n+date: 2018-01-02\n rustc: beta\n cargo: beta\n "}]}