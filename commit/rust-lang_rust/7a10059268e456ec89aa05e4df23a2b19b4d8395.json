{"sha": "7a10059268e456ec89aa05e4df23a2b19b4d8395", "node_id": "C_kwDOAAsO6NoAKDdhMTAwNTkyNjhlNDU2ZWM4OWFhMDVlNGRmMjNhMmIxOWI0ZDgzOTU", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-05-18T16:18:11Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-05-18T16:18:11Z"}, "message": "Fix symbol tables in case of multiple object files with the same name\n\nFixes #1228", "tree": {"sha": "9cd44a98363ce5f58b8c8df6299bab3c83f87406", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cd44a98363ce5f58b8c8df6299bab3c83f87406"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a10059268e456ec89aa05e4df23a2b19b4d8395", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a10059268e456ec89aa05e4df23a2b19b4d8395", "html_url": "https://github.com/rust-lang/rust/commit/7a10059268e456ec89aa05e4df23a2b19b4d8395", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a10059268e456ec89aa05e4df23a2b19b4d8395/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01ab51bb16f3b356f081b792a2dc9574d43b5449", "url": "https://api.github.com/repos/rust-lang/rust/commits/01ab51bb16f3b356f081b792a2dc9574d43b5449", "html_url": "https://github.com/rust-lang/rust/commit/01ab51bb16f3b356f081b792a2dc9574d43b5449"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "b54898cc02a0a2c8c1350b5af860fcedff21d529", "filename": "src/archive.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7a10059268e456ec89aa05e4df23a2b19b4d8395/src%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a10059268e456ec89aa05e4df23a2b19b4d8395/src%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Farchive.rs?ref=7a10059268e456ec89aa05e4df23a2b19b4d8395", "patch": "@@ -117,7 +117,7 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n \n         let mut entries = Vec::new();\n \n-        for (entry_name, entry) in self.entries {\n+        for (mut entry_name, entry) in self.entries {\n             // FIXME only read the symbol table of the object files to avoid having to keep all\n             // object files in memory at once, or read them twice.\n             let data = match entry {\n@@ -140,6 +140,23 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n             };\n \n             if !self.no_builtin_ranlib {\n+                if symbol_table.contains_key(&entry_name) {\n+                    // The ar crate can't handle creating a symbol table in case of multiple archive\n+                    // members with the same name. Work around this by prepending a number until we\n+                    // get a unique name.\n+                    for i in 1.. {\n+                        let new_name = format!(\"{}_\", i)\n+                            .into_bytes()\n+                            .into_iter()\n+                            .chain(entry_name.iter().copied())\n+                            .collect::<Vec<_>>();\n+                        if !symbol_table.contains_key(&new_name) {\n+                            entry_name = new_name;\n+                            break;\n+                        }\n+                    }\n+                }\n+\n                 match object::File::parse(&*data) {\n                     Ok(object) => {\n                         symbol_table.insert("}]}