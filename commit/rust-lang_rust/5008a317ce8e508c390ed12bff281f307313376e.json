{"sha": "5008a317ce8e508c390ed12bff281f307313376e", "node_id": "C_kwDOAAsO6NoAKDUwMDhhMzE3Y2U4ZTUwOGMzOTBlZDEyYmZmMjgxZjMwNzMxMzM3NmU", "commit": {"author": {"name": "Joy", "email": "51241057+maniwani@users.noreply.github.com", "date": "2022-10-26T18:43:18Z"}, "committer": {"name": "Cameron", "email": "51241057+maniwani@users.noreply.github.com", "date": "2022-11-13T20:01:42Z"}, "message": "Fix non-associativity of `Instant` math on `aarch64-apple-darwin` targets", "tree": {"sha": "d243bfcdec1e6808b8055be1e281e66245e33d66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d243bfcdec1e6808b8055be1e281e66245e33d66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5008a317ce8e508c390ed12bff281f307313376e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5008a317ce8e508c390ed12bff281f307313376e", "html_url": "https://github.com/rust-lang/rust/commit/5008a317ce8e508c390ed12bff281f307313376e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5008a317ce8e508c390ed12bff281f307313376e/comments", "author": {"login": "maniwani", "id": 51241057, "node_id": "MDQ6VXNlcjUxMjQxMDU3", "avatar_url": "https://avatars.githubusercontent.com/u/51241057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maniwani", "html_url": "https://github.com/maniwani", "followers_url": "https://api.github.com/users/maniwani/followers", "following_url": "https://api.github.com/users/maniwani/following{/other_user}", "gists_url": "https://api.github.com/users/maniwani/gists{/gist_id}", "starred_url": "https://api.github.com/users/maniwani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maniwani/subscriptions", "organizations_url": "https://api.github.com/users/maniwani/orgs", "repos_url": "https://api.github.com/users/maniwani/repos", "events_url": "https://api.github.com/users/maniwani/events{/privacy}", "received_events_url": "https://api.github.com/users/maniwani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "maniwani", "id": 51241057, "node_id": "MDQ6VXNlcjUxMjQxMDU3", "avatar_url": "https://avatars.githubusercontent.com/u/51241057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maniwani", "html_url": "https://github.com/maniwani", "followers_url": "https://api.github.com/users/maniwani/followers", "following_url": "https://api.github.com/users/maniwani/following{/other_user}", "gists_url": "https://api.github.com/users/maniwani/gists{/gist_id}", "starred_url": "https://api.github.com/users/maniwani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maniwani/subscriptions", "organizations_url": "https://api.github.com/users/maniwani/orgs", "repos_url": "https://api.github.com/users/maniwani/repos", "events_url": "https://api.github.com/users/maniwani/events{/privacy}", "received_events_url": "https://api.github.com/users/maniwani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4d6307c633c954971f3ca7876d4f29f3fe83614", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4d6307c633c954971f3ca7876d4f29f3fe83614", "html_url": "https://github.com/rust-lang/rust/commit/e4d6307c633c954971f3ca7876d4f29f3fe83614"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "b65566740b50ced7cc85d8c6e7fd04dcf275d0d1", "filename": "library/std/src/sys/unix/time.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5008a317ce8e508c390ed12bff281f307313376e/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5008a317ce8e508c390ed12bff281f307313376e/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs?ref=5008a317ce8e508c390ed12bff281f307313376e", "patch": "@@ -149,7 +149,11 @@ impl From<libc::timespec> for Timespec {\n     }\n }\n \n-#[cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"watchos\"))]\n+#[cfg(any(\n+    all(target_os = \"macos\", not(target_arch = \"aarch64\")),\n+    target_os = \"ios\",\n+    target_os = \"watchos\"\n+))]\n mod inner {\n     use crate::sync::atomic::{AtomicU64, Ordering};\n     use crate::sys::cvt;\n@@ -265,7 +269,11 @@ mod inner {\n     }\n }\n \n-#[cfg(not(any(target_os = \"macos\", target_os = \"ios\", target_os = \"watchos\")))]\n+#[cfg(not(any(\n+    all(target_os = \"macos\", not(target_arch = \"aarch64\")),\n+    target_os = \"ios\",\n+    target_os = \"watchos\"\n+)))]\n mod inner {\n     use crate::fmt;\n     use crate::mem::MaybeUninit;\n@@ -281,7 +289,11 @@ mod inner {\n \n     impl Instant {\n         pub fn now() -> Instant {\n-            Instant { t: Timespec::now(libc::CLOCK_MONOTONIC) }\n+            #[cfg(target_os = \"macos\")]\n+            const clock_id: clock_t = libc::CLOCK_UPTIME_RAW;\n+            #[cfg(not(target_os = \"macos\"))]\n+            const clock_id: clock_t = libc::CLOCK_MONOTONIC;\n+            Instant { t: Timespec::now(clock_id) }\n         }\n \n         pub fn checked_sub_instant(&self, other: &Instant) -> Option<Duration> {"}, {"sha": "2e64ae59aff24422cf1862c2e18b863b8201efe1", "filename": "library/std/src/time/tests.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5008a317ce8e508c390ed12bff281f307313376e/library%2Fstd%2Fsrc%2Ftime%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5008a317ce8e508c390ed12bff281f307313376e/library%2Fstd%2Fsrc%2Ftime%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ftime%2Ftests.rs?ref=5008a317ce8e508c390ed12bff281f307313376e", "patch": "@@ -88,6 +88,14 @@ fn instant_math_is_associative() {\n     // Changing the order of instant math shouldn't change the results,\n     // especially when the expression reduces to X + identity.\n     assert_eq!((now + offset) - now, (now - now) + offset);\n+\n+    // On any platform, `Instant` should have the same resolution as `Duration` (e.g. 1 nanosecond)\n+    // or better. Otherwise, math will be non-associative (see #91417).\n+    let now = Instant::now();\n+    let provided_offset = Duration::from_nanos(1);\n+    let later = now + provided_offset;\n+    let measured_offset = later - now;\n+    assert_eq!(measured_offset, provided_offset);\n }\n \n #[test]"}]}