{"sha": "bc8641a4877a15d4a3184c079e8548029d02d524", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjODY0MWE0ODc3YTE1ZDRhMzE4NGMwNzllODU0ODAyOWQwMmQ1MjQ=", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-03-15T11:31:01Z"}, "committer": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-03-15T12:06:52Z"}, "message": "Document valtree", "tree": {"sha": "176fbd509d2db9923c5380ff643b0b99c2d3e687", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/176fbd509d2db9923c5380ff643b0b99c2d3e687"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc8641a4877a15d4a3184c079e8548029d02d524", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc8641a4877a15d4a3184c079e8548029d02d524", "html_url": "https://github.com/rust-lang/rust/commit/bc8641a4877a15d4a3184c079e8548029d02d524", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc8641a4877a15d4a3184c079e8548029d02d524/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c30c1be1e69a0cf37855b611fa0921e41e04016f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c30c1be1e69a0cf37855b611fa0921e41e04016f", "html_url": "https://github.com/rust-lang/rust/commit/c30c1be1e69a0cf37855b611fa0921e41e04016f"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "fbe4c657323f9246585753ed48c911974e62484c", "filename": "compiler/rustc_middle/src/ty/consts/valtree.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bc8641a4877a15d4a3184c079e8548029d02d524/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fvaltree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc8641a4877a15d4a3184c079e8548029d02d524/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fvaltree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fvaltree.rs?ref=bc8641a4877a15d4a3184c079e8548029d02d524", "patch": "@@ -3,8 +3,26 @@ use rustc_macros::HashStable;\n \n #[derive(Copy, Clone, Debug, Hash, TyEncodable, TyDecodable, Eq, PartialEq, Ord, PartialOrd)]\n #[derive(HashStable)]\n+/// This datastructure is used to represent the value of constants used in the type system.\n+///\n+/// We explicitly choose a different datastructure from the way values are processed within\n+/// CTFE, as in the type system equal values must also have equal representation.\n+/// Since CTFE uses `AllocId` to represent pointers, it often happens that two different\n+/// `AllocId`s point to equal values. So we may end up with different representations for\n+/// two constants whose value is `&42`. Furthermore any kind of struct that has padding will\n+/// have arbitrary values within that padding, even if the values of the struct are the same.\n+/// \n+/// `ValTree` does not have this problem with representation, as it only contains integers or\n+/// lists of values of itself.\n pub enum ValTree<'tcx> {\n+    /// ZSTs, integers, `bool`, `char` are represented as scalars.\n+    /// See the `ScalarInt` documentation for how `ScalarInt` guarantees that equal values\n+    /// of these types have the same representation.\n     Leaf(ScalarInt),\n+    /// The fields of any kind of aggregate. Structs, tuples and arrays are represented by\n+    /// listing their fields' values in order.\n+    /// Enums are represented by storing their discriminant as a field, followed by all\n+    /// the fields of the variant.\n     Branch(&'tcx [ValTree<'tcx>]),\n }\n "}]}