{"sha": "d84c4cd7188f484083091bee436dc07eb90b47e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4NGM0Y2Q3MTg4ZjQ4NDA4MzA5MWJlZTQzNmRjMDdlYjkwYjQ3ZTM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-08T15:26:42Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-08T15:26:42Z"}, "message": "Ignore `ExprKind::DropTemps` for some ref suggestions", "tree": {"sha": "9302a08b4fdb3e80985c032146de8c41322aff49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9302a08b4fdb3e80985c032146de8c41322aff49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d84c4cd7188f484083091bee436dc07eb90b47e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d84c4cd7188f484083091bee436dc07eb90b47e3", "html_url": "https://github.com/rust-lang/rust/commit/d84c4cd7188f484083091bee436dc07eb90b47e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d84c4cd7188f484083091bee436dc07eb90b47e3/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec557aa8180ca08ff749793b3d42383618b96044", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec557aa8180ca08ff749793b3d42383618b96044", "html_url": "https://github.com/rust-lang/rust/commit/ec557aa8180ca08ff749793b3d42383618b96044"}], "stats": {"total": 52, "additions": 30, "deletions": 22}, "files": [{"sha": "ead7a08c397f03281db8ccf7b466f1696bd01ef9", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d84c4cd7188f484083091bee436dc07eb90b47e3/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d84c4cd7188f484083091bee436dc07eb90b47e3/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=d84c4cd7188f484083091bee436dc07eb90b47e3", "patch": "@@ -1548,6 +1548,23 @@ impl Expr {\n             }\n         }\n     }\n+\n+    /// If `Self.kind` is `ExprKind::DropTemps(expr)`, drill down until we get a non-`DropTemps`\n+    /// `Expr`. This is used in suggestions to ignore this `ExprKind` as it is semantically\n+    /// silent, only signaling the ownership system. By doing this, suggestions that check the\n+    /// `ExprKind` of any given `Expr` for presentation don't have to care about `DropTemps`\n+    /// beyond remembering to call this function before doing analysis on it.\n+    pub fn peel_drop_temps(&self) -> &Self {\n+        let mut base_expr = self;\n+        loop {\n+            match &base_expr.kind {\n+                ExprKind::DropTemps(expr) => {\n+                    base_expr = &expr;\n+                }\n+                _ => return base_expr,\n+            }\n+        }\n+    }\n }\n \n impl fmt::Debug for Expr {"}, {"sha": "9f7f8b7680f4b77d00cc67b6afe8b9c9ad03b24e", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d84c4cd7188f484083091bee436dc07eb90b47e3/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d84c4cd7188f484083091bee436dc07eb90b47e3/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=d84c4cd7188f484083091bee436dc07eb90b47e3", "patch": "@@ -355,6 +355,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         };\n         let is_macro = sp.from_expansion() && !is_desugaring;\n \n+        // `ExprKind::DropTemps` is semantically irrelevant for these suggestions.\n+        let expr = expr.peel_drop_temps();\n+\n         match (&expr.kind, &expected.kind, &checked_ty.kind) {\n             (_, &ty::Ref(_, exp, _), &ty::Ref(_, check, _)) => match (&exp.kind, &check.kind) {\n                 (&ty::Str, &ty::Array(arr, _)) |"}, {"sha": "fa2455db2b2a9c0a99b945a3f8997cd387e23fea", "filename": "src/test/ui/if/if-no-match-bindings.stderr", "status": "modified", "additions": 8, "deletions": 20, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d84c4cd7188f484083091bee436dc07eb90b47e3/src%2Ftest%2Fui%2Fif%2Fif-no-match-bindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d84c4cd7188f484083091bee436dc07eb90b47e3/src%2Ftest%2Fui%2Fif%2Fif-no-match-bindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fif%2Fif-no-match-bindings.stderr?ref=d84c4cd7188f484083091bee436dc07eb90b47e3", "patch": "@@ -2,10 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/if-no-match-bindings.rs:18:8\n    |\n LL |     if b_ref() {}\n-   |        ^^^^^^^\n-   |        |\n-   |        expected bool, found &bool\n-   |        help: consider dereferencing the borrow: `*b_ref()`\n+   |        ^^^^^^^ expected bool, found &bool\n    |\n    = note: expected type `bool`\n               found type `&bool`\n@@ -14,10 +11,7 @@ error[E0308]: mismatched types\n   --> $DIR/if-no-match-bindings.rs:19:8\n    |\n LL |     if b_mut_ref() {}\n-   |        ^^^^^^^^^^^\n-   |        |\n-   |        expected bool, found &mut bool\n-   |        help: consider dereferencing the borrow: `*b_mut_ref()`\n+   |        ^^^^^^^^^^^ expected bool, found &mut bool\n    |\n    = note: expected type `bool`\n               found type `&mut bool`\n@@ -29,7 +23,7 @@ LL |     if &true {}\n    |        ^^^^^\n    |        |\n    |        expected bool, found &bool\n-   |        help: consider dereferencing the borrow: `*&true`\n+   |        help: consider removing the borrow: `true`\n    |\n    = note: expected type `bool`\n               found type `&bool`\n@@ -41,7 +35,7 @@ LL |     if &mut true {}\n    |        ^^^^^^^^^\n    |        |\n    |        expected bool, found &mut bool\n-   |        help: consider dereferencing the borrow: `*&mut true`\n+   |        help: consider removing the borrow: `true`\n    |\n    = note: expected type `bool`\n               found type `&mut bool`\n@@ -50,10 +44,7 @@ error[E0308]: mismatched types\n   --> $DIR/if-no-match-bindings.rs:24:11\n    |\n LL |     while b_ref() {}\n-   |           ^^^^^^^\n-   |           |\n-   |           expected bool, found &bool\n-   |           help: consider dereferencing the borrow: `*b_ref()`\n+   |           ^^^^^^^ expected bool, found &bool\n    |\n    = note: expected type `bool`\n               found type `&bool`\n@@ -62,10 +53,7 @@ error[E0308]: mismatched types\n   --> $DIR/if-no-match-bindings.rs:25:11\n    |\n LL |     while b_mut_ref() {}\n-   |           ^^^^^^^^^^^\n-   |           |\n-   |           expected bool, found &mut bool\n-   |           help: consider dereferencing the borrow: `*b_mut_ref()`\n+   |           ^^^^^^^^^^^ expected bool, found &mut bool\n    |\n    = note: expected type `bool`\n               found type `&mut bool`\n@@ -77,7 +65,7 @@ LL |     while &true {}\n    |           ^^^^^\n    |           |\n    |           expected bool, found &bool\n-   |           help: consider dereferencing the borrow: `*&true`\n+   |           help: consider removing the borrow: `true`\n    |\n    = note: expected type `bool`\n               found type `&bool`\n@@ -89,7 +77,7 @@ LL |     while &mut true {}\n    |           ^^^^^^^^^\n    |           |\n    |           expected bool, found &mut bool\n-   |           help: consider dereferencing the borrow: `*&mut true`\n+   |           help: consider removing the borrow: `true`\n    |\n    = note: expected type `bool`\n               found type `&mut bool`"}, {"sha": "ad4686c1915d67de9ef1e40b89cff1bca1e80770", "filename": "src/test/ui/rfc-2497-if-let-chains/disallowed-positions.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d84c4cd7188f484083091bee436dc07eb90b47e3/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d84c4cd7188f484083091bee436dc07eb90b47e3/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr?ref=d84c4cd7188f484083091bee436dc07eb90b47e3", "patch": "@@ -520,7 +520,7 @@ LL |     if &let 0 = 0 {}\n    |        ^^^^^^^^^^\n    |        |\n    |        expected bool, found &bool\n-   |        help: consider dereferencing the borrow: `*&let 0 = 0`\n+   |        help: consider removing the borrow: `let 0 = 0`\n    |\n    = note: expected type `bool`\n               found type `&bool`\n@@ -708,7 +708,7 @@ LL |     while &let 0 = 0 {}\n    |           ^^^^^^^^^^\n    |           |\n    |           expected bool, found &bool\n-   |           help: consider dereferencing the borrow: `*&let 0 = 0`\n+   |           help: consider removing the borrow: `let 0 = 0`\n    |\n    = note: expected type `bool`\n               found type `&bool`"}]}