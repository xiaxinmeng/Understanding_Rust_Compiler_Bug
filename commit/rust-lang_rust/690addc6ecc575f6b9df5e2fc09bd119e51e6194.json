{"sha": "690addc6ecc575f6b9df5e2fc09bd119e51e6194", "node_id": "C_kwDOAAsO6NoAKDY5MGFkZGM2ZWNjNTc1ZjZiOWRmNWUyZmMwOWJkMTE5ZTUxZTYxOTQ", "commit": {"author": {"name": "Yutaro Ohno", "email": "yutaro.ono.418@gmail.com", "date": "2022-12-03T14:24:49Z"}, "committer": {"name": "Yutaro Ohno", "email": "yutaro.ono.418@gmail.com", "date": "2022-12-03T14:24:49Z"}, "message": "parser: fix ICE with invalid variable declaration in macro call\n\nFix ICE on parsing an invalid variable declaration as a statement like:\n\n```\nmacro_rules! m { ($s:stmt) => {} }\nm! { var x }\n```", "tree": {"sha": "6e702c8533816a72e47d81386a0f369398b6927f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e702c8533816a72e47d81386a0f369398b6927f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/690addc6ecc575f6b9df5e2fc09bd119e51e6194", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/690addc6ecc575f6b9df5e2fc09bd119e51e6194", "html_url": "https://github.com/rust-lang/rust/commit/690addc6ecc575f6b9df5e2fc09bd119e51e6194", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/690addc6ecc575f6b9df5e2fc09bd119e51e6194/comments", "author": {"login": "ohno418", "id": 24674436, "node_id": "MDQ6VXNlcjI0Njc0NDM2", "avatar_url": "https://avatars.githubusercontent.com/u/24674436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ohno418", "html_url": "https://github.com/ohno418", "followers_url": "https://api.github.com/users/ohno418/followers", "following_url": "https://api.github.com/users/ohno418/following{/other_user}", "gists_url": "https://api.github.com/users/ohno418/gists{/gist_id}", "starred_url": "https://api.github.com/users/ohno418/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ohno418/subscriptions", "organizations_url": "https://api.github.com/users/ohno418/orgs", "repos_url": "https://api.github.com/users/ohno418/repos", "events_url": "https://api.github.com/users/ohno418/events{/privacy}", "received_events_url": "https://api.github.com/users/ohno418/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ohno418", "id": 24674436, "node_id": "MDQ6VXNlcjI0Njc0NDM2", "avatar_url": "https://avatars.githubusercontent.com/u/24674436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ohno418", "html_url": "https://github.com/ohno418", "followers_url": "https://api.github.com/users/ohno418/followers", "following_url": "https://api.github.com/users/ohno418/following{/other_user}", "gists_url": "https://api.github.com/users/ohno418/gists{/gist_id}", "starred_url": "https://api.github.com/users/ohno418/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ohno418/subscriptions", "organizations_url": "https://api.github.com/users/ohno418/orgs", "repos_url": "https://api.github.com/users/ohno418/repos", "events_url": "https://api.github.com/users/ohno418/events{/privacy}", "received_events_url": "https://api.github.com/users/ohno418/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "703d95e183fbb678249d8f61cabc732e46884e00", "url": "https://api.github.com/repos/rust-lang/rust/commits/703d95e183fbb678249d8f61cabc732e46884e00", "html_url": "https://github.com/rust-lang/rust/commit/703d95e183fbb678249d8f61cabc732e46884e00"}], "stats": {"total": 60, "additions": 56, "deletions": 4}, "files": [{"sha": "b4813250547581de1ff26f16bc87e1b0b0a55f7f", "filename": "compiler/rustc_parse/src/parser/stmt.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/690addc6ecc575f6b9df5e2fc09bd119e51e6194/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/690addc6ecc575f6b9df5e2fc09bd119e51e6194/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs?ref=690addc6ecc575f6b9df5e2fc09bd119e51e6194", "patch": "@@ -72,12 +72,12 @@ impl<'a> Parser<'a> {\n \n         Ok(Some(if self.token.is_keyword(kw::Let) {\n             self.parse_local_mk(lo, attrs, capture_semi, force_collect)?\n-        } else if self.is_kw_followed_by_ident(kw::Mut) {\n+        } else if self.is_kw_followed_by_ident(kw::Mut) && self.may_recover() {\n             self.recover_stmt_local(lo, attrs, InvalidVariableDeclarationSub::MissingLet)?\n-        } else if self.is_kw_followed_by_ident(kw::Auto) {\n+        } else if self.is_kw_followed_by_ident(kw::Auto) && self.may_recover() {\n             self.bump(); // `auto`\n             self.recover_stmt_local(lo, attrs, InvalidVariableDeclarationSub::UseLetNotAuto)?\n-        } else if self.is_kw_followed_by_ident(sym::var) {\n+        } else if self.is_kw_followed_by_ident(sym::var) && self.may_recover() {\n             self.bump(); // `var`\n             self.recover_stmt_local(lo, attrs, InvalidVariableDeclarationSub::UseLetNotVar)?\n         } else if self.check_path() && !self.token.is_qpath_start() && !self.is_path_start_item() {\n@@ -244,7 +244,7 @@ impl<'a> Parser<'a> {\n     }\n \n     fn recover_local_after_let(&mut self, lo: Span, attrs: AttrWrapper) -> PResult<'a, Stmt> {\n-        self.collect_tokens_trailing_token(attrs, ForceCollect::No, |this, attrs| {\n+        self.collect_tokens_trailing_token(attrs, ForceCollect::Yes, |this, attrs| {\n             let local = this.parse_local(attrs)?;\n             // FIXME - maybe capture semicolon in recovery?\n             Ok(("}, {"sha": "fa05baed7fc8e40ee5eadcef11b2a1055cea9082", "filename": "src/test/ui/macros/issue-103529.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/690addc6ecc575f6b9df5e2fc09bd119e51e6194/src%2Ftest%2Fui%2Fmacros%2Fissue-103529.rs", "raw_url": "https://github.com/rust-lang/rust/raw/690addc6ecc575f6b9df5e2fc09bd119e51e6194/src%2Ftest%2Fui%2Fmacros%2Fissue-103529.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-103529.rs?ref=690addc6ecc575f6b9df5e2fc09bd119e51e6194", "patch": "@@ -0,0 +1,13 @@\n+macro_rules! m {\n+    ($s:stmt) => {}\n+}\n+\n+m! { mut x }\n+//~^ ERROR expected expression, found keyword `mut`\n+//~| ERROR expected a statement\n+m! { auto x }\n+//~^ ERROR invalid variable declaration\n+m! { var x }\n+//~^ ERROR invalid variable declaration\n+\n+fn main() {}"}, {"sha": "61e322afc770986faaed5e35b5423ef67913ac25", "filename": "src/test/ui/macros/issue-103529.stderr", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/690addc6ecc575f6b9df5e2fc09bd119e51e6194/src%2Ftest%2Fui%2Fmacros%2Fissue-103529.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/690addc6ecc575f6b9df5e2fc09bd119e51e6194/src%2Ftest%2Fui%2Fmacros%2Fissue-103529.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-103529.stderr?ref=690addc6ecc575f6b9df5e2fc09bd119e51e6194", "patch": "@@ -0,0 +1,39 @@\n+error: expected expression, found keyword `mut`\n+  --> $DIR/issue-103529.rs:5:6\n+   |\n+LL | m! { mut x }\n+   |      ^^^ expected expression\n+\n+error: expected a statement\n+  --> $DIR/issue-103529.rs:5:10\n+   |\n+LL |     ($s:stmt) => {}\n+   |      ------- while parsing argument for this `stmt` macro fragment\n+...\n+LL | m! { mut x }\n+   |          ^\n+\n+error: invalid variable declaration\n+  --> $DIR/issue-103529.rs:8:6\n+   |\n+LL | m! { auto x }\n+   |      ^^^^\n+   |\n+help: write `let` instead of `auto` to introduce a new variable\n+   |\n+LL | m! { let x }\n+   |      ~~~\n+\n+error: invalid variable declaration\n+  --> $DIR/issue-103529.rs:10:6\n+   |\n+LL | m! { var x }\n+   |      ^^^\n+   |\n+help: write `let` instead of `var` to introduce a new variable\n+   |\n+LL | m! { let x }\n+   |      ~~~\n+\n+error: aborting due to 4 previous errors\n+"}]}