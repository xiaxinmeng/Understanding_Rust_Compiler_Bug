{"sha": "58f3f7b0810ff2349cec21395ee066dc2df004a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4ZjNmN2IwODEwZmYyMzQ5Y2VjMjEzOTVlZTA2NmRjMmRmMDA0YTc=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-07-14T19:06:50Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-07-14T19:06:50Z"}, "message": "Clarify how the quote macro is loaded", "tree": {"sha": "4f2478842fa9bd61301cc92cc3deb1350110903a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f2478842fa9bd61301cc92cc3deb1350110903a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58f3f7b0810ff2349cec21395ee066dc2df004a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58f3f7b0810ff2349cec21395ee066dc2df004a7", "html_url": "https://github.com/rust-lang/rust/commit/58f3f7b0810ff2349cec21395ee066dc2df004a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58f3f7b0810ff2349cec21395ee066dc2df004a7/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0db03e635a5e38ebc7635637b870b8fbcc8a7e46", "url": "https://api.github.com/repos/rust-lang/rust/commits/0db03e635a5e38ebc7635637b870b8fbcc8a7e46", "html_url": "https://github.com/rust-lang/rust/commit/0db03e635a5e38ebc7635637b870b8fbcc8a7e46"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "ecc66e869ae7a2b72e1db558522ce3cfab08b875", "filename": "src/libproc_macro/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58f3f7b0810ff2349cec21395ee066dc2df004a7/src%2Flibproc_macro%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58f3f7b0810ff2349cec21395ee066dc2df004a7/src%2Flibproc_macro%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro%2Flib.rs?ref=58f3f7b0810ff2349cec21395ee066dc2df004a7", "patch": "@@ -236,6 +236,8 @@ pub mod token_stream {\n ///\n /// Unquoting is done with `$`, and works by taking the single next ident as the unquoted term.\n /// To quote `$` itself, use `$$`.\n+///\n+/// This is a dummy macro, the actual implementation is in quote::Quoter\n #[unstable(feature = \"proc_macro\", issue = \"38356\")]\n #[macro_export]\n macro_rules! quote { () => {} }"}, {"sha": "73a66640c59d8ba77fdd3328dca2f341ecab09ba", "filename": "src/libproc_macro/quote.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/58f3f7b0810ff2349cec21395ee066dc2df004a7/src%2Flibproc_macro%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58f3f7b0810ff2349cec21395ee066dc2df004a7/src%2Flibproc_macro%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro%2Fquote.rs?ref=58f3f7b0810ff2349cec21395ee066dc2df004a7", "patch": "@@ -21,6 +21,9 @@ use syntax::parse::token;\n use syntax::symbol::Symbol;\n use syntax::tokenstream;\n \n+/// This is the actual quote!() proc macro\n+///\n+/// It is manually loaded in CStore::load_macro_untracked\n pub struct Quoter;\n \n pub fn unquote<T: Into<TokenStream> + Clone>(tokens: &T) -> TokenStream {"}]}