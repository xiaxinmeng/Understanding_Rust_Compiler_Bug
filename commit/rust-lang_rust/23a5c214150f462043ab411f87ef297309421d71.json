{"sha": "23a5c214150f462043ab411f87ef297309421d71", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzYTVjMjE0MTUwZjQ2MjA0M2FiNDExZjg3ZWYyOTczMDk0MjFkNzE=", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2020-10-19T14:21:41Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2020-10-18T14:21:41Z"}, "message": "Fix a typo in a comment.", "tree": {"sha": "10e4cac6c27ea06cafd5acae917b37d30ca8cee9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10e4cac6c27ea06cafd5acae917b37d30ca8cee9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23a5c214150f462043ab411f87ef297309421d71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23a5c214150f462043ab411f87ef297309421d71", "html_url": "https://github.com/rust-lang/rust/commit/23a5c214150f462043ab411f87ef297309421d71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23a5c214150f462043ab411f87ef297309421d71/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91a9f83dd1d73cfd451f81306361df3fafad84a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/91a9f83dd1d73cfd451f81306361df3fafad84a5", "html_url": "https://github.com/rust-lang/rust/commit/91a9f83dd1d73cfd451f81306361df3fafad84a5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "69f6b88a3bc5603d1b5795927b4d81aa8e77972a", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23a5c214150f462043ab411f87ef297309421d71/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23a5c214150f462043ab411f87ef297309421d71/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=23a5c214150f462043ab411f87ef297309421d71", "patch": "@@ -1068,7 +1068,7 @@ pub fn link(src: &Path, dst: &Path) -> io::Result<()> {\n     let src = cstr(src)?;\n     let dst = cstr(dst)?;\n     // Use `linkat` with `AT_FDCWD` instead of `link` as `link` leaves it\n-    // implmentation-defined whether it follows symlinks. Pass 0 as the\n+    // implementation-defined whether it follows symlinks. Pass 0 as the\n     // `linkat` flags argument so that we don't follow symlinks.\n     cvt(unsafe { libc::linkat(libc::AT_FDCWD, src.as_ptr(), libc::AT_FDCWD, dst.as_ptr(), 0) })?;\n     Ok(())"}]}