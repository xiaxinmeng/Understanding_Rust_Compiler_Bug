{"sha": "997dc5899a0549ca6a6fe007ae1150ae4fccd728", "node_id": "C_kwDOAAsO6NoAKDk5N2RjNTg5OWEwNTQ5Y2E2YTZmZTAwN2FlMTE1MGFlNGZjY2Q3Mjg", "commit": {"author": {"name": "Benjamin Lamowski", "email": "benjamin.lamowski@kernkonzept.com", "date": "2021-10-18T11:59:36Z"}, "committer": {"name": "Benjamin Lamowski", "email": "benjamin.lamowski@kernkonzept.com", "date": "2022-03-09T10:53:27Z"}, "message": "adapt L4Re network interface mock to #87329\n\nCopy the relevant trait implementations from the Unix default.", "tree": {"sha": "f2671885f64708d96c6577a8c752d3f5c7c8b931", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2671885f64708d96c6577a8c752d3f5c7c8b931"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/997dc5899a0549ca6a6fe007ae1150ae4fccd728", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/997dc5899a0549ca6a6fe007ae1150ae4fccd728", "html_url": "https://github.com/rust-lang/rust/commit/997dc5899a0549ca6a6fe007ae1150ae4fccd728", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/997dc5899a0549ca6a6fe007ae1150ae4fccd728/comments", "author": {"login": "atopia", "id": 1710873, "node_id": "MDQ6VXNlcjE3MTA4NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1710873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atopia", "html_url": "https://github.com/atopia", "followers_url": "https://api.github.com/users/atopia/followers", "following_url": "https://api.github.com/users/atopia/following{/other_user}", "gists_url": "https://api.github.com/users/atopia/gists{/gist_id}", "starred_url": "https://api.github.com/users/atopia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atopia/subscriptions", "organizations_url": "https://api.github.com/users/atopia/orgs", "repos_url": "https://api.github.com/users/atopia/repos", "events_url": "https://api.github.com/users/atopia/events{/privacy}", "received_events_url": "https://api.github.com/users/atopia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "atopia", "id": 1710873, "node_id": "MDQ6VXNlcjE3MTA4NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1710873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atopia", "html_url": "https://github.com/atopia", "followers_url": "https://api.github.com/users/atopia/followers", "following_url": "https://api.github.com/users/atopia/following{/other_user}", "gists_url": "https://api.github.com/users/atopia/gists{/gist_id}", "starred_url": "https://api.github.com/users/atopia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atopia/subscriptions", "organizations_url": "https://api.github.com/users/atopia/orgs", "repos_url": "https://api.github.com/users/atopia/repos", "events_url": "https://api.github.com/users/atopia/events{/privacy}", "received_events_url": "https://api.github.com/users/atopia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0dc41f5ff00474d0c692a18330bd32f44d15d67", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0dc41f5ff00474d0c692a18330bd32f44d15d67", "html_url": "https://github.com/rust-lang/rust/commit/c0dc41f5ff00474d0c692a18330bd32f44d15d67"}], "stats": {"total": 43, "additions": 34, "deletions": 9}, "files": [{"sha": "d45c51030f67cfc9ed7be26df5e7cdb289c8a3ca", "filename": "library/std/src/sys/unix/l4re.rs", "status": "modified", "additions": 34, "deletions": 9, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/997dc5899a0549ca6a6fe007ae1150ae4fccd728/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fl4re.rs", "raw_url": "https://github.com/rust-lang/rust/raw/997dc5899a0549ca6a6fe007ae1150ae4fccd728/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fl4re.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fl4re.rs?ref=997dc5899a0549ca6a6fe007ae1150ae4fccd728", "patch": "@@ -13,6 +13,7 @@ pub mod net {\n     use crate::fmt;\n     use crate::io::{self, IoSlice, IoSliceMut};\n     use crate::net::{Ipv4Addr, Ipv6Addr, Shutdown, SocketAddr};\n+    use crate::os::unix::io::{AsFd, AsRawFd, BorrowedFd, FromRawFd, IntoRawFd, RawFd};\n     use crate::sys::fd::FileDesc;\n     use crate::sys_common::{AsInner, FromInner, IntoInner};\n     use crate::time::Duration;\n@@ -123,21 +124,45 @@ pub mod net {\n         }\n     }\n \n-    impl AsInner<libc::c_int> for Socket {\n-        fn as_inner(&self) -> &libc::c_int {\n-            self.0.as_inner()\n+    impl AsInner<FileDesc> for Socket {\n+        fn as_inner(&self) -> &FileDesc {\n+            &self.0\n         }\n     }\n \n-    impl FromInner<libc::c_int> for Socket {\n-        fn from_inner(fd: libc::c_int) -> Socket {\n-            Socket(FileDesc::new(fd))\n+    impl FromInner<FileDesc> for Socket {\n+        fn from_inner(file_desc: FileDesc) -> Socket {\n+            Socket(file_desc)\n         }\n     }\n \n-    impl IntoInner<libc::c_int> for Socket {\n-        fn into_inner(self) -> libc::c_int {\n-            self.0.into_raw()\n+    impl IntoInner<FileDesc> for Socket {\n+        fn into_inner(self) -> FileDesc {\n+            self.0\n+        }\n+    }\n+\n+    impl AsFd for Socket {\n+        fn as_fd(&self) -> BorrowedFd<'_> {\n+            self.0.as_fd()\n+        }\n+    }\n+\n+    impl AsRawFd for Socket {\n+        fn as_raw_fd(&self) -> RawFd {\n+            self.0.as_raw_fd()\n+        }\n+    }\n+\n+    impl IntoRawFd for Socket {\n+        fn into_raw_fd(self) -> RawFd {\n+            self.0.into_raw_fd()\n+        }\n+    }\n+\n+    impl FromRawFd for Socket {\n+        unsafe fn from_raw_fd(raw_fd: RawFd) -> Self {\n+            Self(FromRawFd::from_raw_fd(raw_fd))\n         }\n     }\n "}]}