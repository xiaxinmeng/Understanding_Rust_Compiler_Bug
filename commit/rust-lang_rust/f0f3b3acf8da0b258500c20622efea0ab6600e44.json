{"sha": "f0f3b3acf8da0b258500c20622efea0ab6600e44", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwZjNiM2FjZjhkYTBiMjU4NTAwYzIwNjIyZWZlYTBhYjY2MDBlNDQ=", "commit": {"author": {"name": "Aman Arora", "email": "me@aman-arora.com", "date": "2021-07-06T09:38:15Z"}, "committer": {"name": "Aman Arora", "email": "me@aman-arora.com", "date": "2021-07-06T18:38:10Z"}, "message": "Make type_implements_trait not a query", "tree": {"sha": "00b5e005fc20ebf4fa20ef6fd5994dcf2a74f08f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00b5e005fc20ebf4fa20ef6fd5994dcf2a74f08f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0f3b3acf8da0b258500c20622efea0ab6600e44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0f3b3acf8da0b258500c20622efea0ab6600e44", "html_url": "https://github.com/rust-lang/rust/commit/f0f3b3acf8da0b258500c20622efea0ab6600e44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0f3b3acf8da0b258500c20622efea0ab6600e44/comments", "author": {"login": "arora-aman", "id": 4193035, "node_id": "MDQ6VXNlcjQxOTMwMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4193035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arora-aman", "html_url": "https://github.com/arora-aman", "followers_url": "https://api.github.com/users/arora-aman/followers", "following_url": "https://api.github.com/users/arora-aman/following{/other_user}", "gists_url": "https://api.github.com/users/arora-aman/gists{/gist_id}", "starred_url": "https://api.github.com/users/arora-aman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arora-aman/subscriptions", "organizations_url": "https://api.github.com/users/arora-aman/orgs", "repos_url": "https://api.github.com/users/arora-aman/repos", "events_url": "https://api.github.com/users/arora-aman/events{/privacy}", "received_events_url": "https://api.github.com/users/arora-aman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arora-aman", "id": 4193035, "node_id": "MDQ6VXNlcjQxOTMwMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4193035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arora-aman", "html_url": "https://github.com/arora-aman", "followers_url": "https://api.github.com/users/arora-aman/followers", "following_url": "https://api.github.com/users/arora-aman/following{/other_user}", "gists_url": "https://api.github.com/users/arora-aman/gists{/gist_id}", "starred_url": "https://api.github.com/users/arora-aman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arora-aman/subscriptions", "organizations_url": "https://api.github.com/users/arora-aman/orgs", "repos_url": "https://api.github.com/users/arora-aman/repos", "events_url": "https://api.github.com/users/arora-aman/events{/privacy}", "received_events_url": "https://api.github.com/users/arora-aman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26e57f05ccde7f0df34b70cd1d061d0350f362f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/26e57f05ccde7f0df34b70cd1d061d0350f362f2", "html_url": "https://github.com/rust-lang/rust/commit/26e57f05ccde7f0df34b70cd1d061d0350f362f2"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "8857e77d8983d34d0e9505c8a00097731275c5d5", "filename": "clippy_utils/src/ty.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f0f3b3acf8da0b258500c20622efea0ab6600e44/clippy_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0f3b3acf8da0b258500c20622efea0ab6600e44/clippy_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fty.rs?ref=f0f3b3acf8da0b258500c20622efea0ab6600e44", "patch": "@@ -15,6 +15,7 @@ use rustc_span::sym;\n use rustc_span::symbol::{Ident, Symbol};\n use rustc_span::DUMMY_SP;\n use rustc_trait_selection::traits::query::normalize::AtExt;\n+use rustc_trait_selection::infer::InferCtxtExt;\n \n use crate::{match_def_path, must_use_attr};\n \n@@ -112,25 +113,26 @@ pub fn has_iter_method(cx: &LateContext<'_>, probably_ref_ty: Ty<'_>) -> Option<\n }\n \n /// Checks whether a type implements a trait.\n+/// The function returns false in case the type contains an inference variable.\n /// See also `get_trait_def_id`.\n pub fn implements_trait<'tcx>(\n     cx: &LateContext<'tcx>,\n     ty: Ty<'tcx>,\n     trait_id: DefId,\n     ty_params: &[GenericArg<'tcx>],\n ) -> bool {\n-    // Do not check on infer_types to avoid panic in evaluate_obligation.\n-    if ty.has_infer_types() {\n-        return false;\n-    }\n+    // Clippy shouldn't have infer types\n+    assert!(!ty.needs_infer());\n+\n     let ty = cx.tcx.erase_regions(ty);\n     if ty.has_escaping_bound_vars() {\n         return false;\n     }\n     let ty_params = cx.tcx.mk_substs(ty_params.iter());\n-    cx.tcx\n-        .type_implements_trait((trait_id, ty, ty_params, cx.param_env))\n+    cx.tcx.infer_ctxt().enter(|infcx|\n+        infcx.type_implements_trait(trait_id, ty, ty_params, cx.param_env)\n         .must_apply_modulo_regions()\n+    )\n }\n \n /// Checks whether this type implements `Drop`."}]}