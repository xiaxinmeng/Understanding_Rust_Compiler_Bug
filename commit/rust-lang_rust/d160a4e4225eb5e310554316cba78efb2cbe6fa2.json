{"sha": "d160a4e4225eb5e310554316cba78efb2cbe6fa2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxNjBhNGU0MjI1ZWI1ZTMxMDU1NDMxNmNiYTc4ZWZiMmNiZTZmYTI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-08T12:39:58Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-16T08:59:53Z"}, "message": "syntax::parse: don't depend on syntax::ext", "tree": {"sha": "393f8bc408372eea7350331ed4bd60c7c3411f26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/393f8bc408372eea7350331ed4bd60c7c3411f26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d160a4e4225eb5e310554316cba78efb2cbe6fa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d160a4e4225eb5e310554316cba78efb2cbe6fa2", "html_url": "https://github.com/rust-lang/rust/commit/d160a4e4225eb5e310554316cba78efb2cbe6fa2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d160a4e4225eb5e310554316cba78efb2cbe6fa2/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d", "html_url": "https://github.com/rust-lang/rust/commit/7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "bf9526dece2307839053a186df246c177111bbf0", "filename": "src/libsyntax/parse/parser/expr.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d160a4e4225eb5e310554316cba78efb2cbe6fa2/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d160a4e4225eb5e310554316cba78efb2cbe6fa2/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs?ref=d160a4e4225eb5e310554316cba78efb2cbe6fa2", "patch": "@@ -1946,4 +1946,8 @@ impl<'a> Parser<'a> {\n     crate fn mk_expr(&self, span: Span, kind: ExprKind, attrs: ThinVec<Attribute>) -> P<Expr> {\n         P(Expr { kind, span, attrs, id: DUMMY_NODE_ID })\n     }\n+\n+    pub(super) fn mk_expr_err(&self, span: Span) -> P<Expr> {\n+        self.mk_expr(span, ExprKind::Err, ThinVec::new())\n+    }\n }"}, {"sha": "6a1cbd2ebb77100c053cff3a7a6a7d4579358df9", "filename": "src/libsyntax/parse/parser/item.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d160a4e4225eb5e310554316cba78efb2cbe6fa2/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d160a4e4225eb5e310554316cba78efb2cbe6fa2/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs?ref=d160a4e4225eb5e310554316cba78efb2cbe6fa2", "patch": "@@ -9,7 +9,6 @@ use crate::ast::{PathSegment, IsAuto, Constness, IsAsync, Unsafety, Defaultness}\n use crate::ast::{Visibility, VisibilityKind, Mutability, FnHeader, ForeignItem, ForeignItemKind};\n use crate::ast::{Ty, TyKind, Generics, GenericBounds, TraitRef, EnumDef, VariantData, StructField};\n use crate::ast::{Mac, MacDelimiter, Block, BindingMode, FnDecl, MethodSig, SelfKind, Param};\n-use crate::ext::base::DummyResult;\n use crate::parse::token;\n use crate::parse::parser::maybe_append;\n use crate::tokenstream::{TokenTree, TokenStream};\n@@ -606,7 +605,7 @@ impl<'a> Parser<'a> {\n         let ty_second = if self.token == token::DotDot {\n             // We need to report this error after `cfg` expansion for compatibility reasons\n             self.bump(); // `..`, do not add it to expected tokens\n-            Some(DummyResult::raw_ty(self.prev_span, true))\n+            Some(self.mk_ty(self.prev_span, TyKind::Err))\n         } else if has_for || self.token.can_begin_type() {\n             Some(self.parse_ty()?)\n         } else {"}, {"sha": "f656bc11e1ca5e1b6cf4c2b6ae059095f037c2ce", "filename": "src/libsyntax/parse/parser/stmt.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d160a4e4225eb5e310554316cba78efb2cbe6fa2/src%2Flibsyntax%2Fparse%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d160a4e4225eb5e310554316cba78efb2cbe6fa2/src%2Flibsyntax%2Fparse%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fstmt.rs?ref=d160a4e4225eb5e310554316cba78efb2cbe6fa2", "patch": "@@ -8,7 +8,6 @@ use crate::ptr::P;\n use crate::{maybe_whole, ThinVec};\n use crate::ast::{self, DUMMY_NODE_ID, Stmt, StmtKind, Local, Block, BlockCheckMode, Expr, ExprKind};\n use crate::ast::{Attribute, AttrStyle, VisibilityKind, MacStmtStyle, Mac, MacDelimiter};\n-use crate::ext::base::DummyResult;\n use crate::parse::{classify, DirectoryOwnership};\n use crate::parse::token;\n use crate::source_map::{respan, Span};\n@@ -400,7 +399,7 @@ impl<'a> Parser<'a> {\n                     self.recover_stmt_(SemiColonMode::Ignore, BlockMode::Ignore);\n                     Some(Stmt {\n                         id: DUMMY_NODE_ID,\n-                        kind: StmtKind::Expr(DummyResult::raw_expr(self.token.span, true)),\n+                        kind: StmtKind::Expr(self.mk_expr_err(self.token.span)),\n                         span: self.token.span,\n                     })\n                 }\n@@ -443,7 +442,7 @@ impl<'a> Parser<'a> {\n                         self.recover_stmt();\n                         // Don't complain about type errors in body tail after parse error (#57383).\n                         let sp = expr.span.to(self.prev_span);\n-                        stmt.kind = StmtKind::Expr(DummyResult::raw_expr(sp, true));\n+                        stmt.kind = StmtKind::Expr(self.mk_expr_err(sp));\n                     }\n                 }\n             }"}, {"sha": "ae9f4d06c055cc0d439265d4069433eba2cd56a3", "filename": "src/libsyntax/parse/parser/ty.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d160a4e4225eb5e310554316cba78efb2cbe6fa2/src%2Flibsyntax%2Fparse%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d160a4e4225eb5e310554316cba78efb2cbe6fa2/src%2Flibsyntax%2Fparse%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fty.rs?ref=d160a4e4225eb5e310554316cba78efb2cbe6fa2", "patch": "@@ -210,7 +210,7 @@ impl<'a> Parser<'a> {\n         };\n \n         let span = lo.to(self.prev_span);\n-        let ty = P(Ty { kind, span, id: ast::DUMMY_NODE_ID });\n+        let ty = self.mk_ty(span, kind);\n \n         // Try to recover from use of `+` with incorrect priority.\n         self.maybe_report_ambiguous_plus(allow_plus, impl_dyn_multi, &ty);\n@@ -448,4 +448,8 @@ impl<'a> Parser<'a> {\n             self.span_bug(self.token.span, \"not a lifetime\")\n         }\n     }\n+\n+    pub(super) fn mk_ty(&self, span: Span, kind: TyKind) -> P<Ty> {\n+        P(Ty { kind, span, id: ast::DUMMY_NODE_ID })\n+    }\n }"}]}