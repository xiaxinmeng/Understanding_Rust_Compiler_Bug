{"sha": "ccc3257c91f3649126da00644c205759a941623b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjYzMyNTdjOTFmMzY0OTEyNmRhMDA2NDRjMjA1NzU5YTk0MTYyM2I=", "commit": {"author": {"name": "chansuke", "email": "chansuke@georepublic.de", "date": "2019-08-01T13:20:08Z"}, "committer": {"name": "chansuke", "email": "chansuke@georepublic.de", "date": "2019-08-01T13:20:08Z"}, "message": "Update `stderr` file", "tree": {"sha": "0ab10696e04a408d8bb71d52a5cafe7f21b609be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ab10696e04a408d8bb71d52a5cafe7f21b609be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccc3257c91f3649126da00644c205759a941623b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccc3257c91f3649126da00644c205759a941623b", "html_url": "https://github.com/rust-lang/rust/commit/ccc3257c91f3649126da00644c205759a941623b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccc3257c91f3649126da00644c205759a941623b/comments", "author": null, "committer": null, "parents": [{"sha": "2d467dca62917b9b29b8739fb1a0509262aeca63", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d467dca62917b9b29b8739fb1a0509262aeca63", "html_url": "https://github.com/rust-lang/rust/commit/2d467dca62917b9b29b8739fb1a0509262aeca63"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "6c71f1beeac67c27a89916538cbdfcc2af70d896", "filename": "tests/ui/len_zero.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ccc3257c91f3649126da00644c205759a941623b/tests%2Fui%2Flen_zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ccc3257c91f3649126da00644c205759a941623b/tests%2Fui%2Flen_zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_zero.stderr?ref=ccc3257c91f3649126da00644c205759a941623b", "patch": "@@ -22,13 +22,13 @@ error: length comparison to zero\n   --> $DIR/len_zero.rs:83:8\n    |\n LL |     if has_is_empty.len() != 0 {\n-   |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n   --> $DIR/len_zero.rs:86:8\n    |\n LL |     if has_is_empty.len() > 0 {\n-   |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n+   |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n \n error: length comparison to one\n   --> $DIR/len_zero.rs:89:8\n@@ -40,7 +40,7 @@ error: length comparison to one\n   --> $DIR/len_zero.rs:92:8\n    |\n LL |     if has_is_empty.len() >= 1 {\n-   |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n   --> $DIR/len_zero.rs:103:8\n@@ -52,19 +52,19 @@ error: length comparison to zero\n   --> $DIR/len_zero.rs:106:8\n    |\n LL |     if 0 != has_is_empty.len() {\n-   |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n   --> $DIR/len_zero.rs:109:8\n    |\n LL |     if 0 < has_is_empty.len() {\n-   |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n+   |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n \n error: length comparison to one\n   --> $DIR/len_zero.rs:112:8\n    |\n LL |     if 1 <= has_is_empty.len() {\n-   |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n \n error: length comparison to one\n   --> $DIR/len_zero.rs:115:8\n@@ -82,7 +82,7 @@ error: length comparison to zero\n   --> $DIR/len_zero.rs:142:8\n    |\n LL |     if b.len() != 0 {}\n-   |        ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!b.is_empty()`\n+   |        ^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!b.is_empty()`\n \n error: aborting due to 14 previous errors\n "}]}