{"sha": "caaec388b5dea182daacf99826ad5aad576d8cc9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhYWVjMzg4YjVkZWExODJkYWFjZjk5ODI2YWQ1YWFkNTc2ZDhjYzk=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-12-04T19:09:14Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-12-04T19:11:32Z"}, "message": "Update for changes in rustc.", "tree": {"sha": "e88f8ec8e5754ec74daf85549c82318940f33293", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e88f8ec8e5754ec74daf85549c82318940f33293"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/caaec388b5dea182daacf99826ad5aad576d8cc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/caaec388b5dea182daacf99826ad5aad576d8cc9", "html_url": "https://github.com/rust-lang/rust/commit/caaec388b5dea182daacf99826ad5aad576d8cc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/caaec388b5dea182daacf99826ad5aad576d8cc9/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "064c3521c3375212e32ad086029c00657777a073", "url": "https://api.github.com/repos/rust-lang/rust/commits/064c3521c3375212e32ad086029c00657777a073", "html_url": "https://github.com/rust-lang/rust/commit/064c3521c3375212e32ad086029c00657777a073"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "81a606513a8aa396635bac05a9494eaa55da5abd", "filename": "src/interpreter.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/caaec388b5dea182daacf99826ad5aad576d8cc9/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/caaec388b5dea182daacf99826ad5aad576d8cc9/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=caaec388b5dea182daacf99826ad5aad576d8cc9", "patch": "@@ -1,6 +1,6 @@\n use rustc::middle::{const_eval, def_id, ty};\n+use rustc::mir::repr::{self as mir, Mir};\n use rustc_mir::mir_map::MirMap;\n-use rustc_mir::repr::{self as mir, Mir};\n use syntax::ast::Attribute;\n use syntax::attr::AttrMetaMethods;\n \n@@ -335,7 +335,7 @@ impl<'a, 'tcx> Interpreter<'a, 'tcx> {\n                     mir::Literal::Value { ref value } => self.eval_constant(value),\n \n                     mir::Literal::Item { def_id, substs: _ } => {\n-                        // FIXME(tsion): Only items of function type shoud be wrapped into Func\n+                        // FIXME(tsion): Only items of function type should be wrapped into Func\n                         // values. One test currently fails because a unit-like enum variant gets\n                         // wrapped into Func here instead of a Value::Adt.\n                         Value::Func(def_id)\n@@ -356,6 +356,8 @@ impl<'a, 'tcx> Interpreter<'a, 'tcx> {\n             const_eval::ConstVal::Struct(_node_id)  => unimplemented!(),\n             const_eval::ConstVal::Tuple(_node_id)   => unimplemented!(),\n             const_eval::ConstVal::Function(_def_id) => unimplemented!(),\n+            const_eval::ConstVal::Array(_, _)       => unimplemented!(),\n+            const_eval::ConstVal::Repeat(_, _)      => unimplemented!(),\n         }\n     }\n "}]}