{"sha": "2a025c1a765a593030fc6e80a45f4f1053f15aae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhMDI1YzFhNzY1YTU5MzAzMGZjNmU4MGE0NWY0ZjEwNTNmMTVhYWU=", "commit": {"author": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-04-28T20:32:54Z"}, "committer": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-06-02T14:23:10Z"}, "message": "Remove fallback for containing scopes\n\nThis wasn't necessary for msvc and caused issues where different types\nwith the same name such as different instantiations of `Option<T>` would\nhave colliding debuginfo. This confused the debugger which would pick\none of the type definitions and use for all types with that name even\nthough they had different layout.", "tree": {"sha": "e35063fe8c43ef19c549f269043d64553c9da8a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e35063fe8c43ef19c549f269043d64553c9da8a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a025c1a765a593030fc6e80a45f4f1053f15aae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a025c1a765a593030fc6e80a45f4f1053f15aae", "html_url": "https://github.com/rust-lang/rust/commit/2a025c1a765a593030fc6e80a45f4f1053f15aae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a025c1a765a593030fc6e80a45f4f1053f15aae/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b644f06326577e0926ddf9896fd702befc7bd43e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b644f06326577e0926ddf9896fd702befc7bd43e", "html_url": "https://github.com/rust-lang/rust/commit/b644f06326577e0926ddf9896fd702befc7bd43e"}], "stats": {"total": 11, "additions": 2, "deletions": 9}, "files": [{"sha": "af0d95a354b242b877f4f78a40a0b524d673d7ea", "filename": "compiler/rustc_codegen_llvm/src/debuginfo/metadata.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2a025c1a765a593030fc6e80a45f4f1053f15aae/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a025c1a765a593030fc6e80a45f4f1053f15aae/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs?ref=2a025c1a765a593030fc6e80a45f4f1053f15aae", "patch": "@@ -1457,7 +1457,6 @@ struct EnumMemberDescriptionFactory<'ll, 'tcx> {\n     enum_type: Ty<'tcx>,\n     layout: TyAndLayout<'tcx>,\n     tag_type_metadata: Option<&'ll DIType>,\n-    containing_scope: &'ll DIScope,\n     common_members: Vec<Option<&'ll DIType>>,\n     span: Span,\n }\n@@ -1488,11 +1487,7 @@ impl EnumMemberDescriptionFactory<'ll, 'tcx> {\n \n         // This will always find the metadata in the type map.\n         let fallback = use_enum_fallback(cx);\n-        let self_metadata = if fallback {\n-            self.containing_scope\n-        } else {\n-            type_metadata(cx, self.enum_type, self.span)\n-        };\n+        let self_metadata = type_metadata(cx, self.enum_type, self.span);\n \n         match self.layout.variants {\n             Variants::Single { index } => {\n@@ -1607,7 +1602,7 @@ impl EnumMemberDescriptionFactory<'ll, 'tcx> {\n                         variant,\n                         variant_info_for(dataful_variant),\n                         Some(NicheTag),\n-                        self.containing_scope,\n+                        self_metadata,\n                         self.span,\n                     );\n \n@@ -2085,7 +2080,6 @@ fn prepare_enum_metadata(\n                 enum_type,\n                 layout,\n                 tag_type_metadata: discriminant_type_metadata,\n-                containing_scope,\n                 common_members: vec![],\n                 span,\n             }),\n@@ -2238,7 +2232,6 @@ fn prepare_enum_metadata(\n             enum_type,\n             layout,\n             tag_type_metadata: None,\n-            containing_scope,\n             common_members: outer_fields,\n             span,\n         }),"}]}