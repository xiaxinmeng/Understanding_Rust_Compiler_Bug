{"sha": "751f0fba6fe9df4003cd18e95c8438e2cf742f9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1MWYwZmJhNmZlOWRmNDAwM2NkMThlOTVjODQzOGUyY2Y3NDJmOWE=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-06-24T15:18:10Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-06-27T17:28:37Z"}, "message": "debuginfo: Added test case for region pointers pointing to stack values with basic type.", "tree": {"sha": "98a31288db1214e5f85aacb51ba75bc5beed48c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98a31288db1214e5f85aacb51ba75bc5beed48c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/751f0fba6fe9df4003cd18e95c8438e2cf742f9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/751f0fba6fe9df4003cd18e95c8438e2cf742f9a", "html_url": "https://github.com/rust-lang/rust/commit/751f0fba6fe9df4003cd18e95c8438e2cf742f9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/751f0fba6fe9df4003cd18e95c8438e2cf742f9a/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6af78610e745f68b8eb3e107bdb1e4b2288c617c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6af78610e745f68b8eb3e107bdb1e4b2288c617c", "html_url": "https://github.com/rust-lang/rust/commit/6af78610e745f68b8eb3e107bdb1e4b2288c617c"}], "stats": {"total": 116, "additions": 116, "deletions": 0}, "files": [{"sha": "dfd0fbf865557746eece33093ad86e1d371e424b", "filename": "src/test/debug-info/reference-to-basic.rs", "status": "added", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/rust-lang/rust/blob/751f0fba6fe9df4003cd18e95c8438e2cf742f9a/src%2Ftest%2Fdebug-info%2Freference-to-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/751f0fba6fe9df4003cd18e95c8438e2cf742f9a/src%2Ftest%2Fdebug-info%2Freference-to-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Freference-to-basic.rs?ref=751f0fba6fe9df4003cd18e95c8438e2cf742f9a", "patch": "@@ -0,0 +1,116 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-win32 Broken because of LLVM bug: http://llvm.org/bugs/show_bug.cgi?id=16249\n+\n+// Caveats - gdb prints any 8-bit value (meaning rust i8 and u8 values)\n+// as its numerical value along with its associated ASCII char, there\n+// doesn't seem to be any way around this. Also, gdb doesn't know\n+// about UTF-32 character encoding and will print a rust char as only\n+// its numerical value.\n+\n+// compile-flags:-Z extra-debug-info\n+// debugger:break zzz\n+// debugger:run\n+// debugger:finish\n+// debugger:print *bool_ref\n+// check:$1 = true\n+\n+// debugger:print *int_ref\n+// check:$2 = -1\n+\n+// debugger:print *char_ref\n+// check:$3 = 97\n+\n+// debugger:print *i8_ref\n+// check:$4 = 68 'D'\n+\n+// debugger:print *i16_ref\n+// check:$5 = -16\n+\n+// debugger:print *i32_ref\n+// check:$6 = -32\n+\n+// debugger:print *i64_ref\n+// check:$7 = -64\n+\n+// debugger:print *uint_ref\n+// check:$8 = 1\n+\n+// debugger:print *u8_ref\n+// check:$9 = 100 'd'\n+\n+// debugger:print *u16_ref\n+// check:$10 = 16\n+\n+// debugger:print *u32_ref\n+// check:$11 = 32\n+\n+// debugger:print *u64_ref\n+// check:$12 = 64\n+\n+// debugger:print *float_ref\n+// check:$13 = 1.5\n+\n+// debugger:print *f32_ref\n+// check:$14 = 2.5\n+\n+// debugger:print *f64_ref\n+// check:$15 = 3.5\n+\n+fn main() {\n+    let bool_val: bool = true;\n+    let bool_ref : &bool = &bool_val;\n+\n+    let int_val: int = -1;\n+    let int_ref : &int = &int_val;\n+\n+    let char_val: char = 'a';\n+    let char_ref : &char = &char_val;\n+\n+    let i8_val: i8 = 68;\n+    let i8_ref : &i8 = &i8_val;\n+\n+    let i16_val: i16 = -16;\n+    let i16_ref : &i16 = &i16_val;\n+\n+    let i32_val: i32 = -32;\n+    let i32_ref : &i32 = &i32_val;\n+\n+    let uint_val: i64 = -64;\n+    let i64_ref : &i64 = &uint_val;\n+\n+    let uint_val: uint = 1;\n+    let uint_ref : &uint = &uint_val;\n+\n+    let u8_val: u8 = 100;\n+    let u8_ref : &u8 = &u8_val;\n+\n+    let u16_val: u16 = 16;\n+    let u16_ref : &u16 = &u16_val;\n+\n+    let u32_val: u32 = 32;\n+    let u32_ref : &u32 = &u32_val;\n+\n+    let u64_val: u64 = 64;\n+    let u64_ref : &u64 = &u64_val;\n+\n+    let float_val: float = 1.5;\n+    let float_ref : &float = &float_val;\n+\n+    let f32_val: f32 = 2.5;\n+    let f32_ref : &f32 = &f32_val;\n+\n+    let f64_val: f64 = 3.5;\n+    let f64_ref : &f64 = &f64_val;\n+    zzz();\n+}\n+\n+fn zzz() {()}\n\\ No newline at end of file"}]}