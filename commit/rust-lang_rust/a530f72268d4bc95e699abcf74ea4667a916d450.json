{"sha": "a530f72268d4bc95e699abcf74ea4667a916d450", "node_id": "C_kwDOAAsO6NoAKGE1MzBmNzIyNjhkNGJjOTVlNjk5YWJjZjc0ZWE0NjY3YTkxNmQ0NTA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-17T07:42:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-17T07:42:40Z"}, "message": "Rollup merge of #109215 - est31:sort_by_key, r=Nilstrieb\n\nUse sort_by_key instead of sort_by\n\nI went over the cases where sort_by is used and in these two, one can use sort_by_key instead.", "tree": {"sha": "5da809e6a9c3eaa9057146e56fd40dec361887ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5da809e6a9c3eaa9057146e56fd40dec361887ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a530f72268d4bc95e699abcf74ea4667a916d450", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkFBnwCRBK7hj4Ov3rIwAATDwIAI1u96EdH7u+JwXV5j+HdLIe\npTU+IMMjhBFi2hyoJKnq2XuBEdW7GhddYqDzjJ/j2Ae7ojbDA34aTRHn0w91IJb+\n/b25iDj6cv/ClEN/jQVB5FSquSg1Tssc7HysERzORgV9+e292vtzsTbXN3Lnbk1d\npf/XwYs0+ZCaj1vTFPbqeo0M8nwnLmU/iaLqguYzRm5nVHS1a55qdY337s9B8EJl\nf3xDoZ54f+NeJsI5TpYpmEDHcfjfp8BNCyAX6vZztA3mcyoOxu4GjkBzAM/URE1i\ngEWnCX97Ky/znq36cKoBupF3M0ghpg6rKSFzISwr/dhs04dX+Hm1aycz5eRcmZA=\n=xPDq\n-----END PGP SIGNATURE-----\n", "payload": "tree 5da809e6a9c3eaa9057146e56fd40dec361887ab\nparent 246d989a30ad55e333a1870da96fab5066c5b8e9\nparent a8839c3de79740ad76bad4439a5cc5169bf68d53\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679038960 +0100\ncommitter GitHub <noreply@github.com> 1679038960 +0100\n\nRollup merge of #109215 - est31:sort_by_key, r=Nilstrieb\n\nUse sort_by_key instead of sort_by\n\nI went over the cases where sort_by is used and in these two, one can use sort_by_key instead.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a530f72268d4bc95e699abcf74ea4667a916d450", "html_url": "https://github.com/rust-lang/rust/commit/a530f72268d4bc95e699abcf74ea4667a916d450", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a530f72268d4bc95e699abcf74ea4667a916d450/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "246d989a30ad55e333a1870da96fab5066c5b8e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/246d989a30ad55e333a1870da96fab5066c5b8e9", "html_url": "https://github.com/rust-lang/rust/commit/246d989a30ad55e333a1870da96fab5066c5b8e9"}, {"sha": "a8839c3de79740ad76bad4439a5cc5169bf68d53", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8839c3de79740ad76bad4439a5cc5169bf68d53", "html_url": "https://github.com/rust-lang/rust/commit/a8839c3de79740ad76bad4439a5cc5169bf68d53"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "dbf15a3e05fa9e2fd114880e8f28ade0d5711da7", "filename": "compiler/rustc_borrowck/src/region_infer/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a530f72268d4bc95e699abcf74ea4667a916d450/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a530f72268d4bc95e699abcf74ea4667a916d450/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fmod.rs?ref=a530f72268d4bc95e699abcf74ea4667a916d450", "patch": "@@ -255,7 +255,7 @@ fn sccs_info<'cx, 'tcx>(\n     let var_to_origin = infcx.reg_var_to_origin.borrow();\n \n     let mut var_to_origin_sorted = var_to_origin.clone().into_iter().collect::<Vec<_>>();\n-    var_to_origin_sorted.sort_by(|a, b| a.0.cmp(&b.0));\n+    var_to_origin_sorted.sort_by_key(|vto| vto.0);\n     let mut debug_str = \"region variables to origins:\\n\".to_string();\n     for (reg_var, origin) in var_to_origin_sorted.into_iter() {\n         debug_str.push_str(&format!(\"{:?}: {:?}\\n\", reg_var, origin));\n@@ -2216,7 +2216,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         // is in the same SCC or something. In that case, find what\n         // appears to be the most interesting point to report to the\n         // user via an even more ad-hoc guess.\n-        categorized_path.sort_by(|p0, p1| p0.category.cmp(&p1.category));\n+        categorized_path.sort_by_key(|p| p.category);\n         debug!(\"sorted_path={:#?}\", categorized_path);\n \n         (categorized_path.remove(0), extra_info)"}]}