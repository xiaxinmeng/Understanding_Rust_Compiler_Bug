{"sha": "6443179bcab63c440203a321297d32f5b2a2f8e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0NDMxNzliY2FiNjNjNDQwMjAzYTMyMTI5N2QzMmY1YjJhMmY4ZTA=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-21T08:44:06Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-21T08:44:06Z"}, "message": "Add std.sort, with a simple mergesort.", "tree": {"sha": "4b32497cd4396ce5dad00239eee8f45243bf4e98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b32497cd4396ce5dad00239eee8f45243bf4e98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6443179bcab63c440203a321297d32f5b2a2f8e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6443179bcab63c440203a321297d32f5b2a2f8e0", "html_url": "https://github.com/rust-lang/rust/commit/6443179bcab63c440203a321297d32f5b2a2f8e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6443179bcab63c440203a321297d32f5b2a2f8e0/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9286a7179c64bcdb1a8207abc302d395ed1c0ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9286a7179c64bcdb1a8207abc302d395ed1c0ac", "html_url": "https://github.com/rust-lang/rust/commit/b9286a7179c64bcdb1a8207abc302d395ed1c0ac"}], "stats": {"total": 100, "additions": 100, "deletions": 0}, "files": [{"sha": "cff7efce9c28a59194f9db1381600cd8e04b14d2", "filename": "src/lib/sort.rs", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/6443179bcab63c440203a321297d32f5b2a2f8e0/src%2Flib%2Fsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6443179bcab63c440203a321297d32f5b2a2f8e0/src%2Flib%2Fsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fsort.rs?ref=6443179bcab63c440203a321297d32f5b2a2f8e0", "patch": "@@ -0,0 +1,49 @@\n+import _vec.len;\n+import _vec.slice;\n+\n+type lteq[T] = fn(&T a, &T b) -> bool;\n+\n+fn merge_sort[T](lteq[T] le, vec[T] v) -> vec[T] {\n+\n+  fn merge[T](lteq[T] le, vec[T] a, vec[T] b) -> vec[T] {\n+    let vec[T] res = vec();\n+    let uint a_len = len[T](a);\n+    let uint a_ix = 0u;\n+    let uint b_len = len[T](b);\n+    let uint b_ix = 0u;\n+    while (a_ix < a_len && b_ix < b_len) {\n+      if (le(a.(a_ix), b.(b_ix))) {\n+        res += a.(a_ix);\n+        a_ix += 1u;\n+      } else {\n+        res += b.(b_ix);\n+        b_ix += 1u;\n+      }\n+    }\n+    res += slice[T](a, a_ix, a_len);\n+    res += slice[T](b, b_ix, b_len);\n+    ret res;\n+  }\n+\n+  let uint v_len = len[T](v);\n+\n+  if (v_len <= 1u) {\n+    ret v;\n+  }\n+\n+  let uint mid = v_len / 2u;\n+  let vec[T] a = slice[T](v, 0u, mid);\n+  let vec[T] b = slice[T](v, mid, v_len);\n+  ret merge[T](le,\n+               merge_sort[T](le, a),\n+               merge_sort[T](le, b));\n+}\n+\n+// Local Variables:\n+// mode: rust;\n+// fill-column: 78;\n+// indent-tabs-mode: nil\n+// c-basic-offset: 4\n+// buffer-file-coding-system: utf-8-unix\n+// compile-command: \"make -k -C .. 2>&1 | sed -e 's/\\\\/x\\\\//x:\\\\//g'\";\n+// End:"}, {"sha": "b5a1030be07595626b6c8d094bedb0e630d6a59f", "filename": "src/lib/std.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6443179bcab63c440203a321297d32f5b2a2f8e0/src%2Flib%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/6443179bcab63c440203a321297d32f5b2a2f8e0/src%2Flib%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fstd.rc?ref=6443179bcab63c440203a321297d32f5b2a2f8e0", "patch": "@@ -55,6 +55,7 @@ mod list;\n mod rand;\n mod dbg;\n mod bitv;\n+mod sort;\n \n // Local Variables:\n // mode: rust;"}, {"sha": "e2c3465cdfd47f23a4036f6ce7e2b2a9ac9ff903", "filename": "src/test/run-pass/lib-sort.rs", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/6443179bcab63c440203a321297d32f5b2a2f8e0/src%2Ftest%2Frun-pass%2Flib-sort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6443179bcab63c440203a321297d32f5b2a2f8e0/src%2Ftest%2Frun-pass%2Flib-sort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-sort.rs?ref=6443179bcab63c440203a321297d32f5b2a2f8e0", "patch": "@@ -0,0 +1,50 @@\n+use std;\n+\n+fn check_sort(vec[int] v1, vec[int] v2) {\n+  auto len = std._vec.len[int](v1);\n+  fn lteq(&int a, &int b) -> bool {\n+    ret a <= b;\n+  }\n+  auto f = lteq;\n+  auto v3 = std.sort.merge_sort[int](f, v1);\n+  auto i = 0u;\n+  while (i < len) {\n+    log v3.(i);\n+    check (v3.(i) == v2.(i));\n+    i += 1u;\n+  }\n+}\n+\n+fn main() {\n+  {\n+    auto v1 = vec(3,7,4,5,2,9,5,8);\n+    auto v2 = vec(2,3,4,5,5,7,8,9);\n+    check_sort(v1, v2);\n+  }\n+\n+  {\n+    auto v1 = vec(1,1,1);\n+    auto v2 = vec(1,1,1);\n+    check_sort(v1, v2);\n+  }\n+\n+  {\n+    let vec[int] v1 = vec();\n+    let vec[int] v2 = vec();\n+    check_sort(v1, v2);\n+  }\n+\n+  {\n+    auto v1 = vec(9);\n+    auto v2 = vec(9);\n+    check_sort(v1, v2);\n+  }\n+\n+  {\n+    auto v1 = vec(9,3,3,3,9);\n+    auto v2 = vec(3,3,3,9,9);\n+    check_sort(v1, v2);\n+  }\n+\n+}\n+"}]}