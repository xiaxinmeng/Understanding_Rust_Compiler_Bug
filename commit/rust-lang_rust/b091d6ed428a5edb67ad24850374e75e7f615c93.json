{"sha": "b091d6ed428a5edb67ad24850374e75e7f615c93", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwOTFkNmVkNDI4YTVlZGI2N2FkMjQ4NTAzNzRlNzVlN2Y2MTVjOTM=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-05-05T21:35:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-05T21:35:26Z"}, "message": "Rollup merge of #41582 - jonhoo:reread-nameservers-on-lookup-fail, r=alexcrichton\n\nReload nameserver information on lookup failure\n\nAs discussed in #41570, UNIX systems often cache the contents of `/etc/resolv.conf`, which can cause lookup failures to persist even after a network connection becomes available. This patch modifies lookup_host to force a reload of the nameserver entries following a lookup failure. This is in line with what many C programs already do (see #41570 for details). On systems with nscd, this should not be necessary, but not all systems run nscd.\n\nFixes #41570.\nDepends on rust-lang/libc#585.\n\nr? @alexcrichton", "tree": {"sha": "d23c1b6b2c0db4d1fcd51fbf95be04e7ce601a98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d23c1b6b2c0db4d1fcd51fbf95be04e7ce601a98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b091d6ed428a5edb67ad24850374e75e7f615c93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b091d6ed428a5edb67ad24850374e75e7f615c93", "html_url": "https://github.com/rust-lang/rust/commit/b091d6ed428a5edb67ad24850374e75e7f615c93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b091d6ed428a5edb67ad24850374e75e7f615c93/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69f4e318a0280d3cffda9fd9ca60ba084c5a27fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/69f4e318a0280d3cffda9fd9ca60ba084c5a27fd", "html_url": "https://github.com/rust-lang/rust/commit/69f4e318a0280d3cffda9fd9ca60ba084c5a27fd"}, {"sha": "68ae6173fea7411a5d9e5bde6624f5606caf8fe8", "url": "https://api.github.com/repos/rust-lang/rust/commits/68ae6173fea7411a5d9e5bde6624f5606caf8fe8", "html_url": "https://github.com/rust-lang/rust/commit/68ae6173fea7411a5d9e5bde6624f5606caf8fe8"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "03562b0cb26a00f49d4eaf18ca3e49608110b0c8", "filename": "src/liblibc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc?ref=b091d6ed428a5edb67ad24850374e75e7f615c93", "patch": "@@ -1 +1 @@\n-Subproject commit c34a802d1eb037b44c5252078c7270b5472e0f65\n+Subproject commit 03562b0cb26a00f49d4eaf18ca3e49608110b0c8"}, {"sha": "f84662c3f86828874498915842c732676e131b9b", "filename": "src/libstd/build.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b091d6ed428a5edb67ad24850374e75e7f615c93/src%2Flibstd%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b091d6ed428a5edb67ad24850374e75e7f615c93/src%2Flibstd%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbuild.rs?ref=b091d6ed428a5edb67ad24850374e75e7f615c93", "patch": "@@ -43,11 +43,16 @@ fn main() {\n         println!(\"cargo:rustc-link-lib=pthread\");\n     } else if target.contains(\"apple-darwin\") {\n         println!(\"cargo:rustc-link-lib=System\");\n+\n+        // res_init and friends require -lresolv on macOS/iOS.\n+        // See #41582 and http://blog.achernya.com/2013/03/os-x-has-silly-libsystem.html\n+        println!(\"cargo:rustc-link-lib=resolv\");\n     } else if target.contains(\"apple-ios\") {\n         println!(\"cargo:rustc-link-lib=System\");\n         println!(\"cargo:rustc-link-lib=objc\");\n         println!(\"cargo:rustc-link-lib=framework=Security\");\n         println!(\"cargo:rustc-link-lib=framework=Foundation\");\n+        println!(\"cargo:rustc-link-lib=resolv\");\n     } else if target.contains(\"windows\") {\n         println!(\"cargo:rustc-link-lib=advapi32\");\n         println!(\"cargo:rustc-link-lib=ws2_32\");"}, {"sha": "a1897c8bd676e0ec53eb11893e668a4f4f20f56e", "filename": "src/libstd/sys_common/net.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b091d6ed428a5edb67ad24850374e75e7f615c93/src%2Flibstd%2Fsys_common%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b091d6ed428a5edb67ad24850374e75e7f615c93/src%2Flibstd%2Fsys_common%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fnet.rs?ref=b091d6ed428a5edb67ad24850374e75e7f615c93", "patch": "@@ -177,9 +177,22 @@ pub fn lookup_host(host: &str) -> io::Result<LookupHost> {\n     };\n     let mut res = ptr::null_mut();\n     unsafe {\n-        cvt_gai(c::getaddrinfo(c_host.as_ptr(), ptr::null(), &hints,\n-                               &mut res))?;\n-        Ok(LookupHost { original: res, cur: res })\n+        match cvt_gai(c::getaddrinfo(c_host.as_ptr(), ptr::null(), &hints, &mut res)) {\n+            Ok(_) => {\n+                Ok(LookupHost { original: res, cur: res })\n+            },\n+            #[cfg(unix)]\n+            Err(e) => {\n+                // The lookup failure could be caused by using a stale /etc/resolv.conf.\n+                // See https://github.com/rust-lang/rust/issues/41570.\n+                // We therefore force a reload of the nameserver information.\n+                c::res_init();\n+                Err(e)\n+            },\n+            // the cfg is needed here to avoid an \"unreachable pattern\" warning\n+            #[cfg(not(unix))]\n+            Err(e) => Err(e),\n+        }\n     }\n }\n "}, {"sha": "693573d53a4a27960c579a588d6b5f034707d0b8", "filename": "src/test/run-make/tools.mk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b091d6ed428a5edb67ad24850374e75e7f615c93/src%2Ftest%2Frun-make%2Ftools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/b091d6ed428a5edb67ad24850374e75e7f615c93/src%2Ftest%2Frun-make%2Ftools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftools.mk?ref=b091d6ed428a5edb67ad24850374e75e7f615c93", "patch": "@@ -72,6 +72,7 @@ else\n endif\n else\n ifeq ($(UNAME),Darwin)\n+\tEXTRACFLAGS := -lresolv\n else\n ifeq ($(UNAME),FreeBSD)\n \tEXTRACFLAGS := -lm -lpthread -lgcc_s"}]}