{"sha": "d99af375d302fe47c5f02125634995e0d930f4ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5OWFmMzc1ZDMwMmZlNDdjNWYwMjEyNTYzNDk5NWUwZDkzMGY0ZmY=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-02-20T13:59:51Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-02-20T13:59:51Z"}, "message": "Escape some rustdoc strings", "tree": {"sha": "06adb94e34682d3aef255991229720a7b0969b87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06adb94e34682d3aef255991229720a7b0969b87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d99af375d302fe47c5f02125634995e0d930f4ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d99af375d302fe47c5f02125634995e0d930f4ff", "html_url": "https://github.com/rust-lang/rust/commit/d99af375d302fe47c5f02125634995e0d930f4ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d99af375d302fe47c5f02125634995e0d930f4ff/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "522d09dfecbeca1595f25ac58c6d0178bbd21d7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/522d09dfecbeca1595f25ac58c6d0178bbd21d7d", "html_url": "https://github.com/rust-lang/rust/commit/522d09dfecbeca1595f25ac58c6d0178bbd21d7d"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "11d9ecac14dd06a89d5d53c54890f8903d3d587e", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/d99af375d302fe47c5f02125634995e0d930f4ff/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d99af375d302fe47c5f02125634995e0d930f4ff/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=d99af375d302fe47c5f02125634995e0d930f4ff", "patch": "@@ -25,6 +25,7 @@ use clean;\n use stability_summary::ModuleSummary;\n use html::item_type::ItemType;\n use html::render;\n+use html::escape::Escape;\n use html::render::{cache, CURRENT_LOCATION_KEY};\n \n /// Helper to render an optional visibility with a space after it (if the\n@@ -710,13 +711,14 @@ impl<'a> fmt::Display for Stability<'a> {\n         let Stability(stab) = *self;\n         match *stab {\n             Some(ref stability) => {\n+                let lvl = if stability.deprecated_since.is_empty() {\n+                    format!(\"{}\", stability.level)\n+                } else {\n+                    \"Deprecated\".to_string()\n+                };\n                 write!(f, \"<a class='stability {lvl}' title='{reason}'>{lvl}</a>\",\n-                       lvl = if stability.deprecated_since.is_empty() {\n-                           format!(\"{}\", stability.level)\n-                       } else {\n-                           \"Deprecated\".to_string()\n-                       },\n-                       reason = stability.reason)\n+                       lvl = Escape(&*lvl),\n+                       reason = Escape(&*stability.reason))\n             }\n             None => Ok(())\n         }\n@@ -728,14 +730,15 @@ impl<'a> fmt::Display for ConciseStability<'a> {\n         let ConciseStability(stab) = *self;\n         match *stab {\n             Some(ref stability) => {\n+                let lvl = if stability.deprecated_since.is_empty() {\n+                    format!(\"{}\", stability.level)\n+                } else {\n+                    \"Deprecated\".to_string()\n+                };\n                 write!(f, \"<a class='stability {lvl}' title='{lvl}{colon}{reason}'></a>\",\n-                       lvl = if stability.deprecated_since.is_empty() {\n-                           format!(\"{}\", stability.level)\n-                       } else {\n-                           \"Deprecated\".to_string()\n-                       },\n+                       lvl = Escape(&*lvl),\n                        colon = if stability.reason.len() > 0 { \": \" } else { \"\" },\n-                       reason = stability.reason)\n+                       reason = Escape(&*stability.reason))\n             }\n             None => {\n                 write!(f, \"<a class='stability Unmarked' title='No stability level'></a>\")"}]}