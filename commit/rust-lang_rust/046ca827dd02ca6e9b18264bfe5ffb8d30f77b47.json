{"sha": "046ca827dd02ca6e9b18264bfe5ffb8d30f77b47", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NmNhODI3ZGQwMmNhNmU5YjE4MjY0YmZlNWZmYjhkMzBmNzdiNDc=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-10-07T04:33:04Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-12T21:26:47Z"}, "message": "Add unsafe blocks, unsafe functions, and two rudimentary tests\nrelated to them", "tree": {"sha": "09e19a68135d2e4ff624d15df111de4a84ecf7e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09e19a68135d2e4ff624d15df111de4a84ecf7e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/046ca827dd02ca6e9b18264bfe5ffb8d30f77b47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/046ca827dd02ca6e9b18264bfe5ffb8d30f77b47", "html_url": "https://github.com/rust-lang/rust/commit/046ca827dd02ca6e9b18264bfe5ffb8d30f77b47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/046ca827dd02ca6e9b18264bfe5ffb8d30f77b47/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29584cc5ac9369a18d1082d3d2c95eb0471a64db", "url": "https://api.github.com/repos/rust-lang/rust/commits/29584cc5ac9369a18d1082d3d2c95eb0471a64db", "html_url": "https://github.com/rust-lang/rust/commit/29584cc5ac9369a18d1082d3d2c95eb0471a64db"}], "stats": {"total": 36, "additions": 30, "deletions": 6}, "files": [{"sha": "838b1f674fbf5fa0cee566f62286bc6ae770a1a4", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/046ca827dd02ca6e9b18264bfe5ffb8d30f77b47/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/046ca827dd02ca6e9b18264bfe5ffb8d30f77b47/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=046ca827dd02ca6e9b18264bfe5ffb8d30f77b47", "patch": "@@ -1552,10 +1552,12 @@ fn require_pure_call(ccx: @crate_ctxt, caller_purity: ast::purity,\n             ccx.tcx.sess.span_fatal\n                 (sp, \"safe function calls function marked unsafe\");\n           }\n-          //some(ast::def_native_fn(_)) {\n-          //  ccx.tcx.sess.span_fatal\n-          //  (sp, \"native functions can only be invoked from unsafe code\");\n-          //}\n+          /* Temporarily disable until unsafe blocks parse!\n+          some(ast::def_native_fn(_)) {\n+            ccx.tcx.sess.span_fatal\n+                (sp, \"native functions can only be invoked from unsafe code\");\n+          }\n+          */\n           _ {\n           }\n         }"}, {"sha": "75b72acba3f0edf139df4c9facb1159ff2207e3c", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/046ca827dd02ca6e9b18264bfe5ffb8d30f77b47/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/046ca827dd02ca6e9b18264bfe5ffb8d30f77b47/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=046ca827dd02ca6e9b18264bfe5ffb8d30f77b47", "patch": "@@ -2165,7 +2165,8 @@ fn parse_item(p: parser, attrs: [ast::attribute]) -> option::t<@ast::item> {\n         let proto = parse_fn_proto(p);\n         ret some(parse_item_fn_or_iter(p, ast::pure_fn, proto, attrs,\n                                        ast::il_normal));\n-    } else if eat_word(p, \"unsafe\") {\n+    } else if is_word(p, \"unsafe\") && p.look_ahead(1u) != token::LBRACE {\n+        p.bump();\n         expect_word(p, \"fn\");\n         ret some(parse_item_fn_or_iter(p, ast::unsafe_fn, ast::proto_fn,\n                                        attrs, ast::il_normal));"}, {"sha": "b2d19d9ed54e2555a65e99b59b9396729f0ac031", "filename": "src/lib/vec.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/046ca827dd02ca6e9b18264bfe5ffb8d30f77b47/src%2Flib%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/046ca827dd02ca6e9b18264bfe5ffb8d30f77b47/src%2Flib%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fvec.rs?ref=046ca827dd02ca6e9b18264bfe5ffb8d30f77b47", "patch": "@@ -15,7 +15,9 @@ native \"rust\" mod rustrt {\n \n /// Reserves space for `n` elements in the given vector.\n fn reserve<@T>(&v: [mutable? T], n: uint) {\n-    rustrt::vec_reserve_shared(v, n);\n+    //unsafe {\n+        rustrt::vec_reserve_shared(v, n);\n+    //}\n }\n \n pure fn len<T>(v: [mutable? T]) -> uint { unchecked { rusti::vec_len(v) } }"}, {"sha": "62fcfa689d97fb58472f55020c33e6f04585cf50", "filename": "src/test/compile-fail/unsafe-fn-called-from-safe.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/046ca827dd02ca6e9b18264bfe5ffb8d30f77b47/src%2Ftest%2Fcompile-fail%2Funsafe-fn-called-from-safe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/046ca827dd02ca6e9b18264bfe5ffb8d30f77b47/src%2Ftest%2Fcompile-fail%2Funsafe-fn-called-from-safe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funsafe-fn-called-from-safe.rs?ref=046ca827dd02ca6e9b18264bfe5ffb8d30f77b47", "patch": "@@ -0,0 +1,8 @@\n+// -*- rust -*-\n+// error-pattern: safe function calls function marked unsafe\n+\n+unsafe fn f() { ret; }\n+\n+fn main() {\n+    f();\n+}"}, {"sha": "39cdd19a794a22d5ab4064672dbf1027a4577482", "filename": "src/test/run-pass/unsafe-fn-called-from-unsafe-blk.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/046ca827dd02ca6e9b18264bfe5ffb8d30f77b47/src%2Ftest%2Frun-pass%2Funsafe-fn-called-from-unsafe-blk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/046ca827dd02ca6e9b18264bfe5ffb8d30f77b47/src%2Ftest%2Frun-pass%2Funsafe-fn-called-from-unsafe-blk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funsafe-fn-called-from-unsafe-blk.rs?ref=046ca827dd02ca6e9b18264bfe5ffb8d30f77b47", "patch": "@@ -0,0 +1,11 @@\n+// -*- rust -*-\n+//\n+// See also: compile-fail/unsafe-fn-called-from-safe.rs\n+\n+unsafe fn f() { ret; }\n+\n+fn main() {\n+    unsafe {\n+        f();\n+    }\n+}"}]}