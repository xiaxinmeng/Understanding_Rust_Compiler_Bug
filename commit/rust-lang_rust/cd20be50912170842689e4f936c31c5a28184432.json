{"sha": "cd20be50912170842689e4f936c31c5a28184432", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkMjBiZTUwOTEyMTcwODQyNjg5ZTRmOTM2YzMxYzVhMjgxODQ0MzI=", "commit": {"author": {"name": "Jason Langenauer", "email": "jason@jasonlangenauer.com", "date": "2018-11-26T20:21:17Z"}, "committer": {"name": "Jason Langenauer", "email": "jason@jasonlangenauer.com", "date": "2018-11-26T20:21:17Z"}, "message": "Update outdated code comments in StringReader", "tree": {"sha": "c4b6acfd3c57d87870fa7762a2d5614c7276460e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4b6acfd3c57d87870fa7762a2d5614c7276460e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd20be50912170842689e4f936c31c5a28184432", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd20be50912170842689e4f936c31c5a28184432", "html_url": "https://github.com/rust-lang/rust/commit/cd20be50912170842689e4f936c31c5a28184432", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd20be50912170842689e4f936c31c5a28184432/comments", "author": {"login": "jasonl", "id": 118146, "node_id": "MDQ6VXNlcjExODE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/118146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonl", "html_url": "https://github.com/jasonl", "followers_url": "https://api.github.com/users/jasonl/followers", "following_url": "https://api.github.com/users/jasonl/following{/other_user}", "gists_url": "https://api.github.com/users/jasonl/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonl/subscriptions", "organizations_url": "https://api.github.com/users/jasonl/orgs", "repos_url": "https://api.github.com/users/jasonl/repos", "events_url": "https://api.github.com/users/jasonl/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jasonl", "id": 118146, "node_id": "MDQ6VXNlcjExODE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/118146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonl", "html_url": "https://github.com/jasonl", "followers_url": "https://api.github.com/users/jasonl/followers", "following_url": "https://api.github.com/users/jasonl/following{/other_user}", "gists_url": "https://api.github.com/users/jasonl/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonl/subscriptions", "organizations_url": "https://api.github.com/users/jasonl/orgs", "repos_url": "https://api.github.com/users/jasonl/repos", "events_url": "https://api.github.com/users/jasonl/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "html_url": "https://github.com/rust-lang/rust/commit/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "c90c62c13f969bc13f94abf070fe536af2cfb77a", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cd20be50912170842689e4f936c31c5a28184432/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd20be50912170842689e4f936c31c5a28184432/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=cd20be50912170842689e4f936c31c5a28184432", "patch": "@@ -60,11 +60,11 @@ pub struct StringReader<'a> {\n     // cache a direct reference to the source text, so that we don't have to\n     // retrieve it via `self.source_file.src.as_ref().unwrap()` all the time.\n     src: Lrc<String>,\n-    /// Stack of open delimiters and their spans. Used for error message.\n     token: token::Token,\n     span: Span,\n     /// The raw source span which *does not* take `override_span` into account\n     span_src_raw: Span,\n+    /// Stack of open delimiters and their spans. Used for error message.\n     open_braces: Vec<(token::DelimToken, Span)>,\n     /// The type and spans for all braces\n     ///\n@@ -506,8 +506,7 @@ impl<'a> StringReader<'a> {\n         }\n     }\n \n-    /// Advance the StringReader by one character. If a newline is\n-    /// discovered, add it to the SourceFile's list of line start offsets.\n+    /// Advance the StringReader by one character.\n     crate fn bump(&mut self) {\n         let next_src_index = self.src_index(self.next_pos);\n         if next_src_index < self.end_src_index {"}]}