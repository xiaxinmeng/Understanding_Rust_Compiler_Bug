{"sha": "9ef0b9c0d6180f0e5023b29ac57835e6e75517d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllZjBiOWMwZDYxODBmMGU1MDIzYjI5YWM1NzgzNWU2ZTc1NTE3ZDA=", "commit": {"author": {"name": "Micah Chalmer", "email": "micah@micahchalmer.net", "date": "2013-09-06T02:26:30Z"}, "committer": {"name": "Micah Chalmer", "email": "micah@micahchalmer.net", "date": "2013-09-06T05:02:19Z"}, "message": "Allow indenting to align struct fields after curly brace", "tree": {"sha": "7e66cc83569db53edab2ac1e28424ee55415c92c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e66cc83569db53edab2ac1e28424ee55415c92c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ef0b9c0d6180f0e5023b29ac57835e6e75517d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ef0b9c0d6180f0e5023b29ac57835e6e75517d0", "html_url": "https://github.com/rust-lang/rust/commit/9ef0b9c0d6180f0e5023b29ac57835e6e75517d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ef0b9c0d6180f0e5023b29ac57835e6e75517d0/comments", "author": {"login": "MicahChalmer", "id": 698400, "node_id": "MDQ6VXNlcjY5ODQwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/698400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MicahChalmer", "html_url": "https://github.com/MicahChalmer", "followers_url": "https://api.github.com/users/MicahChalmer/followers", "following_url": "https://api.github.com/users/MicahChalmer/following{/other_user}", "gists_url": "https://api.github.com/users/MicahChalmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/MicahChalmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MicahChalmer/subscriptions", "organizations_url": "https://api.github.com/users/MicahChalmer/orgs", "repos_url": "https://api.github.com/users/MicahChalmer/repos", "events_url": "https://api.github.com/users/MicahChalmer/events{/privacy}", "received_events_url": "https://api.github.com/users/MicahChalmer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MicahChalmer", "id": 698400, "node_id": "MDQ6VXNlcjY5ODQwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/698400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MicahChalmer", "html_url": "https://github.com/MicahChalmer", "followers_url": "https://api.github.com/users/MicahChalmer/followers", "following_url": "https://api.github.com/users/MicahChalmer/following{/other_user}", "gists_url": "https://api.github.com/users/MicahChalmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/MicahChalmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MicahChalmer/subscriptions", "organizations_url": "https://api.github.com/users/MicahChalmer/orgs", "repos_url": "https://api.github.com/users/MicahChalmer/repos", "events_url": "https://api.github.com/users/MicahChalmer/events{/privacy}", "received_events_url": "https://api.github.com/users/MicahChalmer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c527dfcd466d9b5ea75fe199c364837298a4278", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c527dfcd466d9b5ea75fe199c364837298a4278", "html_url": "https://github.com/rust-lang/rust/commit/1c527dfcd466d9b5ea75fe199c364837298a4278"}], "stats": {"total": 31, "additions": 14, "deletions": 17}, "files": [{"sha": "ff9119250cddd83d4781d169ea8d49ee37463287", "filename": "src/etc/emacs/rust-mode.el", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/9ef0b9c0d6180f0e5023b29ac57835e6e75517d0/src%2Fetc%2Femacs%2Frust-mode.el", "raw_url": "https://github.com/rust-lang/rust/raw/9ef0b9c0d6180f0e5023b29ac57835e6e75517d0/src%2Fetc%2Femacs%2Frust-mode.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Femacs%2Frust-mode.el?ref=9ef0b9c0d6180f0e5023b29ac57835e6e75517d0", "patch": "@@ -45,6 +45,16 @@\n     (if (/= starting (point))\n         (rust-rewind-irrelevant))))\n \n+(defun rust-first-indent-after-brace ()\n+  (save-excursion\n+    (forward-char)\n+    (if (looking-at \"[[:blank:]]*\\\\(?://.*\\\\)?$\")\n+        ;; We don't want to indent out to the open bracket if the\n+        ;; open bracket ends the line\n+        (* rust-indent-offset (rust-paren-level))\n+      (when (looking-at \"[[:space:]]\") (forward-to-word 1))\n+      (current-column))))\n+\n (defun rust-mode-indent-line ()\n   (interactive)\n   (let ((indent\n@@ -58,7 +68,7 @@\n               ;; A closing brace is 1 level unindended\n               ((looking-at \"}\") (* rust-indent-offset (- level 1)))\n \n-              ; Doc comments in /** style with leading * indent to line up the *s\n+              ;; Doc comments in /** style with leading * indent to line up the *s\n               ((and (nth 4 (syntax-ppss)) (looking-at \"*\"))\n                (+ 1 (* rust-indent-offset level)))\n \n@@ -75,22 +85,9 @@\n                (let ((pt (point)))\n                  (rust-rewind-irrelevant)\n                  (backward-up-list)\n-                 (cond \n-                  ((and\n-                      (looking-at \"[[(]\")\n-                      ; We don't want to indent out to the open bracket if the\n-                      ; open bracket ends the line\n-                      (save-excursion \n-                        (forward-char)\n-                        (not (looking-at \"[[:space:]]*\\\\(?://.*\\\\)?$\"))))\n-                   (+ 1 (current-column)))\n-                  ;; Check for fields on the same line as the open curly brace:\n-                  ((looking-at \"{[[:space:]]*[^\\n]*,[[:space:]]*$\")\n+                 (if (looking-at \"[[({]\")\n+                     (rust-first-indent-after-brace)\n                    (progn\n-                    (forward-char)\n-                    (when (looking-at \"[[:space:]]\") (forward-to-word 1))\n-                    (current-column)))\n-                  (t (progn\n                      (goto-char pt)\n                      (back-to-indentation)\n                      (if (looking-at \"\\\\<else\\\\>\")\n@@ -105,7 +102,7 @@\n                            (back-to-indentation)\n                            (if (looking-at \"#\")\n                                (* rust-indent-offset level)\n-                             (* rust-indent-offset (+ 1 level)))))))))))\n+                             (* rust-indent-offset (+ 1 level))))))))))\n \n               ;; Otherwise we're in a column-zero definition\n               (t 0))))))"}]}