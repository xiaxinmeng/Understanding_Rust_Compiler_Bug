{"sha": "a6527ed92cb7a1156b8a118f5790d8c5fd69ab41", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2NTI3ZWQ5MmNiN2ExMTU2YjhhMTE4ZjU3OTBkOGM1ZmQ2OWFiNDE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-31T12:40:28Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-31T12:40:28Z"}, "message": "\"Finalize\" Types grammar\n\nNote that `for` type is rust-analyzer's own invention.\nBoth the reference and syn allow `for` only for fnptr types, and we\nallow them everywhere. This needs to be checked with respect to type\nbounds grammar...", "tree": {"sha": "807d7e40f6617b016eb88d47f764a738470a54f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/807d7e40f6617b016eb88d47f764a738470a54f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6527ed92cb7a1156b8a118f5790d8c5fd69ab41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6527ed92cb7a1156b8a118f5790d8c5fd69ab41", "html_url": "https://github.com/rust-lang/rust/commit/a6527ed92cb7a1156b8a118f5790d8c5fd69ab41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6527ed92cb7a1156b8a118f5790d8c5fd69ab41/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6e45c6c69bf258118940941c12d057deb79e60c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6e45c6c69bf258118940941c12d057deb79e60c", "html_url": "https://github.com/rust-lang/rust/commit/a6e45c6c69bf258118940941c12d057deb79e60c"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "fe6619d9f4d6470ad3b28ea677018e9c72d29e4c", "filename": "crates/ra_hir_def/src/type_ref.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a6527ed92cb7a1156b8a118f5790d8c5fd69ab41/crates%2Fra_hir_def%2Fsrc%2Ftype_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6527ed92cb7a1156b8a118f5790d8c5fd69ab41/crates%2Fra_hir_def%2Fsrc%2Ftype_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Ftype_ref.rs?ref=a6527ed92cb7a1156b8a118f5790d8c5fd69ab41", "patch": "@@ -1,6 +1,5 @@\n //! HIR for references to types. Paths in these are not yet resolved. They can\n //! be directly created from an ast::TypeRef, without further queries.\n-\n use ra_syntax::ast::{self};\n \n use crate::{body::LowerCtx, path::Path};"}, {"sha": "afa37f22798e2bb0aea95340763a63852aa79b3e", "filename": "crates/ra_syntax/src/ast/generated/nodes.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a6527ed92cb7a1156b8a118f5790d8c5fd69ab41/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6527ed92cb7a1156b8a118f5790d8c5fd69ab41/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs?ref=a6527ed92cb7a1156b8a118f5790d8c5fd69ab41", "patch": "@@ -605,8 +605,10 @@ pub struct FnPointerType {\n     pub(crate) syntax: SyntaxNode,\n }\n impl FnPointerType {\n-    pub fn abi(&self) -> Option<Abi> { support::child(&self.syntax) }\n+    pub fn const_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![const]) }\n+    pub fn async_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![async]) }\n     pub fn unsafe_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![unsafe]) }\n+    pub fn abi(&self) -> Option<Abi> { support::child(&self.syntax) }\n     pub fn fn_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![fn]) }\n     pub fn param_list(&self) -> Option<ParamList> { support::child(&self.syntax) }\n     pub fn ret_type(&self) -> Option<RetType> { support::child(&self.syntax) }"}, {"sha": "4015e3890dd3c983f4235e860be91a65ce3e6c2d", "filename": "xtask/src/codegen/rust.ungram", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6527ed92cb7a1156b8a118f5790d8c5fd69ab41/xtask%2Fsrc%2Fcodegen%2Frust.ungram", "raw_url": "https://github.com/rust-lang/rust/raw/a6527ed92cb7a1156b8a118f5790d8c5fd69ab41/xtask%2Fsrc%2Fcodegen%2Frust.ungram", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Frust.ungram?ref=a6527ed92cb7a1156b8a118f5790d8c5fd69ab41", "patch": "@@ -231,7 +231,7 @@ InferType =\n    '_'\n \n FnPointerType =\n-   Abi 'unsafe'? 'fn' ParamList RetType?\n+   'const'? 'async'? 'unsafe'? Abi? 'fn' ParamList RetType?\n \n ForType =\n    'for' GenericParamList Type"}]}