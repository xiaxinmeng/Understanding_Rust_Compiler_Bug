{"sha": "f874d372bb7f756dfa6ebc22ca838657c8ff1539", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4NzRkMzcyYmI3Zjc1NmRmYTZlYmMyMmNhODM4NjU3YzhmZjE1Mzk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-02T07:09:52Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-02T07:09:52Z"}, "message": "simplify", "tree": {"sha": "ff577c9df38b71346dfb1bed4334ce32ec5c7d7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff577c9df38b71346dfb1bed4334ce32ec5c7d7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f874d372bb7f756dfa6ebc22ca838657c8ff1539", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f874d372bb7f756dfa6ebc22ca838657c8ff1539", "html_url": "https://github.com/rust-lang/rust/commit/f874d372bb7f756dfa6ebc22ca838657c8ff1539", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f874d372bb7f756dfa6ebc22ca838657c8ff1539/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd1f5ba222a1f5a44c20a9fcb70c3785a3758b20", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd1f5ba222a1f5a44c20a9fcb70c3785a3758b20", "html_url": "https://github.com/rust-lang/rust/commit/bd1f5ba222a1f5a44c20a9fcb70c3785a3758b20"}], "stats": {"total": 42, "additions": 19, "deletions": 23}, "files": [{"sha": "9950ab12d738a411b8859afa7b7db9829880f6d8", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 19, "deletions": 23, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/f874d372bb7f756dfa6ebc22ca838657c8ff1539/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f874d372bb7f756dfa6ebc22ca838657c8ff1539/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=f874d372bb7f756dfa6ebc22ca838657c8ff1539", "patch": "@@ -30,6 +30,25 @@ pub trait AstNode:\n     fn syntax(&self) -> &SyntaxNode;\n }\n \n+#[derive(Debug)]\n+pub struct AstChildren<'a, N> {\n+    inner: SyntaxNodeChildren<'a>,\n+    ph: PhantomData<N>,\n+}\n+\n+impl<'a, N> AstChildren<'a, N> {\n+    fn new(parent: &'a SyntaxNode) -> Self {\n+        AstChildren { inner: parent.children(), ph: PhantomData }\n+    }\n+}\n+\n+impl<'a, N: AstNode + 'a> Iterator for AstChildren<'a, N> {\n+    type Item = &'a N;\n+    fn next(&mut self) -> Option<&'a N> {\n+        self.inner.by_ref().find_map(N::cast)\n+    }\n+}\n+\n impl Attr {\n     pub fn is_inner(&self) -> bool {\n         let tt = match self.value() {\n@@ -331,29 +350,6 @@ fn children<P: AstNode, C: AstNode>(parent: &P) -> AstChildren<C> {\n     AstChildren::new(parent.syntax())\n }\n \n-#[derive(Debug)]\n-pub struct AstChildren<'a, N> {\n-    inner: SyntaxNodeChildren<'a>,\n-    ph: PhantomData<N>,\n-}\n-\n-impl<'a, N> AstChildren<'a, N> {\n-    fn new(parent: &'a SyntaxNode) -> Self {\n-        AstChildren { inner: parent.children(), ph: PhantomData }\n-    }\n-}\n-\n-impl<'a, N: AstNode + 'a> Iterator for AstChildren<'a, N> {\n-    type Item = &'a N;\n-    fn next(&mut self) -> Option<&'a N> {\n-        loop {\n-            if let Some(n) = N::cast(self.inner.next()?) {\n-                return Some(n);\n-            }\n-        }\n-    }\n-}\n-\n #[derive(Debug, Clone, PartialEq, Eq)]\n pub enum StructFlavor<'a> {\n     Tuple(&'a PosFieldDefList),"}]}