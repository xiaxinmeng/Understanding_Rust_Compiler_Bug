{"sha": "63b2e01e85472cededf387e9dffbf2cbac8266e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzYjJlMDFlODU0NzJjZWRlZGYzODdlOWRmZmJmMmNiYWM4MjY2ZTE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-05-03T22:58:49Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-05-03T23:10:27Z"}, "message": "rustfmt", "tree": {"sha": "6f5d2f429d69e09be0b2e7e7c5f7bf39305edc6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f5d2f429d69e09be0b2e7e7c5f7bf39305edc6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63b2e01e85472cededf387e9dffbf2cbac8266e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63b2e01e85472cededf387e9dffbf2cbac8266e1", "html_url": "https://github.com/rust-lang/rust/commit/63b2e01e85472cededf387e9dffbf2cbac8266e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63b2e01e85472cededf387e9dffbf2cbac8266e1/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a143add9eb6a73a23e570fd3fb42c453497b29a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a143add9eb6a73a23e570fd3fb42c453497b29a", "html_url": "https://github.com/rust-lang/rust/commit/6a143add9eb6a73a23e570fd3fb42c453497b29a"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "ac4af1840385bc8fe8880400613d4d45fab449a0", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/63b2e01e85472cededf387e9dffbf2cbac8266e1/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63b2e01e85472cededf387e9dffbf2cbac8266e1/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=63b2e01e85472cededf387e9dffbf2cbac8266e1", "patch": "@@ -15,28 +15,28 @@\n //! used between functions, and they operate in a purely top-down\n //! way. Therefore we break lifetime name resolution into a separate pass.\n \n-use hir::map::Map;\n use hir::def::Def;\n use hir::def_id::{CrateNum, DefId, LocalDefId, LOCAL_CRATE};\n+use hir::map::Map;\n use hir::ItemLocalId;\n use hir::LifetimeName;\n use ty::{self, TyCtxt};\n \n+use errors::DiagnosticBuilder;\n+use rustc::lint;\n+use rustc_data_structures::sync::Lrc;\n+use session::Session;\n use std::cell::Cell;\n use std::mem::replace;\n-use rustc_data_structures::sync::Lrc;\n+use std::slice;\n use syntax::ast;\n use syntax::attr;\n use syntax::ptr::P;\n use syntax_pos::Span;\n-use errors::DiagnosticBuilder;\n use util::nodemap::{DefIdMap, FxHashMap, FxHashSet, NodeMap, NodeSet};\n-use session::Session;\n-use std::slice;\n-use rustc::lint;\n \n-use hir::{self, GenericParamsExt};\n use hir::intravisit::{self, NestedVisitorMap, Visitor};\n+use hir::{self, GenericParamsExt};\n \n /// The origin of a named lifetime definition.\n ///\n@@ -2087,8 +2087,9 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n                         );\n                         err.emit();\n                     }\n-                    hir::LifetimeName::Fresh(_) | hir::LifetimeName::Implicit |\n-                    hir::LifetimeName::Name(_) => {}\n+                    hir::LifetimeName::Fresh(_)\n+                    | hir::LifetimeName::Implicit\n+                    | hir::LifetimeName::Name(_) => {}\n                 }\n             }\n \n@@ -2140,8 +2141,9 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n                             ))\n                             .emit();\n                     }\n-                    hir::LifetimeName::Fresh(_) | hir::LifetimeName::Implicit |\n-                    hir::LifetimeName::Name(_) => {\n+                    hir::LifetimeName::Fresh(_)\n+                    | hir::LifetimeName::Implicit\n+                    | hir::LifetimeName::Name(_) => {\n                         self.resolve_lifetime_ref(bound);\n                     }\n                 }"}]}