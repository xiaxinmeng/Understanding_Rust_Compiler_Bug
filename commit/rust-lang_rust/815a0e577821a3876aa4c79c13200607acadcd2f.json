{"sha": "815a0e577821a3876aa4c79c13200607acadcd2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxNWEwZTU3NzgyMWEzODc2YWE0Yzc5YzEzMjAwNjA3YWNhZGNkMmY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-19T07:29:48Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-20T09:15:38Z"}, "message": "doc comment", "tree": {"sha": "3a8c66bd816960d641dee30ec60d84c0baaeb375", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a8c66bd816960d641dee30ec60d84c0baaeb375"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/815a0e577821a3876aa4c79c13200607acadcd2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/815a0e577821a3876aa4c79c13200607acadcd2f", "html_url": "https://github.com/rust-lang/rust/commit/815a0e577821a3876aa4c79c13200607acadcd2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/815a0e577821a3876aa4c79c13200607acadcd2f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0bab735c81d616629a54cca7b35c2f7cd26408a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0bab735c81d616629a54cca7b35c2f7cd26408a", "html_url": "https://github.com/rust-lang/rust/commit/d0bab735c81d616629a54cca7b35c2f7cd26408a"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "6c1af5ef999248bab052caf32fcab39a590de52d", "filename": "crates/ra_vfs/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/815a0e577821a3876aa4c79c13200607acadcd2f/crates%2Fra_vfs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/815a0e577821a3876aa4c79c13200607acadcd2f/crates%2Fra_vfs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Fsrc%2Flib.rs?ref=815a0e577821a3876aa4c79c13200607acadcd2f", "patch": "@@ -212,6 +212,7 @@ impl Vfs {\n         mem::replace(&mut self.pending_changes, Vec::new())\n     }\n \n+    /// Sutdown the VFS and terminate the background watching thread.\n     pub fn shutdown(self) -> thread::Result<()> {\n         let _ = self.worker.shutdown();\n         self.worker_handle.shutdown()"}]}