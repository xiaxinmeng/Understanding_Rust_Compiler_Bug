{"sha": "c6155d1fd112407c2d111c0c81c38a3606a0954e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2MTU1ZDFmZDExMjQwN2MyZDExMWMwYzgxYzM4YTM2MDZhMDk1NGU=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-08-24T20:39:15Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-08-24T21:21:37Z"}, "message": "Change \"pred\" to \"pure fn\" (but still accept \"pred\")\n\nThis is part 1 of changing the \"pred\" keyword to \"pure fn\".\nRight now, the compiler accepts both \"pred\" and \"pure fn\".", "tree": {"sha": "3e28872864ee455b0a7e931bd0393c7038ea24d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e28872864ee455b0a7e931bd0393c7038ea24d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6155d1fd112407c2d111c0c81c38a3606a0954e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6155d1fd112407c2d111c0c81c38a3606a0954e", "html_url": "https://github.com/rust-lang/rust/commit/c6155d1fd112407c2d111c0c81c38a3606a0954e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6155d1fd112407c2d111c0c81c38a3606a0954e/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b5689d4ddbc75c34c5c9c70fdbc27b351a7a2f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b5689d4ddbc75c34c5c9c70fdbc27b351a7a2f4", "html_url": "https://github.com/rust-lang/rust/commit/5b5689d4ddbc75c34c5c9c70fdbc27b351a7a2f4"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "0476fd886054fbb0cab75cc6cc1e15b5f75dfa1b", "filename": "src/comp/metadata/decoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6155d1fd112407c2d111c0c81c38a3606a0954e/src%2Fcomp%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6155d1fd112407c2d111c0c81c38a3606a0954e/src%2Fcomp%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fdecoder.rs?ref=c6155d1fd112407c2d111c0c81c38a3606a0954e", "patch": "@@ -284,7 +284,7 @@ fn item_family_to_str(fam: u8) -> str {\n     alt fam as char {\n       'c' { ret \"const\"; }\n       'f' { ret \"fn\"; }\n-      'p' { ret \"pred\"; }\n+      'p' { ret \"pure fn\"; }\n       'F' { ret \"native fn\"; }\n       'y' { ret \"type\"; }\n       'T' { ret \"native type\"; }"}, {"sha": "d452ffe4a6d61f61161d2ff7f53274dec6a56f72", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6155d1fd112407c2d111c0c81c38a3606a0954e/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6155d1fd112407c2d111c0c81c38a3606a0954e/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=c6155d1fd112407c2d111c0c81c38a3606a0954e", "patch": "@@ -371,7 +371,7 @@ type fn_decl =\n      constraints: [@constr]};\n \n tag purity {\n-    pure_fn; // declared with \"pred\"\n+    pure_fn; // declared with \"pure fn\"\n     impure_fn; // declared with \"fn\"\n }\n "}, {"sha": "b4ad7339e25b83cab2220af08916a56070067ce6", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c6155d1fd112407c2d111c0c81c38a3606a0954e/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6155d1fd112407c2d111c0c81c38a3606a0954e/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=c6155d1fd112407c2d111c0c81c38a3606a0954e", "patch": "@@ -173,7 +173,7 @@ fn bad_expr_word_table() -> hashmap<str, ()> {\n     words.insert(\"fn\", ());\n     words.insert(\"block\", ());\n     words.insert(\"lambda\", ());\n-    words.insert(\"pred\", ());\n+    words.insert(\"pure\", ());\n     words.insert(\"iter\", ());\n     words.insert(\"block\", ());\n     words.insert(\"import\", ());\n@@ -326,8 +326,6 @@ fn parse_proto(p: &parser) -> ast::proto {\n         ret ast::proto_fn;\n     } else if eat_word(p, \"block\") {\n         ret ast::proto_block;\n-    } else if eat_word(p, \"pred\") {\n-        ret ast::proto_fn;\n     } else { unexpected(p, p.peek()); }\n }\n \n@@ -2123,7 +2121,13 @@ fn parse_item(p: &parser, attrs: &[ast::attribute]) -> option::t<@ast::item> {\n         p.bump();\n         ret some(parse_item_fn_or_iter(p, ast::impure_fn, ast::proto_fn,\n                                        attrs, ast::il_normal));\n-    } else if eat_word(p, \"pred\") {\n+    } else if eat_word(p, \"pure\") {\n+        expect_word(p, \"fn\");\n+        ret some(parse_item_fn_or_iter(p, ast::pure_fn, ast::proto_fn, attrs,\n+                                       ast::il_normal));\n+    }\n+    // FIXME: remove\n+    else if eat_word(p, \"pred\") {\n         ret some(parse_item_fn_or_iter(p, ast::pure_fn, ast::proto_fn, attrs,\n                                        ast::il_normal));\n     } else if eat_word(p, \"iter\") {"}, {"sha": "051c114002b5486939381e35a63463b5160ed292", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6155d1fd112407c2d111c0c81c38a3606a0954e/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6155d1fd112407c2d111c0c81c38a3606a0954e/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=c6155d1fd112407c2d111c0c81c38a3606a0954e", "patch": "@@ -1197,7 +1197,7 @@ fn print_fn(s: &ps, decl: ast::fn_decl, proto: ast::proto, name: str,\n             typarams: &[ast::ty_param], constrs: [@ast::constr]) {\n     alt decl.purity {\n       ast::impure_fn. { head(s, proto_to_str(proto)); }\n-      _ { head(s, \"pred\"); }\n+      _ { head(s, \"pure fn\"); }\n     }\n     word(s.s, name);\n     print_type_params(s, typarams);"}]}