{"sha": "ea04cdfbe86cb4553d0fd26f727728d395013def", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhMDRjZGZiZTg2Y2I0NTUzZDBmZDI2ZjcyNzcyOGQzOTUwMTNkZWY=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-03-06T21:05:11Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-04-03T12:48:07Z"}, "message": "Remove two cases of unecesary match branches", "tree": {"sha": "d635b4ce8e73b0ac818077b76a2fe83daf512746", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d635b4ce8e73b0ac818077b76a2fe83daf512746"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea04cdfbe86cb4553d0fd26f727728d395013def", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea04cdfbe86cb4553d0fd26f727728d395013def", "html_url": "https://github.com/rust-lang/rust/commit/ea04cdfbe86cb4553d0fd26f727728d395013def", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea04cdfbe86cb4553d0fd26f727728d395013def/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8d59a954ff75e7e62088007a70fbd3048db2bf3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8d59a954ff75e7e62088007a70fbd3048db2bf3", "html_url": "https://github.com/rust-lang/rust/commit/d8d59a954ff75e7e62088007a70fbd3048db2bf3"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "2615490a9fbc5a584b4b0b7f0fe525df9a0323fb", "filename": "src/librustc_trans/trans/attributes.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ea04cdfbe86cb4553d0fd26f727728d395013def/src%2Flibrustc_trans%2Ftrans%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea04cdfbe86cb4553d0fd26f727728d395013def/src%2Flibrustc_trans%2Ftrans%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fattributes.rs?ref=ea04cdfbe86cb4553d0fd26f727728d395013def", "patch": "@@ -189,8 +189,7 @@ pub fn from_fn_type<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>, fn_type: ty::Ty<'tcx\n             match ret_ty.sty {\n                 // `~` pointer return values never alias because ownership\n                 // is transferred\n-                ty::ty_uniq(it) if !common::type_is_sized(ccx.tcx(), it) => {}\n-                ty::ty_uniq(_) => {\n+                ty::ty_uniq(it) if common::type_is_sized(ccx.tcx(), it) => {\n                     attrs.ret(llvm::NoAliasAttribute);\n                 }\n                 _ => {}\n@@ -199,9 +198,8 @@ pub fn from_fn_type<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>, fn_type: ty::Ty<'tcx\n             // We can also mark the return value as `dereferenceable` in certain cases\n             match ret_ty.sty {\n                 // These are not really pointers but pairs, (pointer, len)\n-                ty::ty_uniq(it) |\n-                ty::ty_rptr(_, ty::mt { ty: it, .. }) if !common::type_is_sized(ccx.tcx(), it) => {}\n-                ty::ty_uniq(inner) | ty::ty_rptr(_, ty::mt { ty: inner, .. }) => {\n+                ty::ty_rptr(_, ty::mt { ty: inner, .. })\n+                | ty::ty_uniq(inner) if common::type_is_sized(ccx.tcx(), inner) => {\n                     let llret_sz = machine::llsize_of_real(ccx, type_of::type_of(ccx, inner));\n                     attrs.ret(llvm::DereferenceableAttribute(llret_sz));\n                 }"}]}