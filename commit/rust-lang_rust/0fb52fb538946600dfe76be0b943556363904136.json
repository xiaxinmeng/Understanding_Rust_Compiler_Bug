{"sha": "0fb52fb538946600dfe76be0b943556363904136", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmYjUyZmI1Mzg5NDY2MDBkZmU3NmJlMGI5NDM1NTYzNjM5MDQxMzY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-11-30T21:13:07Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-11-30T21:13:07Z"}, "message": "Separate out precise_pointer_size_matching tests from exhaustive_integer_patterns tests", "tree": {"sha": "c1f27aba528a9216cfe2c328da42eb2921f11d5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1f27aba528a9216cfe2c328da42eb2921f11d5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fb52fb538946600dfe76be0b943556363904136", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fb52fb538946600dfe76be0b943556363904136", "html_url": "https://github.com/rust-lang/rust/commit/0fb52fb538946600dfe76be0b943556363904136", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fb52fb538946600dfe76be0b943556363904136/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fc5758a67e38b21e975fc9efe071dd58f4b98c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fc5758a67e38b21e975fc9efe071dd58f4b98c6", "html_url": "https://github.com/rust-lang/rust/commit/4fc5758a67e38b21e975fc9efe071dd58f4b98c6"}], "stats": {"total": 67, "additions": 50, "deletions": 17}, "files": [{"sha": "020382d9fe17deb6f18c679662be91e6877bfc2f", "filename": "src/test/ui/exhaustive_integer_patterns.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0fb52fb538946600dfe76be0b943556363904136/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fb52fb538946600dfe76be0b943556363904136/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.rs?ref=0fb52fb538946600dfe76be0b943556363904136", "patch": "@@ -13,7 +13,7 @@\n \n #![deny(unreachable_patterns)]\n \n-use std::{char, usize, u8, u16, u32, u64, u128, isize, i8, i16, i32, i64, i128};\n+use std::{char, u8, u16, u32, u64, u128, i8, i16, i32, i64, i128};\n \n fn main() {\n     let x: u8 = 0;\n@@ -69,10 +69,6 @@ fn main() {\n         '\\u{E000}' ..= '\\u{10_FFFF}' => {}\n     }\n \n-    match 0usize {\n-        0 ..= usize::MAX => {} // ok\n-    }\n-\n     match 0u16 {\n         0 ..= u16::MAX => {} // ok\n     }\n@@ -89,10 +85,6 @@ fn main() {\n         0 ..= u128::MAX => {} // ok\n     }\n \n-    match 0isize {\n-        isize::MIN ..= isize::MAX => {} // ok\n-    }\n-\n     match 0i8 {\n         -128 ..= 127 => {} // ok\n     }"}, {"sha": "011e93683fb6e4bb7ebf0f12920d86442b6c34f5", "filename": "src/test/ui/exhaustive_integer_patterns.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0fb52fb538946600dfe76be0b943556363904136/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fb52fb538946600dfe76be0b943556363904136/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr?ref=0fb52fb538946600dfe76be0b943556363904136", "patch": "@@ -35,49 +35,49 @@ LL |     match x { //~ ERROR non-exhaustive patterns\n    |           ^ patterns `-128i8..=-8i8`, `-6i8`, `121i8..=124i8` and 1 more not covered\n \n error[E0004]: non-exhaustive patterns: `-128i8` not covered\n-  --> $DIR/exhaustive_integer_patterns.rs:100:11\n+  --> $DIR/exhaustive_integer_patterns.rs:92:11\n    |\n LL |     match 0i8 { //~ ERROR non-exhaustive patterns\n    |           ^^^ pattern `-128i8` not covered\n \n error[E0004]: non-exhaustive patterns: `0i16` not covered\n-  --> $DIR/exhaustive_integer_patterns.rs:108:11\n+  --> $DIR/exhaustive_integer_patterns.rs:100:11\n    |\n LL |     match 0i16 { //~ ERROR non-exhaustive patterns\n    |           ^^^^ pattern `0i16` not covered\n \n error[E0004]: non-exhaustive patterns: `128u8..=255u8` not covered\n-  --> $DIR/exhaustive_integer_patterns.rs:126:11\n+  --> $DIR/exhaustive_integer_patterns.rs:118:11\n    |\n LL |     match 0u8 { //~ ERROR non-exhaustive patterns\n    |           ^^^ pattern `128u8..=255u8` not covered\n \n error[E0004]: non-exhaustive patterns: `(0u8, Some(_))` and `(2u8..=255u8, Some(_))` not covered\n-  --> $DIR/exhaustive_integer_patterns.rs:138:11\n+  --> $DIR/exhaustive_integer_patterns.rs:130:11\n    |\n LL |     match (0u8, Some(())) { //~ ERROR non-exhaustive patterns\n    |           ^^^^^^^^^^^^^^^ patterns `(0u8, Some(_))` and `(2u8..=255u8, Some(_))` not covered\n \n error[E0004]: non-exhaustive patterns: `(126u8..=127u8, false)` not covered\n-  --> $DIR/exhaustive_integer_patterns.rs:143:11\n+  --> $DIR/exhaustive_integer_patterns.rs:135:11\n    |\n LL |     match (0u8, true) { //~ ERROR non-exhaustive patterns\n    |           ^^^^^^^^^^^ pattern `(126u8..=127u8, false)` not covered\n \n error[E0004]: non-exhaustive patterns: `340282366920938463463374607431768211455u128` not covered\n-  --> $DIR/exhaustive_integer_patterns.rs:163:11\n+  --> $DIR/exhaustive_integer_patterns.rs:155:11\n    |\n LL |     match 0u128 { //~ ERROR non-exhaustive patterns\n    |           ^^^^^ pattern `340282366920938463463374607431768211455u128` not covered\n \n error[E0004]: non-exhaustive patterns: `5u128..=340282366920938463463374607431768211455u128` not covered\n-  --> $DIR/exhaustive_integer_patterns.rs:167:11\n+  --> $DIR/exhaustive_integer_patterns.rs:159:11\n    |\n LL |     match 0u128 { //~ ERROR non-exhaustive patterns\n    |           ^^^^^ pattern `5u128..=340282366920938463463374607431768211455u128` not covered\n \n error[E0004]: non-exhaustive patterns: `0u128..=3u128` not covered\n-  --> $DIR/exhaustive_integer_patterns.rs:171:11\n+  --> $DIR/exhaustive_integer_patterns.rs:163:11\n    |\n LL |     match 0u128 { //~ ERROR non-exhaustive patterns\n    |           ^^^^^ pattern `0u128..=3u128` not covered"}, {"sha": "31b202fd6aa148af123ef36ccd0811d502ccaf79", "filename": "src/test/ui/precise_pointer_size_matching.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/0fb52fb538946600dfe76be0b943556363904136/src%2Ftest%2Fui%2Fprecise_pointer_size_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fb52fb538946600dfe76be0b943556363904136/src%2Ftest%2Fui%2Fprecise_pointer_size_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprecise_pointer_size_matching.rs?ref=0fb52fb538946600dfe76be0b943556363904136", "patch": "@@ -0,0 +1,26 @@\n+#![feature(precise_pointer_size_matching)]\n+#![feature(exclusive_range_pattern)]\n+\n+#![deny(unreachable_patterns)]\n+\n+use std::{usize, isize};\n+\n+fn main() {\n+    match 0isize {\n+        isize::MIN ..= isize::MAX => {} // ok\n+    }\n+\n+    match 0usize {\n+        0 ..= usize::MAX => {} // ok\n+    }\n+\n+    match 0isize { //~ ERROR non-exhaustive patterns\n+        1 ..= 8 => {}\n+        -5 ..= 20 => {}\n+    }\n+\n+    match 0usize { //~ ERROR non-exhaustive patterns\n+        1 ..= 8 => {}\n+        5 ..= 20 => {}\n+    }\n+}"}, {"sha": "8e13be0ae0c74a2827886fd6976e5712ff71d862", "filename": "src/test/ui/precise_pointer_size_matching.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0fb52fb538946600dfe76be0b943556363904136/src%2Ftest%2Fui%2Fprecise_pointer_size_matching.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fb52fb538946600dfe76be0b943556363904136/src%2Ftest%2Fui%2Fprecise_pointer_size_matching.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprecise_pointer_size_matching.stderr?ref=0fb52fb538946600dfe76be0b943556363904136", "patch": "@@ -0,0 +1,15 @@\n+error[E0004]: non-exhaustive patterns: `-9223372036854775808isize..=-6isize` and `21isize..=9223372036854775807isize` not covered\n+  --> $DIR/precise_pointer_size_matching.rs:17:11\n+   |\n+LL |     match 0isize { //~ ERROR non-exhaustive patterns\n+   |           ^^^^^^ patterns `-9223372036854775808isize..=-6isize` and `21isize..=9223372036854775807isize` not covered\n+\n+error[E0004]: non-exhaustive patterns: `0usize` and `21usize..=18446744073709551615usize` not covered\n+  --> $DIR/precise_pointer_size_matching.rs:22:11\n+   |\n+LL |     match 0usize { //~ ERROR non-exhaustive patterns\n+   |           ^^^^^^ patterns `0usize` and `21usize..=18446744073709551615usize` not covered\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0004`."}]}