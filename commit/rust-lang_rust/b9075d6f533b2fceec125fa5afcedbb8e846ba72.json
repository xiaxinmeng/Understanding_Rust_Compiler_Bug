{"sha": "b9075d6f533b2fceec125fa5afcedbb8e846ba72", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5MDc1ZDZmNTMzYjJmY2VlYzEyNWZhNWFmY2VkYmI4ZTg0NmJhNzI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-12-31T20:52:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-12-31T20:52:17Z"}, "message": "Auto merge of #30616 - arcnmx:cstr-asref, r=aturon\n\nAre trait impls still insta-stable? Considering that this design has been around for a long time on `String` and `OsString` it probably doesn't matter much...\n\nThe `From` impl is a bit strange to me. It's stolen from `OsString` but I'm not really sure about it... `String` just impls `From<&str>` instead, would that make more sense?", "tree": {"sha": "d454480f17bc5670c57d8a027d67415e03ee30ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d454480f17bc5670c57d8a027d67415e03ee30ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9075d6f533b2fceec125fa5afcedbb8e846ba72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9075d6f533b2fceec125fa5afcedbb8e846ba72", "html_url": "https://github.com/rust-lang/rust/commit/b9075d6f533b2fceec125fa5afcedbb8e846ba72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9075d6f533b2fceec125fa5afcedbb8e846ba72/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d9543345c785ea777671baab306d95fed8ee94b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d9543345c785ea777671baab306d95fed8ee94b", "html_url": "https://github.com/rust-lang/rust/commit/7d9543345c785ea777671baab306d95fed8ee94b"}, {"sha": "53878e7546e3e6f3665dea572fbfa48f005ecad2", "url": "https://api.github.com/repos/rust-lang/rust/commits/53878e7546e3e6f3665dea572fbfa48f005ecad2", "html_url": "https://github.com/rust-lang/rust/commit/53878e7546e3e6f3665dea572fbfa48f005ecad2"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "9a41272299e94a10e91ed875e69ca017ccd43bbd", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/b9075d6f533b2fceec125fa5afcedbb8e846ba72/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9075d6f533b2fceec125fa5afcedbb8e846ba72/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=b9075d6f533b2fceec125fa5afcedbb8e846ba72", "patch": "@@ -20,7 +20,7 @@ use iter::Iterator;\n use libc;\n use mem;\n use memchr;\n-use ops::Deref;\n+use ops;\n use option::Option::{self, Some, None};\n use os::raw::c_char;\n use result::Result::{self, Ok, Err};\n@@ -282,7 +282,7 @@ impl CString {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl Deref for CString {\n+impl ops::Deref for CString {\n     type Target = CStr;\n \n     fn deref(&self) -> &CStr {\n@@ -522,6 +522,37 @@ impl ToOwned for CStr {\n     }\n }\n \n+#[stable(feature = \"cstring_asref\", since = \"1.7.0\")]\n+impl<'a> From<&'a CStr> for CString {\n+    fn from(s: &'a CStr) -> CString {\n+        s.to_owned()\n+    }\n+}\n+\n+#[stable(feature = \"cstring_asref\", since = \"1.7.0\")]\n+impl ops::Index<ops::RangeFull> for CString {\n+    type Output = CStr;\n+\n+    #[inline]\n+    fn index(&self, _index: ops::RangeFull) -> &CStr {\n+        self\n+    }\n+}\n+\n+#[stable(feature = \"cstring_asref\", since = \"1.7.0\")]\n+impl AsRef<CStr> for CStr {\n+    fn as_ref(&self) -> &CStr {\n+        self\n+    }\n+}\n+\n+#[stable(feature = \"cstring_asref\", since = \"1.7.0\")]\n+impl AsRef<CStr> for CString {\n+    fn as_ref(&self) -> &CStr {\n+        self\n+    }\n+}\n+\n #[cfg(test)]\n mod tests {\n     use prelude::v1::*;"}]}