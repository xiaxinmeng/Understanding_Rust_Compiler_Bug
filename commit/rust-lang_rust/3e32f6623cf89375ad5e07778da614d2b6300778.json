{"sha": "3e32f6623cf89375ad5e07778da614d2b6300778", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlMzJmNjYyM2NmODkzNzVhZDVlMDc3NzhkYTYxNGQyYjYzMDA3Nzg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-12T00:32:36Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-12-13T00:14:17Z"}, "message": "rt: Write CFI instructions that (might) work on mac in __morestack\n\nThe DW_CFA_val_offset_sf instruction doesn't seem to work on mac,\neven after implementing it in the llvm-mc assembler, so now\nI'm looking for a different way to communicate the stack pointer\nadjustment to the unwinder.", "tree": {"sha": "6371e8d19145910400dce3a216260fceb9bdaff3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6371e8d19145910400dce3a216260fceb9bdaff3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e32f6623cf89375ad5e07778da614d2b6300778", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e32f6623cf89375ad5e07778da614d2b6300778", "html_url": "https://github.com/rust-lang/rust/commit/3e32f6623cf89375ad5e07778da614d2b6300778", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e32f6623cf89375ad5e07778da614d2b6300778/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e47f8fc709763581ec2ce4ea052b50cb89a9c4d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/e47f8fc709763581ec2ce4ea052b50cb89a9c4d7", "html_url": "https://github.com/rust-lang/rust/commit/e47f8fc709763581ec2ce4ea052b50cb89a9c4d7"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "c85f2e142dba9cd3ee6bb4208c41bd980e23d617", "filename": "src/rt/arch/x86_64/morestack.S", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3e32f6623cf89375ad5e07778da614d2b6300778/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/3e32f6623cf89375ad5e07778da614d2b6300778/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S?ref=3e32f6623cf89375ad5e07778da614d2b6300778", "patch": "@@ -71,6 +71,20 @@ MORESTACK:\n \tleaq 16(%rbp), %rax\n \tpushq %rax\n \n+\t// During unwinding we want to skip our caller since it's not\n+\t// a complete frame and will make the unwinder sad\n+#if defined(__linux__)\n+\t// Don't understand this line\n+\t.cfi_offset 16, 0\n+\t// Tell the unwinding where to get the stack pointer for\n+\t// our grandparent frame\n+\t.cfi_offset %rsp, -24\n+#endif\n+\n+\t// Save the grandparent stack pointer for the unwinder\n+\tleaq 16(%rbp), %rax\n+\tpushq %rax\n+\n \t// FIXME: libgcc also saves rax. not sure if we need to\n \n \t// Save argument registers"}]}