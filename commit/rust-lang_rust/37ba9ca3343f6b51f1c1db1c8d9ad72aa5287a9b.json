{"sha": "37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3YmE5Y2EzMzQzZjZiNTFmMWMxZGIxYzhkOWFkNzJhYTUyODdhOWI=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-06T16:33:05Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-06T18:43:16Z"}, "message": "Disable some nice region errors in NLL mode.", "tree": {"sha": "b7ba1f81ba6fc90fc8ec74062d3c71ddcad6ddda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7ba1f81ba6fc90fc8ec74062d3c71ddcad6ddda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAltolsQACgkQAXYLT59T\n8VTLgg/9EBp1S8Mdt9anGb+GcHEe0EMJJ2tV8e11HK35we4IR7+pP4SnP8/tVlCP\n55J8nWa+KZ8IjTMZpyeZzlBghbhV8Dd54XCLdRaluyw31fMLi473vXlKX4RYqgj3\n6KnZ4ssg1YpQWWbhFYirM3XmG7a28mbVa/qgq1pXOtNXtaOd3kqRoKNx7P3mf5lJ\n9GsfdiNn4Gf3/G74JUMBKtWTqdPyWrrV4a/KSAtIPvknfVX3Vqrdrbj0k/ipUWc5\nJVceigYuTuP7MLs6cvC/4+1Ppiu6JrDEUS1d4BzauoIZxPjoaDY5+VdTeIRXK5AF\n+BZEstNqoulW6byFEs5bkcuMpoCYZI8XNXjDuS6EXoVfmBxIEIE1GneCGy8FnoPm\nROUFGImm/5jch1pwjyVJ/8b6a1s9J2hCC4YfyjEoLFqdsVOf5jHRcgOW9EzTM0pd\nVgzSYdK3kHPy8//VQB3eLmAh/mb3xjiyYNBU9H9jbqASg1GDMaXzGqlELOACGnps\n5KpYyat4kDaEncNBx7cH4vUg7pQV960fMoEtsBlONjqaBXDRn2dvQ9v4G1lpJjX4\ngpsEcI+5RdkwbKdSD2D4mteFppHWkX4+HEOz0CVMRHkTx3Z2EzdSv/RlzW2rWs95\n87sDCuWX+uW6HFAGrwPrWE7Hmk1WDtg+umzEn7CU6vD2MUIefHQ=\n=VNQj\n-----END PGP SIGNATURE-----", "payload": "tree b7ba1f81ba6fc90fc8ec74062d3c71ddcad6ddda\nparent 4b8089daf8046d7999310d44e5c68ccff4ab255a\nauthor David Wood <david@davidtw.co> 1533573185 +0200\ncommitter David Wood <david@davidtw.co> 1533580996 +0200\n\nDisable some nice region errors in NLL mode.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "html_url": "https://github.com/rust-lang/rust/commit/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b8089daf8046d7999310d44e5c68ccff4ab255a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b8089daf8046d7999310d44e5c68ccff4ab255a", "html_url": "https://github.com/rust-lang/rust/commit/4b8089daf8046d7999310d44e5c68ccff4ab255a"}], "stats": {"total": 392, "additions": 205, "deletions": 187}, "files": [{"sha": "ddeb291a13aa32b2a82a233387db7cdca51e903a", "filename": "src/librustc/infer/error_reporting/nice_region_error/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -64,6 +64,12 @@ impl<'cx, 'gcx, 'tcx> NiceRegionError<'cx, 'gcx, 'tcx> {\n         Self { tcx, error: None, regions: Some((span, sub, sup)), tables }\n     }\n \n+    pub fn try_report_from_nll(&self) -> Option<ErrorReported> {\n+        // Due to the improved diagnostics returned by the MIR borrow checker, only a subset of\n+        // the nice region errors are required when running under the MIR borrow checker.\n+        self.try_report_named_anon_conflict()\n+    }\n+\n     pub fn try_report(&self) -> Option<ErrorReported> {\n         self.try_report_named_anon_conflict()\n             .or_else(|| self.try_report_anon_anon_conflict())"}, {"sha": "c2670389e2d69cbccb05edb051cd032bb88b0692", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -310,7 +310,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         if let (Some(f), Some(o)) = (self.to_error_region(fr), self.to_error_region(outlived_fr)) {\n             let tables = infcx.tcx.typeck_tables_of(mir_def_id);\n             let nice = NiceRegionError::new_from_span(infcx.tcx, span, o, f, Some(tables));\n-            if let Some(_error_reported) = nice.try_report() {\n+            if let Some(_error_reported) = nice.try_report_from_nll() {\n                 return;\n             }\n         }"}, {"sha": "0efdd19df3c884e4def262a3f6047630e0a79b51", "filename": "src/test/compile-fail/nll/where_clauses_in_functions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fcompile-fail%2Fnll%2Fwhere_clauses_in_functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fcompile-fail%2Fnll%2Fwhere_clauses_in_functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnll%2Fwhere_clauses_in_functions.rs?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -21,7 +21,7 @@ where\n \n fn bar<'a, 'b>(x: &'a u32, y: &'b u32) -> (&'a u32, &'b u32) {\n     foo(x, y)\n-    //~^ ERROR lifetime mismatch [E0623]\n+    //~^ ERROR unsatisfied lifetime constraints\n     //~| WARNING not reporting region error due to nll\n }\n "}, {"sha": "92e7db861734432398c73f28dd6b07091608b479", "filename": "src/test/compile-fail/nll/where_clauses_in_structs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fcompile-fail%2Fnll%2Fwhere_clauses_in_structs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fcompile-fail%2Fnll%2Fwhere_clauses_in_structs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnll%2Fwhere_clauses_in_structs.rs?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -21,7 +21,7 @@ struct Foo<'a: 'b, 'b> {\n \n fn bar<'a, 'b>(x: Cell<&'a u32>, y: Cell<&'b u32>) {\n     Foo { x, y };\n-    //~^ ERROR lifetime mismatch [E0623]\n+    //~^ ERROR unsatisfied lifetime constraints\n     //~| WARNING not reporting region error due to nll\n }\n "}, {"sha": "c923e6610ce0f2742a4fb3000dddaf2be1c31437", "filename": "src/test/ui/in-band-lifetimes/mismatched.nll.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -18,15 +18,15 @@ LL | fn foo(x: &'a u32, y: &u32) -> &'a u32 { y } //~ ERROR explicit lifetime re\n    |                    |\n    |                    consider changing the type of `y` to `&'a u32`\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/mismatched.rs:16:46\n    |\n LL | fn foo2(x: &'a u32, y: &'b u32) -> &'a u32 { y } //~ ERROR lifetime mismatch\n-   |                        -------     -------   ^ ...but data from `y` is returned here\n-   |                        |\n-   |                        this parameter and the return type are declared with different lifetimes...\n+   |             --          --                   ^ function was supposed to return data with lifetime `'b` but it is returning data with lifetime `'a`\n+   |             |           |\n+   |             |           lifetime `'b` defined here\n+   |             lifetime `'a` defined here\n \n error: aborting due to 2 previous errors\n \n-Some errors occurred: E0621, E0623.\n-For more information about an error, try `rustc --explain E0621`.\n+For more information about this error, try `rustc --explain E0621`."}, {"sha": "b6bf646132e39e99daf54cfa4ea19cca78010b13", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else-using-impl.nll.stderr", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,17 +4,16 @@ warning: not reporting region error due to nll\n LL |         if x > y { x } else { y } //~ ERROR lifetime mismatch\n    |                    ^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex1-return-one-existing-name-if-else-using-impl.rs:21:12\n    |\n LL |     fn foo<'a>(x: &i32, y: &'a i32) -> &'a i32 {\n-   |                   ----                 -------\n-   |                   |\n-   |                   this parameter and the return type are declared with different lifetimes...\n+   |            --     - let's call the lifetime of this reference `'1`\n+   |            |\n+   |            lifetime `'a` defined here\n LL | \n LL |         if x > y { x } else { y } //~ ERROR lifetime mismatch\n-   |            ^^^^^ ...but data from `x` is returned here\n+   |            ^^^^^ requires that `'1` must outlive `'a`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "93eac05e8d2c7697bb95b806edd2e49e1893be59", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-return-type-is-anon.nll.stderr", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-return-type-is-anon.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-return-type-is-anon.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-return-type-is-anon.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,17 +4,16 @@ warning: not reporting region error due to nll\n LL |     x //~ ERROR lifetime mismatch\n    |     ^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex1-return-one-existing-name-return-type-is-anon.rs:18:5\n    |\n LL |   fn foo<'a>(&self, x: &'a i32) -> &i32 {\n-   |                        -------     ----\n-   |                        |\n-   |                        this parameter and the return type are declared with different lifetimes...\n+   |          --  - let's call the lifetime of this reference `'1`\n+   |          |\n+   |          lifetime `'a` defined here\n LL | \n LL |     x //~ ERROR lifetime mismatch\n-   |     ^ ...but data from `x` is returned here\n+   |     ^ function was supposed to return data with lifetime `'a` but it is returning data with lifetime `'1`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "c5b4fd1934b2883ff4927f5cdaca39bcc2001ca1", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-self-is-anon.nll.stderr", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-self-is-anon.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-self-is-anon.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-self-is-anon.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,17 +4,16 @@ warning: not reporting region error due to nll\n LL |         if true { x } else { self } //~ ERROR lifetime mismatch\n    |                              ^^^^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex1-return-one-existing-name-self-is-anon.rs:18:9\n    |\n LL |     fn foo<'a>(&self, x: &'a Foo) -> &'a Foo {\n-   |                -----                 -------\n-   |                |\n-   |                this parameter and the return type are declared with different lifetimes...\n+   |            --  - let's call the lifetime of this reference `'1`\n+   |            |\n+   |            lifetime `'a` defined here\n LL | \n LL |         if true { x } else { self } //~ ERROR lifetime mismatch\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ ...but data from `self` is returned here\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ requires that `'1` must outlive `'a`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "614034794bd6094873e682f5c4b83ad617efdb15", "filename": "src/test/ui/lifetime-errors/ex2b-push-no-existing-names.nll.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,14 +4,15 @@ warning: not reporting region error due to nll\n LL |     x.push(y); //~ ERROR lifetime mismatch\n    |            ^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex2b-push-no-existing-names.rs:16:5\n    |\n LL | fn foo(x: &mut Vec<Ref<i32>>, y: Ref<i32>) {\n-   |                    --------      -------- these two types are declared with different lifetimes...\n+   |                    --------      -------- lifetime `'1` appears in this type\n+   |                    |\n+   |                    lifetime `'2` appears in this type\n LL |     x.push(y); //~ ERROR lifetime mismatch\n-   |     ^^^^^^^^^ ...but data from `y` flows into `x` here\n+   |     ^^^^^^^^^ argument requires that `'1` must outlive `'2`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "c34278b4d9fa1ac90d6c12f49fdf79b2169fb976", "filename": "src/test/ui/lifetime-errors/ex2c-push-inference-variable.nll.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,15 +4,16 @@ warning: not reporting region error due to nll\n LL |     let z = Ref { data: y.data };\n    |             ^^^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex2c-push-inference-variable.rs:17:5\n    |\n LL | fn foo<'a, 'b, 'c>(x: &'a mut Vec<Ref<'b, i32>>, y: Ref<'c, i32>) {\n-   |                                   ------------      ------------ these two types are declared with different lifetimes...\n+   |            --  -- lifetime `'c` defined here\n+   |            |\n+   |            lifetime `'b` defined here\n LL |     let z = Ref { data: y.data };\n LL |     x.push(z); //~ ERROR lifetime mismatch\n-   |     ^^^^^^^^^ ...but data from `y` flows into `x` here\n+   |     ^^^^^^^^^ argument requires that `'c` must outlive `'b`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "3097d18e86c67feb855df2007a6b58f6aea1d7d8", "filename": "src/test/ui/lifetime-errors/ex2d-push-inference-variable-2.nll.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,15 +4,16 @@ warning: not reporting region error due to nll\n LL |     let b = Ref { data: y.data };\n    |             ^^^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex2d-push-inference-variable-2.rs:18:5\n    |\n LL | fn foo<'a, 'b, 'c>(x: &'a mut Vec<Ref<'b, i32>>, y: Ref<'c, i32>) {\n-   |                                   ------------      ------------ these two types are declared with different lifetimes...\n+   |            --  -- lifetime `'c` defined here\n+   |            |\n+   |            lifetime `'b` defined here\n ...\n LL |     a.push(b);\n-   |     ^^^^^^^^^ ...but data from `y` flows into `x` here\n+   |     ^^^^^^^^^ argument requires that `'c` must outlive `'b`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "ce0e9be300698ea2e52a0616256cb42e2516587c", "filename": "src/test/ui/lifetime-errors/ex2e-push-inference-variable-3.nll.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,15 +4,16 @@ warning: not reporting region error due to nll\n LL |     let b = Ref { data: y.data };\n    |             ^^^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex2e-push-inference-variable-3.rs:18:5\n    |\n LL | fn foo<'a, 'b, 'c>(x: &'a mut Vec<Ref<'b, i32>>, y: Ref<'c, i32>) {\n-   |                                   ------------      ------------ these two types are declared with different lifetimes...\n+   |            --  -- lifetime `'c` defined here\n+   |            |\n+   |            lifetime `'b` defined here\n ...\n LL |     Vec::push(a, b);\n-   |     ^^^^^^^^^^^^^^^ ...but data from `y` flows into `x` here\n+   |     ^^^^^^^^^^^^^^^ argument requires that `'c` must outlive `'b`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "c7f1a0ede3c1cf26b8c413a8ac0690430f62c9e0", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-2.nll.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-2.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,14 +4,15 @@ warning: not reporting region error due to nll\n LL |     *v = x; //~ ERROR lifetime mismatch\n    |          ^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-2.rs:12:5\n    |\n LL | fn foo(&mut (ref mut v, w): &mut (&u8, &u8), x: &u8) {\n-   |                                   ---           --- these two types are declared with different lifetimes...\n+   |                                   -             - let's call the lifetime of this reference `'1`\n+   |                                   |\n+   |                                   let's call the lifetime of this reference `'2`\n LL |     *v = x; //~ ERROR lifetime mismatch\n-   |     ^^^^^^ ...but data from `x` flows here\n+   |     ^^^^^^ requires that `'1` must outlive `'2`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "09980e44c52d63b3ada0f2a6c59c004acbdff611", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-3.nll.stderr", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-3.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -10,22 +10,25 @@ warning: not reporting region error due to nll\n LL |     z.push((x,y)); //~ ERROR lifetime mismatch\n    |               ^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-3.rs:12:5\n    |\n LL | fn foo(z: &mut Vec<(&u8,&u8)>, (x, y): (&u8, &u8)) {\n-   |                     ---                 --- these two types are declared with different lifetimes...\n+   |                     -                   - let's call the lifetime of this reference `'1`\n+   |                     |\n+   |                     let's call the lifetime of this reference `'2`\n LL |     z.push((x,y)); //~ ERROR lifetime mismatch\n-   |     ^^^^^^^^^^^^^ ...but data flows into `z` here\n+   |     ^^^^^^^^^^^^^ argument requires that `'1` must outlive `'2`\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-3.rs:12:5\n    |\n LL | fn foo(z: &mut Vec<(&u8,&u8)>, (x, y): (&u8, &u8)) {\n-   |                         ---                  --- these two types are declared with different lifetimes...\n+   |                         -                    - let's call the lifetime of this reference `'1`\n+   |                         |\n+   |                         let's call the lifetime of this reference `'2`\n LL |     z.push((x,y)); //~ ERROR lifetime mismatch\n-   |     ^^^^^^^^^^^^^ ...but data flows into `z` here\n+   |     ^^^^^^^^^^^^^ argument requires that `'1` must outlive `'2`\n \n error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "2829fbcd32a1bbc13801a80c7af3cdcd53d3fee9", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-both-are-structs-2.nll.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-2.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,14 +4,15 @@ warning: not reporting region error due to nll\n LL |     x.b = y.b; //~ ERROR lifetime mismatch\n    |           ^^^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-both-are-structs-2.rs:16:5\n    |\n LL | fn foo(mut x: Ref, y: Ref) {\n-   |               ---     --- these two types are declared with different lifetimes...\n+   |               ---     --- lifetime `'1` appears in this type\n+   |               |\n+   |               lifetime `'2` appears in this type\n LL |     x.b = y.b; //~ ERROR lifetime mismatch\n-   |     ^^^^^^^^^ ...but data from `y` flows into `x` here\n+   |     ^^^^^^^^^ requires that `'1` must outlive `'2`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "8171ee758b066fc2590b1f1c428959a6c8232d08", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-both-are-structs-3.nll.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-3.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,16 +4,16 @@ warning: not reporting region error due to nll\n LL |     x.a = x.b; //~ ERROR lifetime mismatch\n    |           ^^^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-both-are-structs-3.rs:16:5\n    |\n LL | fn foo(mut x: Ref) {\n    |               ---\n    |               |\n-   |               this type is declared with multiple lifetimes...\n+   |               lifetime `'1` appears in this type\n+   |               lifetime `'2` appears in this type\n LL |     x.a = x.b; //~ ERROR lifetime mismatch\n-   |     ^^^^^^^^^ ...but data with one lifetime flows into the other here\n+   |     ^^^^^^^^^ requires that `'1` must outlive `'2`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "99b64605baec1e1641c6a526a350baeee0857ac7", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-both-are-structs-4.nll.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-4.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-4.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-4.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,16 +4,16 @@ warning: not reporting region error due to nll\n LL |     x.a = x.b; //~ ERROR lifetime mismatch\n    |           ^^^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-both-are-structs-4.rs:16:5\n    |\n LL | fn foo(mut x: Ref) {\n    |               ---\n    |               |\n-   |               this type is declared with multiple lifetimes...\n+   |               lifetime `'1` appears in this type\n+   |               lifetime `'2` appears in this type\n LL |     x.a = x.b; //~ ERROR lifetime mismatch\n-   |     ^^^^^^^^^ ...but data with one lifetime flows into the other here\n+   |     ^^^^^^^^^ requires that `'1` must outlive `'2`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "aed0dcc1a67ea14ae48268c447dc09c80533c8f7", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-both-are-structs-earlybound-regions.nll.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-earlybound-regions.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-earlybound-regions.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-earlybound-regions.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,15 +4,16 @@ warning: not reporting region error due to nll\n LL |     x.push(y); //~ ERROR lifetime mismatch\n    |            ^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-both-are-structs-earlybound-regions.rs:18:5\n    |\n LL | fn foo<'a, 'b>(mut x: Vec<Ref<'a>>, y: Ref<'b>)\n-   |                           -------      ------- these two types are declared with different lifetimes...\n+   |        --  -- lifetime `'b` defined here\n+   |        |\n+   |        lifetime `'a` defined here\n ...\n LL |     x.push(y); //~ ERROR lifetime mismatch\n-   |     ^^^^^^^^^ ...but data from `y` flows into `x` here\n+   |     ^^^^^^^^^ argument requires that `'b` must outlive `'a`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "7790d37d1c40dafc2cd76843919e6bc89e0c7d8d", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-both-are-structs-latebound-regions.nll.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-latebound-regions.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-latebound-regions.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-latebound-regions.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,14 +4,15 @@ warning: not reporting region error due to nll\n LL |     x.push(y); //~ ERROR lifetime mismatch\n    |            ^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-both-are-structs-latebound-regions.rs:15:5\n    |\n LL | fn foo<'a, 'b>(mut x: Vec<Ref<'a>>, y: Ref<'b>) {\n-   |                           -------      ------- these two types are declared with different lifetimes...\n+   |        --  -- lifetime `'b` defined here\n+   |        |\n+   |        lifetime `'a` defined here\n LL |     x.push(y); //~ ERROR lifetime mismatch\n-   |     ^^^^^^^^^ ...but data from `y` flows into `x` here\n+   |     ^^^^^^^^^ argument requires that `'b` must outlive `'a`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "c9542d31069799f69fb1b283af44ba246673be68", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-both-are-structs.nll.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,14 +4,15 @@ warning: not reporting region error due to nll\n LL |     x.push(y); //~ ERROR lifetime mismatch\n    |            ^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-both-are-structs.rs:15:5\n    |\n LL | fn foo(mut x: Vec<Ref>, y: Ref) {\n-   |                   ---      --- these two types are declared with different lifetimes...\n+   |                   ---      --- lifetime `'1` appears in this type\n+   |                   |\n+   |                   lifetime `'2` appears in this type\n LL |     x.push(y); //~ ERROR lifetime mismatch\n-   |     ^^^^^^^^^ ...but data from `y` flows into `x` here\n+   |     ^^^^^^^^^ argument requires that `'1` must outlive `'2`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "459a93813a8cae1a53288821be9557d27640a539", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-latebound-regions.nll.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-latebound-regions.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-latebound-regions.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-latebound-regions.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,14 +4,15 @@ warning: not reporting region error due to nll\n LL |     x.push(y); //~ ERROR lifetime mismatch\n    |            ^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-latebound-regions.rs:12:5\n    |\n LL | fn foo<'a,'b>(x: &mut Vec<&'a u8>, y: &'b u8) {\n-   |                           ------      ------ these two types are declared with different lifetimes...\n+   |        -- -- lifetime `'b` defined here\n+   |        |\n+   |        lifetime `'a` defined here\n LL |     x.push(y); //~ ERROR lifetime mismatch\n-   |     ^^^^^^^^^ ...but data from `y` flows into `x` here\n+   |     ^^^^^^^^^ argument requires that `'b` must outlive `'a`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "459796760e1b490cc3f076080a69d5fbeb0c9b03", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-one-is-struct-2.nll.stderr", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct-2.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,15 +4,15 @@ warning: not reporting region error due to nll\n LL |     y = x.b; //~ ERROR lifetime mismatch\n    |         ^^^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-one-is-struct-2.rs:14:5\n    |\n LL | fn foo(mut x: Ref, y: &u32) {\n-   |               ---     ----\n+   |               ---     - let's call the lifetime of this reference `'2`\n    |               |\n-   |               these two types are declared with different lifetimes...\n+   |               lifetime `'1` appears in this type\n LL |     y = x.b; //~ ERROR lifetime mismatch\n-   |     ^^^^^^^ ...but data from `x` flows into `y` here\n+   |     ^^^^^^^ requires that `'1` must outlive `'2`\n \n error[E0384]: cannot assign to immutable argument `y`\n   --> $DIR/ex3-both-anon-regions-one-is-struct-2.rs:14:5\n@@ -24,5 +24,4 @@ LL |     y = x.b; //~ ERROR lifetime mismatch\n \n error: aborting due to 2 previous errors\n \n-Some errors occurred: E0384, E0623.\n-For more information about an error, try `rustc --explain E0384`.\n+For more information about this error, try `rustc --explain E0384`."}, {"sha": "5fc1755ed390ac083a09157882e436d57ca04bfe", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-one-is-struct-3.nll.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct-3.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,14 +4,15 @@ warning: not reporting region error due to nll\n LL |     y.b = x; //~ ERROR lifetime mismatch\n    |           ^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-one-is-struct-3.rs:14:5\n    |\n LL | fn foo(mut y: Ref, x: &u32) {\n-   |               ---     ---- these two types are declared with different lifetimes...\n+   |               ---     - let's call the lifetime of this reference `'1`\n+   |               |\n+   |               lifetime `'2` appears in this type\n LL |     y.b = x; //~ ERROR lifetime mismatch\n-   |     ^^^^^^^ ...but data from `x` flows into `y` here\n+   |     ^^^^^^^ requires that `'1` must outlive `'2`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "835f95880a744b43d92e0ab8a36b93d612061169", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-one-is-struct-4.nll.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct-4.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct-4.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct-4.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,14 +4,15 @@ warning: not reporting region error due to nll\n LL |     y.b = x; //~ ERROR lifetime mismatch\n    |           ^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-one-is-struct-4.rs:14:5\n    |\n LL | fn foo(mut y: Ref, x: &u32) {\n-   |               ---     ---- these two types are declared with different lifetimes...\n+   |               ---     - let's call the lifetime of this reference `'1`\n+   |               |\n+   |               lifetime `'2` appears in this type\n LL |     y.b = x; //~ ERROR lifetime mismatch\n-   |     ^^^^^^^ ...but data from `x` flows into `y` here\n+   |     ^^^^^^^ requires that `'1` must outlive `'2`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "7aed5fe626f060d04f19e241e08e6a7dc9b24124", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-one-is-struct.nll.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,14 +4,15 @@ warning: not reporting region error due to nll\n LL |     x.b = y; //~ ERROR lifetime mismatch\n    |           ^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-one-is-struct.rs:17:5\n    |\n LL | fn foo(mut x: Ref, y: &u32) {\n-   |               ---     ---- these two types are declared with different lifetimes...\n+   |               ---     - let's call the lifetime of this reference `'1`\n+   |               |\n+   |               lifetime `'2` appears in this type\n LL |     x.b = y; //~ ERROR lifetime mismatch\n-   |     ^^^^^^^ ...but data from `y` flows into `x` here\n+   |     ^^^^^^^ requires that `'1` must outlive `'2`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "22581d9b0751f1be945cc322cece57ebb5561b40", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-return-type-is-anon.nll.stderr", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-return-type-is-anon.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-return-type-is-anon.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-return-type-is-anon.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,16 +4,15 @@ warning: not reporting region error due to nll\n LL |     x //~ ERROR lifetime mismatch\n    |     ^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-return-type-is-anon.rs:17:5\n    |\n LL |   fn foo<'a>(&self, x: &i32) -> &i32 {\n-   |                        ----     ----\n-   |                        |\n-   |                        this parameter and the return type are declared with different lifetimes...\n+   |              -         - let's call the lifetime of this reference `'1`\n+   |              |\n+   |              let's call the lifetime of this reference `'2`\n LL |     x //~ ERROR lifetime mismatch\n-   |     ^ ...but data from `x` is returned here\n+   |     ^ function was supposed to return data with lifetime `'1` but it is returning data with lifetime `'2`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "908526d439e8b389e6d43600fe9c3d5812c5cdfe", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-self-is-anon.nll.stderr", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-self-is-anon.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-self-is-anon.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-self-is-anon.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,16 +4,15 @@ warning: not reporting region error due to nll\n LL |         if true { x } else { self } //~ ERROR lifetime mismatch\n    |                   ^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-self-is-anon.rs:17:9\n    |\n LL |     fn foo<'a>(&self, x: &Foo) -> &Foo {\n-   |                          ----     ----\n-   |                          |\n-   |                          this parameter and the return type are declared with different lifetimes...\n+   |                -         - let's call the lifetime of this reference `'1`\n+   |                |\n+   |                let's call the lifetime of this reference `'2`\n LL |         if true { x } else { self } //~ ERROR lifetime mismatch\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ ...but data from `x` is returned here\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ requires that `'1` must outlive `'2`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "2829ec35000439fbdffb276fdcbb610b57bbd618", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-using-fn-items.nll.stderr", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-using-fn-items.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-using-fn-items.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-using-fn-items.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,23 +4,24 @@ warning: not reporting region error due to nll\n LL |   y.push(z); //~ ERROR lifetime mismatch\n    |          ^\n \n-error[E0623]: lifetime mismatch\n+error[E0596]: cannot borrow `y` as mutable, as it is not declared as mutable\n   --> $DIR/ex3-both-anon-regions-using-fn-items.rs:11:3\n    |\n LL | fn foo(x:fn(&u8, &u8), y: Vec<&u8>, z: &u8) {\n-   |                               ---      --- these two types are declared with different lifetimes...\n+   |                        - help: consider changing this to be mutable: `mut y`\n LL |   y.push(z); //~ ERROR lifetime mismatch\n-   |   ^^^^^^^^^ ...but data from `z` flows into `y` here\n+   |   ^ cannot borrow as mutable\n \n-error[E0596]: cannot borrow `y` as mutable, as it is not declared as mutable\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-using-fn-items.rs:11:3\n    |\n LL | fn foo(x:fn(&u8, &u8), y: Vec<&u8>, z: &u8) {\n-   |                        - help: consider changing this to be mutable: `mut y`\n+   |                               -        - let's call the lifetime of this reference `'1`\n+   |                               |\n+   |                               let's call the lifetime of this reference `'2`\n LL |   y.push(z); //~ ERROR lifetime mismatch\n-   |   ^ cannot borrow as mutable\n+   |   ^^^^^^^^^ argument requires that `'1` must outlive `'2`\n \n error: aborting due to 2 previous errors\n \n-Some errors occurred: E0596, E0623.\n-For more information about an error, try `rustc --explain E0596`.\n+For more information about this error, try `rustc --explain E0596`."}, {"sha": "44d68df4b5590ad2e0f916abb16727ece809ed27", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-using-impl-items.nll.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-using-impl-items.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-using-impl-items.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-using-impl-items.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,14 +4,15 @@ warning: not reporting region error due to nll\n LL |         x.push(y); //~ ERROR lifetime mismatch\n    |                ^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-using-impl-items.rs:15:9\n    |\n LL |     fn foo(x: &mut Vec<&u8>, y: &u8) {\n-   |                        ---      --- these two types are declared with different lifetimes...\n+   |                        -        - let's call the lifetime of this reference `'1`\n+   |                        |\n+   |                        let's call the lifetime of this reference `'2`\n LL |         x.push(y); //~ ERROR lifetime mismatch\n-   |         ^^^^^^^^^ ...but data from `y` flows into `x` here\n+   |         ^^^^^^^^^ argument requires that `'1` must outlive `'2`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "5d3c6f38ad808cb433765b56ca18de0cd4e10203", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-using-trait-objects.nll.stderr", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-using-trait-objects.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-using-trait-objects.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-using-trait-objects.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,23 +4,24 @@ warning: not reporting region error due to nll\n LL |   y.push(z); //~ ERROR lifetime mismatch\n    |          ^\n \n-error[E0623]: lifetime mismatch\n+error[E0596]: cannot borrow `y` as mutable, as it is not declared as mutable\n   --> $DIR/ex3-both-anon-regions-using-trait-objects.rs:11:3\n    |\n LL | fn foo(x:Box<Fn(&u8, &u8)> , y: Vec<&u8>, z: &u8) {\n-   |                 ---  --- these two types are declared with different lifetimes...\n+   |                              - help: consider changing this to be mutable: `mut y`\n LL |   y.push(z); //~ ERROR lifetime mismatch\n-   |   ^^^^^^^^^ ...but data from `z` flows into `y` here\n+   |   ^ cannot borrow as mutable\n \n-error[E0596]: cannot borrow `y` as mutable, as it is not declared as mutable\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-using-trait-objects.rs:11:3\n    |\n LL | fn foo(x:Box<Fn(&u8, &u8)> , y: Vec<&u8>, z: &u8) {\n-   |                              - help: consider changing this to be mutable: `mut y`\n+   |                                     -        - let's call the lifetime of this reference `'1`\n+   |                                     |\n+   |                                     let's call the lifetime of this reference `'2`\n LL |   y.push(z); //~ ERROR lifetime mismatch\n-   |   ^ cannot borrow as mutable\n+   |   ^^^^^^^^^ argument requires that `'1` must outlive `'2`\n \n error: aborting due to 2 previous errors\n \n-Some errors occurred: E0596, E0623.\n-For more information about an error, try `rustc --explain E0596`.\n+For more information about this error, try `rustc --explain E0596`."}, {"sha": "6460e5d687ff0f752ad514c258cc0c09e9483104", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions.nll.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions.nll.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,14 +4,15 @@ warning: not reporting region error due to nll\n LL |     x.push(y); //~ ERROR lifetime mismatch\n    |            ^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions.rs:12:5\n    |\n LL | fn foo(x: &mut Vec<&u8>, y: &u8) {\n-   |                    ---      --- these two types are declared with different lifetimes...\n+   |                    -        - let's call the lifetime of this reference `'1`\n+   |                    |\n+   |                    let's call the lifetime of this reference `'2`\n LL |     x.push(y); //~ ERROR lifetime mismatch\n-   |     ^^^^^^^^^ ...but data from `y` flows into `x` here\n+   |     ^^^^^^^^^ argument requires that `'1` must outlive `'2`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "d79be8b83c61fa6156980341eaeae4f106d41f4a", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.rs?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -51,7 +51,7 @@ fn demand_y<'x, 'y>(_cell_x: &Cell<&'x u32>, _cell_y: &Cell<&'y u32>, _y: &'y u3\n #[rustc_regions]\n fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n-        //~^ ERROR lifetime mismatch\n+        //~^ ERROR unsatisfied lifetime constraints\n \n         // Only works if 'x: 'y:\n         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to nll"}, {"sha": "fe67ca0293e06bed86d4dd0d5931afba43c0e948", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-ref.stderr", "status": "modified", "additions": 17, "deletions": 18, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -9,7 +9,7 @@ note: External requirements\n    |\n LL |       establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n    |  _______________________________________________^\n-LL | |         //~^ ERROR lifetime mismatch\n+LL | |         //~^ ERROR unsatisfied lifetime constraints\n LL | |\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to nll\n@@ -23,27 +23,12 @@ LL | |     });\n    = note: number of external vids: 5\n    = note: where '_#1r: '_#2r\n \n-error[E0623]: lifetime mismatch\n-  --> $DIR/propagate-approximated-ref.rs:53:5\n-   |\n-LL |   fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n-   |                                  -------                -------\n-   |                                  |\n-   |                                  these two types are declared with different lifetimes...\n-LL | /     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n-LL | |         //~^ ERROR lifetime mismatch\n-LL | |\n-LL | |         // Only works if 'x: 'y:\n-LL | |         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to nll\n-LL | |     });\n-   | |______^ ...but data from `cell_a` flows into `cell_b` here\n-\n note: No external requirements\n   --> $DIR/propagate-approximated-ref.rs:52:1\n    |\n LL | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n LL | |     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n-LL | |         //~^ ERROR lifetime mismatch\n+LL | |         //~^ ERROR unsatisfied lifetime constraints\n LL | |\n ...  |\n LL | |     });\n@@ -52,6 +37,20 @@ LL | | }\n    |\n    = note: defining type: DefId(0/0:6 ~ propagate_approximated_ref[317d]::supply[0]) with substs []\n \n+error: unsatisfied lifetime constraints\n+  --> $DIR/propagate-approximated-ref.rs:53:5\n+   |\n+LL |   fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n+   |             --  -- lifetime `'b` defined here\n+   |             |\n+   |             lifetime `'a` defined here\n+LL | /     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n+LL | |         //~^ ERROR unsatisfied lifetime constraints\n+LL | |\n+LL | |         // Only works if 'x: 'y:\n+LL | |         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to nll\n+LL | |     });\n+   | |______^ argument requires that `'a` must outlive `'b`\n+\n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "bf24557398d161d3e696c945249e45503f094f8c", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-val.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.rs?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -44,7 +44,7 @@ fn demand_y<'x, 'y>(_outlives1: Cell<&&'x u32>, _outlives2: Cell<&'y &u32>, _y:\n #[rustc_regions]\n fn test<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n     establish_relationships(cell_a, cell_b, |outlives1, outlives2, x, y| {\n-        //~^ ERROR lifetime mismatch\n+        //~^ ERROR unsatisfied lifetime constraints\n \n         // Only works if 'x: 'y:\n         demand_y(outlives1, outlives2, x.get()) //~ WARNING not reporting region error due to nll"}, {"sha": "ed1fc6e1a712fe5bcef02c58e7d5657be2c098a3", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-val.stderr", "status": "modified", "additions": 17, "deletions": 18, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -9,7 +9,7 @@ note: External requirements\n    |\n LL |       establish_relationships(cell_a, cell_b, |outlives1, outlives2, x, y| {\n    |  _____________________________________________^\n-LL | |         //~^ ERROR lifetime mismatch\n+LL | |         //~^ ERROR unsatisfied lifetime constraints\n LL | |\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(outlives1, outlives2, x.get()) //~ WARNING not reporting region error due to nll\n@@ -23,27 +23,12 @@ LL | |     });\n    = note: number of external vids: 5\n    = note: where '_#1r: '_#2r\n \n-error[E0623]: lifetime mismatch\n-  --> $DIR/propagate-approximated-val.rs:46:5\n-   |\n-LL |   fn test<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n-   |                                -------                -------\n-   |                                |\n-   |                                these two types are declared with different lifetimes...\n-LL | /     establish_relationships(cell_a, cell_b, |outlives1, outlives2, x, y| {\n-LL | |         //~^ ERROR lifetime mismatch\n-LL | |\n-LL | |         // Only works if 'x: 'y:\n-LL | |         demand_y(outlives1, outlives2, x.get()) //~ WARNING not reporting region error due to nll\n-LL | |     });\n-   | |______^ ...but data from `cell_a` flows into `cell_b` here\n-\n note: No external requirements\n   --> $DIR/propagate-approximated-val.rs:45:1\n    |\n LL | / fn test<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n LL | |     establish_relationships(cell_a, cell_b, |outlives1, outlives2, x, y| {\n-LL | |         //~^ ERROR lifetime mismatch\n+LL | |         //~^ ERROR unsatisfied lifetime constraints\n LL | |\n ...  |\n LL | |     });\n@@ -52,6 +37,20 @@ LL | | }\n    |\n    = note: defining type: DefId(0/0:6 ~ propagate_approximated_val[317d]::test[0]) with substs []\n \n+error: unsatisfied lifetime constraints\n+  --> $DIR/propagate-approximated-val.rs:46:5\n+   |\n+LL |   fn test<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n+   |           --  -- lifetime `'b` defined here\n+   |           |\n+   |           lifetime `'a` defined here\n+LL | /     establish_relationships(cell_a, cell_b, |outlives1, outlives2, x, y| {\n+LL | |         //~^ ERROR unsatisfied lifetime constraints\n+LL | |\n+LL | |         // Only works if 'x: 'y:\n+LL | |         demand_y(outlives1, outlives2, x.get()) //~ WARNING not reporting region error due to nll\n+LL | |     });\n+   | |______^ argument requires that `'a` must outlive `'b`\n+\n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "a883e7b1994737ce4a97dacfd16506ebfd2df73c", "filename": "src/test/ui/nll/closure-requirements/region-lbr1-does-not-outlive-ebr2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-not-outlive-ebr2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-not-outlive-ebr2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-not-outlive-ebr2.rs?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -18,7 +18,7 @@\n fn foo<'a, 'b>(x: &'a u32, y: &'b u32) -> &'b u32 {\n     &*x\n         //~^ WARN not reporting region error due to nll\n-        //~| ERROR lifetime mismatch\n+        //~| ERROR unsatisfied lifetime constraints\n }\n \n fn main() { }"}, {"sha": "cf3f4df19ae52581d465bd2cab9f7e69d95b8967", "filename": "src/test/ui/nll/closure-requirements/region-lbr1-does-not-outlive-ebr2.stderr", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-not-outlive-ebr2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-not-outlive-ebr2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-not-outlive-ebr2.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -4,16 +4,15 @@ warning: not reporting region error due to nll\n LL |     &*x\n    |     ^^^\n \n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/region-lbr1-does-not-outlive-ebr2.rs:19:5\n    |\n LL | fn foo<'a, 'b>(x: &'a u32, y: &'b u32) -> &'b u32 {\n-   |                   -------                 -------\n-   |                   |\n-   |                   this parameter and the return type are declared with different lifetimes...\n+   |        --  -- lifetime `'b` defined here\n+   |        |\n+   |        lifetime `'a` defined here\n LL |     &*x\n-   |     ^^^ ...but data from `x` is returned here\n+   |     ^^^ requires that `'a` must outlive `'b`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}, {"sha": "e484c249d84a59446baf51615ba2e2bcfd408b17", "filename": "src/test/ui/nll/issue-52113.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Fnll%2Fissue-52113.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Fnll%2Fissue-52113.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-52113.rs?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -40,7 +40,7 @@ fn produce3<'a, 'b: 'a>(data: &'a mut Vec<&'a u32>, value: &'b u32) -> impl Bazi\n }\n \n fn produce_err<'a, 'b: 'a>(data: &'b mut Vec<&'b u32>, value: &'a u32) -> impl Bazinga + 'b {\n-    let x = move || { //~ ERROR lifetime mismatch\n+    let x = move || { //~ ERROR unsatisfied lifetime constraints\n         let value: &'a u32 = value;\n         data.push(value);\n     };"}, {"sha": "b21539361e66f8a2dbd021c46a471c0bbf85ec41", "filename": "src/test/ui/nll/issue-52113.stderr", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Fnll%2Fissue-52113.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b/src%2Ftest%2Fui%2Fnll%2Fissue-52113.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-52113.stderr?ref=37ba9ca3343f6b51f1c1db1c8d9ad72aa5287a9b", "patch": "@@ -1,11 +1,12 @@\n-error[E0623]: lifetime mismatch\n+error: unsatisfied lifetime constraints\n   --> $DIR/issue-52113.rs:43:9\n    |\n LL | fn produce_err<'a, 'b: 'a>(data: &'b mut Vec<&'b u32>, value: &'a u32) -> impl Bazinga + 'b {\n-   |                                  --------------------         ------- these two types are declared with different lifetimes...\n-LL |     let x = move || { //~ ERROR lifetime mismatch\n-   |         ^ ...but data from `value` flows into `data` here\n+   |                --  -- lifetime `'b` defined here\n+   |                |\n+   |                lifetime `'a` defined here\n+LL |     let x = move || { //~ ERROR unsatisfied lifetime constraints\n+   |         ^ requires that `'a` must outlive `'b`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0623`."}]}