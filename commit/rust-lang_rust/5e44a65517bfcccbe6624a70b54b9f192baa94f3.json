{"sha": "5e44a65517bfcccbe6624a70b54b9f192baa94f3", "node_id": "C_kwDOAAsO6NoAKDVlNDRhNjU1MTdiZmNjY2JlNjYyNGE3MGI1NGI5ZjE5MmJhYTk0ZjM", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-12-09T02:27:03Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-12-09T02:29:51Z"}, "message": "Implement allow-by-default multiple_supertrait_upcastable lint", "tree": {"sha": "acbb2748e4bb82e0d2cfac54ac40fe49416f1702", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/acbb2748e4bb82e0d2cfac54ac40fe49416f1702"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e44a65517bfcccbe6624a70b54b9f192baa94f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e44a65517bfcccbe6624a70b54b9f192baa94f3", "html_url": "https://github.com/rust-lang/rust/commit/5e44a65517bfcccbe6624a70b54b9f192baa94f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e44a65517bfcccbe6624a70b54b9f192baa94f3/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7632db0e87d8adccc9a83a47795c9411b1455855", "url": "https://api.github.com/repos/rust-lang/rust/commits/7632db0e87d8adccc9a83a47795c9411b1455855", "html_url": "https://github.com/rust-lang/rust/commit/7632db0e87d8adccc9a83a47795c9411b1455855"}], "stats": {"total": 74, "additions": 74, "deletions": 0}, "files": [{"sha": "2be59deb70521ab88b414375a39d30a431acb4ab", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e44a65517bfcccbe6624a70b54b9f192baa94f3/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e44a65517bfcccbe6624a70b54b9f192baa94f3/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=5e44a65517bfcccbe6624a70b54b9f192baa94f3", "patch": "@@ -160,6 +160,8 @@ declare_features! (\n     (active, intrinsics, \"1.0.0\", None, None),\n     /// Allows using `#[lang = \"..\"]` attribute for linking items to special compiler logic.\n     (active, lang_items, \"1.0.0\", None, None),\n+    /// Allows the `multiple_supertrait_upcastable` lint.\n+    (active, multiple_supertrait_upcastable, \"CURRENT_RUSTC_VERSION\", None, None),\n     /// Allows using `#[omit_gdb_pretty_printer_section]`.\n     (active, omit_gdb_pretty_printer_section, \"1.5.0\", None, None),\n     /// Allows using `#[prelude_import]` on glob `use` items."}, {"sha": "f9c86f8b5f316ead64067f8a344b00881eb8b5bd", "filename": "compiler/rustc_lint/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5e44a65517bfcccbe6624a70b54b9f192baa94f3/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e44a65517bfcccbe6624a70b54b9f192baa94f3/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flib.rs?ref=5e44a65517bfcccbe6624a70b54b9f192baa94f3", "patch": "@@ -61,6 +61,7 @@ mod late;\n mod let_underscore;\n mod levels;\n mod methods;\n+mod multiple_supertrait_upcastable;\n mod non_ascii_idents;\n mod non_fmt_panic;\n mod nonstandard_style;\n@@ -95,6 +96,7 @@ use hidden_unicode_codepoints::*;\n use internal::*;\n use let_underscore::*;\n use methods::*;\n+use multiple_supertrait_upcastable::*;\n use non_ascii_idents::*;\n use non_fmt_panic::NonPanicFmt;\n use nonstandard_style::*;\n@@ -228,6 +230,7 @@ late_lint_methods!(\n             InvalidAtomicOrdering: InvalidAtomicOrdering,\n             NamedAsmLabels: NamedAsmLabels,\n             OpaqueHiddenInferredBound: OpaqueHiddenInferredBound,\n+            MultipleSupertraitUpcastable: MultipleSupertraitUpcastable,\n         ]\n     ],\n     ['tcx]"}, {"sha": "5861b826b1ca337309631b1ed4c5e0947f9adaf7", "filename": "compiler/rustc_lint/src/multiple_supertrait_upcastable.rs", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/5e44a65517bfcccbe6624a70b54b9f192baa94f3/compiler%2Frustc_lint%2Fsrc%2Fmultiple_supertrait_upcastable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e44a65517bfcccbe6624a70b54b9f192baa94f3/compiler%2Frustc_lint%2Fsrc%2Fmultiple_supertrait_upcastable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fmultiple_supertrait_upcastable.rs?ref=5e44a65517bfcccbe6624a70b54b9f192baa94f3", "patch": "@@ -0,0 +1,63 @@\n+use crate::{LateContext, LateLintPass, LintContext};\n+\n+use rustc_errors::DelayDm;\n+use rustc_hir as hir;\n+use rustc_span::sym;\n+\n+declare_lint! {\n+    /// The `multiple_supertrait_upcastable` lint detects when an object-safe trait has multiple\n+    /// supertraits.\n+    ///\n+    /// ### Example\n+    ///\n+    /// ```rust\n+    /// trait A {}\n+    /// trait B {}\n+    ///\n+    /// #[warn(multiple_supertrait_upcastable)]\n+    /// trait C: A + B {}\n+    /// ```\n+    ///\n+    /// {{produces}}\n+    ///\n+    /// ### Explanation\n+    ///\n+    /// To support upcasting with multiple supertraits, we need to store multiple vtables and this\n+    /// can result in extra space overhead, even if no code actually uses upcasting.\n+    /// This lint allows users to identify when such scenarios occur and to decide whether the\n+    /// additional overhead is justified.\n+    pub MULTIPLE_SUPERTRAIT_UPCASTABLE,\n+    Allow,\n+    \"detect when an object-safe trait has multiple supertraits\",\n+    @feature_gate = sym::multiple_supertrait_upcastable;\n+}\n+\n+declare_lint_pass!(MultipleSupertraitUpcastable => [MULTIPLE_SUPERTRAIT_UPCASTABLE]);\n+\n+impl<'tcx> LateLintPass<'tcx> for MultipleSupertraitUpcastable {\n+    fn check_item(&mut self, cx: &LateContext<'tcx>, item: &'tcx hir::Item<'tcx>) {\n+        let def_id = item.owner_id.to_def_id();\n+        if let hir::ItemKind::Trait(_, _, _, _, _) = item.kind\n+            && cx.tcx.is_object_safe(def_id)\n+        {\n+            let direct_super_traits_iter = cx.tcx\n+                    .super_predicates_of(def_id)\n+                    .predicates\n+                    .into_iter()\n+                    .filter_map(|(pred, _)| pred.to_opt_poly_trait_pred());\n+            if direct_super_traits_iter.count() > 1 {\n+                cx.struct_span_lint(\n+                    MULTIPLE_SUPERTRAIT_UPCASTABLE,\n+                    cx.tcx.def_span(def_id),\n+                    DelayDm(|| {\n+                        format!(\n+                            \"`{}` is object-safe and has multiple supertraits\",\n+                            item.ident,\n+                        )\n+                    }),\n+                    |diag| diag,\n+                );\n+            }\n+        }\n+    }\n+}"}, {"sha": "2e90bd71ea6ce2b8ba6f413b086237bc01f22774", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5e44a65517bfcccbe6624a70b54b9f192baa94f3/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e44a65517bfcccbe6624a70b54b9f192baa94f3/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=5e44a65517bfcccbe6624a70b54b9f192baa94f3", "patch": "@@ -941,6 +941,7 @@ symbols! {\n         mul,\n         mul_assign,\n         mul_with_overflow,\n+        multiple_supertrait_upcastable,\n         must_not_suspend,\n         must_use,\n         naked,"}, {"sha": "ad22c5b14ae0d50ec7916a7bb96d0f9679409141", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e44a65517bfcccbe6624a70b54b9f192baa94f3/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e44a65517bfcccbe6624a70b54b9f192baa94f3/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=5e44a65517bfcccbe6624a70b54b9f192baa94f3", "patch": "@@ -87,6 +87,7 @@\n #![warn(missing_debug_implementations)]\n #![warn(missing_docs)]\n #![allow(explicit_outlives_requirements)]\n+#![cfg_attr(not(bootstrap), warn(multiple_supertrait_upcastable))]\n //\n // Library features:\n #![feature(alloc_layout_extra)]\n@@ -190,6 +191,7 @@\n #![feature(unsized_fn_params)]\n #![feature(c_unwind)]\n #![feature(with_negative_coherence)]\n+#![cfg_attr(not(bootstrap), feature(multiple_supertrait_upcastable))]\n //\n // Rustdoc features:\n #![feature(doc_cfg)]"}, {"sha": "d2fac23ff18be7542729e0b6793d796daad17dd5", "filename": "library/core/src/error.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5e44a65517bfcccbe6624a70b54b9f192baa94f3/library%2Fcore%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e44a65517bfcccbe6624a70b54b9f192baa94f3/library%2Fcore%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ferror.rs?ref=5e44a65517bfcccbe6624a70b54b9f192baa94f3", "patch": "@@ -28,6 +28,7 @@ use crate::fmt::{Debug, Display};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[cfg_attr(not(test), rustc_diagnostic_item = \"Error\")]\n #[rustc_has_incoherent_inherent_impls]\n+#[cfg_attr(not(bootstrap), allow(multiple_supertrait_upcastable))]\n pub trait Error: Debug + Display {\n     /// The lower-level source of this error, if any.\n     ///"}, {"sha": "825c8541f0d18de0196d0ad9562be68c8cb16438", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e44a65517bfcccbe6624a70b54b9f192baa94f3/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e44a65517bfcccbe6624a70b54b9f192baa94f3/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=5e44a65517bfcccbe6624a70b54b9f192baa94f3", "patch": "@@ -95,6 +95,7 @@\n #![warn(missing_docs)]\n #![allow(explicit_outlives_requirements)]\n #![allow(incomplete_features)]\n+#![cfg_attr(not(bootstrap), warn(multiple_supertrait_upcastable))]\n //\n // Library features:\n #![feature(const_align_offset)]\n@@ -231,6 +232,7 @@\n #![feature(unsized_fn_params)]\n #![feature(asm_const)]\n #![feature(const_transmute_copy)]\n+#![cfg_attr(not(bootstrap), feature(multiple_supertrait_upcastable))]\n //\n // Target features:\n #![feature(arm_target_feature)]"}]}