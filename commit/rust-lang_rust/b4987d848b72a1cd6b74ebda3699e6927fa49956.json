{"sha": "b4987d848b72a1cd6b74ebda3699e6927fa49956", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0OTg3ZDg0OGI3MmExY2Q2Yjc0ZWJkYTM2OTllNjkyN2ZhNDk5NTY=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-06-05T04:41:13Z"}, "committer": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-06-05T04:43:01Z"}, "message": "Allow using mixed layout with comments", "tree": {"sha": "7b1edbfedc9e8496e761d817efeaff15f6c59022", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b1edbfedc9e8496e761d817efeaff15f6c59022"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4987d848b72a1cd6b74ebda3699e6927fa49956", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4987d848b72a1cd6b74ebda3699e6927fa49956", "html_url": "https://github.com/rust-lang/rust/commit/b4987d848b72a1cd6b74ebda3699e6927fa49956", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4987d848b72a1cd6b74ebda3699e6927fa49956/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9631d1209415405600e355358dfd11036132d22", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9631d1209415405600e355358dfd11036132d22", "html_url": "https://github.com/rust-lang/rust/commit/b9631d1209415405600e355358dfd11036132d22"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "24779e1667e3b44b8d7068dc699b0ce26c733833", "filename": "src/lists.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b4987d848b72a1cd6b74ebda3699e6927fa49956/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4987d848b72a1cd6b74ebda3699e6927fa49956/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=b4987d848b72a1cd6b74ebda3699e6927fa49956", "patch": "@@ -228,6 +228,7 @@ where\n     let mut item_max_width: Option<usize> = None;\n     let sep_place =\n         SeparatorPlace::from_tactic(formatting.separator_place, tactic, formatting.separator);\n+    let mut prev_item_had_post_comment = false;\n \n     let mut line_len = 0;\n     let indent_str = &formatting.shape.indent.to_string(formatting.config);\n@@ -284,7 +285,9 @@ where\n                 let total_width = total_item_width(item) + item_sep_len;\n \n                 // 1 is space between separator and item.\n-                if line_len > 0 && line_len + 1 + total_width > formatting.shape.width {\n+                if (line_len > 0 && line_len + 1 + total_width > formatting.shape.width)\n+                    || prev_item_had_post_comment\n+                {\n                     result.push('\\n');\n                     result.push_str(indent_str);\n                     line_len = 0;\n@@ -310,14 +313,15 @@ where\n         // Pre-comments\n         if let Some(ref comment) = item.pre_comment {\n             // Block style in non-vertical mode.\n-            let block_mode = tactic != DefinitiveListTactic::Vertical;\n+            let block_mode = tactic == DefinitiveListTactic::Horizontal;\n             // Width restriction is only relevant in vertical mode.\n             let comment =\n                 rewrite_comment(comment, block_mode, formatting.shape, formatting.config)?;\n             result.push_str(&comment);\n \n             if !inner_item.is_empty() {\n-                if tactic == DefinitiveListTactic::Vertical {\n+                if tactic == DefinitiveListTactic::Vertical || tactic == DefinitiveListTactic::Mixed\n+                {\n                     // We cannot keep pre-comments on the same line if the comment if normalized.\n                     let keep_comment = if formatting.config.normalize_comments()\n                         || item.pre_comment_style == ListItemCommentStyle::DifferentLine\n@@ -349,7 +353,7 @@ where\n         result.push_str(inner_item);\n \n         // Post-comments\n-        if tactic != DefinitiveListTactic::Vertical && item.post_comment.is_some() {\n+        if tactic == DefinitiveListTactic::Horizontal && item.post_comment.is_some() {\n             let comment = item.post_comment.as_ref().unwrap();\n             let formatted_comment = rewrite_comment(\n                 comment,\n@@ -366,7 +370,7 @@ where\n             result.push_str(formatting.separator);\n         }\n \n-        if tactic == DefinitiveListTactic::Vertical && item.post_comment.is_some() {\n+        if tactic != DefinitiveListTactic::Horizontal && item.post_comment.is_some() {\n             let comment = item.post_comment.as_ref().unwrap();\n             let overhead = last_line_width(&result) + first_line_width(comment.trim());\n \n@@ -446,6 +450,8 @@ where\n             item_max_width = None;\n             result.push('\\n');\n         }\n+\n+        prev_item_had_post_comment = item.post_comment.is_some();\n     }\n \n     Some(result)"}, {"sha": "62675b4002c45ff2e222ab33c788cf81159ea615", "filename": "src/overflow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4987d848b72a1cd6b74ebda3699e6927fa49956/src%2Foverflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4987d848b72a1cd6b74ebda3699e6927fa49956/src%2Foverflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foverflow.rs?ref=b4987d848b72a1cd6b74ebda3699e6927fa49956", "patch": "@@ -530,5 +530,5 @@ fn shape_from_indent_style(\n \n fn no_long_items(list: &[ListItem]) -> bool {\n     list.iter()\n-        .all(|item| !item.has_comment() && item.inner_as_ref().len() <= SHORT_ITEM_THRESHOLD)\n+        .all(|item| item.inner_as_ref().len() <= SHORT_ITEM_THRESHOLD)\n }"}]}