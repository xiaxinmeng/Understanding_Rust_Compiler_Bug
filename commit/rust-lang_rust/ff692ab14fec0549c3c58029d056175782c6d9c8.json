{"sha": "ff692ab14fec0549c3c58029d056175782c6d9c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmNjkyYWIxNGZlYzA1NDljM2M1ODAyOWQwNTYxNzU3ODJjNmQ5Yzg=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-08-07T22:27:46Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-08-07T22:57:30Z"}, "message": "fix clippy::clone_on_copy: don't clone types that are copy", "tree": {"sha": "02ee52031aaea4e9e20ad96016b4d5e8c097e113", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02ee52031aaea4e9e20ad96016b4d5e8c097e113"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff692ab14fec0549c3c58029d056175782c6d9c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff692ab14fec0549c3c58029d056175782c6d9c8", "html_url": "https://github.com/rust-lang/rust/commit/ff692ab14fec0549c3c58029d056175782c6d9c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff692ab14fec0549c3c58029d056175782c6d9c8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15dcda36e6df44bc396208c8aeccba8fca2957ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/15dcda36e6df44bc396208c8aeccba8fca2957ad", "html_url": "https://github.com/rust-lang/rust/commit/15dcda36e6df44bc396208c8aeccba8fca2957ad"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "ccba904df9e002270f5e3655568ea091b5fecc35", "filename": "src/librustc_infer/infer/glb.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff692ab14fec0549c3c58029d056175782c6d9c8/src%2Flibrustc_infer%2Finfer%2Fglb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff692ab14fec0549c3c58029d056175782c6d9c8/src%2Flibrustc_infer%2Finfer%2Fglb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fglb.rs?ref=ff692ab14fec0549c3c58029d056175782c6d9c8", "patch": "@@ -50,7 +50,7 @@ impl TypeRelation<'tcx> for Glb<'combine, 'infcx, 'tcx> {\n             ty::Invariant => self.fields.equate(self.a_is_expected).relate(a, b),\n             ty::Covariant => self.relate(a, b),\n             // FIXME(#41044) -- not correct, need test\n-            ty::Bivariant => Ok(a.clone()),\n+            ty::Bivariant => Ok(a),\n             ty::Contravariant => self.fields.lub(self.a_is_expected).relate(a, b),\n         }\n     }\n@@ -97,7 +97,7 @@ impl TypeRelation<'tcx> for Glb<'combine, 'infcx, 'tcx> {\n         // very challenging, switch to invariance. This is obviously\n         // overly conservative but works ok in practice.\n         self.relate_with_variance(ty::Variance::Invariant, a, b)?;\n-        Ok(a.clone())\n+        Ok(a)\n     }\n }\n "}, {"sha": "3f5ed36035c1a3c38a8d27c866cffc53b1c64f85", "filename": "src/librustc_infer/infer/nll_relate/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff692ab14fec0549c3c58029d056175782c6d9c8/src%2Flibrustc_infer%2Finfer%2Fnll_relate%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff692ab14fec0549c3c58029d056175782c6d9c8/src%2Flibrustc_infer%2Finfer%2Fnll_relate%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fnll_relate%2Fmod.rs?ref=ff692ab14fec0549c3c58029d056175782c6d9c8", "patch": "@@ -719,7 +719,7 @@ where\n             self.a_scopes.pop().unwrap();\n         }\n \n-        Ok(a.clone())\n+        Ok(a)\n     }\n }\n "}, {"sha": "308f884f9a63fd59d88fd0acd9f5e1d831722ee6", "filename": "src/librustc_infer/infer/sub.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff692ab14fec0549c3c58029d056175782c6d9c8/src%2Flibrustc_infer%2Finfer%2Fsub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff692ab14fec0549c3c58029d056175782c6d9c8/src%2Flibrustc_infer%2Finfer%2Fsub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fsub.rs?ref=ff692ab14fec0549c3c58029d056175782c6d9c8", "patch": "@@ -68,7 +68,7 @@ impl TypeRelation<'tcx> for Sub<'combine, 'infcx, 'tcx> {\n         match variance {\n             ty::Invariant => self.fields.equate(self.a_is_expected).relate(a, b),\n             ty::Covariant => self.relate(a, b),\n-            ty::Bivariant => Ok(a.clone()),\n+            ty::Bivariant => Ok(a),\n             ty::Contravariant => self.with_expected_switched(|this| this.relate(b, a)),\n         }\n     }"}, {"sha": "9296e2ca7008fdb4840830992c8c052576cf9063", "filename": "src/librustc_mir/transform/validate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff692ab14fec0549c3c58029d056175782c6d9c8/src%2Flibrustc_mir%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff692ab14fec0549c3c58029d056175782c6d9c8/src%2Flibrustc_mir%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fvalidate.rs?ref=ff692ab14fec0549c3c58029d056175782c6d9c8", "patch": "@@ -115,7 +115,7 @@ pub fn equal_up_to_regions(\n             T: Relate<'tcx>,\n         {\n             self.relate(a.skip_binder(), b.skip_binder())?;\n-            Ok(a.clone())\n+            Ok(a)\n         }\n     }\n "}, {"sha": "02eefe5622384a8e4319a99c196466b2027f7897", "filename": "src/librustc_trait_selection/autoderef.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff692ab14fec0549c3c58029d056175782c6d9c8/src%2Flibrustc_trait_selection%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff692ab14fec0549c3c58029d056175782c6d9c8/src%2Flibrustc_trait_selection%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Fautoderef.rs?ref=ff692ab14fec0549c3c58029d056175782c6d9c8", "patch": "@@ -187,7 +187,7 @@ impl<'a, 'tcx> Autoderef<'a, 'tcx> {\n     }\n \n     pub fn span(&self) -> Span {\n-        self.span.clone()\n+        self.span\n     }\n \n     pub fn reached_recursion_limit(&self) -> bool {"}, {"sha": "9ef9164191675cf6432dd918200323153b8fc085", "filename": "src/librustc_typeck/check/dropck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff692ab14fec0549c3c58029d056175782c6d9c8/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff692ab14fec0549c3c58029d056175782c6d9c8/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs?ref=ff692ab14fec0549c3c58029d056175782c6d9c8", "patch": "@@ -368,6 +368,6 @@ impl TypeRelation<'tcx> for SimpleEqRelation<'tcx> {\n         let anon_b = self.tcx.anonymize_late_bound_regions(&b);\n         self.relate(anon_a.skip_binder(), anon_b.skip_binder())?;\n \n-        Ok(a.clone())\n+        Ok(a)\n     }\n }"}]}