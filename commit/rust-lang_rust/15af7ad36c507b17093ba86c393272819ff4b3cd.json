{"sha": "15af7ad36c507b17093ba86c393272819ff4b3cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1YWY3YWQzNmM1MDdiMTcwOTNiYTg2YzM5MzI3MjgxOWZmNGIzY2Q=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2017-12-29T17:47:54Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2017-12-29T17:47:54Z"}, "message": "Use array for infos", "tree": {"sha": "68ac87789899e211bcaf86d3693e11b88e06399a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68ac87789899e211bcaf86d3693e11b88e06399a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15af7ad36c507b17093ba86c393272819ff4b3cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15af7ad36c507b17093ba86c393272819ff4b3cd", "html_url": "https://github.com/rust-lang/rust/commit/15af7ad36c507b17093ba86c393272819ff4b3cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15af7ad36c507b17093ba86c393272819ff4b3cd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5276a7d3be01687e3ea7054ec103711587c9d36e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5276a7d3be01687e3ea7054ec103711587c9d36e", "html_url": "https://github.com/rust-lang/rust/commit/5276a7d3be01687e3ea7054ec103711587c9d36e"}], "stats": {"total": 32, "additions": 9, "deletions": 23}, "files": [{"sha": "4acf381e3c4ea67e57ceb146c70e90a03d52b8de", "filename": "src/bin/gen.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/15af7ad36c507b17093ba86c393272819ff4b3cd/src%2Fbin%2Fgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15af7ad36c507b17093ba86c393272819ff4b3cd/src%2Fbin%2Fgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fgen.rs?ref=15af7ad36c507b17093ba86c393272819ff4b3cd", "patch": "@@ -40,28 +40,20 @@ impl Grammar {\n             ).unwrap();\n         }\n         acc.push_str(\"\\n\");\n+        write!(acc, \"static INFOS: [SyntaxInfo; {}] = [\\n\", self.syntax_kinds.len()).unwrap();\n         for kind in self.syntax_kinds.iter() {\n             let sname = scream(kind);\n             write!(\n                 acc,\n-                \"static {sname}_INFO: SyntaxInfo = SyntaxInfo {{\\n   name: \\\"{sname}\\\",\\n}};\\n\",\n+                \"    SyntaxInfo {{ name: \\\"{sname}\\\" }},\\n\",\n                 sname = sname\n             ).unwrap();\n         }\n+        acc.push_str(\"];\\n\");\n         acc.push_str(\"\\n\");\n \n         acc.push_str(\"pub(crate) fn syntax_info(kind: SyntaxKind) -> &'static SyntaxInfo {\\n\");\n-        acc.push_str(\"    match kind {\\n\");\n-        for kind in self.syntax_kinds.iter() {\n-            let sname = scream(kind);\n-            write!(\n-                acc,\n-                \"        {sname} => &{sname}_INFO,\\n\",\n-                sname = sname\n-            ).unwrap();\n-        }\n-        acc.push_str(\"        _ => unreachable!()\\n\");\n-        acc.push_str(\"    }\\n\");\n+        acc.push_str(\"    &INFOS[kind.0 as usize]\\n\");\n         acc.push_str(\"}\\n\");\n         acc\n     }"}, {"sha": "421cae15acd50f8604a096b7de89927abe54b1a1", "filename": "src/syntax_kinds.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/15af7ad36c507b17093ba86c393272819ff4b3cd/src%2Fsyntax_kinds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15af7ad36c507b17093ba86c393272819ff4b3cd/src%2Fsyntax_kinds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds.rs?ref=15af7ad36c507b17093ba86c393272819ff4b3cd", "patch": "@@ -4,17 +4,11 @@ use tree::{SyntaxKind, SyntaxInfo};\n pub const IDENT: SyntaxKind = SyntaxKind(0);\n pub const WHITESPACE: SyntaxKind = SyntaxKind(1);\n \n-static IDENT_INFO: SyntaxInfo = SyntaxInfo {\n-   name: \"IDENT\",\n-};\n-static WHITESPACE_INFO: SyntaxInfo = SyntaxInfo {\n-   name: \"WHITESPACE\",\n-};\n+static INFOS: [SyntaxInfo; 2] = [\n+    SyntaxInfo { name: \"IDENT\" },\n+    SyntaxInfo { name: \"WHITESPACE\" },\n+];\n \n pub(crate) fn syntax_info(kind: SyntaxKind) -> &'static SyntaxInfo {\n-    match kind {\n-        IDENT => &IDENT_INFO,\n-        WHITESPACE => &WHITESPACE_INFO,\n-        _ => unreachable!()\n-    }\n+    &INFOS[kind.0 as usize]\n }"}]}