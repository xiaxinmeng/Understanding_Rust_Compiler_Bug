{"sha": "66a260617a88ed1ad55a46f03c5a90d5ad3004d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2YTI2MDYxN2E4OGVkMWFkNTVhNDZmMDNjNWE5MGQ1YWQzMDA0ZDM=", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-02-19T11:15:37Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-03-03T20:16:07Z"}, "message": "Increment self.len in specialized ZipImpl to avoid underflow in size_hint", "tree": {"sha": "4fd90a2b08204c89ce4d44754e9386607d790f20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fd90a2b08204c89ce4d44754e9386607d790f20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66a260617a88ed1ad55a46f03c5a90d5ad3004d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66a260617a88ed1ad55a46f03c5a90d5ad3004d3", "html_url": "https://github.com/rust-lang/rust/commit/66a260617a88ed1ad55a46f03c5a90d5ad3004d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66a260617a88ed1ad55a46f03c5a90d5ad3004d3/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "939b14334dfec68d85b01b62c1be0172cee03339", "url": "https://api.github.com/repos/rust-lang/rust/commits/939b14334dfec68d85b01b62c1be0172cee03339", "html_url": "https://github.com/rust-lang/rust/commit/939b14334dfec68d85b01b62c1be0172cee03339"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "ce48016afcd5006f206ac6289040c9552bdf3cb1", "filename": "library/core/src/iter/adapters/zip.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/66a260617a88ed1ad55a46f03c5a90d5ad3004d3/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66a260617a88ed1ad55a46f03c5a90d5ad3004d3/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs?ref=66a260617a88ed1ad55a46f03c5a90d5ad3004d3", "patch": "@@ -200,6 +200,7 @@ where\n         } else if A::MAY_HAVE_SIDE_EFFECT && self.index < self.a.size() {\n             let i = self.index;\n             self.index += 1;\n+            self.len += 1;\n             // match the base implementation's potential side effects\n             // SAFETY: we just checked that `i` < `self.a.len()`\n             unsafe {"}]}