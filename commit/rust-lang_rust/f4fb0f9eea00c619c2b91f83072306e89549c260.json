{"sha": "f4fb0f9eea00c619c2b91f83072306e89549c260", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0ZmIwZjllZWEwMGM2MTljMmI5MWY4MzA3MjMwNmU4OTU0OWMyNjA=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-07T02:20:38Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-07T02:23:26Z"}, "message": "Handle regions correctly in class ctors and dtors\n\nClass ctors and dtors were always getting assigned the empty region\nbefore, which meant a reference to the \"self\" region in a ctor argument\ngot resolved to a named region called \"self\" rather than the class's\nself region, which led to a rather confusing error message as documented\nin #2502.\n\nCloses #2502", "tree": {"sha": "6e26c7ce3e24434fddd8ccccdc9e99fbbe47a5e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e26c7ce3e24434fddd8ccccdc9e99fbbe47a5e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4fb0f9eea00c619c2b91f83072306e89549c260", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4fb0f9eea00c619c2b91f83072306e89549c260", "html_url": "https://github.com/rust-lang/rust/commit/f4fb0f9eea00c619c2b91f83072306e89549c260", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4fb0f9eea00c619c2b91f83072306e89549c260/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b4cfdeee20eb54d43612fed461729ffa6f6d2ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b4cfdeee20eb54d43612fed461729ffa6f6d2ec", "html_url": "https://github.com/rust-lang/rust/commit/3b4cfdeee20eb54d43612fed461729ffa6f6d2ec"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "e81bd9d35478076ae98764e273397441bb3d40ac", "filename": "src/rustc/middle/typeck/collect.rs", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f4fb0f9eea00c619c2b91f83072306e89549c260/src%2Frustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4fb0f9eea00c619c2b91f83072306e89549c260/src%2Frustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcollect.rs?ref=f4fb0f9eea00c619c2b91f83072306e89549c260", "patch": "@@ -369,31 +369,23 @@ fn convert(ccx: @crate_ctxt, it: @ast::item) {\n         let t_ctor =\n             ty::mk_fn(\n                 tcx,\n-                ty_of_fn_decl(ccx,\n-                                       empty_rscope,\n-                                       ast::proto_any,\n-                                       ctor.node.dec,\n-                                       none));\n+                ty_of_fn_decl(ccx, type_rscope(rp), ast::proto_any,\n+                              ctor.node.dec, none));\n         write_ty_to_tcx(tcx, ctor.node.id, t_ctor);\n         tcx.tcache.insert(local_def(ctor.node.id),\n                           {bounds: tpt.bounds,\n-                           rp: ast::rp_none,\n+                           rp: rp,\n                            ty: t_ctor});\n         option::iter(m_dtor) {|dtor|\n             // Write the dtor type\n             let t_dtor = ty::mk_fn(\n                 tcx,\n-                // not sure about empty_rscope\n-                // FIXME\n-                ty_of_fn_decl(ccx,\n-                                       empty_rscope,\n-                                       ast::proto_any,\n-                                       ast_util::dtor_dec(),\n-                                       none));\n+                ty_of_fn_decl(ccx, type_rscope(rp), ast::proto_any,\n+                              ast_util::dtor_dec(), none));\n             write_ty_to_tcx(tcx, dtor.node.id, t_dtor);\n             tcx.tcache.insert(local_def(dtor.node.id),\n                               {bounds: tpt.bounds,\n-                               rp: ast::rp_none,\n+                               rp: rp,\n                                ty: t_dtor});\n         };\n         ensure_iface_methods(ccx, it.id);"}, {"sha": "6aa35169dd5c861ab5e57e0ca97de29012baede9", "filename": "src/test/run-pass/issue-2502.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f4fb0f9eea00c619c2b91f83072306e89549c260/src%2Ftest%2Frun-pass%2Fissue-2502.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4fb0f9eea00c619c2b91f83072306e89549c260/src%2Ftest%2Frun-pass%2Fissue-2502.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2502.rs?ref=f4fb0f9eea00c619c2b91f83072306e89549c260", "patch": "@@ -0,0 +1,13 @@\n+class font/& {\n+    let fontbuf: &self.[u8];\n+\n+    new(fontbuf: &self.[u8]) {\n+        self.fontbuf = fontbuf;\n+    }\n+\n+    fn buf() -> &self.[u8] {\n+        self.fontbuf\n+    }\n+}\n+\n+fn main() { }"}]}