{"sha": "0f4df8fb0e56f7ac157fba4c4209f520ba7fba79", "node_id": "C_kwDOAAsO6NoAKDBmNGRmOGZiMGU1NmY3YWMxNTdmYmE0YzQyMDlmNTIwYmE3ZmJhNzk", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-01-15T14:38:22Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-01-15T15:20:36Z"}, "message": "Eliminate a couple of extra calls\n\nThis is an additional 17% improvement on ./y.rs compile --sysroot none\n\nBenchmark 1: ./y_before.bin build --sysroot none\n  Time (mean \u00b1 \u03c3):      1.533 s \u00b1  0.022 s    [User: 1.411 s, System: 0.471 s]\n  Range (min \u2026 max):    1.517 s \u2026  1.589 s    10 runs\n\nBenchmark 2: ./y_after.bin build --sysroot none\n  Time (mean \u00b1 \u03c3):      1.311 s \u00b1  0.020 s    [User: 1.232 s, System: 0.428 s]\n  Range (min \u2026 max):    1.298 s \u2026  1.366 s    10 runs\n\nSummary\n  './y_after.bin build --sysroot none' ran\n    1.17 \u00b1 0.02 times faster than './y_before.bin build --sysroot none'", "tree": {"sha": "20d508e07416f23e37a41c3d9227eb3f4ffcf913", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20d508e07416f23e37a41c3d9227eb3f4ffcf913"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f4df8fb0e56f7ac157fba4c4209f520ba7fba79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f4df8fb0e56f7ac157fba4c4209f520ba7fba79", "html_url": "https://github.com/rust-lang/rust/commit/0f4df8fb0e56f7ac157fba4c4209f520ba7fba79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f4df8fb0e56f7ac157fba4c4209f520ba7fba79/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abcff71bec1ef1614041e59ea4f947bb0a13267c", "url": "https://api.github.com/repos/rust-lang/rust/commits/abcff71bec1ef1614041e59ea4f947bb0a13267c", "html_url": "https://github.com/rust-lang/rust/commit/abcff71bec1ef1614041e59ea4f947bb0a13267c"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "f52d34ffcd63f872918e3d8dd9b3569b5ac32f70", "filename": "build_system/build_sysroot.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0f4df8fb0e56f7ac157fba4c4209f520ba7fba79/build_system%2Fbuild_sysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4df8fb0e56f7ac157fba4c4209f520ba7fba79/build_system%2Fbuild_sysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fbuild_sysroot.rs?ref=0f4df8fb0e56f7ac157fba4c4209f520ba7fba79", "patch": "@@ -3,7 +3,7 @@ use std::path::{Path, PathBuf};\n use std::process::{self, Command};\n \n use super::path::{Dirs, RelPath};\n-use super::rustc_info::{get_cargo_path, get_file_name, get_rustc_version, get_toolchain_name};\n+use super::rustc_info::{get_file_name, get_rustc_version, get_toolchain_name};\n use super::utils::{spawn_and_wait, try_hard_link, CargoProject, Compiler};\n use super::SysrootKind;\n \n@@ -36,17 +36,18 @@ pub(crate) fn build_sysroot(\n         LIB_DIR\n     }\n     .to_path(dirs)\n-    .join(get_file_name(\"rustc_codegen_cranelift\", \"dylib\"));\n+    .join(cg_clif_dylib_src.file_name().unwrap());\n     try_hard_link(cg_clif_dylib_src, &cg_clif_dylib_path);\n \n     // Build and copy rustc and cargo wrappers\n     let wrapper_base_name = get_file_name(\"____\", \"bin\");\n+    let toolchain_name = get_toolchain_name();\n     for wrapper in [\"rustc-clif\", \"rustdoc-clif\", \"cargo-clif\"] {\n         let wrapper_name = wrapper_base_name.replace(\"____\", wrapper);\n \n         let mut build_cargo_wrapper_cmd = Command::new(&bootstrap_host_compiler.rustc);\n         build_cargo_wrapper_cmd\n-            .env(\"TOOLCHAIN_NAME\", get_toolchain_name())\n+            .env(\"TOOLCHAIN_NAME\", toolchain_name.clone())\n             .arg(RelPath::SCRIPTS.to_path(dirs).join(&format!(\"{wrapper}.rs\")))\n             .arg(\"-o\")\n             .arg(DIST_DIR.to_path(dirs).join(wrapper_name))\n@@ -96,7 +97,7 @@ pub(crate) fn build_sysroot(\n             RelPath::DIST.to_path(&dirs).join(wrapper_base_name.replace(\"____\", \"rustdoc-clif\"));\n \n         Compiler {\n-            cargo: get_cargo_path(),\n+            cargo: bootstrap_host_compiler.cargo.clone(),\n             rustc: rustc_clif.clone(),\n             rustdoc: rustdoc_clif.clone(),\n             rustflags: String::new(),"}]}