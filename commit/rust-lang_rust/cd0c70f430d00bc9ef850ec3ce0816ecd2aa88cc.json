{"sha": "cd0c70f430d00bc9ef850ec3ce0816ecd2aa88cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkMGM3MGY0MzBkMDBiYzllZjg1MGVjM2NlMDgxNmVjZDJhYTg4Y2M=", "commit": {"author": {"name": "Jonathan Turner", "email": "jonathandturner@users.noreply.github.com", "date": "2016-10-14T19:07:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-14T19:07:07Z"}, "message": "Rollup merge of #36307 - faebser:E0408_new_error_format, r=GuillaumeGomez\n\nChanged error message E0408 to new format\n\nFollowed your text and was able to change the ouput to the new format.\nI did not encounter any broken test therefore this is a really small commit.\n\nThanks for letting me hack on the compiler :)\n\nr? @jonathandturner", "tree": {"sha": "7227270fe98e0573341885039e0ef7f11ba5086e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7227270fe98e0573341885039e0ef7f11ba5086e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd0c70f430d00bc9ef850ec3ce0816ecd2aa88cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd0c70f430d00bc9ef850ec3ce0816ecd2aa88cc", "html_url": "https://github.com/rust-lang/rust/commit/cd0c70f430d00bc9ef850ec3ce0816ecd2aa88cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd0c70f430d00bc9ef850ec3ce0816ecd2aa88cc/comments", "author": {"login": "jonathandturner", "id": 111457284, "node_id": "O_kgDOBqS0BA", "avatar_url": "https://avatars.githubusercontent.com/u/111457284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathandturner", "html_url": "https://github.com/jonathandturner", "followers_url": "https://api.github.com/users/jonathandturner/followers", "following_url": "https://api.github.com/users/jonathandturner/following{/other_user}", "gists_url": "https://api.github.com/users/jonathandturner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathandturner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathandturner/subscriptions", "organizations_url": "https://api.github.com/users/jonathandturner/orgs", "repos_url": "https://api.github.com/users/jonathandturner/repos", "events_url": "https://api.github.com/users/jonathandturner/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathandturner/received_events", "type": "Organization", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40cd1fdf0a951e2aa1a042c4cba613f5a2d50dcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/40cd1fdf0a951e2aa1a042c4cba613f5a2d50dcf", "html_url": "https://github.com/rust-lang/rust/commit/40cd1fdf0a951e2aa1a042c4cba613f5a2d50dcf"}, {"sha": "595b754a4b274dbc19fff740011e4b68df6dccf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/595b754a4b274dbc19fff740011e4b68df6dccf0", "html_url": "https://github.com/rust-lang/rust/commit/595b754a4b274dbc19fff740011e4b68df6dccf0"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "83e66fdd3bc40e4c72c7bcaf2350b2be4084061d", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cd0c70f430d00bc9ef850ec3ce0816ecd2aa88cc/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd0c70f430d00bc9ef850ec3ce0816ecd2aa88cc/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=cd0c70f430d00bc9ef850ec3ce0816ecd2aa88cc", "patch": "@@ -276,13 +276,15 @@ fn resolve_struct_error<'b, 'a: 'b, 'c>(resolver: &'b Resolver<'a>,\n             err\n         }\n         ResolutionError::VariableNotBoundInPattern(variable_name, from, to) => {\n-            struct_span_err!(resolver.session,\n+            let mut err = struct_span_err!(resolver.session,\n                              span,\n                              E0408,\n                              \"variable `{}` from pattern #{} is not bound in pattern #{}\",\n                              variable_name,\n                              from,\n-                             to)\n+                             to);\n+            err.span_label(span, &format!(\"pattern doesn't bind `{}`\", variable_name));\n+            err\n         }\n         ResolutionError::VariableBoundWithDifferentMode(variable_name,\n                                                         pattern_number,"}, {"sha": "d75f6124827726d79cba494eec55509332645490", "filename": "src/test/compile-fail/E0408.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cd0c70f430d00bc9ef850ec3ce0816ecd2aa88cc/src%2Ftest%2Fcompile-fail%2FE0408.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd0c70f430d00bc9ef850ec3ce0816ecd2aa88cc/src%2Ftest%2Fcompile-fail%2FE0408.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0408.rs?ref=cd0c70f430d00bc9ef850ec3ce0816ecd2aa88cc", "patch": "@@ -12,7 +12,7 @@ fn main() {\n     let x = Some(0);\n \n     match x {\n-        Some(y) | None => {} //~ ERROR E0408\n-        _ => ()\n+        Some(y) | None => {} //~  ERROR variable `y` from pattern #1 is not bound in pattern #2\n+        _ => ()              //~| NOTE pattern doesn't bind `y`\n     }\n }"}, {"sha": "f5e0c545bb52436fa4714d87aa3e59511d7f424c", "filename": "src/test/compile-fail/issue-2848.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cd0c70f430d00bc9ef850ec3ce0816ecd2aa88cc/src%2Ftest%2Fcompile-fail%2Fissue-2848.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd0c70f430d00bc9ef850ec3ce0816ecd2aa88cc/src%2Ftest%2Fcompile-fail%2Fissue-2848.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2848.rs?ref=cd0c70f430d00bc9ef850ec3ce0816ecd2aa88cc", "patch": "@@ -19,7 +19,7 @@ mod bar {\n fn main() {\n     use bar::foo::{alpha, charlie};\n     match alpha {\n-      alpha | beta => {} //~ ERROR variable `beta` from pattern #2 is not bound in pattern #1\n-      charlie => {}\n+      alpha | beta => {} //~  ERROR variable `beta` from pattern #2 is not bound in pattern #1\n+      charlie => {}      //~| NOTE pattern doesn't bind `beta`\n     }\n }"}, {"sha": "1e2541502ace874c04d28188a6557850d45361c9", "filename": "src/test/compile-fail/resolve-inconsistent-names.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cd0c70f430d00bc9ef850ec3ce0816ecd2aa88cc/src%2Ftest%2Fcompile-fail%2Fresolve-inconsistent-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd0c70f430d00bc9ef850ec3ce0816ecd2aa88cc/src%2Ftest%2Fcompile-fail%2Fresolve-inconsistent-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-inconsistent-names.rs?ref=cd0c70f430d00bc9ef850ec3ce0816ecd2aa88cc", "patch": "@@ -11,7 +11,9 @@\n fn main() {\n     let y = 1;\n     match y {\n-       a | b => {} //~ ERROR variable `a` from pattern #1 is not bound in pattern #2\n-       //~^ ERROR variable `b` from pattern #2 is not bound in pattern #1\n+       a | b => {} //~  ERROR variable `a` from pattern #1 is not bound in pattern #2\n+                   //~^ ERROR variable `b` from pattern #2 is not bound in pattern #1\n+                   //~| NOTE pattern doesn't bind `a`\n+                   //~| NOTE pattern doesn't bind `b`\n     }\n }"}]}