{"sha": "23a553a30398c856ae7d7179b751024334444296", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzYTU1M2EzMDM5OGM4NTZhZTdkNzE3OWI3NTEwMjQzMzQ0NDQyOTY=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2015-01-18T11:13:23Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2015-01-18T11:13:23Z"}, "message": "Improve the vec![...] macro with UFCS.\n\nThere are two limitations to the macro that this addresses:\n1. the expected type is not propagated, coercions don't trigger\n2. references inside element expressions don't outlive the `Vec`\n\nBoth of these limitations are caused by the block in the\nmacro expansion, previously needed to trigger a coercion\nfrom `Box<[T; N]>` to `Box<[T]>`, now possible with UFCS.", "tree": {"sha": "da078a016aca52bc4e33f18146e2a63fd07ac67a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da078a016aca52bc4e33f18146e2a63fd07ac67a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23a553a30398c856ae7d7179b751024334444296", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23a553a30398c856ae7d7179b751024334444296", "html_url": "https://github.com/rust-lang/rust/commit/23a553a30398c856ae7d7179b751024334444296", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23a553a30398c856ae7d7179b751024334444296/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a833337943300db1c310a4cf9c84b7b4ef4e9468", "url": "https://api.github.com/repos/rust-lang/rust/commits/a833337943300db1c310a4cf9c84b7b4ef4e9468", "html_url": "https://github.com/rust-lang/rust/commit/a833337943300db1c310a4cf9c84b7b4ef4e9468"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "85aedaeb010f127689c8b43053a27b2f40e0e39a", "filename": "src/libcollections/macros.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/23a553a30398c856ae7d7179b751024334444296/src%2Flibcollections%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23a553a30398c856ae7d7179b751024334444296/src%2Flibcollections%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fmacros.rs?ref=23a553a30398c856ae7d7179b751024334444296", "patch": "@@ -12,13 +12,13 @@\n #[macro_export]\n #[stable]\n macro_rules! vec {\n-    ($x:expr; $y:expr) => ({\n-        let xs: $crate::boxed::Box<[_]> = $crate::boxed::Box::new([$x; $y]);\n-        $crate::slice::SliceExt::into_vec(xs)\n-    });\n-    ($($x:expr),*) => ({\n-        let xs: $crate::boxed::Box<[_]> = $crate::boxed::Box::new([$($x),*]);\n-        $crate::slice::SliceExt::into_vec(xs)\n-    });\n+    ($x:expr; $y:expr) => (\n+        <[_] as $crate::slice::SliceExt>::into_vec(\n+            $crate::boxed::Box::new([$x; $y]))\n+    );\n+    ($($x:expr),*) => (\n+        <[_] as $crate::slice::SliceExt>::into_vec(\n+            $crate::boxed::Box::new([$($x),*]))\n+    );\n     ($($x:expr,)*) => (vec![$($x),*])\n }"}, {"sha": "200d3fd69356b22b68ecdbfd0d8b746f34c12b28", "filename": "src/test/run-pass/coerce-expect-unsized.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/23a553a30398c856ae7d7179b751024334444296/src%2Ftest%2Frun-pass%2Fcoerce-expect-unsized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23a553a30398c856ae7d7179b751024334444296/src%2Ftest%2Frun-pass%2Fcoerce-expect-unsized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoerce-expect-unsized.rs?ref=23a553a30398c856ae7d7179b751024334444296", "patch": "@@ -33,4 +33,9 @@ pub fn main() {\n \n     let _: Box<[int]> = Box::new([1, 2, 3]);\n     let _: Box<Fn(int) -> _> = Box::new(|x| (x as u8));\n+\n+    let _: Vec<Box<Fn(int) -> _>> = vec![\n+        Box::new(|x| (x as u8)),\n+        box |x| (x as i16 as u8),\n+    ];\n }"}, {"sha": "68dedfc6a2e63084faf3f7a8f50935268901fc1e", "filename": "src/test/run-pass/vec-macro-rvalue-scope.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/23a553a30398c856ae7d7179b751024334444296/src%2Ftest%2Frun-pass%2Fvec-macro-rvalue-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23a553a30398c856ae7d7179b751024334444296/src%2Ftest%2Frun-pass%2Fvec-macro-rvalue-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-macro-rvalue-scope.rs?ref=23a553a30398c856ae7d7179b751024334444296", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn one() -> i32 { 1 }\n+\n+// Make sure the vec![...] macro doesn't introduce hidden rvalue\n+// scopes (such as blocks) around the element expressions.\n+pub fn main() {\n+    assert_eq!(vec![&one(), &one(), &2], vec![&1, &1, &(one()+one())]);\n+    assert_eq!(vec![&one(); 2], vec![&1, &one()]);\n+}"}]}