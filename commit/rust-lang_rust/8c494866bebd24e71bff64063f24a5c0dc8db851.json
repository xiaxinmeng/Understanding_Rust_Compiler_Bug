{"sha": "8c494866bebd24e71bff64063f24a5c0dc8db851", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjNDk0ODY2YmViZDI0ZTcxYmZmNjQwNjNmMjRhNWMwZGM4ZGI4NTE=", "commit": {"author": {"name": "jumbatm", "email": "jumbatm@gmail.com", "date": "2019-12-27T10:09:07Z"}, "committer": {"name": "jumbatm", "email": "jumbatm@gmail.com", "date": "2019-12-27T13:21:32Z"}, "message": "Clean up const-hack from #63786", "tree": {"sha": "16e13305dd7a1b0972da0a911f8454473575413d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16e13305dd7a1b0972da0a911f8454473575413d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c494866bebd24e71bff64063f24a5c0dc8db851", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c494866bebd24e71bff64063f24a5c0dc8db851", "html_url": "https://github.com/rust-lang/rust/commit/8c494866bebd24e71bff64063f24a5c0dc8db851", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c494866bebd24e71bff64063f24a5c0dc8db851/comments", "author": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6faf0b2e725b2ba638acc61501df2b88597b271", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6faf0b2e725b2ba638acc61501df2b88597b271", "html_url": "https://github.com/rust-lang/rust/commit/f6faf0b2e725b2ba638acc61501df2b88597b271"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "39e2c7ca60cbf6fae0323fe682502630a6f6d1aa", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8c494866bebd24e71bff64063f24a5c0dc8db851/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c494866bebd24e71bff64063f24a5c0dc8db851/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=8c494866bebd24e71bff64063f24a5c0dc8db851", "patch": "@@ -1416,18 +1416,14 @@ $EndFeature, \"\n ```\"),\n             #[stable(feature = \"no_panic_abs\", since = \"1.13.0\")]\n             #[rustc_const_stable(feature = \"const_int_methods\", since = \"1.32.0\")]\n+            #[allow_internal_unstable(const_if_match)]\n             #[inline]\n             pub const fn wrapping_abs(self) -> Self {\n-                // sign is -1 (all ones) for negative numbers, 0 otherwise.\n-                let sign = self >> ($BITS - 1);\n-                // For positive self, sign == 0 so the expression is simply\n-                // (self ^ 0).wrapping_sub(0) == self == abs(self).\n-                //\n-                // For negative self, self ^ sign == self ^ all_ones.\n-                // But all_ones ^ self == all_ones - self == -1 - self.\n-                // So for negative numbers, (self ^ sign).wrapping_sub(sign) is\n-                // (-1 - self).wrapping_sub(-1) == -self == abs(self).\n-                (self ^ sign).wrapping_sub(sign)\n+                 if self.is_negative() {\n+                     self.wrapping_neg()\n+                 } else {\n+                     self\n+                 }\n             }\n         }\n "}]}