{"sha": "cc6ba84c400417af873462364ba5cd4f6b5ab1f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjNmJhODRjNDAwNDE3YWY4NzM0NjIzNjRiYTVjZDRmNmI1YWIxZjY=", "commit": {"author": {"name": "robojumper", "email": "robojumper@gmail.com", "date": "2020-05-31T10:06:22Z"}, "committer": {"name": "robojumper", "email": "robojumper@gmail.com", "date": "2020-05-31T10:06:22Z"}, "message": "fmt", "tree": {"sha": "7efa8f836b8bdf8dbedc646b34af4b7216505873", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7efa8f836b8bdf8dbedc646b34af4b7216505873"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc6ba84c400417af873462364ba5cd4f6b5ab1f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc6ba84c400417af873462364ba5cd4f6b5ab1f6", "html_url": "https://github.com/rust-lang/rust/commit/cc6ba84c400417af873462364ba5cd4f6b5ab1f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc6ba84c400417af873462364ba5cd4f6b5ab1f6/comments", "author": {"login": "robojumper", "id": 14299449, "node_id": "MDQ6VXNlcjE0Mjk5NDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/14299449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robojumper", "html_url": "https://github.com/robojumper", "followers_url": "https://api.github.com/users/robojumper/followers", "following_url": "https://api.github.com/users/robojumper/following{/other_user}", "gists_url": "https://api.github.com/users/robojumper/gists{/gist_id}", "starred_url": "https://api.github.com/users/robojumper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robojumper/subscriptions", "organizations_url": "https://api.github.com/users/robojumper/orgs", "repos_url": "https://api.github.com/users/robojumper/repos", "events_url": "https://api.github.com/users/robojumper/events{/privacy}", "received_events_url": "https://api.github.com/users/robojumper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "robojumper", "id": 14299449, "node_id": "MDQ6VXNlcjE0Mjk5NDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/14299449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robojumper", "html_url": "https://github.com/robojumper", "followers_url": "https://api.github.com/users/robojumper/followers", "following_url": "https://api.github.com/users/robojumper/following{/other_user}", "gists_url": "https://api.github.com/users/robojumper/gists{/gist_id}", "starred_url": "https://api.github.com/users/robojumper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robojumper/subscriptions", "organizations_url": "https://api.github.com/users/robojumper/orgs", "repos_url": "https://api.github.com/users/robojumper/repos", "events_url": "https://api.github.com/users/robojumper/events{/privacy}", "received_events_url": "https://api.github.com/users/robojumper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cd78a3355ea70d3070cabb00c80a5d195499752", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cd78a3355ea70d3070cabb00c80a5d195499752", "html_url": "https://github.com/rust-lang/rust/commit/1cd78a3355ea70d3070cabb00c80a5d195499752"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "f159f80af05c71caf2d9c3a1fd81b8454c795986", "filename": "crates/ra_hir_def/src/body/lower.rs", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/cc6ba84c400417af873462364ba5cd4f6b5ab1f6/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc6ba84c400417af873462364ba5cd4f6b5ab1f6/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs?ref=cc6ba84c400417af873462364ba5cd4f6b5ab1f6", "patch": "@@ -218,7 +218,10 @@ impl ExprCollector<'_> {\n                 self.alloc_expr(\n                     Expr::Loop {\n                         body,\n-                        label: e.label().and_then(|l| l.lifetime_token()).map(|l| Name::new_lifetime(&l)),\n+                        label: e\n+                            .label()\n+                            .and_then(|l| l.lifetime_token())\n+                            .map(|l| Name::new_lifetime(&l)),\n                     },\n                     syntax_ptr,\n                 )\n@@ -247,7 +250,10 @@ impl ExprCollector<'_> {\n                             return self.alloc_expr(\n                                 Expr::Loop {\n                                     body: match_expr,\n-                                    label: e.label().and_then(|l| l.lifetime_token()).map(|l| Name::new_lifetime(&l)),\n+                                    label: e\n+                                        .label()\n+                                        .and_then(|l| l.lifetime_token())\n+                                        .map(|l| Name::new_lifetime(&l)),\n                                 },\n                                 syntax_ptr,\n                             );\n@@ -259,7 +265,10 @@ impl ExprCollector<'_> {\n                     Expr::While {\n                         condition,\n                         body,\n-                        label: e.label().and_then(|l| l.lifetime_token()).map(|l| Name::new_lifetime(&l)),\n+                        label: e\n+                            .label()\n+                            .and_then(|l| l.lifetime_token())\n+                            .map(|l| Name::new_lifetime(&l)),\n                     },\n                     syntax_ptr,\n                 )\n@@ -273,7 +282,10 @@ impl ExprCollector<'_> {\n                         iterable,\n                         pat,\n                         body,\n-                        label: e.label().and_then(|l| l.lifetime_token()).map(|l| Name::new_lifetime(&l)),\n+                        label: e\n+                            .label()\n+                            .and_then(|l| l.lifetime_token())\n+                            .map(|l| Name::new_lifetime(&l)),\n                     },\n                     syntax_ptr,\n                 )\n@@ -329,12 +341,10 @@ impl ExprCollector<'_> {\n                     .unwrap_or(Expr::Missing);\n                 self.alloc_expr(path, syntax_ptr)\n             }\n-            ast::Expr::ContinueExpr(e) => {\n-                self.alloc_expr(\n-                    Expr::Continue { label: e.lifetime_token().map(|l| Name::new_lifetime(&l)) },\n-                    syntax_ptr,\n-                )\n-            }\n+            ast::Expr::ContinueExpr(e) => self.alloc_expr(\n+                Expr::Continue { label: e.lifetime_token().map(|l| Name::new_lifetime(&l)) },\n+                syntax_ptr,\n+            ),\n             ast::Expr::BreakExpr(e) => {\n                 let expr = e.expr().map(|e| self.collect_expr(e));\n                 self.alloc_expr("}, {"sha": "ca49b26d15f857752f633018bdd902dd5b3a1244", "filename": "crates/ra_hir_def/src/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc6ba84c400417af873462364ba5cd4f6b5ab1f6/crates%2Fra_hir_def%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc6ba84c400417af873462364ba5cd4f6b5ab1f6/crates%2Fra_hir_def%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fexpr.rs?ref=cc6ba84c400417af873462364ba5cd4f6b5ab1f6", "patch": "@@ -275,7 +275,7 @@ impl Expr {\n                     f(arm.expr);\n                 }\n             }\n-            Expr::Continue { .. } => {},\n+            Expr::Continue { .. } => {}\n             Expr::Break { expr, .. } | Expr::Return { expr } => {\n                 if let Some(expr) = expr {\n                     f(*expr);"}]}