{"sha": "767471edebd292d7b6386ed236e82abef9abc330", "node_id": "C_kwDOAAsO6NoAKDc2NzQ3MWVkZWJkMjkyZDdiNjM4NmVkMjM2ZTgyYWJlZjlhYmMzMzA", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-11-05T19:22:51Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-11-05T19:22:51Z"}, "message": "Update LLVM comments around NoAliasMutRef", "tree": {"sha": "ab8d7be284320bf0bc859c34d40548f13e177c53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab8d7be284320bf0bc859c34d40548f13e177c53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/767471edebd292d7b6386ed236e82abef9abc330", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/767471edebd292d7b6386ed236e82abef9abc330", "html_url": "https://github.com/rust-lang/rust/commit/767471edebd292d7b6386ed236e82abef9abc330", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/767471edebd292d7b6386ed236e82abef9abc330/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa35158383d5e409a13be1a0e87b33c549855a1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa35158383d5e409a13be1a0e87b33c549855a1f", "html_url": "https://github.com/rust-lang/rust/commit/aa35158383d5e409a13be1a0e87b33c549855a1f"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "b87e23af72b702076ea2ea84f8d5b48bf87b6f43", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/767471edebd292d7b6386ed236e82abef9abc330/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/767471edebd292d7b6386ed236e82abef9abc330/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=767471edebd292d7b6386ed236e82abef9abc330", "patch": "@@ -3060,9 +3060,10 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n                     // LLVM's definition of `noalias` is based solely on memory\n                     // dependencies rather than pointer equality\n                     //\n-                    // Due to miscompiles in LLVM < 12, we apply a separate NoAliasMutRef attribute\n-                    // for UniqueBorrowed arguments, so that the codegen backend can decide\n-                    // whether or not to actually emit the attribute.\n+                    // Due to past miscompiles in LLVM, we apply a separate NoAliasMutRef attribute\n+                    // for UniqueBorrowed arguments, so that the codegen backend can decide whether\n+                    // or not to actually emit the attribute. It can also be controlled with the\n+                    // `-Zmutable-noalias` debugging option.\n                     let no_alias = match kind {\n                         PointerKind::Shared | PointerKind::UniqueBorrowed => false,\n                         PointerKind::UniqueOwned => true,"}, {"sha": "4768c9e2db5e109ddca539d463d9b8fb381968ed", "filename": "compiler/rustc_target/src/abi/call/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/767471edebd292d7b6386ed236e82abef9abc330/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/767471edebd292d7b6386ed236e82abef9abc330/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs?ref=767471edebd292d7b6386ed236e82abef9abc330", "patch": "@@ -68,8 +68,10 @@ mod attr_impl {\n             const NonNull   = 1 << 3;\n             const ReadOnly  = 1 << 4;\n             const InReg     = 1 << 5;\n-            // NoAlias on &mut arguments can only be used with LLVM >= 12 due to miscompiles\n-            // in earlier versions. FIXME: Remove this distinction once possible.\n+            // Due to past miscompiles in LLVM, we use a separate attribute for\n+            // &mut arguments, so that the codegen backend can decide whether\n+            // or not to actually emit the attribute. It can also be controlled\n+            // with the `-Zmutable-noalias` debugging option.\n             const NoAliasMutRef = 1 << 6;\n         }\n     }"}]}