{"sha": "25b3f61c3821fd597961f9dd394482b71600e859", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1YjNmNjFjMzgyMWZkNTk3OTYxZjlkZDM5NDQ4MmI3MTYwMGU4NTk=", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2020-11-07T20:27:30Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2020-11-07T21:20:26Z"}, "message": "Remove useless branches from sift_down_range loop", "tree": {"sha": "45cdc6d93dd03bef508834f8c863363052c86dff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45cdc6d93dd03bef508834f8c863363052c86dff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25b3f61c3821fd597961f9dd394482b71600e859", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25b3f61c3821fd597961f9dd394482b71600e859", "html_url": "https://github.com/rust-lang/rust/commit/25b3f61c3821fd597961f9dd394482b71600e859", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25b3f61c3821fd597961f9dd394482b71600e859/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dfcf9afde98b4e873bfb0012e2efa0f058cc19d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dfcf9afde98b4e873bfb0012e2efa0f058cc19d", "html_url": "https://github.com/rust-lang/rust/commit/6dfcf9afde98b4e873bfb0012e2efa0f058cc19d"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "2d68146249bdc4e47083456aa9d3bc4397e8432b", "filename": "library/alloc/src/collections/binary_heap.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/25b3f61c3821fd597961f9dd394482b71600e859/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25b3f61c3821fd597961f9dd394482b71600e859/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs?ref=25b3f61c3821fd597961f9dd394482b71600e859", "patch": "@@ -531,19 +531,19 @@ impl<T: Ord> BinaryHeap<T> {\n         unsafe {\n             let mut hole = Hole::new(&mut self.data, pos);\n             let mut child = 2 * pos + 1;\n-            while child < end {\n-                let right = child + 1;\n+            while child < end - 1 {\n                 // compare with the greater of the two children\n-                if right < end && hole.get(child) <= hole.get(right) {\n-                    child = right;\n-                }\n+                child += (hole.get(child) <= hole.get(child + 1)) as usize;\n                 // if we are already in order, stop.\n                 if hole.element() >= hole.get(child) {\n-                    break;\n+                    return;\n                 }\n                 hole.move_to(child);\n                 child = 2 * hole.pos() + 1;\n             }\n+            if child == end - 1 && hole.element() < hole.get(child) {\n+                hole.move_to(child);\n+            }\n         }\n     }\n "}]}