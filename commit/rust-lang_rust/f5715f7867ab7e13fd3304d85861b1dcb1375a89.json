{"sha": "f5715f7867ab7e13fd3304d85861b1dcb1375a89", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1NzE1Zjc4NjdhYjdlMTNmZDMzMDRkODU4NjFiMWRjYjEzNzVhODk=", "commit": {"author": {"name": "P1start", "email": "rewi-github@whanau.org", "date": "2014-11-30T04:39:50Z"}, "committer": {"name": "P1start", "email": "rewi-github@whanau.org", "date": "2014-11-30T09:28:54Z"}, "message": "Allow trailing commas in array patterns and attributes", "tree": {"sha": "81bb4c8b5fe01b53d7fc16a671ec644d86a8ce94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81bb4c8b5fe01b53d7fc16a671ec644d86a8ce94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5715f7867ab7e13fd3304d85861b1dcb1375a89", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5715f7867ab7e13fd3304d85861b1dcb1375a89", "html_url": "https://github.com/rust-lang/rust/commit/f5715f7867ab7e13fd3304d85861b1dcb1375a89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5715f7867ab7e13fd3304d85861b1dcb1375a89/comments", "author": {"login": "ftxqxd", "id": 2055302, "node_id": "MDQ6VXNlcjIwNTUzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2055302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftxqxd", "html_url": "https://github.com/ftxqxd", "followers_url": "https://api.github.com/users/ftxqxd/followers", "following_url": "https://api.github.com/users/ftxqxd/following{/other_user}", "gists_url": "https://api.github.com/users/ftxqxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftxqxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftxqxd/subscriptions", "organizations_url": "https://api.github.com/users/ftxqxd/orgs", "repos_url": "https://api.github.com/users/ftxqxd/repos", "events_url": "https://api.github.com/users/ftxqxd/events{/privacy}", "received_events_url": "https://api.github.com/users/ftxqxd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ftxqxd", "id": 2055302, "node_id": "MDQ6VXNlcjIwNTUzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2055302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftxqxd", "html_url": "https://github.com/ftxqxd", "followers_url": "https://api.github.com/users/ftxqxd/followers", "following_url": "https://api.github.com/users/ftxqxd/following{/other_user}", "gists_url": "https://api.github.com/users/ftxqxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftxqxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftxqxd/subscriptions", "organizations_url": "https://api.github.com/users/ftxqxd/orgs", "repos_url": "https://api.github.com/users/ftxqxd/repos", "events_url": "https://api.github.com/users/ftxqxd/events{/privacy}", "received_events_url": "https://api.github.com/users/ftxqxd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d8f41b75f9bec7c7676122f85e049e7d7933298", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d8f41b75f9bec7c7676122f85e049e7d7933298", "html_url": "https://github.com/rust-lang/rust/commit/8d8f41b75f9bec7c7676122f85e049e7d7933298"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "40703049cc3ac59fed543fcb3125c68a595f8283", "filename": "src/libsyntax/parse/attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5715f7867ab7e13fd3304d85861b1dcb1375a89/src%2Flibsyntax%2Fparse%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5715f7867ab7e13fd3304d85861b1dcb1375a89/src%2Flibsyntax%2Fparse%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fattr.rs?ref=f5715f7867ab7e13fd3304d85861b1dcb1375a89", "patch": "@@ -212,7 +212,7 @@ impl<'a> ParserAttr for Parser<'a> {\n     fn parse_meta_seq(&mut self) -> Vec<P<ast::MetaItem>> {\n         self.parse_seq(&token::OpenDelim(token::Paren),\n                        &token::CloseDelim(token::Paren),\n-                       seq_sep_trailing_disallowed(token::Comma),\n+                       seq_sep_trailing_allowed(token::Comma),\n                        |p| p.parse_meta_item()).node\n     }\n "}, {"sha": "a96bf1ce10b798064b2d2b6fdc24da50190ee412", "filename": "src/libsyntax/parse/common.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f5715f7867ab7e13fd3304d85861b1dcb1375a89/src%2Flibsyntax%2Fparse%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5715f7867ab7e13fd3304d85861b1dcb1375a89/src%2Flibsyntax%2Fparse%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fcommon.rs?ref=f5715f7867ab7e13fd3304d85861b1dcb1375a89", "patch": "@@ -19,18 +19,13 @@ pub struct SeqSep {\n     pub trailing_sep_allowed: bool\n }\n \n-pub fn seq_sep_trailing_disallowed(t: token::Token) -> SeqSep {\n-    SeqSep {\n-        sep: Some(t),\n-        trailing_sep_allowed: false,\n-    }\n-}\n pub fn seq_sep_trailing_allowed(t: token::Token) -> SeqSep {\n     SeqSep {\n         sep: Some(t),\n         trailing_sep_allowed: true,\n     }\n }\n+\n pub fn seq_sep_none() -> SeqSep {\n     SeqSep {\n         sep: None,"}, {"sha": "9623a1b75b56ad0b08b642bde8d1686da1108b24", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f5715f7867ab7e13fd3304d85861b1dcb1375a89/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5715f7867ab7e13fd3304d85861b1dcb1375a89/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f5715f7867ab7e13fd3304d85861b1dcb1375a89", "patch": "@@ -3129,6 +3129,11 @@ impl<'a> Parser<'a> {\n                 first = false;\n             } else {\n                 self.expect(&token::Comma);\n+\n+                if self.token == token::CloseDelim(token::Bracket)\n+                        && (before_slice || after.len() != 0) {\n+                    break\n+                }\n             }\n \n             if before_slice {"}, {"sha": "dadd6571583844fda90af29b30c29c13c04444bf", "filename": "src/test/compile-fail/trailing-comma-array-repeat.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f5715f7867ab7e13fd3304d85861b1dcb1375a89/src%2Ftest%2Fcompile-fail%2Ftrailing-comma-array-repeat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5715f7867ab7e13fd3304d85861b1dcb1375a89/src%2Ftest%2Fcompile-fail%2Ftrailing-comma-array-repeat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrailing-comma-array-repeat.rs?ref=f5715f7867ab7e13fd3304d85861b1dcb1375a89", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let [_, ..,] = [(), ()]; //~ ERROR unexpected token: `]`\n+}"}, {"sha": "00e050640805b318ed06dbf68a248fa20d66a8fa", "filename": "src/test/run-pass/trailing-comma.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5715f7867ab7e13fd3304d85861b1dcb1375a89/src%2Ftest%2Frun-pass%2Ftrailing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5715f7867ab7e13fd3304d85861b1dcb1375a89/src%2Ftest%2Frun-pass%2Ftrailing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrailing-comma.rs?ref=f5715f7867ab7e13fd3304d85861b1dcb1375a89", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(advanced_slice_patterns,)]\n+\n fn f<T,>(_: T,) {}\n \n struct Foo<T,>;\n@@ -24,9 +26,13 @@ enum Baz {\n     Qux(int,),\n }\n \n+#[allow(unused,)]\n pub fn main() {\n     f::<int,>(0i,);\n     let (_, _,) = (1i, 1i,);\n+    let [_, _,] = [1i, 1,];\n+    let [_, _, .., _,] = [1i, 1, 1, 1,];\n+    let [_, _, _.., _,] = [1i, 1, 1, 1,];\n \n     let x: Foo<int,> = Foo::<int,>;\n "}]}