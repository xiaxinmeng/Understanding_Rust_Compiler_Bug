{"sha": "6f5a16bf1e23d885fd898d430be3cc07eb572163", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmNWExNmJmMWUyM2Q4ODVmZDg5OGQ0MzBiZTNjYzA3ZWI1NzIxNjM=", "commit": {"author": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-04-13T13:58:42Z"}, "committer": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-04-14T03:04:39Z"}, "message": "fix error span", "tree": {"sha": "b4367dd98e190e4c6144b40bb4b83c947c7d76c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4367dd98e190e4c6144b40bb4b83c947c7d76c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f5a16bf1e23d885fd898d430be3cc07eb572163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f5a16bf1e23d885fd898d430be3cc07eb572163", "html_url": "https://github.com/rust-lang/rust/commit/6f5a16bf1e23d885fd898d430be3cc07eb572163", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f5a16bf1e23d885fd898d430be3cc07eb572163/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b72d48f8e5f3c7cabcf6fcd31474209bff0ab59", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b72d48f8e5f3c7cabcf6fcd31474209bff0ab59", "html_url": "https://github.com/rust-lang/rust/commit/0b72d48f8e5f3c7cabcf6fcd31474209bff0ab59"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "87379651c232f1eea4d987324c0b2f1b7d73333b", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6f5a16bf1e23d885fd898d430be3cc07eb572163/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f5a16bf1e23d885fd898d430be3cc07eb572163/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=6f5a16bf1e23d885fd898d430be3cc07eb572163", "patch": "@@ -1639,10 +1639,18 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                                             } else {\n                                                 self.get_default_err_msg(place)\n                                             };\n+                                            let sp = self.mir.source_info(locations[0]).span;\n+                                            let mut to_suggest_span = String::new();\n+                                            if let Ok(src) =\n+                                                self.tcx.sess.codemap().span_to_snippet(sp) {\n+                                                    to_suggest_span = src[1..].to_string();\n+                                            };\n                                             err_info = Some((\n-                                                self.mir.source_info(locations[0]).span,\n+                                                    sp,\n                                                     \"consider changing this to be a \\\n-                                                    mutable reference: `&mut`\", item_msg,\n+                                                    mutable reference\",\n+                                                    to_suggest_span,\n+                                                    item_msg,\n                                                     self.get_primary_err_msg(base)));\n                                         }\n                                 },\n@@ -1652,9 +1660,15 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                         _ => {},\n                     }\n \n-                    if let Some((err_help_span, err_help_stmt, item_msg, sec_span)) = err_info {\n+                    if let Some((err_help_span,\n+                                 err_help_stmt,\n+                                 to_suggest_span,\n+                                 item_msg,\n+                                 sec_span)) = err_info {\n                         let mut err = self.tcx.cannot_assign(span, &item_msg, Origin::Mir);\n-                        err.span_suggestion(err_help_span, err_help_stmt, format!(\"\"));\n+                        err.span_suggestion(err_help_span,\n+                                            err_help_stmt,\n+                                            format!(\"&mut {}\", to_suggest_span));\n                         if place != place_err {\n                             err.span_label(span, sec_span);\n                         }"}, {"sha": "f3952c49a2a36fecd13ff84996782ed83cff5d39", "filename": "src/test/ui/nll/issue-47388.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f5a16bf1e23d885fd898d430be3cc07eb572163/src%2Ftest%2Fui%2Fnll%2Fissue-47388.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f5a16bf1e23d885fd898d430be3cc07eb572163/src%2Ftest%2Fui%2Fnll%2Fissue-47388.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-47388.stderr?ref=6f5a16bf1e23d885fd898d430be3cc07eb572163", "patch": "@@ -2,7 +2,7 @@ error[E0594]: cannot assign to data in a `&` reference\n   --> $DIR/issue-47388.rs:18:5\n    |\n LL |     let fancy_ref = &(&mut fancy);\n-   |                     ------------- help: consider changing this to be a mutable reference: `&mut`\n+   |                     ------------- help: consider changing this to be a mutable reference: `&mut (&mut fancy)`\n LL |     fancy_ref.num = 6; //~ ERROR E0594\n    |     ^^^^^^^^^^^^^^^^^ `fancy_ref` is a `&` reference, so the data it refers to cannot be written\n "}]}