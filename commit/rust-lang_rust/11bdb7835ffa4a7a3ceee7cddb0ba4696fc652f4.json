{"sha": "11bdb7835ffa4a7a3ceee7cddb0ba4696fc652f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExYmRiNzgzNWZmYTRhN2EzY2VlZTdjZGRiMGJhNDY5NmZjNjUyZjQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-19T19:53:57Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-21T08:27:01Z"}, "message": "write about type inference", "tree": {"sha": "045e209f5361f3c86f2f2a863d2f704db0a614f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/045e209f5361f3c86f2f2a863d2f704db0a614f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11bdb7835ffa4a7a3ceee7cddb0ba4696fc652f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11bdb7835ffa4a7a3ceee7cddb0ba4696fc652f4", "html_url": "https://github.com/rust-lang/rust/commit/11bdb7835ffa4a7a3ceee7cddb0ba4696fc652f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11bdb7835ffa4a7a3ceee7cddb0ba4696fc652f4/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43e7d80ec4ee340636ffabfa2c05ed24a725fa89", "url": "https://api.github.com/repos/rust-lang/rust/commits/43e7d80ec4ee340636ffabfa2c05ed24a725fa89", "html_url": "https://github.com/rust-lang/rust/commit/43e7d80ec4ee340636ffabfa2c05ed24a725fa89"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "f8286f6fa7cd8a621a792066856ff22d2bef0fac", "filename": "guide.md", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/11bdb7835ffa4a7a3ceee7cddb0ba4696fc652f4/guide.md", "raw_url": "https://github.com/rust-lang/rust/raw/11bdb7835ffa4a7a3ceee7cddb0ba4696fc652f4/guide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/guide.md?ref=11bdb7835ffa4a7a3ceee7cddb0ba4696fc652f4", "patch": "@@ -259,7 +259,11 @@ Java) there isn't a one-to-one mapping between source code and semantic model. A\n single function definition in the source code might result in several semantic\n functions: for example, the same source file might be included as a module into\n several crate, or a single \"crate\" might be present in the compilation DAG\n-several times, with different sets of `cfg`s enabled.\n+several times, with different sets of `cfg`s enabled. The IDE-specific task of\n+mapping source code position into semantic model is inherently imprecise for\n+this reason, and is handled by the [`source_binder`].\n+\n+[`source_binder`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/source_binder.rs\n \n The semantic interface is declared in [`code_model_api`] module. Each entity is\n identified by integer id and has a bunch of methods which take a salsa database\n@@ -487,4 +491,27 @@ Naturally, name resolution [uses] this stable projection query.\n \n ## Type inference\n \n+First of all, implementation of type inference in rust analyzer was spearheaded\n+by [@flodiebold]. [#327] was an awesome Christmas present, thank you, Florian!\n+\n+Type inference runs on per-function granularity and uses the patterns we've\n+discussed previously.\n+\n+First, we [lower ast] of function body into a position-independent\n+representation. In this representation, each expression is assigned a\n+[positional id]. Alongside the lowered expression, [a source map] is produced,\n+which maps between expression ids and original syntax. This lowering step also\n+deals with \"incomplete\" source trees by replacing missing expressions by an\n+explicit `Missing` expression.\n+\n+Given the lower body of the function, we can now run [type inference] and\n+construct a mapping from `ExprId`s to types.\n+\n+[@flodiebold]: https://github.com/flodiebold\n+[#327]: https://github.com/rust-analyzer/rust-analyzer/pull/327\n+[lower ast]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/expr.rs\n+[positional id]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/expr.rs#L13-L15\n+[a source map]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/expr.rs#L41-L44\n+[type-inference]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/ty.rs#L1208-L1223\n+\n ## Tying it all together: completion"}]}