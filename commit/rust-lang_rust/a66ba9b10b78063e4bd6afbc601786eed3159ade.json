{"sha": "a66ba9b10b78063e4bd6afbc601786eed3159ade", "node_id": "C_kwDOAAsO6NoAKGE2NmJhOWIxMGI3ODA2M2U0YmQ2YWZiYzYwMTc4NmVlZDMxNTlhZGU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-06-01T20:47:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-01T20:47:32Z"}, "message": "Rollup merge of #112154 - ShaneEverittM:zero-len-utf16, r=thomcc\n\nFix bug in utf16_to_utf8 for zero length strings\n\nThis fixes the behavior of sending EOF by pressing Ctrl+Z => Enter in a windows console.\n\nPreviously, that would trip the unpaired surrogate error, whereas now we correctly detect EOF.", "tree": {"sha": "c8df5b72818d0b01bb8ae3f33a0d18f6a5e5de0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8df5b72818d0b01bb8ae3f33a0d18f6a5e5de0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a66ba9b10b78063e4bd6afbc601786eed3159ade", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkeQPkCRBK7hj4Ov3rIwAA6X8IAJ72k7lI64QS2F8XLOYlPc59\nF/LMzPLU2Zu+W3zw8yMwJL/hhbuzL3hSWLdz5Vz7lRq9XSuxRK71vxdv36xXYwTH\ncXIHhh/d0YrqFbcPXosOIsfA/lybOUHXRefgdX8O1krkeSuk5dkJOTXwcj2D3XMy\najW9WgN4HdCfDZwpH33WKwAi/ajaoE2o2SYKs18SDE0dw51QqNXeXSFEZ5YNKFlc\nF0QwXZkvYu2Y/IlpISN56hWwnnNn63XzfR8LBqE7AbQoskjpZnn8dZQp4aXerMck\nlLOWxT0/gb6lcVI5VHj91yQbLygqAq+oBjjThBhWY/ydiYH8RWkzvX3SM1B4onE=\n=HaZN\n-----END PGP SIGNATURE-----\n", "payload": "tree c8df5b72818d0b01bb8ae3f33a0d18f6a5e5de0e\nparent 20b25d233a9efd9d8dd39d5c506d70fe73c3e16b\nparent 1293c1720574144ec13df2bbdcf26dab8e3b771f\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1685652452 +0200\ncommitter GitHub <noreply@github.com> 1685652452 +0200\n\nRollup merge of #112154 - ShaneEverittM:zero-len-utf16, r=thomcc\n\nFix bug in utf16_to_utf8 for zero length strings\n\nThis fixes the behavior of sending EOF by pressing Ctrl+Z => Enter in a windows console.\n\nPreviously, that would trip the unpaired surrogate error, whereas now we correctly detect EOF.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a66ba9b10b78063e4bd6afbc601786eed3159ade", "html_url": "https://github.com/rust-lang/rust/commit/a66ba9b10b78063e4bd6afbc601786eed3159ade", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a66ba9b10b78063e4bd6afbc601786eed3159ade/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20b25d233a9efd9d8dd39d5c506d70fe73c3e16b", "url": "https://api.github.com/repos/rust-lang/rust/commits/20b25d233a9efd9d8dd39d5c506d70fe73c3e16b", "html_url": "https://github.com/rust-lang/rust/commit/20b25d233a9efd9d8dd39d5c506d70fe73c3e16b"}, {"sha": "1293c1720574144ec13df2bbdcf26dab8e3b771f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1293c1720574144ec13df2bbdcf26dab8e3b771f", "html_url": "https://github.com/rust-lang/rust/commit/1293c1720574144ec13df2bbdcf26dab8e3b771f"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "3fcaaa508e3c89f6bf6039029c798b7ad5b0573d", "filename": "library/std/src/sys/windows/stdio.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a66ba9b10b78063e4bd6afbc601786eed3159ade/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a66ba9b10b78063e4bd6afbc601786eed3159ade/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio.rs?ref=a66ba9b10b78063e4bd6afbc601786eed3159ade", "patch": "@@ -11,6 +11,9 @@ use crate::sys::cvt;\n use crate::sys::handle::Handle;\n use core::str::utf8_char_width;\n \n+#[cfg(test)]\n+mod tests;\n+\n // Don't cache handles but get them fresh for every read/write. This allows us to track changes to\n // the value over time (such as if a process calls `SetStdHandle` while it's running). See #40490.\n pub struct Stdin {\n@@ -383,6 +386,10 @@ fn utf16_to_utf8(utf16: &[u16], utf8: &mut [u8]) -> io::Result<usize> {\n     debug_assert!(utf16.len() <= c::c_int::MAX as usize);\n     debug_assert!(utf8.len() <= c::c_int::MAX as usize);\n \n+    if utf16.is_empty() {\n+        return Ok(0);\n+    }\n+\n     let result = unsafe {\n         c::WideCharToMultiByte(\n             c::CP_UTF8,              // CodePage"}, {"sha": "1e53e0bee636978f55f2f27ae9fbe78ea0e26c06", "filename": "library/std/src/sys/windows/stdio/tests.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a66ba9b10b78063e4bd6afbc601786eed3159ade/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a66ba9b10b78063e4bd6afbc601786eed3159ade/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio%2Ftests.rs?ref=a66ba9b10b78063e4bd6afbc601786eed3159ade", "patch": "@@ -0,0 +1,6 @@\n+use super::utf16_to_utf8;\n+\n+#[test]\n+fn zero_size_read() {\n+    assert_eq!(utf16_to_utf8(&[], &mut []).unwrap(), 0);\n+}"}]}