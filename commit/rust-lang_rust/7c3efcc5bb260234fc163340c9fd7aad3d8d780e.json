{"sha": "7c3efcc5bb260234fc163340c9fd7aad3d8d780e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjM2VmY2M1YmIyNjAyMzRmYzE2MzM0MGM5ZmQ3YWFkM2Q4ZDc4MGU=", "commit": {"author": {"name": "Chris Wong", "email": "lambda.fairy@gmail.com", "date": "2015-04-01T06:48:49Z"}, "committer": {"name": "Chris Wong", "email": "lambda.fairy@gmail.com", "date": "2015-04-01T06:48:49Z"}, "message": "Don't reborrow the target of a `write!()`\n\nThis means passing in e.g. a `Vec<u8>` or `String` will work as\nintended, rather than deref-ing to `&mut [u8]` or `&mut str`.\n\n[breaking-change]\n\nCloses #23768", "tree": {"sha": "30ae61277d1f2b5d2e59fde5dd481b72c96b2a26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30ae61277d1f2b5d2e59fde5dd481b72c96b2a26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c3efcc5bb260234fc163340c9fd7aad3d8d780e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c3efcc5bb260234fc163340c9fd7aad3d8d780e", "html_url": "https://github.com/rust-lang/rust/commit/7c3efcc5bb260234fc163340c9fd7aad3d8d780e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c3efcc5bb260234fc163340c9fd7aad3d8d780e/comments", "author": {"login": "lambda-fairy", "id": 1572323, "node_id": "MDQ6VXNlcjE1NzIzMjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1572323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambda-fairy", "html_url": "https://github.com/lambda-fairy", "followers_url": "https://api.github.com/users/lambda-fairy/followers", "following_url": "https://api.github.com/users/lambda-fairy/following{/other_user}", "gists_url": "https://api.github.com/users/lambda-fairy/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambda-fairy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambda-fairy/subscriptions", "organizations_url": "https://api.github.com/users/lambda-fairy/orgs", "repos_url": "https://api.github.com/users/lambda-fairy/repos", "events_url": "https://api.github.com/users/lambda-fairy/events{/privacy}", "received_events_url": "https://api.github.com/users/lambda-fairy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lambda-fairy", "id": 1572323, "node_id": "MDQ6VXNlcjE1NzIzMjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1572323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambda-fairy", "html_url": "https://github.com/lambda-fairy", "followers_url": "https://api.github.com/users/lambda-fairy/followers", "following_url": "https://api.github.com/users/lambda-fairy/following{/other_user}", "gists_url": "https://api.github.com/users/lambda-fairy/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambda-fairy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambda-fairy/subscriptions", "organizations_url": "https://api.github.com/users/lambda-fairy/orgs", "repos_url": "https://api.github.com/users/lambda-fairy/repos", "events_url": "https://api.github.com/users/lambda-fairy/events{/privacy}", "received_events_url": "https://api.github.com/users/lambda-fairy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d754722a04b99fdcae0fd97fa2a4395521145ef2", "url": "https://api.github.com/repos/rust-lang/rust/commits/d754722a04b99fdcae0fd97fa2a4395521145ef2", "html_url": "https://github.com/rust-lang/rust/commit/d754722a04b99fdcae0fd97fa2a4395521145ef2"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e867ed3efd908730d9a1da3a9c6c8701032148dc", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c3efcc5bb260234fc163340c9fd7aad3d8d780e/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c3efcc5bb260234fc163340c9fd7aad3d8d780e/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=7c3efcc5bb260234fc163340c9fd7aad3d8d780e", "patch": "@@ -184,7 +184,7 @@ macro_rules! try {\n /// ```\n #[macro_export]\n macro_rules! write {\n-    ($dst:expr, $($arg:tt)*) => ((&mut *$dst).write_fmt(format_args!($($arg)*)))\n+    ($dst:expr, $($arg:tt)*) => ($dst.write_fmt(format_args!($($arg)*)))\n }\n \n /// Equivalent to the `write!` macro, except that a newline is appended after"}]}