{"sha": "35149bf1cec8707c186e324bf858f7bb9f2692e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1MTQ5YmYxY2VjODcwN2MxODZlMzI0YmY4NThmN2JiOWYyNjkyZTg=", "commit": {"author": {"name": "Pascal Hertleif", "email": "killercup@gmail.com", "date": "2015-05-03T15:44:24Z"}, "committer": {"name": "Pascal Hertleif", "email": "killercup@gmail.com", "date": "2015-05-03T15:44:24Z"}, "message": "Clean up HashMap examples", "tree": {"sha": "e085d392f8d6b6db7d2c13b3aa43689066626610", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e085d392f8d6b6db7d2c13b3aa43689066626610"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35149bf1cec8707c186e324bf858f7bb9f2692e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35149bf1cec8707c186e324bf858f7bb9f2692e8", "html_url": "https://github.com/rust-lang/rust/commit/35149bf1cec8707c186e324bf858f7bb9f2692e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35149bf1cec8707c186e324bf858f7bb9f2692e8/comments", "author": {"login": "killercup", "id": 20063, "node_id": "MDQ6VXNlcjIwMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/20063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killercup", "html_url": "https://github.com/killercup", "followers_url": "https://api.github.com/users/killercup/followers", "following_url": "https://api.github.com/users/killercup/following{/other_user}", "gists_url": "https://api.github.com/users/killercup/gists{/gist_id}", "starred_url": "https://api.github.com/users/killercup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killercup/subscriptions", "organizations_url": "https://api.github.com/users/killercup/orgs", "repos_url": "https://api.github.com/users/killercup/repos", "events_url": "https://api.github.com/users/killercup/events{/privacy}", "received_events_url": "https://api.github.com/users/killercup/received_events", "type": "User", "site_admin": false}, "committer": {"login": "killercup", "id": 20063, "node_id": "MDQ6VXNlcjIwMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/20063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killercup", "html_url": "https://github.com/killercup", "followers_url": "https://api.github.com/users/killercup/followers", "following_url": "https://api.github.com/users/killercup/following{/other_user}", "gists_url": "https://api.github.com/users/killercup/gists{/gist_id}", "starred_url": "https://api.github.com/users/killercup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killercup/subscriptions", "organizations_url": "https://api.github.com/users/killercup/orgs", "repos_url": "https://api.github.com/users/killercup/repos", "events_url": "https://api.github.com/users/killercup/events{/privacy}", "received_events_url": "https://api.github.com/users/killercup/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07915ef6a1426952ba612c02ecafad003bf971a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/07915ef6a1426952ba612c02ecafad003bf971a3", "html_url": "https://github.com/rust-lang/rust/commit/07915ef6a1426952ba612c02ecafad003bf971a3"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "9d0b0dde74f160d8349f9a16ae2ab4663c9675f0", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/35149bf1cec8707c186e324bf858f7bb9f2692e8/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35149bf1cec8707c186e324bf858f7bb9f2692e8/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=35149bf1cec8707c186e324bf858f7bb9f2692e8", "patch": "@@ -250,26 +250,26 @@ fn test_resize_policy() {\n /// book_reviews.insert(\"The Adventures of Sherlock Holmes\", \"Eye lyked it alot.\");\n ///\n /// // check for a specific one.\n-/// if !book_reviews.contains_key(&(\"Les Mis\u00e9rables\")) {\n+/// if !book_reviews.contains_key(\"Les Mis\u00e9rables\") {\n ///     println!(\"We've got {} reviews, but Les Mis\u00e9rables ain't one.\",\n ///              book_reviews.len());\n /// }\n ///\n /// // oops, this review has a lot of spelling mistakes, let's delete it.\n-/// book_reviews.remove(&(\"The Adventures of Sherlock Holmes\"));\n+/// book_reviews.remove(\"The Adventures of Sherlock Holmes\");\n ///\n /// // look up the values associated with some keys.\n /// let to_find = [\"Pride and Prejudice\", \"Alice's Adventure in Wonderland\"];\n-/// for book in to_find.iter() {\n+/// for book in &to_find {\n ///     match book_reviews.get(book) {\n-///         Some(review) => println!(\"{}: {}\", *book, *review),\n-///         None => println!(\"{} is unreviewed.\", *book)\n+///         Some(review) => println!(\"{}: {}\", book, review),\n+///         None => println!(\"{} is unreviewed.\", book)\n ///     }\n /// }\n ///\n /// // iterate over everything.\n-/// for (book, review) in book_reviews.iter() {\n-///     println!(\"{}: \\\"{}\\\"\", *book, *review);\n+/// for (book, review) in &book_reviews {\n+///     println!(\"{}: \\\"{}\\\"\", book, review);\n /// }\n /// ```\n ///\n@@ -300,7 +300,7 @@ fn test_resize_policy() {\n /// vikings.insert(Viking::new(\"Harald\", \"Iceland\"), 12);\n ///\n /// // Use derived implementation to print the status of the vikings.\n-/// for (viking, health) in vikings.iter() {\n+/// for (viking, health) in &vikings {\n ///     println!(\"{:?} has {} hp\", viking, health);\n /// }\n /// ```"}]}