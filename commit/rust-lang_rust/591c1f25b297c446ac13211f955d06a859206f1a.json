{"sha": "591c1f25b297c446ac13211f955d06a859206f1a", "node_id": "C_kwDOAAsO6NoAKDU5MWMxZjI1YjI5N2M0NDZhYzEzMjExZjk1NWQwNmE4NTkyMDZmMWE", "commit": {"author": {"name": "Akshay", "email": "nerdy@peppe.rs", "date": "2022-09-27T06:25:13Z"}, "committer": {"name": "Akshay", "email": "nerdy@peppe.rs", "date": "2022-09-27T06:25:13Z"}, "message": "introduce `{char, u8}::is_ascii_octdigit`", "tree": {"sha": "88b04562b5bece20f4780ff98186062dfa293afc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88b04562b5bece20f4780ff98186062dfa293afc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/591c1f25b297c446ac13211f955d06a859206f1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/591c1f25b297c446ac13211f955d06a859206f1a", "html_url": "https://github.com/rust-lang/rust/commit/591c1f25b297c446ac13211f955d06a859206f1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/591c1f25b297c446ac13211f955d06a859206f1a/comments", "author": {"login": "nerdypepper", "id": 23743547, "node_id": "MDQ6VXNlcjIzNzQzNTQ3", "avatar_url": "https://avatars.githubusercontent.com/u/23743547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nerdypepper", "html_url": "https://github.com/nerdypepper", "followers_url": "https://api.github.com/users/nerdypepper/followers", "following_url": "https://api.github.com/users/nerdypepper/following{/other_user}", "gists_url": "https://api.github.com/users/nerdypepper/gists{/gist_id}", "starred_url": "https://api.github.com/users/nerdypepper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nerdypepper/subscriptions", "organizations_url": "https://api.github.com/users/nerdypepper/orgs", "repos_url": "https://api.github.com/users/nerdypepper/repos", "events_url": "https://api.github.com/users/nerdypepper/events{/privacy}", "received_events_url": "https://api.github.com/users/nerdypepper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nerdypepper", "id": 23743547, "node_id": "MDQ6VXNlcjIzNzQzNTQ3", "avatar_url": "https://avatars.githubusercontent.com/u/23743547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nerdypepper", "html_url": "https://github.com/nerdypepper", "followers_url": "https://api.github.com/users/nerdypepper/followers", "following_url": "https://api.github.com/users/nerdypepper/following{/other_user}", "gists_url": "https://api.github.com/users/nerdypepper/gists{/gist_id}", "starred_url": "https://api.github.com/users/nerdypepper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nerdypepper/subscriptions", "organizations_url": "https://api.github.com/users/nerdypepper/orgs", "repos_url": "https://api.github.com/users/nerdypepper/repos", "events_url": "https://api.github.com/users/nerdypepper/events{/privacy}", "received_events_url": "https://api.github.com/users/nerdypepper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd4d9d934fd3bc1b6a0b0fcb3548a1b26fc53c9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd4d9d934fd3bc1b6a0b0fcb3548a1b26fc53c9d", "html_url": "https://github.com/rust-lang/rust/commit/cd4d9d934fd3bc1b6a0b0fcb3548a1b26fc53c9d"}], "stats": {"total": 84, "additions": 84, "deletions": 0}, "files": [{"sha": "224bc9effe61e1eb3016c53af46af94a473be1b1", "filename": "library/core/src/char/methods.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/591c1f25b297c446ac13211f955d06a859206f1a/library%2Fcore%2Fsrc%2Fchar%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/591c1f25b297c446ac13211f955d06a859206f1a/library%2Fcore%2Fsrc%2Fchar%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fchar%2Fmethods.rs?ref=591c1f25b297c446ac13211f955d06a859206f1a", "patch": "@@ -1444,6 +1444,38 @@ impl char {\n         matches!(*self, '0'..='9')\n     }\n \n+    /// Checks if the value is an ASCII octal digit:\n+    /// U+0030 '0' ..= U+0037 '7'.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(is_ascii_octdigit)]\n+    ///\n+    /// let uppercase_a = 'A';\n+    /// let a = 'a';\n+    /// let zero = '0';\n+    /// let seven = '7';\n+    /// let nine = '9';\n+    /// let percent = '%';\n+    /// let lf = '\\n';\n+    ///\n+    /// assert!(!uppercase_a.is_ascii_octdigit());\n+    /// assert!(!a.is_ascii_octdigit());\n+    /// assert!(zero.is_ascii_octdigit());\n+    /// assert!(seven.is_ascii_octdigit());\n+    /// assert!(!nine.is_ascii_octdigit());\n+    /// assert!(!percent.is_ascii_octdigit());\n+    /// assert!(!lf.is_ascii_octdigit());\n+    /// ```\n+    #[must_use]\n+    #[unstable(feature = \"is_ascii_octdigit\", issue = \"101288\")]\n+    #[rustc_const_unstable(feature = \"is_ascii_octdigit\", issue = \"101288\")]\n+    #[inline]\n+    pub const fn is_ascii_octdigit(&self) -> bool {\n+        matches!(*self, '0'..='7')\n+    }\n+\n     /// Checks if the value is an ASCII hexadecimal digit:\n     ///\n     /// - U+0030 '0' ..= U+0039 '9', or"}, {"sha": "18ad0bdc8b20e2a78545133b51cbb6c5047a1e1b", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/591c1f25b297c446ac13211f955d06a859206f1a/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/591c1f25b297c446ac13211f955d06a859206f1a/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=591c1f25b297c446ac13211f955d06a859206f1a", "patch": "@@ -164,6 +164,7 @@\n #![feature(const_slice_index)]\n #![feature(const_is_char_boundary)]\n #![feature(const_cstr_methods)]\n+#![feature(is_ascii_octdigit)]\n //\n // Language features:\n #![feature(abi_unadjusted)]"}, {"sha": "01642a8dd31a892708307e98f2b69c0a32863240", "filename": "library/core/src/num/mod.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/591c1f25b297c446ac13211f955d06a859206f1a/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/591c1f25b297c446ac13211f955d06a859206f1a/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs?ref=591c1f25b297c446ac13211f955d06a859206f1a", "patch": "@@ -622,6 +622,38 @@ impl u8 {\n         matches!(*self, b'0'..=b'9')\n     }\n \n+    /// Checks if the value is an ASCII octal digit:\n+    /// U+0030 '0' ..= U+0037 '7'.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(is_ascii_octdigit)]\n+    ///\n+    /// let uppercase_a = b'A';\n+    /// let a = b'a';\n+    /// let zero = b'0';\n+    /// let seven = b'7';\n+    /// let nine = b'9';\n+    /// let percent = b'%';\n+    /// let lf = b'\\n';\n+    ///\n+    /// assert!(!uppercase_a.is_ascii_octdigit());\n+    /// assert!(!a.is_ascii_octdigit());\n+    /// assert!(zero.is_ascii_octdigit());\n+    /// assert!(seven.is_ascii_octdigit());\n+    /// assert!(!nine.is_ascii_octdigit());\n+    /// assert!(!percent.is_ascii_octdigit());\n+    /// assert!(!lf.is_ascii_octdigit());\n+    /// ```\n+    #[must_use]\n+    #[unstable(feature = \"is_ascii_octdigit\", issue = \"101288\")]\n+    #[rustc_const_unstable(feature = \"is_ascii_octdigit\", issue = \"101288\")]\n+    #[inline]\n+    pub const fn is_ascii_octdigit(&self) -> bool {\n+        matches!(*self, b'0'..=b'7')\n+    }\n+\n     /// Checks if the value is an ASCII hexadecimal digit:\n     ///\n     /// - U+0030 '0' ..= U+0039 '9', or"}, {"sha": "f5f2dd047788539a0aa893ae1bc92ce39a8627f5", "filename": "library/core/tests/ascii.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/591c1f25b297c446ac13211f955d06a859206f1a/library%2Fcore%2Ftests%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/591c1f25b297c446ac13211f955d06a859206f1a/library%2Fcore%2Ftests%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fascii.rs?ref=591c1f25b297c446ac13211f955d06a859206f1a", "patch": "@@ -251,6 +251,23 @@ fn test_is_ascii_digit() {\n     );\n }\n \n+#[test]\n+fn test_is_ascii_octdigit() {\n+    assert_all!(is_ascii_octdigit, \"\", \"01234567\");\n+    assert_none!(\n+        is_ascii_octdigit,\n+        \"abcdefghijklmnopqrstuvwxyz\",\n+        \"ABCDEFGHIJKLMNOQPRSTUVWXYZ\",\n+        \"!\\\"#$%&'()*+,-./:;<=>?@[\\\\]^_`{|}~\",\n+        \" \\t\\n\\x0c\\r\",\n+        \"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\",\n+        \"\\x08\\x09\\x0a\\x0b\\x0c\\x0d\\x0e\\x0f\",\n+        \"\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\",\n+        \"\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f\",\n+        \"\\x7f\",\n+    );\n+}\n+\n #[test]\n fn test_is_ascii_hexdigit() {\n     assert_all!(is_ascii_hexdigit, \"\", \"0123456789\", \"abcdefABCDEF\",);\n@@ -454,6 +471,7 @@ fn ascii_ctype_const() {\n         is_ascii_lowercase    => [true,  false, false, false, false];\n         is_ascii_alphanumeric => [true,  true,  true,  false, false];\n         is_ascii_digit        => [false, false, true,  false, false];\n+        is_ascii_octdigit     => [false, false, false, false, false];\n         is_ascii_hexdigit     => [true,  true,  true,  false, false];\n         is_ascii_punctuation  => [false, false, false, true,  false];\n         is_ascii_graphic      => [true,  true,  true,  true,  false];"}, {"sha": "46538ddb20179ffb0bdfcd9bc5074a4d543a7eb4", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/591c1f25b297c446ac13211f955d06a859206f1a/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/591c1f25b297c446ac13211f955d06a859206f1a/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=591c1f25b297c446ac13211f955d06a859206f1a", "patch": "@@ -101,6 +101,7 @@\n #![feature(slice_flatten)]\n #![feature(provide_any)]\n #![feature(utf8_chunks)]\n+#![feature(is_ascii_octdigit)]\n #![deny(unsafe_op_in_unsafe_fn)]\n \n extern crate test;"}]}