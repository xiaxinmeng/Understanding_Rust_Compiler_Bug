{"sha": "97d59a8ade04bec36ad99a5649d91fd8a97e7d30", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3ZDU5YThhZGUwNGJlYzM2YWQ5OWE1NjQ5ZDkxZmQ4YTk3ZTdkMzA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-27T01:40:32Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-27T01:40:57Z"}, "message": "std: Create correctly-sized buffers on TCP read", "tree": {"sha": "d77a155412d03c732cd5c2c4f75d7b226a788fb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d77a155412d03c732cd5c2c4f75d7b226a788fb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97d59a8ade04bec36ad99a5649d91fd8a97e7d30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97d59a8ade04bec36ad99a5649d91fd8a97e7d30", "html_url": "https://github.com/rust-lang/rust/commit/97d59a8ade04bec36ad99a5649d91fd8a97e7d30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97d59a8ade04bec36ad99a5649d91fd8a97e7d30/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b50279ba94840c8c82f0aa50b8cb6a457505bdb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b50279ba94840c8c82f0aa50b8cb6a457505bdb2", "html_url": "https://github.com/rust-lang/rust/commit/b50279ba94840c8c82f0aa50b8cb6a457505bdb2"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "66f57757560fd1d577f53b7740965e583454ffcc", "filename": "src/libstd/net_tcp.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/97d59a8ade04bec36ad99a5649d91fd8a97e7d30/src%2Flibstd%2Fnet_tcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97d59a8ade04bec36ad99a5649d91fd8a97e7d30/src%2Flibstd%2Fnet_tcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet_tcp.rs?ref=97d59a8ade04bec36ad99a5649d91fd8a97e7d30", "patch": "@@ -1118,8 +1118,7 @@ extern fn on_tcp_read_cb(stream: *uv::ll::uv_stream_t,\n         log(debug, #fmt(\"tcp on_read_cb nread: %d\", nread as int));\n         let reader_ch = (*socket_data_ptr).reader_ch;\n         let buf_base = uv::ll::get_base_from_buf(buf);\n-        let buf_len = uv::ll::get_len_from_buf(buf);\n-        let new_bytes = vec::unsafe::from_buf(buf_base, buf_len as uint);\n+        let new_bytes = vec::unsafe::from_buf(buf_base, nread as uint);\n         comm::send(reader_ch, result::ok(new_bytes));\n       }\n     }"}]}