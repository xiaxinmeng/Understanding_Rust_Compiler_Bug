{"sha": "92c2ff6d697fe7be2d4e3979b4dec9f86b969b69", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyYzJmZjZkNjk3ZmU3YmUyZDRlMzk3OWI0ZGVjOWY4NmI5NjliNjk=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2014-07-07T16:53:41Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2014-07-08T22:15:46Z"}, "message": "self arg macro test case", "tree": {"sha": "e02de36a8221a33e55342ce7889515ddad6f519f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e02de36a8221a33e55342ce7889515ddad6f519f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92c2ff6d697fe7be2d4e3979b4dec9f86b969b69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92c2ff6d697fe7be2d4e3979b4dec9f86b969b69", "html_url": "https://github.com/rust-lang/rust/commit/92c2ff6d697fe7be2d4e3979b4dec9f86b969b69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92c2ff6d697fe7be2d4e3979b4dec9f86b969b69/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6007797ed6f712576bccac799d0fc79a2eb61ae7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6007797ed6f712576bccac799d0fc79a2eb61ae7", "html_url": "https://github.com/rust-lang/rust/commit/6007797ed6f712576bccac799d0fc79a2eb61ae7"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "69e629bb3c625142675e9f7a776449ff196738d9", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/92c2ff6d697fe7be2d4e3979b4dec9f86b969b69/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92c2ff6d697fe7be2d4e3979b4dec9f86b969b69/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=92c2ff6d697fe7be2d4e3979b4dec9f86b969b69", "patch": "@@ -1403,6 +1403,19 @@ mod test {\n             0)\n     }\n \n+    // ooh, got another bite?\n+    // expands to struct A; impl A {fn thingy(&self_1) {self_1;}}\n+    #[test] fn method_arg_hygiene_2(){\n+        run_renaming_test(\n+            &(\"struct A;\n+              macro_rules! add_method (($T:ty) =>\n+              (impl $T {  fn thingy(&self) {self;} }))\n+              add_method!(A)\",\n+              vec!(vec!(0)),\n+              true),\n+            0)\n+    }\n+\n     // item fn hygiene\n     // expands to fn q(x_1:int){fn g(x_2:int){x_2 + x_1};}\n     #[test] fn issue_9383(){"}]}