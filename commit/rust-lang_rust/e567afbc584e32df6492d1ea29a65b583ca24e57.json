{"sha": "e567afbc584e32df6492d1ea29a65b583ca24e57", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1NjdhZmJjNTg0ZTMyZGY2NDkyZDFlYTI5YTY1YjU4M2NhMjRlNTc=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-09-14T10:29:16Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-09-18T09:27:41Z"}, "message": "incr.comp.: Initialize IGNORED_ATTRS in StableHashingContext lazily.", "tree": {"sha": "1ea1a4614991e7f7ffffdbc552c406b7783d2aab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ea1a4614991e7f7ffffdbc552c406b7783d2aab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e567afbc584e32df6492d1ea29a65b583ca24e57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e567afbc584e32df6492d1ea29a65b583ca24e57", "html_url": "https://github.com/rust-lang/rust/commit/e567afbc584e32df6492d1ea29a65b583ca24e57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e567afbc584e32df6492d1ea29a65b583ca24e57/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd501735ac8eb38756f8a4f4da91b0b7a4fbca1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd501735ac8eb38756f8a4f4da91b0b7a4fbca1b", "html_url": "https://github.com/rust-lang/rust/commit/dd501735ac8eb38756f8a4f4da91b0b7a4fbca1b"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "616b966cb5058f7cd12d34e265d28ee59295d6f4", "filename": "src/librustc/ich/hcx.rs", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e567afbc584e32df6492d1ea29a65b583ca24e57/src%2Flibrustc%2Fich%2Fhcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e567afbc584e32df6492d1ea29a65b583ca24e57/src%2Flibrustc%2Fich%2Fhcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fhcx.rs?ref=e567afbc584e32df6492d1ea29a65b583ca24e57", "patch": "@@ -17,6 +17,7 @@ use ty::{self, TyCtxt, fast_reject};\n \n use std::cmp::Ord;\n use std::hash as std_hash;\n+use std::cell::RefCell;\n use std::collections::HashMap;\n \n use syntax::ast;\n@@ -30,6 +31,10 @@ use rustc_data_structures::stable_hasher::{HashStable, StableHashingContextProvi\n                                            StableHasher, StableHasherResult,\n                                            ToStableHashKey};\n use rustc_data_structures::accumulate_vec::AccumulateVec;\n+use rustc_data_structures::fx::FxHashSet;\n+\n+thread_local!(static IGNORED_ATTR_NAMES: RefCell<FxHashSet<Symbol>> =\n+    RefCell::new(FxHashSet()));\n \n /// This is the context state available during incr. comp. hashing. It contains\n /// enough information to transform DefIds and HirIds into stable DefPaths (i.e.\n@@ -41,8 +46,6 @@ pub struct StableHashingContext<'a, 'gcx: 'a+'tcx, 'tcx: 'a> {\n     hash_bodies: bool,\n     overflow_checks_enabled: bool,\n     node_id_hashing_mode: NodeIdHashingMode,\n-    // A sorted array of symbol keys for fast lookup.\n-    ignored_attr_names: Vec<Symbol>,\n \n     // Very often, we are hashing something that does not need the\n     // CachingCodemapView, so we initialize it lazily.\n@@ -62,12 +65,14 @@ impl<'a, 'gcx, 'tcx> StableHashingContext<'a, 'gcx, 'tcx> {\n         let hash_spans_initial = tcx.sess.opts.debuginfo != NoDebugInfo;\n         let check_overflow_initial = tcx.sess.overflow_checks();\n \n-        let mut ignored_attr_names: Vec<_> = ich::IGNORED_ATTRIBUTES\n-            .iter()\n-            .map(|&s| Symbol::intern(s))\n-            .collect();\n-\n-        ignored_attr_names.sort();\n+        debug_assert!(ich::IGNORED_ATTRIBUTES.len() > 0);\n+        IGNORED_ATTR_NAMES.with(|names| {\n+            let mut names = names.borrow_mut();\n+            if names.is_empty() {\n+                names.extend(ich::IGNORED_ATTRIBUTES.iter()\n+                                                    .map(|&s| Symbol::intern(s)));\n+            }\n+        });\n \n         StableHashingContext {\n             tcx,\n@@ -77,7 +82,6 @@ impl<'a, 'gcx, 'tcx> StableHashingContext<'a, 'gcx, 'tcx> {\n             hash_bodies: true,\n             overflow_checks_enabled: check_overflow_initial,\n             node_id_hashing_mode: NodeIdHashingMode::HashDefPath,\n-            ignored_attr_names,\n         }\n     }\n \n@@ -151,7 +155,9 @@ impl<'a, 'gcx, 'tcx> StableHashingContext<'a, 'gcx, 'tcx> {\n \n     #[inline]\n     pub fn is_ignored_attr(&self, name: Symbol) -> bool {\n-        self.ignored_attr_names.binary_search(&name).is_ok()\n+        IGNORED_ATTR_NAMES.with(|names| {\n+            names.borrow().contains(&name)\n+        })\n     }\n \n     pub fn hash_hir_item_like<F: FnOnce(&mut Self)>(&mut self,"}, {"sha": "4e3caca2b613100fa240443619807e0bce0f3600", "filename": "src/librustc/ich/impls_syntax.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e567afbc584e32df6492d1ea29a65b583ca24e57/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e567afbc584e32df6492d1ea29a65b583ca24e57/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_syntax.rs?ref=e567afbc584e32df6492d1ea29a65b583ca24e57", "patch": "@@ -169,6 +169,11 @@ impl<'a, 'gcx, 'tcx> HashStable<StableHashingContext<'a, 'gcx, 'tcx>> for [ast::\n     fn hash_stable<W: StableHasherResult>(&self,\n                                           hcx: &mut StableHashingContext<'a, 'gcx, 'tcx>,\n                                           hasher: &mut StableHasher<W>) {\n+        if self.len() == 0 {\n+            self.len().hash_stable(hcx, hasher);\n+            return\n+        }\n+\n         // Some attributes are always ignored during hashing.\n         let filtered: AccumulateVec<[&ast::Attribute; 8]> = self\n             .iter()"}]}