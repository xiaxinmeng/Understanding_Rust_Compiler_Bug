{"sha": "757e944ba6ace471727cb320c75a52b321c05322", "node_id": "C_kwDOAAsO6NoAKDc1N2U5NDRiYTZhY2U0NzE3MjdjYjMyMGM3NWE1MmIzMjFjMDUzMjI", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2023-01-12T18:29:23Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2023-01-12T18:29:23Z"}, "message": "Adjust old code for newer rustc version.", "tree": {"sha": "434fd3dadad7c3e53250c6aee8b6081f7df4f2e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/434fd3dadad7c3e53250c6aee8b6081f7df4f2e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/757e944ba6ace471727cb320c75a52b321c05322", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/757e944ba6ace471727cb320c75a52b321c05322", "html_url": "https://github.com/rust-lang/rust/commit/757e944ba6ace471727cb320c75a52b321c05322", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/757e944ba6ace471727cb320c75a52b321c05322/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5eed9c69ca9fa04a1417f1f14df0bb5bab2fc8c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5eed9c69ca9fa04a1417f1f14df0bb5bab2fc8c8", "html_url": "https://github.com/rust-lang/rust/commit/5eed9c69ca9fa04a1417f1f14df0bb5bab2fc8c8"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "9adae7733894580fec10663a47c9ab9a69ebb635", "filename": "clippy_utils/src/mir/possible_borrower.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/757e944ba6ace471727cb320c75a52b321c05322/clippy_utils%2Fsrc%2Fmir%2Fpossible_borrower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/757e944ba6ace471727cb320c75a52b321c05322/clippy_utils%2Fsrc%2Fmir%2Fpossible_borrower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fmir%2Fpossible_borrower.rs?ref=757e944ba6ace471727cb320c75a52b321c05322", "patch": "@@ -6,6 +6,7 @@ use rustc_lint::LateContext;\n use rustc_middle::mir::{self, visit::Visitor as _, Mutability};\n use rustc_middle::ty::{self, visit::TypeVisitor};\n use rustc_mir_dataflow::{impls::MaybeStorageLive, Analysis, ResultsCursor};\n+use std::borrow::Cow;\n use std::ops::ControlFlow;\n \n /// Collects the possible borrowers of each local.\n@@ -36,7 +37,7 @@ impl<'a, 'b, 'tcx> PossibleBorrowerVisitor<'a, 'b, 'tcx> {\n     fn into_map(\n         self,\n         cx: &'a LateContext<'tcx>,\n-        maybe_live: ResultsCursor<'b, 'tcx, MaybeStorageLive>,\n+        maybe_live: ResultsCursor<'b, 'tcx, MaybeStorageLive<'tcx>>,\n     ) -> PossibleBorrowerMap<'b, 'tcx> {\n         let mut map = FxHashMap::default();\n         for row in (1..self.body.local_decls.len()).map(mir::Local::from_usize) {\n@@ -167,7 +168,7 @@ fn rvalue_locals(rvalue: &mir::Rvalue<'_>, mut visit: impl FnMut(mir::Local)) {\n pub struct PossibleBorrowerMap<'b, 'tcx> {\n     /// Mapping `Local -> its possible borrowers`\n     pub map: FxHashMap<mir::Local, HybridBitSet<mir::Local>>,\n-    maybe_live: ResultsCursor<'b, 'tcx, MaybeStorageLive>,\n+    maybe_live: ResultsCursor<'b, 'tcx, MaybeStorageLive<'tcx>>,\n     // Caches to avoid allocation of `BitSet` on every query\n     pub bitset: (BitSet<mir::Local>, BitSet<mir::Local>),\n }\n@@ -179,7 +180,7 @@ impl<'a, 'b, 'tcx> PossibleBorrowerMap<'b, 'tcx> {\n             vis.visit_body(mir);\n             vis.into_map(cx)\n         };\n-        let maybe_storage_live_result = MaybeStorageLive::new(BitSet::new_empty(mir.local_decls.len()))\n+        let maybe_storage_live_result = MaybeStorageLive::new(Cow::Owned(BitSet::new_empty(mir.local_decls.len())))\n             .into_engine(cx.tcx, mir)\n             .pass_name(\"redundant_clone\")\n             .iterate_to_fixpoint()"}]}