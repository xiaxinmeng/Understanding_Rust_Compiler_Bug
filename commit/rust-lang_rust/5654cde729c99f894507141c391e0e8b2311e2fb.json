{"sha": "5654cde729c99f894507141c391e0e8b2311e2fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2NTRjZGU3MjljOTlmODk0NTA3MTQxYzM5MWUwZThiMjMxMWUyZmI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-02-23T18:09:00Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-03-16T17:30:26Z"}, "message": "formatting", "tree": {"sha": "57f23cdb953a9c78a0daf3ee6fe2f0ea65a41c96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57f23cdb953a9c78a0daf3ee6fe2f0ea65a41c96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5654cde729c99f894507141c391e0e8b2311e2fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5654cde729c99f894507141c391e0e8b2311e2fb", "html_url": "https://github.com/rust-lang/rust/commit/5654cde729c99f894507141c391e0e8b2311e2fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5654cde729c99f894507141c391e0e8b2311e2fb/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e78c451733f90307cbb34bc6527b0ad4d6c26915", "url": "https://api.github.com/repos/rust-lang/rust/commits/e78c451733f90307cbb34bc6527b0ad4d6c26915", "html_url": "https://github.com/rust-lang/rust/commit/e78c451733f90307cbb34bc6527b0ad4d6c26915"}], "stats": {"total": 51, "additions": 24, "deletions": 27}, "files": [{"sha": "d21fdeb492e190b8ee9a0e834e81cd8254065f57", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5654cde729c99f894507141c391e0e8b2311e2fb/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5654cde729c99f894507141c391e0e8b2311e2fb/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=5654cde729c99f894507141c391e0e8b2311e2fb", "patch": "@@ -394,10 +394,7 @@ pub struct TypeWithKind {\n \n impl From<(Type, TypeKind)> for TypeWithKind {\n     fn from(x: (Type, TypeKind)) -> TypeWithKind {\n-        TypeWithKind {\n-            ty: x.0,\n-            kind: x.1,\n-        }\n+        TypeWithKind { ty: x.0, kind: x.1 }\n     }\n }\n "}, {"sha": "90bbc8929c03ee094f490f331041c3e99ebb861d", "filename": "src/librustdoc/html/render/cache.rs", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/5654cde729c99f894507141c391e0e8b2311e2fb/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5654cde729c99f894507141c391e0e8b2311e2fb/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs?ref=5654cde729c99f894507141c391e0e8b2311e2fb", "patch": "@@ -589,21 +589,21 @@ fn build_index(krate: &clean::Crate, cache: &mut Cache) -> String {\n \n     for item in search_index {\n         item.parent_idx = item.parent.and_then(|defid| {\n-        if defid_to_pathid.contains_key(&defid) {\n-            defid_to_pathid.get(&defid).map(|x| *x)\n-        } else {\n-            let pathid = lastpathid;\n-            defid_to_pathid.insert(defid, pathid);\n-            lastpathid += 1;\n-\n-            if let Some(&(ref fqp, short)) = paths.get(&defid) {\n-                crate_paths.push((short, fqp.last().unwrap().clone()));\n-                Some(pathid)\n+            if defid_to_pathid.contains_key(&defid) {\n+                defid_to_pathid.get(&defid).map(|x| *x)\n             } else {\n-                None\n+                let pathid = lastpathid;\n+                defid_to_pathid.insert(defid, pathid);\n+                lastpathid += 1;\n+\n+                if let Some(&(ref fqp, short)) = paths.get(&defid) {\n+                    crate_paths.push((short, fqp.last().unwrap().clone()));\n+                    Some(pathid)\n+                } else {\n+                    None\n+                }\n             }\n-        }\n-    });\n+        });\n \n         // Omit the parent path if it is same to that of the prior item.\n         if lastpath == item.path {\n@@ -697,10 +697,12 @@ fn get_generics(clean_type: &clean::Type) -> Option<Vec<Generic>> {\n     clean_type.generics().and_then(|types| {\n         let r = types\n             .iter()\n-            .filter_map(|t| if let Some(name) = get_index_type_name(t, false) {\n-                Some(Generic { name: name.to_ascii_lowercase(), defid: t.def_id(), idx: None })\n-            } else {\n-                None\n+            .filter_map(|t| {\n+                if let Some(name) = get_index_type_name(t, false) {\n+                    Some(Generic { name: name.to_ascii_lowercase(), defid: t.def_id(), idx: None })\n+                } else {\n+                    None\n+                }\n             })\n             .collect::<Vec<_>>();\n         if r.is_empty() { None } else { Some(r) }"}, {"sha": "fc07e9f8b033e45ff95e10b60cc933c15f511312", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5654cde729c99f894507141c391e0e8b2311e2fb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/5654cde729c99f894507141c391e0e8b2311e2fb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=5654cde729c99f894507141c391e0e8b2311e2fb", "patch": "@@ -850,8 +850,7 @@ function getSearchElement() {\n                         if (typePassesFilter(typeFilter, tmp[1]) === false) {\n                             continue;\n                         }\n-                        tmp[0] = tmp[NAME];\n-                        var tmp = checkType(tmp, val, literalSearch);\n+                        tmp = checkType(tmp, val, literalSearch);\n                         if (literalSearch === true) {\n                             if (tmp === true) {\n                                 return true;\n@@ -876,12 +875,11 @@ function getSearchElement() {\n                         ret = [ret];\n                     }\n                     for (var x = 0; x < ret.length; ++x) {\n-                        var r = ret[x];\n-                        if (typePassesFilter(typeFilter, r[1]) === false) {\n+                        var tmp = ret[x];\n+                        if (typePassesFilter(typeFilter, tmp[1]) === false) {\n                             continue;\n                         }\n-                        r[0] = r[NAME];\n-                        var tmp = checkType(r, val, literalSearch);\n+                        tmp = checkType(r, val, literalSearch);\n                         if (literalSearch === true) {\n                             if (tmp === true) {\n                                 return true;"}]}