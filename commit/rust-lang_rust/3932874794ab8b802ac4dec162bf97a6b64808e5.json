{"sha": "3932874794ab8b802ac4dec162bf97a6b64808e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MzI4NzQ3OTRhYjhiODAyYWM0ZGVjMTYyYmY5N2E2YjY0ODA4ZTU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-18T07:25:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-18T07:25:57Z"}, "message": "Merge #5787\n\n5787: Fix missing match arm false positive r=matklad a=CAD97\n\nIf the type of the match expression is `{unknown}`, don't do exhaustiveness checks, as it could be an uninhabited type.\n\nCo-authored-by: CAD97 <cad97@cad97.com>", "tree": {"sha": "a73e2ad5d033c6f53357d3895b73b6a810e4a94c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a73e2ad5d033c6f53357d3895b73b6a810e4a94c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3932874794ab8b802ac4dec162bf97a6b64808e5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfO4KFCRBK7hj4Ov3rIwAAdHIIACbYYcb/9HAOdaO/LBnOS3mg\nWrz5SybEQHL+3wc4GjwGPRWnzEn6cQhhd0Qqr+CfdCLVPPZ/9zSlIkJUV0EIATd3\nJkpdsbWaRNn0qbrROIuh9Vr2uc6yiAyeEhHRKnSW/SokHRqKK69HaedMvz7Wm3TQ\nb7DbVCH8edAdj+VXroqxq1Ud35BOxgF7HXJx6KB6+xoa7gmdA+CfF/nlw/Fjaxmf\n6QJJFF14ivDGU9ngKsGHg0o+dgUhusXa1ZD3Po3A/s1Xf+xSLneVtbEh+5B0cfuT\n82POsXwwoGIF3+sXlxibhm3W4u1jCGc3PnWhxU27bOnaQB1E7qerLumkm3cAB1A=\n=c9Oo\n-----END PGP SIGNATURE-----\n", "payload": "tree a73e2ad5d033c6f53357d3895b73b6a810e4a94c\nparent 7d95a8447cf1874dac6381b5b1e644093b72e435\nparent c822bb68ce78171e4017938a66118fc4ccf077d5\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1597735557 +0000\ncommitter GitHub <noreply@github.com> 1597735557 +0000\n\nMerge #5787\n\n5787: Fix missing match arm false positive r=matklad a=CAD97\n\nIf the type of the match expression is `{unknown}`, don't do exhaustiveness checks, as it could be an uninhabited type.\n\nCo-authored-by: CAD97 <cad97@cad97.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3932874794ab8b802ac4dec162bf97a6b64808e5", "html_url": "https://github.com/rust-lang/rust/commit/3932874794ab8b802ac4dec162bf97a6b64808e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3932874794ab8b802ac4dec162bf97a6b64808e5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d95a8447cf1874dac6381b5b1e644093b72e435", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d95a8447cf1874dac6381b5b1e644093b72e435", "html_url": "https://github.com/rust-lang/rust/commit/7d95a8447cf1874dac6381b5b1e644093b72e435"}, {"sha": "c822bb68ce78171e4017938a66118fc4ccf077d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c822bb68ce78171e4017938a66118fc4ccf077d5", "html_url": "https://github.com/rust-lang/rust/commit/c822bb68ce78171e4017938a66118fc4ccf077d5"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "278a4b94726aca5bcd31aaf860a3b99a7d94019f", "filename": "crates/hir_ty/src/diagnostics/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3932874794ab8b802ac4dec162bf97a6b64808e5/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3932874794ab8b802ac4dec162bf97a6b64808e5/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs?ref=3932874794ab8b802ac4dec162bf97a6b64808e5", "patch": "@@ -223,10 +223,10 @@ impl<'a, 'b> ExprValidator<'a, 'b> {\n             db.body_with_source_map(self.owner.into());\n \n         let match_expr_ty = match infer.type_of_expr.get(match_expr) {\n-            Some(ty) => ty,\n             // If we can't resolve the type of the match expression\n             // we cannot perform exhaustiveness checks.\n-            None => return,\n+            None | Some(Ty::Unknown) => return,\n+            Some(ty) => ty,\n         };\n \n         let cx = MatchCheckCtx { match_expr, body, infer: infer.clone(), db };"}, {"sha": "5bd03f2ac00d1c6046ded5f1960a0c8773c3d4b0", "filename": "crates/hir_ty/src/diagnostics/match_check.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3932874794ab8b802ac4dec162bf97a6b64808e5/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3932874794ab8b802ac4dec162bf97a6b64808e5/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs?ref=3932874794ab8b802ac4dec162bf97a6b64808e5", "patch": "@@ -1335,6 +1335,23 @@ fn panic(a: Category, b: Category) {\n         );\n     }\n \n+    #[test]\n+    fn unknown_type() {\n+        check_diagnostics(\n+            r#\"\n+enum Option<T> { Some(T), None }\n+\n+fn main() {\n+    // `Never` is deliberately not defined so that it's an uninferred type.\n+    match Option::<Never>::None {\n+        None => (),\n+        Some(never) => match never {},\n+    }\n+}\n+\"#,\n+        );\n+    }\n+\n     mod false_negatives {\n         //! The implementation of match checking here is a work in progress. As we roll this out, we\n         //! prefer false negatives to false positives (ideally there would be no false positives). This"}]}