{"sha": "8f76e41e185027e4851b0a0fee1bc1e0ffbe2ca0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNzZlNDFlMTg1MDI3ZTQ4NTFiMGEwZmVlMWJjMWUwZmZiZTJjYTA=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-09-13T23:23:08Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-09-13T23:23:13Z"}, "message": "Enable attribte macros in ide fixtures", "tree": {"sha": "b3e66f76d8d783a6b66704f630611cc9af57d406", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3e66f76d8d783a6b66704f630611cc9af57d406"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f76e41e185027e4851b0a0fee1bc1e0ffbe2ca0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f76e41e185027e4851b0a0fee1bc1e0ffbe2ca0", "html_url": "https://github.com/rust-lang/rust/commit/8f76e41e185027e4851b0a0fee1bc1e0ffbe2ca0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f76e41e185027e4851b0a0fee1bc1e0ffbe2ca0/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb946f78f66f2338228d36a852a7dd96f2f5a290", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb946f78f66f2338228d36a852a7dd96f2f5a290", "html_url": "https://github.com/rust-lang/rust/commit/bb946f78f66f2338228d36a852a7dd96f2f5a290"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "700f4dc95500a06dc6d8b438fd837f6a6e833a35", "filename": "crates/ide/src/fixture.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8f76e41e185027e4851b0a0fee1bc1e0ffbe2ca0/crates%2Fide%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f76e41e185027e4851b0a0fee1bc1e0ffbe2ca0/crates%2Fide%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ffixture.rs?ref=8f76e41e185027e4851b0a0fee1bc1e0ffbe2ca0", "patch": "@@ -9,6 +9,7 @@ use crate::{Analysis, AnalysisHost, FileId, FilePosition, FileRange};\n pub(crate) fn file(ra_fixture: &str) -> (Analysis, FileId) {\n     let mut host = AnalysisHost::default();\n     let change_fixture = ChangeFixture::parse(ra_fixture);\n+    host.db.set_enable_proc_attr_macros(true);\n     host.db.apply_change(change_fixture.change);\n     (host.analysis(), change_fixture.files[0])\n }\n@@ -17,6 +18,7 @@ pub(crate) fn file(ra_fixture: &str) -> (Analysis, FileId) {\n pub(crate) fn position(ra_fixture: &str) -> (Analysis, FilePosition) {\n     let mut host = AnalysisHost::default();\n     let change_fixture = ChangeFixture::parse(ra_fixture);\n+    host.db.set_enable_proc_attr_macros(true);\n     host.db.apply_change(change_fixture.change);\n     let (file_id, range_or_offset) = change_fixture.file_position.expect(\"expected a marker ($0)\");\n     let offset = range_or_offset.expect_offset();\n@@ -27,6 +29,7 @@ pub(crate) fn position(ra_fixture: &str) -> (Analysis, FilePosition) {\n pub(crate) fn range(ra_fixture: &str) -> (Analysis, FileRange) {\n     let mut host = AnalysisHost::default();\n     let change_fixture = ChangeFixture::parse(ra_fixture);\n+    host.db.set_enable_proc_attr_macros(true);\n     host.db.apply_change(change_fixture.change);\n     let (file_id, range_or_offset) = change_fixture.file_position.expect(\"expected a marker ($0)\");\n     let range = range_or_offset.expect_range();\n@@ -37,6 +40,7 @@ pub(crate) fn range(ra_fixture: &str) -> (Analysis, FileRange) {\n pub(crate) fn range_or_position(ra_fixture: &str) -> (Analysis, FileId, RangeOrOffset) {\n     let mut host = AnalysisHost::default();\n     let change_fixture = ChangeFixture::parse(ra_fixture);\n+    host.db.set_enable_proc_attr_macros(true);\n     host.db.apply_change(change_fixture.change);\n     let (file_id, range_or_offset) = change_fixture.file_position.expect(\"expected a marker ($0)\");\n     (host.analysis(), file_id, range_or_offset)\n@@ -45,8 +49,8 @@ pub(crate) fn range_or_position(ra_fixture: &str) -> (Analysis, FileId, RangeOrO\n /// Creates analysis from a multi-file fixture, returns positions marked with $0.\n pub(crate) fn annotations(ra_fixture: &str) -> (Analysis, FilePosition, Vec<(FileRange, String)>) {\n     let mut host = AnalysisHost::default();\n-    host.db.set_enable_proc_attr_macros(true);\n     let change_fixture = ChangeFixture::parse(ra_fixture);\n+    host.db.set_enable_proc_attr_macros(true);\n     host.db.apply_change(change_fixture.change);\n     let (file_id, range_or_offset) = change_fixture.file_position.expect(\"expected a marker ($0)\");\n     let offset = range_or_offset.expect_offset();"}]}