{"sha": "8d9912ef49ceed0b813d7b75344fe9e261044f93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkOTkxMmVmNDljZWVkMGI4MTNkN2I3NTM0NGZlOWUyNjEwNDRmOTM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-01T17:49:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-01T17:49:14Z"}, "message": "Rollup merge of #71749 - RalfJung:miri-error-print, r=oli-obk\n\nfix Miri error message padding\n\nI screwed up in the previous PR, and accidentally padded with spaces instead of 0s...\n\nr? @oli-obk", "tree": {"sha": "ca6a1e5868561ca97571d8283c69fce559bdca08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca6a1e5868561ca97571d8283c69fce559bdca08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d9912ef49ceed0b813d7b75344fe9e261044f93", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJerGEbCRBK7hj4Ov3rIwAAdHIIAAzaH3mKMMo2oO08SWLdZRkY\ndwOk9d5ZCfk7qgWJuwGrXBeQ/L82AX4ZEvPq+7m7QPE2ouXwFF0PMaBpIeMzNAbq\nck60QR6kRA3NVoDMYjpR3VNO7NY4yqtvyxzYUHFTeaK/nCKsDP0gR683teJa+WZT\nwye58CtMhOodbHqbVcWjT1Rw1z2oNYiAQqLqmWMZP6lt2uZxvdDrgMzBORodnkZV\nkVzhcbWOEZC33X4ZE+YkyLYNUsOgRRPUE6GGXtjvyP7nmzgM+vgjAptD6RVjEZk/\nVmscyNR1Cx1YoapdL3Z+UME5Lp4RlhDK8PuN2lmQ5nilc6oAMihC/BWfjqE2vpY=\n=tZn+\n-----END PGP SIGNATURE-----\n", "payload": "tree ca6a1e5868561ca97571d8283c69fce559bdca08\nparent d83d8be65d92f00f816f5ae55731c6416b2ff849\nparent 1bab6a4db788abae8c06cfa3cb19b0027e9cd8bf\nauthor Dylan DPC <dylan.dpc@gmail.com> 1588355354 +0200\ncommitter GitHub <noreply@github.com> 1588355354 +0200\n\nRollup merge of #71749 - RalfJung:miri-error-print, r=oli-obk\n\nfix Miri error message padding\n\nI screwed up in the previous PR, and accidentally padded with spaces instead of 0s...\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d9912ef49ceed0b813d7b75344fe9e261044f93", "html_url": "https://github.com/rust-lang/rust/commit/8d9912ef49ceed0b813d7b75344fe9e261044f93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d9912ef49ceed0b813d7b75344fe9e261044f93/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d83d8be65d92f00f816f5ae55731c6416b2ff849", "url": "https://api.github.com/repos/rust-lang/rust/commits/d83d8be65d92f00f816f5ae55731c6416b2ff849", "html_url": "https://github.com/rust-lang/rust/commit/d83d8be65d92f00f816f5ae55731c6416b2ff849"}, {"sha": "1bab6a4db788abae8c06cfa3cb19b0027e9cd8bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bab6a4db788abae8c06cfa3cb19b0027e9cd8bf", "html_url": "https://github.com/rust-lang/rust/commit/1bab6a4db788abae8c06cfa3cb19b0027e9cd8bf"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "0ab14b53e1b1f3954f00fb9daa94f91f0dab43ff", "filename": "src/librustc_middle/mir/interpret/error.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8d9912ef49ceed0b813d7b75344fe9e261044f93/src%2Flibrustc_middle%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d9912ef49ceed0b813d7b75344fe9e261044f93/src%2Flibrustc_middle%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Finterpret%2Ferror.rs?ref=8d9912ef49ceed0b813d7b75344fe9e261044f93", "patch": "@@ -439,10 +439,10 @@ impl fmt::Display for UndefinedBehaviorInfo {\n             DerefFunctionPointer(a) => write!(f, \"accessing {} which contains a function\", a),\n             ValidationFailure(ref err) => write!(f, \"type validation failed: {}\", err),\n             InvalidBool(b) => {\n-                write!(f, \"interpreting an invalid 8-bit value as a bool: 0x{:2x}\", b)\n+                write!(f, \"interpreting an invalid 8-bit value as a bool: 0x{:02x}\", b)\n             }\n             InvalidChar(c) => {\n-                write!(f, \"interpreting an invalid 32-bit value as a char: 0x{:8x}\", c)\n+                write!(f, \"interpreting an invalid 32-bit value as a char: 0x{:08x}\", c)\n             }\n             InvalidDiscriminant(val) => write!(f, \"enum value has invalid discriminant: {}\", val),\n             InvalidFunctionPointer(p) => {"}]}