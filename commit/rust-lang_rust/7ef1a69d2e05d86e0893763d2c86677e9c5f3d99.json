{"sha": "7ef1a69d2e05d86e0893763d2c86677e9c5f3d99", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlZjFhNjlkMmUwNWQ4NmUwODkzNzYzZDJjODY2NzdlOWM1ZjNkOTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-09T10:58:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-09T10:58:08Z"}, "message": "Auto merge of #38929 - Manishearth:compiler-docs, r=alexcrichton\n\nDon't restrict docs in compiler-docs mode\n\nSearch is broken without this. We want all crates to be included in compiler-docs mode. This was changed in https://github.com/rust-lang/rust/pull/38858, this PR brings that functionality back in compiler-docs mode.", "tree": {"sha": "9f0ea3d0eef26d133fa878907776179f40140158", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f0ea3d0eef26d133fa878907776179f40140158"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ef1a69d2e05d86e0893763d2c86677e9c5f3d99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ef1a69d2e05d86e0893763d2c86677e9c5f3d99", "html_url": "https://github.com/rust-lang/rust/commit/7ef1a69d2e05d86e0893763d2c86677e9c5f3d99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ef1a69d2e05d86e0893763d2c86677e9c5f3d99/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e18e629c29ae4f94c0a16fa2d5259550b0d5e39", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e18e629c29ae4f94c0a16fa2d5259550b0d5e39", "html_url": "https://github.com/rust-lang/rust/commit/6e18e629c29ae4f94c0a16fa2d5259550b0d5e39"}, {"sha": "af00927a8bba04fb4e0a5cc141211d2837f28d03", "url": "https://api.github.com/repos/rust-lang/rust/commits/af00927a8bba04fb4e0a5cc141211d2837f28d03", "html_url": "https://github.com/rust-lang/rust/commit/af00927a8bba04fb4e0a5cc141211d2837f28d03"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "d1c9918a73373f95a01dd5e631b9372510a3294b", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7ef1a69d2e05d86e0893763d2c86677e9c5f3d99/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ef1a69d2e05d86e0893763d2c86677e9c5f3d99/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=7ef1a69d2e05d86e0893763d2c86677e9c5f3d99", "patch": "@@ -151,17 +151,25 @@ pub fn std(build: &Build, stage: u32, target: &str) {\n     let mut cargo = build.cargo(&compiler, Mode::Libstd, target, \"doc\");\n     cargo.arg(\"--manifest-path\")\n          .arg(build.src.join(\"src/rustc/std_shim/Cargo.toml\"))\n-         .arg(\"--features\").arg(build.std_features())\n-         .arg(\"--no-deps\");\n-\n-    for krate in &[\"alloc\", \"collections\", \"core\", \"std\", \"std_unicode\"] {\n-        cargo.arg(\"-p\").arg(krate);\n-        // Create all crate output directories first to make sure rustdoc uses\n-        // relative links.\n-        // FIXME: Cargo should probably do this itself.\n-        t!(fs::create_dir_all(out_dir.join(krate)));\n+         .arg(\"--features\").arg(build.std_features());\n+\n+    // We don't want to build docs for internal std dependencies unless\n+    // in compiler-docs mode. When not in that mode, we whitelist the crates\n+    // for which docs must be built.\n+    if build.config.compiler_docs {\n+        cargo.arg(\"-p\").arg(\"std\");\n+    } else {\n+        cargo.arg(\"--no-deps\");\n+        for krate in &[\"alloc\", \"collections\", \"core\", \"std\", \"std_unicode\"] {\n+            cargo.arg(\"-p\").arg(krate);\n+            // Create all crate output directories first to make sure rustdoc uses\n+            // relative links.\n+            // FIXME: Cargo should probably do this itself.\n+            t!(fs::create_dir_all(out_dir.join(krate)));\n+        }\n     }\n \n+\n     build.run(&mut cargo);\n     cp_r(&out_dir, &out)\n }"}]}