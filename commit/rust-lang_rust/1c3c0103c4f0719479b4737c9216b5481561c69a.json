{"sha": "1c3c0103c4f0719479b4737c9216b5481561c69a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjM2MwMTAzYzRmMDcxOTQ3OWI0NzM3YzkyMTZiNTQ4MTU2MWM2OWE=", "commit": {"author": {"name": "Carl-Anton Ingmarsson", "email": "mail@carlanton.se", "date": "2014-01-01T18:09:10Z"}, "committer": {"name": "Carl-Anton Ingmarsson", "email": "mail@carlanton.se", "date": "2014-01-01T21:27:49Z"}, "message": "libextra: Use from_be32 instead of bswap32 in vuint_at()\n\nAlso use the fast version of vuint_at() on all architectures since it now\nworks on both big and little endian architectures.", "tree": {"sha": "5714f6d3b2b61acfee7695d3d295b412ffb8a551", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5714f6d3b2b61acfee7695d3d295b412ffb8a551"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c3c0103c4f0719479b4737c9216b5481561c69a", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c3c0103c4f0719479b4737c9216b5481561c69a", "html_url": "https://github.com/rust-lang/rust/commit/1c3c0103c4f0719479b4737c9216b5481561c69a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c3c0103c4f0719479b4737c9216b5481561c69a/comments", "author": {"login": "c-a", "id": 804040, "node_id": "MDQ6VXNlcjgwNDA0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/804040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c-a", "html_url": "https://github.com/c-a", "followers_url": "https://api.github.com/users/c-a/followers", "following_url": "https://api.github.com/users/c-a/following{/other_user}", "gists_url": "https://api.github.com/users/c-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/c-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c-a/subscriptions", "organizations_url": "https://api.github.com/users/c-a/orgs", "repos_url": "https://api.github.com/users/c-a/repos", "events_url": "https://api.github.com/users/c-a/events{/privacy}", "received_events_url": "https://api.github.com/users/c-a/received_events", "type": "User", "site_admin": false}, "committer": {"login": "c-a", "id": 804040, "node_id": "MDQ6VXNlcjgwNDA0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/804040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c-a", "html_url": "https://github.com/c-a", "followers_url": "https://api.github.com/users/c-a/followers", "following_url": "https://api.github.com/users/c-a/following{/other_user}", "gists_url": "https://api.github.com/users/c-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/c-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c-a/subscriptions", "organizations_url": "https://api.github.com/users/c-a/orgs", "repos_url": "https://api.github.com/users/c-a/repos", "events_url": "https://api.github.com/users/c-a/events{/privacy}", "received_events_url": "https://api.github.com/users/c-a/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19d8ab8d5a311e502a55189d2a34858f8413fbef", "url": "https://api.github.com/repos/rust-lang/rust/commits/19d8ab8d5a311e502a55189d2a34858f8413fbef", "html_url": "https://github.com/rust-lang/rust/commit/19d8ab8d5a311e502a55189d2a34858f8413fbef"}], "stats": {"total": 11, "additions": 2, "deletions": 9}, "files": [{"sha": "b63f7e495b90a5cd27dab91b4d37b76764dea665", "filename": "src/libextra/ebml.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1c3c0103c4f0719479b4737c9216b5481561c69a/src%2Flibextra%2Febml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c3c0103c4f0719479b4737c9216b5481561c69a/src%2Flibextra%2Febml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Febml.rs?ref=1c3c0103c4f0719479b4737c9216b5481561c69a", "patch": "@@ -122,11 +122,9 @@ pub mod reader {\n         fail!(\"vint too big\");\n     }\n \n-    #[cfg(target_arch = \"x86\")]\n-    #[cfg(target_arch = \"x86_64\")]\n     pub fn vuint_at(data: &[u8], start: uint) -> Res {\n         use std::ptr::offset;\n-        use std::unstable::intrinsics::bswap32;\n+        use std::unstable::intrinsics::from_be32;\n \n         if data.len() - start < 4 {\n             return vuint_at_slow(data, start);\n@@ -136,7 +134,7 @@ pub mod reader {\n             let (ptr, _): (*u8, uint) = transmute(data);\n             let ptr = offset(ptr, start as int);\n             let ptr: *i32 = transmute(ptr);\n-            let val = bswap32(*ptr);\n+            let val = from_be32(*ptr);\n             let val: u32 = transmute(val);\n             if (val & 0x80000000) != 0 {\n                 Res {\n@@ -162,11 +160,6 @@ pub mod reader {\n         }\n     }\n \n-    #[cfg(not(target_arch = \"x86\"), not(target_arch = \"x86_64\"))]\n-    pub fn vuint_at(data: &[u8], start: uint) -> Res {\n-        vuint_at_slow(data, start)\n-    }\n-\n     pub fn Doc<'a>(data: &'a [u8]) -> Doc<'a> {\n         Doc { data: data, start: 0u, end: data.len() }\n     }"}]}