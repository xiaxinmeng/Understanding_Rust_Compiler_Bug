{"sha": "e836a4cd79c8b7f6ba8ea93c6da29e7b803116f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4MzZhNGNkNzljOGI3ZjZiYThlYTkzYzZkYTI5ZTdiODAzMTE2ZjM=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2019-05-17T02:48:13Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2019-05-17T02:48:13Z"}, "message": "Prevent Error::type_id overrides\n\ntype_id now takes an argument that can't be named outside of the\nstd::error module, which prevents any implementations from overriding\nit. It's a pretty grody solution, and there's no way we can stabilize\nthe method with this API, but it avoids the soudness issue!\n\nCloses #60784", "tree": {"sha": "d54df8b94952d9f55691f47e3b9b905db9503114", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d54df8b94952d9f55691f47e3b9b905db9503114"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e836a4cd79c8b7f6ba8ea93c6da29e7b803116f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e836a4cd79c8b7f6ba8ea93c6da29e7b803116f3", "html_url": "https://github.com/rust-lang/rust/commit/e836a4cd79c8b7f6ba8ea93c6da29e7b803116f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e836a4cd79c8b7f6ba8ea93c6da29e7b803116f3/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f53b5c42baf498b0dd8adbe59aae648a2cf6c14", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f53b5c42baf498b0dd8adbe59aae648a2cf6c14", "html_url": "https://github.com/rust-lang/rust/commit/4f53b5c42baf498b0dd8adbe59aae648a2cf6c14"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "d2aa2195a35ed1775cec212825bea5d32a91ac9a", "filename": "src/libstd/error.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e836a4cd79c8b7f6ba8ea93c6da29e7b803116f3/src%2Flibstd%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e836a4cd79c8b7f6ba8ea93c6da29e7b803116f3/src%2Flibstd%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ferror.rs?ref=e836a4cd79c8b7f6ba8ea93c6da29e7b803116f3", "patch": "@@ -201,11 +201,19 @@ pub trait Error: Debug + Display {\n     #[unstable(feature = \"error_type_id\",\n                reason = \"this is memory unsafe to override in user code\",\n                issue = \"60784\")]\n-    fn type_id(&self) -> TypeId where Self: 'static {\n+    fn type_id(&self, _: private::Internal) -> TypeId where Self: 'static {\n         TypeId::of::<Self>()\n     }\n }\n \n+mod private {\n+    // this is a hack to prevent type_id from being overridden by Error\n+    // implementations, since that can enable unsound downcasting.\n+    #[unstable(feature = \"error_type_id\", issue = \"60784\")]\n+    #[derive(Debug)]\n+    pub struct Internal;\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, E: Error + 'a> From<E> for Box<dyn Error + 'a> {\n     /// Converts a type of [`Error`] into a box of dyn [`Error`].\n@@ -575,7 +583,7 @@ impl dyn Error + 'static {\n         let t = TypeId::of::<T>();\n \n         // Get TypeId of the type in the trait object\n-        let boxed = self.type_id();\n+        let boxed = self.type_id(private::Internal);\n \n         // Compare both TypeIds on equality\n         t == boxed"}]}