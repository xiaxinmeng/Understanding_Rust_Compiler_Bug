{"sha": "fabbef2c3eaad7326e60cbb7c4c818bfaccb3178", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhYmJlZjJjM2VhYWQ3MzI2ZTYwY2JiN2M0YzgxOGJmYWNjYjMxNzg=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-04T06:21:30Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-04T10:35:29Z"}, "message": "Add macro to block expr", "tree": {"sha": "ea88674e6bf5653b8fb7a798cbecbacfe39bcdbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea88674e6bf5653b8fb7a798cbecbacfe39bcdbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fabbef2c3eaad7326e60cbb7c4c818bfaccb3178", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fabbef2c3eaad7326e60cbb7c4c818bfaccb3178", "html_url": "https://github.com/rust-lang/rust/commit/fabbef2c3eaad7326e60cbb7c4c818bfaccb3178", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fabbef2c3eaad7326e60cbb7c4c818bfaccb3178/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62d200d9cffcaa50c7874637d588072ded9dffac", "url": "https://api.github.com/repos/rust-lang/rust/commits/62d200d9cffcaa50c7874637d588072ded9dffac", "html_url": "https://github.com/rust-lang/rust/commit/62d200d9cffcaa50c7874637d588072ded9dffac"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "c7c0b82a64db873dd2bbedd0a65e9158ccd95388", "filename": "src/chains.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fabbef2c3eaad7326e60cbb7c4c818bfaccb3178/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fabbef2c3eaad7326e60cbb7c4c818bfaccb3178/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=fabbef2c3eaad7326e60cbb7c4c818bfaccb3178", "patch": "@@ -339,6 +339,7 @@ fn join_rewrites(rewrites: &[String], subexps: &[ast::Expr], connector: &str) ->\n // parens, braces, and brackets in its idiomatic formatting.\n fn is_block_expr(context: &RewriteContext, expr: &ast::Expr, repr: &str) -> bool {\n     match expr.node {\n+        ast::ExprKind::Mac(..) |\n         ast::ExprKind::Call(..) => context.use_block_indent() && repr.contains('\\n'),\n         ast::ExprKind::Struct(..) |\n         ast::ExprKind::While(..) |"}]}