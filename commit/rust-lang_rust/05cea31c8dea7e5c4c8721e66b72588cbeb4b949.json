{"sha": "05cea31c8dea7e5c4c8721e66b72588cbeb4b949", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1Y2VhMzFjOGRlYTdlNWM0Yzg3MjFlNjZiNzI1ODhjYmViNGI5NDk=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-12-08T19:04:14Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-12-08T19:04:14Z"}, "message": "fix span for invalid number of parameters in trait method", "tree": {"sha": "dc1e7af7e76142370a3560a36052f0ff17ea7c29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc1e7af7e76142370a3560a36052f0ff17ea7c29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05cea31c8dea7e5c4c8721e66b72588cbeb4b949", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05cea31c8dea7e5c4c8721e66b72588cbeb4b949", "html_url": "https://github.com/rust-lang/rust/commit/05cea31c8dea7e5c4c8721e66b72588cbeb4b949", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05cea31c8dea7e5c4c8721e66b72588cbeb4b949/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "118e052d84157a675649fe640e3d56f264475a3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/118e052d84157a675649fe640e3d56f264475a3a", "html_url": "https://github.com/rust-lang/rust/commit/118e052d84157a675649fe640e3d56f264475a3a"}], "stats": {"total": 72, "additions": 61, "deletions": 11}, "files": [{"sha": "7c311db17d33aa61a3f91ffbd3b5d4cdbdc74061", "filename": "src/librustc_typeck/check/compare_method.rs", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/05cea31c8dea7e5c4c8721e66b72588cbeb4b949/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05cea31c8dea7e5c4c8721e66b72588cbeb4b949/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs?ref=05cea31c8dea7e5c4c8721e66b72588cbeb4b949", "patch": "@@ -648,12 +648,19 @@ fn compare_number_of_method_arguments<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         let trait_span = if let Some(trait_id) = trait_m_node_id {\n             match tcx.hir.expect_trait_item(trait_id).node {\n                 TraitItemKind::Method(ref trait_m_sig, _) => {\n-                    if let Some(arg) = trait_m_sig.decl.inputs.get(if trait_number_args > 0 {\n+                    let pos = if trait_number_args > 0 {\n                         trait_number_args - 1\n                     } else {\n                         0\n-                    }) {\n-                        Some(arg.span)\n+                    };\n+                    if let Some(arg) = trait_m_sig.decl.inputs.get(pos) {\n+                        Some(if pos == 0 {\n+                            arg.span\n+                        } else {\n+                            Span::new(trait_m_sig.decl.inputs[0].span.lo(),\n+                                      arg.span.hi(),\n+                                      arg.span.ctxt())\n+                        })\n                     } else {\n                         trait_item_span\n                     }\n@@ -666,12 +673,19 @@ fn compare_number_of_method_arguments<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         let impl_m_node_id = tcx.hir.as_local_node_id(impl_m.def_id).unwrap();\n         let impl_span = match tcx.hir.expect_impl_item(impl_m_node_id).node {\n             ImplItemKind::Method(ref impl_m_sig, _) => {\n-                if let Some(arg) = impl_m_sig.decl.inputs.get(if impl_number_args > 0 {\n+                let pos = if impl_number_args > 0 {\n                     impl_number_args - 1\n                 } else {\n                     0\n-                }) {\n-                    arg.span\n+                };\n+                if let Some(arg) = impl_m_sig.decl.inputs.get(pos) {\n+                    if pos == 0 {\n+                        arg.span\n+                    } else {\n+                        Span::new(impl_m_sig.decl.inputs[0].span.lo(),\n+                                  arg.span.hi(),\n+                                  arg.span.ctxt())\n+                    }\n                 } else {\n                     impl_m_span\n                 }"}, {"sha": "6c797e0073144b419b7af4b8855e54a84f1f4cc8", "filename": "src/test/ui/error-codes/E0050.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/05cea31c8dea7e5c4c8721e66b72588cbeb4b949/src%2Ftest%2Fui%2Ferror-codes%2FE0050.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05cea31c8dea7e5c4c8721e66b72588cbeb4b949/src%2Ftest%2Fui%2Ferror-codes%2FE0050.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0050.stderr?ref=05cea31c8dea7e5c4c8721e66b72588cbeb4b949", "patch": "@@ -2,7 +2,7 @@ error[E0050]: method `foo` has 1 parameter but the declaration in trait `Foo::fo\n   --> $DIR/E0050.rs:20:12\n    |\n LL |     fn foo(&self, x: u8) -> bool;\n-   |                      -- trait requires 2 parameters\n+   |            ------------ trait requires 2 parameters\n ...\n LL |     fn foo(&self) -> bool { true } //~ ERROR E0050\n    |            ^^^^^ expected 2 parameters, found 1\n@@ -11,19 +11,19 @@ error[E0050]: method `bar` has 1 parameter but the declaration in trait `Foo::ba\n   --> $DIR/E0050.rs:21:12\n    |\n LL |     fn bar(&self, x: u8, y: u8, z: u8);\n-   |                                    -- trait requires 4 parameters\n+   |            -------------------------- trait requires 4 parameters\n ...\n LL |     fn bar(&self) { } //~ ERROR E0050\n    |            ^^^^^ expected 4 parameters, found 1\n \n error[E0050]: method `less` has 4 parameters but the declaration in trait `Foo::less` has 1\n-  --> $DIR/E0050.rs:22:37\n+  --> $DIR/E0050.rs:22:13\n    |\n LL |     fn less(&self);\n    |             ----- trait requires 1 parameter\n ...\n LL |     fn less(&self, x: u8, y: u8, z: u8) { } //~ ERROR E0050\n-   |                                     ^^ expected 1 parameter, found 4\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 parameter, found 4\n \n error: aborting due to 3 previous errors\n "}, {"sha": "c2591e4bda6befa22fd8d2b5a3d2c47a76cac7bb", "filename": "src/test/ui/trait-method-number-parameters.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/05cea31c8dea7e5c4c8721e66b72588cbeb4b949/src%2Ftest%2Fui%2Ftrait-method-number-parameters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05cea31c8dea7e5c4c8721e66b72588cbeb4b949/src%2Ftest%2Fui%2Ftrait-method-number-parameters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-method-number-parameters.rs?ref=05cea31c8dea7e5c4c8721e66b72588cbeb4b949", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Foo {\n+    fn foo(&mut self, x: i32, y: i32) -> i32;\n+}\n+\n+impl Foo for i32 {\n+    fn foo(\n+        &mut self, //~ ERROR\n+        x: i32,\n+    ) {\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "98a08d2474d8fc146308b765024f506f47037ee4", "filename": "src/test/ui/trait-method-number-parameters.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/05cea31c8dea7e5c4c8721e66b72588cbeb4b949/src%2Ftest%2Fui%2Ftrait-method-number-parameters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05cea31c8dea7e5c4c8721e66b72588cbeb4b949/src%2Ftest%2Fui%2Ftrait-method-number-parameters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-method-number-parameters.stderr?ref=05cea31c8dea7e5c4c8721e66b72588cbeb4b949", "patch": "@@ -0,0 +1,13 @@\n+error[E0050]: method `foo` has 2 parameters but the declaration in trait `Foo::foo` has 3\n+  --> $DIR/trait-method-number-parameters.rs:17:9\n+   |\n+LL |       fn foo(&mut self, x: i32, y: i32) -> i32;\n+   |              ------------------------- trait requires 3 parameters\n+...\n+LL | /         &mut self, //~ ERROR\n+LL | |         x: i32,\n+   | |______________^ expected 3 parameters, found 2\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0050`."}, {"sha": "18024449d81eed0d8a5f943e73cf1698e5a3558b", "filename": "src/test/ui/traits/trait-impl-different-num-params.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/05cea31c8dea7e5c4c8721e66b72588cbeb4b949/src%2Ftest%2Fui%2Ftraits%2Ftrait-impl-different-num-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05cea31c8dea7e5c4c8721e66b72588cbeb4b949/src%2Ftest%2Fui%2Ftraits%2Ftrait-impl-different-num-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-impl-different-num-params.stderr?ref=05cea31c8dea7e5c4c8721e66b72588cbeb4b949", "patch": "@@ -2,7 +2,7 @@ error[E0050]: method `bar` has 1 parameter but the declaration in trait `foo::ba\n   --> $DIR/trait-impl-different-num-params.rs:15:12\n    |\n LL |     fn bar(&self, x: usize) -> Self;\n-   |                      ----- trait requires 2 parameters\n+   |            --------------- trait requires 2 parameters\n ...\n LL |     fn bar(&self) -> isize {\n    |            ^^^^^ expected 2 parameters, found 1"}]}