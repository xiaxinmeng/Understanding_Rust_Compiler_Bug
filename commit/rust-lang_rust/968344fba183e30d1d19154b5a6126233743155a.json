{"sha": "968344fba183e30d1d19154b5a6126233743155a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2ODM0NGZiYTE4M2UzMGQxZDE5MTU0YjVhNjEyNjIzMzc0MzE1NWE=", "commit": {"author": {"name": "Oliver Schneider", "email": "github4395871230gnr48oli-obk.de", "date": "2015-05-02T14:56:46Z"}, "committer": {"name": "Oliver Schneider", "email": "github4395871230gnr48oli-obk.de", "date": "2015-05-02T14:56:46Z"}, "message": "pass single filename instead of full argument list to idem_check", "tree": {"sha": "c27359b421abf391b7dcbdbb76aaf8f31f18b289", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c27359b421abf391b7dcbdbb76aaf8f31f18b289"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/968344fba183e30d1d19154b5a6126233743155a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/968344fba183e30d1d19154b5a6126233743155a", "html_url": "https://github.com/rust-lang/rust/commit/968344fba183e30d1d19154b5a6126233743155a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/968344fba183e30d1d19154b5a6126233743155a/comments", "author": null, "committer": null, "parents": [{"sha": "a50337a118c3fe9e0f32aa5cf4209b856d1f7bfc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a50337a118c3fe9e0f32aa5cf4209b856d1f7bfc", "html_url": "https://github.com/rust-lang/rust/commit/a50337a118c3fe9e0f32aa5cf4209b856d1f7bfc"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "401e5fffcc6aa35c138b384983fb3e1f3f9dc8c1", "filename": "tests/idem.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/968344fba183e30d1d19154b5a6126233743155a/tests%2Fidem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/968344fba183e30d1d19154b5a6126233743155a/tests%2Fidem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fidem.rs?ref=968344fba183e30d1d19154b5a6126233743155a", "patch": "@@ -39,7 +39,7 @@ fn idempotent_tests() {\n             continue;\n         }\n         println!(\"Testing '{}'...\", file_name);\n-        match idempotent_check(vec![\"rustfmt\".to_owned(), file_name.to_owned()]) {\n+        match idempotent_check(file_name.to_owned()) {\n             Ok(()) => {},\n             Err(m) => {\n                 print_mismatches(m);\n@@ -50,7 +50,7 @@ fn idempotent_tests() {\n     }\n     // And also dogfood rustfmt!\n     println!(\"Testing 'src/lib.rs'...\");\n-    match idempotent_check(vec![\"rustfmt\".to_owned(), \"src/lib.rs\".to_owned()]) {\n+    match idempotent_check(\"src/lib.rs\".to_owned()) {\n         Ok(()) => {},\n         Err(m) => {\n             print_mismatches(m);\n@@ -75,10 +75,11 @@ fn print_mismatches(result: HashMap<String, String>) {\n // Ick, just needed to get a &'static to handle_result.\n static HANDLE_RESULT: &'static Fn(HashMap<String, String>) = &handle_result;\n \n-pub fn idempotent_check(args: Vec<String>) -> Result<(), HashMap<String, String>> {\n+pub fn idempotent_check(filename: String) -> Result<(), HashMap<String, String>> {\n     use std::thread;\n     use std::fs;\n     use std::io::Read;\n+\tlet args = vec![\"rustfmt\".to_owned(), filename];\n     thread::spawn(move || {\n         run(args, WriteMode::Return(HANDLE_RESULT));\n     }).join().map_err(|mut any|"}]}