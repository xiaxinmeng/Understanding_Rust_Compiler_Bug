{"sha": "34063199d8fc40a9e97c1409d5077b153cf32fab", "node_id": "C_kwDOAAsO6NoAKDM0MDYzMTk5ZDhmYzQwYTllOTdjMTQwOWQ1MDc3YjE1M2NmMzJmYWI", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-02T21:40:33Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-02T21:40:33Z"}, "message": "Fix rust-call ICE in mir-inliner", "tree": {"sha": "bc7f29b36dd040186406f1287df228dd2d98fc85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc7f29b36dd040186406f1287df228dd2d98fc85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34063199d8fc40a9e97c1409d5077b153cf32fab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34063199d8fc40a9e97c1409d5077b153cf32fab", "html_url": "https://github.com/rust-lang/rust/commit/34063199d8fc40a9e97c1409d5077b153cf32fab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34063199d8fc40a9e97c1409d5077b153cf32fab/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "750d6f85459356db4838dc06db8b19406e1ed31a", "url": "https://api.github.com/repos/rust-lang/rust/commits/750d6f85459356db4838dc06db8b19406e1ed31a", "html_url": "https://github.com/rust-lang/rust/commit/750d6f85459356db4838dc06db8b19406e1ed31a"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "12f5764152e56e4025c46cbb7262b36ddb8f6da9", "filename": "compiler/rustc_mir_transform/src/inline.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/34063199d8fc40a9e97c1409d5077b153cf32fab/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34063199d8fc40a9e97c1409d5077b153cf32fab/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs?ref=34063199d8fc40a9e97c1409d5077b153cf32fab", "patch": "@@ -180,16 +180,20 @@ impl<'tcx> Inliner<'tcx> {\n             return Err(\"failed to normalize return type\");\n         }\n         if callsite.fn_sig.abi() == Abi::RustCall {\n-            let mut args = args.into_iter();\n-            let _ = args.next(); // Skip `self` argument.\n-            let arg_tuple_ty = args.next().unwrap().ty(&caller_body.local_decls, self.tcx);\n-            assert!(args.next().is_none());\n+            let (arg_tuple, skipped_args) = match &args[..] {\n+                [arg_tuple] => (arg_tuple, 0),\n+                [_, arg_tuple] => (arg_tuple, 1),\n+                _ => bug!(\"Expected `rust-call` to have 1 or 2 args\"),\n+            };\n \n+            let arg_tuple_ty = arg_tuple.ty(&caller_body.local_decls, self.tcx);\n             let ty::Tuple(arg_tuple_tys) = arg_tuple_ty.kind() else {\n                 bug!(\"Closure arguments are not passed as a tuple\");\n             };\n \n-            for (arg_ty, input) in arg_tuple_tys.iter().zip(callee_body.args_iter().skip(1)) {\n+            for (arg_ty, input) in\n+                arg_tuple_tys.iter().zip(callee_body.args_iter().skip(skipped_args))\n+            {\n                 let input_type = callee_body.local_decls[input].ty;\n                 if !equal_up_to_regions(self.tcx, self.param_env, arg_ty, input_type) {\n                     trace!(?arg_ty, ?input_type);"}, {"sha": "411c98e10313db9871334e3974ece925f0d6a7c5", "filename": "src/test/ui/abi/rustcall-generic.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/34063199d8fc40a9e97c1409d5077b153cf32fab/src%2Ftest%2Fui%2Fabi%2Frustcall-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34063199d8fc40a9e97c1409d5077b153cf32fab/src%2Ftest%2Fui%2Fabi%2Frustcall-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fabi%2Frustcall-generic.rs?ref=34063199d8fc40a9e97c1409d5077b153cf32fab", "patch": "@@ -1,4 +1,7 @@\n+// revisions: normal opt\n // check-pass\n+//[opt] compile-flags: -Zmir-opt-level=3\n+\n #![feature(unboxed_closures)]\n \n extern \"rust-call\" fn foo<T>(_: T) {}"}]}