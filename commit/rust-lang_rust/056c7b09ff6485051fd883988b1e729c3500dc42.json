{"sha": "056c7b09ff6485051fd883988b1e729c3500dc42", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1NmM3YjA5ZmY2NDg1MDUxZmQ4ODM5ODhiMWU3MjljMzUwMGRjNDI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-09-15T23:30:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-15T23:30:38Z"}, "message": "Rollup merge of #75886 - erikdesjardins:index, r=nikic\n\nTest that bounds checks are elided for [..index] after .position()\n\nCloses #73396.\n\nThis was fixed by the LLVM 11 update in #73526.", "tree": {"sha": "8933a3f374216ef06cd6b0c7665c03f02b08976e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8933a3f374216ef06cd6b0c7665c03f02b08976e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/056c7b09ff6485051fd883988b1e729c3500dc42", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfYU6eCRBK7hj4Ov3rIwAAdHIIACqznbZiAj7Z8rynP4Dj4AvH\nIM80p3cmXO6NBpaqlj1rVYqLG1OFk9s273ols5TTMNPVZnjnAbHFO5wF/K2LOA5R\n2XHNCvPQ1OnNxRftM54lVxNsJux3vm7VIJ2CgUtRBmRIUYX/S3J2sDgtYXER9S/H\n2Lg52e5FKxaxq8qONc5T/CaMGcJKSb86Fu9dBmbcHpE9A7imJYEik0yIYn+1IcBX\nSbFAG2dyFYNx7CIr9nBAukBJsDPXo/wWxcqS4L45ZPiJM6d7VYdXYyEewz+UrO0W\nxAloZzRjGHh+aljpCOssAQgBFSjkCyuizcfhu46nOlpET+cF2CUyNP9WgGVavlY=\n=FWR/\n-----END PGP SIGNATURE-----\n", "payload": "tree 8933a3f374216ef06cd6b0c7665c03f02b08976e\nparent c9105185de5bdaf278bd8febcd34b778151293f5\nparent 0f1d25e5564b6f497417e00ed417234a0df7a227\nauthor Dylan DPC <dylan.dpc@gmail.com> 1600212638 +0200\ncommitter GitHub <noreply@github.com> 1600212638 +0200\n\nRollup merge of #75886 - erikdesjardins:index, r=nikic\n\nTest that bounds checks are elided for [..index] after .position()\n\nCloses #73396.\n\nThis was fixed by the LLVM 11 update in #73526.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/056c7b09ff6485051fd883988b1e729c3500dc42", "html_url": "https://github.com/rust-lang/rust/commit/056c7b09ff6485051fd883988b1e729c3500dc42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/056c7b09ff6485051fd883988b1e729c3500dc42/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9105185de5bdaf278bd8febcd34b778151293f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9105185de5bdaf278bd8febcd34b778151293f5", "html_url": "https://github.com/rust-lang/rust/commit/c9105185de5bdaf278bd8febcd34b778151293f5"}, {"sha": "0f1d25e5564b6f497417e00ed417234a0df7a227", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f1d25e5564b6f497417e00ed417234a0df7a227", "html_url": "https://github.com/rust-lang/rust/commit/0f1d25e5564b6f497417e00ed417234a0df7a227"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "e5f3ae45c07d345c967058f821f7381455adde7f", "filename": "src/test/codegen/issue-73396-bounds-check-after-position.rs", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/056c7b09ff6485051fd883988b1e729c3500dc42/src%2Ftest%2Fcodegen%2Fissue-73396-bounds-check-after-position.rs", "raw_url": "https://github.com/rust-lang/rust/raw/056c7b09ff6485051fd883988b1e729c3500dc42/src%2Ftest%2Fcodegen%2Fissue-73396-bounds-check-after-position.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fissue-73396-bounds-check-after-position.rs?ref=056c7b09ff6485051fd883988b1e729c3500dc42", "patch": "@@ -0,0 +1,78 @@\n+// min-llvm-version: 11.0.0\n+// compile-flags: -O\n+// ignore-debug: the debug assertions get in the way\n+#![crate_type = \"lib\"]\n+\n+// Make sure no bounds checks are emitted when slicing or indexing\n+// with an index from `position()` or `rposition()`.\n+\n+// CHECK-LABEL: @position_slice_to_no_bounds_check\n+#[no_mangle]\n+pub fn position_slice_to_no_bounds_check(s: &[u8]) -> &[u8] {\n+    // CHECK-NOT: panic\n+    // CHECK-NOT: slice_index_len_fail\n+    if let Some(idx) = s.iter().position(|b| *b == b'\\\\') {\n+        &s[..idx]\n+    } else {\n+        s\n+    }\n+}\n+\n+// CHECK-LABEL: @position_slice_from_no_bounds_check\n+#[no_mangle]\n+pub fn position_slice_from_no_bounds_check(s: &[u8]) -> &[u8] {\n+    // CHECK-NOT: panic\n+    // CHECK-NOT: slice_index_len_fail\n+    if let Some(idx) = s.iter().position(|b| *b == b'\\\\') {\n+        &s[idx..]\n+    } else {\n+        s\n+    }\n+}\n+\n+// CHECK-LABEL: @position_index_no_bounds_check\n+#[no_mangle]\n+pub fn position_index_no_bounds_check(s: &[u8]) -> u8 {\n+    // CHECK-NOT: panic\n+    // CHECK-NOT: slice_index_len_fail\n+    if let Some(idx) = s.iter().position(|b| *b == b'\\\\') {\n+        s[idx]\n+    } else {\n+        42\n+    }\n+}\n+// CHECK-LABEL: @rposition_slice_to_no_bounds_check\n+#[no_mangle]\n+pub fn rposition_slice_to_no_bounds_check(s: &[u8]) -> &[u8] {\n+    // CHECK-NOT: panic\n+    // CHECK-NOT: slice_index_len_fail\n+    if let Some(idx) = s.iter().rposition(|b| *b == b'\\\\') {\n+        &s[..idx]\n+    } else {\n+        s\n+    }\n+}\n+\n+// CHECK-LABEL: @rposition_slice_from_no_bounds_check\n+#[no_mangle]\n+pub fn rposition_slice_from_no_bounds_check(s: &[u8]) -> &[u8] {\n+    // CHECK-NOT: panic\n+    // CHECK-NOT: slice_index_len_fail\n+    if let Some(idx) = s.iter().rposition(|b| *b == b'\\\\') {\n+        &s[idx..]\n+    } else {\n+        s\n+    }\n+}\n+\n+// CHECK-LABEL: @rposition_index_no_bounds_check\n+#[no_mangle]\n+pub fn rposition_index_no_bounds_check(s: &[u8]) -> u8 {\n+    // CHECK-NOT: panic\n+    // CHECK-NOT: slice_index_len_fail\n+    if let Some(idx) = s.iter().rposition(|b| *b == b'\\\\') {\n+        s[idx]\n+    } else {\n+        42\n+    }\n+}"}]}