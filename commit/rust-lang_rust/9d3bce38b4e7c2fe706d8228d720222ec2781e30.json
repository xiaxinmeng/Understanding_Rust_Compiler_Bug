{"sha": "9d3bce38b4e7c2fe706d8228d720222ec2781e30", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkM2JjZTM4YjRlN2MyZmU3MDZkODIyOGQ3MjAyMjJlYzI3ODFlMzA=", "commit": {"author": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2016-02-23T11:04:27Z"}, "committer": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2016-02-23T11:17:12Z"}, "message": "Don't record self parameter for static methods", "tree": {"sha": "58d7a4347afa22e9d14551125cbe97948ae9a567", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58d7a4347afa22e9d14551125cbe97948ae9a567"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d3bce38b4e7c2fe706d8228d720222ec2781e30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d3bce38b4e7c2fe706d8228d720222ec2781e30", "html_url": "https://github.com/rust-lang/rust/commit/9d3bce38b4e7c2fe706d8228d720222ec2781e30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d3bce38b4e7c2fe706d8228d720222ec2781e30/comments", "author": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be7196a793a185355efb7ec8801102ddec95483d", "url": "https://api.github.com/repos/rust-lang/rust/commits/be7196a793a185355efb7ec8801102ddec95483d", "html_url": "https://github.com/rust-lang/rust/commit/be7196a793a185355efb7ec8801102ddec95483d"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "1b97b3865d4212b1a94cb6de39469ae4a69964b9", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9d3bce38b4e7c2fe706d8228d720222ec2781e30/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d3bce38b4e7c2fe706d8228d720222ec2781e30/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=9d3bce38b4e7c2fe706d8228d720222ec2781e30", "patch": "@@ -2734,18 +2734,19 @@ fn make_item_keywords(it: &clean::Item) -> String {\n \n fn get_index_search_type(item: &clean::Item,\n                          parent: Option<String>) -> Option<IndexItemFunctionType> {\n-    let decl = match item.inner {\n-        clean::FunctionItem(ref f) => &f.decl,\n-        clean::MethodItem(ref m) => &m.decl,\n-        clean::TyMethodItem(ref m) => &m.decl,\n+    let (decl, selfty) = match item.inner {\n+        clean::FunctionItem(ref f) => (&f.decl, None),\n+        clean::MethodItem(ref m) => (&m.decl, Some(&m.self_)),\n+        clean::TyMethodItem(ref m) => (&m.decl, Some(&m.self_)),\n         _ => return None\n     };\n \n     let mut inputs = Vec::new();\n \n     // Consider `self` an argument as well.\n-    if let Some(name) = parent {\n-        inputs.push(Type { name: Some(name.to_ascii_lowercase()) });\n+    match parent.and_then(|p| selfty.map(|s| (p, s)) ) {\n+        Some((_, &clean::SelfStatic)) | None => (),\n+        Some((name, _)) => inputs.push(Type { name: Some(name.to_ascii_lowercase()) }),\n     }\n \n     inputs.extend(&mut decl.inputs.values.iter().map(|arg| {"}]}