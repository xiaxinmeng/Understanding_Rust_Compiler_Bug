{"sha": "0d596f29d9cf105833db5dc5cca1eccade08ce4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkNTk2ZjI5ZDljZjEwNTgzM2RiNWRjNWNjYTFlY2NhZGUwOGNlNGU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-02T10:24:36Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-05T08:59:05Z"}, "message": "FIXME", "tree": {"sha": "bd5c25d0391ce9120bee4b7be227daad0fc9e99d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd5c25d0391ce9120bee4b7be227daad0fc9e99d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d596f29d9cf105833db5dc5cca1eccade08ce4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d596f29d9cf105833db5dc5cca1eccade08ce4e", "html_url": "https://github.com/rust-lang/rust/commit/0d596f29d9cf105833db5dc5cca1eccade08ce4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d596f29d9cf105833db5dc5cca1eccade08ce4e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91cad3961484407eef2c89fd1329d8139013f669", "url": "https://api.github.com/repos/rust-lang/rust/commits/91cad3961484407eef2c89fd1329d8139013f669", "html_url": "https://github.com/rust-lang/rust/commit/91cad3961484407eef2c89fd1329d8139013f669"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "12455e957277329d188cb5905d3513831d6e6794", "filename": "src/librustc_mir/interpret/visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d596f29d9cf105833db5dc5cca1eccade08ce4e/src%2Flibrustc_mir%2Finterpret%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d596f29d9cf105833db5dc5cca1eccade08ce4e/src%2Flibrustc_mir%2Finterpret%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvisitor.rs?ref=0d596f29d9cf105833db5dc5cca1eccade08ce4e", "patch": "@@ -317,7 +317,7 @@ pub trait ValueVisitor<'a, 'mir, 'tcx: 'mir+'a, M: Machine<'a, 'mir, 'tcx>>: Siz\n                 self.visit_union(v)?;\n             },\n             layout::FieldPlacement::Arbitrary { ref offsets, .. } => {\n-                // We collect in a vec because otherwise there are lifetime errors:\n+                // FIXME: We collect in a vec because otherwise there are lifetime errors:\n                 // Projecting to a field needs (mutable!) access to `ecx`.\n                 let fields: Vec<EvalResult<'tcx, Self::V>> =\n                     (0..offsets.len()).map(|i| {"}]}