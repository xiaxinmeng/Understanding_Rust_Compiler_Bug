{"sha": "e59dd484c2cbdba5aca039f8895532599914d550", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1OWRkNDg0YzJjYmRiYTVhY2EwMzlmODg5NTUzMjU5OTkxNGQ1NTA=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2014-07-04T18:24:28Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2014-07-08T23:27:37Z"}, "message": "implement hygiene for method args", "tree": {"sha": "abc265b90cf8eb06b264ed057e6bed4455f2870c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abc265b90cf8eb06b264ed057e6bed4455f2870c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e59dd484c2cbdba5aca039f8895532599914d550", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e59dd484c2cbdba5aca039f8895532599914d550", "html_url": "https://github.com/rust-lang/rust/commit/e59dd484c2cbdba5aca039f8895532599914d550", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e59dd484c2cbdba5aca039f8895532599914d550/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f34b21375017aece4ae08fcf13f0dfcc8aca96e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f34b21375017aece4ae08fcf13f0dfcc8aca96e", "html_url": "https://github.com/rust-lang/rust/commit/8f34b21375017aece4ae08fcf13f0dfcc8aca96e"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "f51002f734cd46eaddd48db6d6fa699f00820c46", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/e59dd484c2cbdba5aca039f8895532599914d550/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e59dd484c2cbdba5aca039f8895532599914d550/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=e59dd484c2cbdba5aca039f8895532599914d550", "patch": "@@ -934,6 +934,27 @@ impl<'a> Folder for PatIdentRenamer<'a> {\n     }\n }\n \n+// expand a method\n+fn expand_method(m: &ast::Method, fld: &mut MacroExpander) -> Gc<ast::Method> {\n+    let id = fld.new_id(m.id);\n+    let (rewritten_fn_decl, rewritten_body)\n+        = expand_and_rename_fn_decl_and_block(m.decl,m.body,fld);\n+\n+    // all of the other standard stuff:\n+    box(GC) ast::Method {\n+        id: id,\n+        ident: fld.fold_ident(m.ident),\n+        attrs: m.attrs.iter().map(|a| fld.fold_attribute(*a)).collect(),\n+        generics: fold_generics(&m.generics, fld),\n+        explicit_self: fld.fold_explicit_self(&m.explicit_self),\n+        fn_style: m.fn_style,\n+        decl: rewritten_fn_decl,\n+        body: rewritten_body,\n+        span: fld.new_span(m.span),\n+        vis: m.vis\n+    }\n+}\n+\n /// Given a fn_decl and a block and a MacroExpander, expand the fn_decl, then use the\n /// PatIdents in its arguments to perform renaming in the FnDecl and\n /// the block, returning both the new FnDecl and the new Block.\n@@ -988,6 +1009,10 @@ impl<'a, 'b> Folder for MacroExpander<'a, 'b> {\n         expand_arm(arm, self)\n     }\n \n+    fn fold_method(&mut self, method: Gc<ast::Method>) -> Gc<ast::Method> {\n+        expand_method(method, self)\n+    }\n+\n     fn new_span(&mut self, span: Span) -> Span {\n         new_span(self.cx, span)\n     }"}]}