{"sha": "5c7b837c4e0b7405726440533393c68521acfefe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjN2I4MzdjNGUwYjc0MDU3MjY0NDA1MzMzOTNjNjg1MjFhY2ZlZmU=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2018-08-17T15:23:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-17T15:23:44Z"}, "message": "Rollup merge of #53413 - eddyb:featured-in-the-latest-edition, r=varkor\n\nWarn that `#![feature(rust_2018_preview)]` is implied when the edition is set to Rust 2018.\n\ncc @varkor @petrochenkov @joshtriplett", "tree": {"sha": "b49c95d30d5aa90eaf907830f40c7ab36a771920", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b49c95d30d5aa90eaf907830f40c7ab36a771920"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c7b837c4e0b7405726440533393c68521acfefe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbduiACRBK7hj4Ov3rIwAAdHIIAJ/Yh1TNXnNRuRyKuzL/sCtW\n9ckeCHDjy5zudKCg6gTKkAD51gowhUFg8+R9yMj2tSC7RHFpA/cJjHGPkKElDDaz\nR/kIVRQgEvtY6JyvP+YWpZav+U8dcnRaD2J1iO2fxupFeojW54K+3FuzyAAQJuNi\nsjMv33zkCu9xQp+dbgc01vfqjD9bbphjbJ1uSvdia4P4VzczFDBJBCRIWeTkX2+o\nhJB4bli/vQf981z+SBRhYOF7OdDOzqhqlWA+zj3sW8g0dnj087leYX7+n9i5CBTO\ntPVoh8pL/QkRVgWaFQ7ck5aV7vFAl9ar5lYwBhzpaNuMb69iUkA7oTpd3imxEnc=\n=gDhS\n-----END PGP SIGNATURE-----\n", "payload": "tree b49c95d30d5aa90eaf907830f40c7ab36a771920\nparent 5ad7b914c0fe618c1499629e66ed0cf8d305449c\nparent 32e17b5921ea3fbe90cb4b0e3760b03e3f22a143\nauthor Corey Farwell <coreyf@rwell.org> 1534519424 -0700\ncommitter GitHub <noreply@github.com> 1534519424 -0700\n\nRollup merge of #53413 - eddyb:featured-in-the-latest-edition, r=varkor\n\nWarn that `#![feature(rust_2018_preview)]` is implied when the edition is set to Rust 2018.\n\ncc @varkor @petrochenkov @joshtriplett\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c7b837c4e0b7405726440533393c68521acfefe", "html_url": "https://github.com/rust-lang/rust/commit/5c7b837c4e0b7405726440533393c68521acfefe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c7b837c4e0b7405726440533393c68521acfefe/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ad7b914c0fe618c1499629e66ed0cf8d305449c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ad7b914c0fe618c1499629e66ed0cf8d305449c", "html_url": "https://github.com/rust-lang/rust/commit/5ad7b914c0fe618c1499629e66ed0cf8d305449c"}, {"sha": "32e17b5921ea3fbe90cb4b0e3760b03e3f22a143", "url": "https://api.github.com/repos/rust-lang/rust/commits/32e17b5921ea3fbe90cb4b0e3760b03e3f22a143", "html_url": "https://github.com/rust-lang/rust/commit/32e17b5921ea3fbe90cb4b0e3760b03e3f22a143"}], "stats": {"total": 159, "additions": 106, "deletions": 53}, "files": [{"sha": "7a8a7b073185a6477dfeb8fdbb73dec1995d1202", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 56, "deletions": 23, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -1930,7 +1930,15 @@ pub fn get_features(span_handler: &Handler, krate_attrs: &[ast::Attribute],\n     let mut features = Features::new();\n     let mut edition_enabled_features = FxHashMap();\n \n-    for &(name, .., f_edition, set) in ACTIVE_FEATURES.iter() {\n+    for &edition in ALL_EDITIONS {\n+        if edition <= crate_edition {\n+            // The `crate_edition` implies its respective umbrella feature-gate\n+            // (i.e. `#![feature(rust_20XX_preview)]` isn't needed on edition 20XX).\n+            edition_enabled_features.insert(Symbol::intern(edition.feature_name()), edition);\n+        }\n+    }\n+\n+    for &(name, .., f_edition, set) in ACTIVE_FEATURES {\n         if let Some(f_edition) = f_edition {\n             if f_edition <= crate_edition {\n                 set(&mut features, DUMMY_SP);\n@@ -1939,26 +1947,22 @@ pub fn get_features(span_handler: &Handler, krate_attrs: &[ast::Attribute],\n         }\n     }\n \n+    // Process the edition umbrella feature-gates first, to ensure\n+    // `edition_enabled_features` is completed before it's queried.\n     for attr in krate_attrs {\n         if !attr.check_name(\"feature\") {\n             continue\n         }\n \n         let list = match attr.meta_item_list() {\n             Some(list) => list,\n-            None => {\n-                span_err!(span_handler, attr.span, E0555,\n-                          \"malformed feature attribute, expected #![feature(...)]\");\n-                continue\n-            }\n+            None => continue,\n         };\n \n         for mi in list {\n             let name = if let Some(word) = mi.word() {\n                 word.name()\n             } else {\n-                span_err!(span_handler, mi.span, E0556,\n-                          \"malformed feature, expected just one word\");\n                 continue\n             };\n \n@@ -1974,10 +1978,10 @@ pub fn get_features(span_handler: &Handler, krate_attrs: &[ast::Attribute],\n \n             if let Some(edition) = ALL_EDITIONS.iter().find(|e| name == e.feature_name()) {\n                 if *edition <= crate_edition {\n-                    continue\n+                    continue;\n                 }\n \n-                for &(name, .., f_edition, set) in ACTIVE_FEATURES.iter() {\n+                for &(name, .., f_edition, set) in ACTIVE_FEATURES {\n                     if let Some(f_edition) = f_edition {\n                         if f_edition <= *edition {\n                             // FIXME(Manishearth) there is currently no way to set\n@@ -1987,24 +1991,53 @@ pub fn get_features(span_handler: &Handler, krate_attrs: &[ast::Attribute],\n                         }\n                     }\n                 }\n+            }\n+        }\n+    }\n+\n+    for attr in krate_attrs {\n+        if !attr.check_name(\"feature\") {\n+            continue\n+        }\n+\n+        let list = match attr.meta_item_list() {\n+            Some(list) => list,\n+            None => {\n+                span_err!(span_handler, attr.span, E0555,\n+                          \"malformed feature attribute, expected #![feature(...)]\");\n+                continue\n+            }\n+        };\n \n+        for mi in list {\n+            let name = if let Some(word) = mi.word() {\n+                word.name()\n+            } else {\n+                span_err!(span_handler, mi.span, E0556,\n+                          \"malformed feature, expected just one word\");\n                 continue\n+            };\n+\n+            if let Some(edition) = edition_enabled_features.get(&name) {\n+                struct_span_warn!(\n+                    span_handler,\n+                    mi.span,\n+                    E0705,\n+                    \"the feature `{}` is included in the Rust {} edition\",\n+                    name,\n+                    edition,\n+                ).emit();\n+                continue;\n+            }\n+\n+            if ALL_EDITIONS.iter().any(|e| name == e.feature_name()) {\n+                // Handled in the separate loop above.\n+                continue;\n             }\n \n             if let Some((.., set)) = ACTIVE_FEATURES.iter().find(|f| name == f.0) {\n-                if let Some(edition) = edition_enabled_features.get(&name) {\n-                    struct_span_warn!(\n-                        span_handler,\n-                        mi.span,\n-                        E0705,\n-                        \"the feature `{}` is included in the Rust {} edition\",\n-                        name,\n-                        edition,\n-                    ).emit();\n-                } else {\n-                    set(&mut features, mi.span);\n-                    features.declared_lang_features.push((name, mi.span, None));\n-                }\n+                set(&mut features, mi.span);\n+                features.declared_lang_features.push((name, mi.span, None));\n                 continue\n             }\n "}, {"sha": "61c3e781c08676fe99413024987c9f8f37d18196", "filename": "src/test/run-pass/macro-at-most-once-rep.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Frun-pass%2Fmacro-at-most-once-rep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Frun-pass%2Fmacro-at-most-once-rep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-at-most-once-rep.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -18,7 +18,7 @@\n //\n // This test focuses on non-error cases and making sure the correct number of repetitions happen.\n \n-// compile-flags: --edition=2018\n+// edition:2018\n \n #![feature(macro_at_most_once_rep)]\n "}, {"sha": "f3d39deef173083939609268aff7177579709c79", "filename": "src/test/rustdoc/async-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Frustdoc%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Frustdoc%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fasync-fn.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -13,7 +13,7 @@\n \n // FIXME: once `--edition` is stable in rustdoc, remove that `compile-flags` directive\n \n-#![feature(rust_2018_preview, async_await, futures_api)]\n+#![feature(async_await, futures_api)]\n \n // @has async_fn/struct.S.html\n // @has - '//code' 'pub async fn f()'"}, {"sha": "b64ebed030588fae9cccd48b4f963f1d580c0aa5", "filename": "src/test/ui-fulldeps/rust-2018/suggestions-not-always-applicable.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui-fulldeps%2Frust-2018%2Fsuggestions-not-always-applicable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui-fulldeps%2Frust-2018%2Fsuggestions-not-always-applicable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Frust-2018%2Fsuggestions-not-always-applicable.fixed?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // aux-build:suggestions-not-always-applicable.rs\n-// compile-flags: --edition 2015\n+// edition:2015\n // run-rustfix\n // rustfix-only-machine-applicable\n // compile-pass"}, {"sha": "b64ebed030588fae9cccd48b4f963f1d580c0aa5", "filename": "src/test/ui-fulldeps/rust-2018/suggestions-not-always-applicable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui-fulldeps%2Frust-2018%2Fsuggestions-not-always-applicable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui-fulldeps%2Frust-2018%2Fsuggestions-not-always-applicable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Frust-2018%2Fsuggestions-not-always-applicable.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // aux-build:suggestions-not-always-applicable.rs\n-// compile-flags: --edition 2015\n+// edition:2015\n // run-rustfix\n // rustfix-only-machine-applicable\n // compile-pass"}, {"sha": "ea3e0587958b10a8c86c0713333508606628e145", "filename": "src/test/ui-fulldeps/unnecessary-extern-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui-fulldeps%2Funnecessary-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui-fulldeps%2Funnecessary-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Funnecessary-extern-crate.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: --edition 2018\n+// edition:2018\n \n #![deny(unused_extern_crates)]\n #![feature(alloc, test, libc)]"}, {"sha": "b5fd3cf35f28bedd306e13813b6ed3a1a1a2a261", "filename": "src/test/ui/E0705.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2FE0705.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2FE0705.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0705.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -10,9 +10,9 @@\n \n // compile-pass\n \n-#![feature(rust_2018_preview)]\n #![feature(raw_identifiers)]\n //~^ WARN the feature `raw_identifiers` is included in the Rust 2018 edition\n+#![feature(rust_2018_preview)]\n \n fn main() {\n     let foo = 0;"}, {"sha": "2aa3077e48c2dad6ffa3d56be088b875f2f4492e", "filename": "src/test/ui/E0705.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2FE0705.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2FE0705.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0705.stderr?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -1,5 +1,5 @@\n warning[E0705]: the feature `raw_identifiers` is included in the Rust 2018 edition\n-  --> $DIR/E0705.rs:14:12\n+  --> $DIR/E0705.rs:13:12\n    |\n LL | #![feature(raw_identifiers)]\n    |            ^^^^^^^^^^^^^^^"}, {"sha": "104c0886311d0bda3cea464539a338336fdb6288", "filename": "src/test/ui/borrowck/borrowck-feature-nll-overrides-migrate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-feature-nll-overrides-migrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-feature-nll-overrides-migrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-feature-nll-overrides-migrate.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -20,7 +20,7 @@\n \n // revisions: zflag edition\n // [zflag]compile-flags: -Z borrowck=migrate\n-// [edition]compile-flags: --edition 2018\n+// [edition]edition:2018\n \n #![feature(nll)]\n "}, {"sha": "bb6b29072e257fc6fe317d8f726912d0acdca55b", "filename": "src/test/ui/borrowck/borrowck-migrate-to-nll.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -23,7 +23,7 @@\n \n // revisions: zflag edition\n //[zflag]compile-flags: -Z borrowck=migrate\n-//[edition]compile-flags: --edition 2018\n+//[edition]edition:2018\n //[zflag] run-pass\n //[edition] run-pass\n "}, {"sha": "3b53fb9fc42831f7bf77da554c3a76bf1df29799", "filename": "src/test/ui/borrowck/issue-52967-edition-2018-needs-two-phase-borrows.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fborrowck%2Fissue-52967-edition-2018-needs-two-phase-borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fborrowck%2Fissue-52967-edition-2018-needs-two-phase-borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-52967-edition-2018-needs-two-phase-borrows.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -14,7 +14,7 @@\n \n // revisions: ast zflags edition\n //[zflags]compile-flags: -Z borrowck=migrate -Z two-phase-borrows\n-//[edition]compile-flags: --edition 2018\n+//[edition]edition:2018\n \n // run-pass\n "}, {"sha": "75761a0b5b9716849883878868ca2cbfddad7fbe", "filename": "src/test/ui/editions/edition-extern-crate-allowed.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Feditions%2Fedition-extern-crate-allowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Feditions%2Fedition-extern-crate-allowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-extern-crate-allowed.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // aux-build:edition-extern-crate-allowed.rs\n-// compile-flags: --edition 2015\n+// edition:2015\n // compile-pass\n \n #![warn(rust_2018_idioms)]"}, {"sha": "5896e9a07159164c923153fb375b54b25c0663f4", "filename": "src/test/ui/editions/edition-feature-ok.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Feditions%2Fedition-feature-ok.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Feditions%2Fedition-feature-ok.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-feature-ok.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags:--edition 2018\n // compile-pass\n \n #![feature(rust_2018_preview)]"}, {"sha": "d20873f5e11635d1dd710d31206b7fd2adbdc9ea", "filename": "src/test/ui/editions/edition-feature-redundant.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Feditions%2Fedition-feature-redundant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Feditions%2Fedition-feature-redundant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-feature-redundant.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// edition:2018\n+// compile-pass\n+\n+#![feature(rust_2018_preview)]\n+//~^ WARN the feature `rust_2018_preview` is included in the Rust 2018 edition\n+\n+fn main() {}"}, {"sha": "ccf7b21fbc5c04a7e4a552ec3595e9c08e0c4905", "filename": "src/test/ui/editions/edition-feature-redundant.stderr", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Feditions%2Fedition-feature-redundant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Feditions%2Fedition-feature-redundant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-feature-redundant.stderr?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -0,0 +1,6 @@\n+warning[E0705]: the feature `rust_2018_preview` is included in the Rust 2018 edition\n+  --> $DIR/edition-feature-redundant.rs:14:12\n+   |\n+LL | #![feature(rust_2018_preview)]\n+   |            ^^^^^^^^^^^^^^^^^\n+"}, {"sha": "153e5003746887eff17f558297ac82f585d9e2a0", "filename": "src/test/ui/in-band-lifetimes/elided-lifetimes.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.fixed?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // run-rustfix\n-// compile-flags: --edition 2018\n+// edition:2018\n \n #![allow(unused)]\n #![deny(elided_lifetimes_in_paths)]"}, {"sha": "41aa7e1a7b7b9b4524b9c311559c88f3bef64801", "filename": "src/test/ui/in-band-lifetimes/elided-lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // run-rustfix\n-// compile-flags: --edition 2018\n+// edition:2018\n \n #![allow(unused)]\n #![deny(elided_lifetimes_in_paths)]"}, {"sha": "63a4ef16a2581cef6a2a03fdc27dff2ad29402b4", "filename": "src/test/ui/macros/macro-at-most-once-rep-2015-ques-rep-feature-flag.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-rep-feature-flag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-rep-feature-flag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-rep-feature-flag.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -12,7 +12,7 @@\n // with the feature flag.\n \n // gate-test-macro_at_most_once_rep\n-// compile-flags: --edition=2015\n+// edition:2015\n \n #![feature(macro_at_most_once_rep)]\n "}, {"sha": "64848d050cb1e90bbe242628a1ceddb7266017c8", "filename": "src/test/ui/macros/macro-at-most-once-rep-2015-ques-rep.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-rep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-rep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-rep.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -10,7 +10,7 @@\n \n // Test behavior of `?` macro _kleene op_ under the 2015 edition. Namely, it doesn't exist.\n \n-// compile-flags: --edition=2015\n+// edition:2015\n \n macro_rules! bar {\n     ($(a)?) => {} //~ERROR expected `*` or `+`"}, {"sha": "a7857991079feefec88b41726b3e71cc68fe90e5", "filename": "src/test/ui/macros/macro-at-most-once-rep-2015-ques-sep.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-sep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-sep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015-ques-sep.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -11,7 +11,7 @@\n // Test behavior of `?` macro _separator_ under the 2015 edition. Namely, `?` can be used as a\n // separator, but you get a migration warning for the edition.\n \n-// compile-flags: --edition=2015\n+// edition:2015\n // compile-pass\n \n #![warn(rust_2018_compatibility)]"}, {"sha": "ffabf9bcdf68557dad795f6135ed646380c87d74", "filename": "src/test/ui/macros/macro-at-most-once-rep-2018-feature-gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018-feature-gate.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -11,7 +11,7 @@\n // Feature gate test for macro_at_most_once_rep under 2018 edition.\n \n // gate-test-macro_at_most_once_rep\n-// compile-flags: --edition=2018\n+// edition:2018\n \n macro_rules! foo {\n     ($(a)?) => {}"}, {"sha": "5dabe8d95280100932a910c7b92344c23dbb1fde", "filename": "src/test/ui/macros/macro-at-most-once-rep-2018.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -10,7 +10,7 @@\n \n // Tests that `?` is a Kleene op and not a macro separator in the 2018 edition.\n \n-// compile-flags: --edition=2018\n+// edition:2018\n \n #![feature(macro_at_most_once_rep)]\n "}, {"sha": "90427b061b652f16a6ab7575314416f286689ec3", "filename": "src/test/ui/removing-extern-crate.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fremoving-extern-crate.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fremoving-extern-crate.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fremoving-extern-crate.fixed?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: --edition 2018\n+// edition:2018\n // aux-build:removing-extern-crate.rs\n // run-rustfix\n // compile-pass"}, {"sha": "3905d285becb55a5cf42ac18915b8bf469a09079", "filename": "src/test/ui/removing-extern-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fremoving-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Fremoving-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fremoving-extern-crate.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: --edition 2018\n+// edition:2018\n // aux-build:removing-extern-crate.rs\n // run-rustfix\n // compile-pass"}, {"sha": "3bc468483bda2a1487ceeff1cd3119864fb4f761", "filename": "src/test/ui/rust-2018/async-ident-allowed.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident-allowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident-allowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident-allowed.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: --edition 2015\n+// edition:2015\n \n #![deny(rust_2018_compatibility)]\n "}, {"sha": "fc81ab08f624d480ee5491354e3cfb911653f98a", "filename": "src/test/ui/rust-2018/extern-crate-idiomatic-in-2018.fixed", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-idiomatic-in-2018.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-idiomatic-in-2018.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-idiomatic-in-2018.fixed?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -10,12 +10,11 @@\n \n // aux-build:edition-lint-paths.rs\n // run-rustfix\n-// compile-flags:--edition 2018\n+// edition:2018\n \n // The \"normal case\". Ideally we would remove the `extern crate` here,\n // but we don't.\n \n-#![feature(rust_2018_preview)]\n #![deny(rust_2018_idioms)]\n #![allow(dead_code)]\n "}, {"sha": "72751f2080cc9b2d28f31ab179189438679dc9a1", "filename": "src/test/ui/rust-2018/extern-crate-idiomatic-in-2018.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-idiomatic-in-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-idiomatic-in-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-idiomatic-in-2018.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -10,12 +10,11 @@\n \n // aux-build:edition-lint-paths.rs\n // run-rustfix\n-// compile-flags:--edition 2018\n+// edition:2018\n \n // The \"normal case\". Ideally we would remove the `extern crate` here,\n // but we don't.\n \n-#![feature(rust_2018_preview)]\n #![deny(rust_2018_idioms)]\n #![allow(dead_code)]\n "}, {"sha": "0ecfd4e4a2ca3076523bffe3ebf6a840dd5fcda9", "filename": "src/test/ui/rust-2018/extern-crate-idiomatic-in-2018.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-idiomatic-in-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-idiomatic-in-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-idiomatic-in-2018.stderr?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -1,18 +1,18 @@\n error: unused extern crate\n-  --> $DIR/extern-crate-idiomatic-in-2018.rs:22:1\n+  --> $DIR/extern-crate-idiomatic-in-2018.rs:21:1\n    |\n LL | extern crate edition_lint_paths;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n    |\n note: lint level defined here\n-  --> $DIR/extern-crate-idiomatic-in-2018.rs:19:9\n+  --> $DIR/extern-crate-idiomatic-in-2018.rs:18:9\n    |\n LL | #![deny(rust_2018_idioms)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: #[deny(unused_extern_crates)] implied by #[deny(rust_2018_idioms)]\n \n error: `extern crate` is not idiomatic in the new edition\n-  --> $DIR/extern-crate-idiomatic-in-2018.rs:25:1\n+  --> $DIR/extern-crate-idiomatic-in-2018.rs:24:1\n    |\n LL | extern crate edition_lint_paths as bar;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert it to a `use`"}, {"sha": "deb80411bbf6405ed809afe2c6c113fbb737ca9c", "filename": "src/test/ui/rust-2018/issue-52202-use-suggestions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Frust-2018%2Fissue-52202-use-suggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7b837c4e0b7405726440533393c68521acfefe/src%2Ftest%2Fui%2Frust-2018%2Fissue-52202-use-suggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fissue-52202-use-suggestions.rs?ref=5c7b837c4e0b7405726440533393c68521acfefe", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: --edition 2018\n+// edition:2018\n \n // The local `use` suggestion should start with `crate::` (but the\n // standard-library suggestions should not, obviously)."}]}