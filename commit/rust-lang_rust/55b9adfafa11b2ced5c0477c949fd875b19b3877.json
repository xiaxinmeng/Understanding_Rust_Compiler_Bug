{"sha": "55b9adfafa11b2ced5c0477c949fd875b19b3877", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1YjlhZGZhZmExMWIyY2VkNWMwNDc3Yzk0OWZkODc1YjE5YjM4Nzc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-14T14:08:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-14T14:08:05Z"}, "message": "Auto merge of #75157 - rodrimati1992:patch-1, r=oli-obk\n\nConstified str::from_utf8_unchecked\n\nThis would be useful for const code to use an array to construct a string using guaranteed utf8 inputs, and then create a `&str` from it.", "tree": {"sha": "e4268492c409f031a2727414bbec57bb2cee750c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4268492c409f031a2727414bbec57bb2cee750c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55b9adfafa11b2ced5c0477c949fd875b19b3877", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55b9adfafa11b2ced5c0477c949fd875b19b3877", "html_url": "https://github.com/rust-lang/rust/commit/55b9adfafa11b2ced5c0477c949fd875b19b3877", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55b9adfafa11b2ced5c0477c949fd875b19b3877/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7996182bc1b48495014fa13799f503be01d3e5bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/7996182bc1b48495014fa13799f503be01d3e5bc", "html_url": "https://github.com/rust-lang/rust/commit/7996182bc1b48495014fa13799f503be01d3e5bc"}, {"sha": "18377082f1a1ba2f07193f12b9d571d25b670ff7", "url": "https://api.github.com/repos/rust-lang/rust/commits/18377082f1a1ba2f07193f12b9d571d25b670ff7", "html_url": "https://github.com/rust-lang/rust/commit/18377082f1a1ba2f07193f12b9d571d25b670ff7"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "934f581f3faeb7575aa8f99726e22c69f51b50a2", "filename": "library/core/src/str/mod.rs", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/55b9adfafa11b2ced5c0477c949fd875b19b3877/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55b9adfafa11b2ced5c0477c949fd875b19b3877/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs?ref=55b9adfafa11b2ced5c0477c949fd875b19b3877", "patch": "@@ -414,12 +414,13 @@ pub fn from_utf8_mut(v: &mut [u8]) -> Result<&mut str, Utf8Error> {\n /// ```\n #[inline]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub unsafe fn from_utf8_unchecked(v: &[u8]) -> &str {\n-    // SAFETY: the caller must guarantee that the bytes `v`\n-    // are valid UTF-8, thus the cast to `*const str` is safe.\n-    // Also, the pointer dereference is safe because that pointer\n-    // comes from a reference which is guaranteed to be valid for reads.\n-    unsafe { &*(v as *const [u8] as *const str) }\n+#[rustc_const_unstable(feature = \"const_str_from_utf8_unchecked\", issue = \"75196\")]\n+#[allow(unused_attributes)]\n+#[allow_internal_unstable(const_fn_transmute)]\n+pub const unsafe fn from_utf8_unchecked(v: &[u8]) -> &str {\n+    // SAFETY: the caller must guarantee that the bytes `v` are valid UTF-8.\n+    // Also relies on `&str` and `&[u8]` having the same layout.\n+    unsafe { mem::transmute(v) }\n }\n \n /// Converts a slice of bytes to a string slice without checking\n@@ -2357,15 +2358,10 @@ impl str {\n     #[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.32.0\")]\n     #[inline(always)]\n     #[allow(unused_attributes)]\n-    #[allow_internal_unstable(const_fn_union)]\n+    #[allow_internal_unstable(const_fn_transmute)]\n     pub const fn as_bytes(&self) -> &[u8] {\n-        #[repr(C)]\n-        union Slices<'a> {\n-            str: &'a str,\n-            slice: &'a [u8],\n-        }\n         // SAFETY: const sound because we transmute two types with the same layout\n-        unsafe { Slices { str: self }.slice }\n+        unsafe { mem::transmute(self) }\n     }\n \n     /// Converts a mutable string slice to a mutable byte slice."}]}