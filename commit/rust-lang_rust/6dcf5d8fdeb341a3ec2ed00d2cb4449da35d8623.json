{"sha": "6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623", "node_id": "C_kwDOAAsO6NoAKDZkY2Y1ZDhmZGViMzQxYTNlYzJlZDAwZDJjYjQ0NDlkYTM1ZDg2MjM", "commit": {"author": {"name": "Ruby Lazuli", "email": "general@patchmixolydic.com", "date": "2022-02-12T00:21:02Z"}, "committer": {"name": "Ruby Lazuli", "email": "general@patchmixolydic.com", "date": "2022-02-27T14:52:37Z"}, "message": "Lint against more useless `#[must_use]` attributes\n\nThis expands the existing `#[must_use]` check in `unused_attributes`\nto lint against pretty much everything `#[must_use]` doesn't support.\nFixes #93906.", "tree": {"sha": "3b3e3598c2edfbf34bf9deea021a53efae392ec3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b3e3598c2edfbf34bf9deea021a53efae392ec3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0aEoTtbMCl5TqSSu9+eZKIGrV20FAmIbkDkACgkQ9+eZKIGr\nV22NKA//e3hZNhIlmwqSBGMm8nYTDCCH50e/5szUFPRRw/cyr7zbY6BQdhiz4mcX\nBSKiqaEN07Iw/SJ5A6nCvglkKm9i5f96blLuLarO9Xi+v9eSO/f7kjyOCKEH3F7e\nGEmfNg3Ase1KKpNLrpE/WpVVc2BpSVqyHhmlrFWr6xn7nfxcdXZbwritW4IY8peL\ntVQrKILIr9WWeGEtN6jD1iZecIBE92eaYS2S2CTRdo48wB5DzNJBCbZlNfTb5PMy\nNp2weE3gMghzTjc+/V+gqYr5hOCMPi3xYYFxbbxjooIWKd9Ens1JuP+kzKZxU2mS\nQv883xGa15EJMOJ1dc2nsnvBbDvvCq6ac4KghWIvphPeJ4crIhvWDAgr4ZF5twQ6\nZUW1e6+uDQIkIk5Y8R3RDUfKybayTKbgWvxAss5DOC+r7z4nYgZzEIJRsF2dTHbZ\nAEG5/08ek8OaQU9dhxgA2oEUnONrs26DjotJ1etbwnEe6xEcojVhBwQLHVHp/gtp\na2GdqDAMYtHGUt+JTKoj9gWtsfSY4pF7MUN1ZRhH9TCSq/h9OVaEuIt/3z1D4fT5\nuaYSX3f/uM1yhcMSxUUPxA5nPhyeD5x4ktxocA0wYwq1lHpd27UCdewE8jqqEW67\nj1ZMfYYs6lCyrf6EGDxrxOxGKDzXeQ8G/2DJhb+/m40XqWGzTIo=\n=GfJc\n-----END PGP SIGNATURE-----", "payload": "tree 3b3e3598c2edfbf34bf9deea021a53efae392ec3\nparent 6499c5e7fc173a3f55b7a3bd1e6a50e9edef782d\nauthor Ruby Lazuli <general@patchmixolydic.com> 1644625262 -0600\ncommitter Ruby Lazuli <general@patchmixolydic.com> 1645973557 -0600\n\nLint against more useless `#[must_use]` attributes\n\nThis expands the existing `#[must_use]` check in `unused_attributes`\nto lint against pretty much everything `#[must_use]` doesn't support.\nFixes #93906.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623", "html_url": "https://github.com/rust-lang/rust/commit/6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623/comments", "author": {"login": "PatchMixolydic", "id": 8634700, "node_id": "MDQ6VXNlcjg2MzQ3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8634700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PatchMixolydic", "html_url": "https://github.com/PatchMixolydic", "followers_url": "https://api.github.com/users/PatchMixolydic/followers", "following_url": "https://api.github.com/users/PatchMixolydic/following{/other_user}", "gists_url": "https://api.github.com/users/PatchMixolydic/gists{/gist_id}", "starred_url": "https://api.github.com/users/PatchMixolydic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PatchMixolydic/subscriptions", "organizations_url": "https://api.github.com/users/PatchMixolydic/orgs", "repos_url": "https://api.github.com/users/PatchMixolydic/repos", "events_url": "https://api.github.com/users/PatchMixolydic/events{/privacy}", "received_events_url": "https://api.github.com/users/PatchMixolydic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "PatchMixolydic", "id": 8634700, "node_id": "MDQ6VXNlcjg2MzQ3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8634700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PatchMixolydic", "html_url": "https://github.com/PatchMixolydic", "followers_url": "https://api.github.com/users/PatchMixolydic/followers", "following_url": "https://api.github.com/users/PatchMixolydic/following{/other_user}", "gists_url": "https://api.github.com/users/PatchMixolydic/gists{/gist_id}", "starred_url": "https://api.github.com/users/PatchMixolydic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PatchMixolydic/subscriptions", "organizations_url": "https://api.github.com/users/PatchMixolydic/orgs", "repos_url": "https://api.github.com/users/PatchMixolydic/repos", "events_url": "https://api.github.com/users/PatchMixolydic/events{/privacy}", "received_events_url": "https://api.github.com/users/PatchMixolydic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6499c5e7fc173a3f55b7a3bd1e6a50e9edef782d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6499c5e7fc173a3f55b7a3bd1e6a50e9edef782d", "html_url": "https://github.com/rust-lang/rust/commit/6499c5e7fc173a3f55b7a3bd1e6a50e9edef782d"}], "stats": {"total": 691, "additions": 527, "deletions": 164}, "files": [{"sha": "cb0654e0133c6f3d422e6f7f93a24446738e3a6c", "filename": "compiler/rustc_macros/src/session_diagnostic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623/compiler%2Frustc_macros%2Fsrc%2Fsession_diagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623/compiler%2Frustc_macros%2Fsrc%2Fsession_diagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fsession_diagnostic.rs?ref=6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623", "patch": "@@ -587,7 +587,6 @@ impl<'a> SessionDiagnosticDeriveBuilder<'a> {\n         // next call to `it.next()` retrieves the next character.\n         while let Some(c) = it.next() {\n             if c == '{' && *it.peek().unwrap_or(&'\\0') != '{' {\n-                #[must_use]\n                 let mut eat_argument = || -> Option<String> {\n                     let mut result = String::new();\n                     // Format specifiers look like"}, {"sha": "a87b253aae0aa10cd599bbc6a5b75db90880400c", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623", "patch": "@@ -1111,7 +1111,7 @@ impl CheckAttrVisitor<'_> {\n     }\n \n     /// Warns against some misuses of `#[must_use]`\n-    fn check_must_use(&self, hir_id: HirId, attr: &Attribute, span: Span, _target: Target) -> bool {\n+    fn check_must_use(&self, hir_id: HirId, attr: &Attribute, span: Span, target: Target) -> bool {\n         let node = self.tcx.hir().get(hir_id);\n         if let Some(fn_node) = node.fn_kind() {\n             if let rustc_hir::IsAsync::Async = fn_node.asyncness() {\n@@ -1131,6 +1131,39 @@ impl CheckAttrVisitor<'_> {\n             }\n         }\n \n+        if !matches!(\n+            target,\n+            Target::Fn\n+                | Target::Enum\n+                | Target::Struct\n+                | Target::Union\n+                | Target::Method(_)\n+                | Target::ForeignFn\n+                // `impl Trait` in return position can trip\n+                // `unused_must_use` if `Trait` is marked as\n+                // `#[must_use]`\n+                | Target::Trait\n+        ) {\n+            let article = match target {\n+                Target::ExternCrate\n+                | Target::OpaqueTy\n+                | Target::Enum\n+                | Target::Impl\n+                | Target::Expression\n+                | Target::Arm\n+                | Target::AssocConst\n+                | Target::AssocTy => \"an\",\n+                _ => \"a\",\n+            };\n+\n+            self.tcx.struct_span_lint_hir(UNUSED_ATTRIBUTES, hir_id, attr.span, |lint| {\n+                lint.build(&format!(\n+                    \"`#[must_use]` has no effect when applied to {article} {target}\"\n+                ))\n+                .emit();\n+            });\n+        }\n+\n         // For now, its always valid\n         true\n     }"}, {"sha": "b0e295178c8a561224d53ff603c49a5e60e88791", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs?ref=6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623", "patch": "@@ -71,6 +71,7 @@\n //~^^ WARN this was previously accepted by the compiler\n // see issue-43106-gating-of-rustc_deprecated.rs\n #![must_use]\n+//~^ WARN `#[must_use]` has no effect\n // see issue-43106-gating-of-stable.rs\n // see issue-43106-gating-of-unstable.rs\n // see issue-43106-gating-of-deprecated.rs\n@@ -597,17 +598,17 @@ mod deprecated {\n     #[deprecated] impl super::StructForDeprecated { }\n }\n \n-#[must_use]\n+#[must_use] //~ WARN `#[must_use]` has no effect\n mod must_use {\n-    mod inner { #![must_use] }\n+    mod inner { #![must_use] } //~ WARN `#[must_use]` has no effect\n \n     #[must_use] fn f() { }\n \n     #[must_use] struct S;\n \n-    #[must_use] type T = S;\n+    #[must_use] type T = S; //~ WARN `#[must_use]` has no effect\n \n-    #[must_use] impl S { }\n+    #[must_use] impl S { } //~ WARN `#[must_use]` has no effect\n }\n \n #[windows_subsystem = \"windows\"]"}, {"sha": "2431957e5391dd7a6ee31902bdb83896e09b5097", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs.stderr", "status": "modified", "additions": 188, "deletions": 158, "changes": 346, "blob_url": "https://github.com/rust-lang/rust/blob/6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr?ref=6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623", "patch": "@@ -29,179 +29,179 @@ LL | #![deny(x5100)]\n    |         ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:105:8\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:106:8\n    |\n LL | #[warn(x5400)]\n    |        ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:108:25\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:109:25\n    |\n LL |     mod inner { #![warn(x5400)] }\n    |                         ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:111:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:112:12\n    |\n LL |     #[warn(x5400)] fn f() { }\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:114:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:115:12\n    |\n LL |     #[warn(x5400)] struct S;\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:117:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:118:12\n    |\n LL |     #[warn(x5400)] type T = S;\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:120:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:121:12\n    |\n LL |     #[warn(x5400)] impl S { }\n    |            ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:124:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:125:9\n    |\n LL | #[allow(x5300)]\n    |         ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:127:26\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:128:26\n    |\n LL |     mod inner { #![allow(x5300)] }\n    |                          ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:130:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:131:13\n    |\n LL |     #[allow(x5300)] fn f() { }\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:133:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:134:13\n    |\n LL |     #[allow(x5300)] struct S;\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:136:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:137:13\n    |\n LL |     #[allow(x5300)] type T = S;\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:139:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:140:13\n    |\n LL |     #[allow(x5300)] impl S { }\n    |             ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:143:10\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:144:10\n    |\n LL | #[forbid(x5200)]\n    |          ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:146:27\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:147:27\n    |\n LL |     mod inner { #![forbid(x5200)] }\n    |                           ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:149:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:150:14\n    |\n LL |     #[forbid(x5200)] fn f() { }\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:152:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:153:14\n    |\n LL |     #[forbid(x5200)] struct S;\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:155:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:156:14\n    |\n LL |     #[forbid(x5200)] type T = S;\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:158:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:159:14\n    |\n LL |     #[forbid(x5200)] impl S { }\n    |              ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:162:8\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:163:8\n    |\n LL | #[deny(x5100)]\n    |        ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:165:25\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:166:25\n    |\n LL |     mod inner { #![deny(x5100)] }\n    |                         ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:168:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:169:12\n    |\n LL |     #[deny(x5100)] fn f() { }\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:171:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:172:12\n    |\n LL |     #[deny(x5100)] struct S;\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:174:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:175:12\n    |\n LL |     #[deny(x5100)] type T = S;\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:177:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:178:12\n    |\n LL |     #[deny(x5100)] impl S { }\n    |            ^^^^^\n \n warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:400:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:401:17\n    |\n LL |     mod inner { #![macro_escape] }\n    |                 ^^^^^^^^^^^^^^^^\n    |\n    = help: try an outer attribute: `#[macro_use]`\n \n warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:397:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:398:1\n    |\n LL | #[macro_escape]\n    | ^^^^^^^^^^^^^^^\n \n warning: use of deprecated attribute `crate_id`: no longer used.\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:84:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:85:1\n    |\n LL | #![crate_id = \"10\"]\n    | ^^^^^^^^^^^^^^^^^^^ help: remove this attribute\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n warning: use of deprecated attribute `no_start`: no longer used.\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:94:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:95:1\n    |\n LL | #![no_start]\n    | ^^^^^^^^^^^^ help: remove this attribute\n \n warning: `#[macro_export]` only has an effect on macro definitions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:198:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:199:1\n    |\n LL | #[macro_export]\n    | ^^^^^^^^^^^^^^^\n@@ -213,13 +213,13 @@ LL | #![warn(unused_attributes, unknown_lints)]\n    |         ^^^^^^^^^^^^^^^^^\n \n warning: `#[automatically_derived]` only has an effect on items\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:266:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:267:1\n    |\n LL | #[automatically_derived]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:284:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:285:1\n    |\n LL |   #[no_mangle]\n    |   ^^^^^^^^^^^^\n@@ -236,31 +236,31 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: `#[should_panic]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:324:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:325:1\n    |\n LL | #[should_panic]\n    | ^^^^^^^^^^^^^^^\n \n warning: `#[ignore]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:342:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:343:1\n    |\n LL | #[ignore]\n    | ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:377:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:378:1\n    |\n LL | #[reexport_test_harness_main = \"2900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:417:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:418:1\n    |\n LL | #[no_std]\n    | ^^^^^^^^^\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:453:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:454:1\n    |\n LL |   #[cold]\n    |   ^^^^^^^\n@@ -277,7 +277,7 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:482:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:483:1\n    |\n LL |   #[link_name = \"1900\"]\n    |   ^^^^^^^^^^^^^^^^^^^^^\n@@ -294,7 +294,7 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:521:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:522:1\n    |\n LL |   #[link_section = \"1800\"]\n    |   ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -311,7 +311,7 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to an `extern` block\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:553:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:554:1\n    |\n LL |   #[link()]\n    |   ^^^^^^^^^\n@@ -327,50 +327,56 @@ LL | | }\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n+warning: `#[must_use]` has no effect when applied to a module\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:601:1\n+   |\n+LL | #[must_use]\n+   | ^^^^^^^^^^^\n+\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:613:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:614:1\n    |\n LL | #[windows_subsystem = \"windows\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:634:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:635:1\n    |\n LL | #[crate_name = \"0900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:653:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:654:1\n    |\n LL | #[crate_type = \"0800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:672:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:673:1\n    |\n LL | #[feature(x0600)]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:692:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:693:1\n    |\n LL | #[no_main]\n    | ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:711:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:712:1\n    |\n LL | #[no_builtins]\n    | ^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:730:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:731:1\n    |\n LL | #[recursion_limit=\"0200\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:749:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:750:1\n    |\n LL | #[type_length_limit=\"0100\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -425,346 +431,352 @@ LL | #![link_section = \"1800\"]\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n+warning: `#[must_use]` has no effect when applied to a module\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:73:1\n+   |\n+LL | #![must_use]\n+   | ^^^^^^^^^^^^\n+\n warning: `#[macro_use]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:185:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:186:5\n    |\n LL |     #[macro_use] fn f() { }\n    |     ^^^^^^^^^^^^\n \n warning: `#[macro_use]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:188:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:189:5\n    |\n LL |     #[macro_use] struct S;\n    |     ^^^^^^^^^^^^\n \n warning: `#[macro_use]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:191:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:192:5\n    |\n LL |     #[macro_use] type T = S;\n    |     ^^^^^^^^^^^^\n \n warning: `#[macro_use]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:194:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:195:5\n    |\n LL |     #[macro_use] impl S { }\n    |     ^^^^^^^^^^^^\n \n warning: `#[macro_export]` only has an effect on macro definitions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:201:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:202:17\n    |\n LL |     mod inner { #![macro_export] }\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: `#[macro_export]` only has an effect on macro definitions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:204:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:205:5\n    |\n LL |     #[macro_export] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[macro_export]` only has an effect on macro definitions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:207:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:208:5\n    |\n LL |     #[macro_export] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[macro_export]` only has an effect on macro definitions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:210:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:211:5\n    |\n LL |     #[macro_export] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[macro_export]` only has an effect on macro definitions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:213:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:214:5\n    |\n LL |     #[macro_export] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[path]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:253:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:254:5\n    |\n LL |     #[path = \"3800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: `#[path]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:256:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:257:5\n    |\n LL |     #[path = \"3800\"]  struct S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: `#[path]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:259:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:260:5\n    |\n LL |     #[path = \"3800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: `#[path]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:262:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:263:5\n    |\n LL |     #[path = \"3800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: `#[automatically_derived]` only has an effect on items\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:269:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:270:17\n    |\n LL |     mod inner { #![automatically_derived] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[automatically_derived]` only has an effect on items\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:272:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:273:5\n    |\n LL |     #[automatically_derived] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[automatically_derived]` only has an effect on items\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:275:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:276:5\n    |\n LL |     #[automatically_derived] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[automatically_derived]` only has an effect on items\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:278:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:279:5\n    |\n LL |     #[automatically_derived] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:289:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:290:17\n    |\n LL |     mod inner { #![no_mangle] }\n    |     ------------^^^^^^^^^^^^^-- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:296:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:297:5\n    |\n LL |     #[no_mangle] struct S;\n    |     ^^^^^^^^^^^^ --------- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:301:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:302:5\n    |\n LL |     #[no_mangle] type T = S;\n    |     ^^^^^^^^^^^^ ----------- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:306:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:307:5\n    |\n LL |     #[no_mangle] impl S { }\n    |     ^^^^^^^^^^^^ ---------- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:312:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:313:9\n    |\n LL |         #[no_mangle] fn foo();\n    |         ^^^^^^^^^^^^ --------- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:317:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:318:9\n    |\n LL |         #[no_mangle] fn bar() {}\n    |         ^^^^^^^^^^^^ ----------- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: `#[should_panic]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:327:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:328:17\n    |\n LL |     mod inner { #![should_panic] }\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: `#[should_panic]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:332:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:333:5\n    |\n LL |     #[should_panic] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[should_panic]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:335:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:336:5\n    |\n LL |     #[should_panic] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[should_panic]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:338:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:339:5\n    |\n LL |     #[should_panic] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[ignore]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:345:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:346:17\n    |\n LL |     mod inner { #![ignore] }\n    |                 ^^^^^^^^^^\n \n warning: `#[ignore]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:350:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:351:5\n    |\n LL |     #[ignore] struct S;\n    |     ^^^^^^^^^\n \n warning: `#[ignore]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:353:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:354:5\n    |\n LL |     #[ignore] type T = S;\n    |     ^^^^^^^^^\n \n warning: `#[ignore]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:356:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:357:5\n    |\n LL |     #[ignore] impl S { }\n    |     ^^^^^^^^^\n \n warning: `#[no_implicit_prelude]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:364:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:365:5\n    |\n LL |     #[no_implicit_prelude] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[no_implicit_prelude]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:367:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:368:5\n    |\n LL |     #[no_implicit_prelude] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[no_implicit_prelude]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:370:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:371:5\n    |\n LL |     #[no_implicit_prelude] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[no_implicit_prelude]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:373:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:374:5\n    |\n LL |     #[no_implicit_prelude] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:380:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:381:17\n    |\n LL |     mod inner { #![reexport_test_harness_main=\"2900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:383:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:384:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:386:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:387:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:389:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:390:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:392:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:393:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[macro_escape]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:404:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:405:5\n    |\n LL |     #[macro_escape] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[macro_escape]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:407:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:408:5\n    |\n LL |     #[macro_escape] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[macro_escape]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:410:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:411:5\n    |\n LL |     #[macro_escape] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[macro_escape]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:413:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:414:5\n    |\n LL |     #[macro_escape] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:420:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:421:17\n    |\n LL |     mod inner { #![no_std] }\n    |                 ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:423:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:424:5\n    |\n LL |     #[no_std] fn f() { }\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:426:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:427:5\n    |\n LL |     #[no_std] struct S;\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:429:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:430:5\n    |\n LL |     #[no_std] type T = S;\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:432:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:433:5\n    |\n LL |     #[no_std] impl S { }\n    |     ^^^^^^^^^\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:459:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:460:17\n    |\n LL |     mod inner { #![cold] }\n    |     ------------^^^^^^^^-- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:466:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:467:5\n    |\n LL |     #[cold] struct S;\n    |     ^^^^^^^ --------- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:471:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:472:5\n    |\n LL |     #[cold] type T = S;\n    |     ^^^^^^^ ----------- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:476:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:477:5\n    |\n LL |     #[cold] impl S { }\n    |     ^^^^^^^ ---------- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:488:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:489:5\n    |\n LL |     #[link_name = \"1900\"]\n    |     ^^^^^^^^^^^^^^^^^^^^^\n@@ -774,370 +786,388 @@ LL |     extern \"C\" { }\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n help: try `#[link(name = \"1900\")]` instead\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:488:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:489:5\n    |\n LL |     #[link_name = \"1900\"]\n    |     ^^^^^^^^^^^^^^^^^^^^^\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:495:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:496:17\n    |\n LL |     mod inner { #![link_name=\"1900\"] }\n    |     ------------^^^^^^^^^^^^^^^^^^^^-- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:500:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:501:5\n    |\n LL |     #[link_name = \"1900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:505:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:506:5\n    |\n LL |     #[link_name = \"1900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^ --------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:510:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:511:5\n    |\n LL |     #[link_name = \"1900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^ ----------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:515:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:516:5\n    |\n LL |     #[link_name = \"1900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:527:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:528:17\n    |\n LL |     mod inner { #![link_section=\"1800\"] }\n    |     ------------^^^^^^^^^^^^^^^^^^^^^^^-- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:534:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:535:5\n    |\n LL |     #[link_section = \"1800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ --------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:539:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:540:5\n    |\n LL |     #[link_section = \"1800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ ----------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:544:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:545:5\n    |\n LL |     #[link_section = \"1800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ ---------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to an `extern` block\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:559:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:560:17\n    |\n LL |     mod inner { #![link()] }\n    |     ------------^^^^^^^^^^-- not an `extern` block\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to an `extern` block\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:564:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:565:5\n    |\n LL |     #[link()] fn f() { }\n    |     ^^^^^^^^^ ---------- not an `extern` block\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to an `extern` block\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:569:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:570:5\n    |\n LL |     #[link()] struct S;\n    |     ^^^^^^^^^ --------- not an `extern` block\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to an `extern` block\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:574:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:575:5\n    |\n LL |     #[link()] type T = S;\n    |     ^^^^^^^^^ ----------- not an `extern` block\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to an `extern` block\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:579:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:580:5\n    |\n LL |     #[link()] impl S { }\n    |     ^^^^^^^^^ ---------- not an `extern` block\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n+warning: `#[must_use]` has no effect when applied to a module\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:603:17\n+   |\n+LL |     mod inner { #![must_use] }\n+   |                 ^^^^^^^^^^^^\n+\n+warning: `#[must_use]` has no effect when applied to a type alias\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:609:5\n+   |\n+LL |     #[must_use] type T = S;\n+   |     ^^^^^^^^^^^\n+\n+warning: `#[must_use]` has no effect when applied to an item\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:611:5\n+   |\n+LL |     #[must_use] impl S { }\n+   |     ^^^^^^^^^^^\n+\n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:616:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:617:17\n    |\n LL |     mod inner { #![windows_subsystem=\"windows\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:619:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:620:5\n    |\n LL |     #[windows_subsystem = \"windows\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:622:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:623:5\n    |\n LL |     #[windows_subsystem = \"windows\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:625:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:626:5\n    |\n LL |     #[windows_subsystem = \"windows\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:628:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:629:5\n    |\n LL |     #[windows_subsystem = \"windows\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:637:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:638:17\n    |\n LL |     mod inner { #![crate_name=\"0900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:640:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:641:5\n    |\n LL |     #[crate_name = \"0900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:643:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:644:5\n    |\n LL |     #[crate_name = \"0900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:646:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:647:5\n    |\n LL |     #[crate_name = \"0900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:649:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:650:5\n    |\n LL |     #[crate_name = \"0900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:656:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:657:17\n    |\n LL |     mod inner { #![crate_type=\"0800\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:659:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:660:5\n    |\n LL |     #[crate_type = \"0800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:662:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:663:5\n    |\n LL |     #[crate_type = \"0800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:665:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:666:5\n    |\n LL |     #[crate_type = \"0800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:668:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:669:5\n    |\n LL |     #[crate_type = \"0800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:675:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:676:17\n    |\n LL |     mod inner { #![feature(x0600)] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:678:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:679:5\n    |\n LL |     #[feature(x0600)] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:681:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:682:5\n    |\n LL |     #[feature(x0600)] struct S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:684:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:685:5\n    |\n LL |     #[feature(x0600)] type T = S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:687:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:688:5\n    |\n LL |     #[feature(x0600)] impl S { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:695:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:696:17\n    |\n LL |     mod inner { #![no_main] }\n    |                 ^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:698:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:699:5\n    |\n LL |     #[no_main] fn f() { }\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:701:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:702:5\n    |\n LL |     #[no_main] struct S;\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:704:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:705:5\n    |\n LL |     #[no_main] type T = S;\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:707:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:708:5\n    |\n LL |     #[no_main] impl S { }\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:714:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:715:17\n    |\n LL |     mod inner { #![no_builtins] }\n    |                 ^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:717:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:718:5\n    |\n LL |     #[no_builtins] fn f() { }\n    |     ^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:720:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:721:5\n    |\n LL |     #[no_builtins] struct S;\n    |     ^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:723:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:724:5\n    |\n LL |     #[no_builtins] type T = S;\n    |     ^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:726:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:727:5\n    |\n LL |     #[no_builtins] impl S { }\n    |     ^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:733:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:734:17\n    |\n LL |     mod inner { #![recursion_limit=\"0200\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:736:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:737:5\n    |\n LL |     #[recursion_limit=\"0200\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:739:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:740:5\n    |\n LL |     #[recursion_limit=\"0200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:742:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:743:5\n    |\n LL |     #[recursion_limit=\"0200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:745:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:746:5\n    |\n LL |     #[recursion_limit=\"0200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:752:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:753:17\n    |\n LL |     mod inner { #![type_length_limit=\"0100\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:755:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:756:5\n    |\n LL |     #[type_length_limit=\"0100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:758:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:759:5\n    |\n LL |     #[type_length_limit=\"0100\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:761:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:762:5\n    |\n LL |     #[type_length_limit=\"0100\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:764:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:765:5\n    |\n LL |     #[type_length_limit=\"0100\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: the feature `rust1` has been stable since 1.0.0 and no longer requires an attribute to enable\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:90:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:91:12\n    |\n LL | #![feature(rust1)]\n    |            ^^^^^\n    |\n    = note: `#[warn(stable_features)]` on by default\n \n-warning: 167 warnings emitted\n+warning: 172 warnings emitted\n "}, {"sha": "1c4abb9491e00740c22324828d5de81fd442f9ff", "filename": "src/test/ui/lint/unused/unused_attributes-must_use.rs", "status": "added", "additions": 125, "deletions": 0, "changes": 125, "blob_url": "https://github.com/rust-lang/rust/blob/6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623/src%2Ftest%2Fui%2Flint%2Funused%2Funused_attributes-must_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623/src%2Ftest%2Fui%2Flint%2Funused%2Funused_attributes-must_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Funused_attributes-must_use.rs?ref=6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623", "patch": "@@ -0,0 +1,125 @@\n+#![allow(dead_code, path_statements)]\n+#![deny(unused_attributes, unused_must_use)]\n+#![feature(asm_experimental_arch, stmt_expr_attributes, trait_alias)]\n+\n+#[must_use] //~ ERROR `#[must_use]` has no effect\n+extern crate std as std2;\n+\n+#[must_use] //~ ERROR `#[must_use]` has no effect\n+mod test_mod {}\n+\n+#[must_use] //~ ERROR `#[must_use]` has no effect\n+use std::arch::global_asm;\n+\n+#[must_use] //~ ERROR `#[must_use]` has no effect\n+const CONST: usize = 4;\n+#[must_use] //~ ERROR `#[must_use]` has no effect\n+#[no_mangle]\n+static STATIC: usize = 4;\n+\n+#[must_use]\n+struct X;\n+\n+#[must_use]\n+enum Y {\n+    Z,\n+}\n+\n+#[must_use]\n+union U {\n+    unit: (),\n+}\n+\n+#[must_use] //~ ERROR `#[must_use]` has no effect\n+impl U {\n+    #[must_use]\n+    fn method() -> i32 {\n+        4\n+    }\n+}\n+\n+#[must_use]\n+#[no_mangle]\n+fn foo() -> i64 {\n+    4\n+}\n+\n+#[must_use] //~ ERROR `#[must_use]` has no effect\n+extern \"Rust\" {\n+    #[link_name = \"STATIC\"]\n+    #[must_use] //~ ERROR `#[must_use]` has no effect\n+    static FOREIGN_STATIC: usize;\n+\n+    #[link_name = \"foo\"]\n+    #[must_use]\n+    fn foreign_foo() -> i64;\n+}\n+\n+#[must_use] //~ ERROR unused attribute\n+global_asm!(\"\");\n+\n+#[must_use] //~ ERROR `#[must_use]` has no effect\n+type UseMe = ();\n+\n+fn qux<#[must_use] T>(_: T) {} //~ ERROR `#[must_use]` has no effect\n+\n+#[must_use]\n+trait Use {\n+    #[must_use] //~ ERROR `#[must_use]` has no effect\n+    const ASSOC_CONST: usize = 4;\n+    #[must_use] //~ ERROR `#[must_use]` has no effect\n+    type AssocTy;\n+\n+    #[must_use]\n+    fn get_four(&self) -> usize {\n+        4\n+    }\n+}\n+\n+#[must_use] //~ ERROR `#[must_use]` has no effect\n+impl Use for () {\n+    type AssocTy = ();\n+}\n+\n+#[must_use] //~ ERROR `#[must_use]` has no effect\n+trait Alias = Use;\n+\n+#[must_use] //~ ERROR `#[must_use]` has no effect\n+macro_rules! cool_macro {\n+    () => {\n+        4\n+    };\n+}\n+\n+fn main() {\n+    #[must_use] //~ ERROR `#[must_use]` has no effect\n+    let x = || {};\n+    x();\n+\n+    let x = #[must_use] //~ ERROR `#[must_use]` has no effect\n+    || {};\n+    x();\n+\n+    X; //~ ERROR that must be used\n+    Y::Z; //~ ERROR that must be used\n+    U { unit: () }; //~ ERROR that must be used\n+    U::method(); //~ ERROR that must be used\n+    foo(); //~ ERROR that must be used\n+\n+    unsafe {\n+        foreign_foo(); //~ ERROR that must be used\n+    };\n+\n+    CONST;\n+    STATIC;\n+    unsafe { FOREIGN_STATIC };\n+    cool_macro!();\n+    qux(4);\n+    ().get_four(); //~ ERROR that must be used\n+\n+    match Some(4) {\n+        #[must_use] //~ ERROR `#[must_use]` has no effect\n+        Some(res) => res,\n+        None => 0,\n+    };\n+}"}, {"sha": "27269580e52e2bd479cdf33c0d267eb60b165a64", "filename": "src/test/ui/lint/unused/unused_attributes-must_use.stderr", "status": "added", "additions": 175, "deletions": 0, "changes": 175, "blob_url": "https://github.com/rust-lang/rust/blob/6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623/src%2Ftest%2Fui%2Flint%2Funused%2Funused_attributes-must_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623/src%2Ftest%2Fui%2Flint%2Funused%2Funused_attributes-must_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Funused_attributes-must_use.stderr?ref=6dcf5d8fdeb341a3ec2ed00d2cb4449da35d8623", "patch": "@@ -0,0 +1,175 @@\n+error: unused attribute `must_use`\n+  --> $DIR/unused_attributes-must_use.rs:58:1\n+   |\n+LL | #[must_use]\n+   | ^^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/unused_attributes-must_use.rs:2:9\n+   |\n+LL | #![deny(unused_attributes, unused_must_use)]\n+   |         ^^^^^^^^^^^^^^^^^\n+note: the built-in attribute `must_use` will be ignored, since it's applied to the macro invocation `global_asm`\n+  --> $DIR/unused_attributes-must_use.rs:59:1\n+   |\n+LL | global_asm!(\"\");\n+   | ^^^^^^^^^^\n+\n+error: `#[must_use]` has no effect when applied to an extern crate\n+  --> $DIR/unused_attributes-must_use.rs:5:1\n+   |\n+LL | #[must_use]\n+   | ^^^^^^^^^^^\n+\n+error: `#[must_use]` has no effect when applied to a module\n+  --> $DIR/unused_attributes-must_use.rs:8:1\n+   |\n+LL | #[must_use]\n+   | ^^^^^^^^^^^\n+\n+error: `#[must_use]` has no effect when applied to a use\n+  --> $DIR/unused_attributes-must_use.rs:11:1\n+   |\n+LL | #[must_use]\n+   | ^^^^^^^^^^^\n+\n+error: `#[must_use]` has no effect when applied to a constant item\n+  --> $DIR/unused_attributes-must_use.rs:14:1\n+   |\n+LL | #[must_use]\n+   | ^^^^^^^^^^^\n+\n+error: `#[must_use]` has no effect when applied to a static item\n+  --> $DIR/unused_attributes-must_use.rs:16:1\n+   |\n+LL | #[must_use]\n+   | ^^^^^^^^^^^\n+\n+error: `#[must_use]` has no effect when applied to an item\n+  --> $DIR/unused_attributes-must_use.rs:33:1\n+   |\n+LL | #[must_use]\n+   | ^^^^^^^^^^^\n+\n+error: `#[must_use]` has no effect when applied to a foreign module\n+  --> $DIR/unused_attributes-must_use.rs:47:1\n+   |\n+LL | #[must_use]\n+   | ^^^^^^^^^^^\n+\n+error: `#[must_use]` has no effect when applied to a type alias\n+  --> $DIR/unused_attributes-must_use.rs:61:1\n+   |\n+LL | #[must_use]\n+   | ^^^^^^^^^^^\n+\n+error: `#[must_use]` has no effect when applied to a type parameter\n+  --> $DIR/unused_attributes-must_use.rs:64:8\n+   |\n+LL | fn qux<#[must_use] T>(_: T) {}\n+   |        ^^^^^^^^^^^\n+\n+error: `#[must_use]` has no effect when applied to an item\n+  --> $DIR/unused_attributes-must_use.rs:79:1\n+   |\n+LL | #[must_use]\n+   | ^^^^^^^^^^^\n+\n+error: `#[must_use]` has no effect when applied to a trait alias\n+  --> $DIR/unused_attributes-must_use.rs:84:1\n+   |\n+LL | #[must_use]\n+   | ^^^^^^^^^^^\n+\n+error: `#[must_use]` has no effect when applied to a macro def\n+  --> $DIR/unused_attributes-must_use.rs:87:1\n+   |\n+LL | #[must_use]\n+   | ^^^^^^^^^^^\n+\n+error: `#[must_use]` has no effect when applied to a statement\n+  --> $DIR/unused_attributes-must_use.rs:95:5\n+   |\n+LL |     #[must_use]\n+   |     ^^^^^^^^^^^\n+\n+error: `#[must_use]` has no effect when applied to a closure\n+  --> $DIR/unused_attributes-must_use.rs:99:13\n+   |\n+LL |     let x = #[must_use]\n+   |             ^^^^^^^^^^^\n+\n+error: `#[must_use]` has no effect when applied to an match arm\n+  --> $DIR/unused_attributes-must_use.rs:121:9\n+   |\n+LL |         #[must_use]\n+   |         ^^^^^^^^^^^\n+\n+error: `#[must_use]` has no effect when applied to an associated const\n+  --> $DIR/unused_attributes-must_use.rs:68:5\n+   |\n+LL |     #[must_use]\n+   |     ^^^^^^^^^^^\n+\n+error: `#[must_use]` has no effect when applied to an associated type\n+  --> $DIR/unused_attributes-must_use.rs:70:5\n+   |\n+LL |     #[must_use]\n+   |     ^^^^^^^^^^^\n+\n+error: `#[must_use]` has no effect when applied to a foreign static item\n+  --> $DIR/unused_attributes-must_use.rs:50:5\n+   |\n+LL |     #[must_use]\n+   |     ^^^^^^^^^^^\n+\n+error: unused `X` that must be used\n+  --> $DIR/unused_attributes-must_use.rs:103:5\n+   |\n+LL |     X;\n+   |     ^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/unused_attributes-must_use.rs:2:28\n+   |\n+LL | #![deny(unused_attributes, unused_must_use)]\n+   |                            ^^^^^^^^^^^^^^^\n+\n+error: unused `Y` that must be used\n+  --> $DIR/unused_attributes-must_use.rs:104:5\n+   |\n+LL |     Y::Z;\n+   |     ^^^^^\n+\n+error: unused `U` that must be used\n+  --> $DIR/unused_attributes-must_use.rs:105:5\n+   |\n+LL |     U { unit: () };\n+   |     ^^^^^^^^^^^^^^^\n+\n+error: unused return value of `U::method` that must be used\n+  --> $DIR/unused_attributes-must_use.rs:106:5\n+   |\n+LL |     U::method();\n+   |     ^^^^^^^^^^^^\n+\n+error: unused return value of `foo` that must be used\n+  --> $DIR/unused_attributes-must_use.rs:107:5\n+   |\n+LL |     foo();\n+   |     ^^^^^^\n+\n+error: unused return value of `foreign_foo` that must be used\n+  --> $DIR/unused_attributes-must_use.rs:110:9\n+   |\n+LL |         foreign_foo();\n+   |         ^^^^^^^^^^^^^^\n+\n+error: unused return value of `Use::get_four` that must be used\n+  --> $DIR/unused_attributes-must_use.rs:118:5\n+   |\n+LL |     ().get_four();\n+   |     ^^^^^^^^^^^^^^\n+\n+error: aborting due to 26 previous errors\n+"}]}