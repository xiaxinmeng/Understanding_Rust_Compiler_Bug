{"sha": "e2a099850c614600fcfdd8a91b90d8bf52e89b28", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyYTA5OTg1MGM2MTQ2MDBmY2ZkZDhhOTFiOTBkOGJmNTJlODliMjg=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-05-24T06:06:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-24T06:06:23Z"}, "message": "Merge pull request #170 from dwrensha/rustup\n\nupdate for upstream changes with ty::ParamEnv", "tree": {"sha": "e5d910df3b54911054d42789758ec43d5b0c8f2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5d910df3b54911054d42789758ec43d5b0c8f2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2a099850c614600fcfdd8a91b90d8bf52e89b28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2a099850c614600fcfdd8a91b90d8bf52e89b28", "html_url": "https://github.com/rust-lang/rust/commit/e2a099850c614600fcfdd8a91b90d8bf52e89b28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2a099850c614600fcfdd8a91b90d8bf52e89b28/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5483806aeeb8d6ce7e084378837df2e24e2ec5d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/5483806aeeb8d6ce7e084378837df2e24e2ec5d4", "html_url": "https://github.com/rust-lang/rust/commit/5483806aeeb8d6ce7e084378837df2e24e2ec5d4"}, {"sha": "48662d5199cff83fcc98bb08a1c9729a5f70a1f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/48662d5199cff83fcc98bb08a1c9729a5f70a1f2", "html_url": "https://github.com/rust-lang/rust/commit/48662d5199cff83fcc98bb08a1c9729a5f70a1f2"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "244f50befa9bda6fe69eb73fea3cc97b6df83708", "filename": "src/eval_context.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e2a099850c614600fcfdd8a91b90d8bf52e89b28/src%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2a099850c614600fcfdd8a91b90d8bf52e89b28/src%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval_context.rs?ref=e2a099850c614600fcfdd8a91b90d8bf52e89b28", "patch": "@@ -377,7 +377,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n     pub(super) fn type_is_sized(&self, ty: Ty<'tcx>) -> bool {\n         // generics are weird, don't run this function on a generic\n         assert!(!ty.needs_subst());\n-        ty.is_sized(self.tcx, &self.tcx.empty_parameter_environment(), DUMMY_SP)\n+        ty.is_sized(self.tcx, ty::ParamEnv::empty(), DUMMY_SP)\n     }\n \n     pub fn load_mir(&self, instance: ty::InstanceDef<'tcx>) -> EvalResult<'tcx, &'tcx mir::Mir<'tcx>> {\n@@ -1914,14 +1914,14 @@ pub fn needs_drop_glue<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, t: Ty<'tcx>) -> bo\n     // returned `false` does not appear unsound. The impact on\n     // code quality is unknown at this time.)\n \n-    let env = tcx.empty_parameter_environment();\n-    if !t.needs_drop(tcx, &env) {\n+    let env = ty::ParamEnv::empty();\n+    if !t.needs_drop(tcx, env) {\n         return false;\n     }\n     match t.sty {\n         ty::TyAdt(def, _) if def.is_box() => {\n             let typ = t.boxed_ty();\n-            if !typ.needs_drop(tcx, &env) && type_is_sized(tcx, typ) {\n+            if !typ.needs_drop(tcx, env) && type_is_sized(tcx, typ) {\n                 tcx.infer_ctxt((), traits::Reveal::All).enter(|infcx| {\n                     let layout = t.layout(&infcx).unwrap();\n                     // `Box<ZeroSizeType>` does not allocate.\n@@ -2038,7 +2038,7 @@ impl<'a, 'tcx> ::rustc::ty::fold::TypeFolder<'tcx, 'tcx> for AssociatedTypeNorma\n fn type_is_sized<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, ty: Ty<'tcx>) -> bool {\n     // generics are weird, don't run this function on a generic\n     assert!(!ty.needs_subst());\n-    ty.is_sized(tcx, &tcx.empty_parameter_environment(), DUMMY_SP)\n+    ty.is_sized(tcx, ty::ParamEnv::empty(), DUMMY_SP)\n }\n \n /// Attempts to resolve an obligation. The result is a shallow vtable resolution -- meaning that we"}, {"sha": "27eb26e333ac9e66451bcf5dd101fb8f46592b07", "filename": "src/step.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2a099850c614600fcfdd8a91b90d8bf52e89b28/src%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2a099850c614600fcfdd8a91b90d8bf52e89b28/src%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstep.rs?ref=e2a099850c614600fcfdd8a91b90d8bf52e89b28", "patch": "@@ -164,7 +164,7 @@ impl<'a, 'b, 'tcx> ConstantExtractor<'a, 'b, 'tcx> {\n             let mutable = !shared ||\n                 !mir.return_ty.is_freeze(\n                     this.ecx.tcx,\n-                    &this.ecx.tcx.empty_parameter_environment(),\n+                    ty::ParamEnv::empty(),\n                     span);\n             let cleanup = StackPopCleanup::MarkStatic(mutable);\n             let name = ty::tls::with(|tcx| tcx.item_path_str(def_id));"}, {"sha": "e2fd57ee8ef6a81ea011c15f1c32f747a493d664", "filename": "src/terminator/intrinsic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2a099850c614600fcfdd8a91b90d8bf52e89b28/src%2Fterminator%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2a099850c614600fcfdd8a91b90d8bf52e89b28/src%2Fterminator%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fintrinsic.rs?ref=e2a099850c614600fcfdd8a91b90d8bf52e89b28", "patch": "@@ -291,8 +291,8 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n \n             \"needs_drop\" => {\n                 let ty = substs.type_at(0);\n-                let env = self.tcx.empty_parameter_environment();\n-                let needs_drop = ty.needs_drop(self.tcx, &env);\n+                let env = ty::ParamEnv::empty();\n+                let needs_drop = ty.needs_drop(self.tcx, env);\n                 self.write_primval(dest, PrimVal::from_bool(needs_drop), dest_ty)?;\n             }\n "}]}