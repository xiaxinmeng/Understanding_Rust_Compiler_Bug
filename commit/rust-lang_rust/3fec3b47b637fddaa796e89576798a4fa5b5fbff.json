{"sha": "3fec3b47b637fddaa796e89576798a4fa5b5fbff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZWMzYjQ3YjYzN2ZkZGFhNzk2ZTg5NTc2Nzk4YTRmYTViNWZiZmY=", "commit": {"author": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2018-07-04T23:53:40Z"}, "committer": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2018-07-04T23:53:40Z"}, "message": "refactor function", "tree": {"sha": "842892dc3dc210939b9d57b7e9a0a5c8da90be6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/842892dc3dc210939b9d57b7e9a0a5c8da90be6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fec3b47b637fddaa796e89576798a4fa5b5fbff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fec3b47b637fddaa796e89576798a4fa5b5fbff", "html_url": "https://github.com/rust-lang/rust/commit/3fec3b47b637fddaa796e89576798a4fa5b5fbff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fec3b47b637fddaa796e89576798a4fa5b5fbff/comments", "author": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14cbdf2607faafd608ea94234456c509e058e291", "url": "https://api.github.com/repos/rust-lang/rust/commits/14cbdf2607faafd608ea94234456c509e058e291", "html_url": "https://github.com/rust-lang/rust/commit/14cbdf2607faafd608ea94234456c509e058e291"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "7b13aee9a55101c5c2ded647ae0a66c0923ff5c2", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/3fec3b47b637fddaa796e89576798a4fa5b5fbff/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fec3b47b637fddaa796e89576798a4fa5b5fbff/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=3fec3b47b637fddaa796e89576798a4fa5b5fbff", "patch": "@@ -67,19 +67,17 @@ declare_clippy_lint! {\n \n pub struct MissingInline;\n \n-impl MissingInline {\n-    fn check_missing_inline_attrs(&self, cx: &LateContext,\n-                                  attrs: &[ast::Attribute], sp: Span, desc: &'static str) {\n-        let has_inline = attrs\n-            .iter()\n-            .any(|a| a.name() == \"inline\" );\n-        if !has_inline {\n-            cx.span_lint(\n-                MISSING_INLINE_IN_PUBLIC_ITEMS,\n-                sp,\n-                &format!(\"missing `#[inline]` for {}\", desc),\n-            );\n-        }\n+fn check_missing_inline_attrs(cx: &LateContext,\n+                              attrs: &[ast::Attribute], sp: Span, desc: &'static str) {\n+    let has_inline = attrs\n+        .iter()\n+        .any(|a| a.name() == \"inline\" );\n+    if !has_inline {\n+        cx.span_lint(\n+            MISSING_INLINE_IN_PUBLIC_ITEMS,\n+            sp,\n+            &format!(\"missing `#[inline]` for {}\", desc),\n+        );\n     }\n }\n \n@@ -112,7 +110,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingInline {\n         match it.node {\n             hir::ItemFn(..) => {\n                 let desc = \"a function\";\n-                self.check_missing_inline_attrs(cx, &it.attrs, it.span, desc);\n+                check_missing_inline_attrs(cx, &it.attrs, it.span, desc);\n             },\n             hir::ItemTrait(ref _is_auto, ref _unsafe, ref _generics,\n                            ref _bounds, ref trait_items)  => {\n@@ -129,7 +127,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingInline {\n                                 // an impl is not provided\n                                 let desc = \"a default trait method\";\n                                 let item = cx.tcx.hir.expect_trait_item(tit.id.node_id);\n-                                self.check_missing_inline_attrs(cx, &item.attrs,\n+                                check_missing_inline_attrs(cx, &item.attrs,\n                                                                 item.span, desc);\n                             }\n                         },\n@@ -195,6 +193,6 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingInline {\n             },\n         }\n \n-        self.check_missing_inline_attrs(cx, &impl_item.attrs, impl_item.span, desc);\n+        check_missing_inline_attrs(cx, &impl_item.attrs, impl_item.span, desc);\n     }\n }"}]}