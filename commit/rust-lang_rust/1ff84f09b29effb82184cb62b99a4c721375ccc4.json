{"sha": "1ff84f09b29effb82184cb62b99a4c721375ccc4", "node_id": "C_kwDOAAsO6NoAKDFmZjg0ZjA5YjI5ZWZmYjgyMTg0Y2I2MmI5OWE0YzcyMTM3NWNjYzQ", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-07-27T02:52:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-27T02:52:52Z"}, "message": "Rollup merge of #98583 - joshtriplett:stabilize-windows-symlink-types, r=thomcc\n\nStabilize Windows `FileTypeExt` with `is_symlink_dir` and `is_symlink_file`\n\nThese calls allow detecting whether a symlink is a file or a directory,\na distinction Windows maintains, and one important to software that\nwants to do further operations on the symlink (e.g. removing it).", "tree": {"sha": "bfdddf1c7e640a024235eee86c41f82711a6aac4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfdddf1c7e640a024235eee86c41f82711a6aac4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ff84f09b29effb82184cb62b99a4c721375ccc4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi4KiECRBK7hj4Ov3rIwAATCgIACRw5RPQApishROOZxtQrn9/\n7tinXwccM6SQfVfRE5mdRqQtOexA/sHH/8kC0ZJ2KjIn75a34bzPXFbBMwTA3WWL\naUieNlEsQjTX5Yh/NfScyaiRAEP7T5NACYUQbgiFJC4j0i957MtgjtBT+Ai73WJh\nD23HXwHimsT2DFqA0Q9f98N6qwhLL3KUuPTYTVG/MxqlNV7sNADBK10LCgPPs4S4\nRw8Z2nKKhqDRR/m0ImttQAlD4LzPPoYlAgQwy5NBEFzAiBgqwBM7YGN9fvxIY6bT\n2fhtFVspouqNxs26Zr6ST9IKgyNYPFTTT686GlUHM26Fd0lc+jZNgiV2u2avp0Y=\n=MbnV\n-----END PGP SIGNATURE-----\n", "payload": "tree bfdddf1c7e640a024235eee86c41f82711a6aac4\nparent 4d6d601c8a83284d6b23c253a3e2a060fd197316\nparent a4cb0b90c049fd8bc6a4a13edad69d34b98627f0\nauthor Yuki Okushi <jtitor@2k36.org> 1658890372 +0900\ncommitter GitHub <noreply@github.com> 1658890372 +0900\n\nRollup merge of #98583 - joshtriplett:stabilize-windows-symlink-types, r=thomcc\n\nStabilize Windows `FileTypeExt` with `is_symlink_dir` and `is_symlink_file`\n\nThese calls allow detecting whether a symlink is a file or a directory,\na distinction Windows maintains, and one important to software that\nwants to do further operations on the symlink (e.g. removing it).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ff84f09b29effb82184cb62b99a4c721375ccc4", "html_url": "https://github.com/rust-lang/rust/commit/1ff84f09b29effb82184cb62b99a4c721375ccc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ff84f09b29effb82184cb62b99a4c721375ccc4/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d6d601c8a83284d6b23c253a3e2a060fd197316", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d6d601c8a83284d6b23c253a3e2a060fd197316", "html_url": "https://github.com/rust-lang/rust/commit/4d6d601c8a83284d6b23c253a3e2a060fd197316"}, {"sha": "a4cb0b90c049fd8bc6a4a13edad69d34b98627f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4cb0b90c049fd8bc6a4a13edad69d34b98627f0", "html_url": "https://github.com/rust-lang/rust/commit/a4cb0b90c049fd8bc6a4a13edad69d34b98627f0"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "a091f06dd532cc14aaa5f4f75cae8c43264f8256", "filename": "library/std/src/os/windows/fs.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1ff84f09b29effb82184cb62b99a4c721375ccc4/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ff84f09b29effb82184cb62b99a4c721375ccc4/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Ffs.rs?ref=1ff84f09b29effb82184cb62b99a4c721375ccc4", "patch": "@@ -7,6 +7,7 @@\n use crate::fs::{self, Metadata, OpenOptions};\n use crate::io;\n use crate::path::Path;\n+use crate::sealed::Sealed;\n use crate::sys;\n use crate::sys_common::{AsInner, AsInnerMut};\n \n@@ -502,17 +503,20 @@ impl MetadataExt for Metadata {\n /// Windows-specific extensions to [`fs::FileType`].\n ///\n /// On Windows, a symbolic link knows whether it is a file or directory.\n-#[unstable(feature = \"windows_file_type_ext\", issue = \"none\")]\n-pub trait FileTypeExt {\n+#[stable(feature = \"windows_file_type_ext\", since = \"1.64.0\")]\n+pub trait FileTypeExt: Sealed {\n     /// Returns `true` if this file type is a symbolic link that is also a directory.\n-    #[unstable(feature = \"windows_file_type_ext\", issue = \"none\")]\n+    #[stable(feature = \"windows_file_type_ext\", since = \"1.64.0\")]\n     fn is_symlink_dir(&self) -> bool;\n     /// Returns `true` if this file type is a symbolic link that is also a file.\n-    #[unstable(feature = \"windows_file_type_ext\", issue = \"none\")]\n+    #[stable(feature = \"windows_file_type_ext\", since = \"1.64.0\")]\n     fn is_symlink_file(&self) -> bool;\n }\n \n-#[unstable(feature = \"windows_file_type_ext\", issue = \"none\")]\n+#[stable(feature = \"windows_file_type_ext\", since = \"1.64.0\")]\n+impl Sealed for fs::FileType {}\n+\n+#[stable(feature = \"windows_file_type_ext\", since = \"1.64.0\")]\n impl FileTypeExt for fs::FileType {\n     fn is_symlink_dir(&self) -> bool {\n         self.as_inner().is_symlink_dir()"}]}