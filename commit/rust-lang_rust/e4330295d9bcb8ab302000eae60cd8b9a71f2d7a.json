{"sha": "e4330295d9bcb8ab302000eae60cd8b9a71f2d7a", "node_id": "C_kwDOAAsO6NoAKGU0MzMwMjk1ZDliY2I4YWIzMDIwMDBlYWU2MGNkOGI5YTcxZjJkN2E", "commit": {"author": {"name": "Joshua Nelson", "email": "github@jyn.dev", "date": "2022-12-22T18:57:47Z"}, "committer": {"name": "Joshua Nelson", "email": "github@jyn.dev", "date": "2022-12-22T19:12:15Z"}, "message": "Give a more helpful error for \"trimmed_def_paths construted\"", "tree": {"sha": "2354120da7c1dfd4d9e84bf969bfee42b4d6c125", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2354120da7c1dfd4d9e84bf969bfee42b4d6c125"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4330295d9bcb8ab302000eae60cd8b9a71f2d7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4330295d9bcb8ab302000eae60cd8b9a71f2d7a", "html_url": "https://github.com/rust-lang/rust/commit/e4330295d9bcb8ab302000eae60cd8b9a71f2d7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4330295d9bcb8ab302000eae60cd8b9a71f2d7a/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d76a9df5d040e8dfcb23e01fc3847c628d833e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d76a9df5d040e8dfcb23e01fc3847c628d833e4", "html_url": "https://github.com/rust-lang/rust/commit/2d76a9df5d040e8dfcb23e01fc3847c628d833e4"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "6f2f8c26f6428054ced9352b9445e395a779dab3", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e4330295d9bcb8ab302000eae60cd8b9a71f2d7a/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/e4330295d9bcb8ab302000eae60cd8b9a71f2d7a/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=e4330295d9bcb8ab302000eae60cd8b9a71f2d7a", "patch": "@@ -4039,6 +4039,7 @@ dependencies = [\n  \"rustc_ast\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n+ \"rustc_error_messages\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n  \"rustc_graphviz\","}, {"sha": "0b351b7afc720ce802f276a0528875516c225f0c", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4330295d9bcb8ab302000eae60cd8b9a71f2d7a/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4330295d9bcb8ab302000eae60cd8b9a71f2d7a/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=e4330295d9bcb8ab302000eae60cd8b9a71f2d7a", "patch": "@@ -380,7 +380,7 @@ impl<S: Into<String>> From<S> for DiagnosticMessage {\n     }\n }\n \n-/// A workaround for \"good path\" ICEs when formatting types in disables lints.\n+/// A workaround for \"good path\" ICEs when formatting types in disabled lints.\n ///\n /// Delays formatting until `.into(): DiagnosticMessage` is used.\n pub struct DelayDm<F>(pub F);"}, {"sha": "543bd56a20c18e863b5aa714dc000b71c95a1fef", "filename": "compiler/rustc_middle/Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4330295d9bcb8ab302000eae60cd8b9a71f2d7a/compiler%2Frustc_middle%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e4330295d9bcb8ab302000eae60cd8b9a71f2d7a/compiler%2Frustc_middle%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2FCargo.toml?ref=e4330295d9bcb8ab302000eae60cd8b9a71f2d7a", "patch": "@@ -18,6 +18,8 @@ rustc_ast = { path = \"../rustc_ast\" }\n rustc_attr = { path = \"../rustc_attr\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n+# Used for intra-doc links\n+rustc_error_messages = { path = \"../rustc_error_messages\" }\n rustc_feature = { path = \"../rustc_feature\" }\n rustc_graphviz = { path = \"../rustc_graphviz\" }\n rustc_hir = { path = \"../rustc_hir\" }"}, {"sha": "c49e75d68ad32b3401efcfa533edcf6e94ba9933", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e4330295d9bcb8ab302000eae60cd8b9a71f2d7a/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4330295d9bcb8ab302000eae60cd8b9a71f2d7a/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=e4330295d9bcb8ab302000eae60cd8b9a71f2d7a", "patch": "@@ -2883,13 +2883,19 @@ fn for_each_def(tcx: TyCtxt<'_>, mut collect_fn: impl for<'b> FnMut(&'b Ident, N\n /// `std::vec::Vec` to just `Vec`, as long as there is no other `Vec` importable anywhere.\n ///\n /// The implementation uses similar import discovery logic to that of 'use' suggestions.\n+///\n+/// See also [`DelayDm`](rustc_error_messages::DelayDm) and [`with_no_trimmed_paths`].\n fn trimmed_def_paths(tcx: TyCtxt<'_>, (): ()) -> FxHashMap<DefId, Symbol> {\n     let mut map: FxHashMap<DefId, Symbol> = FxHashMap::default();\n \n     if let TrimmedDefPaths::GoodPath = tcx.sess.opts.trimmed_def_paths {\n+        // Trimming paths is expensive and not optimized, since we expect it to only be used for error reporting.\n+        //\n         // For good paths causing this bug, the `rustc_middle::ty::print::with_no_trimmed_paths`\n         // wrapper can be used to suppress this query, in exchange for full paths being formatted.\n-        tcx.sess.delay_good_path_bug(\"trimmed_def_paths constructed\");\n+        tcx.sess.delay_good_path_bug(\n+            \"trimmed_def_paths constructed but no error emitted; use `DelayDm` for lints or `with_no_trimmed_paths` for debugging\",\n+        );\n     }\n \n     let unique_symbols_rev: &mut FxHashMap<(Namespace, Symbol), Option<DefId>> ="}]}