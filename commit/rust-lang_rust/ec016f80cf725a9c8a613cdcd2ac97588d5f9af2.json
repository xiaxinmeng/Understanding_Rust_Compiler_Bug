{"sha": "ec016f80cf725a9c8a613cdcd2ac97588d5f9af2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMDE2ZjgwY2Y3MjVhOWM4YTYxM2NkY2QyYWM5NzU4OGQ1ZjlhZjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-10T14:26:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-10T14:26:13Z"}, "message": "Auto merge of #45170 - rust-lang:aphs-no-unsynchronised-llvm-err-global, r=alexcrichton\n\nBand-aid fix to stop race conditions in llvm errors\n\nThis is a big hammer, but should be effective at completely removing a\nfew issues, including inconsistent error messages and segfaults when\nLLVM workers race to report results\n\n`LLVM_THREAD_LOCAL` has been present in LLVM since 8 months before 3.7\n(the earliest supported LLVM version that Rust can use)\n\nMaybe fixes #43402 (third time lucky?)\n\nr? @alexcrichton\n\n------\n\nYou can see that in https://github.com/rust-lang/rust/blob/5f578dfad0dd5d43b28eff71a7e857d10c3f55fe/src/librustc_trans/back/write.rs#L75-L100 there's a small window where the static global error message (made thread local in this PR) could be altered by another thread.\n\nNote that we can't use `thread_local` because gcc 4.7 (permitted according to the readme) does not support it.\n\nMaybe ideally all the functions should be modified to not use a global, but this PR makes things deterministic at least. My only hesitation is whether errors are checked in different threads to where they occur, but I figure that's probably unlikely (and is less bad than racing code).\n\nAs an aside, segfault evidence before this patch when I was doing some debugging:\n```\n$ while grep 'No such file or directory' log2; do RUST_LOG=debug ./build/x86_64-unknown-linux-gnu/stage1/bin/rustc -o \"\" y.rs >log2 2>&1; done\nerror: could not write output to : No such file or directory\nerror: could not write output to : No such file or directory\nerror: could not write output to : No such file or directory\nerror: could not write output to : No such file or directory\nerror: could not write output to : No such file or directory\nerror: could not write output to : No such file or directory\nerror: could not write output to : No such file or directory\nSegmentation fault (core dumped)\nerror: could not write output to : No such file or directory\nerror: could not write output to : No such file or directory\n```", "tree": {"sha": "4f4e84981f557883337fdde6aa77ba2874bc3efa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f4e84981f557883337fdde6aa77ba2874bc3efa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec016f80cf725a9c8a613cdcd2ac97588d5f9af2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec016f80cf725a9c8a613cdcd2ac97588d5f9af2", "html_url": "https://github.com/rust-lang/rust/commit/ec016f80cf725a9c8a613cdcd2ac97588d5f9af2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec016f80cf725a9c8a613cdcd2ac97588d5f9af2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0217315bf23edee385a7042b5a23b3e7e376820c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0217315bf23edee385a7042b5a23b3e7e376820c", "html_url": "https://github.com/rust-lang/rust/commit/0217315bf23edee385a7042b5a23b3e7e376820c"}, {"sha": "8628d51c3b4c9a45e9066019f0e0853da7643794", "url": "https://api.github.com/repos/rust-lang/rust/commits/8628d51c3b4c9a45e9066019f0e0853da7643794", "html_url": "https://github.com/rust-lang/rust/commit/8628d51c3b4c9a45e9066019f0e0853da7643794"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "20ea8d70302205f1084b7745ef24475b86e8c2c4", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec016f80cf725a9c8a613cdcd2ac97588d5f9af2/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/ec016f80cf725a9c8a613cdcd2ac97588d5f9af2/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=ec016f80cf725a9c8a613cdcd2ac97588d5f9af2", "patch": "@@ -57,7 +57,7 @@ static AtomicOrdering fromRust(LLVMAtomicOrdering Ordering) {\n   llvm_unreachable(\"Invalid LLVMAtomicOrdering value!\");\n }\n \n-static char *LastError;\n+static LLVM_THREAD_LOCAL char *LastError;\n \n extern \"C\" LLVMMemoryBufferRef\n LLVMRustCreateMemoryBufferWithContentsOfFile(const char *Path) {"}]}