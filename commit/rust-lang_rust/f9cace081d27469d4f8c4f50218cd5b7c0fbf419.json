{"sha": "f9cace081d27469d4f8c4f50218cd5b7c0fbf419", "node_id": "C_kwDOAAsO6NoAKGY5Y2FjZTA4MWQyNzQ2OWQ0ZjhjNGY1MDIxOGNkNWI3YzBmYmY0MTk", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-10-25T00:46:23Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-10-25T00:52:35Z"}, "message": "rustdoc: parse self-closing tags and attributes in `invalid_html_tags`\n\nFixes #103460", "tree": {"sha": "58c4cfc10e2136cbc11bba798933f6b8339cc0d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58c4cfc10e2136cbc11bba798933f6b8339cc0d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9cace081d27469d4f8c4f50218cd5b7c0fbf419", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9cace081d27469d4f8c4f50218cd5b7c0fbf419", "html_url": "https://github.com/rust-lang/rust/commit/f9cace081d27469d4f8c4f50218cd5b7c0fbf419", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9cace081d27469d4f8c4f50218cd5b7c0fbf419/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "758f19645b8ebce61ea52d1f6672fd057bc8dbee", "url": "https://api.github.com/repos/rust-lang/rust/commits/758f19645b8ebce61ea52d1f6672fd057bc8dbee", "html_url": "https://github.com/rust-lang/rust/commit/758f19645b8ebce61ea52d1f6672fd057bc8dbee"}], "stats": {"total": 205, "additions": 204, "deletions": 1}, "files": [{"sha": "a89ed7c7ed4546082e8d407d784efe92f41396bd", "filename": "src/librustdoc/passes/html_tags.rs", "status": "modified", "additions": 54, "deletions": 1, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/f9cace081d27469d4f8c4f50218cd5b7c0fbf419/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9cace081d27469d4f8c4f50218cd5b7c0fbf419/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs?ref=f9cace081d27469d4f8c4f50218cd5b7c0fbf419", "patch": "@@ -184,7 +184,60 @@ fn extract_html_tag(\n                     }\n                     drop_tag(tags, tag_name, r, f);\n                 } else {\n-                    tags.push((tag_name, r));\n+                    let mut is_self_closing = false;\n+                    let mut quote_pos = None;\n+                    if c != '>' {\n+                        let mut quote = None;\n+                        let mut after_eq = false;\n+                        for (i, c) in text[pos..].char_indices() {\n+                            if !c.is_whitespace() {\n+                                if let Some(q) = quote {\n+                                    if c == q {\n+                                        quote = None;\n+                                        quote_pos = None;\n+                                        after_eq = false;\n+                                    }\n+                                } else if c == '>' {\n+                                    break;\n+                                } else if c == '/' && !after_eq {\n+                                    is_self_closing = true;\n+                                } else {\n+                                    if is_self_closing {\n+                                        is_self_closing = false;\n+                                    }\n+                                    if (c == '\"' || c == '\\'') && after_eq {\n+                                        quote = Some(c);\n+                                        quote_pos = Some(pos + i);\n+                                    } else if c == '=' {\n+                                        after_eq = true;\n+                                    }\n+                                }\n+                            } else if quote.is_none() {\n+                                after_eq = false;\n+                            }\n+                        }\n+                    }\n+                    if let Some(quote_pos) = quote_pos {\n+                        let qr = Range { start: quote_pos, end: quote_pos };\n+                        f(\n+                            &format!(\"unclosed quoted HTML attribute on tag `{}`\", tag_name),\n+                            &qr,\n+                            false,\n+                        );\n+                    }\n+                    if is_self_closing {\n+                        // https://html.spec.whatwg.org/#parse-error-non-void-html-element-start-tag-with-trailing-solidus\n+                        let valid = ALLOWED_UNCLOSED.contains(&&tag_name[..])\n+                            || tags.iter().take(pos + 1).any(|(at, _)| {\n+                                let at = at.to_lowercase();\n+                                at == \"svg\" || at == \"math\"\n+                            });\n+                        if !valid {\n+                            f(&format!(\"invalid self-closing HTML tag `{}`\", tag_name), &r, false);\n+                        }\n+                    } else {\n+                        tags.push((tag_name, r));\n+                    }\n                 }\n             }\n             break;"}, {"sha": "d973a53cbc7cea9d5cddfa83438d3f0bbf3435af", "filename": "src/test/rustdoc-ui/invalid-html-self-closing-tag.rs", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/f9cace081d27469d4f8c4f50218cd5b7c0fbf419/src%2Ftest%2Frustdoc-ui%2Finvalid-html-self-closing-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9cace081d27469d4f8c4f50218cd5b7c0fbf419/src%2Ftest%2Frustdoc-ui%2Finvalid-html-self-closing-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-html-self-closing-tag.rs?ref=f9cace081d27469d4f8c4f50218cd5b7c0fbf419", "patch": "@@ -0,0 +1,70 @@\n+#![deny(rustdoc::invalid_html_tags)]\n+\n+/// <p/>\n+//~^ ERROR invalid self-closing HTML tag `p`\n+pub struct A;\n+\n+/// <p style/>\n+//~^ ERROR invalid self-closing HTML tag `p`\n+pub struct B;\n+\n+/// <p style=\"\"/>\n+//~^ ERROR invalid self-closing HTML tag `p`\n+pub struct C;\n+\n+/// <p style=\"x\"/>\n+//~^ ERROR invalid self-closing HTML tag `p`\n+pub struct D;\n+\n+/// <p style=\"x/></p>\n+//~^ ERROR unclosed quoted HTML attribute\n+pub struct E;\n+\n+/// <p style='x/></p>\n+//~^ ERROR unclosed quoted HTML attribute\n+pub struct F;\n+\n+/// <p style=\"x/\"></p>\n+pub struct G;\n+\n+/// <p style=\"x/\"/>\n+//~^ ERROR invalid self-closing HTML tag `p`\n+pub struct H;\n+\n+/// <p / >\n+//~^ ERROR invalid self-closing HTML tag `p`\n+pub struct I;\n+\n+/// <br/>\n+pub struct J;\n+\n+/// <a href=/></a>\n+pub struct K;\n+\n+/// <a href=//></a>\n+pub struct L;\n+\n+/// <a href=\"/\"/>\n+//~^ ERROR invalid self-closing HTML tag `a`\n+pub struct M;\n+\n+/// <a href=x />\n+//~^ ERROR invalid self-closing HTML tag `a`\n+pub struct N;\n+\n+/// <a href= />\n+//~^ ERROR invalid self-closing HTML tag `a`\n+pub struct O;\n+\n+/// <a href=x/></a>\n+pub struct P;\n+\n+/// <svg><rect width=1 height=1 /></svg>\n+pub struct Q;\n+\n+/// <svg><rect width=1 height=/></svg>\n+//~^ ERROR unclosed HTML tag `rect`\n+pub struct R;\n+\n+/// <svg / q>\n+pub struct S;"}, {"sha": "e45edfb43ff8e7f1c481014a85e5de3a0447a461", "filename": "src/test/rustdoc-ui/invalid-html-self-closing-tag.stderr", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/f9cace081d27469d4f8c4f50218cd5b7c0fbf419/src%2Ftest%2Frustdoc-ui%2Finvalid-html-self-closing-tag.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f9cace081d27469d4f8c4f50218cd5b7c0fbf419/src%2Ftest%2Frustdoc-ui%2Finvalid-html-self-closing-tag.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-html-self-closing-tag.stderr?ref=f9cace081d27469d4f8c4f50218cd5b7c0fbf419", "patch": "@@ -0,0 +1,80 @@\n+error: invalid self-closing HTML tag `p`\n+  --> $DIR/invalid-html-self-closing-tag.rs:3:5\n+   |\n+LL | /// <p/>\n+   |     ^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/invalid-html-self-closing-tag.rs:1:9\n+   |\n+LL | #![deny(rustdoc::invalid_html_tags)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: invalid self-closing HTML tag `p`\n+  --> $DIR/invalid-html-self-closing-tag.rs:7:5\n+   |\n+LL | /// <p style/>\n+   |     ^^\n+\n+error: invalid self-closing HTML tag `p`\n+  --> $DIR/invalid-html-self-closing-tag.rs:11:5\n+   |\n+LL | /// <p style=\"\"/>\n+   |     ^^\n+\n+error: invalid self-closing HTML tag `p`\n+  --> $DIR/invalid-html-self-closing-tag.rs:15:5\n+   |\n+LL | /// <p style=\"x\"/>\n+   |     ^^\n+\n+error: unclosed quoted HTML attribute on tag `p`\n+  --> $DIR/invalid-html-self-closing-tag.rs:19:14\n+   |\n+LL | /// <p style=\"x/></p>\n+   |              ^\n+\n+error: unclosed quoted HTML attribute on tag `p`\n+  --> $DIR/invalid-html-self-closing-tag.rs:23:14\n+   |\n+LL | /// <p style='x/></p>\n+   |              ^\n+\n+error: invalid self-closing HTML tag `p`\n+  --> $DIR/invalid-html-self-closing-tag.rs:30:5\n+   |\n+LL | /// <p style=\"x/\"/>\n+   |     ^^\n+\n+error: invalid self-closing HTML tag `p`\n+  --> $DIR/invalid-html-self-closing-tag.rs:34:5\n+   |\n+LL | /// <p / >\n+   |     ^^\n+\n+error: invalid self-closing HTML tag `a`\n+  --> $DIR/invalid-html-self-closing-tag.rs:47:5\n+   |\n+LL | /// <a href=\"/\"/>\n+   |     ^^\n+\n+error: invalid self-closing HTML tag `a`\n+  --> $DIR/invalid-html-self-closing-tag.rs:51:5\n+   |\n+LL | /// <a href=x />\n+   |     ^^\n+\n+error: invalid self-closing HTML tag `a`\n+  --> $DIR/invalid-html-self-closing-tag.rs:55:5\n+   |\n+LL | /// <a href= />\n+   |     ^^\n+\n+error: unclosed HTML tag `rect`\n+  --> $DIR/invalid-html-self-closing-tag.rs:65:10\n+   |\n+LL | /// <svg><rect width=1 height=/></svg>\n+   |          ^^^^^\n+\n+error: aborting due to 12 previous errors\n+"}]}