{"sha": "6d1d9a0236babce7ed748dfb221a2240fcee42b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkMWQ5YTAyMzZiYWJjZTdlZDc0OGRmYjIyMWEyMjQwZmNlZTQyYjQ=", "commit": {"author": {"name": "Tomoki Aonuma", "email": "uasi@99cm.org", "date": "2012-02-14T14:37:52Z"}, "committer": {"name": "Tomoki Aonuma", "email": "uasi@99cm.org", "date": "2012-02-14T19:34:02Z"}, "message": "Fix typos in the reference manual", "tree": {"sha": "8fc9d5479bf50e9207fc93a89171b4a10db3c7a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fc9d5479bf50e9207fc93a89171b4a10db3c7a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d1d9a0236babce7ed748dfb221a2240fcee42b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d1d9a0236babce7ed748dfb221a2240fcee42b4", "html_url": "https://github.com/rust-lang/rust/commit/6d1d9a0236babce7ed748dfb221a2240fcee42b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d1d9a0236babce7ed748dfb221a2240fcee42b4/comments", "author": {"login": "uasi", "id": 22321, "node_id": "MDQ6VXNlcjIyMzIx", "avatar_url": "https://avatars.githubusercontent.com/u/22321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uasi", "html_url": "https://github.com/uasi", "followers_url": "https://api.github.com/users/uasi/followers", "following_url": "https://api.github.com/users/uasi/following{/other_user}", "gists_url": "https://api.github.com/users/uasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/uasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uasi/subscriptions", "organizations_url": "https://api.github.com/users/uasi/orgs", "repos_url": "https://api.github.com/users/uasi/repos", "events_url": "https://api.github.com/users/uasi/events{/privacy}", "received_events_url": "https://api.github.com/users/uasi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "uasi", "id": 22321, "node_id": "MDQ6VXNlcjIyMzIx", "avatar_url": "https://avatars.githubusercontent.com/u/22321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uasi", "html_url": "https://github.com/uasi", "followers_url": "https://api.github.com/users/uasi/followers", "following_url": "https://api.github.com/users/uasi/following{/other_user}", "gists_url": "https://api.github.com/users/uasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/uasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uasi/subscriptions", "organizations_url": "https://api.github.com/users/uasi/orgs", "repos_url": "https://api.github.com/users/uasi/repos", "events_url": "https://api.github.com/users/uasi/events{/privacy}", "received_events_url": "https://api.github.com/users/uasi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5e7f0d1134c41757901ccb9e944974042ee3d93", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5e7f0d1134c41757901ccb9e944974042ee3d93", "html_url": "https://github.com/rust-lang/rust/commit/d5e7f0d1134c41757901ccb9e944974042ee3d93"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "74b7a1eb3ff9707357a01d4a4686cdbf135b7e44", "filename": "doc/rust.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6d1d9a0236babce7ed748dfb221a2240fcee42b4/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/6d1d9a0236babce7ed748dfb221a2240fcee42b4/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=6d1d9a0236babce7ed748dfb221a2240fcee42b4", "patch": "@@ -1032,7 +1032,7 @@ accessed through the components `x` and `y`, and laid out in memory with the\n An _enumeration item_ simultaneously declares a new nominal\n [enumerated type](#enumerated-types) as well as a set of *constructors* that\n can be used to create or pattern-match values of the corresponding enumerated\n-type. Note that `enum` previously was refered to as a `tag`, however this\n+type. Note that `enum` previously was referred to as a `tag`, however this\n definition has been deprecated. While `tag` is no longer used, the two are \n synonymous.\n \n@@ -1622,7 +1622,7 @@ fn avg(v: [float]) -> float {\n ~~~~\n \n A cast is a *trivial cast* iff the type of the casted expression and the\n-target type are identical after replacing all occurences of `int`, `uint`,\n+target type are identical after replacing all occurrences of `int`, `uint`,\n `float` with their machine type equivalents of the target architecture in both\n types.\n \n@@ -3131,7 +3131,7 @@ state. In this state it executes the statements of its entry function, and any\n functions called by the entry function.\n \n A task may transition from the *running* state to the *blocked* state any time\n-it makes a blocking recieve call on a port, or attempts a rate-limited\n+it makes a blocking receive call on a port, or attempts a rate-limited\n blocking send on a channel. When the communication expression can be completed\n -- when a message arrives at a sender, or a queue drains sufficiently to\n complete a rate-limited send -- then the blocked task will unblock and\n@@ -3302,7 +3302,7 @@ As an example, to see all the logs generated by the compiler, you would set\n you would set it to `rustc::metadata::creader`. To see just error logging\n use `rustc=0`.\n \n-Note that when compiling either `.rs` or `.rc` files that don't specifiy a\n+Note that when compiling either `.rs` or `.rc` files that don't specify a\n crate name the crate is given a default name that matches the source file,\n with the extension removed. In that case, to turn on logging for a program\n compiled from, e.g. `helloworld.rs`, `RUST_LOG` should be set to `helloworld`.\n@@ -3390,7 +3390,7 @@ have come and gone during the course of Rust's development:\n \n * The Newsqueak (1988), Alef (1995), and Limbo (1996) family. These\n   languages were developed by Rob Pike, Phil Winterbottom, Sean Dorward and\n-  others in their group at Bell labs Computing Sciences Reserch Center\n+  others in their group at Bell labs Computing Sciences Research Center\n   (Murray Hill, NJ, USA).\n \n * The Napier (1985) and Napier88 (1988) family. These languages were"}]}