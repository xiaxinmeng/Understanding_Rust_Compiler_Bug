{"sha": "a552b5b04bcd546d788798a3bd94ded2dbba048e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NTJiNWIwNGJjZDU0NmQ3ODg3OThhM2JkOTRkZWQyZGJiYTA0OGU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-19T22:18:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-19T22:18:58Z"}, "message": "Rollup merge of #85287 - eggyal:expose-test-concurrent, r=m-ou-se\n\nExpose `Concurrent` (private type in public i'face)\n\n#53410 introduced experimental support for custom test frameworks.\n\nSuch frameworks may wish to build upon `library/test` by calling into its publicly exposed API (which I entirely understand is wholly unstable).  However, any that wish to call `test::run_test` cannot currently do so because `test::options::Concurrent` (the type of its `concurrent` parameter) is not publicly exposed.", "tree": {"sha": "f27bd1f7928774426b7c36bfef1c5614808173b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f27bd1f7928774426b7c36bfef1c5614808173b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a552b5b04bcd546d788798a3bd94ded2dbba048e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgpY7UCRBK7hj4Ov3rIwAA/kYIAHJZwdDu9hlCOpEWVbtgEks+\nowWivtqpoMifBZVA0iSNoQYiQBCESvPRSX0PuU9GOZg2TT563lpXZqLEs8y723mx\nNTwbUOQLg+Ur1bkIqh0zq1XvaYeLIX7eB8S3Go3FGefPa+1IQo+xjDTpEjvrJHJ+\nOtgMF3DLSFjtcaNPK1QSC+o6jEare3/wuBQMw1TowV0AxqCXTGCUeQ9tjoZaxuEP\nWhVtS2s82b6RGCNIRa7SNR1iXyu2pYYqDq1GM3rwUeihD15s+v3GUtjGJipVt8Ao\nEu8RO577dhL2Vxn5sp9/7UI2h0U5c3mhhsnoiARaLoI0TZctr1b4xLhf56Bnyew=\n=3wHO\n-----END PGP SIGNATURE-----\n", "payload": "tree f27bd1f7928774426b7c36bfef1c5614808173b1\nparent 42174308a277f3d3f774abbcf42f58de0288d272\nparent 67e8f1230745785bc08ec4d3d882f61b1d3516af\nauthor Ralf Jung <post@ralfj.de> 1621462738 +0200\ncommitter GitHub <noreply@github.com> 1621462738 +0200\n\nRollup merge of #85287 - eggyal:expose-test-concurrent, r=m-ou-se\n\nExpose `Concurrent` (private type in public i'face)\n\n#53410 introduced experimental support for custom test frameworks.\n\nSuch frameworks may wish to build upon `library/test` by calling into its publicly exposed API (which I entirely understand is wholly unstable).  However, any that wish to call `test::run_test` cannot currently do so because `test::options::Concurrent` (the type of its `concurrent` parameter) is not publicly exposed.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a552b5b04bcd546d788798a3bd94ded2dbba048e", "html_url": "https://github.com/rust-lang/rust/commit/a552b5b04bcd546d788798a3bd94ded2dbba048e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a552b5b04bcd546d788798a3bd94ded2dbba048e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42174308a277f3d3f774abbcf42f58de0288d272", "url": "https://api.github.com/repos/rust-lang/rust/commits/42174308a277f3d3f774abbcf42f58de0288d272", "html_url": "https://github.com/rust-lang/rust/commit/42174308a277f3d3f774abbcf42f58de0288d272"}, {"sha": "67e8f1230745785bc08ec4d3d882f61b1d3516af", "url": "https://api.github.com/repos/rust-lang/rust/commits/67e8f1230745785bc08ec4d3d882f61b1d3516af", "html_url": "https://github.com/rust-lang/rust/commit/67e8f1230745785bc08ec4d3d882f61b1d3516af"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "bda5ed888d7e1dc091328e77a16b213cdc99d1ac", "filename": "library/test/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a552b5b04bcd546d788798a3bd94ded2dbba048e/library%2Ftest%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a552b5b04bcd546d788798a3bd94ded2dbba048e/library%2Ftest%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Flib.rs?ref=a552b5b04bcd546d788798a3bd94ded2dbba048e", "patch": "@@ -49,7 +49,7 @@ pub mod test {\n         cli::{parse_opts, TestOpts},\n         filter_tests,\n         helpers::metrics::{Metric, MetricMap},\n-        options::{Options, RunIgnored, RunStrategy, ShouldPanic},\n+        options::{Concurrent, Options, RunIgnored, RunStrategy, ShouldPanic},\n         run_test, test_main, test_main_static,\n         test_result::{TestResult, TrFailed, TrFailedMsg, TrIgnored, TrOk},\n         time::{TestExecTime, TestTimeOptions},"}]}