{"sha": "ebb7f642e46f2f95ab9c1c82e5a7640876bf2776", "node_id": "C_kwDOAAsO6NoAKGViYjdmNjQyZTQ2ZjJmOTVhYjljMWM4MmU1YTc2NDA4NzZiZjI3NzY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-06-02T06:07:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-02T06:07:39Z"}, "message": "Rollup merge of #112193 - clubby789:offset-of-tuple-sized, r=est31\n\nCheck tuple elements are `Sized` in `offset_of`\n\nFixes #112186", "tree": {"sha": "dd77b3f79eb8f9de34e5001badd099c4967a1246", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd77b3f79eb8f9de34e5001badd099c4967a1246"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebb7f642e46f2f95ab9c1c82e5a7640876bf2776", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkeYcrCRBK7hj4Ov3rIwAA/K4IAFhaECtMUS8miP1ZLF4LJzeh\nN8TrMr9+KyZfjyV11TMyQA6yd9OKUxmQxd28omuc0zN2XlZcUMWhFTMkCF1hLt+P\n0apXDyn7coVyWodU2tsy/pce6om7/2Qgp7MZvS9ZH9Y4UIX4WXqZWY+5C923Bq06\nZDbnmKoiGgHYH25HWzWpu5sw2Nldl43DwyP3/cGjRmVYc1JewdMQhAD9+LF7Lby2\n9oP9ZNtd6I3sel3sLSV8HD5Cw1FX59IT5gRCLm0UEOajd14lgIOLLwleZ/OBWjO7\nKcHmNE40gXj55/6I3SCUFSOmTskW8TKPaZ+RedKxR9wmV0wpip78Zme2ed3ukU0=\n=o3Jr\n-----END PGP SIGNATURE-----\n", "payload": "tree dd77b3f79eb8f9de34e5001badd099c4967a1246\nparent 22860464129e8a3454015ed0d689ff9e69db106a\nparent d722f27684f30e5ada53309608b5ca308ca2e0ce\nauthor Michael Goulet <michael@errs.io> 1685686059 -0700\ncommitter GitHub <noreply@github.com> 1685686059 -0700\n\nRollup merge of #112193 - clubby789:offset-of-tuple-sized, r=est31\n\nCheck tuple elements are `Sized` in `offset_of`\n\nFixes #112186\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebb7f642e46f2f95ab9c1c82e5a7640876bf2776", "html_url": "https://github.com/rust-lang/rust/commit/ebb7f642e46f2f95ab9c1c82e5a7640876bf2776", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebb7f642e46f2f95ab9c1c82e5a7640876bf2776/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22860464129e8a3454015ed0d689ff9e69db106a", "url": "https://api.github.com/repos/rust-lang/rust/commits/22860464129e8a3454015ed0d689ff9e69db106a", "html_url": "https://github.com/rust-lang/rust/commit/22860464129e8a3454015ed0d689ff9e69db106a"}, {"sha": "d722f27684f30e5ada53309608b5ca308ca2e0ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/d722f27684f30e5ada53309608b5ca308ca2e0ce", "html_url": "https://github.com/rust-lang/rust/commit/d722f27684f30e5ada53309608b5ca308ca2e0ce"}], "stats": {"total": 90, "additions": 75, "deletions": 15}, "files": [{"sha": "5e10add013b054d398b52bb4131e2edfc9e3512c", "filename": "compiler/rustc_hir_typeck/src/expr.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ebb7f642e46f2f95ab9c1c82e5a7640876bf2776/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebb7f642e46f2f95ab9c1c82e5a7640876bf2776/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs?ref=ebb7f642e46f2f95ab9c1c82e5a7640876bf2776", "patch": "@@ -3117,16 +3117,17 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     }\n                 }\n                 ty::Tuple(tys) => {\n-                    let fstr = field.as_str();\n-\n-                    if let Ok(index) = fstr.parse::<usize>() {\n-                        if fstr == index.to_string() {\n-                            if let Some(&field_ty) = tys.get(index) {\n-                                field_indices.push(index.into());\n-                                current_container = field_ty;\n+                    if let Ok(index) = field.as_str().parse::<usize>()\n+                        && field.name == sym::integer(index)\n+                    {\n+                        for ty in tys.iter().take(index + 1) {\n+                            self.require_type_is_sized(ty, expr.span, traits::MiscObligation);\n+                        }\n+                        if let Some(&field_ty) = tys.get(index) {\n+                            field_indices.push(index.into());\n+                            current_container = field_ty;\n \n-                                continue;\n-                            }\n+                            continue;\n                         }\n                     }\n                 }"}, {"sha": "e393b159e64d5e44b7537cddd2820d0971cab11a", "filename": "tests/ui/offset-of/offset-of-dst-field.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ebb7f642e46f2f95ab9c1c82e5a7640876bf2776/tests%2Fui%2Foffset-of%2Foffset-of-dst-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebb7f642e46f2f95ab9c1c82e5a7640876bf2776/tests%2Fui%2Foffset-of%2Foffset-of-dst-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foffset-of%2Foffset-of-dst-field.rs?ref=ebb7f642e46f2f95ab9c1c82e5a7640876bf2776", "patch": "@@ -36,6 +36,8 @@ fn main() {\n     offset_of!(Alpha, z); //~ ERROR the size for values of type\n     offset_of!(Beta, z); //~ ERROR the size for values of type\n     offset_of!(Gamma, z); //~ ERROR the size for values of type\n+    offset_of!((u8, dyn Trait), 0); // ok\n+    offset_of!((u8, dyn Trait), 1); //~ ERROR the size for values of type\n }\n \n fn delta() {"}, {"sha": "4eaceaa93581774a0b118e31eda11c7823870bc9", "filename": "tests/ui/offset-of/offset-of-dst-field.stderr", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ebb7f642e46f2f95ab9c1c82e5a7640876bf2776/tests%2Fui%2Foffset-of%2Foffset-of-dst-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ebb7f642e46f2f95ab9c1c82e5a7640876bf2776/tests%2Fui%2Foffset-of%2Foffset-of-dst-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foffset-of%2Foffset-of-dst-field.stderr?ref=ebb7f642e46f2f95ab9c1c82e5a7640876bf2776", "patch": "@@ -25,8 +25,17 @@ LL |     offset_of!(Gamma, z);\n    = help: the trait `Sized` is not implemented for `Extern`\n    = note: this error originates in the macro `offset_of` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n+error[E0277]: the size for values of type `dyn Trait` cannot be known at compilation time\n+  --> $DIR/offset-of-dst-field.rs:40:5\n+   |\n+LL |     offset_of!((u8, dyn Trait), 1);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `dyn Trait`\n+   = note: this error originates in the macro `offset_of` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n error[E0277]: the size for values of type `Extern` cannot be known at compilation time\n-  --> $DIR/offset-of-dst-field.rs:43:5\n+  --> $DIR/offset-of-dst-field.rs:45:5\n    |\n LL |     offset_of!(Delta<Extern>, z);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n@@ -35,7 +44,7 @@ LL |     offset_of!(Delta<Extern>, z);\n    = note: this error originates in the macro `offset_of` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0277]: the size for values of type `dyn Trait` cannot be known at compilation time\n-  --> $DIR/offset-of-dst-field.rs:44:5\n+  --> $DIR/offset-of-dst-field.rs:46:5\n    |\n LL |     offset_of!(Delta<dyn Trait>, z);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n@@ -44,7 +53,7 @@ LL |     offset_of!(Delta<dyn Trait>, z);\n    = note: this error originates in the macro `offset_of` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n-  --> $DIR/offset-of-dst-field.rs:42:5\n+  --> $DIR/offset-of-dst-field.rs:44:5\n    |\n LL |     offset_of!(Delta<Alpha>, z);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n@@ -58,7 +67,7 @@ LL | struct Alpha {\n    = note: this error originates in the macro `offset_of` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0277]: the size for values of type `T` cannot be known at compilation time\n-  --> $DIR/offset-of-dst-field.rs:48:5\n+  --> $DIR/offset-of-dst-field.rs:50:5\n    |\n LL | fn generic_with_maybe_sized<T: ?Sized>() -> usize {\n    |                             - this type parameter needs to be `std::marker::Sized`\n@@ -72,6 +81,6 @@ LL - fn generic_with_maybe_sized<T: ?Sized>() -> usize {\n LL + fn generic_with_maybe_sized<T>() -> usize {\n    |\n \n-error: aborting due to 7 previous errors\n+error: aborting due to 8 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "4077538b77f270a8436f430912866b00cd6bf7b9", "filename": "tests/ui/offset-of/offset-of-tuple.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ebb7f642e46f2f95ab9c1c82e5a7640876bf2776/tests%2Fui%2Foffset-of%2Foffset-of-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebb7f642e46f2f95ab9c1c82e5a7640876bf2776/tests%2Fui%2Foffset-of%2Foffset-of-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foffset-of%2Foffset-of-tuple.rs?ref=ebb7f642e46f2f95ab9c1c82e5a7640876bf2776", "patch": "@@ -0,0 +1,10 @@\n+#![feature(offset_of)]\n+#![feature(builtin_syntax)]\n+\n+fn main() {\n+    core::mem::offset_of!((u8, u8), _0); //~ ERROR no field `_0`\n+    core::mem::offset_of!((u8, u8), +1); //~ ERROR no rules expected\n+    core::mem::offset_of!((u8, u8), -1); //~ ERROR no rules expected\n+    builtin # offset_of((u8, u8), _0); //~ ERROR no field `_0`\n+    builtin # offset_of((u8, u8), +1); //~ ERROR expected identifier\n+}"}, {"sha": "cc9ce0f34550c98ca4aacfe3a15de553c43c0809", "filename": "tests/ui/offset-of/offset-of-tuple.stderr", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/ebb7f642e46f2f95ab9c1c82e5a7640876bf2776/tests%2Fui%2Foffset-of%2Foffset-of-tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ebb7f642e46f2f95ab9c1c82e5a7640876bf2776/tests%2Fui%2Foffset-of%2Foffset-of-tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foffset-of%2Foffset-of-tuple.stderr?ref=ebb7f642e46f2f95ab9c1c82e5a7640876bf2776", "patch": "@@ -0,0 +1,37 @@\n+error: expected identifier, found `+`\n+  --> $DIR/offset-of-tuple.rs:9:35\n+   |\n+LL |     builtin # offset_of((u8, u8), +1);\n+   |                                   ^ expected identifier\n+\n+error: no rules expected the token `1`\n+  --> $DIR/offset-of-tuple.rs:6:38\n+   |\n+LL |     core::mem::offset_of!((u8, u8), +1);\n+   |                                      ^ no rules expected this token in macro call\n+   |\n+   = note: while trying to match sequence start\n+\n+error: no rules expected the token `1`\n+  --> $DIR/offset-of-tuple.rs:7:38\n+   |\n+LL |     core::mem::offset_of!((u8, u8), -1);\n+   |                                      ^ no rules expected this token in macro call\n+   |\n+   = note: while trying to match sequence start\n+\n+error[E0609]: no field `_0` on type `(u8, u8)`\n+  --> $DIR/offset-of-tuple.rs:5:37\n+   |\n+LL |     core::mem::offset_of!((u8, u8), _0);\n+   |                                     ^^\n+\n+error[E0609]: no field `_0` on type `(u8, u8)`\n+  --> $DIR/offset-of-tuple.rs:8:35\n+   |\n+LL |     builtin # offset_of((u8, u8), _0);\n+   |                                   ^^\n+\n+error: aborting due to 5 previous errors\n+\n+For more information about this error, try `rustc --explain E0609`."}, {"sha": "49c8328da5c553806dc749a1835e01600294ac9b", "filename": "tests/ui/offset-of/offset-of-unsized.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ebb7f642e46f2f95ab9c1c82e5a7640876bf2776/tests%2Fui%2Foffset-of%2Foffset-of-unsized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebb7f642e46f2f95ab9c1c82e5a7640876bf2776/tests%2Fui%2Foffset-of%2Foffset-of-unsized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foffset-of%2Foffset-of-unsized.rs?ref=ebb7f642e46f2f95ab9c1c82e5a7640876bf2776", "patch": "@@ -1,5 +1,6 @@\n // build-pass\n-// regression test for #112051\n+// regression test for #112051, not in `offset-of-dst` as the issue is in codegen,\n+// and isn't triggered in the presence of typeck errors\n \n #![feature(offset_of)]\n "}]}