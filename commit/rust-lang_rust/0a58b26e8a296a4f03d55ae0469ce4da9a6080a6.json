{"sha": "0a58b26e8a296a4f03d55ae0469ce4da9a6080a6", "node_id": "C_kwDOAAsO6NoAKDBhNThiMjZlOGEyOTZhNGYwM2Q1NWFlMDQ2OWNlNGRhOWE2MDgwYTY", "commit": {"author": {"name": "nidnogg", "email": "henriquevt98@gmail.com", "date": "2022-08-21T16:08:14Z"}, "committer": {"name": "nidnogg", "email": "henriquevt98@gmail.com", "date": "2022-08-22T02:22:55Z"}, "message": "Hotfix ftl err name, added check for err.code in create_feature_err", "tree": {"sha": "4cc8ea375c9fa92726c63fdb66645f634012b3de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4cc8ea375c9fa92726c63fdb66645f634012b3de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a58b26e8a296a4f03d55ae0469ce4da9a6080a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a58b26e8a296a4f03d55ae0469ce4da9a6080a6", "html_url": "https://github.com/rust-lang/rust/commit/0a58b26e8a296a4f03d55ae0469ce4da9a6080a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a58b26e8a296a4f03d55ae0469ce4da9a6080a6/comments", "author": {"login": "nidnogg", "id": 17261185, "node_id": "MDQ6VXNlcjE3MjYxMTg1", "avatar_url": "https://avatars.githubusercontent.com/u/17261185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nidnogg", "html_url": "https://github.com/nidnogg", "followers_url": "https://api.github.com/users/nidnogg/followers", "following_url": "https://api.github.com/users/nidnogg/following{/other_user}", "gists_url": "https://api.github.com/users/nidnogg/gists{/gist_id}", "starred_url": "https://api.github.com/users/nidnogg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nidnogg/subscriptions", "organizations_url": "https://api.github.com/users/nidnogg/orgs", "repos_url": "https://api.github.com/users/nidnogg/repos", "events_url": "https://api.github.com/users/nidnogg/events{/privacy}", "received_events_url": "https://api.github.com/users/nidnogg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nidnogg", "id": 17261185, "node_id": "MDQ6VXNlcjE3MjYxMTg1", "avatar_url": "https://avatars.githubusercontent.com/u/17261185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nidnogg", "html_url": "https://github.com/nidnogg", "followers_url": "https://api.github.com/users/nidnogg/followers", "following_url": "https://api.github.com/users/nidnogg/following{/other_user}", "gists_url": "https://api.github.com/users/nidnogg/gists{/gist_id}", "starred_url": "https://api.github.com/users/nidnogg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nidnogg/subscriptions", "organizations_url": "https://api.github.com/users/nidnogg/orgs", "repos_url": "https://api.github.com/users/nidnogg/repos", "events_url": "https://api.github.com/users/nidnogg/events{/privacy}", "received_events_url": "https://api.github.com/users/nidnogg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c82845b3ac583377b871bf01dc07ec513c466fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c82845b3ac583377b871bf01dc07ec513c466fe", "html_url": "https://github.com/rust-lang/rust/commit/4c82845b3ac583377b871bf01dc07ec513c466fe"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "d0af304f109f583d4373e20e3e54d012bf9f6e74", "filename": "compiler/rustc_const_eval/src/errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a58b26e8a296a4f03d55ae0469ce4da9a6080a6/compiler%2Frustc_const_eval%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a58b26e8a296a4f03d55ae0469ce4da9a6080a6/compiler%2Frustc_const_eval%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ferrors.rs?ref=0a58b26e8a296a4f03d55ae0469ce4da9a6080a6", "patch": "@@ -89,7 +89,7 @@ pub(crate) struct TransientMutBorrowErrRaw {\n }\n \n #[derive(SessionDiagnostic)]\n-#[error(const_eval::const_evaL_max_num_nodes_in_const_err)]\n+#[error(const_eval::max_num_nodes_in_const)]\n pub(crate) struct MaxNumNodesInConstErr {\n     #[primary_span]\n     pub span: Span,"}, {"sha": "8a5e1a7a957093b2faef28e5d1025dac021a31c5", "filename": "compiler/rustc_error_messages/locales/en-US/const_eval.ftl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a58b26e8a296a4f03d55ae0469ce4da9a6080a6/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fconst_eval.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/0a58b26e8a296a4f03d55ae0469ce4da9a6080a6/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fconst_eval.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fconst_eval.ftl?ref=0a58b26e8a296a4f03d55ae0469ce4da9a6080a6", "patch": "@@ -30,7 +30,7 @@ const_eval_transient_mut_borrow = mutable references are not allowed in {$kind}s\n \n const_eval_transient_mut_borrow_raw = raw mutable references are not allowed in {$kind}s\n \n-const_evaL_max_num_nodes_in_const_err = maximum number of nodes exceeded in constant {$s}\n+const_eval_max_num_nodes_in_const = maximum number of nodes exceeded in constant {$s}\n \n const_eval_unallowed_fn_pointer_call = function pointer calls are not allowed in {$kind}s\n "}, {"sha": "edb187ec3f7c530b171cda73ea9aaef53667a864", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a58b26e8a296a4f03d55ae0469ce4da9a6080a6/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a58b26e8a296a4f03d55ae0469ce4da9a6080a6/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=0a58b26e8a296a4f03d55ae0469ce4da9a6080a6", "patch": "@@ -467,7 +467,9 @@ impl Session {\n         feature: Symbol,\n     ) -> DiagnosticBuilder<'a, ErrorGuaranteed> {\n         let mut err = self.parse_sess.create_err(err);\n-        err.code = std::option::Option::Some(error_code!(E0658));\n+        if err.code.is_none() {\n+            err.code = std::option::Option::Some(error_code!(E0658));\n+        }\n         add_feature_diagnostics(&mut err, &self.parse_sess, feature);\n         err\n     }"}]}