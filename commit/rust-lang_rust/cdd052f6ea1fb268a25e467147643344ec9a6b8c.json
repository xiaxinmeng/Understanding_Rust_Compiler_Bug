{"sha": "cdd052f6ea1fb268a25e467147643344ec9a6b8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkZDA1MmY2ZWExZmIyNjhhMjVlNDY3MTQ3NjQzMzQ0ZWM5YTZiOGM=", "commit": {"author": {"name": "Damian Gryski", "email": "damian@gryski.com", "date": "2012-07-26T21:47:51Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-07-27T00:05:13Z"}, "message": "core::io::writer : add get_type() method\n\n   The get_type() method can hint to users what kind of item might be\n   under the hood.", "tree": {"sha": "91a019db82a7b18a98e72a6a04e87aa040e6004f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91a019db82a7b18a98e72a6a04e87aa040e6004f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdd052f6ea1fb268a25e467147643344ec9a6b8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdd052f6ea1fb268a25e467147643344ec9a6b8c", "html_url": "https://github.com/rust-lang/rust/commit/cdd052f6ea1fb268a25e467147643344ec9a6b8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdd052f6ea1fb268a25e467147643344ec9a6b8c/comments", "author": {"login": "dgryski", "id": 970862, "node_id": "MDQ6VXNlcjk3MDg2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/970862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgryski", "html_url": "https://github.com/dgryski", "followers_url": "https://api.github.com/users/dgryski/followers", "following_url": "https://api.github.com/users/dgryski/following{/other_user}", "gists_url": "https://api.github.com/users/dgryski/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgryski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgryski/subscriptions", "organizations_url": "https://api.github.com/users/dgryski/orgs", "repos_url": "https://api.github.com/users/dgryski/repos", "events_url": "https://api.github.com/users/dgryski/events{/privacy}", "received_events_url": "https://api.github.com/users/dgryski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "872ef0f3124eaca8e0c67095c4117c93922b670d", "url": "https://api.github.com/repos/rust-lang/rust/commits/872ef0f3124eaca8e0c67095c4117c93922b670d", "html_url": "https://github.com/rust-lang/rust/commit/872ef0f3124eaca8e0c67095c4117c93922b670d"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "8485818e2d6064f217c516efe6a1ab0f0caa5f5f", "filename": "src/libcore/io.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/cdd052f6ea1fb268a25e467147643344ec9a6b8c/src%2Flibcore%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdd052f6ea1fb268a25e467147643344ec9a6b8c/src%2Flibcore%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fio.rs?ref=cdd052f6ea1fb268a25e467147643344ec9a6b8c", "patch": "@@ -330,20 +330,25 @@ fn with_str_reader<T>(s: ~str, f: fn(reader) -> T) -> T {\n // Writing\n enum fileflag { append, create, truncate, no_flag, }\n \n+// What type of writer are we?\n+enum writer_type { screen, file }\n+\n // FIXME (#2004): Seekable really should be orthogonal.\n // FIXME (#2004): eventually u64\n iface writer {\n     fn write(v: &[const u8]);\n     fn seek(int, seek_style);\n     fn tell() -> uint;\n     fn flush() -> int;\n+    fn get_type() -> writer_type;\n }\n \n impl <T: writer, C> of writer for {base: T, cleanup: C} {\n     fn write(bs: &[const u8]) { self.base.write(bs); }\n     fn seek(off: int, style: seek_style) { self.base.seek(off, style); }\n     fn tell() -> uint { self.base.tell() }\n     fn flush() -> int { self.base.flush() }\n+    fn get_type() -> writer_type { file }\n }\n \n impl of writer for *libc::FILE {\n@@ -364,6 +369,13 @@ impl of writer for *libc::FILE {\n     }\n     fn tell() -> uint { libc::ftell(self) as uint }\n     fn flush() -> int { libc::fflush(self) as int }\n+    fn get_type() -> writer_type {\n+        let fd = libc::fileno(self);\n+        if libc::isatty(fd) == 0 {\n+            ret file;\n+        }\n+        ret screen;\n+    }\n }\n \n fn FILE_writer(f: *libc::FILE, cleanup: bool) -> writer {\n@@ -399,6 +411,9 @@ impl of writer for fd_t {\n         fail;\n     }\n     fn flush() -> int { 0 }\n+    fn get_type() -> writer_type {\n+        if libc::isatty(self) == 0 { file } else { screen }\n+    }\n }\n \n class fd_res {\n@@ -646,6 +661,7 @@ impl of writer for mem_buffer {\n     }\n     fn tell() -> uint { self.pos }\n     fn flush() -> int { 0 }\n+    fn get_type() -> writer_type { ret file }\n }\n \n fn mem_buffer() -> mem_buffer {"}, {"sha": "438faa0c4faff3882a46b9b4914c2dc00fe6f4c4", "filename": "src/libstd/net_tcp.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cdd052f6ea1fb268a25e467147643344ec9a6b8c/src%2Flibstd%2Fnet_tcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdd052f6ea1fb268a25e467147643344ec9a6b8c/src%2Flibstd%2Fnet_tcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet_tcp.rs?ref=cdd052f6ea1fb268a25e467147643344ec9a6b8c", "patch": "@@ -840,6 +840,9 @@ impl tcp_socket_buf of io::writer for @tcp_socket_buf {\n     fn flush() -> int {\n         0\n     }\n+    fn get_type() -> io::writer_type {\n+        io::file\n+    }\n }\n \n // INTERNAL API"}]}