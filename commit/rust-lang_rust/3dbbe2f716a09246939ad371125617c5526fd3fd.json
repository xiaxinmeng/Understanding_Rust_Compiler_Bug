{"sha": "3dbbe2f716a09246939ad371125617c5526fd3fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkYmJlMmY3MTZhMDkyNDY5MzlhZDM3MTEyNTYxN2M1NTI2ZmQzZmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-07-13T23:27:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-13T23:27:30Z"}, "message": "Auto merge of #34684 - oli-obk:eval_rustdoc_array_len, r=alexcrichton\n\nevaluate the array length of fixed size array types in rustdoc\n\nmitgates #34579\n\nto fix it we'd need an expression simplifier.\n\nr? @steveklabnik\n\ncc @Osspial", "tree": {"sha": "bd9ab3524a8a84dd7252b1a8df3480ef92f242dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd9ab3524a8a84dd7252b1a8df3480ef92f242dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3dbbe2f716a09246939ad371125617c5526fd3fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3dbbe2f716a09246939ad371125617c5526fd3fd", "html_url": "https://github.com/rust-lang/rust/commit/3dbbe2f716a09246939ad371125617c5526fd3fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3dbbe2f716a09246939ad371125617c5526fd3fd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db71987ee1198be60fef3e361ad1ce59a70cd7f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/db71987ee1198be60fef3e361ad1ce59a70cd7f7", "html_url": "https://github.com/rust-lang/rust/commit/db71987ee1198be60fef3e361ad1ce59a70cd7f7"}, {"sha": "9d33ce58b104f1f0e29a69b30c6b4353f1e28c52", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d33ce58b104f1f0e29a69b30c6b4353f1e28c52", "html_url": "https://github.com/rust-lang/rust/commit/9d33ce58b104f1f0e29a69b30c6b4353f1e28c52"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "a41d3b0253a3668c794bb72e74fb02120de9c5d0", "filename": "src/librustdoc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3dbbe2f716a09246939ad371125617c5526fd3fd/src%2Flibrustdoc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3dbbe2f716a09246939ad371125617c5526fd3fd/src%2Flibrustdoc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2FCargo.toml?ref=3dbbe2f716a09246939ad371125617c5526fd3fd", "patch": "@@ -14,6 +14,7 @@ arena = { path = \"../libarena\" }\n rustc = { path = \"../librustc\" }\n rustc_back = { path = \"../librustc_back\" }\n rustc_const_eval = { path = \"../librustc_const_eval\" }\n+rustc_const_math = { path = \"../librustc_const_math\" }\n rustc_driver = { path = \"../librustc_driver\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_lint = { path = \"../librustc_lint\" }"}, {"sha": "0211b2c9bc7ba5176c06cfd9d433bc0143264276", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/3dbbe2f716a09246939ad371125617c5526fd3fd/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dbbe2f716a09246939ad371125617c5526fd3fd/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=3dbbe2f716a09246939ad371125617c5526fd3fd", "patch": "@@ -1624,8 +1624,25 @@ impl Clean<Type> for hir::Ty {\n                 BorrowedRef {lifetime: l.clean(cx), mutability: m.mutbl.clean(cx),\n                              type_: box m.ty.clean(cx)},\n             TyVec(ref ty) => Vector(box ty.clean(cx)),\n-            TyFixedLengthVec(ref ty, ref e) =>\n-                FixedVector(box ty.clean(cx), pprust::expr_to_string(e)),\n+            TyFixedLengthVec(ref ty, ref e) => {\n+                let n = if let Some(tcx) = cx.tcx_opt() {\n+                    use rustc_const_math::{ConstInt, ConstUsize};\n+                    use rustc_const_eval::eval_const_expr;\n+                    use rustc::middle::const_val::ConstVal;\n+                    match eval_const_expr(tcx, e) {\n+                        ConstVal::Integral(ConstInt::Usize(u)) => match u {\n+                            ConstUsize::Us16(u) => u.to_string(),\n+                            ConstUsize::Us32(u) => u.to_string(),\n+                            ConstUsize::Us64(u) => u.to_string(),\n+                        },\n+                        // after type checking this can't fail\n+                        _ => unreachable!(),\n+                    }\n+                } else {\n+                    pprust::expr_to_string(e)\n+                };\n+                FixedVector(box ty.clean(cx), n)\n+            },\n             TyTup(ref tys) => Tuple(tys.clean(cx)),\n             TyPath(None, ref p) => {\n                 resolve_type(cx, p.clean(cx), self.id)"}, {"sha": "d0c4f126550ca177356b4032497309372d3cb436", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3dbbe2f716a09246939ad371125617c5526fd3fd/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dbbe2f716a09246939ad371125617c5526fd3fd/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=3dbbe2f716a09246939ad371125617c5526fd3fd", "patch": "@@ -34,6 +34,7 @@ extern crate getopts;\n extern crate libc;\n extern crate rustc;\n extern crate rustc_const_eval;\n+extern crate rustc_const_math;\n extern crate rustc_trans;\n extern crate rustc_driver;\n extern crate rustc_resolve;"}, {"sha": "4def60e485f7e0a05635c3648f5edf0669ea535a", "filename": "src/rustc/Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3dbbe2f716a09246939ad371125617c5526fd3fd/src%2Frustc%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/3dbbe2f716a09246939ad371125617c5526fd3fd/src%2Frustc%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2FCargo.lock?ref=3dbbe2f716a09246939ad371125617c5526fd3fd", "patch": "@@ -350,6 +350,7 @@ dependencies = [\n  \"rustc 0.0.0\",\n  \"rustc_back 0.0.0\",\n  \"rustc_const_eval 0.0.0\",\n+ \"rustc_const_math 0.0.0\",\n  \"rustc_driver 0.0.0\",\n  \"rustc_errors 0.0.0\",\n  \"rustc_lint 0.0.0\","}, {"sha": "c6da6b0575b87c3bef842f051525a3ae3df97920", "filename": "src/test/rustdoc/issue-33302.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3dbbe2f716a09246939ad371125617c5526fd3fd/src%2Ftest%2Frustdoc%2Fissue-33302.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dbbe2f716a09246939ad371125617c5526fd3fd/src%2Ftest%2Frustdoc%2Fissue-33302.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-33302.rs?ref=3dbbe2f716a09246939ad371125617c5526fd3fd", "patch": "@@ -34,8 +34,8 @@ macro_rules! make {\n         }\n \n         // @has issue_33302/struct.S.html \\\n-        //        '//h3[@class=\"impl\"]' 'impl T<[i32; 4 * 4]> for S'\n-        // @has - '//*[@id=\"associatedconstant.C\"]' 'const C: [i32; 4 * 4] = [0; 4 * 4]'\n+        //        '//h3[@class=\"impl\"]' 'impl T<[i32; 16]> for S'\n+        // @has - '//*[@id=\"associatedconstant.C\"]' 'const C: [i32; 16] = [0; 4 * 4]'\n         // @has - '//*[@id=\"associatedconstant.D\"]' 'const D: i32 = 4 * 4'\n         impl T<[i32; ($n * $n)]> for S {\n             const C: [i32; ($n * $n)] = [0; ($n * $n)];"}]}