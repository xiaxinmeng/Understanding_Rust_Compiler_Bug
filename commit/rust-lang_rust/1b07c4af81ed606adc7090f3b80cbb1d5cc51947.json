{"sha": "1b07c4af81ed606adc7090f3b80cbb1d5cc51947", "node_id": "C_kwDOAAsO6NoAKDFiMDdjNGFmODFlZDYwNmFkYzcwOTBmM2I4MGNiYjFkNWNjNTE5NDc", "commit": {"author": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-04-29T16:26:15Z"}, "committer": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-05-06T16:11:05Z"}, "message": "remove ImplWfCheck\n\nSigned-off-by: Miguel Guarniz <mi9uel9@gmail.com>", "tree": {"sha": "8badb2186c43ddcb96c655d3800d4f69701d2089", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8badb2186c43ddcb96c655d3800d4f69701d2089"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b07c4af81ed606adc7090f3b80cbb1d5cc51947", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b07c4af81ed606adc7090f3b80cbb1d5cc51947", "html_url": "https://github.com/rust-lang/rust/commit/1b07c4af81ed606adc7090f3b80cbb1d5cc51947", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b07c4af81ed606adc7090f3b80cbb1d5cc51947/comments", "author": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfe07461f4bc44202dd17185f37bc7fc93f5bd6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfe07461f4bc44202dd17185f37bc7fc93f5bd6b", "html_url": "https://github.com/rust-lang/rust/commit/dfe07461f4bc44202dd17185f37bc7fc93f5bd6b"}], "stats": {"total": 24, "additions": 0, "deletions": 24}, "files": [{"sha": "9f665fe60a7069f91b9c06f16714f673a87554ac", "filename": "compiler/rustc_typeck/src/impl_wf_check.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/1b07c4af81ed606adc7090f3b80cbb1d5cc51947/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b07c4af81ed606adc7090f3b80cbb1d5cc51947/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check.rs?ref=1b07c4af81ed606adc7090f3b80cbb1d5cc51947", "patch": "@@ -16,7 +16,6 @@ use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def::DefKind;\n use rustc_hir::def_id::LocalDefId;\n-use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n use rustc_span::Span;\n@@ -83,29 +82,6 @@ pub fn provide(providers: &mut Providers) {\n     *providers = Providers { check_mod_impl_wf, ..*providers };\n }\n \n-struct ImplWfCheck<'tcx> {\n-    tcx: TyCtxt<'tcx>,\n-    min_specialization: bool,\n-}\n-\n-impl<'tcx> ItemLikeVisitor<'tcx> for ImplWfCheck<'tcx> {\n-    fn visit_item(&mut self, item: &'tcx hir::Item<'tcx>) {\n-        if let hir::ItemKind::Impl(ref impl_) = item.kind {\n-            enforce_impl_params_are_constrained(self.tcx, item.def_id, impl_.items);\n-            enforce_impl_items_are_distinct(self.tcx, impl_.items);\n-            if self.min_specialization {\n-                check_min_specialization(self.tcx, item.def_id.to_def_id(), item.span);\n-            }\n-        }\n-    }\n-\n-    fn visit_trait_item(&mut self, _trait_item: &'tcx hir::TraitItem<'tcx>) {}\n-\n-    fn visit_impl_item(&mut self, _impl_item: &'tcx hir::ImplItem<'tcx>) {}\n-\n-    fn visit_foreign_item(&mut self, _foreign_item: &'tcx hir::ForeignItem<'tcx>) {}\n-}\n-\n fn enforce_impl_params_are_constrained(\n     tcx: TyCtxt<'_>,\n     impl_def_id: LocalDefId,"}]}