{"sha": "ac02fcc4d8b5cc0f1d727b30f8f2142dc9bacc8e", "node_id": "C_kwDOAAsO6NoAKGFjMDJmY2M0ZDhiNWNjMGYxZDcyN2IzMGY4ZjIxNDJkYzliYWNjOGU", "commit": {"author": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2022-01-22T14:50:08Z"}, "committer": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2022-01-24T10:00:31Z"}, "message": "Use `NtCreateFile` instead of `NtOpenFile` to open a file", "tree": {"sha": "256b10c81acbcee6c3b3b60e0fc8ddd2ecdf8263", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/256b10c81acbcee6c3b3b60e0fc8ddd2ecdf8263"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac02fcc4d8b5cc0f1d727b30f8f2142dc9bacc8e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+p/jD6jrzmnSIWJLcTRy8vRWJ94FAmHueMAACgkQcTRy8vRW\nJ97NTBAAoSIJ+Zq/c6TD0dkuCotpo2oZctyy+EXOty/nkFf9zlIKkYH7Xzl0z8ia\nQMxH6YZNdSwPorWbfOrxZYGcnr55u0wszXyiqwYqGfbIfdg2DA5DUbq4BOFUSuWF\niOjsQDnCoWFQOqHFD99FfqDVFMixMHjCUb93ubGkI9BPHrhPV5QWPRpSGIL9xMgT\nxwByosA9VuadC8lI+9sRIviPl3//Ub8qH9bMtu1bKj6qxf2CcDvnrxaCDS6Y8hNX\np6BL2Au3NqKZ/9y3Fs+gjKKm9PUXlV1Sysxd9fUChlCYUQcX2Iyf2GnCE4gRZH8H\nmoA1VoI3ns7U47SeuRppTl7BDUBgiphu73O+TDn0i8zUtCnjxh7r/WyyRUEUd8P6\n27AGtSecGvswRWX/MY8zSgfOHKKGf/UXLI1aMW8zcidQm/PC6QK7iuHdY+m1nP2/\n8GgQoSWX7CkAJc2z0wL687EzKRnGa9BqMaX+gdzj2WDmP80ZGTYLtpol4aAknvK9\nRDSs+1/Zib4zMIxPfoLk7gH7fAtznPvTSzEIUommC29/yOl/JYgMA1zx+N8cPJ/J\noaqL5NQLmnYr1sfGz8NIJ6Aa3Cphcpg1rktZOb78abKEdP6b1d5Mb+WhaFZDDuY4\nwnJlG5ujc59bq0kUsl+hjGaGpNe4LqZA+s+fIq9gY+jB/91TxC0=\n=DRsL\n-----END PGP SIGNATURE-----", "payload": "tree 256b10c81acbcee6c3b3b60e0fc8ddd2ecdf8263\nparent ecf72996eda4f8af19b0ca7235c6f62e0245a313\nauthor Chris Denton <christophersdenton@gmail.com> 1642863008 +0000\ncommitter Chris Denton <christophersdenton@gmail.com> 1643018431 +0000\n\nUse `NtCreateFile` instead of `NtOpenFile` to open a file\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac02fcc4d8b5cc0f1d727b30f8f2142dc9bacc8e", "html_url": "https://github.com/rust-lang/rust/commit/ac02fcc4d8b5cc0f1d727b30f8f2142dc9bacc8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac02fcc4d8b5cc0f1d727b30f8f2142dc9bacc8e/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecf72996eda4f8af19b0ca7235c6f62e0245a313", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecf72996eda4f8af19b0ca7235c6f62e0245a313", "html_url": "https://github.com/rust-lang/rust/commit/ecf72996eda4f8af19b0ca7235c6f62e0245a313"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "4751995556422034917941ad97604a50e8cbe415", "filename": "library/std/src/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac02fcc4d8b5cc0f1d727b30f8f2142dc9bacc8e/library%2Fstd%2Fsrc%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac02fcc4d8b5cc0f1d727b30f8f2142dc9bacc8e/library%2Fstd%2Fsrc%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ffs.rs?ref=ac02fcc4d8b5cc0f1d727b30f8f2142dc9bacc8e", "patch": "@@ -2044,7 +2044,7 @@ pub fn remove_dir<P: AsRef<Path>>(path: P) -> io::Result<()> {\n ///\n /// This function currently corresponds to `openat`, `fdopendir`, `unlinkat` and `lstat` functions\n /// on Unix (except for macOS before version 10.10 and REDOX) and the `CreateFileW`,\n-/// `GetFileInformationByHandleEx`, `SetFileInformationByHandle`, and `NtOpenFile` functions on\n+/// `GetFileInformationByHandleEx`, `SetFileInformationByHandle`, and `NtCreateFile` functions on\n /// Windows. Note that, this [may change in the future][changes].\n ///\n /// [changes]: io#platform-specific-behavior"}, {"sha": "dfcd6124454a4f3dc83e9358a0590a26c7a88787", "filename": "library/std/src/sys/windows/c.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ac02fcc4d8b5cc0f1d727b30f8f2142dc9bacc8e/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac02fcc4d8b5cc0f1d727b30f8f2142dc9bacc8e/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs?ref=ac02fcc4d8b5cc0f1d727b30f8f2142dc9bacc8e", "patch": "@@ -88,6 +88,7 @@ pub const FILE_SHARE_DELETE: DWORD = 0x4;\n pub const FILE_SHARE_READ: DWORD = 0x1;\n pub const FILE_SHARE_WRITE: DWORD = 0x2;\n \n+pub const FILE_OPEN: ULONG = 0x00000001;\n pub const FILE_OPEN_REPARSE_POINT: ULONG = 0x200000;\n pub const OBJ_DONT_REPARSE: ULONG = 0x1000;\n \n@@ -1228,15 +1229,20 @@ compat_fn! {\n \n compat_fn! {\n     \"ntdll\":\n-    pub fn NtOpenFile(\n+    pub fn NtCreateFile(\n         FileHandle: *mut HANDLE,\n         DesiredAccess: ACCESS_MASK,\n         ObjectAttributes: *const OBJECT_ATTRIBUTES,\n         IoStatusBlock: *mut IO_STATUS_BLOCK,\n+        AllocationSize: *mut i64,\n+        FileAttributes: ULONG,\n         ShareAccess: ULONG,\n-        OpenOptions: ULONG\n+        CreateDisposition: ULONG,\n+        CreateOptions: ULONG,\n+        EaBuffer: *mut c_void,\n+        EaLength: ULONG\n     ) -> NTSTATUS {\n-        panic!(\"`NtOpenFile` not available\");\n+        panic!(\"`NtCreateFile` not available\");\n     }\n     pub fn RtlNtStatusToDosError(\n         Status: NTSTATUS"}, {"sha": "a7fb7c32f7cbe1890f6b8b6f0ad109a978ecfaa0", "filename": "library/std/src/sys/windows/fs.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ac02fcc4d8b5cc0f1d727b30f8f2142dc9bacc8e/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac02fcc4d8b5cc0f1d727b30f8f2142dc9bacc8e/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs?ref=ac02fcc4d8b5cc0f1d727b30f8f2142dc9bacc8e", "patch": "@@ -712,11 +712,11 @@ impl<'a> Iterator for DirBuffIter<'a> {\n \n /// Open a link relative to the parent directory, ensure no symlinks are followed.\n fn open_link_no_reparse(parent: &File, name: &[u16], access: u32) -> io::Result<File> {\n-    // This is implemented using the lower level `NtOpenFile` function as\n+    // This is implemented using the lower level `NtCreateFile` function as\n     // unfortunately opening a file relative to a parent is not supported by\n     // win32 functions. It is however a fundamental feature of the NT kernel.\n     //\n-    // See https://docs.microsoft.com/en-us/windows/win32/api/winternl/nf-winternl-ntopenfile\n+    // See https://docs.microsoft.com/en-us/windows/win32/api/winternl/nf-winternl-ntcreatefile\n     unsafe {\n         let mut handle = ptr::null_mut();\n         let mut io_status = c::IO_STATUS_BLOCK::default();\n@@ -732,14 +732,19 @@ fn open_link_no_reparse(parent: &File, name: &[u16], access: u32) -> io::Result<\n             Attributes: ATTRIBUTES.load(Ordering::Relaxed),\n             ..c::OBJECT_ATTRIBUTES::default()\n         };\n-        let status = c::NtOpenFile(\n+        let status = c::NtCreateFile(\n             &mut handle,\n             access,\n             &object,\n             &mut io_status,\n+            crate::ptr::null_mut(),\n+            0,\n             c::FILE_SHARE_DELETE | c::FILE_SHARE_READ | c::FILE_SHARE_WRITE,\n+            c::FILE_OPEN,\n             // If `name` is a symlink then open the link rather than the target.\n             c::FILE_OPEN_REPARSE_POINT,\n+            crate::ptr::null_mut(),\n+            0,\n         );\n         // Convert an NTSTATUS to the more familiar Win32 error codes (aka \"DosError\")\n         if c::nt_success(status) {"}]}