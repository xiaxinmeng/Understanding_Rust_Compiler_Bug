{"sha": "dc6606ead91b147630c6644afcbddf7ea9806808", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjNjYwNmVhZDkxYjE0NzYzMGM2NjQ0YWZjYmRkZjdlYTk4MDY4MDg=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-07-18T15:41:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-18T15:41:38Z"}, "message": "Rollup merge of #43315 - est31:stabilize_float_bits_conv, r=alexcrichton\n\nfloat_bits_conv made it into 1.20\n\nIt seems that my PR to stabilize the `float_bits_conv` feature got merged before beta branched, which means I'm lucky, and the stabilization makes it into Rust 1.20. As it was against my expectations, the version number has to be corrected from 1.21 to 1.20.\n\nPlease also apply this PR to the beta branch.", "tree": {"sha": "8882aaafa2beb020f823f42544c6f3a36baf75fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8882aaafa2beb020f823f42544c6f3a36baf75fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc6606ead91b147630c6644afcbddf7ea9806808", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc6606ead91b147630c6644afcbddf7ea9806808", "html_url": "https://github.com/rust-lang/rust/commit/dc6606ead91b147630c6644afcbddf7ea9806808", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc6606ead91b147630c6644afcbddf7ea9806808/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21a7b26bb42d85b19b59c44484136fa5d9258e2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/21a7b26bb42d85b19b59c44484136fa5d9258e2a", "html_url": "https://github.com/rust-lang/rust/commit/21a7b26bb42d85b19b59c44484136fa5d9258e2a"}, {"sha": "ffefc9aa1ca6383f722ec1cbf722da42ffdb8108", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffefc9aa1ca6383f722ec1cbf722da42ffdb8108", "html_url": "https://github.com/rust-lang/rust/commit/ffefc9aa1ca6383f722ec1cbf722da42ffdb8108"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "0135cd0a588cf09e530499f3e4c60b571cbf62b2", "filename": "src/libstd/f32.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dc6606ead91b147630c6644afcbddf7ea9806808/src%2Flibstd%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc6606ead91b147630c6644afcbddf7ea9806808/src%2Flibstd%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff32.rs?ref=dc6606ead91b147630c6644afcbddf7ea9806808", "patch": "@@ -1094,7 +1094,7 @@ impl f32 {\n     /// assert_eq!((12.5f32).to_bits(), 0x41480000);\n     ///\n     /// ```\n-    #[stable(feature = \"float_bits_conv\", since = \"1.21.0\")]\n+    #[stable(feature = \"float_bits_conv\", since = \"1.20.0\")]\n     #[inline]\n     pub fn to_bits(self) -> u32 {\n         unsafe { ::mem::transmute(self) }\n@@ -1125,7 +1125,7 @@ impl f32 {\n     /// let snan = 0x7F800001;\n     /// assert_ne!(f32::from_bits(snan).to_bits(), snan);\n     /// ```\n-    #[stable(feature = \"float_bits_conv\", since = \"1.21.0\")]\n+    #[stable(feature = \"float_bits_conv\", since = \"1.20.0\")]\n     #[inline]\n     pub fn from_bits(mut v: u32) -> Self {\n         const EXP_MASK: u32   = 0x7F800000;"}, {"sha": "d73d7cd2c7bd1cf52c088a0e45d45c4e5e688d84", "filename": "src/libstd/f64.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dc6606ead91b147630c6644afcbddf7ea9806808/src%2Flibstd%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc6606ead91b147630c6644afcbddf7ea9806808/src%2Flibstd%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff64.rs?ref=dc6606ead91b147630c6644afcbddf7ea9806808", "patch": "@@ -1009,7 +1009,7 @@ impl f64 {\n     /// assert_eq!((12.5f64).to_bits(), 0x4029000000000000);\n     ///\n     /// ```\n-    #[stable(feature = \"float_bits_conv\", since = \"1.21.0\")]\n+    #[stable(feature = \"float_bits_conv\", since = \"1.20.0\")]\n     #[inline]\n     pub fn to_bits(self) -> u64 {\n         unsafe { ::mem::transmute(self) }\n@@ -1040,7 +1040,7 @@ impl f64 {\n     /// let snan = 0x7FF0000000000001;\n     /// assert_ne!(f64::from_bits(snan).to_bits(), snan);\n     /// ```\n-    #[stable(feature = \"float_bits_conv\", since = \"1.21.0\")]\n+    #[stable(feature = \"float_bits_conv\", since = \"1.20.0\")]\n     #[inline]\n     pub fn from_bits(mut v: u64) -> Self {\n         const EXP_MASK: u64   = 0x7FF0000000000000;"}]}