{"sha": "8f4d85a9d727440b246aee8f54549c5c72022700", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNGQ4NWE5ZDcyNzQ0MGIyNDZhZWU4ZjU0NTQ5YzVjNzIwMjI3MDA=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-11-27T04:01:49Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-11-27T04:03:54Z"}, "message": "Merge multiline_closure_forces_block and multiline_match_arm_forces_block into force_multiline_block", "tree": {"sha": "f7f0e0252e570c63121fd27d82abbdb54fe34158", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7f0e0252e570c63121fd27d82abbdb54fe34158"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f4d85a9d727440b246aee8f54549c5c72022700", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f4d85a9d727440b246aee8f54549c5c72022700", "html_url": "https://github.com/rust-lang/rust/commit/8f4d85a9d727440b246aee8f54549c5c72022700", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f4d85a9d727440b246aee8f54549c5c72022700/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "087f8b58545519aec6cca7a0a69feb7b0738455e", "url": "https://api.github.com/repos/rust-lang/rust/commits/087f8b58545519aec6cca7a0a69feb7b0738455e", "html_url": "https://github.com/rust-lang/rust/commit/087f8b58545519aec6cca7a0a69feb7b0738455e"}], "stats": {"total": 216, "additions": 95, "deletions": 121}, "files": [{"sha": "76589314e03c3d56a34af599688b8be63204b1b6", "filename": "Configurations.md", "status": "modified", "additions": 10, "deletions": 24, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/8f4d85a9d727440b246aee8f54549c5c72022700/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/8f4d85a9d727440b246aee8f54549c5c72022700/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=8f4d85a9d727440b246aee8f54549c5c72022700", "patch": "@@ -1172,9 +1172,9 @@ pub enum Foo {}\n pub enum Foo {}\n ```\n \n-## `multiline_closure_forces_block`\n+## `force_multiline_blocks`\n \n-Force multiline closure bodies to be wrapped in a block\n+Force multiline closure and match arm bodies to be wrapped in a block\n \n - **Default value**: `false`\n - **Possible values**: `false`, `true`\n@@ -1186,6 +1186,13 @@ result.and_then(|maybe_value| match maybe_value {\n     None => ...,\n     Some(value) => ...,\n })\n+\n+match lorem {\n+    None => if ipsum {\n+        println!(\"Hello World\");\n+    },\n+    Some(dolor) => ...,\n+}\n ```\n \n #### `true`:\n@@ -1198,29 +1205,7 @@ result.and_then(|maybe_value| {\n         Some(value) => ...,\n     }\n })\n-```\n-\n-## `multiline_match_arm_forces_block`\n-\n-Force multiline match arm bodies to be wrapped in a block\n-\n-- **Default value**: `false`\n-- **Possible values**: `false`, `true`\n-\n-#### `false` (default):\n-\n-```rust\n-match lorem {\n-    None => if ipsum {\n-        println!(\"Hello World\");\n-    },\n-    Some(dolor) => ...,\n-}\n-```\n \n-#### `true`:\n-\n-```rust\n match lorem {\n     None => {\n         if ipsum {\n@@ -1231,6 +1216,7 @@ match lorem {\n }\n ```\n \n+\n ## `newline_style`\n \n Unix or Windows line endings"}, {"sha": "71862b82ba05d11f04906437fa1cd7ccde3b47bf", "filename": "src/closures.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f4d85a9d727440b246aee8f54549c5c72022700/src%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f4d85a9d727440b246aee8f54549c5c72022700/src%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fclosures.rs?ref=8f4d85a9d727440b246aee8f54549c5c72022700", "patch": "@@ -146,7 +146,7 @@ fn rewrite_closure_expr(\n         rewrite = and_one_line(rewrite);\n     }\n     rewrite = rewrite.and_then(|rw| {\n-        if context.config.multiline_closure_forces_block() && rw.contains('\\n') {\n+        if context.config.force_multiline_blocks() && rw.contains('\\n') {\n             None\n         } else {\n             Some(rw)"}, {"sha": "c622522223102f277c7aa0fc8f71795467f6adc3", "filename": "src/config.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8f4d85a9d727440b246aee8f54549c5c72022700/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f4d85a9d727440b246aee8f54549c5c72022700/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=8f4d85a9d727440b246aee8f54549c5c72022700", "patch": "@@ -621,8 +621,6 @@ create_config! {\n     // Match\n     wrap_match_arms: bool, true, false, \"Wrap the body of arms in blocks when it does not fit on \\\n                                   the same line with the pattern of arms\";\n-    multiline_match_arm_forces_block: bool, false, false,\n-        \"Force multiline match arm bodies to be wrapped in a block\";\n     match_block_trailing_comma: bool, false, false,\n         \"Put a trailing comma after a block based match arm (non-block arms are not affected)\";\n \n@@ -645,8 +643,8 @@ create_config! {\n         \"Remove blank lines at start or end of a block\";\n     same_line_attributes: bool, true, false,\n         \"Try to put attributes on the same line as fields and variants.\";\n-    multiline_closure_forces_block: bool, false, false,\n-        \"Force multiline closure bodies to be wrapped in a block\";\n+    force_multiline_blocks: bool, false, false,\n+        \"Force multiline closure bodies and match arms to be wrapped in a block\";\n     fn_args_density: Density, Density::Tall, false, \"Argument density in functions\";\n     brace_style: BraceStyle, BraceStyle::SameLineWhere, false, \"Brace style for items\";\n     control_brace_style: ControlBraceStyle, ControlBraceStyle::AlwaysSameLine, false,"}, {"sha": "9d29425a5ddc7fd914dab963b9a51c88b1dfa947", "filename": "src/expr.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8f4d85a9d727440b246aee8f54549c5c72022700/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f4d85a9d727440b246aee8f54549c5c72022700/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=8f4d85a9d727440b246aee8f54549c5c72022700", "patch": "@@ -1499,17 +1499,15 @@ fn flatten_arm_body<'a>(context: &'a RewriteContext, body: &'a ast::Expr) -> (bo\n         {\n             if let ast::StmtKind::Expr(ref expr) = block.stmts[0].node {\n                 (\n-                    !context.config.multiline_match_arm_forces_block()\n-                        && expr.can_be_overflowed(context, 1),\n+                    !context.config.force_multiline_blocks() && expr.can_be_overflowed(context, 1),\n                     &**expr,\n                 )\n             } else {\n                 (false, &*body)\n             }\n         }\n         _ => (\n-            !context.config.multiline_match_arm_forces_block()\n-                && body.can_be_overflowed(context, 1),\n+            !context.config.force_multiline_blocks() && body.can_be_overflowed(context, 1),\n             &*body,\n         ),\n     }"}, {"sha": "b97e348e5da12a0be98855d7d1b4373e65f896d1", "filename": "tests/source/configs-force_multiline_block-false.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8f4d85a9d727440b246aee8f54549c5c72022700/tests%2Fsource%2Fconfigs-force_multiline_block-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f4d85a9d727440b246aee8f54549c5c72022700/tests%2Fsource%2Fconfigs-force_multiline_block-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-force_multiline_block-false.rs?ref=8f4d85a9d727440b246aee8f54549c5c72022700", "patch": "@@ -0,0 +1,22 @@\n+// rustfmt-force_multiline_blocks: false\n+// Option forces multiline match arm and closure bodies to be wrapped in a block\n+\n+fn main() {\n+    match lorem {\n+        Lorem::Ipsum => {\n+            if ipsum {\n+                println!(\"dolor\");\n+            }\n+        }\n+        Lorem::Dolor => println!(\"amet\"),\n+    }\n+}\n+\n+fn main() {\n+    result.and_then(|maybe_value| {\n+        match maybe_value {\n+            None => Err(\"oops\"),\n+            Some(value) => Ok(1),\n+        }\n+    });\n+}"}, {"sha": "db9d3de46141ecac6581c1b09ca1a3af269332cb", "filename": "tests/source/configs-force_multiline_block-true.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8f4d85a9d727440b246aee8f54549c5c72022700/tests%2Fsource%2Fconfigs-force_multiline_block-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f4d85a9d727440b246aee8f54549c5c72022700/tests%2Fsource%2Fconfigs-force_multiline_block-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-force_multiline_block-true.rs?ref=8f4d85a9d727440b246aee8f54549c5c72022700", "patch": "@@ -0,0 +1,18 @@\n+// rustfmt-force_multiline_blocks: true\n+// Option forces multiline match arm and closure bodies to be wrapped in a block\n+\n+fn main() {\n+    match lorem {\n+        Lorem::Ipsum => if ipsum {\n+            println!(\"dolor\");\n+        },\n+        Lorem::Dolor => println!(\"amet\"),\n+    }\n+}\n+\n+fn main() {\n+    result.and_then(|maybe_value| match maybe_value {\n+        None => Err(\"oops\"),\n+        Some(value) => Ok(1),\n+    });\n+}"}, {"sha": "e885dff5ee6978e15f31701f3a2642b517c9a83c", "filename": "tests/source/configs-multiline_closure_forces_block-false.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/087f8b58545519aec6cca7a0a69feb7b0738455e/tests%2Fsource%2Fconfigs-multiline_closure_forces_block-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/087f8b58545519aec6cca7a0a69feb7b0738455e/tests%2Fsource%2Fconfigs-multiline_closure_forces_block-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-multiline_closure_forces_block-false.rs?ref=087f8b58545519aec6cca7a0a69feb7b0738455e", "patch": "@@ -1,11 +0,0 @@\n-// rustfmt-multiline_closure_forces_block: false\n-// Option forces multiline closure bodies to be wrapped in a block\n-\n-fn main() {\n-    result.and_then(|maybe_value| {\n-        match maybe_value {\n-            None => Err(\"oops\"),\n-            Some(value) => Ok(1),\n-        }\n-    });\n-}"}, {"sha": "f267466ac660654e36d5ff415d91084e6dceb997", "filename": "tests/source/configs-multiline_closure_forces_block-true.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/087f8b58545519aec6cca7a0a69feb7b0738455e/tests%2Fsource%2Fconfigs-multiline_closure_forces_block-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/087f8b58545519aec6cca7a0a69feb7b0738455e/tests%2Fsource%2Fconfigs-multiline_closure_forces_block-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-multiline_closure_forces_block-true.rs?ref=087f8b58545519aec6cca7a0a69feb7b0738455e", "patch": "@@ -1,9 +0,0 @@\n-// rustfmt-multiline_closure_forces_block: true\n-// Option forces multiline closure bodies to be wrapped in a block\n-\n-fn main() {\n-    result.and_then(|maybe_value| match maybe_value {\n-        None => Err(\"oops\"),\n-        Some(value) => Ok(1),\n-    });\n-}"}, {"sha": "4cbec0c7c1cb5fa4ded30aa5c046c087381f810a", "filename": "tests/source/configs-multiline_match_arm_forces_block-false.rs", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/087f8b58545519aec6cca7a0a69feb7b0738455e/tests%2Fsource%2Fconfigs-multiline_match_arm_forces_block-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/087f8b58545519aec6cca7a0a69feb7b0738455e/tests%2Fsource%2Fconfigs-multiline_match_arm_forces_block-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-multiline_match_arm_forces_block-false.rs?ref=087f8b58545519aec6cca7a0a69feb7b0738455e", "patch": "@@ -1,13 +0,0 @@\n-// rustfmt-multiline_match_arm_forces_block: false\n-// Option forces multiline match arm bodies to be wrapped in a block\n-\n-fn main() {\n-    match lorem {\n-        Lorem::Ipsum => {\n-            if ipsum {\n-                println!(\"dolor\");\n-            }\n-        }\n-        Lorem::Dolor => println!(\"amet\"),\n-    }\n-}"}, {"sha": "602076a4e74bafe665432ddea41efad2f4c906bd", "filename": "tests/source/configs-multiline_match_arm_forces_block-true.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/087f8b58545519aec6cca7a0a69feb7b0738455e/tests%2Fsource%2Fconfigs-multiline_match_arm_forces_block-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/087f8b58545519aec6cca7a0a69feb7b0738455e/tests%2Fsource%2Fconfigs-multiline_match_arm_forces_block-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-multiline_match_arm_forces_block-true.rs?ref=087f8b58545519aec6cca7a0a69feb7b0738455e", "patch": "@@ -1,11 +0,0 @@\n-// rustfmt-multiline_match_arm_forces_block: true\n-// Option forces multiline match arm bodies to be wrapped in a block\n-\n-fn main() {\n-    match lorem {\n-        Lorem::Ipsum => if ipsum {\n-            println!(\"dolor\");\n-        },\n-        Lorem::Dolor => println!(\"amet\"),\n-    }\n-}"}, {"sha": "11ccc9a75128725fab6843d5caa666ed20eb1f80", "filename": "tests/target/configs-force_multiline_block-false.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8f4d85a9d727440b246aee8f54549c5c72022700/tests%2Ftarget%2Fconfigs-force_multiline_block-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f4d85a9d727440b246aee8f54549c5c72022700/tests%2Ftarget%2Fconfigs-force_multiline_block-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-force_multiline_block-false.rs?ref=8f4d85a9d727440b246aee8f54549c5c72022700", "patch": "@@ -0,0 +1,18 @@\n+// rustfmt-force_multiline_blocks: false\n+// Option forces multiline match arm and closure bodies to be wrapped in a block\n+\n+fn main() {\n+    match lorem {\n+        Lorem::Ipsum => if ipsum {\n+            println!(\"dolor\");\n+        },\n+        Lorem::Dolor => println!(\"amet\"),\n+    }\n+}\n+\n+fn main() {\n+    result.and_then(|maybe_value| match maybe_value {\n+        None => Err(\"oops\"),\n+        Some(value) => Ok(1),\n+    });\n+}"}, {"sha": "aec50afe5a840611499c19cb910943fe30f82bda", "filename": "tests/target/configs-force_multiline_block-true.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8f4d85a9d727440b246aee8f54549c5c72022700/tests%2Ftarget%2Fconfigs-force_multiline_block-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f4d85a9d727440b246aee8f54549c5c72022700/tests%2Ftarget%2Fconfigs-force_multiline_block-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-force_multiline_block-true.rs?ref=8f4d85a9d727440b246aee8f54549c5c72022700", "patch": "@@ -0,0 +1,22 @@\n+// rustfmt-force_multiline_blocks: true\n+// Option forces multiline match arm and closure bodies to be wrapped in a block\n+\n+fn main() {\n+    match lorem {\n+        Lorem::Ipsum => {\n+            if ipsum {\n+                println!(\"dolor\");\n+            }\n+        }\n+        Lorem::Dolor => println!(\"amet\"),\n+    }\n+}\n+\n+fn main() {\n+    result.and_then(|maybe_value| {\n+        match maybe_value {\n+            None => Err(\"oops\"),\n+            Some(value) => Ok(1),\n+        }\n+    });\n+}"}, {"sha": "7fb3d597da1f90a9534bd63ac9f01b2861431659", "filename": "tests/target/configs-multiline_closure_forces_block-false.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/087f8b58545519aec6cca7a0a69feb7b0738455e/tests%2Ftarget%2Fconfigs-multiline_closure_forces_block-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/087f8b58545519aec6cca7a0a69feb7b0738455e/tests%2Ftarget%2Fconfigs-multiline_closure_forces_block-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-multiline_closure_forces_block-false.rs?ref=087f8b58545519aec6cca7a0a69feb7b0738455e", "patch": "@@ -1,9 +0,0 @@\n-// rustfmt-multiline_closure_forces_block: false\n-// Option forces multiline closure bodies to be wrapped in a block\n-\n-fn main() {\n-    result.and_then(|maybe_value| match maybe_value {\n-        None => Err(\"oops\"),\n-        Some(value) => Ok(1),\n-    });\n-}"}, {"sha": "01e2de4352779e9d1e843806397119b346cf460e", "filename": "tests/target/configs-multiline_closure_forces_block-true.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/087f8b58545519aec6cca7a0a69feb7b0738455e/tests%2Ftarget%2Fconfigs-multiline_closure_forces_block-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/087f8b58545519aec6cca7a0a69feb7b0738455e/tests%2Ftarget%2Fconfigs-multiline_closure_forces_block-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-multiline_closure_forces_block-true.rs?ref=087f8b58545519aec6cca7a0a69feb7b0738455e", "patch": "@@ -1,11 +0,0 @@\n-// rustfmt-multiline_closure_forces_block: true\n-// Option forces multiline closure bodies to be wrapped in a block\n-\n-fn main() {\n-    result.and_then(|maybe_value| {\n-        match maybe_value {\n-            None => Err(\"oops\"),\n-            Some(value) => Ok(1),\n-        }\n-    });\n-}"}, {"sha": "3c4c1470b0f7c58b949b870d0f22c45ad4d179f7", "filename": "tests/target/configs-multiline_match_arm_forces_block-false.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/087f8b58545519aec6cca7a0a69feb7b0738455e/tests%2Ftarget%2Fconfigs-multiline_match_arm_forces_block-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/087f8b58545519aec6cca7a0a69feb7b0738455e/tests%2Ftarget%2Fconfigs-multiline_match_arm_forces_block-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-multiline_match_arm_forces_block-false.rs?ref=087f8b58545519aec6cca7a0a69feb7b0738455e", "patch": "@@ -1,11 +0,0 @@\n-// rustfmt-multiline_match_arm_forces_block: false\n-// Option forces multiline match arm bodies to be wrapped in a block\n-\n-fn main() {\n-    match lorem {\n-        Lorem::Ipsum => if ipsum {\n-            println!(\"dolor\");\n-        },\n-        Lorem::Dolor => println!(\"amet\"),\n-    }\n-}"}, {"sha": "c36d59c315c0abdde3f55af984c3c40500b74ac0", "filename": "tests/target/configs-multiline_match_arm_forces_block-true.rs", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/087f8b58545519aec6cca7a0a69feb7b0738455e/tests%2Ftarget%2Fconfigs-multiline_match_arm_forces_block-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/087f8b58545519aec6cca7a0a69feb7b0738455e/tests%2Ftarget%2Fconfigs-multiline_match_arm_forces_block-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-multiline_match_arm_forces_block-true.rs?ref=087f8b58545519aec6cca7a0a69feb7b0738455e", "patch": "@@ -1,13 +0,0 @@\n-// rustfmt-multiline_match_arm_forces_block: true\n-// Option forces multiline match arm bodies to be wrapped in a block\n-\n-fn main() {\n-    match lorem {\n-        Lorem::Ipsum => {\n-            if ipsum {\n-                println!(\"dolor\");\n-            }\n-        }\n-        Lorem::Dolor => println!(\"amet\"),\n-    }\n-}"}]}