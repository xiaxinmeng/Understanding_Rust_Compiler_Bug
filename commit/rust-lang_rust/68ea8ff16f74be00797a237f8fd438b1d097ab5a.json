{"sha": "68ea8ff16f74be00797a237f8fd438b1d097ab5a", "node_id": "C_kwDOAAsO6NoAKDY4ZWE4ZmYxNmY3NGJlMDA3OTdhMjM3ZjhmZDQzOGIxZDA5N2FiNWE", "commit": {"author": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2022-06-08T18:23:39Z"}, "committer": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2022-06-16T11:40:30Z"}, "message": "drive by fix needless allocation of const string number", "tree": {"sha": "724e6126d5769db8f749958f39b66027e7151876", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/724e6126d5769db8f749958f39b66027e7151876"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68ea8ff16f74be00797a237f8fd438b1d097ab5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68ea8ff16f74be00797a237f8fd438b1d097ab5a", "html_url": "https://github.com/rust-lang/rust/commit/68ea8ff16f74be00797a237f8fd438b1d097ab5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68ea8ff16f74be00797a237f8fd438b1d097ab5a/comments", "author": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "989d1a732f194d852e9a3636fc283c65612f995f", "url": "https://api.github.com/repos/rust-lang/rust/commits/989d1a732f194d852e9a3636fc283c65612f995f", "html_url": "https://github.com/rust-lang/rust/commit/989d1a732f194d852e9a3636fc283c65612f995f"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "ec48efa9bce2f192f0bc524a3ef181924b1dca30", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/68ea8ff16f74be00797a237f8fd438b1d097ab5a/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68ea8ff16f74be00797a237f8fd438b1d097ab5a/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=68ea8ff16f74be00797a237f8fd438b1d097ab5a", "patch": "@@ -771,8 +771,12 @@ impl EmitterWriter {\n         self\n     }\n \n-    fn maybe_anonymized(&self, line_num: usize) -> String {\n-        if self.ui_testing { ANONYMIZED_LINE_NUM.to_string() } else { line_num.to_string() }\n+    fn maybe_anonymized(&self, line_num: usize) -> Cow<'static, str> {\n+        if self.ui_testing {\n+            Cow::Borrowed(ANONYMIZED_LINE_NUM)\n+        } else {\n+            Cow::Owned(line_num.to_string())\n+        }\n     }\n \n     fn draw_line("}]}