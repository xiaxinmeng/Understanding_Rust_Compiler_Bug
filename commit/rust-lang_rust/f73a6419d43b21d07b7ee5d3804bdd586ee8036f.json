{"sha": "f73a6419d43b21d07b7ee5d3804bdd586ee8036f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3M2E2NDE5ZDQzYjIxZDA3YjdlZTVkMzgwNGJkZDU4NmVlODAzNmY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-12T12:26:36Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-12T12:28:32Z"}, "message": "Allow default everywhere\n\ncloses #5681", "tree": {"sha": "c50a6d1bbb31debeaf9a0244f5dab4887b41c266", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c50a6d1bbb31debeaf9a0244f5dab4887b41c266"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f73a6419d43b21d07b7ee5d3804bdd586ee8036f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f73a6419d43b21d07b7ee5d3804bdd586ee8036f", "html_url": "https://github.com/rust-lang/rust/commit/f73a6419d43b21d07b7ee5d3804bdd586ee8036f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "html_url": "https://github.com/rust-lang/rust/commit/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff"}], "stats": {"total": 633, "additions": 326, "deletions": 307}, "files": [{"sha": "88468bc9716e0f6087ce0ae29b520de68c798642", "filename": "crates/ra_parser/src/grammar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_parser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_parser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar.rs?ref=f73a6419d43b21d07b7ee5d3804bdd586ee8036f", "patch": "@@ -110,7 +110,7 @@ pub(crate) mod fragments {\n     }\n \n     pub(crate) fn item(p: &mut Parser) {\n-        items::item_or_macro(p, true, items::ItemFlavor::Mod)\n+        items::item_or_macro(p, true)\n     }\n \n     pub(crate) fn macro_items(p: &mut Parser) {"}, {"sha": "3291e3f1469d76cf759658fb643cc2d7a15cafca", "filename": "crates/ra_parser/src/grammar/expressions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=f73a6419d43b21d07b7ee5d3804bdd586ee8036f", "patch": "@@ -73,7 +73,7 @@ pub(super) fn stmt(p: &mut Parser, with_semi: StmtWithSemi) {\n \n     // test block_items\n     // fn a() { fn b() {} }\n-    let m = match items::maybe_item(p, m, items::ItemFlavor::Mod) {\n+    let m = match items::maybe_item(p, m) {\n         Ok(()) => return,\n         Err(m) => m,\n     };"}, {"sha": "9b76234345d0f0db0210c7c8d7a742f89a76be24", "filename": "crates/ra_parser/src/grammar/items.rs", "status": "modified", "additions": 18, "deletions": 32, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs?ref=f73a6419d43b21d07b7ee5d3804bdd586ee8036f", "patch": "@@ -22,24 +22,19 @@ use super::*;\n pub(super) fn mod_contents(p: &mut Parser, stop_on_r_curly: bool) {\n     attributes::inner_attributes(p);\n     while !(stop_on_r_curly && p.at(T!['}']) || p.at(EOF)) {\n-        item_or_macro(p, stop_on_r_curly, ItemFlavor::Mod)\n+        item_or_macro(p, stop_on_r_curly)\n     }\n }\n \n-pub(super) enum ItemFlavor {\n-    Mod,\n-    Trait,\n-}\n-\n pub(super) const ITEM_RECOVERY_SET: TokenSet = token_set![\n     FN_KW, STRUCT_KW, ENUM_KW, IMPL_KW, TRAIT_KW, CONST_KW, STATIC_KW, LET_KW, MOD_KW, PUB_KW,\n     CRATE_KW, USE_KW, MACRO_KW\n ];\n \n-pub(super) fn item_or_macro(p: &mut Parser, stop_on_r_curly: bool, flavor: ItemFlavor) {\n+pub(super) fn item_or_macro(p: &mut Parser, stop_on_r_curly: bool) {\n     let m = p.start();\n     attributes::outer_attributes(p);\n-    let m = match maybe_item(p, m, flavor) {\n+    let m = match maybe_item(p, m) {\n         Ok(()) => {\n             if p.at(T![;]) {\n                 p.err_and_bump(\n@@ -76,7 +71,7 @@ pub(super) fn item_or_macro(p: &mut Parser, stop_on_r_curly: bool, flavor: ItemF\n     }\n }\n \n-pub(super) fn maybe_item(p: &mut Parser, m: Marker, flavor: ItemFlavor) -> Result<(), Marker> {\n+pub(super) fn maybe_item(p: &mut Parser, m: Marker) -> Result<(), Marker> {\n     // test_err pub_expr\n     // fn foo() { pub 92; }\n     let has_visibility = opt_visibility(p);\n@@ -114,38 +109,29 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker, flavor: ItemFlavor) -> Resul\n         has_mods = true;\n     }\n \n-    if p.at(IDENT)\n-        && p.at_contextual_kw(\"default\")\n-        && (match p.nth(1) {\n-            T![impl] => true,\n+    // test default_item\n+    // default impl T for Foo {}\n+    if p.at(IDENT) && p.at_contextual_kw(\"default\") {\n+        match p.nth(1) {\n+            T![fn] | T![type] | T![const] | T![impl] => {\n+                p.bump_remap(T![default]);\n+                has_mods = true;\n+            }\n             T![unsafe] => {\n-                // test default_unsafe_impl\n-                // default unsafe impl Foo {}\n-\n-                // test default_unsafe_fn\n-                // impl T for Foo {\n+                // test default_unsafe_item\n+                // default unsafe impl T for Foo {\n                 //     default unsafe fn foo() {}\n                 // }\n-                if p.nth(2) == T![impl] || p.nth(2) == T![fn] {\n+                if matches!(p.nth(2), T![impl] | T![fn]) {\n                     p.bump_remap(T![default]);\n                     p.bump(T![unsafe]);\n                     has_mods = true;\n                 }\n-                false\n-            }\n-            T![fn] | T![type] | T![const] => {\n-                if let ItemFlavor::Mod = flavor {\n-                    true\n-                } else {\n-                    false\n-                }\n             }\n-            _ => false,\n-        })\n-    {\n-        p.bump_remap(T![default]);\n-        has_mods = true;\n+            _ => (),\n+        }\n     }\n+\n     if p.at(IDENT) && p.at_contextual_kw(\"existential\") && p.nth(1) == T![type] {\n         p.bump_remap(T![existential]);\n         has_mods = true;"}, {"sha": "751ce65f2dc99dee7da126a0db2da3648b51f07e", "filename": "crates/ra_parser/src/grammar/items/traits.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs?ref=f73a6419d43b21d07b7ee5d3804bdd586ee8036f", "patch": "@@ -47,7 +47,7 @@ pub(crate) fn trait_item_list(p: &mut Parser) {\n             error_block(p, \"expected an item\");\n             continue;\n         }\n-        item_or_macro(p, true, ItemFlavor::Trait);\n+        item_or_macro(p, true);\n     }\n     p.expect(T!['}']);\n     m.complete(p, ASSOC_ITEM_LIST);\n@@ -104,7 +104,7 @@ pub(crate) fn impl_item_list(p: &mut Parser) {\n             error_block(p, \"expected an item\");\n             continue;\n         }\n-        item_or_macro(p, true, ItemFlavor::Mod);\n+        item_or_macro(p, true);\n     }\n     p.expect(T!['}']);\n     m.complete(p, ASSOC_ITEM_LIST);"}, {"sha": "51ad2a846fadef0e193f9d85719c729cb4fd116f", "filename": "crates/ra_syntax/test_data/parser/err/0043_default_const.rast", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0043_default_const.rast", "raw_url": "https://github.com/rust-lang/rust/raw/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0043_default_const.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0043_default_const.rast?ref=4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "patch": "@@ -1,40 +0,0 @@\n-SOURCE_FILE@0..39\n-  TRAIT@0..38\n-    TRAIT_KW@0..5 \"trait\"\n-    WHITESPACE@5..6 \" \"\n-    NAME@6..7\n-      IDENT@6..7 \"T\"\n-    WHITESPACE@7..8 \" \"\n-    ASSOC_ITEM_LIST@8..38\n-      L_CURLY@8..9 \"{\"\n-      WHITESPACE@9..12 \"\\n  \"\n-      MACRO_CALL@12..19\n-        PATH@12..19\n-          PATH_SEGMENT@12..19\n-            NAME_REF@12..19\n-              IDENT@12..19 \"default\"\n-      WHITESPACE@19..20 \" \"\n-      CONST@20..36\n-        CONST_KW@20..25 \"const\"\n-        WHITESPACE@25..26 \" \"\n-        NAME@26..27\n-          IDENT@26..27 \"f\"\n-        COLON@27..28 \":\"\n-        WHITESPACE@28..29 \" \"\n-        PATH_TYPE@29..31\n-          PATH@29..31\n-            PATH_SEGMENT@29..31\n-              NAME_REF@29..31\n-                IDENT@29..31 \"u8\"\n-        WHITESPACE@31..32 \" \"\n-        EQ@32..33 \"=\"\n-        WHITESPACE@33..34 \" \"\n-        LITERAL@34..35\n-          INT_NUMBER@34..35 \"0\"\n-        SEMICOLON@35..36 \";\"\n-      WHITESPACE@36..37 \"\\n\"\n-      R_CURLY@37..38 \"}\"\n-  WHITESPACE@38..39 \"\\n\"\n-error 19..19: expected BANG\n-error 19..19: expected `{`, `[`, `(`\n-error 19..19: expected SEMICOLON"}, {"sha": "80f15474a5d0dcc39ba6dd4ccee087b96edbf172", "filename": "crates/ra_syntax/test_data/parser/err/0043_default_const.rs", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0043_default_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0043_default_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0043_default_const.rs?ref=4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "patch": "@@ -1,3 +0,0 @@\n-trait T {\n-  default const f: u8 = 0;\n-}"}, {"sha": "acd72094b95a27e10b855df56ea19453fcbfeda7", "filename": "crates/ra_syntax/test_data/parser/inline/err/0014_default_fn_type.rast", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.rast?ref=4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "patch": "@@ -1,58 +0,0 @@\n-SOURCE_FILE@0..62\n-  TRAIT@0..61\n-    TRAIT_KW@0..5 \"trait\"\n-    WHITESPACE@5..6 \" \"\n-    NAME@6..7\n-      IDENT@6..7 \"T\"\n-    WHITESPACE@7..8 \" \"\n-    ASSOC_ITEM_LIST@8..61\n-      L_CURLY@8..9 \"{\"\n-      WHITESPACE@9..14 \"\\n    \"\n-      MACRO_CALL@14..21\n-        PATH@14..21\n-          PATH_SEGMENT@14..21\n-            NAME_REF@14..21\n-              IDENT@14..21 \"default\"\n-      WHITESPACE@21..22 \" \"\n-      TYPE_ALIAS@22..35\n-        TYPE_KW@22..26 \"type\"\n-        WHITESPACE@26..27 \" \"\n-        NAME@27..28\n-          IDENT@27..28 \"T\"\n-        WHITESPACE@28..29 \" \"\n-        EQ@29..30 \"=\"\n-        WHITESPACE@30..31 \" \"\n-        PATH_TYPE@31..34\n-          PATH@31..34\n-            PATH_SEGMENT@31..34\n-              NAME_REF@31..34\n-                IDENT@31..34 \"Bar\"\n-        SEMICOLON@34..35 \";\"\n-      WHITESPACE@35..40 \"\\n    \"\n-      MACRO_CALL@40..47\n-        PATH@40..47\n-          PATH_SEGMENT@40..47\n-            NAME_REF@40..47\n-              IDENT@40..47 \"default\"\n-      WHITESPACE@47..48 \" \"\n-      FN@48..59\n-        FN_KW@48..50 \"fn\"\n-        WHITESPACE@50..51 \" \"\n-        NAME@51..54\n-          IDENT@51..54 \"foo\"\n-        PARAM_LIST@54..56\n-          L_PAREN@54..55 \"(\"\n-          R_PAREN@55..56 \")\"\n-        WHITESPACE@56..57 \" \"\n-        BLOCK_EXPR@57..59\n-          L_CURLY@57..58 \"{\"\n-          R_CURLY@58..59 \"}\"\n-      WHITESPACE@59..60 \"\\n\"\n-      R_CURLY@60..61 \"}\"\n-  WHITESPACE@61..62 \"\\n\"\n-error 21..21: expected BANG\n-error 21..21: expected `{`, `[`, `(`\n-error 21..21: expected SEMICOLON\n-error 47..47: expected BANG\n-error 47..47: expected `{`, `[`, `(`\n-error 47..47: expected SEMICOLON"}, {"sha": "15ba8f4a85e4453298c3a60cb35535f106b572a1", "filename": "crates/ra_syntax/test_data/parser/inline/err/0014_default_fn_type.rs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.rs?ref=4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "patch": "@@ -1,4 +0,0 @@\n-trait T {\n-    default type T = Bar;\n-    default fn foo() {}\n-}"}, {"sha": "b8d26a53a5d24b34d47dc3b866e002b256f88edf", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0132_default_fn_type.rast", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0132_default_fn_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0132_default_fn_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0132_default_fn_type.rast?ref=4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "patch": "@@ -1,55 +0,0 @@\n-SOURCE_FILE@0..69\n-  IMPL@0..68\n-    IMPL_KW@0..4 \"impl\"\n-    WHITESPACE@4..5 \" \"\n-    PATH_TYPE@5..6\n-      PATH@5..6\n-        PATH_SEGMENT@5..6\n-          NAME_REF@5..6\n-            IDENT@5..6 \"T\"\n-    WHITESPACE@6..7 \" \"\n-    FOR_KW@7..10 \"for\"\n-    WHITESPACE@10..11 \" \"\n-    PATH_TYPE@11..14\n-      PATH@11..14\n-        PATH_SEGMENT@11..14\n-          NAME_REF@11..14\n-            IDENT@11..14 \"Foo\"\n-    WHITESPACE@14..15 \" \"\n-    ASSOC_ITEM_LIST@15..68\n-      L_CURLY@15..16 \"{\"\n-      WHITESPACE@16..21 \"\\n    \"\n-      TYPE_ALIAS@21..42\n-        DEFAULT_KW@21..28 \"default\"\n-        WHITESPACE@28..29 \" \"\n-        TYPE_KW@29..33 \"type\"\n-        WHITESPACE@33..34 \" \"\n-        NAME@34..35\n-          IDENT@34..35 \"T\"\n-        WHITESPACE@35..36 \" \"\n-        EQ@36..37 \"=\"\n-        WHITESPACE@37..38 \" \"\n-        PATH_TYPE@38..41\n-          PATH@38..41\n-            PATH_SEGMENT@38..41\n-              NAME_REF@38..41\n-                IDENT@38..41 \"Bar\"\n-        SEMICOLON@41..42 \";\"\n-      WHITESPACE@42..47 \"\\n    \"\n-      FN@47..66\n-        DEFAULT_KW@47..54 \"default\"\n-        WHITESPACE@54..55 \" \"\n-        FN_KW@55..57 \"fn\"\n-        WHITESPACE@57..58 \" \"\n-        NAME@58..61\n-          IDENT@58..61 \"foo\"\n-        PARAM_LIST@61..63\n-          L_PAREN@61..62 \"(\"\n-          R_PAREN@62..63 \")\"\n-        WHITESPACE@63..64 \" \"\n-        BLOCK_EXPR@64..66\n-          L_CURLY@64..65 \"{\"\n-          R_CURLY@65..66 \"}\"\n-      WHITESPACE@66..67 \"\\n\"\n-      R_CURLY@67..68 \"}\"\n-  WHITESPACE@68..69 \"\\n\""}, {"sha": "8f5d6111399c92e5372f418883b2abc907340136", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0132_default_fn_type.rs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0132_default_fn_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0132_default_fn_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0132_default_fn_type.rs?ref=4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "patch": "@@ -1,4 +0,0 @@\n-impl T for Foo {\n-    default type T = Bar;\n-    default fn foo() {}\n-}"}, {"sha": "1269621dc2da6f0af8302485d70337de7bbaf510", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0163_default_unsafe_fn.rast", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0163_default_unsafe_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0163_default_unsafe_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0163_default_unsafe_fn.rast?ref=4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "patch": "@@ -1,40 +0,0 @@\n-SOURCE_FILE@0..50\n-  IMPL@0..49\n-    IMPL_KW@0..4 \"impl\"\n-    WHITESPACE@4..5 \" \"\n-    PATH_TYPE@5..6\n-      PATH@5..6\n-        PATH_SEGMENT@5..6\n-          NAME_REF@5..6\n-            IDENT@5..6 \"T\"\n-    WHITESPACE@6..7 \" \"\n-    FOR_KW@7..10 \"for\"\n-    WHITESPACE@10..11 \" \"\n-    PATH_TYPE@11..14\n-      PATH@11..14\n-        PATH_SEGMENT@11..14\n-          NAME_REF@11..14\n-            IDENT@11..14 \"Foo\"\n-    WHITESPACE@14..15 \" \"\n-    ASSOC_ITEM_LIST@15..49\n-      L_CURLY@15..16 \"{\"\n-      WHITESPACE@16..21 \"\\n    \"\n-      FN@21..47\n-        DEFAULT_KW@21..28 \"default\"\n-        WHITESPACE@28..29 \" \"\n-        UNSAFE_KW@29..35 \"unsafe\"\n-        WHITESPACE@35..36 \" \"\n-        FN_KW@36..38 \"fn\"\n-        WHITESPACE@38..39 \" \"\n-        NAME@39..42\n-          IDENT@39..42 \"foo\"\n-        PARAM_LIST@42..44\n-          L_PAREN@42..43 \"(\"\n-          R_PAREN@43..44 \")\"\n-        WHITESPACE@44..45 \" \"\n-        BLOCK_EXPR@45..47\n-          L_CURLY@45..46 \"{\"\n-          R_CURLY@46..47 \"}\"\n-      WHITESPACE@47..48 \"\\n\"\n-      R_CURLY@48..49 \"}\"\n-  WHITESPACE@49..50 \"\\n\""}, {"sha": "6bfe925af256ce68c45edbc9213be5967ade7f64", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0163_default_unsafe_impl.rast", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0163_default_unsafe_impl.rast", "raw_url": "https://github.com/rust-lang/rust/raw/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0163_default_unsafe_impl.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0163_default_unsafe_impl.rast?ref=4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "patch": "@@ -1,18 +0,0 @@\n-SOURCE_FILE@0..27\n-  IMPL@0..26\n-    DEFAULT_KW@0..7 \"default\"\n-    WHITESPACE@7..8 \" \"\n-    UNSAFE_KW@8..14 \"unsafe\"\n-    WHITESPACE@14..15 \" \"\n-    IMPL_KW@15..19 \"impl\"\n-    WHITESPACE@19..20 \" \"\n-    PATH_TYPE@20..23\n-      PATH@20..23\n-        PATH_SEGMENT@20..23\n-          NAME_REF@20..23\n-            IDENT@20..23 \"Foo\"\n-    WHITESPACE@23..24 \" \"\n-    ASSOC_ITEM_LIST@24..26\n-      L_CURLY@24..25 \"{\"\n-      R_CURLY@25..26 \"}\"\n-  WHITESPACE@26..27 \"\\n\""}, {"sha": "ba0998ff4d997263ff4cb8a00a5620c61144c888", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0163_default_unsafe_impl.rs", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0163_default_unsafe_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0163_default_unsafe_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0163_default_unsafe_impl.rs?ref=4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "patch": "@@ -1 +0,0 @@\n-default unsafe impl Foo {}"}, {"sha": "f2e2014605a8265d2b0c982e3cd0ed8036a8c24a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0163_default_unsafe_item.rast", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0163_default_unsafe_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0163_default_unsafe_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0163_default_unsafe_item.rast?ref=f73a6419d43b21d07b7ee5d3804bdd586ee8036f", "patch": "@@ -0,0 +1,44 @@\n+SOURCE_FILE@0..65\n+  IMPL@0..64\n+    DEFAULT_KW@0..7 \"default\"\n+    WHITESPACE@7..8 \" \"\n+    UNSAFE_KW@8..14 \"unsafe\"\n+    WHITESPACE@14..15 \" \"\n+    IMPL_KW@15..19 \"impl\"\n+    WHITESPACE@19..20 \" \"\n+    PATH_TYPE@20..21\n+      PATH@20..21\n+        PATH_SEGMENT@20..21\n+          NAME_REF@20..21\n+            IDENT@20..21 \"T\"\n+    WHITESPACE@21..22 \" \"\n+    FOR_KW@22..25 \"for\"\n+    WHITESPACE@25..26 \" \"\n+    PATH_TYPE@26..29\n+      PATH@26..29\n+        PATH_SEGMENT@26..29\n+          NAME_REF@26..29\n+            IDENT@26..29 \"Foo\"\n+    WHITESPACE@29..30 \" \"\n+    ASSOC_ITEM_LIST@30..64\n+      L_CURLY@30..31 \"{\"\n+      WHITESPACE@31..36 \"\\n    \"\n+      FN@36..62\n+        DEFAULT_KW@36..43 \"default\"\n+        WHITESPACE@43..44 \" \"\n+        UNSAFE_KW@44..50 \"unsafe\"\n+        WHITESPACE@50..51 \" \"\n+        FN_KW@51..53 \"fn\"\n+        WHITESPACE@53..54 \" \"\n+        NAME@54..57\n+          IDENT@54..57 \"foo\"\n+        PARAM_LIST@57..59\n+          L_PAREN@57..58 \"(\"\n+          R_PAREN@58..59 \")\"\n+        WHITESPACE@59..60 \" \"\n+        BLOCK_EXPR@60..62\n+          L_CURLY@60..61 \"{\"\n+          R_CURLY@61..62 \"}\"\n+      WHITESPACE@62..63 \"\\n\"\n+      R_CURLY@63..64 \"}\"\n+  WHITESPACE@64..65 \"\\n\""}, {"sha": "96340f84ab30d9d9445aef91dfd72367f436f8a6", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0163_default_unsafe_item.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0163_default_unsafe_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0163_default_unsafe_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0163_default_unsafe_item.rs?ref=f73a6419d43b21d07b7ee5d3804bdd586ee8036f", "patch": "@@ -1,3 +1,3 @@\n-impl T for Foo {\n+default unsafe impl T for Foo {\n     default unsafe fn foo() {}\n }", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0163_default_unsafe_fn.rs"}, {"sha": "9282772f34d6dd1e8dfa33760aece1bfd1fde130", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0164_default_item.rast", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0164_default_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0164_default_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0164_default_item.rast?ref=f73a6419d43b21d07b7ee5d3804bdd586ee8036f", "patch": "@@ -0,0 +1,24 @@\n+SOURCE_FILE@0..26\n+  IMPL@0..25\n+    DEFAULT_KW@0..7 \"default\"\n+    WHITESPACE@7..8 \" \"\n+    IMPL_KW@8..12 \"impl\"\n+    WHITESPACE@12..13 \" \"\n+    PATH_TYPE@13..14\n+      PATH@13..14\n+        PATH_SEGMENT@13..14\n+          NAME_REF@13..14\n+            IDENT@13..14 \"T\"\n+    WHITESPACE@14..15 \" \"\n+    FOR_KW@15..18 \"for\"\n+    WHITESPACE@18..19 \" \"\n+    PATH_TYPE@19..22\n+      PATH@19..22\n+        PATH_SEGMENT@19..22\n+          NAME_REF@19..22\n+            IDENT@19..22 \"Foo\"\n+    WHITESPACE@22..23 \" \"\n+    ASSOC_ITEM_LIST@23..25\n+      L_CURLY@23..24 \"{\"\n+      R_CURLY@24..25 \"}\"\n+  WHITESPACE@25..26 \"\\n\""}, {"sha": "a6836cbd577c65254a9f940aebd316b239c60896", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0164_default_item.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0164_default_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0164_default_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0164_default_item.rs?ref=f73a6419d43b21d07b7ee5d3804bdd586ee8036f", "patch": "@@ -0,0 +1 @@\n+default impl T for Foo {}"}, {"sha": "6246a31a664d5fee2efaf1a2ebdd0e898a4098db", "filename": "crates/ra_syntax/test_data/parser/ok/0066_default_const.rast", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0066_default_const.rast", "raw_url": "https://github.com/rust-lang/rust/raw/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0066_default_const.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0066_default_const.rast?ref=4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "patch": "@@ -1,44 +0,0 @@\n-SOURCE_FILE@0..46\n-  IMPL@0..45\n-    IMPL_KW@0..4 \"impl\"\n-    WHITESPACE@4..5 \" \"\n-    PATH_TYPE@5..6\n-      PATH@5..6\n-        PATH_SEGMENT@5..6\n-          NAME_REF@5..6\n-            IDENT@5..6 \"T\"\n-    WHITESPACE@6..7 \" \"\n-    FOR_KW@7..10 \"for\"\n-    WHITESPACE@10..11 \" \"\n-    PATH_TYPE@11..14\n-      PATH@11..14\n-        PATH_SEGMENT@11..14\n-          NAME_REF@11..14\n-            IDENT@11..14 \"Foo\"\n-    WHITESPACE@14..15 \" \"\n-    ASSOC_ITEM_LIST@15..45\n-      L_CURLY@15..16 \"{\"\n-      WHITESPACE@16..19 \"\\n  \"\n-      CONST@19..43\n-        DEFAULT_KW@19..26 \"default\"\n-        WHITESPACE@26..27 \" \"\n-        CONST_KW@27..32 \"const\"\n-        WHITESPACE@32..33 \" \"\n-        NAME@33..34\n-          IDENT@33..34 \"f\"\n-        COLON@34..35 \":\"\n-        WHITESPACE@35..36 \" \"\n-        PATH_TYPE@36..38\n-          PATH@36..38\n-            PATH_SEGMENT@36..38\n-              NAME_REF@36..38\n-                IDENT@36..38 \"u8\"\n-        WHITESPACE@38..39 \" \"\n-        EQ@39..40 \"=\"\n-        WHITESPACE@40..41 \" \"\n-        LITERAL@41..42\n-          INT_NUMBER@41..42 \"0\"\n-        SEMICOLON@42..43 \";\"\n-      WHITESPACE@43..44 \"\\n\"\n-      R_CURLY@44..45 \"}\"\n-  WHITESPACE@45..46 \"\\n\""}, {"sha": "dfb3b92dca7969fc598249b48aa500a0c00444f5", "filename": "crates/ra_syntax/test_data/parser/ok/0066_default_const.rs", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0066_default_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0066_default_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0066_default_const.rs?ref=4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "patch": "@@ -1,3 +0,0 @@\n-impl T for Foo {\n-  default const f: u8 = 0;\n-}"}, {"sha": "e9b57ec3b3f0c33154cb3f75e430ab8de9a6d728", "filename": "crates/ra_syntax/test_data/parser/ok/0066_default_modifier.rast", "status": "added", "additions": 218, "deletions": 0, "changes": 218, "blob_url": "https://github.com/rust-lang/rust/blob/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0066_default_modifier.rast", "raw_url": "https://github.com/rust-lang/rust/raw/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0066_default_modifier.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0066_default_modifier.rast?ref=f73a6419d43b21d07b7ee5d3804bdd586ee8036f", "patch": "@@ -0,0 +1,218 @@\n+SOURCE_FILE@0..294\n+  TRAIT@0..113\n+    TRAIT_KW@0..5 \"trait\"\n+    WHITESPACE@5..6 \" \"\n+    NAME@6..7\n+      IDENT@6..7 \"T\"\n+    WHITESPACE@7..8 \" \"\n+    ASSOC_ITEM_LIST@8..113\n+      L_CURLY@8..9 \"{\"\n+      WHITESPACE@9..12 \"\\n  \"\n+      TYPE_ALIAS@12..33\n+        DEFAULT_KW@12..19 \"default\"\n+        WHITESPACE@19..20 \" \"\n+        TYPE_KW@20..24 \"type\"\n+        WHITESPACE@24..25 \" \"\n+        NAME@25..26\n+          IDENT@25..26 \"T\"\n+        WHITESPACE@26..27 \" \"\n+        EQ@27..28 \"=\"\n+        WHITESPACE@28..29 \" \"\n+        PATH_TYPE@29..32\n+          PATH@29..32\n+            PATH_SEGMENT@29..32\n+              NAME_REF@29..32\n+                IDENT@29..32 \"Bar\"\n+        SEMICOLON@32..33 \";\"\n+      WHITESPACE@33..36 \"\\n  \"\n+      CONST@36..60\n+        DEFAULT_KW@36..43 \"default\"\n+        WHITESPACE@43..44 \" \"\n+        CONST_KW@44..49 \"const\"\n+        WHITESPACE@49..50 \" \"\n+        NAME@50..51\n+          IDENT@50..51 \"f\"\n+        COLON@51..52 \":\"\n+        WHITESPACE@52..53 \" \"\n+        PATH_TYPE@53..55\n+          PATH@53..55\n+            PATH_SEGMENT@53..55\n+              NAME_REF@53..55\n+                IDENT@53..55 \"u8\"\n+        WHITESPACE@55..56 \" \"\n+        EQ@56..57 \"=\"\n+        WHITESPACE@57..58 \" \"\n+        LITERAL@58..59\n+          INT_NUMBER@58..59 \"0\"\n+        SEMICOLON@59..60 \";\"\n+      WHITESPACE@60..63 \"\\n  \"\n+      FN@63..82\n+        DEFAULT_KW@63..70 \"default\"\n+        WHITESPACE@70..71 \" \"\n+        FN_KW@71..73 \"fn\"\n+        WHITESPACE@73..74 \" \"\n+        NAME@74..77\n+          IDENT@74..77 \"foo\"\n+        PARAM_LIST@77..79\n+          L_PAREN@77..78 \"(\"\n+          R_PAREN@78..79 \")\"\n+        WHITESPACE@79..80 \" \"\n+        BLOCK_EXPR@80..82\n+          L_CURLY@80..81 \"{\"\n+          R_CURLY@81..82 \"}\"\n+      WHITESPACE@82..85 \"\\n  \"\n+      FN@85..111\n+        DEFAULT_KW@85..92 \"default\"\n+        WHITESPACE@92..93 \" \"\n+        UNSAFE_KW@93..99 \"unsafe\"\n+        WHITESPACE@99..100 \" \"\n+        FN_KW@100..102 \"fn\"\n+        WHITESPACE@102..103 \" \"\n+        NAME@103..106\n+          IDENT@103..106 \"bar\"\n+        PARAM_LIST@106..108\n+          L_PAREN@106..107 \"(\"\n+          R_PAREN@107..108 \")\"\n+        WHITESPACE@108..109 \" \"\n+        BLOCK_EXPR@109..111\n+          L_CURLY@109..110 \"{\"\n+          R_CURLY@110..111 \"}\"\n+      WHITESPACE@111..112 \"\\n\"\n+      R_CURLY@112..113 \"}\"\n+  WHITESPACE@113..115 \"\\n\\n\"\n+  IMPL@115..235\n+    IMPL_KW@115..119 \"impl\"\n+    WHITESPACE@119..120 \" \"\n+    PATH_TYPE@120..121\n+      PATH@120..121\n+        PATH_SEGMENT@120..121\n+          NAME_REF@120..121\n+            IDENT@120..121 \"T\"\n+    WHITESPACE@121..122 \" \"\n+    FOR_KW@122..125 \"for\"\n+    WHITESPACE@125..126 \" \"\n+    PATH_TYPE@126..129\n+      PATH@126..129\n+        PATH_SEGMENT@126..129\n+          NAME_REF@126..129\n+            IDENT@126..129 \"Foo\"\n+    WHITESPACE@129..130 \" \"\n+    ASSOC_ITEM_LIST@130..235\n+      L_CURLY@130..131 \"{\"\n+      WHITESPACE@131..134 \"\\n  \"\n+      TYPE_ALIAS@134..155\n+        DEFAULT_KW@134..141 \"default\"\n+        WHITESPACE@141..142 \" \"\n+        TYPE_KW@142..146 \"type\"\n+        WHITESPACE@146..147 \" \"\n+        NAME@147..148\n+          IDENT@147..148 \"T\"\n+        WHITESPACE@148..149 \" \"\n+        EQ@149..150 \"=\"\n+        WHITESPACE@150..151 \" \"\n+        PATH_TYPE@151..154\n+          PATH@151..154\n+            PATH_SEGMENT@151..154\n+              NAME_REF@151..154\n+                IDENT@151..154 \"Bar\"\n+        SEMICOLON@154..155 \";\"\n+      WHITESPACE@155..158 \"\\n  \"\n+      CONST@158..182\n+        DEFAULT_KW@158..165 \"default\"\n+        WHITESPACE@165..166 \" \"\n+        CONST_KW@166..171 \"const\"\n+        WHITESPACE@171..172 \" \"\n+        NAME@172..173\n+          IDENT@172..173 \"f\"\n+        COLON@173..174 \":\"\n+        WHITESPACE@174..175 \" \"\n+        PATH_TYPE@175..177\n+          PATH@175..177\n+            PATH_SEGMENT@175..177\n+              NAME_REF@175..177\n+                IDENT@175..177 \"u8\"\n+        WHITESPACE@177..178 \" \"\n+        EQ@178..179 \"=\"\n+        WHITESPACE@179..180 \" \"\n+        LITERAL@180..181\n+          INT_NUMBER@180..181 \"0\"\n+        SEMICOLON@181..182 \";\"\n+      WHITESPACE@182..185 \"\\n  \"\n+      FN@185..204\n+        DEFAULT_KW@185..192 \"default\"\n+        WHITESPACE@192..193 \" \"\n+        FN_KW@193..195 \"fn\"\n+        WHITESPACE@195..196 \" \"\n+        NAME@196..199\n+          IDENT@196..199 \"foo\"\n+        PARAM_LIST@199..201\n+          L_PAREN@199..200 \"(\"\n+          R_PAREN@200..201 \")\"\n+        WHITESPACE@201..202 \" \"\n+        BLOCK_EXPR@202..204\n+          L_CURLY@202..203 \"{\"\n+          R_CURLY@203..204 \"}\"\n+      WHITESPACE@204..207 \"\\n  \"\n+      FN@207..233\n+        DEFAULT_KW@207..214 \"default\"\n+        WHITESPACE@214..215 \" \"\n+        UNSAFE_KW@215..221 \"unsafe\"\n+        WHITESPACE@221..222 \" \"\n+        FN_KW@222..224 \"fn\"\n+        WHITESPACE@224..225 \" \"\n+        NAME@225..228\n+          IDENT@225..228 \"bar\"\n+        PARAM_LIST@228..230\n+          L_PAREN@228..229 \"(\"\n+          R_PAREN@229..230 \")\"\n+        WHITESPACE@230..231 \" \"\n+        BLOCK_EXPR@231..233\n+          L_CURLY@231..232 \"{\"\n+          R_CURLY@232..233 \"}\"\n+      WHITESPACE@233..234 \"\\n\"\n+      R_CURLY@234..235 \"}\"\n+  WHITESPACE@235..237 \"\\n\\n\"\n+  IMPL@237..261\n+    DEFAULT_KW@237..244 \"default\"\n+    WHITESPACE@244..245 \" \"\n+    IMPL_KW@245..249 \"impl\"\n+    WHITESPACE@249..250 \" \"\n+    PATH_TYPE@250..251\n+      PATH@250..251\n+        PATH_SEGMENT@250..251\n+          NAME_REF@250..251\n+            IDENT@250..251 \"T\"\n+    WHITESPACE@251..252 \" \"\n+    FOR_KW@252..255 \"for\"\n+    WHITESPACE@255..256 \" \"\n+    TUPLE_TYPE@256..258\n+      L_PAREN@256..257 \"(\"\n+      R_PAREN@257..258 \")\"\n+    WHITESPACE@258..259 \" \"\n+    ASSOC_ITEM_LIST@259..261\n+      L_CURLY@259..260 \"{\"\n+      R_CURLY@260..261 \"}\"\n+  WHITESPACE@261..262 \"\\n\"\n+  IMPL@262..293\n+    DEFAULT_KW@262..269 \"default\"\n+    WHITESPACE@269..270 \" \"\n+    UNSAFE_KW@270..276 \"unsafe\"\n+    WHITESPACE@276..277 \" \"\n+    IMPL_KW@277..281 \"impl\"\n+    WHITESPACE@281..282 \" \"\n+    PATH_TYPE@282..283\n+      PATH@282..283\n+        PATH_SEGMENT@282..283\n+          NAME_REF@282..283\n+            IDENT@282..283 \"T\"\n+    WHITESPACE@283..284 \" \"\n+    FOR_KW@284..287 \"for\"\n+    WHITESPACE@287..288 \" \"\n+    TUPLE_TYPE@288..290\n+      L_PAREN@288..289 \"(\"\n+      R_PAREN@289..290 \")\"\n+    WHITESPACE@290..291 \" \"\n+    ASSOC_ITEM_LIST@291..293\n+      L_CURLY@291..292 \"{\"\n+      R_CURLY@292..293 \"}\"\n+  WHITESPACE@293..294 \"\\n\""}, {"sha": "e443e3495e3af091761a19651d11e75b85fa2b17", "filename": "crates/ra_syntax/test_data/parser/ok/0066_default_modifier.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0066_default_modifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f73a6419d43b21d07b7ee5d3804bdd586ee8036f/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0066_default_modifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0066_default_modifier.rs?ref=f73a6419d43b21d07b7ee5d3804bdd586ee8036f", "patch": "@@ -0,0 +1,16 @@\n+trait T {\n+  default type T = Bar;\n+  default const f: u8 = 0;\n+  default fn foo() {}\n+  default unsafe fn bar() {}\n+}\n+\n+impl T for Foo {\n+  default type T = Bar;\n+  default const f: u8 = 0;\n+  default fn foo() {}\n+  default unsafe fn bar() {}\n+}\n+\n+default impl T for () {}\n+default unsafe impl T for () {}"}]}