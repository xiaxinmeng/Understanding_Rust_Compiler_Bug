{"sha": "86e498c00ceb0f9b63379f7d45faad33453e1d6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2ZTQ5OGMwMGNlYjBmOWI2MzM3OWY3ZDQ1ZmFhZDMzNDUzZTFkNmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-28T15:00:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-28T15:00:30Z"}, "message": "Auto merge of #965 - RalfJung:rustup, r=RalfJung\n\nrustup", "tree": {"sha": "b808c1eeac302f29105efeff210cb9e2feaa732e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b808c1eeac302f29105efeff210cb9e2feaa732e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86e498c00ceb0f9b63379f7d45faad33453e1d6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86e498c00ceb0f9b63379f7d45faad33453e1d6b", "html_url": "https://github.com/rust-lang/rust/commit/86e498c00ceb0f9b63379f7d45faad33453e1d6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86e498c00ceb0f9b63379f7d45faad33453e1d6b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af1a19d90740d84e2bcb1c6b219123c1c30e9302", "url": "https://api.github.com/repos/rust-lang/rust/commits/af1a19d90740d84e2bcb1c6b219123c1c30e9302", "html_url": "https://github.com/rust-lang/rust/commit/af1a19d90740d84e2bcb1c6b219123c1c30e9302"}, {"sha": "63ea13ad0dc30769c674ea52172cafe4e0178bb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/63ea13ad0dc30769c674ea52172cafe4e0178bb1", "html_url": "https://github.com/rust-lang/rust/commit/63ea13ad0dc30769c674ea52172cafe4e0178bb1"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "08d4c1dc23426d9a9a3c4afc5e52a09d63870cf4", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86e498c00ceb0f9b63379f7d45faad33453e1d6b/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/86e498c00ceb0f9b63379f7d45faad33453e1d6b/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=86e498c00ceb0f9b63379f7d45faad33453e1d6b", "patch": "@@ -1 +1 @@\n-dc45735f29788924b9fc351d100e5bf3ebdca162\n+084beb83e0e87d673d5fabc844d28e8e8ae2ab4c"}, {"sha": "5f814fd1986222694bbecf3f393058c0f7c1bfc1", "filename": "src/bin/miri-rustc-tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86e498c00ceb0f9b63379f7d45faad33453e1d6b/src%2Fbin%2Fmiri-rustc-tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86e498c00ceb0f9b63379f7d45faad33453e1d6b/src%2Fbin%2Fmiri-rustc-tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri-rustc-tests.rs?ref=86e498c00ceb0f9b63379f7d45faad33453e1d6b", "patch": "@@ -46,7 +46,7 @@ impl rustc_driver::Callbacks for MiriCompilerCalls {\n                 struct Visitor<'tcx>(TyCtxt<'tcx>);\n                 impl<'tcx, 'hir> itemlikevisit::ItemLikeVisitor<'hir> for Visitor<'tcx> {\n                     fn visit_item(&mut self, i: &'hir hir::Item) {\n-                        if let hir::ItemKind::Fn(.., body_id) = i.node {\n+                        if let hir::ItemKind::Fn(.., body_id) = i.kind {\n                             if i.attrs.iter().any(|attr| attr.check_name(syntax::symbol::sym::test)) {\n                                 let config = MiriConfig {\n                                     validate: true,"}, {"sha": "1b7c082ec37ba10a78d2febfd7a67c734a6a594d", "filename": "src/eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86e498c00ceb0f9b63379f7d45faad33453e1d6b/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86e498c00ceb0f9b63379f7d45faad33453e1d6b/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=86e498c00ceb0f9b63379f7d45faad33453e1d6b", "patch": "@@ -63,7 +63,7 @@ pub fn create_ecx<'mir, 'tcx: 'mir>(\n         ty::ParamEnv::reveal_all(),\n         start_id,\n         ecx.tcx.mk_substs(\n-            ::std::iter::once(ty::subst::Kind::from(main_ret_ty)))\n+            ::std::iter::once(ty::subst::GenericArg::from(main_ret_ty)))\n         ).unwrap();\n     let start_mir = ecx.load_mir(start_instance.def, None)?;\n "}]}