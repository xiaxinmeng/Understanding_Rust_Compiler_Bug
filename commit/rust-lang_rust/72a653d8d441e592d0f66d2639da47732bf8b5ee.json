{"sha": "72a653d8d441e592d0f66d2639da47732bf8b5ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyYTY1M2Q4ZDQ0MWU1OTJkMGY2NmQyNjM5ZGE0NzczMmJmOGI1ZWU=", "commit": {"author": {"name": "Kit Freddura", "email": "kitfreddura@gmail.com", "date": "2016-10-02T20:49:29Z"}, "committer": {"name": "Kit Freddura", "email": "kitfreddura@gmail.com", "date": "2016-10-02T20:49:29Z"}, "message": "readded files", "tree": {"sha": "0e3caf6fac533f0ad4657ad2cebcc0fa2aded6f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e3caf6fac533f0ad4657ad2cebcc0fa2aded6f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72a653d8d441e592d0f66d2639da47732bf8b5ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72a653d8d441e592d0f66d2639da47732bf8b5ee", "html_url": "https://github.com/rust-lang/rust/commit/72a653d8d441e592d0f66d2639da47732bf8b5ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72a653d8d441e592d0f66d2639da47732bf8b5ee/comments", "author": {"login": "kitfre", "id": 10645601, "node_id": "MDQ6VXNlcjEwNjQ1NjAx", "avatar_url": "https://avatars.githubusercontent.com/u/10645601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kitfre", "html_url": "https://github.com/kitfre", "followers_url": "https://api.github.com/users/kitfre/followers", "following_url": "https://api.github.com/users/kitfre/following{/other_user}", "gists_url": "https://api.github.com/users/kitfre/gists{/gist_id}", "starred_url": "https://api.github.com/users/kitfre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kitfre/subscriptions", "organizations_url": "https://api.github.com/users/kitfre/orgs", "repos_url": "https://api.github.com/users/kitfre/repos", "events_url": "https://api.github.com/users/kitfre/events{/privacy}", "received_events_url": "https://api.github.com/users/kitfre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kitfre", "id": 10645601, "node_id": "MDQ6VXNlcjEwNjQ1NjAx", "avatar_url": "https://avatars.githubusercontent.com/u/10645601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kitfre", "html_url": "https://github.com/kitfre", "followers_url": "https://api.github.com/users/kitfre/followers", "following_url": "https://api.github.com/users/kitfre/following{/other_user}", "gists_url": "https://api.github.com/users/kitfre/gists{/gist_id}", "starred_url": "https://api.github.com/users/kitfre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kitfre/subscriptions", "organizations_url": "https://api.github.com/users/kitfre/orgs", "repos_url": "https://api.github.com/users/kitfre/repos", "events_url": "https://api.github.com/users/kitfre/events{/privacy}", "received_events_url": "https://api.github.com/users/kitfre/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c18dc13f6e9ac3adced57c2410aa7b0f6bbeeb63", "url": "https://api.github.com/repos/rust-lang/rust/commits/c18dc13f6e9ac3adced57c2410aa7b0f6bbeeb63", "html_url": "https://github.com/rust-lang/rust/commit/c18dc13f6e9ac3adced57c2410aa7b0f6bbeeb63"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "3676f473bcd0dc078be31cefdfb6b5aab38ef80f", "filename": "tests/compile-fail/ok_if_let.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/72a653d8d441e592d0f66d2639da47732bf8b5ee/tests%2Fcompile-fail%2Fok_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72a653d8d441e592d0f66d2639da47732bf8b5ee/tests%2Fcompile-fail%2Fok_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fok_if_let.rs?ref=72a653d8d441e592d0f66d2639da47732bf8b5ee", "patch": "@@ -0,0 +1,27 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+\n+#![deny(if_let_some_result)]\n+\n+fn str_to_int(x: &str) -> i32 {\n+    if let Some(y) = x.parse().ok() { \n+    //~^ERROR Matching on `Some` with `ok()` is redundant\n+        y\n+    } else {\n+        0\n+    }\n+}\n+\n+fn str_to_int_ok(x: &str) -> i32 {\n+    if let Ok(y) = x.parse() {\n+        y\n+    } else {\n+        0\n+    }\n+}\n+\n+fn main() {\n+    let y = str_to_int(\"1\");\n+    let z = str_to_int_ok(\"2\");\n+    println!(\"{}{}\", y, z);\n+}"}]}