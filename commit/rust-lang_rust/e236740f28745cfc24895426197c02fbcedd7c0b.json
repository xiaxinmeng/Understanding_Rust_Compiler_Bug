{"sha": "e236740f28745cfc24895426197c02fbcedd7c0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyMzY3NDBmMjg3NDVjZmMyNDg5NTQyNjE5N2MwMmZiY2VkZDdjMGI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-09-02T19:49:14Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-09-04T15:36:48Z"}, "message": "Fix `redundant_pattern` false positive", "tree": {"sha": "f0f8eb47428d07e750b9a8e3a68974bb7db29cf8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0f8eb47428d07e750b9a8e3a68974bb7db29cf8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e236740f28745cfc24895426197c02fbcedd7c0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e236740f28745cfc24895426197c02fbcedd7c0b", "html_url": "https://github.com/rust-lang/rust/commit/e236740f28745cfc24895426197c02fbcedd7c0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e236740f28745cfc24895426197c02fbcedd7c0b/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d2772207ebe378fece31bfdcff4f50eff24c19d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d2772207ebe378fece31bfdcff4f50eff24c19d", "html_url": "https://github.com/rust-lang/rust/commit/9d2772207ebe378fece31bfdcff4f50eff24c19d"}], "stats": {"total": 92, "additions": 48, "deletions": 44}, "files": [{"sha": "9d0a91c531828d5bfc31a1fbce77c7d969db3908", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e236740f28745cfc24895426197c02fbcedd7c0b/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e236740f28745cfc24895426197c02fbcedd7c0b/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=e236740f28745cfc24895426197c02fbcedd7c0b", "patch": "@@ -815,7 +815,6 @@ pub fn register_plugins(reg: &mut rustc_driver::plugin::Registry<'_>, conf: &Con\n         misc::CMP_OWNED,\n         misc::FLOAT_CMP,\n         misc::MODULO_ONE,\n-        misc::REDUNDANT_PATTERN,\n         misc::SHORT_CIRCUIT_STATEMENT,\n         misc::TOPLEVEL_REF_ARG,\n         misc::ZERO_PTR,\n@@ -824,6 +823,7 @@ pub fn register_plugins(reg: &mut rustc_driver::plugin::Registry<'_>, conf: &Con\n         misc_early::DUPLICATE_UNDERSCORE_ARGUMENT,\n         misc_early::MIXED_CASE_HEX_LITERALS,\n         misc_early::REDUNDANT_CLOSURE_CALL,\n+        misc_early::REDUNDANT_PATTERN,\n         misc_early::UNNEEDED_FIELD_PATTERN,\n         misc_early::ZERO_PREFIXED_LITERAL,\n         mut_reference::UNNECESSARY_MUT_PASSED,\n@@ -967,13 +967,13 @@ pub fn register_plugins(reg: &mut rustc_driver::plugin::Registry<'_>, conf: &Con\n         methods::STRING_EXTEND_CHARS,\n         methods::UNNECESSARY_FOLD,\n         methods::WRONG_SELF_CONVENTION,\n-        misc::REDUNDANT_PATTERN,\n         misc::TOPLEVEL_REF_ARG,\n         misc::ZERO_PTR,\n         misc_early::BUILTIN_TYPE_SHADOW,\n         misc_early::DOUBLE_NEG,\n         misc_early::DUPLICATE_UNDERSCORE_ARGUMENT,\n         misc_early::MIXED_CASE_HEX_LITERALS,\n+        misc_early::REDUNDANT_PATTERN,\n         misc_early::UNNEEDED_FIELD_PATTERN,\n         mut_reference::UNNECESSARY_MUT_PASSED,\n         neg_multiply::NEG_MULTIPLY,"}, {"sha": "a761f80b7939f5b0f2d4a823b6ef6d84edbeb714", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/e236740f28745cfc24895426197c02fbcedd7c0b/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e236740f28745cfc24895426197c02fbcedd7c0b/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=e236740f28745cfc24895426197c02fbcedd7c0b", "patch": "@@ -136,28 +136,6 @@ declare_clippy_lint! {\n     \"taking a number modulo 1, which always returns 0\"\n }\n \n-declare_clippy_lint! {\n-    /// **What it does:** Checks for patterns in the form `name @ _`.\n-    ///\n-    /// **Why is this bad?** It's almost always more readable to just use direct\n-    /// bindings.\n-    ///\n-    /// **Known problems:** None.\n-    ///\n-    /// **Example:**\n-    /// ```rust\n-    /// # let v = Some(\"abc\");\n-    ///\n-    /// match v {\n-    ///     Some(x) => (),\n-    ///     y @ _ => (), // easier written as `y`,\n-    /// }\n-    /// ```\n-    pub REDUNDANT_PATTERN,\n-    style,\n-    \"using `name @ _` in a pattern\"\n-}\n-\n declare_clippy_lint! {\n     /// **What it does:** Checks for the use of bindings with a single leading\n     /// underscore.\n@@ -247,7 +225,6 @@ declare_lint_pass!(MiscLints => [\n     FLOAT_CMP,\n     CMP_OWNED,\n     MODULO_ONE,\n-    REDUNDANT_PATTERN,\n     USED_UNDERSCORE_BINDING,\n     SHORT_CIRCUIT_STATEMENT,\n     ZERO_PTR,\n@@ -459,22 +436,6 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MiscLints {\n             );\n         }\n     }\n-\n-    fn check_pat(&mut self, cx: &LateContext<'a, 'tcx>, pat: &'tcx Pat) {\n-        if let PatKind::Binding(.., ident, Some(ref right)) = pat.node {\n-            if let PatKind::Wild = right.node {\n-                span_lint(\n-                    cx,\n-                    REDUNDANT_PATTERN,\n-                    pat.span,\n-                    &format!(\n-                        \"the `{} @ _` pattern can be written as just `{}`\",\n-                        ident.name, ident.name\n-                    ),\n-                );\n-            }\n-        }\n-    }\n }\n \n fn check_nan(cx: &LateContext<'_, '_>, path: &Path, expr: &Expr) {"}, {"sha": "f4a1a1e297fc2a3248ce9d6418f1841777339a8d", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/e236740f28745cfc24895426197c02fbcedd7c0b/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e236740f28745cfc24895426197c02fbcedd7c0b/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=e236740f28745cfc24895426197c02fbcedd7c0b", "patch": "@@ -173,6 +173,28 @@ declare_clippy_lint! {\n     \"shadowing a builtin type\"\n }\n \n+declare_clippy_lint! {\n+    /// **What it does:** Checks for patterns in the form `name @ _`.\n+    ///\n+    /// **Why is this bad?** It's almost always more readable to just use direct\n+    /// bindings.\n+    ///\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    /// ```rust\n+    /// # let v = Some(\"abc\");\n+    ///\n+    /// match v {\n+    ///     Some(x) => (),\n+    ///     y @ _ => (), // easier written as `y`,\n+    /// }\n+    /// ```\n+    pub REDUNDANT_PATTERN,\n+    style,\n+    \"using `name @ _` in a pattern\"\n+}\n+\n declare_lint_pass!(MiscEarlyLints => [\n     UNNEEDED_FIELD_PATTERN,\n     DUPLICATE_UNDERSCORE_ARGUMENT,\n@@ -181,7 +203,8 @@ declare_lint_pass!(MiscEarlyLints => [\n     MIXED_CASE_HEX_LITERALS,\n     UNSEPARATED_LITERAL_SUFFIX,\n     ZERO_PREFIXED_LITERAL,\n-    BUILTIN_TYPE_SHADOW\n+    BUILTIN_TYPE_SHADOW,\n+    REDUNDANT_PATTERN\n ]);\n \n // Used to find `return` statements or equivalents e.g., `?`\n@@ -286,6 +309,20 @@ impl EarlyLintPass for MiscEarlyLints {\n                 }\n             }\n         }\n+\n+        if let PatKind::Ident(_, ident, Some(ref right)) = pat.node {\n+            if let PatKind::Wild = right.node {\n+                span_lint(\n+                    cx,\n+                    REDUNDANT_PATTERN,\n+                    pat.span,\n+                    &format!(\n+                        \"the `{} @ _` pattern can be written as just `{}`\",\n+                        ident.name, ident.name,\n+                    ),\n+                );\n+            }\n+        }\n     }\n \n     fn check_fn(&mut self, cx: &EarlyContext<'_>, _: FnKind<'_>, decl: &FnDecl, _: Span, _: NodeId) {"}, {"sha": "223e6aa9acd78e793a4b5858c28d075291a88d67", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e236740f28745cfc24895426197c02fbcedd7c0b/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e236740f28745cfc24895426197c02fbcedd7c0b/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=e236740f28745cfc24895426197c02fbcedd7c0b", "patch": "@@ -1552,7 +1552,7 @@ pub const ALL_LINTS: [Lint; 313] = [\n         group: \"style\",\n         desc: \"using `name @ _` in a pattern\",\n         deprecation: None,\n-        module: \"misc\",\n+        module: \"misc_early\",\n     },\n     Lint {\n         name: \"redundant_pattern_matching\","}, {"sha": "f76be38a2fcc1a6caf957d8f18866e14ac61a1b8", "filename": "tests/ui/patterns.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e236740f28745cfc24895426197c02fbcedd7c0b/tests%2Fui%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e236740f28745cfc24895426197c02fbcedd7c0b/tests%2Fui%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpatterns.rs?ref=e236740f28745cfc24895426197c02fbcedd7c0b", "patch": "@@ -1,8 +1,10 @@\n #![allow(unused)]\n #![warn(clippy::all)]\n+#![feature(slice_patterns)]\n \n fn main() {\n     let v = Some(true);\n+    let s = [0, 1, 2, 3, 4];\n     match v {\n         Some(x) => (),\n         y @ _ => (),\n@@ -11,4 +13,8 @@ fn main() {\n         Some(x) => (),\n         y @ None => (), // no error\n     }\n+    match s {\n+        [x, inside @ .., y] => (), // no error\n+        [..] => (),\n+    }\n }"}, {"sha": "31dfe1cd11c53c892d4a26dfbb12f4c0db31bf8a", "filename": "tests/ui/patterns.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e236740f28745cfc24895426197c02fbcedd7c0b/tests%2Fui%2Fpatterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e236740f28745cfc24895426197c02fbcedd7c0b/tests%2Fui%2Fpatterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpatterns.stderr?ref=e236740f28745cfc24895426197c02fbcedd7c0b", "patch": "@@ -1,5 +1,5 @@\n error: the `y @ _` pattern can be written as just `y`\n-  --> $DIR/patterns.rs:8:9\n+  --> $DIR/patterns.rs:10:9\n    |\n LL |         y @ _ => (),\n    |         ^^^^^"}]}