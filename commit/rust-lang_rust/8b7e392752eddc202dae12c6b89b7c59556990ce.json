{"sha": "8b7e392752eddc202dae12c6b89b7c59556990ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiN2UzOTI3NTJlZGRjMjAyZGFlMTJjNmI4OWI3YzU5NTU2OTkwY2U=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-23T04:20:19Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-23T04:20:29Z"}, "message": "core::rt: Scheduler takes a WorkQueue\n\nThis will be for implementing a work-sharing strategy", "tree": {"sha": "a58058438d04ff672f6232a72489b4f0391a36d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a58058438d04ff672f6232a72489b4f0391a36d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b7e392752eddc202dae12c6b89b7c59556990ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b7e392752eddc202dae12c6b89b7c59556990ce", "html_url": "https://github.com/rust-lang/rust/commit/8b7e392752eddc202dae12c6b89b7c59556990ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b7e392752eddc202dae12c6b89b7c59556990ce/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41c21685dd149fb95dededfb4edaf87c6603c099", "url": "https://api.github.com/repos/rust-lang/rust/commits/41c21685dd149fb95dededfb4edaf87c6603c099", "html_url": "https://github.com/rust-lang/rust/commit/41c21685dd149fb95dededfb4edaf87c6603c099"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "b6abab38da791a782b0969ad0fcfd6dbb0eb4e10", "filename": "src/libcore/rt/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b7e392752eddc202dae12c6b89b7c59556990ce/src%2Flibcore%2Frt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b7e392752eddc202dae12c6b89b7c59556990ce/src%2Flibcore%2Frt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fmod.rs?ref=8b7e392752eddc202dae12c6b89b7c59556990ce", "patch": "@@ -145,12 +145,14 @@ pub mod thread_local_storage;\n pub fn start(_argc: int, _argv: **u8, crate_map: *u8, main: ~fn()) -> int {\n \n     use self::sched::{Scheduler, Coroutine};\n+    use self::work_queue::WorkQueue;\n     use self::uv::uvio::UvEventLoop;\n \n     init(crate_map);\n \n     let loop_ = ~UvEventLoop::new();\n-    let mut sched = ~Scheduler::new(loop_);\n+    let work_queue = WorkQueue::new();\n+    let mut sched = ~Scheduler::new(loop_, work_queue);\n     let main_task = ~Coroutine::new(&mut sched.stack_pool, main);\n \n     sched.enqueue_task(main_task);"}, {"sha": "f1670d4896a490416bb2223a8c49ae086379ae7f", "filename": "src/libcore/rt/sched.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b7e392752eddc202dae12c6b89b7c59556990ce/src%2Flibcore%2Frt%2Fsched.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b7e392752eddc202dae12c6b89b7c59556990ce/src%2Flibcore%2Frt%2Fsched.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fsched.rs?ref=8b7e392752eddc202dae12c6b89b7c59556990ce", "patch": "@@ -65,14 +65,14 @@ pub impl Scheduler {\n \n     fn in_task_context(&self) -> bool { self.current_task.is_some() }\n \n-    fn new(event_loop: ~EventLoopObject) -> Scheduler {\n+    fn new(event_loop: ~EventLoopObject, work_queue: WorkQueue<~Coroutine>) -> Scheduler {\n \n         // Lazily initialize the runtime TLS key\n         local_ptr::init_tls_key();\n \n         Scheduler {\n             event_loop: event_loop,\n-            work_queue: WorkQueue::new(),\n+            work_queue: work_queue,\n             stack_pool: StackPool::new(),\n             saved_context: Context::empty(),\n             current_task: None,"}, {"sha": "793a341bffbfbfbe67921ba5ebfdeaaae1ec738e", "filename": "src/libcore/rt/uv/uvio.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8b7e392752eddc202dae12c6b89b7c59556990ce/src%2Flibcore%2Frt%2Fuv%2Fuvio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b7e392752eddc202dae12c6b89b7c59556990ce/src%2Flibcore%2Frt%2Fuv%2Fuvio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fuv%2Fuvio.rs?ref=8b7e392752eddc202dae12c6b89b7c59556990ce", "patch": "@@ -24,6 +24,7 @@ use rt::sched::Scheduler;\n use rt::io::{standard_error, OtherIoError};\n use rt::tube::Tube;\n use rt::local::Local;\n+use rt::work_queue::WorkQueue;\n use unstable::sync::{UnsafeAtomicRcBox, AtomicInt};\n use unstable::intrinsics;\n \n@@ -45,7 +46,7 @@ pub impl UvEventLoop {\n \n     /// A convenience constructor\n     fn new_scheduler() -> Scheduler {\n-        Scheduler::new(~UvEventLoop::new())\n+        Scheduler::new(~UvEventLoop::new(), WorkQueue::new())\n     }\n }\n "}]}