{"sha": "e3072a24ada7a90880a288d4edd10db481d7b807", "node_id": "C_kwDOAAsO6NoAKGUzMDcyYTI0YWRhN2E5MDg4MGEyODhkNGVkZDEwZGI0ODFkN2I4MDc", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-11-26T00:18:16Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-04T20:54:30Z"}, "message": "Avoid InferCtxt::build in report_similar_impl_candidates", "tree": {"sha": "eb3dddc38b31ef5b5583535878f28161b4de1b0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb3dddc38b31ef5b5583535878f28161b4de1b0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3072a24ada7a90880a288d4edd10db481d7b807", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3072a24ada7a90880a288d4edd10db481d7b807", "html_url": "https://github.com/rust-lang/rust/commit/e3072a24ada7a90880a288d4edd10db481d7b807", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3072a24ada7a90880a288d4edd10db481d7b807/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e7e1b1f838b86701e5539d788b633da1f0f950a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e7e1b1f838b86701e5539d788b633da1f0f950a", "html_url": "https://github.com/rust-lang/rust/commit/3e7e1b1f838b86701e5539d788b633da1f0f950a"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "888f0f7c5b2966252a2eca686557bdded537cb26", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e3072a24ada7a90880a288d4edd10db481d7b807/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3072a24ada7a90880a288d4edd10db481d7b807/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=e3072a24ada7a90880a288d4edd10db481d7b807", "patch": "@@ -9,7 +9,7 @@ use super::{\n };\n use crate::infer::error_reporting::{TyCategory, TypeAnnotationNeeded as ErrorCode};\n use crate::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n-use crate::infer::{self, InferCtxt, TyCtxtInferExt};\n+use crate::infer::{self, InferCtxt};\n use crate::traits::query::evaluate_obligation::InferCtxtExt as _;\n use crate::traits::query::normalize::QueryNormalizeExt as _;\n use crate::traits::specialize::to_pretty_impl_header;\n@@ -1930,14 +1930,6 @@ impl<'tcx> InferCtxtPrivExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n             return report(normalized_impl_candidates, err);\n         }\n \n-        let normalize = |candidate| {\n-            let infcx = self.tcx.infer_ctxt().build();\n-            infcx\n-                .at(&ObligationCause::dummy(), ty::ParamEnv::empty())\n-                .query_normalize(candidate)\n-                .map_or(candidate, |normalized| normalized.value)\n-        };\n-\n         // Sort impl candidates so that ordering is consistent for UI tests.\n         // because the ordering of `impl_candidates` may not be deterministic:\n         // https://github.com/rust-lang/rust/pull/57475#issuecomment-455519507\n@@ -1947,7 +1939,11 @@ impl<'tcx> InferCtxtPrivExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n         let mut normalized_impl_candidates_and_similarities = impl_candidates\n             .into_iter()\n             .map(|ImplCandidate { trait_ref, similarity }| {\n-                let normalized = normalize(trait_ref);\n+                // FIXME(compiler-errors): This should be using `NormalizeExt::normalize`\n+                let normalized = self\n+                    .at(&ObligationCause::dummy(), ty::ParamEnv::empty())\n+                    .query_normalize(trait_ref)\n+                    .map_or(trait_ref, |normalized| normalized.value);\n                 (similarity, normalized)\n             })\n             .collect::<Vec<_>>();"}]}