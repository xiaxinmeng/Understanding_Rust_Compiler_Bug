{"sha": "b7b3498ce86d025ed84b0daa9a28588190ac444a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3YjM0OThjZTg2ZDAyNWVkODRiMGRhYTlhMjg1ODgxOTBhYzQ0NGE=", "commit": {"author": {"name": "Phlosioneer", "email": "mattmdrr2@gmail.com", "date": "2018-02-27T00:48:15Z"}, "committer": {"name": "Phlosioneer", "email": "mattmdrr2@gmail.com", "date": "2018-02-27T00:48:15Z"}, "message": "Fix doctest failure\n\nTried to be fancy with print statements.", "tree": {"sha": "8cac09a8eb579cf053965e9c7b57dcdc0dd435d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cac09a8eb579cf053965e9c7b57dcdc0dd435d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7b3498ce86d025ed84b0daa9a28588190ac444a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7b3498ce86d025ed84b0daa9a28588190ac444a", "html_url": "https://github.com/rust-lang/rust/commit/b7b3498ce86d025ed84b0daa9a28588190ac444a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7b3498ce86d025ed84b0daa9a28588190ac444a/comments", "author": {"login": "Phlosioneer", "id": 4657718, "node_id": "MDQ6VXNlcjQ2NTc3MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4657718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phlosioneer", "html_url": "https://github.com/Phlosioneer", "followers_url": "https://api.github.com/users/Phlosioneer/followers", "following_url": "https://api.github.com/users/Phlosioneer/following{/other_user}", "gists_url": "https://api.github.com/users/Phlosioneer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phlosioneer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phlosioneer/subscriptions", "organizations_url": "https://api.github.com/users/Phlosioneer/orgs", "repos_url": "https://api.github.com/users/Phlosioneer/repos", "events_url": "https://api.github.com/users/Phlosioneer/events{/privacy}", "received_events_url": "https://api.github.com/users/Phlosioneer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Phlosioneer", "id": 4657718, "node_id": "MDQ6VXNlcjQ2NTc3MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4657718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phlosioneer", "html_url": "https://github.com/Phlosioneer", "followers_url": "https://api.github.com/users/Phlosioneer/followers", "following_url": "https://api.github.com/users/Phlosioneer/following{/other_user}", "gists_url": "https://api.github.com/users/Phlosioneer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phlosioneer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phlosioneer/subscriptions", "organizations_url": "https://api.github.com/users/Phlosioneer/orgs", "repos_url": "https://api.github.com/users/Phlosioneer/repos", "events_url": "https://api.github.com/users/Phlosioneer/events{/privacy}", "received_events_url": "https://api.github.com/users/Phlosioneer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8904f935ab45a033c61e2136674a080046fd733", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8904f935ab45a033c61e2136674a080046fd733", "html_url": "https://github.com/rust-lang/rust/commit/e8904f935ab45a033c61e2136674a080046fd733"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "2b77ba39122790473235d7dcd4f6cfc532e72dfc", "filename": "src/libcore/option.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7b3498ce86d025ed84b0daa9a28588190ac444a/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7b3498ce86d025ed84b0daa9a28588190ac444a/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=b7b3498ce86d025ed84b0daa9a28588190ac444a", "patch": "@@ -237,7 +237,6 @@ impl<T> Option<T> {\n     /// // First, cast `Option<String>` to `Option<&String>` with `as_ref`,\n     /// // then consume *that* with `map`, leaving `text` on the stack.\n     /// let text_length: Option<usize> = text.as_ref().map(|s| s.len());\n-    /// println!(\"text length: {}\", text_length);\n     /// println!(\"still can print text: {:?}\", text);\n     /// ```\n     #[inline]"}]}