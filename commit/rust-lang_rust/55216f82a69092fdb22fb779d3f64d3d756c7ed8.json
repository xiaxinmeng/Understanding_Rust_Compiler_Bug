{"sha": "55216f82a69092fdb22fb779d3f64d3d756c7ed8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1MjE2ZjgyYTY5MDkyZmRiMjJmYjc3OWQzZjY0ZDNkNzU2YzdlZDg=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-02-01T12:34:07Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-02-12T08:55:29Z"}, "message": "Stabilize str::escape_* methods\n\nFCP: https://github.com/rust-lang/rust/issues/27791#issuecomment-376864727", "tree": {"sha": "a1a965a410a525205c689e1f3676d0d2d974481f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1a965a410a525205c689e1f3676d0d2d974481f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55216f82a69092fdb22fb779d3f64d3d756c7ed8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55216f82a69092fdb22fb779d3f64d3d756c7ed8", "html_url": "https://github.com/rust-lang/rust/commit/55216f82a69092fdb22fb779d3f64d3d756c7ed8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55216f82a69092fdb22fb779d3f64d3d756c7ed8/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a077804a3a58c93f690e382c86ccd4f1a8850af", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a077804a3a58c93f690e382c86ccd4f1a8850af", "html_url": "https://github.com/rust-lang/rust/commit/7a077804a3a58c93f690e382c86ccd4f1a8850af"}], "stats": {"total": 27, "additions": 7, "deletions": 20}, "files": [{"sha": "8daa088a21a26b7024df1b56903b7c3fccc9a712", "filename": "src/liballoc/str.rs", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/55216f82a69092fdb22fb779d3f64d3d756c7ed8/src%2Fliballoc%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55216f82a69092fdb22fb779d3f64d3d756c7ed8/src%2Fliballoc%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstr.rs?ref=55216f82a69092fdb22fb779d3f64d3d756c7ed8", "patch": "@@ -452,9 +452,7 @@ impl str {\n     /// escaped.\n     ///\n     /// [`char::escape_debug`]: primitive.char.html#method.escape_debug\n-    #[unstable(feature = \"str_escape\",\n-               reason = \"return type may change to be an iterator\",\n-               issue = \"27791\")]\n+    #[stable(feature = \"str_escape\", since = \"1.34.0\")]\n     pub fn escape_debug(&self) -> EscapeDebug {\n         let mut chars = self.chars();\n         EscapeDebug {\n@@ -469,19 +467,15 @@ impl str {\n     /// Escapes each char in `s` with [`char::escape_default`].\n     ///\n     /// [`char::escape_default`]: primitive.char.html#method.escape_default\n-    #[unstable(feature = \"str_escape\",\n-               reason = \"return type may change to be an iterator\",\n-               issue = \"27791\")]\n+    #[stable(feature = \"str_escape\", since = \"1.34.0\")]\n     pub fn escape_default(&self) -> EscapeDefault {\n         EscapeDefault { inner: self.chars().flat_map(CharEscapeDefault) }\n     }\n \n     /// Escapes each char in `s` with [`char::escape_unicode`].\n     ///\n     /// [`char::escape_unicode`]: primitive.char.html#method.escape_unicode\n-    #[unstable(feature = \"str_escape\",\n-               reason = \"return type may change to be an iterator\",\n-               issue = \"27791\")]\n+    #[stable(feature = \"str_escape\", since = \"1.34.0\")]\n     pub fn escape_unicode(&self) -> EscapeUnicode {\n         EscapeUnicode { inner: self.chars().flat_map(CharEscapeUnicode) }\n     }\n@@ -639,20 +633,20 @@ macro_rules! escape_types {\n             inner: $Inner: ty,\n         }\n     )+) => {$(\n-        #[unstable(feature = \"str_escape\", issue = \"27791\")]\n+        #[stable(feature = \"str_escape\", since = \"1.34.0\")]\n         #[derive(Clone, Debug)]\n         pub struct $Name<'a> {\n             inner: $Inner,\n         }\n \n-        #[unstable(feature = \"str_escape\", issue = \"27791\")]\n+        #[stable(feature = \"str_escape\", since = \"1.34.0\")]\n         impl<'a> fmt::Display for $Name<'a> {\n             fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n                 self.clone().try_for_each(|c| f.write_char(c))\n             }\n         }\n \n-        #[unstable(feature = \"str_escape\", issue = \"27791\")]\n+        #[stable(feature = \"str_escape\", since = \"1.34.0\")]\n         impl<'a> Iterator for $Name<'a> {\n             type Item = char;\n \n@@ -677,7 +671,7 @@ macro_rules! escape_types {\n             }\n         }\n \n-        #[unstable(feature = \"str_escape\", issue = \"27791\")]\n+        #[stable(feature = \"str_escape\", since = \"1.34.0\")]\n         impl<'a> FusedIterator for $Name<'a> {}\n     )+}\n }"}, {"sha": "2b63ac5c7d2f990707c31f476610206544396e98", "filename": "src/liballoc/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55216f82a69092fdb22fb779d3f64d3d756c7ed8/src%2Fliballoc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55216f82a69092fdb22fb779d3f64d3d756c7ed8/src%2Fliballoc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Flib.rs?ref=55216f82a69092fdb22fb779d3f64d3d756c7ed8", "patch": "@@ -5,7 +5,6 @@\n #![feature(pattern)]\n #![feature(repeat_generic_slice)]\n #![feature(slice_sort_by_cached_key)]\n-#![feature(str_escape)]\n #![feature(try_reserve)]\n #![feature(unboxed_closures)]\n #![feature(vecdeque_rotate)]"}, {"sha": "e54ebae42cf4ca767a3518eeff4c73caa3e0a08c", "filename": "src/libgraphviz/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55216f82a69092fdb22fb779d3f64d3d756c7ed8/src%2Flibgraphviz%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55216f82a69092fdb22fb779d3f64d3d756c7ed8/src%2Flibgraphviz%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgraphviz%2Flib.rs?ref=55216f82a69092fdb22fb779d3f64d3d756c7ed8", "patch": "@@ -277,7 +277,6 @@\n #![deny(rust_2018_idioms)]\n \n #![feature(nll)]\n-#![feature(str_escape)]\n \n use LabelText::*;\n "}, {"sha": "a56cdf623bf43fa8eca910f33fe68c71a3267052", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55216f82a69092fdb22fb779d3f64d3d756c7ed8/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55216f82a69092fdb22fb779d3f64d3d756c7ed8/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=55216f82a69092fdb22fb779d3f64d3d756c7ed8", "patch": "@@ -15,7 +15,6 @@\n #![feature(rustc_attrs)]\n #![feature(rustc_diagnostic_macros)]\n #![feature(slice_sort_by_cached_key)]\n-#![feature(str_escape)]\n #![feature(step_trait)]\n #![feature(try_trait)]\n #![feature(unicode_internals)]"}, {"sha": "0232c19e896ead39076f2adabc7ed79d8422667c", "filename": "src/libsyntax_ext/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55216f82a69092fdb22fb779d3f64d3d756c7ed8/src%2Flibsyntax_ext%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55216f82a69092fdb22fb779d3f64d3d756c7ed8/src%2Flibsyntax_ext%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Flib.rs?ref=55216f82a69092fdb22fb779d3f64d3d756c7ed8", "patch": "@@ -10,7 +10,6 @@\n #![feature(proc_macro_span)]\n #![feature(decl_macro)]\n #![feature(nll)]\n-#![feature(str_escape)]\n #![feature(rustc_diagnostic_macros)]\n \n #![recursion_limit=\"256\"]"}, {"sha": "44beb9dc1e534f4a9ead2a5d51807f7d7ce12ac6", "filename": "src/test/run-pass/threads-sendsync/sync-send-iterators-in-libcore.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/55216f82a69092fdb22fb779d3f64d3d756c7ed8/src%2Ftest%2Frun-pass%2Fthreads-sendsync%2Fsync-send-iterators-in-libcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55216f82a69092fdb22fb779d3f64d3d756c7ed8/src%2Ftest%2Frun-pass%2Fthreads-sendsync%2Fsync-send-iterators-in-libcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fthreads-sendsync%2Fsync-send-iterators-in-libcore.rs?ref=55216f82a69092fdb22fb779d3f64d3d756c7ed8", "patch": "@@ -2,9 +2,6 @@\n // pretty-expanded FIXME #23616\n \n #![allow(warnings)]\n-#![feature(iter_empty)]\n-#![feature(iter_once)]\n-#![feature(str_escape)]\n \n use std::iter::{empty, once, repeat};\n "}]}