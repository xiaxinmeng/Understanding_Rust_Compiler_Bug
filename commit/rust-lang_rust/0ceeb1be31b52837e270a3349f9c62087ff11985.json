{"sha": "0ceeb1be31b52837e270a3349f9c62087ff11985", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjZWViMWJlMzFiNTI4MzdlMjcwYTMzNDlmOWM2MjA4N2ZmMTE5ODU=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-07-03T09:31:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-03T09:31:03Z"}, "message": "Rollup merge of #51973 - estk:master, r=abonander\n\nMake Stdio handle UnwindSafe\n\nCloses  #51863\n\nThis is my first compiler PR. Thanks Niko for the mentor help!\n\nr? @nikomatsakis", "tree": {"sha": "24afda5e4e332fa30ca5e89b6cf4497cc1e382bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24afda5e4e332fa30ca5e89b6cf4497cc1e382bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ceeb1be31b52837e270a3349f9c62087ff11985", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbO0JXCRBK7hj4Ov3rIwAAdHIIAA7bVThTdSiQ6EEfUTdtS5Za\nwLof9Yaha0H44eMpbTyDPobSUaxhlPIGQk0MQ7U7T7M95mO3r2ariSnk9haRnWun\nlVovUSyagmlZ3bNtYcR8CkpJNOB6esV0EVwuq4+ERBFClWwOq+10q9W7FQCtZ9tA\nEtgnNkz8Etb7uV8DW2JXJfmO8zBjxmb7ulGfD59L09QX5SMnYiaXZ+6Rg1vczo5H\n54vFesijlfXvmi6tDJfPoOdqx8yATEPRfzCMRsbEVlH7UeC256hydm7yyBCFUAd7\nfQ9yJEPuUTbaAjKezQ9eqkedevObklYbY9FUFEumNMXr0h1/sKimY0m63esLu3Y=\n=hadK\n-----END PGP SIGNATURE-----\n", "payload": "tree 24afda5e4e332fa30ca5e89b6cf4497cc1e382bf\nparent bd0fe736beb9142073da68b62a0002b12e1f9bc7\nparent 9797665b286db3f34cc475560a68380012fadde7\nauthor Pietro Albini <pietro@pietroalbini.org> 1530610263 +0200\ncommitter GitHub <noreply@github.com> 1530610263 +0200\n\nRollup merge of #51973 - estk:master, r=abonander\n\nMake Stdio handle UnwindSafe\n\nCloses  #51863\n\nThis is my first compiler PR. Thanks Niko for the mentor help!\n\nr? @nikomatsakis\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ceeb1be31b52837e270a3349f9c62087ff11985", "html_url": "https://github.com/rust-lang/rust/commit/0ceeb1be31b52837e270a3349f9c62087ff11985", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ceeb1be31b52837e270a3349f9c62087ff11985/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd0fe736beb9142073da68b62a0002b12e1f9bc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd0fe736beb9142073da68b62a0002b12e1f9bc7", "html_url": "https://github.com/rust-lang/rust/commit/bd0fe736beb9142073da68b62a0002b12e1f9bc7"}, {"sha": "9797665b286db3f34cc475560a68380012fadde7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9797665b286db3f34cc475560a68380012fadde7", "html_url": "https://github.com/rust-lang/rust/commit/9797665b286db3f34cc475560a68380012fadde7"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "fce85a200ba2e98b39784f7279ffa7b5e3ea5ce1", "filename": "src/libstd/io/stdio.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0ceeb1be31b52837e270a3349f9c62087ff11985/src%2Flibstd%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ceeb1be31b52837e270a3349f9c62087ff11985/src%2Flibstd%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fstdio.rs?ref=0ceeb1be31b52837e270a3349f9c62087ff11985", "patch": "@@ -712,9 +712,31 @@ pub fn _eprint(args: fmt::Arguments) {\n \n #[cfg(test)]\n mod tests {\n+    use panic::{UnwindSafe, RefUnwindSafe};\n     use thread;\n     use super::*;\n \n+    #[test]\n+    fn stdout_unwind_safe() {\n+        assert_unwind_safe::<Stdout>();\n+    }\n+    #[test]\n+    fn stdoutlock_unwind_safe() {\n+        assert_unwind_safe::<StdoutLock>();\n+        assert_unwind_safe::<StdoutLock<'static>>();\n+    }\n+    #[test]\n+    fn stderr_unwind_safe() {\n+        assert_unwind_safe::<Stderr>();\n+    }\n+    #[test]\n+    fn stderrlock_unwind_safe() {\n+        assert_unwind_safe::<StderrLock>();\n+        assert_unwind_safe::<StderrLock<'static>>();\n+    }\n+\n+    fn assert_unwind_safe<T: UnwindSafe + RefUnwindSafe>() {}\n+\n     #[test]\n     #[cfg_attr(target_os = \"emscripten\", ignore)]\n     fn panic_doesnt_poison() {"}, {"sha": "071a3a25c7acdab8860b7ad0c577687c35ab1023", "filename": "src/libstd/sys_common/remutex.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0ceeb1be31b52837e270a3349f9c62087ff11985/src%2Flibstd%2Fsys_common%2Fremutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ceeb1be31b52837e270a3349f9c62087ff11985/src%2Flibstd%2Fsys_common%2Fremutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fremutex.rs?ref=0ceeb1be31b52837e270a3349f9c62087ff11985", "patch": "@@ -13,6 +13,7 @@ use marker;\n use ops::Deref;\n use sys_common::poison::{self, TryLockError, TryLockResult, LockResult};\n use sys::mutex as sys;\n+use panic::{UnwindSafe, RefUnwindSafe};\n \n /// A re-entrant mutual exclusion\n ///\n@@ -28,6 +29,9 @@ pub struct ReentrantMutex<T> {\n unsafe impl<T: Send> Send for ReentrantMutex<T> {}\n unsafe impl<T: Send> Sync for ReentrantMutex<T> {}\n \n+impl<T> UnwindSafe for ReentrantMutex<T> {}\n+impl<T> RefUnwindSafe for ReentrantMutex<T> {}\n+\n \n /// An RAII implementation of a \"scoped lock\" of a mutex. When this structure is\n /// dropped (falls out of scope), the lock will be unlocked."}]}