{"sha": "f9289c35fb0a6e1ddde9200423cdd7d5dafb0886", "node_id": "C_kwDOAAsO6NoAKGY5Mjg5YzM1ZmIwYTZlMWRkZGU5MjAwNDIzY2RkN2Q1ZGFmYjA4ODY", "commit": {"author": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2022-10-04T23:39:02Z"}, "committer": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2023-01-09T22:07:25Z"}, "message": "refactor: comment about lint location", "tree": {"sha": "5b668c9e2be3e2e0cd789e48ccc4b2b15fd43324", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b668c9e2be3e2e0cd789e48ccc4b2b15fd43324"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9289c35fb0a6e1ddde9200423cdd7d5dafb0886", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9289c35fb0a6e1ddde9200423cdd7d5dafb0886", "html_url": "https://github.com/rust-lang/rust/commit/f9289c35fb0a6e1ddde9200423cdd7d5dafb0886", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9289c35fb0a6e1ddde9200423cdd7d5dafb0886/comments", "author": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0614ec2c3184a025692fc06aacb0df50fba2a19", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0614ec2c3184a025692fc06aacb0df50fba2a19", "html_url": "https://github.com/rust-lang/rust/commit/a0614ec2c3184a025692fc06aacb0df50fba2a19"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "42deb455b0619781730fb766f44122bab5308d07", "filename": "compiler/rustc_lint/src/lints.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f9289c35fb0a6e1ddde9200423cdd7d5dafb0886/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9289c35fb0a6e1ddde9200423cdd7d5dafb0886/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flints.rs?ref=f9289c35fb0a6e1ddde9200423cdd7d5dafb0886", "patch": "@@ -6,6 +6,7 @@ use rustc_span::{symbol::Ident, Span, Symbol};\n \n use crate::LateContext;\n \n+// array_into_iter.rs\n #[derive(LintDiagnostic)]\n #[diag(lint_array_into_iter)]\n pub struct ArrayIntoIterDiag<'a> {\n@@ -32,6 +33,7 @@ pub enum ArrayIntoIterDiagSub {\n     },\n }\n \n+// enum_intrinsics_non_enums.rs\n #[derive(LintDiagnostic)]\n #[diag(lint_enum_intrinsics_mem_discriminant)]\n pub struct EnumIntrinsicsMemDiscriminate<'a> {\n@@ -47,6 +49,7 @@ pub struct EnumIntrinsicsMemVariant<'a> {\n     pub ty_param: Ty<'a>,\n }\n \n+// methods.rs\n #[derive(LintDiagnostic)]\n #[diag(lint_cstring_ptr)]\n #[note]\n@@ -57,6 +60,8 @@ pub struct CStringPtr {\n     #[label(unwrap_label)]\n     pub unwrap: Span,\n }\n+\n+// non_ascii_idents.rs\n #[derive(LintDiagnostic)]\n #[diag(lint_identifier_non_ascii_char)]\n pub struct IdentifierNonAsciiChar;\n@@ -83,6 +88,7 @@ pub struct MixedScriptConfusables {\n     pub includes: String,\n }\n \n+// non_fmt_panic.rs\n pub struct NonFmtPanicUnused {\n     pub count: usize,\n     pub suggestion: Option<Span>,\n@@ -126,6 +132,7 @@ pub struct NonFmtPanicBraces {\n     pub suggestion: Option<Span>,\n }\n \n+// nonstandard_style.rs\n #[derive(LintDiagnostic)]\n #[diag(lint_non_camel_case_type)]\n pub struct NonCamelCaseType<'a> {\n@@ -236,6 +243,7 @@ pub enum NonUpperCaseGlobalSub {\n     },\n }\n \n+// noop_method_call.rs\n #[derive(LintDiagnostic)]\n #[diag(lint_noop_method_call)]\n #[note]\n@@ -246,6 +254,7 @@ pub struct NoopMethodCallDiag<'a> {\n     pub label: Span,\n }\n \n+// pass_by_value.rs\n #[derive(LintDiagnostic)]\n #[diag(lint_pass_by_value)]\n pub struct PassByValueDiag {\n@@ -254,6 +263,7 @@ pub struct PassByValueDiag {\n     pub suggestion: Span,\n }\n \n+// redundant_semicolon.rs\n #[derive(LintDiagnostic)]\n #[diag(lint_redundant_semicolons)]\n pub struct RedundantSemicolonsDiag {\n@@ -262,6 +272,7 @@ pub struct RedundantSemicolonsDiag {\n     pub suggestion: Span,\n }\n \n+// traits.rs\n pub struct DropTraitConstraintsDiag<'a> {\n     pub predicate: Predicate<'a>,\n     pub tcx: TyCtxt<'a>,\n@@ -300,6 +311,7 @@ impl<'a> DecorateLint<'a, ()> for DropGlue<'_> {\n     }\n }\n \n+// types.rs\n #[derive(LintDiagnostic)]\n #[diag(lint_range_endpoint_out_of_range)]\n pub struct RangeEndpointOutOfRange<'a> {\n@@ -457,6 +469,7 @@ pub struct InvalidAtomicOrderingDiag {\n     pub fail_order_arg_span: Span,\n }\n \n+// unused.rs\n #[derive(LintDiagnostic)]\n #[diag(lint_unused_op)]\n pub struct UnusedOp<'a> {"}]}