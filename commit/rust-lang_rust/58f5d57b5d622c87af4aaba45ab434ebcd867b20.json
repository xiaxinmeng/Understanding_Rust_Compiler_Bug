{"sha": "58f5d57b5d622c87af4aaba45ab434ebcd867b20", "node_id": "C_kwDOAAsO6NoAKDU4ZjVkNTdiNWQ2MjJjODdhZjRhYWJhNDVhYjQzNGViY2Q4NjdiMjA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-06T07:35:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-06T07:35:26Z"}, "message": "Rollup merge of #103012 - chenyukang:fix-102806, r=davidtwco,compiler-errors\n\nSuggest use .. to fill in the rest of the fields of Struct\n\nFixes #102806", "tree": {"sha": "e33e2b4be37182e26e0b9101c6b2f4998efdc146", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e33e2b4be37182e26e0b9101c6b2f4998efdc146"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58f5d57b5d622c87af4aaba45ab434ebcd867b20", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjZ2O+CRBK7hj4Ov3rIwAA10EIAG1QpZHzXskzcnFDE9aptL7+\nyMH7P6lYTqnuIS7SW/nqjFlUyq/xIHYr0hpeCXxUxML/MYS9PsrTuOPoofKzZ6mn\n09F3VX5gKW82SCkdMKA1B/QXYs68xcR1p12/2HHsIObZOBI6TtRov8PrJJJY7Ywv\nwTv6Oz9bxDyqCKLCHtssUkSQstleEgQutZBKy5UKb2vJ47cDi5r0tEeQfTma/t9P\ndVT8HppdyJxupNE1gcSLuptMw4W9gH2fD3QCKn+xA6csxugBZ9IidlwA6ekVDsSB\ndH3FHAMmQtZ36vKnrPoSwSnMMtQWT/JQWQLVGKxGiJbVU/TO5vdsqeU90ztIzSA=\n=kHBC\n-----END PGP SIGNATURE-----\n", "payload": "tree e33e2b4be37182e26e0b9101c6b2f4998efdc146\nparent a4ab2e064306c2c3e5b1d2efe1d5c0e1a6e0346a\nparent 28d82ddfc22bcbcef2ade0a3c75e6711475a9098\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1667720126 +0100\ncommitter GitHub <noreply@github.com> 1667720126 +0100\n\nRollup merge of #103012 - chenyukang:fix-102806, r=davidtwco,compiler-errors\n\nSuggest use .. to fill in the rest of the fields of Struct\n\nFixes #102806\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58f5d57b5d622c87af4aaba45ab434ebcd867b20", "html_url": "https://github.com/rust-lang/rust/commit/58f5d57b5d622c87af4aaba45ab434ebcd867b20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58f5d57b5d622c87af4aaba45ab434ebcd867b20/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4ab2e064306c2c3e5b1d2efe1d5c0e1a6e0346a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4ab2e064306c2c3e5b1d2efe1d5c0e1a6e0346a", "html_url": "https://github.com/rust-lang/rust/commit/a4ab2e064306c2c3e5b1d2efe1d5c0e1a6e0346a"}, {"sha": "28d82ddfc22bcbcef2ade0a3c75e6711475a9098", "url": "https://api.github.com/repos/rust-lang/rust/commits/28d82ddfc22bcbcef2ade0a3c75e6711475a9098", "html_url": "https://github.com/rust-lang/rust/commit/28d82ddfc22bcbcef2ade0a3c75e6711475a9098"}], "stats": {"total": 102, "additions": 98, "deletions": 4}, "files": [{"sha": "455ff34f7247f3a8d632ac6e57c50c46094b91df", "filename": "compiler/rustc_error_messages/locales/en-US/parser.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/58f5d57b5d622c87af4aaba45ab434ebcd867b20/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/58f5d57b5d622c87af4aaba45ab434ebcd867b20/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl?ref=58f5d57b5d622c87af4aaba45ab434ebcd867b20", "patch": "@@ -112,6 +112,9 @@ parser_missing_semicolon_before_array = expected `;`, found `[`\n parser_invalid_block_macro_segment = cannot use a `block` macro fragment here\n     .label = the `block` fragment is within this context\n \n+parser_expect_dotdot_not_dotdotdot = expected `..`, found `...`\n+    .suggestion = use `..` to fill in the rest of the fields\n+\n parser_if_expression_missing_then_block = this `if` expression is missing a block after the condition\n     .add_then_block = add a block here\n     .condition_possibly_unfinished = this binary operation is possibly unfinished"}, {"sha": "0924c8537159c50322c6004836c271ee738dfea0", "filename": "compiler/rustc_parse/src/errors.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/58f5d57b5d622c87af4aaba45ab434ebcd867b20/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58f5d57b5d622c87af4aaba45ab434ebcd867b20/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs?ref=58f5d57b5d622c87af4aaba45ab434ebcd867b20", "patch": "@@ -368,6 +368,15 @@ pub(crate) struct MissingSemicolonBeforeArray {\n     pub semicolon: Span,\n }\n \n+#[derive(Diagnostic)]\n+#[diag(parser_expect_dotdot_not_dotdotdot)]\n+pub(crate) struct MissingDotDot {\n+    #[primary_span]\n+    pub token_span: Span,\n+    #[suggestion(applicability = \"maybe-incorrect\", code = \"..\", style = \"verbose\")]\n+    pub sugg_span: Span,\n+}\n+\n #[derive(Diagnostic)]\n #[diag(parser_invalid_block_macro_segment)]\n pub(crate) struct InvalidBlockMacroSegment {"}, {"sha": "4a1162b95998378494c7b6399ca3481a77593fc7", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/58f5d57b5d622c87af4aaba45ab434ebcd867b20/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58f5d57b5d622c87af4aaba45ab434ebcd867b20/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=58f5d57b5d622c87af4aaba45ab434ebcd867b20", "patch": "@@ -20,9 +20,9 @@ use crate::errors::{\n     InvalidNumLiteralSuffix, LabeledLoopInBreak, LeadingPlusNotSupported, LeftArrowOperator,\n     LifetimeInBorrowExpression, MacroInvocationWithQualifiedPath, MalformedLoopLabel,\n     MatchArmBodyWithoutBraces, MatchArmBodyWithoutBracesSugg, MissingCommaAfterMatchArm,\n-    MissingInInForLoop, MissingInInForLoopSub, MissingSemicolonBeforeArray, NoFieldsForFnCall,\n-    NotAsNegationOperator, NotAsNegationOperatorSub, OctalFloatLiteralNotSupported,\n-    OuterAttributeNotAllowedOnIfElse, ParenthesesWithStructFields,\n+    MissingDotDot, MissingInInForLoop, MissingInInForLoopSub, MissingSemicolonBeforeArray,\n+    NoFieldsForFnCall, NotAsNegationOperator, NotAsNegationOperatorSub,\n+    OctalFloatLiteralNotSupported, OuterAttributeNotAllowedOnIfElse, ParenthesesWithStructFields,\n     RequireColonAfterLabeledExpression, ShiftInterpretedAsGeneric, StructLiteralNotAllowedHere,\n     StructLiteralNotAllowedHereSugg, TildeAsUnaryOperator, UnexpectedTokenAfterLabel,\n     UnexpectedTokenAfterLabelSugg, WrapExpressionInParentheses,\n@@ -2880,7 +2880,7 @@ impl<'a> Parser<'a> {\n         };\n \n         while self.token != token::CloseDelim(close_delim) {\n-            if self.eat(&token::DotDot) {\n+            if self.eat(&token::DotDot) || self.recover_struct_field_dots(close_delim) {\n                 let exp_span = self.prev_token.span;\n                 // We permit `.. }` on the left-hand side of a destructuring assignment.\n                 if self.check(&token::CloseDelim(close_delim)) {\n@@ -3027,6 +3027,18 @@ impl<'a> Parser<'a> {\n         self.recover_stmt();\n     }\n \n+    fn recover_struct_field_dots(&mut self, close_delim: Delimiter) -> bool {\n+        if !self.look_ahead(1, |t| *t == token::CloseDelim(close_delim))\n+            && self.eat(&token::DotDotDot)\n+        {\n+            // recover from typo of `...`, suggest `..`\n+            let span = self.prev_token.span;\n+            self.sess.emit_err(MissingDotDot { token_span: span, sugg_span: span });\n+            return true;\n+        }\n+        false\n+    }\n+\n     /// Parses `ident (COLON expr)?`.\n     fn parse_expr_field(&mut self) -> PResult<'a, ExprField> {\n         let attrs = self.parse_outer_attributes()?;"}, {"sha": "ba297bdc9677b974ba82e250284b4ffc78e0c34e", "filename": "src/test/ui/parser/issue-102806.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/58f5d57b5d622c87af4aaba45ab434ebcd867b20/src%2Ftest%2Fui%2Fparser%2Fissue-102806.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58f5d57b5d622c87af4aaba45ab434ebcd867b20/src%2Ftest%2Fui%2Fparser%2Fissue-102806.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-102806.rs?ref=58f5d57b5d622c87af4aaba45ab434ebcd867b20", "patch": "@@ -0,0 +1,25 @@\n+#![allow(dead_code)]\n+\n+#[derive(Default)]\n+struct V3 {\n+    x: f32,\n+    y: f32,\n+    z: f32,\n+}\n+\n+fn pz(v: V3) {\n+    let _ = V3 { z: 0.0, ...v};\n+    //~^ ERROR expected `..`\n+\n+    let _ = V3 { z: 0.0, ...Default::default() };\n+    //~^ ERROR expected `..`\n+\n+    let _ = V3 { z: 0.0, ... };\n+    //~^ expected identifier\n+    //~| ERROR missing fields `x` and `y` in initializer of `V3`\n+\n+    let V3 { z: val, ... } = v;\n+    //~^ ERROR expected field pattern\n+}\n+\n+fn main() {}"}, {"sha": "6872b8bc0afec880c9f4e66f23ca63381d8fa5bf", "filename": "src/test/ui/parser/issue-102806.stderr", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/58f5d57b5d622c87af4aaba45ab434ebcd867b20/src%2Ftest%2Fui%2Fparser%2Fissue-102806.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58f5d57b5d622c87af4aaba45ab434ebcd867b20/src%2Ftest%2Fui%2Fparser%2Fissue-102806.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-102806.stderr?ref=58f5d57b5d622c87af4aaba45ab434ebcd867b20", "patch": "@@ -0,0 +1,45 @@\n+error: expected `..`, found `...`\n+  --> $DIR/issue-102806.rs:11:26\n+   |\n+LL |     let _ = V3 { z: 0.0, ...v};\n+   |                          ^^^\n+   |\n+help: use `..` to fill in the rest of the fields\n+   |\n+LL |     let _ = V3 { z: 0.0, ..v};\n+   |                          ~~\n+\n+error: expected `..`, found `...`\n+  --> $DIR/issue-102806.rs:14:26\n+   |\n+LL |     let _ = V3 { z: 0.0, ...Default::default() };\n+   |                          ^^^\n+   |\n+help: use `..` to fill in the rest of the fields\n+   |\n+LL |     let _ = V3 { z: 0.0, ..Default::default() };\n+   |                          ~~\n+\n+error: expected identifier, found `...`\n+  --> $DIR/issue-102806.rs:17:26\n+   |\n+LL |     let _ = V3 { z: 0.0, ... };\n+   |             --           ^^^ expected identifier\n+   |             |\n+   |             while parsing this struct\n+\n+error: expected field pattern, found `...`\n+  --> $DIR/issue-102806.rs:21:22\n+   |\n+LL |     let V3 { z: val, ... } = v;\n+   |                      ^^^ help: to omit remaining fields, use one fewer `.`: `..`\n+\n+error[E0063]: missing fields `x` and `y` in initializer of `V3`\n+  --> $DIR/issue-102806.rs:17:13\n+   |\n+LL |     let _ = V3 { z: 0.0, ... };\n+   |             ^^ missing `x` and `y`\n+\n+error: aborting due to 5 previous errors\n+\n+For more information about this error, try `rustc --explain E0063`."}]}