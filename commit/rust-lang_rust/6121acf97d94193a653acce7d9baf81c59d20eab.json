{"sha": "6121acf97d94193a653acce7d9baf81c59d20eab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxMjFhY2Y5N2Q5NDE5M2E2NTNhY2NlN2Q5YmFmODFjNTlkMjBlYWI=", "commit": {"author": {"name": "Ben Noordhuis", "email": "info@bnoordhuis.nl", "date": "2014-02-02T17:04:05Z"}, "committer": {"name": "Ben Noordhuis", "email": "info@bnoordhuis.nl", "date": "2014-02-02T18:55:41Z"}, "message": "libnative: fix epoll_event struct layout\n\nMake the definition of epoll_event use natural alignment on all\narchitectures except x86_64.\n\nBefore this commit, the struct was always 12 bytes big, which works okay\non x86 and x86_64 but not on ARM and MIPS, where it should be 16 bytes\nbig with the `data` field aligned on an 8 byte boundary.", "tree": {"sha": "fb230cb2d27ba160021b0c9e60960be54fffc4f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb230cb2d27ba160021b0c9e60960be54fffc4f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6121acf97d94193a653acce7d9baf81c59d20eab", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6121acf97d94193a653acce7d9baf81c59d20eab", "html_url": "https://github.com/rust-lang/rust/commit/6121acf97d94193a653acce7d9baf81c59d20eab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6121acf97d94193a653acce7d9baf81c59d20eab/comments", "author": {"login": "bnoordhuis", "id": 275871, "node_id": "MDQ6VXNlcjI3NTg3MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/275871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnoordhuis", "html_url": "https://github.com/bnoordhuis", "followers_url": "https://api.github.com/users/bnoordhuis/followers", "following_url": "https://api.github.com/users/bnoordhuis/following{/other_user}", "gists_url": "https://api.github.com/users/bnoordhuis/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnoordhuis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnoordhuis/subscriptions", "organizations_url": "https://api.github.com/users/bnoordhuis/orgs", "repos_url": "https://api.github.com/users/bnoordhuis/repos", "events_url": "https://api.github.com/users/bnoordhuis/events{/privacy}", "received_events_url": "https://api.github.com/users/bnoordhuis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bnoordhuis", "id": 275871, "node_id": "MDQ6VXNlcjI3NTg3MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/275871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnoordhuis", "html_url": "https://github.com/bnoordhuis", "followers_url": "https://api.github.com/users/bnoordhuis/followers", "following_url": "https://api.github.com/users/bnoordhuis/following{/other_user}", "gists_url": "https://api.github.com/users/bnoordhuis/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnoordhuis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnoordhuis/subscriptions", "organizations_url": "https://api.github.com/users/bnoordhuis/orgs", "repos_url": "https://api.github.com/users/bnoordhuis/repos", "events_url": "https://api.github.com/users/bnoordhuis/events{/privacy}", "received_events_url": "https://api.github.com/users/bnoordhuis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e0eb3c0bf9a220e4e44014df08ffd2d1194315b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e0eb3c0bf9a220e4e44014df08ffd2d1194315b", "html_url": "https://github.com/rust-lang/rust/commit/3e0eb3c0bf9a220e4e44014df08ffd2d1194315b"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "ca20314997e8c7c180ebfad8f3b5dcece3db1872", "filename": "src/libnative/io/timer_timerfd.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/6121acf97d94193a653acce7d9baf81c59d20eab/src%2Flibnative%2Fio%2Ftimer_timerfd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6121acf97d94193a653acce7d9baf81c59d20eab/src%2Flibnative%2Fio%2Ftimer_timerfd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ftimer_timerfd.rs?ref=6121acf97d94193a653acce7d9baf81c59d20eab", "patch": "@@ -59,17 +59,15 @@ fn helper(input: libc::c_int, messages: Port<Req>) {\n     fn add(efd: libc::c_int, fd: libc::c_int) {\n         let event = imp::epoll_event {\n             events: imp::EPOLLIN as u32,\n-            data: imp::epoll_data_t { fd: fd, pad: 0, }\n+            data: fd as i64,\n         };\n         let ret = unsafe {\n             imp::epoll_ctl(efd, imp::EPOLL_CTL_ADD, fd, &event)\n         };\n         assert_eq!(ret, 0);\n     }\n     fn del(efd: libc::c_int, fd: libc::c_int) {\n-        let event = imp::epoll_event {\n-            events: 0, data: imp::epoll_data_t { fd: 0, pad: 0, }\n-        };\n+        let event = imp::epoll_event { events: 0, data: 0 };\n         let ret = unsafe {\n             imp::epoll_ctl(efd, imp::EPOLL_CTL_DEL, fd, &event)\n         };\n@@ -93,7 +91,7 @@ fn helper(input: libc::c_int, messages: Port<Req>) {\n         let mut incoming = false;\n         debug!(\"{} events to process\", n);\n         for event in events.slice_to(n as uint).iter() {\n-            let fd = event.data.fd;\n+            let fd = event.data as libc::c_int;\n             debug!(\"data on fd {} (input = {})\", fd, input);\n             if fd == input {\n                 let mut buf = [0, ..1];\n@@ -261,14 +259,17 @@ mod imp {\n     pub static EPOLLHUP: libc::c_int = 0x010;\n     pub static EPOLLONESHOT: libc::c_int = 1 << 30;\n \n+    #[cfg(target_arch = \"x86_64\")]\n+    #[packed]\n     pub struct epoll_event {\n         events: u32,\n-        data: epoll_data_t,\n+        data: i64,\n     }\n \n-    pub struct epoll_data_t {\n-        fd: i32,\n-        pad: u32,\n+    #[cfg(not(target_arch = \"x86_64\"))]\n+    pub struct epoll_event {\n+        events: u32,\n+        data: i64,\n     }\n \n     pub struct timespec {"}]}