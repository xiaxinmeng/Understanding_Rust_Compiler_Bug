{"sha": "b7763af5267be200ffcb75e1ed35a0f3979c7d51", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3NzYzYWY1MjY3YmUyMDBmZmNiNzVlMWVkMzVhMGYzOTc5YzdkNTE=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-25T23:55:34Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-12T18:34:43Z"}, "message": "Add a test for #55731", "tree": {"sha": "8db1f4fa9f1821ae7584ae1a9da2c2d20343137b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8db1f4fa9f1821ae7584ae1a9da2c2d20343137b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7763af5267be200ffcb75e1ed35a0f3979c7d51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7763af5267be200ffcb75e1ed35a0f3979c7d51", "html_url": "https://github.com/rust-lang/rust/commit/b7763af5267be200ffcb75e1ed35a0f3979c7d51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7763af5267be200ffcb75e1ed35a0f3979c7d51/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "776411bb5aceef649b8d090783a809f7888a6265", "url": "https://api.github.com/repos/rust-lang/rust/commits/776411bb5aceef649b8d090783a809f7888a6265", "html_url": "https://github.com/rust-lang/rust/commit/776411bb5aceef649b8d090783a809f7888a6265"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "7b4f4e2cd3b4026dfde396813c214b04b0035d16", "filename": "src/test/ui/issues/issue-55731.rs", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/b7763af5267be200ffcb75e1ed35a0f3979c7d51/src%2Ftest%2Fui%2Fissues%2Fissue-55731.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7763af5267be200ffcb75e1ed35a0f3979c7d51/src%2Ftest%2Fui%2Fissues%2Fissue-55731.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-55731.rs?ref=b7763af5267be200ffcb75e1ed35a0f3979c7d51", "patch": "@@ -0,0 +1,52 @@\n+use std::marker::PhantomData;\n+\n+trait DistributedIterator {\n+    fn reduce(self)\n+    where\n+        Self: Sized,\n+    {\n+        unreachable!()\n+    }\n+}\n+\n+trait DistributedIteratorMulti<Source> {\n+    type Item;\n+}\n+\n+struct Connect<I>(PhantomData<fn(I)>);\n+impl<I: for<'a> DistributedIteratorMulti<&'a ()>> DistributedIterator for Connect<I> where {}\n+\n+struct Cloned<Source>(PhantomData<fn(Source)>);\n+impl<'a, Source> DistributedIteratorMulti<&'a Source> for Cloned<&'a Source> {\n+    type Item = ();\n+}\n+\n+struct Map<I, F> {\n+    i: I,\n+    f: F,\n+}\n+impl<I: DistributedIteratorMulti<Source>, F, Source> DistributedIteratorMulti<Source> for Map<I, F>\n+where\n+    F: A<<I as DistributedIteratorMulti<Source>>::Item>,\n+{\n+    type Item = ();\n+}\n+\n+trait A<B> {}\n+\n+struct X;\n+impl A<()> for X {}\n+\n+fn multi<I>(_reducer: I)\n+where\n+    I: for<'a> DistributedIteratorMulti<&'a ()>,\n+{\n+    DistributedIterator::reduce(Connect::<I>(PhantomData))\n+}\n+\n+fn main() {\n+    multi(Map { //~ ERROR implementation of `DistributedIteratorMulti` is not general enough\n+        i: Cloned(PhantomData),\n+        f: X,\n+    });\n+}"}, {"sha": "67f2053de1ebe03e4efbcfac963d8506ddac1643", "filename": "src/test/ui/issues/issue-55731.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b7763af5267be200ffcb75e1ed35a0f3979c7d51/src%2Ftest%2Fui%2Fissues%2Fissue-55731.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7763af5267be200ffcb75e1ed35a0f3979c7d51/src%2Ftest%2Fui%2Fissues%2Fissue-55731.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-55731.stderr?ref=b7763af5267be200ffcb75e1ed35a0f3979c7d51", "patch": "@@ -0,0 +1,12 @@\n+error: implementation of `DistributedIteratorMulti` is not general enough\n+  --> $DIR/issue-55731.rs:48:5\n+   |\n+LL |     multi(Map { //~ ERROR implementation of `DistributedIteratorMulti` is not general enough\n+   |     ^^^^^\n+   |\n+   = note: Due to a where-clause on `multi`,\n+   = note: `Map<Cloned<&()>, X>` must implement `DistributedIteratorMulti<&'0 ()>`, for any lifetime `'0`\n+   = note: but `Map<Cloned<&()>, X>` actually implements `DistributedIteratorMulti<&'1 ()>`, for some specific lifetime `'1`\n+\n+error: aborting due to previous error\n+"}]}