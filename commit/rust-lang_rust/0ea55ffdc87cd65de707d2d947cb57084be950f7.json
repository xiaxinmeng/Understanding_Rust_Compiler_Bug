{"sha": "0ea55ffdc87cd65de707d2d947cb57084be950f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlYTU1ZmZkYzg3Y2Q2NWRlNzA3ZDJkOTQ3Y2I1NzA4NGJlOTUwZjc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-08T20:42:04Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-12T00:31:40Z"}, "message": "Use a unique exit status when the runtime fails normally\n\nCheck for it in run-fail tests", "tree": {"sha": "6a8b9c10df23f2cc0f75873640615bb60a37d6bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a8b9c10df23f2cc0f75873640615bb60a37d6bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ea55ffdc87cd65de707d2d947cb57084be950f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ea55ffdc87cd65de707d2d947cb57084be950f7", "html_url": "https://github.com/rust-lang/rust/commit/0ea55ffdc87cd65de707d2d947cb57084be950f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ea55ffdc87cd65de707d2d947cb57084be950f7/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f6f36172b2e0cd86ffffd1d0ed2deb75972db72", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f6f36172b2e0cd86ffffd1d0ed2deb75972db72", "html_url": "https://github.com/rust-lang/rust/commit/6f6f36172b2e0cd86ffffd1d0ed2deb75972db72"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "c01fc5f3127936ed522057a7a03acd73feff5ec8", "filename": "src/rt/rust_internal.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0ea55ffdc87cd65de707d2d947cb57084be950f7/src%2Frt%2Frust_internal.h", "raw_url": "https://github.com/rust-lang/rust/raw/0ea55ffdc87cd65de707d2d947cb57084be950f7/src%2Frt%2Frust_internal.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_internal.h?ref=0ea55ffdc87cd65de707d2d947cb57084be950f7", "patch": "@@ -99,6 +99,9 @@ static size_t const TIME_SLICE_IN_MS = 10;\n \n static size_t const BUF_BYTES = 2048;\n \n+// The error status to use when the process fails\n+#define PROC_FAIL_CODE 101;\n+\n // Every reference counted object should use this macro and initialize\n // ref_count.\n "}, {"sha": "e5234b9d6f5d8487b87551dc98defe5d4819615f", "filename": "src/rt/rust_kernel.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ea55ffdc87cd65de707d2d947cb57084be950f7/src%2Frt%2Frust_kernel.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/0ea55ffdc87cd65de707d2d947cb57084be950f7/src%2Frt%2Frust_kernel.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_kernel.cpp?ref=0ea55ffdc87cd65de707d2d947cb57084be950f7", "patch": "@@ -140,7 +140,7 @@ rust_kernel::fail() {\n     // Runtime to terminate it in an unusual way\" when trying to shutdown\n     // cleanly.\n #if defined(__WIN32__)\n-    exit(1);\n+    exit(rval);\n #endif\n     for(size_t i = 0; i < num_threads; ++i) {\n         rust_scheduler *thread = threads[i];"}, {"sha": "b127ec77efad6c5c4dade4f058179426de1e360a", "filename": "src/rt/rust_scheduler.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ea55ffdc87cd65de707d2d947cb57084be950f7/src%2Frt%2Frust_scheduler.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/0ea55ffdc87cd65de707d2d947cb57084be950f7/src%2Frt%2Frust_scheduler.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.cpp?ref=0ea55ffdc87cd65de707d2d947cb57084be950f7", "patch": "@@ -71,7 +71,7 @@ rust_scheduler::fail() {\n     log(NULL, log_err, \"domain %s @0x%\" PRIxPTR \" root task failed\",\n         name, this);\n     I(this, kernel->rval == 0);\n-    kernel->rval = 1;\n+    kernel->rval = PROC_FAIL_CODE;\n     kernel->fail();\n }\n "}, {"sha": "fdcd627811db269ece410d5b85107bafb338e854", "filename": "src/test/compiletest/runtest.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0ea55ffdc87cd65de707d2d947cb57084be950f7/src%2Ftest%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ea55ffdc87cd65de707d2d947cb57084be950f7/src%2Ftest%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompiletest%2Fruntest.rs?ref=0ea55ffdc87cd65de707d2d947cb57084be950f7", "patch": "@@ -51,15 +51,21 @@ fn run_rfail_test(cx: &cx, props: &test_props, testfile: &str) {\n \n     procres = exec_compiled_test(cx, props, testfile);\n \n-    if procres.status == 0 {\n-        fatal_procres(\"run-fail test didn't produce an error!\", procres);\n-    }\n-\n+    // The value our Makefile configures valgrind to return on failure\n     const valgrind_err: int = 100;\n     if procres.status == valgrind_err {\n         fatal_procres(\"run-fail test isn't valgrind-clean!\", procres);\n     }\n \n+    // The value the rust runtime returns on failure\n+    const rust_err: int = 101;\n+    if procres.status != rust_err {\n+        fatal_procres(\n+            #fmt(\"run-fail test produced the wrong error code: %d\",\n+                 procres.status),\n+            procres);\n+    }\n+\n     check_error_patterns(props, testfile, procres);\n }\n "}]}