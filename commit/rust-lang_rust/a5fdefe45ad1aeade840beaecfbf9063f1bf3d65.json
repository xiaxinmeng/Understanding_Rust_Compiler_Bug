{"sha": "a5fdefe45ad1aeade840beaecfbf9063f1bf3d65", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ZmRlZmU0NWFkMWFlYWRlODQwYmVhZWNmYmY5MDYzZjFiZjNkNjU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-02-24T16:38:31Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-03-06T19:55:28Z"}, "message": "Fix trans_get_discriminant for uninhabited types", "tree": {"sha": "0ab88194f714b5f4dd9fc1edd3666c971986dfca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ab88194f714b5f4dd9fc1edd3666c971986dfca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5fdefe45ad1aeade840beaecfbf9063f1bf3d65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5fdefe45ad1aeade840beaecfbf9063f1bf3d65", "html_url": "https://github.com/rust-lang/rust/commit/a5fdefe45ad1aeade840beaecfbf9063f1bf3d65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5fdefe45ad1aeade840beaecfbf9063f1bf3d65/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a9cadcd4c8e98e94b2084acab2c83f311475ce3", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a9cadcd4c8e98e94b2084acab2c83f311475ce3", "html_url": "https://github.com/rust-lang/rust/commit/8a9cadcd4c8e98e94b2084acab2c83f311475ce3"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "7aeae550933419b85834109528ccdc81eef06caa", "filename": "src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5fdefe45ad1aeade840beaecfbf9063f1bf3d65/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5fdefe45ad1aeade840beaecfbf9063f1bf3d65/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=a5fdefe45ad1aeade840beaecfbf9063f1bf3d65", "patch": "@@ -739,7 +739,7 @@ pub fn trans_get_discriminant<'a, 'tcx: 'a>(\n     let layout = place.layout();\n \n     if layout.abi == layout::Abi::Uninhabited {\n-        trap_unreachable(&mut fx.bcx);\n+        return trap_unreachable_ret_value(fx, dest_layout);\n     }\n     match layout.variants {\n         layout::Variants::Single { index } => {"}, {"sha": "d76e2728aeac74ae3a18f3f56fd39976b0e739ce", "filename": "src/trap.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a5fdefe45ad1aeade840beaecfbf9063f1bf3d65/src%2Ftrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5fdefe45ad1aeade840beaecfbf9063f1bf3d65/src%2Ftrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftrap.rs?ref=a5fdefe45ad1aeade840beaecfbf9063f1bf3d65", "patch": "@@ -1,6 +1,4 @@\n-use cranelift::prelude::*;\n-\n-use cranelift::codegen::ir::TrapCode;\n+use crate::prelude::*;\n \n /// Trap code: user0\n pub fn trap_panic(bcx: &mut FunctionBuilder) {\n@@ -11,3 +9,10 @@ pub fn trap_panic(bcx: &mut FunctionBuilder) {\n pub fn trap_unreachable(bcx: &mut FunctionBuilder) {\n     bcx.ins().trap(TrapCode::User(!0));\n }\n+\n+pub fn trap_unreachable_ret_value<'tcx>(fx: &mut FunctionCx<'_, 'tcx, impl cranelift_module::Backend>, dest_layout: TyLayout<'tcx>) -> CValue<'tcx> {\n+    let true_ = fx.bcx.ins().iconst(types::I32, 1);\n+    fx.bcx.ins().trapnz(true_, TrapCode::User(!0));\n+    let zero = fx.bcx.ins().iconst(fx.pointer_type, 0);\n+    CValue::ByRef(zero, dest_layout)\n+}"}]}