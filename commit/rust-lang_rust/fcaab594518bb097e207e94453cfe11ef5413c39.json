{"sha": "fcaab594518bb097e207e94453cfe11ef5413c39", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjYWFiNTk0NTE4YmIwOTdlMjA3ZTk0NDUzY2ZlMTFlZjU0MTNjMzk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-03-09T09:05:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-09T09:05:45Z"}, "message": "Merge #3514\n\n3514: vscode: askBeforeDownload option r=matklad a=Veetaha\n\nThis is a small step towards #3402, also implements my proposal stated in #3403\r\n\r\nAlso renamed `BinarySource` to `ArtifactSource` in anticipation of nightlies installation that requires downloading not a binary itself but `.vsix` package, thus generalized to `artifact` term.\r\n\r\n@matklad @lnicola \n\nCo-authored-by: Veetaha <gerzoh1@gmail.com>", "tree": {"sha": "83a8d0f856feb789047a2af2b60d342d98084a81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83a8d0f856feb789047a2af2b60d342d98084a81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcaab594518bb097e207e94453cfe11ef5413c39", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeZgbpCRBK7hj4Ov3rIwAAdHIIAC5BP5P4ZgGtC4qLLPKRlG/2\nJsr6N4Nt8O/pMo2UZzz26ZlmgZlwYY6LIVfJg9Oj+0c3SaOaU6EqEQzFLSy1OG2i\nye9GNqwq3jUtEwJdhiZO2a8eR7LujiKYBjDizl84m/aw5Mhy+I+48gfbweHKXl/9\nX2iUhoUIfIiICM0IREumMOxNEuQjIrJOOMPd83Zj4uRtp0EiwgPLksd7wZU0loB3\nVgtsC9UED9HDDAOUusSFDBDpY4pogQxsMdepN02umaRVJsi8V6GewgFutlL3qsbf\nA2VaNLtzmO9Z+1v531jBFLIQyX99e4V5MxhARhgCU34YN+36x4oaH2/ZCi4Jz1A=\n=abpf\n-----END PGP SIGNATURE-----\n", "payload": "tree 83a8d0f856feb789047a2af2b60d342d98084a81\nparent beb4f4954179998e317db33e47a48a9bb7374977\nparent ce65cc949f9e183c7c166212b4f3d7d4abd102b0\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1583744745 +0000\ncommitter GitHub <noreply@github.com> 1583744745 +0000\n\nMerge #3514\n\n3514: vscode: askBeforeDownload option r=matklad a=Veetaha\n\nThis is a small step towards #3402, also implements my proposal stated in #3403\r\n\r\nAlso renamed `BinarySource` to `ArtifactSource` in anticipation of nightlies installation that requires downloading not a binary itself but `.vsix` package, thus generalized to `artifact` term.\r\n\r\n@matklad @lnicola \n\nCo-authored-by: Veetaha <gerzoh1@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcaab594518bb097e207e94453cfe11ef5413c39", "html_url": "https://github.com/rust-lang/rust/commit/fcaab594518bb097e207e94453cfe11ef5413c39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcaab594518bb097e207e94453cfe11ef5413c39/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "beb4f4954179998e317db33e47a48a9bb7374977", "url": "https://api.github.com/repos/rust-lang/rust/commits/beb4f4954179998e317db33e47a48a9bb7374977", "html_url": "https://github.com/rust-lang/rust/commit/beb4f4954179998e317db33e47a48a9bb7374977"}, {"sha": "ce65cc949f9e183c7c166212b4f3d7d4abd102b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce65cc949f9e183c7c166212b4f3d7d4abd102b0", "html_url": "https://github.com/rust-lang/rust/commit/ce65cc949f9e183c7c166212b4f3d7d4abd102b0"}], "stats": {"total": 78, "additions": 54, "deletions": 24}, "files": [{"sha": "e5843ed70f42b30bb5b9ffcc1067852436e684ec", "filename": "docs/user/readme.adoc", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fcaab594518bb097e207e94453cfe11ef5413c39/docs%2Fuser%2Freadme.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/fcaab594518bb097e207e94453cfe11ef5413c39/docs%2Fuser%2Freadme.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Freadme.adoc?ref=fcaab594518bb097e207e94453cfe11ef5413c39", "patch": "@@ -2,6 +2,13 @@\n :toc: preamble\n :sectanchors:\n :page-layout: post\n+// https://gist.github.com/dcode/0cfbf2699a1fe9b46ff04c41721dda74#admonitions\n+:tip-caption: :bulb:\n+:note-caption: :information_source:\n+:important-caption: :heavy_exclamation_mark:\n+:caution-caption: :fire:\n+:warning-caption: :warning:\n+\n \n \n // Master copy of this document lives in the https://github.com/rust-analyzer/rust-analyzer repository\n@@ -30,7 +37,7 @@ $ rustup component add rust-src\n \n === VS Code\n \n-This the best supported editor at the moment.\n+This is the best supported editor at the moment.\n rust-analyzer plugin for VS Code is maintained\n https://github.com/rust-analyzer/rust-analyzer/tree/master/editors/code[in tree].\n \n@@ -40,6 +47,16 @@ By default, the plugin will prompt you to download the matching version of the s\n \n image::https://user-images.githubusercontent.com/9021944/75067008-17502500-54ba-11ea-835a-f92aac50e866.png[]\n \n+[NOTE]\n+====\n+To disable this notification put the following to `settings.json`\n+\n+[source,json]\n+----\n+{ \"rust-analyzer.updates.askBeforeDownload\": false }\n+----\n+====\n+\n The server binary is stored in `~/.config/Code/User/globalStorage/matklad.rust-analyzer`.\n \n Note that we only support the latest version of VS Code."}, {"sha": "7a4a93e30352d1e1cba9d27ddaf0564834075bf2", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fcaab594518bb097e207e94453cfe11ef5413c39/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/fcaab594518bb097e207e94453cfe11ef5413c39/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=fcaab594518bb097e207e94453cfe11ef5413c39", "patch": "@@ -219,6 +219,11 @@\n                         }\n                     }\n                 },\n+                \"rust-analyzer.updates.askBeforeDownload\": {\n+                    \"type\": \"boolean\",\n+                    \"default\": true,\n+                    \"description\": \"Whether to ask for permission before downloading any files from the Internet\"\n+                },\n                 \"rust-analyzer.serverPath\": {\n                     \"type\": [\n                         \"null\","}, {"sha": "b72206d3cbeccec1f01f56b043da08af397ff2f0", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fcaab594518bb097e207e94453cfe11ef5413c39/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/fcaab594518bb097e207e94453cfe11ef5413c39/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=fcaab594518bb097e207e94453cfe11ef5413c39", "patch": "@@ -1,6 +1,6 @@\n import * as os from \"os\";\n import * as vscode from 'vscode';\n-import { BinarySource } from \"./installation/interfaces\";\n+import { ArtifactSource } from \"./installation/interfaces\";\n import { log } from \"./util\";\n \n const RA_LSP_DEBUG = process.env.__RA_LSP_SERVER_DEBUG;\n@@ -114,12 +114,12 @@ export class Config {\n         }\n     }\n \n-    get serverSource(): null | BinarySource {\n+    get serverSource(): null | ArtifactSource {\n         const serverPath = RA_LSP_DEBUG ?? this.cfg.get<null | string>(\"serverPath\");\n \n         if (serverPath) {\n             return {\n-                type: BinarySource.Type.ExplicitPath,\n+                type: ArtifactSource.Type.ExplicitPath,\n                 path: Config.replaceTildeWithHomeDir(serverPath)\n             };\n         }\n@@ -129,11 +129,12 @@ export class Config {\n         if (!prebuiltBinaryName) return null;\n \n         return {\n-            type: BinarySource.Type.GithubRelease,\n+            type: ArtifactSource.Type.GithubRelease,\n             dir: this.ctx.globalStoragePath,\n             file: prebuiltBinaryName,\n             storage: this.ctx.globalState,\n-            version: Config.extensionVersion,\n+            tag: Config.extensionVersion,\n+            askBeforeDownload: this.cfg.get(\"updates.askBeforeDownload\") as boolean,\n             repo: {\n                 name: \"rust-analyzer\",\n                 owner: \"rust-analyzer\","}, {"sha": "50b635921860a1ced73fee3824e18476f2db65af", "filename": "editors/code/src/installation/interfaces.ts", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fcaab594518bb097e207e94453cfe11ef5413c39/editors%2Fcode%2Fsrc%2Finstallation%2Finterfaces.ts", "raw_url": "https://github.com/rust-lang/rust/raw/fcaab594518bb097e207e94453cfe11ef5413c39/editors%2Fcode%2Fsrc%2Finstallation%2Finterfaces.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Finterfaces.ts?ref=fcaab594518bb097e207e94453cfe11ef5413c39", "patch": "@@ -14,14 +14,14 @@ export interface ArtifactReleaseInfo {\n }\n \n /**\n- * Represents the source of a binary artifact which is either specified by the user\n+ * Represents the source of a an artifact which is either specified by the user\n  * explicitly, or bundled by this extension from GitHub releases.\n  */\n-export type BinarySource = BinarySource.ExplicitPath | BinarySource.GithubRelease;\n+export type ArtifactSource = ArtifactSource.ExplicitPath | ArtifactSource.GithubRelease;\n \n-export namespace BinarySource {\n+export namespace ArtifactSource {\n     /**\n-     * Type tag for `BinarySource` discriminated union.\n+     * Type tag for `ArtifactSource` discriminated union.\n      */\n     export const enum Type { ExplicitPath, GithubRelease }\n \n@@ -56,13 +56,18 @@ export namespace BinarySource {\n         /**\n          * Tag of github release that denotes a version required by this extension.\n          */\n-        version: string;\n+        tag: string;\n \n         /**\n          * Object that provides `get()/update()` operations to store metadata\n          * about the actual binary, e.g. its actual version.\n          */\n         storage: vscode.Memento;\n+\n+        /**\n+         * Ask for the user permission before downloading the artifact.\n+         */\n+        askBeforeDownload: boolean;\n     }\n \n }"}, {"sha": "ef1c45ff65906244d79cb9018eb78b950260f13e", "filename": "editors/code/src/installation/server.ts", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/fcaab594518bb097e207e94453cfe11ef5413c39/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts", "raw_url": "https://github.com/rust-lang/rust/raw/fcaab594518bb097e207e94453cfe11ef5413c39/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts?ref=fcaab594518bb097e207e94453cfe11ef5413c39", "patch": "@@ -3,12 +3,12 @@ import * as path from \"path\";\n import { promises as dns } from \"dns\";\n import { spawnSync } from \"child_process\";\n \n-import { BinarySource } from \"./interfaces\";\n+import { ArtifactSource } from \"./interfaces\";\n import { fetchArtifactReleaseInfo } from \"./fetch_artifact_release_info\";\n import { downloadArtifact } from \"./download_artifact\";\n import { log, assert } from \"../util\";\n \n-export async function ensureServerBinary(source: null | BinarySource): Promise<null | string> {\n+export async function ensureServerBinary(source: null | ArtifactSource): Promise<null | string> {\n     if (!source) {\n         vscode.window.showErrorMessage(\n             \"Unfortunately we don't ship binaries for your platform yet. \" +\n@@ -22,7 +22,7 @@ export async function ensureServerBinary(source: null | BinarySource): Promise<n\n     }\n \n     switch (source.type) {\n-        case BinarySource.Type.ExplicitPath: {\n+        case ArtifactSource.Type.ExplicitPath: {\n             if (isBinaryAvailable(source.path)) {\n                 return source.path;\n             }\n@@ -34,24 +34,26 @@ export async function ensureServerBinary(source: null | BinarySource): Promise<n\n             );\n             return null;\n         }\n-        case BinarySource.Type.GithubRelease: {\n+        case ArtifactSource.Type.GithubRelease: {\n             const prebuiltBinaryPath = path.join(source.dir, source.file);\n \n             const installedVersion: null | string = getServerVersion(source.storage);\n-            const requiredVersion: string = source.version;\n+            const requiredVersion: string = source.tag;\n \n             log.debug(\"Installed version:\", installedVersion, \"required:\", requiredVersion);\n \n             if (isBinaryAvailable(prebuiltBinaryPath) && installedVersion === requiredVersion) {\n                 return prebuiltBinaryPath;\n             }\n \n-            const userResponse = await vscode.window.showInformationMessage(\n-                `Language server version ${source.version} for rust-analyzer is not installed. ` +\n-                \"Do you want to download it now?\",\n-                \"Download now\", \"Cancel\"\n-            );\n-            if (userResponse !== \"Download now\") return null;\n+            if (source.askBeforeDownload) {\n+                const userResponse = await vscode.window.showInformationMessage(\n+                    `Language server version ${source.tag} for rust-analyzer is not installed. ` +\n+                    \"Do you want to download it now?\",\n+                    \"Download now\", \"Cancel\"\n+                );\n+                if (userResponse !== \"Download now\") return null;\n+            }\n \n             if (!await downloadServer(source)) return null;\n \n@@ -60,9 +62,9 @@ export async function ensureServerBinary(source: null | BinarySource): Promise<n\n     }\n }\n \n-async function downloadServer(source: BinarySource.GithubRelease): Promise<boolean> {\n+async function downloadServer(source: ArtifactSource.GithubRelease): Promise<boolean> {\n     try {\n-        const releaseInfo = await fetchArtifactReleaseInfo(source.repo, source.file, source.version);\n+        const releaseInfo = await fetchArtifactReleaseInfo(source.repo, source.file, source.tag);\n \n         await downloadArtifact(releaseInfo, source.file, source.dir, \"language server\");\n         await setServerVersion(source.storage, releaseInfo.releaseName);"}]}