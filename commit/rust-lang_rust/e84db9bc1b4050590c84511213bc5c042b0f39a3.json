{"sha": "e84db9bc1b4050590c84511213bc5c042b0f39a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4NGRiOWJjMWI0MDUwNTkwYzg0NTExMjEzYmM1YzA0MmIwZjM5YTM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-08-09T16:18:29Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-08-24T17:27:38Z"}, "message": "add test for method ufcs notation", "tree": {"sha": "2ee435ddc4766eefce4e847a26cad1a0d8a83f48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ee435ddc4766eefce4e847a26cad1a0d8a83f48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e84db9bc1b4050590c84511213bc5c042b0f39a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e84db9bc1b4050590c84511213bc5c042b0f39a3", "html_url": "https://github.com/rust-lang/rust/commit/e84db9bc1b4050590c84511213bc5c042b0f39a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e84db9bc1b4050590c84511213bc5c042b0f39a3/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56506cfa25a8f4c47b1e093cdc576a62b1eb08a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/56506cfa25a8f4c47b1e093cdc576a62b1eb08a5", "html_url": "https://github.com/rust-lang/rust/commit/56506cfa25a8f4c47b1e093cdc576a62b1eb08a5"}], "stats": {"total": 122, "additions": 122, "deletions": 0}, "files": [{"sha": "f4fdb3ee57236f6cf7b30026a62e8fb63bad244f", "filename": "src/test/ui/nll/user-annotations/method-ufcs.rs", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/e84db9bc1b4050590c84511213bc5c042b0f39a3/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fmethod-ufcs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e84db9bc1b4050590c84511213bc5c042b0f39a3/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fmethod-ufcs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fmethod-ufcs.rs?ref=e84db9bc1b4050590c84511213bc5c042b0f39a3", "patch": "@@ -0,0 +1,81 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Unit test for the \"user substitutions\" that are annotated on each\n+// node.\n+\n+#![feature(nll)]\n+\n+trait Bazoom<T> {\n+    fn method<U>(&self, arg: T, arg2: U) { }\n+}\n+\n+impl<T, U> Bazoom<U> for T {\n+}\n+\n+fn no_annot() {\n+    let a = 22;\n+    let b = 44;\n+    let c = 66;\n+    <_ as Bazoom<_>>::method(&a, b, &c); // OK\n+}\n+\n+fn annot_underscore() {\n+    let a = 22;\n+    let b = 44;\n+    let c = 66;\n+    <_ as Bazoom<_>>::method::<_>(&a, b, &c); // OK\n+}\n+\n+fn annot_reference_any_lifetime() {\n+    let a = 22;\n+    let b = 44;\n+    let c = 66;\n+    <_ as Bazoom<_>>::method::<&u32>(&a, b, &c); // OK\n+}\n+\n+fn annot_reference_static_lifetime() {\n+    let a = 22;\n+    let b = 44;\n+    let c = 66;\n+    <_ as Bazoom<_>>::method::<&'static u32>(&a, b, &c); //~ ERROR\n+}\n+\n+fn annot_reference_named_lifetime<'a>(_d: &'a u32) {\n+    let a = 22;\n+    let b = 44;\n+    let c = 66;\n+    <_ as Bazoom<_>>::method::<&'a u32>(&a, b, &c); //~ ERROR\n+}\n+\n+fn annot_reference_named_lifetime_ok<'a>(c: &'a u32) {\n+    let a = 22;\n+    let b = 44;\n+    <_ as Bazoom<_>>::method::<&'a u32>(&a, b, c);\n+}\n+\n+fn annot_reference_named_lifetime_in_closure<'a>(_: &'a u32) {\n+    let a = 22;\n+    let b = 44;\n+    let _closure = || {\n+        let c = 66;\n+        <_ as Bazoom<_>>::method::<&'a u32>(&a, b, &c); //~ ERROR\n+    };\n+}\n+\n+fn annot_reference_named_lifetime_in_closure_ok<'a>(c: &'a u32) {\n+    let a = 22;\n+    let b = 44;\n+    let _closure = || {\n+        <_ as Bazoom<_>>::method::<&'a u32>(&a, b, c);\n+    };\n+}\n+\n+fn main() { }"}, {"sha": "4299c8a4c13d9f60d3c09b4bcd215655dc9d1282", "filename": "src/test/ui/nll/user-annotations/method-ufcs.stderr", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/e84db9bc1b4050590c84511213bc5c042b0f39a3/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fmethod-ufcs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e84db9bc1b4050590c84511213bc5c042b0f39a3/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fmethod-ufcs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fmethod-ufcs.stderr?ref=e84db9bc1b4050590c84511213bc5c042b0f39a3", "patch": "@@ -0,0 +1,41 @@\n+error[E0597]: `c` does not live long enough\n+  --> $DIR/method-ufcs.rs:48:53\n+   |\n+LL |     <_ as Bazoom<_>>::method::<&'static u32>(&a, b, &c); //~ ERROR\n+   |                                                     ^^ borrowed value does not live long enough\n+LL | }\n+   | - `c` dropped here while still borrowed\n+   |\n+   = note: borrowed value must be valid for the static lifetime...\n+\n+error[E0597]: `c` does not live long enough\n+  --> $DIR/method-ufcs.rs:55:48\n+   |\n+LL |     <_ as Bazoom<_>>::method::<&'a u32>(&a, b, &c); //~ ERROR\n+   |                                                ^^ borrowed value does not live long enough\n+LL | }\n+   | - `c` dropped here while still borrowed\n+   |\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 51:35...\n+  --> $DIR/method-ufcs.rs:51:35\n+   |\n+LL | fn annot_reference_named_lifetime<'a>(_d: &'a u32) {\n+   |                                   ^^\n+\n+error[E0597]: `c` does not live long enough\n+  --> $DIR/method-ufcs.rs:69:52\n+   |\n+LL |         <_ as Bazoom<_>>::method::<&'a u32>(&a, b, &c); //~ ERROR\n+   |                                                    ^^ borrowed value does not live long enough\n+LL |     };\n+   |     - `c` dropped here while still borrowed\n+   |\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 64:46...\n+  --> $DIR/method-ufcs.rs:64:46\n+   |\n+LL | fn annot_reference_named_lifetime_in_closure<'a>(_: &'a u32) {\n+   |                                              ^^\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0597`."}]}