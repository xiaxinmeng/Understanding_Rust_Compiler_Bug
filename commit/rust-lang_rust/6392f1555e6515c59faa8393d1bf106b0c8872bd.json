{"sha": "6392f1555e6515c59faa8393d1bf106b0c8872bd", "node_id": "C_kwDOAAsO6NoAKDYzOTJmMTU1NWU2NTE1YzU5ZmFhODM5M2QxYmYxMDZiMGM4ODcyYmQ", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-04-01T09:11:28Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-04-01T09:11:28Z"}, "message": "Shuffle around #[inline] and #[cold] in mutex impl.", "tree": {"sha": "1f83e5bee0f8a0276dc64edb1e3c69f4eeada094", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f83e5bee0f8a0276dc64edb1e3c69f4eeada094"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6392f1555e6515c59faa8393d1bf106b0c8872bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6392f1555e6515c59faa8393d1bf106b0c8872bd", "html_url": "https://github.com/rust-lang/rust/commit/6392f1555e6515c59faa8393d1bf106b0c8872bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6392f1555e6515c59faa8393d1bf106b0c8872bd/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c49887da277334226d17f7633392425e808b46d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c49887da277334226d17f7633392425e808b46d7", "html_url": "https://github.com/rust-lang/rust/commit/c49887da277334226d17f7633392425e808b46d7"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "08c042f279bb2c300195a43b2f4bfced7f99c535", "filename": "library/std/src/sys/unix/locks/futex.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6392f1555e6515c59faa8393d1bf106b0c8872bd/library%2Fstd%2Fsrc%2Fsys%2Funix%2Flocks%2Ffutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6392f1555e6515c59faa8393d1bf106b0c8872bd/library%2Fstd%2Fsrc%2Fsys%2Funix%2Flocks%2Ffutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Flocks%2Ffutex.rs?ref=6392f1555e6515c59faa8393d1bf106b0c8872bd", "patch": "@@ -38,6 +38,7 @@ impl Mutex {\n         }\n     }\n \n+    #[cold]\n     fn lock_contended(&self) {\n         // Spin first to speed things up if the lock is released quickly.\n         let mut state = self.spin();\n@@ -91,9 +92,14 @@ impl Mutex {\n             // will mark the mutex as contended (2) (see lock_contended above),\n             // which makes sure that any other waiting threads will also be\n             // woken up eventually.\n-            futex_wake(&self.futex);\n+            self.wake();\n         }\n     }\n+\n+    #[cold]\n+    fn wake(&self) {\n+        futex_wake(&self.futex);\n+    }\n }\n \n pub struct Condvar {\n@@ -118,24 +124,20 @@ impl Condvar {\n     // All the memory orderings here are `Relaxed`,\n     // because synchronization is done by unlocking and locking the mutex.\n \n-    #[inline]\n     pub unsafe fn notify_one(&self) {\n         self.futex.fetch_add(1, Relaxed);\n         futex_wake(&self.futex);\n     }\n \n-    #[inline]\n     pub unsafe fn notify_all(&self) {\n         self.futex.fetch_add(1, Relaxed);\n         futex_wake_all(&self.futex);\n     }\n \n-    #[inline]\n     pub unsafe fn wait(&self, mutex: &Mutex) {\n         self.wait_optional_timeout(mutex, None);\n     }\n \n-    #[inline]\n     pub unsafe fn wait_timeout(&self, mutex: &Mutex, timeout: Duration) -> bool {\n         self.wait_optional_timeout(mutex, Some(timeout))\n     }"}]}