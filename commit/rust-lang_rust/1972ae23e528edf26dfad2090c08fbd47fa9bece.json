{"sha": "1972ae23e528edf26dfad2090c08fbd47fa9bece", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NzJhZTIzZTUyOGVkZjI2ZGZhZDIwOTBjMDhmYmQ0N2ZhOWJlY2U=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-07-10T15:45:08Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-07-10T15:45:08Z"}, "message": "libcore: add a task::set_sched_mode fn", "tree": {"sha": "0d3fe80f929470632cba436bb3cf5242cce1a07f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d3fe80f929470632cba436bb3cf5242cce1a07f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1972ae23e528edf26dfad2090c08fbd47fa9bece", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1972ae23e528edf26dfad2090c08fbd47fa9bece", "html_url": "https://github.com/rust-lang/rust/commit/1972ae23e528edf26dfad2090c08fbd47fa9bece", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1972ae23e528edf26dfad2090c08fbd47fa9bece/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75db80e233ebdc84f2aaabf48ec1967ab0e622b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/75db80e233ebdc84f2aaabf48ec1967ab0e622b4", "html_url": "https://github.com/rust-lang/rust/commit/75db80e233ebdc84f2aaabf48ec1967ab0e622b4"}], "stats": {"total": 63, "additions": 21, "deletions": 42}, "files": [{"sha": "c1b7574c9cc334573e0bae7a439633bacea32ad2", "filename": "src/libcore/os.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1972ae23e528edf26dfad2090c08fbd47fa9bece/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1972ae23e528edf26dfad2090c08fbd47fa9bece/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=1972ae23e528edf26dfad2090c08fbd47fa9bece", "patch": "@@ -163,15 +163,11 @@ mod global_env {\n         let builder_fn = || {\n             let builder = task::builder();\n             task::unsupervise(builder);\n-            task::set_opts(builder, {\n-                sched:  some({\n-                    mode: task::single_threaded,\n-                    // FIXME (#2621): This would be a good place to use a\n-                    // very small foreign stack\n-                    foreign_stack_size: none\n-                })\n-                with task::get_opts(builder)\n-            });\n+\n+            // FIXME (#2621): This would be a good place to use a very small\n+            // foreign stack\n+            task::set_sched_mode(builder, task::single_threaded);\n+\n             builder\n         };\n         unsafe {"}, {"sha": "608f4d449c29657179ccf2caf26a743cae462a42", "filename": "src/libcore/task.rs", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1972ae23e528edf26dfad2090c08fbd47fa9bece/src%2Flibcore%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1972ae23e528edf26dfad2090c08fbd47fa9bece/src%2Flibcore%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask.rs?ref=1972ae23e528edf26dfad2090c08fbd47fa9bece", "patch": "@@ -38,6 +38,7 @@ export builder;\n export default_task_opts;\n export get_opts;\n export set_opts;\n+export set_sched_mode;\n export add_wrapper;\n export run;\n \n@@ -237,6 +238,16 @@ fn set_opts(builder: builder, opts: task_opts) {\n     builder.opts = opts;\n }\n \n+fn set_sched_mode(builder: builder, mode: sched_mode) {\n+    set_opts(builder, { \n+        sched: some({\n+            mode: mode,\n+            foreign_stack_size: none\n+        })\n+        with get_opts(builder)\n+    });\n+}\n+\n fn add_wrapper(builder: builder, gen_body: fn@(+fn~()) -> fn~()) {\n     /*!\n      * Add a wrapper to the body of the spawned task.\n@@ -467,13 +478,7 @@ fn spawn_sched(mode: sched_mode, +f: fn~()) {\n      */\n \n     let mut builder = builder();\n-    set_opts(builder, {\n-        sched: some({\n-            mode: mode,\n-            foreign_stack_size: none\n-        })\n-        with get_opts(builder)\n-    });\n+    set_sched_mode(builder, mode);\n     run(builder, f);\n }\n \n@@ -1207,14 +1212,7 @@ fn test_avoid_copying_the_body_unsupervise() {\n #[test]\n fn test_osmain() {\n     let buildr = builder();\n-    let opts = {\n-        sched: some({\n-            mode: osmain,\n-            foreign_stack_size: none\n-        })\n-        with get_opts(buildr)\n-    };\n-    set_opts(buildr, opts);\n+    set_sched_mode(buildr, mode);\n \n     let po = comm::port();\n     let ch = comm::chan(po);"}, {"sha": "8b00e4ad3e8a3f652447feb9fbd9e6d0d894f546", "filename": "src/libstd/uv_global_loop.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1972ae23e528edf26dfad2090c08fbd47fa9bece/src%2Flibstd%2Fuv_global_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1972ae23e528edf26dfad2090c08fbd47fa9bece/src%2Flibstd%2Fuv_global_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fuv_global_loop.rs?ref=1972ae23e528edf26dfad2090c08fbd47fa9bece", "patch": "@@ -40,14 +40,7 @@ fn get_monitor_task_gl() -> iotask unsafe {\n \n     let builder_fn = || {\n         let builder = task::builder();\n-        task::set_opts(builder, {\n-            supervise: false,\n-            sched: some({\n-                mode: task::single_threaded,\n-                foreign_stack_size: none\n-            })\n-            with task::get_opts(builder)\n-        });\n+        task::set_sched_mode(builder, task::single_threaded);\n         builder\n     };\n "}, {"sha": "e38fae0fa72fa715019f2fd8121b2e4cf2f44220", "filename": "src/libstd/uv_iotask.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1972ae23e528edf26dfad2090c08fbd47fa9bece/src%2Flibstd%2Fuv_iotask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1972ae23e528edf26dfad2090c08fbd47fa9bece/src%2Flibstd%2Fuv_iotask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fuv_iotask.rs?ref=1972ae23e528edf26dfad2090c08fbd47fa9bece", "patch": "@@ -25,19 +25,11 @@ enum iotask {\n \n fn spawn_iotask(-builder: task::builder) -> iotask {\n \n-    import task::{set_opts, get_opts, single_threaded, run};\n-\n-    set_opts(builder, {\n-        sched: some({\n-            mode: single_threaded,\n-            foreign_stack_size: none\n-        })\n-        with get_opts(builder)\n-    });\n+    task::set_sched_mode(builder, task::single_threaded);\n \n     do listen |iotask_ch| {\n \n-        do run(copy(builder)) {\n+        do task::run(copy(builder)) {\n             #debug(\"entering libuv task\");\n             run_loop(iotask_ch);\n             #debug(\"libuv task exiting\");"}]}