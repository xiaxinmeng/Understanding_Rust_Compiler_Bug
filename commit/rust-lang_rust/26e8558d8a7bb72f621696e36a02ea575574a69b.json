{"sha": "26e8558d8a7bb72f621696e36a02ea575574a69b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2ZTg1NThkOGE3YmI3MmY2MjE2OTZlMzZhMDJlYTU3NTU3NGE2OWI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-01-24T10:31:42Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-01-26T10:31:26Z"}, "message": "remove rustc-serialize dependency and factor `util::cargo` out into a crate", "tree": {"sha": "cc8ad5af7d86c3b907685ac0e19d9523c139e461", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc8ad5af7d86c3b907685ac0e19d9523c139e461"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26e8558d8a7bb72f621696e36a02ea575574a69b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAliJz/4ACgkQpp+NIls6\n19kXBhAAh8fI9GLt8FL3BpkyNsB3OPI72QWSemy/oVwgJzcUF24i19NhiyxeYMgy\nsA5UUANJDLIvpggZvd/b7AkVRt/BXYYl7SNXczMuKhGulLs0UtFMhlfhmJOV0SX0\n2Dnqmr/06o+tdu/vMnVWjVAoY4X/N6pg+bTgHR81z8lKMDQyb6g0BDWfpf5QTDEp\noW/HxfzwQO9w/50o++ssZRFTrn+tDKRW0sx33lbG+SYcAISSRpV0V7FnL+tGupe5\nDbSMwhNkvxUzh/Us3ym6TpQAuPuJgFoA2YC8jURl2bEGm6rAQ5mpHwjZEFtm1lI0\n8We7kSzb/ieqyeGSLixkxXzEkVuO9X5DVYXNNYUOe+TjhLpimqGEyJcrfEOhvj/Z\n7shc621lGJL0juEmVxQ848Ligvr7csSkOxJIO0wsN5H5cpdDfqT9uS6RIJ05DUEe\nvt65n6+DAfPzAHW8bwM53ZxlFnCyk+IRyZ0/8LPCrrT/pJa7mA9/WyiDFef9GJMY\nVYAwxrBILkDXT+7qqplI5guwKifExddOPY3oc0xc9ZyqlxhlLxmWYe7WTV0ZigNQ\nrp1UU7waP65YJKsAytJDGP8xDSKPNCtgeN+XiVfl8pg6tyenbOv1edEGGJf9DVDT\nZuSJ1PokeLYwebhUQq/aQ0a0YzJAcx47D6din0U6Y2GtpboBKtc=\n=qQ/9\n-----END PGP SIGNATURE-----", "payload": "tree cc8ad5af7d86c3b907685ac0e19d9523c139e461\nparent bc497a626284d4323d6319ae93fc6964af19a99f\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1485253902 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1485426686 +0100\n\nremove rustc-serialize dependency and factor `util::cargo` out into a crate"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26e8558d8a7bb72f621696e36a02ea575574a69b", "html_url": "https://github.com/rust-lang/rust/commit/26e8558d8a7bb72f621696e36a02ea575574a69b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26e8558d8a7bb72f621696e36a02ea575574a69b/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc497a626284d4323d6319ae93fc6964af19a99f", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc497a626284d4323d6319ae93fc6964af19a99f", "html_url": "https://github.com/rust-lang/rust/commit/bc497a626284d4323d6319ae93fc6964af19a99f"}], "stats": {"total": 124, "additions": 25, "deletions": 99}, "files": [{"sha": "a21a4a6587594e28c7045fa37607b449b641a992", "filename": "Cargo.toml", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/26e8558d8a7bb72f621696e36a02ea575574a69b/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/26e8558d8a7bb72f621696e36a02ea575574a69b/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=26e8558d8a7bb72f621696e36a02ea575574a69b", "patch": "@@ -32,14 +32,15 @@ test = false\n # begin automatic update\n clippy_lints = { version = \"0.0.111\", path = \"clippy_lints\" }\n # end automatic update\n+cargo_metadata = \"0.1\"\n \n [dev-dependencies]\n compiletest_rs = \"0.2.5\"\n lazy_static = \"0.1.15\"\n regex = \"0.2\"\n-rustc-serialize = \"0.3\"\n+serde_derive = \"0.9.0-rc3\"\n clippy-mini-macro-test = { version = \"0.1\", path = \"mini-macro\" }\n-serde = \"0.7\"\n+serde = \"0.9.0-rc3\"\n \n [features]\n debugging = []"}, {"sha": "fb147b2a186bb9efbfe2f9b7e4d1de3e6e59e090", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/26e8558d8a7bb72f621696e36a02ea575574a69b/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/26e8558d8a7bb72f621696e36a02ea575574a69b/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=26e8558d8a7bb72f621696e36a02ea575574a69b", "patch": "@@ -22,7 +22,6 @@ semver = \"0.2.1\"\n toml = \"0.2\"\n unicode-normalization = \"0.1\"\n quine-mc_cluskey = \"0.2.2\"\n-rustc-serialize = \"0.3\"\n \n [features]\n debugging = []"}, {"sha": "2b778e12cb3759c49c763fa0926a17544c66fe59", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26e8558d8a7bb72f621696e36a02ea575574a69b/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26e8558d8a7bb72f621696e36a02ea575574a69b/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=26e8558d8a7bb72f621696e36a02ea575574a69b", "patch": "@@ -38,8 +38,6 @@ extern crate regex_syntax;\n // for finding minimal boolean expressions\n extern crate quine_mc_cluskey;\n \n-extern crate rustc_serialize;\n-\n extern crate rustc_errors;\n extern crate rustc_plugin;\n extern crate rustc_const_eval;"}, {"sha": "b9ce8626eb9bf3a5e6286d084af0aa492e2b8ec5", "filename": "clippy_lints/src/utils/cargo.rs", "status": "removed", "additions": 0, "deletions": 77, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/bc497a626284d4323d6319ae93fc6964af19a99f/clippy_lints%2Fsrc%2Futils%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc497a626284d4323d6319ae93fc6964af19a99f/clippy_lints%2Fsrc%2Futils%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fcargo.rs?ref=bc497a626284d4323d6319ae93fc6964af19a99f", "patch": "@@ -1,77 +0,0 @@\n-use std::collections::HashMap;\n-use std::process::Command;\n-use std::str::{from_utf8, Utf8Error};\n-use std::io;\n-use rustc_serialize::json;\n-\n-#[derive(RustcDecodable, Debug)]\n-pub struct Metadata {\n-    pub packages: Vec<Package>,\n-    resolve: Option<()>,\n-    pub version: usize,\n-}\n-\n-#[derive(RustcDecodable, Debug)]\n-pub struct Package {\n-    pub name: String,\n-    pub version: String,\n-    id: String,\n-    source: Option<String>,\n-    pub dependencies: Vec<Dependency>,\n-    pub targets: Vec<Target>,\n-    features: HashMap<String, Vec<String>>,\n-    pub manifest_path: String,\n-}\n-\n-#[derive(RustcDecodable, Debug)]\n-pub struct Dependency {\n-    pub name: String,\n-    source: Option<String>,\n-    pub req: String,\n-    kind: Option<String>,\n-    optional: bool,\n-    uses_default_features: bool,\n-    features: Vec<String>,\n-    target: Option<String>,\n-}\n-\n-#[derive(RustcDecodable, Debug)]\n-pub struct Target {\n-    pub name: String,\n-    pub kind: Vec<String>,\n-    src_path: String,\n-}\n-\n-#[derive(Debug)]\n-pub enum Error {\n-    Io(io::Error),\n-    Utf8(Utf8Error),\n-    Json(json::DecoderError),\n-}\n-\n-impl From<io::Error> for Error {\n-    fn from(err: io::Error) -> Self {\n-        Error::Io(err)\n-    }\n-}\n-impl From<Utf8Error> for Error {\n-    fn from(err: Utf8Error) -> Self {\n-        Error::Utf8(err)\n-    }\n-}\n-impl From<json::DecoderError> for Error {\n-    fn from(err: json::DecoderError) -> Self {\n-        Error::Json(err)\n-    }\n-}\n-\n-pub fn metadata(manifest_path_arg: Option<&str>) -> Result<Metadata, Error> {\n-    let mut cmd = Command::new(\"cargo\");\n-    cmd.arg(\"metadata\").arg(\"--no-deps\");\n-    if let Some(mani) = manifest_path_arg {\n-        cmd.arg(mani);\n-    }\n-    let output = cmd.output()?;\n-    let stdout = from_utf8(&output.stdout)?;\n-    Ok(json::decode(stdout)?)\n-}"}, {"sha": "ef9c6b9c38a21ddeab56394a7aee5f0c66b4a3b4", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/26e8558d8a7bb72f621696e36a02ea575574a69b/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26e8558d8a7bb72f621696e36a02ea575574a69b/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=26e8558d8a7bb72f621696e36a02ea575574a69b", "patch": "@@ -21,7 +21,6 @@ use syntax::errors::DiagnosticBuilder;\n use syntax::ptr::P;\n use syntax::symbol::keywords;\n \n-pub mod cargo;\n pub mod comparisons;\n pub mod conf;\n pub mod constants;"}, {"sha": "1be98cbeb9276e99b10a1b1d1a19301fa22db878", "filename": "src/main.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/26e8558d8a7bb72f621696e36a02ea575574a69b/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26e8558d8a7bb72f621696e36a02ea575574a69b/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=26e8558d8a7bb72f621696e36a02ea575574a69b", "patch": "@@ -21,7 +21,7 @@ use std::process::{self, Command};\n use syntax::ast;\n use std::io::{self, Write};\n \n-use clippy_lints::utils::cargo;\n+extern crate cargo_metadata;\n \n struct ClippyCompilerCalls {\n     default: RustcDefaultCalls,\n@@ -179,15 +179,13 @@ pub fn main() {\n \n         let manifest_path_arg = std::env::args().skip(2).find(|val| val.starts_with(\"--manifest-path=\"));\n \n-        let mut metadata = if let Ok(metadata) = cargo::metadata(manifest_path_arg.as_ref().map(AsRef::as_ref)) {\n+        let mut metadata = if let Ok(metadata) = cargo_metadata::metadata(manifest_path_arg.as_ref().map(AsRef::as_ref)) {\n             metadata\n         } else {\n             let _ = io::stderr().write_fmt(format_args!(\"error: Could not obtain cargo metadata.\"));\n             process::exit(101);\n         };\n \n-        assert_eq!(metadata.version, 1);\n-\n         let manifest_path = manifest_path_arg.map(|arg| PathBuf::from(Path::new(&arg[\"--manifest-path=\".len()..])));\n \n         let current_dir = std::env::current_dir();"}, {"sha": "a0671f07101dea43420275ac64572a1e1f3ba22e", "filename": "tests/compile-fail/serde.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/26e8558d8a7bb72f621696e36a02ea575574a69b/tests%2Fcompile-fail%2Fserde.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26e8558d8a7bb72f621696e36a02ea575574a69b/tests%2Fcompile-fail%2Fserde.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fserde.rs?ref=26e8558d8a7bb72f621696e36a02ea575574a69b", "patch": "@@ -9,14 +9,19 @@ struct A;\n \n impl serde::de::Visitor for A {\n     type Value = ();\n-    fn visit_str<E>(&mut self, _v: &str) -> Result<Self::Value, E>\n-        where E: serde::Error,\n+\n+    fn expecting(&self, _: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {\n+        unimplemented!()\n+    }\n+\n+    fn visit_str<E>(self, _v: &str) -> Result<Self::Value, E>\n+        where E: serde::de::Error,\n     {\n         unimplemented!()\n     }\n \n-    fn visit_string<E>(&mut self, _v: String) -> Result<Self::Value, E>\n-        where E: serde::Error,\n+    fn visit_string<E>(self, _v: String) -> Result<Self::Value, E>\n+        where E: serde::de::Error,\n     {\n         unimplemented!()\n     }\n@@ -27,9 +32,13 @@ struct B;\n impl serde::de::Visitor for B {\n     type Value = ();\n \n-    fn visit_string<E>(&mut self, _v: String) -> Result<Self::Value, E>\n+    fn expecting(&self, _: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {\n+        unimplemented!()\n+    }\n+\n+    fn visit_string<E>(self, _v: String) -> Result<Self::Value, E>\n     //~^ ERROR you should not implement `visit_string` without also implementing `visit_str`\n-        where E: serde::Error,\n+        where E: serde::de::Error,\n     {\n         unimplemented!()\n     }"}, {"sha": "c7da8e4f9c1526b34763fa35b843618b428ef9b1", "filename": "tests/used_underscore_binding_macro.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/26e8558d8a7bb72f621696e36a02ea575574a69b/tests%2Fused_underscore_binding_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26e8558d8a7bb72f621696e36a02ea575574a69b/tests%2Fused_underscore_binding_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fused_underscore_binding_macro.rs?ref=26e8558d8a7bb72f621696e36a02ea575574a69b", "patch": "@@ -1,11 +1,11 @@\n #![feature(plugin)]\n #![plugin(clippy)]\n \n-extern crate rustc_serialize;\n+#[macro_use] extern crate serde_derive;\n \n /// Test that we do not lint for unused underscores in a `MacroAttribute` expansion\n #[deny(used_underscore_binding)]\n-#[derive(RustcEncodable)]\n+#[derive(Deserialize)]\n struct MacroAttributesTest {\n     _foo: u32,\n }"}, {"sha": "beea9ab7e64c93e9cc22eb4a2e22e4e5e02a0700", "filename": "tests/versioncheck.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/26e8558d8a7bb72f621696e36a02ea575574a69b/tests%2Fversioncheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26e8558d8a7bb72f621696e36a02ea575574a69b/tests%2Fversioncheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fversioncheck.rs?ref=26e8558d8a7bb72f621696e36a02ea575574a69b", "patch": "@@ -1,11 +1,10 @@\n-extern crate clippy_lints;\n-use clippy_lints::utils::cargo;\n+extern crate cargo_metadata;\n \n #[test]\n fn check_that_clippy_lints_has_the_same_version_as_clippy() {\n-    let clippy_meta = cargo::metadata(None).expect(\"could not obtain cargo metadata\");\n+    let clippy_meta = cargo_metadata::metadata(None).expect(\"could not obtain cargo metadata\");\n     std::env::set_current_dir(std::env::current_dir().unwrap().join(\"clippy_lints\")).unwrap();\n-    let clippy_lints_meta = cargo::metadata(None).expect(\"could not obtain cargo metadata\");\n+    let clippy_lints_meta = cargo_metadata::metadata(None).expect(\"could not obtain cargo metadata\");\n     assert_eq!(clippy_lints_meta.packages[0].version, clippy_meta.packages[0].version);\n     for package in &clippy_meta.packages[0].dependencies {\n         if package.name == \"clippy_lints\" {"}]}