{"sha": "8533fc437b7619e1c289fa7913fdafda533903b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1MzNmYzQzN2I3NjE5ZTFjMjg5ZmE3OTEzZmRhZmRhNTMzOTAzYjg=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-16T01:08:36Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-16T01:41:39Z"}, "message": "vscode: add version and storage parameters to github binary source", "tree": {"sha": "350fb032042efde63e8763456df120efe71a5040", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/350fb032042efde63e8763456df120efe71a5040"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8533fc437b7619e1c289fa7913fdafda533903b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8533fc437b7619e1c289fa7913fdafda533903b8", "html_url": "https://github.com/rust-lang/rust/commit/8533fc437b7619e1c289fa7913fdafda533903b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8533fc437b7619e1c289fa7913fdafda533903b8/comments", "author": null, "committer": null, "parents": [{"sha": "d9767727168c68b4ecf930c9dab5a950c0be8e7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9767727168c68b4ecf930c9dab5a950c0be8e7b", "html_url": "https://github.com/rust-lang/rust/commit/d9767727168c68b4ecf930c9dab5a950c0be8e7b"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "96b8e9eb06562a464f25830e7b3c362cc1d30353", "filename": "editors/code/package.json", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8533fc437b7619e1c289fa7913fdafda533903b8/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/8533fc437b7619e1c289fa7913fdafda533903b8/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=8533fc437b7619e1c289fa7913fdafda533903b8", "patch": "@@ -6,7 +6,7 @@\n     \"private\": true,\n     \"icon\": \"icon.png\",\n     \"//\": \"The real version is in release.yaml, this one just needs to be bigger\",\n-    \"version\": \"0.2.0-dev\",\n+    \"version\": \"0.2.20200211-dev\",\n     \"publisher\": \"matklad\",\n     \"repository\": {\n         \"url\": \"https://github.com/rust-analyzer/rust-analyzer.git\","}, {"sha": "efef820abfaf609fd0497b5a7f804922d339e36b", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8533fc437b7619e1c289fa7913fdafda533903b8/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/8533fc437b7619e1c289fa7913fdafda533903b8/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=8533fc437b7619e1c289fa7913fdafda533903b8", "patch": "@@ -11,7 +11,7 @@ export async function createClient(config: Config): Promise<null | lc.LanguageCl\n     // It might be a good idea to test if the uri points to a file.\n     const workspaceFolderPath = vscode.workspace.workspaceFolders?.[0]?.uri.fsPath ?? '.';\n \n-    const serverPath = await ensureServerBinary(config.serverBinarySource);\n+    const serverPath = await ensureServerBinary(config.serverSource);\n     if (!serverPath) return null;\n \n     const run: lc.Executable = {"}, {"sha": "4335c3a7180d2eca7012ff5383c3712032574874", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8533fc437b7619e1c289fa7913fdafda533903b8/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/8533fc437b7619e1c289fa7913fdafda533903b8/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=8533fc437b7619e1c289fa7913fdafda533903b8", "patch": "@@ -24,6 +24,19 @@ export class Config {\n     ]\n     .map(opt => `${Config.rootSection}.${opt}`);\n \n+    private static readonly extensionVersion: string = (() => {\n+        const packageJsonVersion = vscode\n+            .extensions\n+            .getExtension(\"matklad.rust-analyzer\")!\n+            .packageJSON\n+            .version as string; // n.n.YYYYMMDD\n+\n+        const realVersionRegexp = /^\\d+\\.\\d+\\.(\\d{4})(\\d{2})(\\d{2})/;\n+        const [, yyyy, mm, dd] = packageJsonVersion.match(realVersionRegexp)!;\n+\n+        return `${yyyy}-${mm}-${dd}`;\n+    })();\n+\n     private cfg!: vscode.WorkspaceConfiguration;\n \n     constructor(private readonly ctx: vscode.ExtensionContext) {\n@@ -98,7 +111,7 @@ export class Config {\n         }\n     }\n \n-    get serverBinarySource(): null | BinarySource {\n+    get serverSource(): null | BinarySource {\n         const serverPath = RA_LSP_DEBUG ?? this.cfg.get<null | string>(\"raLspServerPath\");\n \n         if (serverPath) {\n@@ -116,6 +129,8 @@ export class Config {\n             type: BinarySource.Type.GithubRelease,\n             dir:  this.ctx.globalStoragePath,\n             file: prebuiltBinaryName,\n+            storage: this.ctx.globalState,\n+            version: Config.extensionVersion,\n             repo: {\n                 name: \"rust-analyzer\",\n                 owner: \"rust-analyzer\","}, {"sha": "9fcf2ec3826eda09743c2fcdbb910a5d7c1487b4", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8533fc437b7619e1c289fa7913fdafda533903b8/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/8533fc437b7619e1c289fa7913fdafda533903b8/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=8533fc437b7619e1c289fa7913fdafda533903b8", "patch": "@@ -60,6 +60,10 @@ export class Ctx {\n         this.pushCleanup(d);\n     }\n \n+    get globalState(): vscode.Memento {\n+        return this.extCtx.globalState;\n+    }\n+\n     get subscriptions(): Disposable[] {\n         return this.extCtx.subscriptions;\n     }"}, {"sha": "e40839e4b2ba4fc36cd74c73cc444f35483565d0", "filename": "editors/code/src/installation/interfaces.ts", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8533fc437b7619e1c289fa7913fdafda533903b8/editors%2Fcode%2Fsrc%2Finstallation%2Finterfaces.ts", "raw_url": "https://github.com/rust-lang/rust/raw/8533fc437b7619e1c289fa7913fdafda533903b8/editors%2Fcode%2Fsrc%2Finstallation%2Finterfaces.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Finterfaces.ts?ref=8533fc437b7619e1c289fa7913fdafda533903b8", "patch": "@@ -1,3 +1,5 @@\n+import * as vscode from \"vscode\";\n+\n export interface GithubRepo {\n     name: string;\n     owner: string;\n@@ -50,6 +52,17 @@ export namespace BinarySource {\n          * and in local `.dir`.\n          */\n         file: string;\n+\n+        /**\n+         * Tag of github release that denotes a version required by this extension.\n+         */\n+        version: string;\n+\n+        /**\n+         * Object that provides `get()/update()` operations to store metadata\n+         * about the actual binary, e.g. its actual version.\n+         */\n+        storage: vscode.Memento;\n     }\n \n }"}]}