{"sha": "96d6126f9bae9a9171b150fb9a6e26047229faaa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2ZDYxMjZmOWJhZTlhOTE3MWIxNTBmYjlhNmUyNjA0NzIyOWZhYWE=", "commit": {"author": {"name": "nham", "email": "hamann.nick@gmail.com", "date": "2014-07-30T20:05:24Z"}, "committer": {"name": "nham", "email": "hamann.nick@gmail.com", "date": "2014-07-30T20:05:24Z"}, "message": "Implement Default for std::io::FilePermission", "tree": {"sha": "b700246504732f9307299e50b28b93582c7aa458", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b700246504732f9307299e50b28b93582c7aa458"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96d6126f9bae9a9171b150fb9a6e26047229faaa", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96d6126f9bae9a9171b150fb9a6e26047229faaa", "html_url": "https://github.com/rust-lang/rust/commit/96d6126f9bae9a9171b150fb9a6e26047229faaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96d6126f9bae9a9171b150fb9a6e26047229faaa/comments", "author": {"login": "nham", "id": 546409, "node_id": "MDQ6VXNlcjU0NjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/546409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nham", "html_url": "https://github.com/nham", "followers_url": "https://api.github.com/users/nham/followers", "following_url": "https://api.github.com/users/nham/following{/other_user}", "gists_url": "https://api.github.com/users/nham/gists{/gist_id}", "starred_url": "https://api.github.com/users/nham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nham/subscriptions", "organizations_url": "https://api.github.com/users/nham/orgs", "repos_url": "https://api.github.com/users/nham/repos", "events_url": "https://api.github.com/users/nham/events{/privacy}", "received_events_url": "https://api.github.com/users/nham/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nham", "id": 546409, "node_id": "MDQ6VXNlcjU0NjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/546409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nham", "html_url": "https://github.com/nham", "followers_url": "https://api.github.com/users/nham/followers", "following_url": "https://api.github.com/users/nham/following{/other_user}", "gists_url": "https://api.github.com/users/nham/gists{/gist_id}", "starred_url": "https://api.github.com/users/nham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nham/subscriptions", "organizations_url": "https://api.github.com/users/nham/orgs", "repos_url": "https://api.github.com/users/nham/repos", "events_url": "https://api.github.com/users/nham/events{/privacy}", "received_events_url": "https://api.github.com/users/nham/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3e0db15592d71b8b7125bffbf73df231be8da9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3e0db15592d71b8b7125bffbf73df231be8da9d", "html_url": "https://github.com/rust-lang/rust/commit/f3e0db15592d71b8b7125bffbf73df231be8da9d"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "f1b92b973c8bb1649a0e404882f11dd878423831", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96d6126f9bae9a9171b150fb9a6e26047229faaa/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96d6126f9bae9a9171b150fb9a6e26047229faaa/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=96d6126f9bae9a9171b150fb9a6e26047229faaa", "patch": "@@ -223,6 +223,7 @@ responding to errors that may occur while attempting to read the numbers.\n \n use char::Char;\n use collections::Collection;\n+use default::Default;\n use fmt;\n use int;\n use iter::Iterator;\n@@ -1829,6 +1830,11 @@ on unix-like systems.\"]\n     }\n )\n \n+impl Default for FilePermission {\n+    #[inline]\n+    fn default() -> FilePermission { FilePermission::empty() }\n+}\n+\n #[cfg(test)]\n mod tests {\n     use super::{IoResult, Reader, MemReader, NoProgress, InvalidInput};"}]}