{"sha": "9986b9d01184e9be6390c377942386c4451c22d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5ODZiOWQwMTE4NGU5YmU2MzkwYzM3Nzk0MjM4NmM0NDUxYzIyZDk=", "commit": {"author": {"name": "rChaser53", "email": "tayoshizawa29@gmail.com", "date": "2019-06-25T14:14:19Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2019-06-25T14:14:19Z"}, "message": "fix internal error for long closure types (#3653)", "tree": {"sha": "b7ce93986c6ed3b327e947c1b5cb8eb2b1127f1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7ce93986c6ed3b327e947c1b5cb8eb2b1127f1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9986b9d01184e9be6390c377942386c4451c22d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9986b9d01184e9be6390c377942386c4451c22d9", "html_url": "https://github.com/rust-lang/rust/commit/9986b9d01184e9be6390c377942386c4451c22d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9986b9d01184e9be6390c377942386c4451c22d9/comments", "author": {"login": "rchaser53", "id": 9676954, "node_id": "MDQ6VXNlcjk2NzY5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/9676954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rchaser53", "html_url": "https://github.com/rchaser53", "followers_url": "https://api.github.com/users/rchaser53/followers", "following_url": "https://api.github.com/users/rchaser53/following{/other_user}", "gists_url": "https://api.github.com/users/rchaser53/gists{/gist_id}", "starred_url": "https://api.github.com/users/rchaser53/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rchaser53/subscriptions", "organizations_url": "https://api.github.com/users/rchaser53/orgs", "repos_url": "https://api.github.com/users/rchaser53/repos", "events_url": "https://api.github.com/users/rchaser53/events{/privacy}", "received_events_url": "https://api.github.com/users/rchaser53/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "561653326d158e81c7cd1cd4d6ed34133a33b8fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/561653326d158e81c7cd1cd4d6ed34133a33b8fc", "html_url": "https://github.com/rust-lang/rust/commit/561653326d158e81c7cd1cd4d6ed34133a33b8fc"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "95f8014f38afb211200673025a049f396d5d6190", "filename": "src/types.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9986b9d01184e9be6390c377942386c4451c22d9/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9986b9d01184e9be6390c377942386c4451c22d9/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=9986b9d01184e9be6390c377942386c4451c22d9", "patch": "@@ -328,8 +328,9 @@ where\n         Shape::legacy(budget, offset)\n     };\n \n+    let is_inputs_empty = inputs.len() == 0;\n     let list_lo = context.snippet_provider.span_after(span, \"(\");\n-    let (list_str, tactic) = if inputs.len() == 0 {\n+    let (list_str, tactic) = if is_inputs_empty {\n         let tactic = get_tactics(&[], &output, shape);\n         let list_hi = context.snippet_provider.span_before(span, \")\");\n         let comment = context\n@@ -377,7 +378,10 @@ where\n         (write_list(&item_vec, &fmt)?, tactic)\n     };\n \n-    let args = if tactic == DefinitiveListTactic::Horizontal || !context.use_block_indent() {\n+    let args = if tactic == DefinitiveListTactic::Horizontal\n+        || !context.use_block_indent()\n+        || is_inputs_empty\n+    {\n         format!(\"({})\", list_str)\n     } else {\n         format!("}, {"sha": "c153e99d0f01143b4e31110cfd4d394413f6eac8", "filename": "tests/source/issue-3651.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9986b9d01184e9be6390c377942386c4451c22d9/tests%2Fsource%2Fissue-3651.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9986b9d01184e9be6390c377942386c4451c22d9/tests%2Fsource%2Fissue-3651.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-3651.rs?ref=9986b9d01184e9be6390c377942386c4451c22d9", "patch": "@@ -0,0 +1,4 @@\n+fn f() -> Box<\n+    dyn FnMut() -> Thing< WithType = LongItemName, Error = LONGLONGLONGLONGLONGONGEvenLongerErrorNameLongerLonger>,\n+>{\n+}\n\\ No newline at end of file"}, {"sha": "4a95a1712ee53da3fe104a182fa44097da4b1a44", "filename": "tests/target/issue-3651.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9986b9d01184e9be6390c377942386c4451c22d9/tests%2Ftarget%2Fissue-3651.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9986b9d01184e9be6390c377942386c4451c22d9/tests%2Ftarget%2Fissue-3651.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3651.rs?ref=9986b9d01184e9be6390c377942386c4451c22d9", "patch": "@@ -0,0 +1,7 @@\n+fn f() -> Box<\n+    dyn FnMut() -> Thing<\n+        WithType = LongItemName,\n+        Error = LONGLONGLONGLONGLONGONGEvenLongerErrorNameLongerLonger,\n+    >,\n+> {\n+}"}]}