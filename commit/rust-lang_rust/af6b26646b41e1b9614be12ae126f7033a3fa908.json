{"sha": "af6b26646b41e1b9614be12ae126f7033a3fa908", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmNmIyNjY0NmI0MWUxYjk2MTRiZTEyYWUxMjZmNzAzM2EzZmE5MDg=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-10-30T11:45:03Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-11-12T10:05:54Z"}, "message": "ci: remove the MSYS_BITS env var", "tree": {"sha": "f7c50e73e78e8b1159c0e5e9f6d5835da8335936", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7c50e73e78e8b1159c0e5e9f6d5835da8335936"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af6b26646b41e1b9614be12ae126f7033a3fa908", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl3KhAUACgkQPgar6Auq\n8ZwNog//aPvQ3WyQpRfm9t/A3bJpiWiT6+tMrejO09DqzSIxPCf/AB3jwUfkAwVi\n25a27i113nsSyVAwduEKcxg71b4LUyqmTGPE2HkXRy7lZkmMN1vdhczwFXw1C6/1\nrnVChRf1k3jXm2GYAcTimGTPCZnpfCz41Yg169+h8hNatJVLRGHXKuD1E4W8JvfC\n+9Aof/mDE0HNcaBmp2lneaAzT3qU+ty+FRKpWVk0SJRyeU6gz5yr0WPTJiEsAr6/\nePSyydFaitS3nHklgd9/XCKTFDc7iYBJSFTtVQIs3kiXKnwdCMMV7XEPdAG69oon\n7jLLPsJq6UarE5s7e5lD5/0KtlY99Pfo4sNPAUt/ouFgsifNBF0I5XxZg/wHS6ev\n2w6i3/kgc4GFpCMd+Ybp/sn4vgeo5qorJ82RoSDEzalavYJ7WwVgsSuV/L1/EguA\nxPWrH75fA0fbVoxPhKEi7+a+6rQkGVbqGlA4/lD4WzXiBW8ZtIozAWYvXsGiW6FX\nLPz3gMuBEthI8wvYu5XntJ1+mxHcbWZlKxQwYSEN2+GTAPlgcB3z79MsRC/0k7OY\nLtZzna620/SSsAjXIlliLbIOtwbd0t9H4zsYjCiXqbhqLzObuXj4zsZrY999wiDJ\nZNxsk08EbDGOS11Exmg5phZ/0Grr+vV1Sag6lOle6x/JfhywxAY=\n=nxXY\n-----END PGP SIGNATURE-----", "payload": "tree f7c50e73e78e8b1159c0e5e9f6d5835da8335936\nparent 53c2c04d63b3c043ec5b1b4f401e04868a1139a4\nauthor Pietro Albini <pietro@pietroalbini.org> 1572435903 +0100\ncommitter Pietro Albini <pietro@pietroalbini.org> 1573553154 +0100\n\nci: remove the MSYS_BITS env var\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af6b26646b41e1b9614be12ae126f7033a3fa908", "html_url": "https://github.com/rust-lang/rust/commit/af6b26646b41e1b9614be12ae126f7033a3fa908", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af6b26646b41e1b9614be12ae126f7033a3fa908/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53c2c04d63b3c043ec5b1b4f401e04868a1139a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/53c2c04d63b3c043ec5b1b4f401e04868a1139a4", "html_url": "https://github.com/rust-lang/rust/commit/53c2c04d63b3c043ec5b1b4f401e04868a1139a4"}], "stats": {"total": 64, "additions": 28, "deletions": 36}, "files": [{"sha": "946eb483c2946a2c751ea9ae5b335ceaebe146fc", "filename": "src/ci/azure-pipelines/auto.yml", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/af6b26646b41e1b9614be12ae126f7033a3fa908/src%2Fci%2Fazure-pipelines%2Fauto.yml", "raw_url": "https://github.com/rust-lang/rust/raw/af6b26646b41e1b9614be12ae126f7033a3fa908/src%2Fci%2Fazure-pipelines%2Fauto.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Fauto.yml?ref=af6b26646b41e1b9614be12ae126f7033a3fa908", "patch": "@@ -223,37 +223,31 @@ jobs:\n     matrix:\n       # 32/64 bit MSVC tests\n       x86_64-msvc-1:\n-        MSYS_BITS: 64\n         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-profiler\n         SCRIPT: make ci-subset-1\n         # FIXME(#59637)\n         NO_DEBUG_ASSERTIONS: 1\n         NO_LLVM_ASSERTIONS: 1\n       x86_64-msvc-2:\n-        MSYS_BITS: 64\n         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-profiler\n         SCRIPT: make ci-subset-2\n       i686-msvc-1:\n-        MSYS_BITS: 32\n         RUST_CONFIGURE_ARGS: --build=i686-pc-windows-msvc\n         SCRIPT: make ci-subset-1\n         # FIXME(#59637)\n         NO_DEBUG_ASSERTIONS: 1\n         NO_LLVM_ASSERTIONS: 1\n       i686-msvc-2:\n-        MSYS_BITS: 32\n         RUST_CONFIGURE_ARGS: --build=i686-pc-windows-msvc\n         SCRIPT: make ci-subset-2\n         # FIXME(#59637)\n         NO_DEBUG_ASSERTIONS: 1\n         NO_LLVM_ASSERTIONS: 1\n       # MSVC aux tests\n       x86_64-msvc-aux:\n-        MSYS_BITS: 64\n         RUST_CHECK_TARGET: check-aux EXCLUDE_CARGO=1\n         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc\n       x86_64-msvc-cargo:\n-        MSYS_BITS: 64\n         SCRIPT: python x.py test src/tools/cargotest src/tools/cargo\n         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc\n         VCVARS_BAT: vcvars64.bat\n@@ -262,10 +256,8 @@ jobs:\n         NO_LLVM_ASSERTIONS: 1\n       # MSVC tools tests\n       x86_64-msvc-tools:\n-        MSYS_BITS: 64\n         SCRIPT: src/ci/docker/x86_64-gnu-tools/checktools.sh x.py /tmp/toolstate/toolstates.json windows\n         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --save-toolstates=/tmp/toolstate/toolstates.json\n-        DEPLOY_TOOLSTATES_JSON: toolstates-windows.json\n \n       # 32/64-bit MinGW builds.\n       #\n@@ -281,35 +273,30 @@ jobs:\n       # came from the mingw-w64 SourceForge download site. Unfortunately\n       # SourceForge is notoriously flaky, so we mirror it on our own infrastructure.\n       i686-mingw-1:\n-        MSYS_BITS: 32\n         RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu\n         SCRIPT: make ci-mingw-subset-1\n         CUSTOM_MINGW: 1\n         # FIXME(#59637)\n         NO_DEBUG_ASSERTIONS: 1\n         NO_LLVM_ASSERTIONS: 1\n       i686-mingw-2:\n-        MSYS_BITS: 32\n         RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu\n         SCRIPT: make ci-mingw-subset-2\n         CUSTOM_MINGW: 1\n       x86_64-mingw-1:\n-        MSYS_BITS: 64\n         SCRIPT: make ci-mingw-subset-1\n         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu\n         CUSTOM_MINGW: 1\n         # FIXME(#59637)\n         NO_DEBUG_ASSERTIONS: 1\n         NO_LLVM_ASSERTIONS: 1\n       x86_64-mingw-2:\n-        MSYS_BITS: 64\n         SCRIPT: make ci-mingw-subset-2\n         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu\n         CUSTOM_MINGW: 1\n \n       # 32/64 bit MSVC and GNU deployment\n       dist-x86_64-msvc:\n-        MSYS_BITS: 64\n         RUST_CONFIGURE_ARGS: >-\n           --build=x86_64-pc-windows-msvc\n           --target=x86_64-pc-windows-msvc,aarch64-pc-windows-msvc\n@@ -319,7 +306,6 @@ jobs:\n         DIST_REQUIRE_ALL_TOOLS: 1\n         DEPLOY: 1\n       dist-i686-msvc:\n-        MSYS_BITS: 32\n         RUST_CONFIGURE_ARGS: >-\n           --build=i686-pc-windows-msvc\n           --target=i586-pc-windows-msvc\n@@ -329,14 +315,12 @@ jobs:\n         DIST_REQUIRE_ALL_TOOLS: 1\n         DEPLOY: 1\n       dist-i686-mingw:\n-        MSYS_BITS: 32\n         RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu --enable-full-tools --enable-profiler\n         SCRIPT: python x.py dist\n         CUSTOM_MINGW: 1\n         DIST_REQUIRE_ALL_TOOLS: 1\n         DEPLOY: 1\n       dist-x86_64-mingw:\n-        MSYS_BITS: 64\n         SCRIPT: python x.py dist\n         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu --enable-full-tools --enable-profiler\n         CUSTOM_MINGW: 1\n@@ -345,7 +329,6 @@ jobs:\n \n       # \"alternate\" deployment, see .travis.yml for more info\n       dist-x86_64-msvc-alt:\n-        MSYS_BITS: 64\n         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-extended --enable-profiler\n         SCRIPT: python x.py dist\n         DEPLOY_ALT: 1"}, {"sha": "4d7c68593223afe8b8ceb0880b0cabc16ce07bd2", "filename": "src/ci/azure-pipelines/steps/run.yml", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/af6b26646b41e1b9614be12ae126f7033a3fa908/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml", "raw_url": "https://github.com/rust-lang/rust/raw/af6b26646b41e1b9614be12ae126f7033a3fa908/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml?ref=af6b26646b41e1b9614be12ae126f7033a3fa908", "patch": "@@ -8,6 +8,13 @@\n \n steps:\n \n+# Configure our CI_JOB_NAME variable which log analyzers can use for the main\n+# step to see what's going on.\n+- bash: |\n+    builder=$(echo $AGENT_JOBNAME | cut -d ' ' -f 2)\n+    echo \"##vso[task.setvariable variable=CI_JOB_NAME]$builder\"\n+  displayName: Configure Job Name\n+\n # Disable automatic line ending conversion, which is enabled by default on\n # Azure's Windows image. Having the conversion enabled caused regressions both\n # in our test suite (it broke miri tests) and in the ecosystem, since we\n@@ -135,13 +142,6 @@ steps:\n   condition: and(succeeded(), not(variables.SKIP_JOB))\n   displayName: Install awscli\n \n-# Configure our CI_JOB_NAME variable which log analyzers can use for the main\n-# step to see what's going on.\n-- bash: |\n-    builder=$(echo $AGENT_JOBNAME | cut -d ' ' -f 2)\n-    echo \"##vso[task.setvariable variable=CI_JOB_NAME]$builder\"\n-  displayName: Configure Job Name\n-\n # As a quick smoke check on the otherwise very fast mingw-check linux builder\n # check our own internal scripts.\n - bash: |"}, {"sha": "fe39ce3e24116b974ac8c7432a46bc5cd67d4d6a", "filename": "src/ci/azure-pipelines/try.yml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/af6b26646b41e1b9614be12ae126f7033a3fa908/src%2Fci%2Fazure-pipelines%2Ftry.yml", "raw_url": "https://github.com/rust-lang/rust/raw/af6b26646b41e1b9614be12ae126f7033a3fa908/src%2Fci%2Fazure-pipelines%2Ftry.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Ftry.yml?ref=af6b26646b41e1b9614be12ae126f7033a3fa908", "patch": "@@ -72,7 +72,6 @@ jobs:\n #         DEPLOY: 1\n #\n #       dist-x86_64-msvc-alt:\n-#         MSYS_BITS: 64\n #         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-extended --enable-profiler\n #         SCRIPT: python x.py dist\n #         DEPLOY_ALT: 1"}, {"sha": "8b579587b9e1f6ffc255468833fa02eeaf33ecc3", "filename": "src/ci/scripts/install-mingw.sh", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/af6b26646b41e1b9614be12ae126f7033a3fa908/src%2Fci%2Fscripts%2Finstall-mingw.sh", "raw_url": "https://github.com/rust-lang/rust/raw/af6b26646b41e1b9614be12ae126f7033a3fa908/src%2Fci%2Fscripts%2Finstall-mingw.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Finstall-mingw.sh?ref=af6b26646b41e1b9614be12ae126f7033a3fa908", "patch": "@@ -31,24 +31,34 @@ MINGW_ARCHIVE_32=\"i686-6.3.0-release-posix-dwarf-rt_v5-rev2.7z\"\n MINGW_ARCHIVE_64=\"x86_64-6.3.0-release-posix-seh-rt_v5-rev2.7z\"\n \n if isWindows; then\n+    case \"${CI_JOB_NAME}\" in\n+        *i686*)\n+            bits=32\n+            arch=i686\n+            mingw_archive=\"${MINGW_ARCHIVE_32}\"\n+            ;;\n+        *x86_64*)\n+            bits=64\n+            arch=x86_64\n+            mingw_archive=\"${MINGW_ARCHIVE_64}\"\n+            ;;\n+        *)\n+            echo \"src/ci/scripts/install-mingw.sh can't detect the builder's architecture\"\n+            echo \"please tweak it to recognize the builder named '${CI_JOB_NAME}'\"\n+            exit 1\n+            ;;\n+    esac\n+\n     if [[ \"${CUSTOM_MINGW-0}\" -ne 1 ]]; then\n-        arch=i686\n-        if [ \"$MSYS_BITS\" = \"64\" ]; then\n-          arch=x86_64\n-        fi\n         pacman -S --noconfirm --needed mingw-w64-$arch-toolchain mingw-w64-$arch-cmake \\\n             mingw-w64-$arch-gcc mingw-w64-$arch-python2\n-        ciCommandAddPath \"${SYSTEM_WORKFOLDER}/msys2/mingw${MSYS_BITS}/bin\"\n+        ciCommandAddPath \"${SYSTEM_WORKFOLDER}/msys2/mingw${bits}/bin\"\n     else\n-        mingw_archive=\"${MINGW_ARCHIVE_32}\"\n-        if [[ \"${MSYS_BITS}\" = \"64\" ]]; then\n-            mingw_archive=\"${MINGW_ARCHIVE_64}\"\n-        fi\n-        mingw_dir=\"mingw${MSYS_BITS}\"\n+        mingw_dir=\"mingw${bits}\"\n \n         curl -o mingw.7z \"${MIRRORS_BASE}/${mingw_archive}\"\n         7z x -y mingw.7z > /dev/null\n-        curl -o \"${mingw_dir}/bin/gdborig.exe\" \"${MIRRORS_BASE}/2017-04-20-${MSYS_BITS}bit-gdborig.exe\"\n+        curl -o \"${mingw_dir}/bin/gdborig.exe\" \"${MIRRORS_BASE}/2017-04-20-${bits}bit-gdborig.exe\"\n         ciCommandAddPath \"$(pwd)/${mingw_dir}/bin\"\n     fi\n fi"}]}