{"sha": "841cd30b451ee80c54c47e9b0c6ea42ae2de4795", "node_id": "C_kwDOAAsO6NoAKDg0MWNkMzBiNDUxZWU4MGM1NGM0N2U5YjBjNmVhNDJhZTJkZTQ3OTU", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-29T16:37:35Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-29T16:37:35Z"}, "message": "Add test", "tree": {"sha": "0557d74378ea74917afe463e1657c15bd58c71ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0557d74378ea74917afe463e1657c15bd58c71ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/841cd30b451ee80c54c47e9b0c6ea42ae2de4795", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/841cd30b451ee80c54c47e9b0c6ea42ae2de4795", "html_url": "https://github.com/rust-lang/rust/commit/841cd30b451ee80c54c47e9b0c6ea42ae2de4795", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/841cd30b451ee80c54c47e9b0c6ea42ae2de4795/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5cfc0504e30b2e87dc9405fc3aeaee8e2fa6b08", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5cfc0504e30b2e87dc9405fc3aeaee8e2fa6b08", "html_url": "https://github.com/rust-lang/rust/commit/f5cfc0504e30b2e87dc9405fc3aeaee8e2fa6b08"}], "stats": {"total": 77, "additions": 49, "deletions": 28}, "files": [{"sha": "466c85fc5b092f0c80377a557b6008936575e196", "filename": "crates/hir_def/src/macro_expansion_tests/mbe.rs", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/841cd30b451ee80c54c47e9b0c6ea42ae2de4795/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/841cd30b451ee80c54c47e9b0c6ea42ae2de4795/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs?ref=841cd30b451ee80c54c47e9b0c6ea42ae2de4795", "patch": "@@ -299,34 +299,6 @@ fn baz() {\n     )\n }\n \n-#[test]\n-fn asi() {\n-    // Thanks, Christopher!\n-    //\n-    // https://internals.rust-lang.org/t/understanding-decisions-behind-semicolons/15181/29\n-    check(\n-        r#\"\n-macro_rules! asi { ($($stmt:stmt)*) => ($($stmt)*); }\n-\n-fn main() {\n-    asi! {\n-        let a = 2\n-        let b = 5\n-        drop(b-a)\n-        println!(\"{}\", a+b)\n-    }\n-}\n-\"#,\n-        expect![[r#\"\n-macro_rules! asi { ($($stmt:stmt)*) => ($($stmt)*); }\n-\n-fn main() {\n-    let a = 2let b = 5drop(b-a)println!(\"{}\", a+b)\n-}\n-\"#]],\n-    )\n-}\n-\n #[test]\n fn test_match_group_empty_fixed_token() {\n     check("}, {"sha": "83e8937f5b1b904645ebe3c6f18cf5a10342620f", "filename": "crates/hir_def/src/macro_expansion_tests/mbe/matching.rs", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/841cd30b451ee80c54c47e9b0c6ea42ae2de4795/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fmatching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/841cd30b451ee80c54c47e9b0c6ea42ae2de4795/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fmatching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fmatching.rs?ref=841cd30b451ee80c54c47e9b0c6ea42ae2de4795", "patch": "@@ -50,3 +50,52 @@ macro_rules! m{ ($fmt:expr) => (); }\n \"#]],\n     );\n }\n+\n+#[test]\n+fn asi() {\n+    // Thanks, Christopher!\n+    //\n+    // https://internals.rust-lang.org/t/understanding-decisions-behind-semicolons/15181/29\n+    check(\n+        r#\"\n+macro_rules! asi { ($($stmt:stmt)*) => ($($stmt)*); }\n+\n+fn main() {\n+    asi! {\n+        let a = 2\n+        let b = 5\n+        drop(b-a)\n+        println!(\"{}\", a+b)\n+    }\n+}\n+\"#,\n+        expect![[r#\"\n+macro_rules! asi { ($($stmt:stmt)*) => ($($stmt)*); }\n+\n+fn main() {\n+    let a = 2let b = 5drop(b-a)println!(\"{}\", a+b)\n+}\n+\"#]],\n+    )\n+}\n+\n+#[test]\n+fn stmt_boundaries() {\n+    // FIXME: this actually works OK under rustc.\n+    check(\n+        r#\"\n+macro_rules! m {\n+    ($($s:stmt)*) => (stringify!($($s |)*))\n+}\n+// +errors\n+m!(;;92;let x = 92; loop {};);\n+\"#,\n+        expect![[r#\"\n+macro_rules! m {\n+    ($($s:stmt)*) => (stringify!($($s |)*))\n+}\n+/* error: expected Stmt *//* parse error: expected SEMICOLON */\n+stringify!()\n+\"#]],\n+    );\n+}"}]}