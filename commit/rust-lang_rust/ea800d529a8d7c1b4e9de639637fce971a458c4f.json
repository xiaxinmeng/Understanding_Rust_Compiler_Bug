{"sha": "ea800d529a8d7c1b4e9de639637fce971a458c4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhODAwZDUyOWE4ZDdjMWI0ZTlkZTYzOTYzN2ZjZTk3MWE0NThjNGY=", "commit": {"author": {"name": "DPC", "email": "dylan.dpc@gmail.com", "date": "2020-08-29T15:25:14Z"}, "committer": {"name": "DPC", "email": "dylan.dpc@gmail.com", "date": "2020-08-29T15:25:14Z"}, "message": "fix tests", "tree": {"sha": "75c12e5ec7e9974435f3ec77b376d0d52ef53d8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75c12e5ec7e9974435f3ec77b376d0d52ef53d8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea800d529a8d7c1b4e9de639637fce971a458c4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea800d529a8d7c1b4e9de639637fce971a458c4f", "html_url": "https://github.com/rust-lang/rust/commit/ea800d529a8d7c1b4e9de639637fce971a458c4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea800d529a8d7c1b4e9de639637fce971a458c4f/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e208efaa850efaa97495e81c49cf0f5767e8f49", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e208efaa850efaa97495e81c49cf0f5767e8f49", "html_url": "https://github.com/rust-lang/rust/commit/5e208efaa850efaa97495e81c49cf0f5767e8f49"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "330b4493b30d107b2ad91735f8b38772bece9fe0", "filename": "library/core/src/mem/maybe_uninit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea800d529a8d7c1b4e9de639637fce971a458c4f/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea800d529a8d7c1b4e9de639637fce971a458c4f/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs?ref=ea800d529a8d7c1b4e9de639637fce971a458c4f", "patch": "@@ -679,7 +679,7 @@ impl<T> MaybeUninit<T> {\n     /// // the `&mut MaybeUninit<[u8; 2048]>` to a `&mut [u8; 2048]`:\n     /// let buf: &mut [u8; 2048] = unsafe {\n     ///     // Safety: `buf` has been initialized.\n-    ///     buf.assume_init_ref()\n+    ///     buf.assume_init_mut()\n     /// };\n     ///\n     /// // Now we can use `buf` as a normal slice:\n@@ -746,7 +746,7 @@ impl<T> MaybeUninit<T> {\n     ///                  // ^^^^^^^^^^^^^\n     ///                  // (mutable) reference to uninitialized memory!\n     ///                  // This is undefined behavior.\n-    ///     foo.assume_init_mut()\n+    ///     foo.assume_init()\n     /// };\n     /// ```\n     // FIXME(#53491): We currently rely on the above being incorrect, i.e., we have references"}]}