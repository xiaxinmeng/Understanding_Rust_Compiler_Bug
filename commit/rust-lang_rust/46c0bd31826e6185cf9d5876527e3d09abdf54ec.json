{"sha": "46c0bd31826e6185cf9d5876527e3d09abdf54ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2YzBiZDMxODI2ZTYxODVjZjlkNTg3NjUyN2UzZDA5YWJkZjU0ZWM=", "commit": {"author": {"name": "Antoine Martin", "email": "antoine97.martin@gmail.com", "date": "2020-10-01T08:27:28Z"}, "committer": {"name": "Antoine Martin", "email": "antoine97.martin@gmail.com", "date": "2020-10-01T08:27:28Z"}, "message": "Bless mir-opt tests for 32 bit", "tree": {"sha": "7a7c50b82589f26ebec3054946b3c3982d51ae78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a7c50b82589f26ebec3054946b3c3982d51ae78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46c0bd31826e6185cf9d5876527e3d09abdf54ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46c0bd31826e6185cf9d5876527e3d09abdf54ec", "html_url": "https://github.com/rust-lang/rust/commit/46c0bd31826e6185cf9d5876527e3d09abdf54ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46c0bd31826e6185cf9d5876527e3d09abdf54ec/comments", "author": {"login": "alarsyo", "id": 15170378, "node_id": "MDQ6VXNlcjE1MTcwMzc4", "avatar_url": "https://avatars.githubusercontent.com/u/15170378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alarsyo", "html_url": "https://github.com/alarsyo", "followers_url": "https://api.github.com/users/alarsyo/followers", "following_url": "https://api.github.com/users/alarsyo/following{/other_user}", "gists_url": "https://api.github.com/users/alarsyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/alarsyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alarsyo/subscriptions", "organizations_url": "https://api.github.com/users/alarsyo/orgs", "repos_url": "https://api.github.com/users/alarsyo/repos", "events_url": "https://api.github.com/users/alarsyo/events{/privacy}", "received_events_url": "https://api.github.com/users/alarsyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alarsyo", "id": 15170378, "node_id": "MDQ6VXNlcjE1MTcwMzc4", "avatar_url": "https://avatars.githubusercontent.com/u/15170378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alarsyo", "html_url": "https://github.com/alarsyo", "followers_url": "https://api.github.com/users/alarsyo/followers", "following_url": "https://api.github.com/users/alarsyo/following{/other_user}", "gists_url": "https://api.github.com/users/alarsyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/alarsyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alarsyo/subscriptions", "organizations_url": "https://api.github.com/users/alarsyo/orgs", "repos_url": "https://api.github.com/users/alarsyo/repos", "events_url": "https://api.github.com/users/alarsyo/events{/privacy}", "received_events_url": "https://api.github.com/users/alarsyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "268f786d3c188160620b81abe988f29adc6a62e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/268f786d3c188160620b81abe988f29adc6a62e6", "html_url": "https://github.com/rust-lang/rust/commit/268f786d3c188160620b81abe988f29adc6a62e6"}], "stats": {"total": 28, "additions": 12, "deletions": 16}, "files": [{"sha": "1a6ee724cbb31d2dba8edcbc6947af36fd22815c", "filename": "src/test/mir-opt/issue_73223.main.SimplifyArmIdentity.32bit.diff", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/46c0bd31826e6185cf9d5876527e3d09abdf54ec/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/46c0bd31826e6185cf9d5876527e3d09abdf54ec/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.32bit.diff?ref=46c0bd31826e6185cf9d5876527e3d09abdf54ec", "patch": "@@ -106,7 +106,7 @@\n           _0 = const ();                   // scope 0 at $DIR/issue-73223.rs:4:17: 4:23\n           StorageDead(_2);                 // scope 0 at $DIR/issue-73223.rs:5:6: 5:7\n           StorageDead(_1);                 // scope 0 at $DIR/issue-73223.rs:9:1: 9:2\n-          goto -> bb3;                     // scope 0 at $DIR/issue-73223.rs:4:17: 4:23\n+          return;                          // scope 0 at $DIR/issue-73223.rs:4:17: 4:23\n       }\n   \n       bb2: {\n@@ -153,14 +153,10 @@\n           StorageDead(_17);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           _15 = Not(move _16);             // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageDead(_16);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          switchInt(_15) -> [false: bb4, otherwise: bb5]; // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          switchInt(_15) -> [false: bb3, otherwise: bb4]; // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       }\n   \n       bb3: {\n-          return;                          // scope 0 at $DIR/issue-73223.rs:9:2: 9:2\n-      }\n-  \n-      bb4: {\n           _8 = const ();                   // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageDead(_15);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageDead(_14);                // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n@@ -170,10 +166,10 @@\n           _0 = const ();                   // scope 0 at $DIR/issue-73223.rs:1:11: 9:2\n           StorageDead(_6);                 // scope 1 at $DIR/issue-73223.rs:9:1: 9:2\n           StorageDead(_1);                 // scope 0 at $DIR/issue-73223.rs:9:1: 9:2\n-          goto -> bb3;                     // scope 0 at $DIR/issue-73223.rs:9:2: 9:2\n+          return;                          // scope 0 at $DIR/issue-73223.rs:9:2: 9:2\n       }\n   \n-      bb5: {\n+      bb4: {\n           StorageLive(_19);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n           StorageLive(_20);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n           StorageLive(_21);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n@@ -224,24 +220,24 @@\n           StorageLive(_46);                // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           StorageLive(_47);                // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           _47 = _40;                       // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n-          _46 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _47) -> bb6; // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n+          _46 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _47) -> bb5; // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {std::intrinsics::transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n-      bb6: {\n+      bb5: {\n           StorageDead(_47);                // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           StorageLive(_48);                // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           StorageLive(_49);                // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           _49 = _39;                       // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n-          _48 = transmute::<&&i32, &core::fmt::Opaque>(move _49) -> bb7; // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n+          _48 = transmute::<&&i32, &core::fmt::Opaque>(move _49) -> bb6; // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(&&i32) -> &core::fmt::Opaque {std::intrinsics::transmute::<&&i32, &core::fmt::Opaque>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n-      bb7: {\n+      bb6: {\n           StorageDead(_49);                // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           (_38.0: &core::fmt::Opaque) = move _48; // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           (_38.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _46; // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n@@ -260,24 +256,24 @@\n           StorageLive(_50);                // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           StorageLive(_51);                // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           _51 = _43;                       // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n-          _50 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _51) -> bb8; // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n+          _50 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _51) -> bb7; // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {std::intrinsics::transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n-      bb8: {\n+      bb7: {\n           StorageDead(_51);                // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           StorageLive(_52);                // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           StorageLive(_53);                // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           _53 = _42;                       // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n-          _52 = transmute::<&&i32, &core::fmt::Opaque>(move _53) -> bb9; // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n+          _52 = transmute::<&&i32, &core::fmt::Opaque>(move _53) -> bb8; // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(&&i32) -> &core::fmt::Opaque {std::intrinsics::transmute::<&&i32, &core::fmt::Opaque>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n-      bb9: {\n+      bb8: {\n           StorageDead(_53);                // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           (_41.0: &core::fmt::Opaque) = move _52; // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           (_41.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _50; // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL"}]}