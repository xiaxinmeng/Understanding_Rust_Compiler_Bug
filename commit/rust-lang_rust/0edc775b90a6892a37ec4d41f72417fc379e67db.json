{"sha": "0edc775b90a6892a37ec4d41f72417fc379e67db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlZGM3NzViOTBhNjg5MmEzN2VjNGQ0MWY3MjQxN2ZjMzc5ZTY3ZGI=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-11-02T21:36:47Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-08-21T23:06:19Z"}, "message": "Only clone key when needed.", "tree": {"sha": "93f58fe1ef26724f4fccafbe21722d1545a67070", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93f58fe1ef26724f4fccafbe21722d1545a67070"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0edc775b90a6892a37ec4d41f72417fc379e67db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0edc775b90a6892a37ec4d41f72417fc379e67db", "html_url": "https://github.com/rust-lang/rust/commit/0edc775b90a6892a37ec4d41f72417fc379e67db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0edc775b90a6892a37ec4d41f72417fc379e67db/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e35fadddb8b91f6f7d47fb19e635d1fb1b2a965", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e35fadddb8b91f6f7d47fb19e635d1fb1b2a965", "html_url": "https://github.com/rust-lang/rust/commit/5e35fadddb8b91f6f7d47fb19e635d1fb1b2a965"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "a21b0336934188ee47a0aefd60ac28864974f1e8", "filename": "compiler/rustc_query_system/src/query/plumbing.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0edc775b90a6892a37ec4d41f72417fc379e67db/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0edc775b90a6892a37ec4d41f72417fc379e67db/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs?ref=0edc775b90a6892a37ec4d41f72417fc379e67db", "patch": "@@ -495,7 +495,7 @@ where\n         // promoted to the current session during\n         // `try_mark_green()`, so we can ignore them here.\n         let loaded = tcx.start_query(job.id, None, || {\n-            try_load_from_disk_and_cache_in_memory(tcx, key.clone(), &dep_node, query, compute)\n+            try_load_from_disk_and_cache_in_memory(tcx, &key, &dep_node, query, compute)\n         });\n         if let Some((result, dep_node_index)) = loaded {\n             return job.complete(result, dep_node_index);\n@@ -509,12 +509,13 @@ where\n \n fn try_load_from_disk_and_cache_in_memory<CTX, K, V>(\n     tcx: CTX,\n-    key: K,\n+    key: &K,\n     dep_node: &DepNode<CTX::DepKind>,\n     query: &QueryVtable<CTX, K, V>,\n     compute: fn(CTX::DepContext, K) -> V,\n ) -> Option<(V, DepNodeIndex)>\n where\n+    K: Clone,\n     CTX: QueryContext,\n     V: Debug,\n {\n@@ -527,7 +528,7 @@ where\n     debug_assert!(tcx.dep_context().dep_graph().is_green(dep_node));\n \n     // First we try to load the result from the on-disk cache.\n-    let result = if query.cache_on_disk(tcx, &key, None) {\n+    let result = if query.cache_on_disk(tcx, key, None) {\n         let prof_timer = tcx.dep_context().profiler().incr_cache_loading();\n         let result = query.try_load_from_disk(tcx, prev_dep_node_index);\n         prof_timer.finish_with_query_invocation_id(dep_node_index.into());\n@@ -559,7 +560,8 @@ where\n         let prof_timer = tcx.dep_context().profiler().query_provider();\n \n         // The dep-graph for this computation is already in-place.\n-        let result = tcx.dep_context().dep_graph().with_ignore(|| compute(*tcx.dep_context(), key));\n+        let result =\n+            tcx.dep_context().dep_graph().with_ignore(|| compute(*tcx.dep_context(), key.clone()));\n \n         prof_timer.finish_with_query_invocation_id(dep_node_index.into());\n "}]}