{"sha": "96c84ac3cbc4f2c81580893dacf263d00306649c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2Yzg0YWMzY2JjNGYyYzgxNTgwODkzZGFjZjI2M2QwMDMwNjY0OWM=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-07-30T19:32:20Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-07-30T20:09:45Z"}, "message": "Test `Option::unwrap` in a const context", "tree": {"sha": "920ca674695961ea1a2294885481df2c3c63b9fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/920ca674695961ea1a2294885481df2c3c63b9fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96c84ac3cbc4f2c81580893dacf263d00306649c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96c84ac3cbc4f2c81580893dacf263d00306649c", "html_url": "https://github.com/rust-lang/rust/commit/96c84ac3cbc4f2c81580893dacf263d00306649c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96c84ac3cbc4f2c81580893dacf263d00306649c/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc2c1f8ddc9a460c558741ae44b894faf3967f7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc2c1f8ddc9a460c558741ae44b894faf3967f7c", "html_url": "https://github.com/rust-lang/rust/commit/fc2c1f8ddc9a460c558741ae44b894faf3967f7c"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "6ed60ed87bf7690048f68452d5e8709ce3070a5e", "filename": "src/test/ui/consts/const-unwrap.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/96c84ac3cbc4f2c81580893dacf263d00306649c/src%2Ftest%2Fui%2Fconsts%2Fconst-unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96c84ac3cbc4f2c81580893dacf263d00306649c/src%2Ftest%2Fui%2Fconsts%2Fconst-unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-unwrap.rs?ref=96c84ac3cbc4f2c81580893dacf263d00306649c", "patch": "@@ -0,0 +1,14 @@\n+// check-fail\n+\n+#![feature(const_option)]\n+\n+const FOO: i32 = Some(42i32).unwrap();\n+\n+// This causes an error, but it is attributed to the `panic` *inside* `Option::unwrap` (maybe due\n+// to `track_caller`?). A note points to the originating `const`.\n+const BAR: i32 = Option::<i32>::None.unwrap(); //~ NOTE\n+\n+fn main() {\n+    println!(\"{}\", FOO);\n+    println!(\"{}\", BAR);\n+}"}, {"sha": "7f2c1f4151097abcbb923d8f225e92bbacf5d172", "filename": "src/test/ui/consts/const-unwrap.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/96c84ac3cbc4f2c81580893dacf263d00306649c/src%2Ftest%2Fui%2Fconsts%2Fconst-unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/96c84ac3cbc4f2c81580893dacf263d00306649c/src%2Ftest%2Fui%2Fconsts%2Fconst-unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-unwrap.stderr?ref=96c84ac3cbc4f2c81580893dacf263d00306649c", "patch": "@@ -0,0 +1,20 @@\n+error: any use of this value will cause an error\n+  --> $SRC_DIR/core/src/option.rs:LL:COL\n+   |\n+LL |             None => panic!(\"called `Option::unwrap()` on a `None` value\"),\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                     |\n+   |                     the evaluated program panicked at 'called `Option::unwrap()` on a `None` value', $DIR/const-unwrap.rs:9:38\n+   |                     inside `std::option::Option::<i32>::unwrap` at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+   |                     inside `BAR` at $DIR/const-unwrap.rs:9:18\n+   | \n+  ::: $DIR/const-unwrap.rs:9:1\n+   |\n+LL | const BAR: i32 = Option::<i32>::None.unwrap();\n+   | ----------------------------------------------\n+   |\n+   = note: `#[deny(const_err)]` on by default\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to previous error\n+"}]}