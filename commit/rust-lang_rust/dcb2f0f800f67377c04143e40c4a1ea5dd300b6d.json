{"sha": "dcb2f0f800f67377c04143e40c4a1ea5dd300b6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjYjJmMGY4MDBmNjczNzdjMDQxNDNlNDBjNGExZWE1ZGQzMDBiNmQ=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-01-15T22:29:10Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-01-15T22:29:10Z"}, "message": "Enable a test that works now with rustc master.", "tree": {"sha": "7334e39ec660eabf6cd33a96a8fd3cabc23fc2c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7334e39ec660eabf6cd33a96a8fd3cabc23fc2c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcb2f0f800f67377c04143e40c4a1ea5dd300b6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcb2f0f800f67377c04143e40c4a1ea5dd300b6d", "html_url": "https://github.com/rust-lang/rust/commit/dcb2f0f800f67377c04143e40c4a1ea5dd300b6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcb2f0f800f67377c04143e40c4a1ea5dd300b6d/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9ee6a0a3080c32b6cb5390e0980cb6972048f57", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9ee6a0a3080c32b6cb5390e0980cb6972048f57", "html_url": "https://github.com/rust-lang/rust/commit/f9ee6a0a3080c32b6cb5390e0980cb6972048f57"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "70bb9c3bb88a610e048cd38ade18c45004ab1485", "filename": "test/basic.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/dcb2f0f800f67377c04143e40c4a1ea5dd300b6d/test%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcb2f0f800f67377c04143e40c4a1ea5dd300b6d/test%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test%2Fbasic.rs?ref=dcb2f0f800f67377c04143e40c4a1ea5dd300b6d", "patch": "@@ -158,14 +158,14 @@ fn match_my_opt_none() -> i32 {\n     }\n }\n \n-// #[miri_run(expected = \"Int(13)\")]\n-// fn match_opt_some() -> i32 {\n-//     let x = Some(13);\n-//     match x {\n-//         Some(data)  => data,\n-//         None => 42,\n-//     }\n-// }\n+#[miri_run(expected = \"Int(13)\")]\n+fn match_opt_some() -> i32 {\n+    let x = Some(13);\n+    match x {\n+        Some(data)  => data,\n+        None => 42,\n+    }\n+}\n \n /// Test calling a very simple function from the standard library.\n #[miri_run(expected = \"Int(1)\")]"}]}