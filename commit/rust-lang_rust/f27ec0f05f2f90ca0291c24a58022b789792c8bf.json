{"sha": "f27ec0f05f2f90ca0291c24a58022b789792c8bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyN2VjMGYwNWYyZjkwY2EwMjkxYzI0YTU4MDIyYjc4OTc5MmM4YmY=", "commit": {"author": {"name": "Chris Gregory", "email": "czipperz@gmail.com", "date": "2019-05-25T20:02:35Z"}, "committer": {"name": "Chris Gregory", "email": "czipperz@gmail.com", "date": "2019-05-25T20:02:35Z"}, "message": "Add test that impl Seek for BufReader correctly invalidates buffer between seeks", "tree": {"sha": "9c71ef883470bd88121924d0160ff33515739113", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c71ef883470bd88121924d0160ff33515739113"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f27ec0f05f2f90ca0291c24a58022b789792c8bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f27ec0f05f2f90ca0291c24a58022b789792c8bf", "html_url": "https://github.com/rust-lang/rust/commit/f27ec0f05f2f90ca0291c24a58022b789792c8bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f27ec0f05f2f90ca0291c24a58022b789792c8bf/comments", "author": {"login": "czipperz", "id": 10054343, "node_id": "MDQ6VXNlcjEwMDU0MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/10054343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czipperz", "html_url": "https://github.com/czipperz", "followers_url": "https://api.github.com/users/czipperz/followers", "following_url": "https://api.github.com/users/czipperz/following{/other_user}", "gists_url": "https://api.github.com/users/czipperz/gists{/gist_id}", "starred_url": "https://api.github.com/users/czipperz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czipperz/subscriptions", "organizations_url": "https://api.github.com/users/czipperz/orgs", "repos_url": "https://api.github.com/users/czipperz/repos", "events_url": "https://api.github.com/users/czipperz/events{/privacy}", "received_events_url": "https://api.github.com/users/czipperz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "czipperz", "id": 10054343, "node_id": "MDQ6VXNlcjEwMDU0MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/10054343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czipperz", "html_url": "https://github.com/czipperz", "followers_url": "https://api.github.com/users/czipperz/followers", "following_url": "https://api.github.com/users/czipperz/following{/other_user}", "gists_url": "https://api.github.com/users/czipperz/gists{/gist_id}", "starred_url": "https://api.github.com/users/czipperz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czipperz/subscriptions", "organizations_url": "https://api.github.com/users/czipperz/orgs", "repos_url": "https://api.github.com/users/czipperz/repos", "events_url": "https://api.github.com/users/czipperz/events{/privacy}", "received_events_url": "https://api.github.com/users/czipperz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc45382c125d940822368e866588568d78551946", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc45382c125d940822368e866588568d78551946", "html_url": "https://github.com/rust-lang/rust/commit/fc45382c125d940822368e866588568d78551946"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "3bdb1e34a8b736946f85406a0c08a5459415fffe", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f27ec0f05f2f90ca0291c24a58022b789792c8bf/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27ec0f05f2f90ca0291c24a58022b789792c8bf/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=f27ec0f05f2f90ca0291c24a58022b789792c8bf", "patch": "@@ -1162,6 +1162,40 @@ mod tests {\n         assert_eq!(reader.get_ref().pos, expected);\n     }\n \n+    fn test_buffered_reader_seek_underflow_discard_buffer_between_seeks() {\n+        // gimmick reader that returns Err after first seek\n+        struct ErrAfterFirstSeekReader {\n+            first_seek: bool,\n+        }\n+        impl Read for ErrAfterFirstSeekReader {\n+            fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {\n+                for x in &mut *buf {\n+                    *x = 0;\n+                }\n+                Ok(buf.len())\n+            }\n+        }\n+        impl Seek for ErrAfterFirstSeekReader {\n+            fn seek(&mut self, _: SeekFrom) -> io::Result<u64> {\n+                if self.first_seek {\n+                    self.first_seek = false;\n+                    Ok(0)\n+                } else {\n+                    Err(io::Error::new(io::ErrorKind::Other, \"oh no!\"))\n+                }\n+            }\n+        }\n+\n+        let mut reader = BufReader::with_capacity(5, ErrAfterFirstSeekReader { first_seek: true });\n+        assert_eq!(reader.fill_buf().ok(), Some(&[0, 0, 0, 0, 0][..]));\n+\n+        // The following seek will require two underlying seeks.  The first will\n+        // succeed but the second will fail.  This should still invalidate the\n+        // buffer.\n+        assert!(reader.seek(SeekFrom::Current(i64::min_value())).is_err());\n+        assert_eq!(reader.buffer().len(), 0);\n+    }\n+\n     #[test]\n     fn test_buffered_writer() {\n         let inner = Vec::new();"}]}