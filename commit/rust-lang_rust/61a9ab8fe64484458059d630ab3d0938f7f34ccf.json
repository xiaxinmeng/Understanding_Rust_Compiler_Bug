{"sha": "61a9ab8fe64484458059d630ab3d0938f7f34ccf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxYTlhYjhmZTY0NDg0NDU4MDU5ZDYzMGFiM2QwOTM4ZjdmMzRjY2Y=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-23T15:58:54Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-23T15:58:54Z"}, "message": "slightly adapt const prop", "tree": {"sha": "0e9db147f5f34bb48d5d5d65d9c95da565176129", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e9db147f5f34bb48d5d5d65d9c95da565176129"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61a9ab8fe64484458059d630ab3d0938f7f34ccf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61a9ab8fe64484458059d630ab3d0938f7f34ccf", "html_url": "https://github.com/rust-lang/rust/commit/61a9ab8fe64484458059d630ab3d0938f7f34ccf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61a9ab8fe64484458059d630ab3d0938f7f34ccf/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d257bacfea8a046c41d6841f897d17944f2f0e64", "url": "https://api.github.com/repos/rust-lang/rust/commits/d257bacfea8a046c41d6841f897d17944f2f0e64", "html_url": "https://github.com/rust-lang/rust/commit/d257bacfea8a046c41d6841f897d17944f2f0e64"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "024595466a231c94bbf13fa961733b1d713c16f5", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/61a9ab8fe64484458059d630ab3d0938f7f34ccf/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61a9ab8fe64484458059d630ab3d0938f7f34ccf/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=61a9ab8fe64484458059d630ab3d0938f7f34ccf", "patch": "@@ -582,7 +582,7 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n         Some(())\n     }\n \n-    fn propagate_operand(&mut self, operand: &mut Operand<'tcx>, location: Location) {\n+    fn propagate_operand(&mut self, operand: &mut Operand<'tcx>) {\n         match *operand {\n             Operand::Copy(l) | Operand::Move(l) => {\n                 if let Some(value) = self.get_const(l) {\n@@ -606,7 +606,7 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n                     }\n                 }\n             }\n-            Operand::Constant(ref mut ct) => self.visit_constant(ct, location),\n+            Operand::Constant(_) => (),\n         }\n     }\n \n@@ -934,12 +934,12 @@ impl<'mir, 'tcx> MutVisitor<'tcx> for ConstPropagator<'mir, 'tcx> {\n     }\n \n     fn visit_operand(&mut self, operand: &mut Operand<'tcx>, location: Location) {\n+        self.super_operand(operand, location);\n+\n         // Only const prop copies and moves on `mir_opt_level=3` as doing so\n         // currently increases compile time.\n-        if self.tcx.sess.opts.debugging_opts.mir_opt_level < 3 {\n-            self.super_operand(operand, location)\n-        } else {\n-            self.propagate_operand(operand, location)\n+        if self.tcx.sess.opts.debugging_opts.mir_opt_level >= 3 {\n+            self.propagate_operand(operand)\n         }\n     }\n \n@@ -1114,7 +1114,7 @@ impl<'mir, 'tcx> MutVisitor<'tcx> for ConstPropagator<'mir, 'tcx> {\n                 // FIXME: This is currently redundant with `visit_operand`, but sadly\n                 // always visiting operands currently causes a perf regression in LLVM codegen, so\n                 // `visit_operand` currently only runs for propagates places for `mir_opt_level=3`.\n-                self.propagate_operand(discr, location)\n+                self.propagate_operand(discr)\n             }\n             // None of these have Operands to const-propagate.\n             TerminatorKind::Goto { .. }"}]}