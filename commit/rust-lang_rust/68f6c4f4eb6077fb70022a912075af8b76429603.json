{"sha": "68f6c4f4eb6077fb70022a912075af8b76429603", "node_id": "C_kwDOAAsO6NoAKDY4ZjZjNGY0ZWI2MDc3ZmI3MDAyMmE5MTIwNzVhZjhiNzY0Mjk2MDM", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2022-09-18T14:04:07Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2022-09-18T14:11:57Z"}, "message": "improve the wording for some release notes items", "tree": {"sha": "37e11d63e38462a9dea0cce97052461fe71184d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37e11d63e38462a9dea0cce97052461fe71184d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68f6c4f4eb6077fb70022a912075af8b76429603", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAmMnJy8ACgkQPgar6Auq\n8ZykbxAAqDKyD3h+/8j8o45Z0HHEZ3WTRpImaRKxRg+ier7Ot1crEg28oTbXGAJN\n6v9L/crORf3CRL3r0rDHIXHt98OdIXg2mb3DJki5j+iVpOqzpWHK9dQHkRqYIDgY\nS7L6YLnGErMEc9vkZpC/XZLLu8S7h6mMComrliMRFGdXnl1x+ogHbXFm0Ea0vKoH\nawbN9FrOhVgfZetJ//QlAeMgdaUQlyWDYh+QG3DBgzxVtOyPgg+QKvCuvcSj1Fzj\nrpJdM1mgi0T+TPL1Lt/LDM1gGpjEHE4dKtssF7sBGhEIshCBdZk3mVjOOD114wOo\n5NQVHBN1X64nQnmtHFhEv/aq+5TL0h0owZoxuKzZ64wjBIlFToenvZmGv4CRABXZ\ngBs2LREmtq1yXFPjgMFtFz/Oo/4DGG8SRaxnRXWlq00R+5H0F4ubxpGLLNQy7lb9\nqQ9SU4dzJ1UK5Zuy6pRZB3SnZVnY15ywsLlSQaT8sSyp473EElC7//u/2I7WY0Cr\ndWYpTqt9wX7wTQJkNFub7rV3WDWaaPpz8J71YnPcqmhKWRNvYq0Bo8szNi3HlQ28\nzIBP52QzntT1z8pzM89uy7PHj5jM9Qf+pC4iQczVyCW9xL2ihh/WK3Usgw197gy0\nQp4e288QgqBoua25mQQuU0bTbpJoOBPR/d1HFi+8bitBFi3C5v0=\n=iA51\n-----END PGP SIGNATURE-----", "payload": "tree 37e11d63e38462a9dea0cce97052461fe71184d3\nparent a29f341a8ac4e9325a5e37027b4215f50a76d06f\nauthor Pietro Albini <pietro@pietroalbini.org> 1663509847 +0200\ncommitter Pietro Albini <pietro@pietroalbini.org> 1663510317 +0200\n\nimprove the wording for some release notes items\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68f6c4f4eb6077fb70022a912075af8b76429603", "html_url": "https://github.com/rust-lang/rust/commit/68f6c4f4eb6077fb70022a912075af8b76429603", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68f6c4f4eb6077fb70022a912075af8b76429603/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a29f341a8ac4e9325a5e37027b4215f50a76d06f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a29f341a8ac4e9325a5e37027b4215f50a76d06f", "html_url": "https://github.com/rust-lang/rust/commit/a29f341a8ac4e9325a5e37027b4215f50a76d06f"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "c178270b675a08590bb98c348f5cebef9147ab32", "filename": "RELEASES.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/68f6c4f4eb6077fb70022a912075af8b76429603/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/68f6c4f4eb6077fb70022a912075af8b76429603/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=68f6c4f4eb6077fb70022a912075af8b76429603", "patch": "@@ -4,7 +4,7 @@ Version 1.64.0 (2022-09-22)\n Language\n --------\n - [make `const_err` show up in future breakage reports](https://github.com/rust-lang/rust/pull/97743/)\n-- [allow unions with mutable references and tuples of allowed types](https://github.com/rust-lang/rust/pull/97995/)\n+- [Unions with mutable references or tuples of allowed types are now allowed](https://github.com/rust-lang/rust/pull/97995/)\n - It is now considered valid to deallocate memory pointed to by a shared reference `&T` [if every byte in `T` is inside an `UnsafeCell`](https://github.com/rust-lang/rust/pull/98017/)\n - Unused tuple struct fields are now warned against in an allow-by-default lint, [`unused_tuple_struct_fields`](https://github.com/rust-lang/rust/pull/95977/), similar to the existing warning for unused struct fields. This lint will become warn-by-default in the future.\n \n@@ -15,12 +15,12 @@ Compiler\n - [Add Nintendo Switch as tier 3 target](https://github.com/rust-lang/rust/pull/88991/)\n   - Refer to Rust's [platform support page][platform-support-doc] for more\n     information on Rust's tiered platform support.\n-- [Only compile #[used] as llvm.compiler.used for ELF targets](https://github.com/rust-lang/rust/pull/93718/)\n-- [sess: stabilize `-Zterminal-width` as `--diagnostic-width`](https://github.com/rust-lang/rust/pull/95635/)\n+- [Only compile `#[used]` as llvm.compiler.used for ELF targets](https://github.com/rust-lang/rust/pull/93718/)\n+- [Add the `--diagnostic-width` compiler flag to define the terminal width.](https://github.com/rust-lang/rust/pull/95635/)\n - [Fix repr(align) enum handling](https://github.com/rust-lang/rust/pull/96814/)\n - [Suggest defining variable as mutable on `&mut _` type mismatch in pats](https://github.com/rust-lang/rust/pull/98431/)\n - [Emit warning when named arguments are used positionally in format](https://github.com/rust-lang/rust/pull/98580/)\n-- [Add support for link-flavor rust-lld for iOS, tvOS and watchOS](https://github.com/rust-lang/rust/pull/98771/)\n+- [Add support for link-flavor `rust-lld` for iOS, tvOS and watchOS](https://github.com/rust-lang/rust/pull/98771/)\n - [Do not mention private types from other crates as impl candidates](https://github.com/rust-lang/rust/pull/99091/)\n \n Libraries\n@@ -32,11 +32,11 @@ Libraries\n - [Make RwLockReadGuard covariant](https://github.com/rust-lang/rust/pull/96820/)\n - [Implement `FusedIterator` for `std::net::[Into]Incoming`](https://github.com/rust-lang/rust/pull/97300/)\n - [`impl<T: AsRawFd> AsRawFd for {Arc,Box}<T>`](https://github.com/rust-lang/rust/pull/97437/)\n-- [ptr::copy and ptr::swap are doing untyped copies](https://github.com/rust-lang/rust/pull/97712/)\n-- [Add assertion that `transmute_copy`'s U is not larger than T](https://github.com/rust-lang/rust/pull/98839/)\n+- [`ptr::copy` and `ptr::swap` are doing untyped copies](https://github.com/rust-lang/rust/pull/97712/)\n+- [Add assertion that `transmute_copy`'s U is not larger than `T`](https://github.com/rust-lang/rust/pull/98839/)\n - [A soundness bug in `BTreeMap` was fixed](https://github.com/rust-lang/rust/pull/99413/) that allowed data it was borrowing to be dropped before the container.\n - [Add cgroupv1 support to `available_parallelism`](https://github.com/rust-lang/rust/pull/97925/)\n-- [mem::uninitialized: mitigate many incorrect uses of this function](https://github.com/rust-lang/rust/pull/99182/)\n+- [Mitigate many incorrect uses of `mem::uninitialized`](https://github.com/rust-lang/rust/pull/99182/)\n \n Stabilized APIs\n ---------------\n@@ -113,13 +113,13 @@ Cargo\n \n Misc\n ----\n-- [Let rust-analyzer ship on stable, non-preview](https://github.com/rust-lang/rust/pull/98640/)\n+- [The `rust-analyzer` rustup component is now available on the stable channel.](https://github.com/rust-lang/rust/pull/98640/)\n \n Compatibility Notes\n -------------------\n - The minimum required versions for all `-linux-gnu` targets are now at least kernel 3.2 and glibc 2.17, for targets that previously supported older versions: [Increase the minimum linux-gnu versions](https://github.com/rust-lang/rust/pull/95026/)\n-- [Implement network primitives with ideal Rust layout, not C system layout](https://github.com/rust-lang/rust/pull/78802/)\n-- [Add assertion that `transmute_copy`'s U is not larger than T](https://github.com/rust-lang/rust/pull/98839/)\n+- [Network primitives are now implemented with the ideal Rust layout, not the C system layout](https://github.com/rust-lang/rust/pull/78802/). This can cause problems when transmuting the types.\n+- [Add assertion that `transmute_copy`'s `U` is not larger than `T`](https://github.com/rust-lang/rust/pull/98839/)\n - [A soundness bug in `BTreeMap` was fixed](https://github.com/rust-lang/rust/pull/99413/) that allowed data it was borrowing to be dropped before the container.\n - [The Drop behavior of C-like enums cast to ints has changed](https://github.com/rust-lang/rust/pull/96862/). These are already discouraged by a compiler warning.\n - [Relate late-bound closure lifetimes to parent fn in NLL](https://github.com/rust-lang/rust/pull/98835/)"}]}