{"sha": "4d6dde7f49eea0031a7faa651edef0a231dcb081", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkNmRkZTdmNDllZWEwMDMxYTdmYWE2NTFlZGVmMGEyMzFkY2IwODE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-28T00:38:25Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-03T22:01:59Z"}, "message": "libsyntax: De-`@mut` `SCTable::mark_memo`", "tree": {"sha": "6998100e374e6a60976665b0d05bf1eebf191e39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6998100e374e6a60976665b0d05bf1eebf191e39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d6dde7f49eea0031a7faa651edef0a231dcb081", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d6dde7f49eea0031a7faa651edef0a231dcb081", "html_url": "https://github.com/rust-lang/rust/commit/4d6dde7f49eea0031a7faa651edef0a231dcb081", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d6dde7f49eea0031a7faa651edef0a231dcb081/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be17a1b08c17b3381e86e3bea828a63ab69e67a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/be17a1b08c17b3381e86e3bea828a63ab69e67a9", "html_url": "https://github.com/rust-lang/rust/commit/be17a1b08c17b3381e86e3bea828a63ab69e67a9"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "fac86ae08d47b56b1f77551ed07a7b8081bb30fc", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4d6dde7f49eea0031a7faa651edef0a231dcb081/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d6dde7f49eea0031a7faa651edef0a231dcb081/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=4d6dde7f49eea0031a7faa651edef0a231dcb081", "patch": "@@ -89,9 +89,9 @@ pub type SyntaxContext = u32;\n // it should cut down on memory use *a lot*; applying a mark\n // to a tree containing 50 identifiers would otherwise generate\n pub struct SCTable {\n-    table : RefCell<~[SyntaxContext_]>,\n-    mark_memo : HashMap<(SyntaxContext,Mrk),SyntaxContext>,\n-    rename_memo : HashMap<(SyntaxContext,Ident,Name),SyntaxContext>\n+    table: RefCell<~[SyntaxContext_]>,\n+    mark_memo: RefCell<HashMap<(SyntaxContext,Mrk),SyntaxContext>>,\n+    rename_memo: HashMap<(SyntaxContext,Ident,Name),SyntaxContext>\n }\n \n // NB: these must be placed in any SCTable..."}, {"sha": "796d4ebf365dc52813f795132fa3d46b3da332d0", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4d6dde7f49eea0031a7faa651edef0a231dcb081/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d6dde7f49eea0031a7faa651edef0a231dcb081/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=4d6dde7f49eea0031a7faa651edef0a231dcb081", "patch": "@@ -717,17 +717,18 @@ pub fn new_mark_internal(m:Mrk, tail:SyntaxContext,table:&mut SCTable)\n     // flow-sensitivity. Results in two lookups on a hash table hit.\n     // also applies to new_rename_internal, below.\n     // let try_lookup = table.mark_memo.find(&key);\n-    match table.mark_memo.contains_key(&key) {\n+    let mut mark_memo = table.mark_memo.borrow_mut();\n+    match mark_memo.get().contains_key(&key) {\n         false => {\n             let new_idx = {\n                 let mut table = table.table.borrow_mut();\n                 idx_push(table.get(), Mark(m,tail))\n             };\n-            table.mark_memo.insert(key,new_idx);\n+            mark_memo.get().insert(key,new_idx);\n             new_idx\n         }\n         true => {\n-            match table.mark_memo.find(&key) {\n+            match mark_memo.get().find(&key) {\n                 None => fail!(\"internal error: key disappeared 2013042901\"),\n                 Some(idxptr) => {*idxptr}\n             }\n@@ -771,7 +772,7 @@ pub fn new_rename_internal(id:Ident, to:Name, tail:SyntaxContext, table: &mut SC\n pub fn new_sctable_internal() -> SCTable {\n     SCTable {\n         table: RefCell::new(~[EmptyCtxt,IllegalCtxt]),\n-        mark_memo: HashMap::new(),\n+        mark_memo: RefCell::new(HashMap::new()),\n         rename_memo: HashMap::new()\n     }\n }"}]}