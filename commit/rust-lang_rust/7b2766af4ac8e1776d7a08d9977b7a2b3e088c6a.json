{"sha": "7b2766af4ac8e1776d7a08d9977b7a2b3e088c6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiMjc2NmFmNGFjOGUxNzc2ZDdhMDhkOTk3N2I3YTJiM2UwODhjNmE=", "commit": {"author": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T11:35:29Z"}, "committer": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T15:22:32Z"}, "message": "clean tests/ui/len_zero.rs\n\nCleaning the empty lines for clarity.", "tree": {"sha": "865b39442cbdb350893af65bc058fa914dfd1f6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/865b39442cbdb350893af65bc058fa914dfd1f6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b2766af4ac8e1776d7a08d9977b7a2b3e088c6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b2766af4ac8e1776d7a08d9977b7a2b3e088c6a", "html_url": "https://github.com/rust-lang/rust/commit/7b2766af4ac8e1776d7a08d9977b7a2b3e088c6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b2766af4ac8e1776d7a08d9977b7a2b3e088c6a/comments", "author": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ca67910a8a8bebf8a6fc20bec802c087214d3b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ca67910a8a8bebf8a6fc20bec802c087214d3b3", "html_url": "https://github.com/rust-lang/rust/commit/3ca67910a8a8bebf8a6fc20bec802c087214d3b3"}], "stats": {"total": 42, "additions": 12, "deletions": 30}, "files": [{"sha": "4940ef4684fd20ccc8e8512a18bf73a13143785f", "filename": "tests/ui/len_zero.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7b2766af4ac8e1776d7a08d9977b7a2b3e088c6a/tests%2Fui%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b2766af4ac8e1776d7a08d9977b7a2b3e088c6a/tests%2Fui%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_zero.rs?ref=7b2766af4ac8e1776d7a08d9977b7a2b3e088c6a", "patch": "@@ -128,16 +128,10 @@ impl HasWrongIsEmpty {\n fn main() {\n     let x = [1, 2];\n     if x.len() == 0 {\n-\n-\n-\n         println!(\"This should not happen!\");\n     }\n \n     if \"\".len() == 0 {\n-\n-\n-\n     }\n \n     let y = One;\n@@ -152,30 +146,18 @@ fn main() {\n \n     let has_is_empty = HasIsEmpty;\n     if has_is_empty.len() == 0 {\n-\n-\n-\n         println!(\"Or this!\");\n     }\n     if has_is_empty.len() != 0 {\n-\n-\n-\n         println!(\"Or this!\");\n     }\n     if has_is_empty.len() > 0 {\n-\n-\n-\n         println!(\"Or this!\");\n     }\n     assert!(!has_is_empty.is_empty());\n \n     let with_is_empty: &WithIsEmpty = &Wither;\n     if with_is_empty.len() == 0 {\n-\n-\n-\n         println!(\"Or this!\");\n     }\n     assert!(!with_is_empty.is_empty());"}, {"sha": "891f1741aa749438519aeb3aa5aeff41caee72cd", "filename": "tests/ui/len_zero.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7b2766af4ac8e1776d7a08d9977b7a2b3e088c6a/tests%2Fui%2Flen_zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7b2766af4ac8e1776d7a08d9977b7a2b3e088c6a/tests%2Fui%2Flen_zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_zero.stderr?ref=7b2766af4ac8e1776d7a08d9977b7a2b3e088c6a", "patch": "@@ -59,39 +59,39 @@ note: lint level defined here\n     |                               ^^^^^^^^\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:137:8\n+   --> $DIR/len_zero.rs:134:8\n     |\n-137 |     if \"\".len() == 0 {\n+134 |     if \"\".len() == 0 {\n     |        ^^^^^^^^^^^^^ help: using `is_empty` is more concise: `\"\".is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:154:8\n+   --> $DIR/len_zero.rs:148:8\n     |\n-154 |     if has_is_empty.len() == 0 {\n+148 |     if has_is_empty.len() == 0 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:160:8\n+   --> $DIR/len_zero.rs:151:8\n     |\n-160 |     if has_is_empty.len() != 0 {\n+151 |     if has_is_empty.len() != 0 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:166:8\n+   --> $DIR/len_zero.rs:154:8\n     |\n-166 |     if has_is_empty.len() > 0 {\n+154 |     if has_is_empty.len() > 0 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:175:8\n+   --> $DIR/len_zero.rs:160:8\n     |\n-175 |     if with_is_empty.len() == 0 {\n+160 |     if with_is_empty.len() == 0 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `with_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:190:8\n+   --> $DIR/len_zero.rs:172:8\n     |\n-190 |     if b.len() != 0 {\n+172 |     if b.len() != 0 {\n     |        ^^^^^^^^^^^^ help: using `is_empty` is more concise: `!b.is_empty()`\n \n error: aborting due to 11 previous errors"}]}