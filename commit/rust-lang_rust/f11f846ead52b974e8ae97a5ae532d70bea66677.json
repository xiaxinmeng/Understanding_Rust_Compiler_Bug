{"sha": "f11f846ead52b974e8ae97a5ae532d70bea66677", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxMWY4NDZlYWQ1MmI5NzRlOGFlOTdhNWFlNTMyZDcwYmVhNjY2Nzc=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2011-05-20T00:18:53Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-27T02:42:32Z"}, "message": "Parsing and folding changes for globbed imports.", "tree": {"sha": "18b8afa68aec99224fb06d7df315474adf7f3294", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18b8afa68aec99224fb06d7df315474adf7f3294"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f11f846ead52b974e8ae97a5ae532d70bea66677", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f11f846ead52b974e8ae97a5ae532d70bea66677", "html_url": "https://github.com/rust-lang/rust/commit/f11f846ead52b974e8ae97a5ae532d70bea66677", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f11f846ead52b974e8ae97a5ae532d70bea66677/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "610c81af191e68f57b895485676e5c151bdb5f51", "url": "https://api.github.com/repos/rust-lang/rust/commits/610c81af191e68f57b895485676e5c151bdb5f51", "html_url": "https://github.com/rust-lang/rust/commit/610c81af191e68f57b895485676e5c151bdb5f51"}], "stats": {"total": 54, "additions": 42, "deletions": 12}, "files": [{"sha": "a38b2503892917d8fb4c2dc72365f9930d991b62", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f11f846ead52b974e8ae97a5ae532d70bea66677/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11f846ead52b974e8ae97a5ae532d70bea66677/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=f11f846ead52b974e8ae97a5ae532d70bea66677", "patch": "@@ -398,6 +398,7 @@ type view_item = spanned[view_item_];\n tag view_item_ {\n     view_item_use(ident, vec[@meta_item], def_id, ann);\n     view_item_import(ident, vec[ident], def_id);\n+    view_item_import_glob(vec[ident], def_id);\n     view_item_export(ident);\n }\n "}, {"sha": "4974e3c3fc4971d6806f9c946f173f2212ae707a", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 41, "deletions": 12, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/f11f846ead52b974e8ae97a5ae532d70bea66677/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11f846ead52b974e8ae97a5ae532d70bea66677/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=f11f846ead52b974e8ae97a5ae532d70bea66677", "patch": "@@ -2183,29 +2183,58 @@ fn parse_use(&parser p) -> @ast::view_item {\n }\n \n fn parse_rest_import_name(&parser p, ast::ident first,\n-                                 option::t[ast::ident] def_ident)\n+                          option::t[ast::ident] def_ident)\n         -> @ast::view_item {\n     auto lo = p.get_lo_pos();\n     let vec[ast::ident] identifiers = [first];\n-    while (p.peek() != token::SEMI) {\n-        expect(p, token::MOD_SEP);\n-        auto i = parse_ident(p);\n-        identifiers += [i];\n+    let bool glob = false;\n+\n+    while (true) {\n+        alt (p.peek()) {\n+            case (token::SEMI) {\n+                p.bump();\n+                break;\n+            }\n+            case (token::MOD_SEP) {\n+                if (glob) { p.err(\"cannot path into a glob\"); }\n+                p.bump();\n+            }\n+            case (_) { p.err(\"expecting '::' or ';'\"); }\n+        }\n+        alt (p.peek()) {\n+            case (token::IDENT(_,_)) {\n+                identifiers += [parse_ident(p)];\n+            }\n+            //the lexer can't tell the different kinds of stars apart ) :\n+            case (token::BINOP(token::STAR)) { \n+                glob = true;\n+                p.bump();\n+            }\n+            case (_) { p.err(\"expecting an identifier, or '*'\"); }\n+        }\n     }\n     auto hi = p.get_hi_pos();\n-    p.bump();\n-    auto defined_id;\n+    auto import_decl;\n     alt (def_ident) {\n         case(some[ast::ident](?i)) {\n-            defined_id = i;\n+            if (glob) {\n+                p.err(\"globbed imports can't be renamed\");\n+            }\n+            import_decl = ast::view_item_import(i, identifiers,\n+                                                p.next_def_id());\n         }\n         case (_) {\n-            auto len = vec::len[ast::ident](identifiers);\n-            defined_id = identifiers.(len - 1u);\n+            if (glob) {\n+                import_decl = ast::view_item_import_glob(identifiers,\n+                                                         p.next_def_id());\n+            } else {\n+                auto len = vec::len[ast::ident](identifiers);\n+                import_decl = ast::view_item_import(identifiers.(len - 1u), \n+                                                    identifiers, \n+                                                    p.next_def_id());\n+            }\n         }\n     }\n-    auto import_decl = ast::view_item_import(defined_id, identifiers,\n-                                            p.next_def_id());\n     ret @spanned(lo, hi, import_decl);\n }\n "}]}