{"sha": "3f504f6984331f9465496d9d96c1f43dab5ce9c6", "node_id": "C_kwDOAAsO6NoAKDNmNTA0ZjY5ODQzMzFmOTQ2NTQ5NmQ5ZDk2YzFmNDNkYWI1Y2U5YzY", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-02-07T06:23:37Z"}, "committer": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-03-05T18:15:00Z"}, "message": "Change to lint", "tree": {"sha": "6db5264ddd9a68c3493700ec8bd587ee9967e24f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6db5264ddd9a68c3493700ec8bd587ee9967e24f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f504f6984331f9465496d9d96c1f43dab5ce9c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f504f6984331f9465496d9d96c1f43dab5ce9c6", "html_url": "https://github.com/rust-lang/rust/commit/3f504f6984331f9465496d9d96c1f43dab5ce9c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f504f6984331f9465496d9d96c1f43dab5ce9c6/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c20b4f558440c24e8ef84782a71163fe236d72de", "url": "https://api.github.com/repos/rust-lang/rust/commits/c20b4f558440c24e8ef84782a71163fe236d72de", "html_url": "https://github.com/rust-lang/rust/commit/c20b4f558440c24e8ef84782a71163fe236d72de"}], "stats": {"total": 96, "additions": 75, "deletions": 21}, "files": [{"sha": "c519d05d2275c1dd9aefc3c2f50a8aa83c987f5a", "filename": "compiler/rustc_ast_passes/src/ast_validation.rs", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3f504f6984331f9465496d9d96c1f43dab5ce9c6/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f504f6984331f9465496d9d96c1f43dab5ce9c6/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs?ref=3f504f6984331f9465496d9d96c1f43dab5ce9c6", "patch": "@@ -15,7 +15,9 @@ use rustc_ast_pretty::pprust::{self, State};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{error_code, pluralize, struct_span_err, Applicability};\n use rustc_parse::validate_attr;\n-use rustc_session::lint::builtin::{MISSING_ABI, PATTERNS_IN_FNS_WITHOUT_BODY};\n+use rustc_session::lint::builtin::{\n+    DEPRECATED_WHERE_CLAUSE_LOCATION, MISSING_ABI, PATTERNS_IN_FNS_WITHOUT_BODY,\n+};\n use rustc_session::lint::{BuiltinLintDiagnostics, LintBuffer};\n use rustc_session::Session;\n use rustc_span::source_map::Spanned;\n@@ -123,11 +125,11 @@ impl<'a> AstValidator<'a> {\n     }\n \n     fn check_gat_where(\n-        &self,\n+        &mut self,\n+        id: NodeId,\n         before_predicates: &[WherePredicate],\n         where_clauses: (ast::TyAliasWhereClause, ast::TyAliasWhereClause),\n     ) {\n-        let sess = &self.session;\n         if !before_predicates.is_empty() {\n             let mut state = State::new();\n             if !where_clauses.1.0 {\n@@ -145,14 +147,16 @@ impl<'a> AstValidator<'a> {\n                 state.print_where_predicate(p);\n             }\n             let suggestion = state.s.eof();\n-            sess.struct_span_err(where_clauses.0.1, \"where clause not allowed here\")\n-                .span_suggestion(\n+            self.lint_buffer.buffer_lint_with_diagnostic(\n+                DEPRECATED_WHERE_CLAUSE_LOCATION,\n+                id,\n+                where_clauses.0.1,\n+                \"where clause not allowed here\",\n+                BuiltinLintDiagnostics::DeprecatedWhereclauseLocation(\n                     where_clauses.1.1.shrink_to_hi(),\n-                    \"move it here\",\n                     suggestion,\n-                    Applicability::MachineApplicable,\n-                )\n-                .emit();\n+                ),\n+            );\n         }\n     }\n \n@@ -1568,6 +1572,7 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                     self.check_type_no_bounds(bounds, \"`impl`s\");\n                     if ty.is_some() {\n                         self.check_gat_where(\n+                            item.id,\n                             generics.where_clause.predicates.split_at(*where_predicates_split).0,\n                             *where_clauses,\n                         );"}, {"sha": "92adb718933f444f3e560f2120fe0bc2c43cd5a8", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3f504f6984331f9465496d9d96c1f43dab5ce9c6/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f504f6984331f9465496d9d96c1f43dab5ce9c6/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=3f504f6984331f9465496d9d96c1f43dab5ce9c6", "patch": "@@ -818,6 +818,14 @@ pub trait LintContext: Sized {\n                         }\n                     }\n                 },\n+                BuiltinLintDiagnostics::DeprecatedWhereclauseLocation(new_span, suggestion) => {\n+                    db.span_suggestion(\n+                        new_span,\n+                        \"move it here\",\n+                        suggestion,\n+                        Applicability::MachineApplicable,\n+                    );\n+                },\n             }\n             // Rewrap `db`, and pass control to the user.\n             decorate(LintDiagnosticBuilder::new(db));"}, {"sha": "04a339f3c95a608f81fa3b53b8d75e17e35a8049", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/3f504f6984331f9465496d9d96c1f43dab5ce9c6/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f504f6984331f9465496d9d96c1f43dab5ce9c6/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=3f504f6984331f9465496d9d96c1f43dab5ce9c6", "patch": "@@ -3127,6 +3127,7 @@ declare_lint_pass! {\n         DUPLICATE_MACRO_ATTRIBUTES,\n         SUSPICIOUS_AUTO_TRAIT_IMPLS,\n         UNEXPECTED_CFGS,\n+        DEPRECATED_WHERE_CLAUSE_LOCATION,\n     ]\n }\n \n@@ -3737,3 +3738,36 @@ declare_lint! {\n         reference: \"issue #93367 <https://github.com/rust-lang/rust/issues/93367>\",\n     };\n }\n+\n+declare_lint! {\n+    /// The `deprecated_where_clause_location` lint detects when a where clause in front of the equals\n+    /// in an associated type.\n+    ///\n+    /// ### Example\n+    ///\n+    /// ```rust\n+    /// #![feature(generic_associated_types)]\n+    ///\n+    /// trait Trait {\n+    ///   type Assoc<'a> where Self: 'a;\n+    /// }\n+    ///\n+    /// impl Trait for () {\n+    ///   type Assoc<'a> where Self: 'a = ();\n+    /// }\n+    /// ```\n+    ///\n+    /// {{produces}}\n+    ///\n+    /// ### Explanation\n+    ///\n+    /// The preferred location for where clauses on associated types in impls\n+    /// is after the type. However, for most of generic associated types development,\n+    /// it was only accepted before the equals. To provide a transition period and\n+    /// further evaluate this change, both are currently accepted. At some point in\n+    /// the future, this may be disallowed at an edition boundary; but, that is\n+    /// undecided currently.\n+    pub DEPRECATED_WHERE_CLAUSE_LOCATION,\n+    Warn,\n+    \"deprecated where clause location\"\n+}"}, {"sha": "cd328b087358cc4a8789fb55398c4b711803e78b", "filename": "compiler/rustc_lint_defs/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3f504f6984331f9465496d9d96c1f43dab5ce9c6/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f504f6984331f9465496d9d96c1f43dab5ce9c6/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs?ref=3f504f6984331f9465496d9d96c1f43dab5ce9c6", "patch": "@@ -427,6 +427,7 @@ pub enum BuiltinLintDiagnostics {\n     NamedAsmLabel(String),\n     UnicodeTextFlow(Span, String),\n     UnexpectedCfg((Symbol, Span), Option<(Symbol, Span)>),\n+    DeprecatedWhereclauseLocation(Span, String),\n }\n \n /// Lints that are buffered up early on in the `Session` before the"}, {"sha": "a694f1ffaad92a6ad495aeed3224dadc3350bc97", "filename": "src/test/ui/generic-associated-types/bugs/issue-87735.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3f504f6984331f9465496d9d96c1f43dab5ce9c6/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87735.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3f504f6984331f9465496d9d96c1f43dab5ce9c6/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87735.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87735.stderr?ref=3f504f6984331f9465496d9d96c1f43dab5ce9c6", "patch": "@@ -1,10 +1,12 @@\n-error: where clause not allowed here\n+warning: where clause not allowed here\n   --> $DIR/issue-87735.rs:15:19\n    |\n LL |   type Output<'a> where Self: 'a = &'a [T];\n    |                   ^^^^^^^^^^^^^^          - help: move it here: `where Self: 'a`\n+   |\n+   = note: `#[warn(deprecated_where_clause_location)]` on by default\n \n-error: where clause not allowed here\n+warning: where clause not allowed here\n   --> $DIR/issue-87735.rs:36:19\n    |\n LL |   type Output<'a> where Self: 'a = FooRef<'a, U>;\n@@ -16,6 +18,6 @@ error[E0207]: the type parameter `U` is not constrained by the impl trait, self\n LL | impl<'b, T, U> AsRef2 for Foo<T>\n    |             ^ unconstrained type parameter\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error; 2 warnings emitted\n \n For more information about this error, try `rustc --explain E0207`."}, {"sha": "9a7cdd02eab02dad88eddc99ca938d99eb1e81ab", "filename": "src/test/ui/generic-associated-types/bugs/issue-87748.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3f504f6984331f9465496d9d96c1f43dab5ce9c6/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87748.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3f504f6984331f9465496d9d96c1f43dab5ce9c6/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87748.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87748.stderr?ref=3f504f6984331f9465496d9d96c1f43dab5ce9c6", "patch": "@@ -1,8 +1,10 @@\n-error: where clause not allowed here\n+warning: where clause not allowed here\n   --> $DIR/issue-87748.rs:16:24\n    |\n LL |     type Assoc<'a, 'b> where 'b: 'a = u32;\n    |                        ^^^^^^^^^^^^      - help: move it here: `where 'b: 'a`\n+   |\n+   = note: `#[warn(deprecated_where_clause_location)]` on by default\n \n error[E0478]: lifetime bound not satisfied\n   --> $DIR/issue-87748.rs:18:5\n@@ -21,6 +23,6 @@ note: but lifetime parameter must outlive the anonymous lifetime #1 defined here\n LL |     fn do_sth(_: u32) {}\n    |     ^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0478`."}, {"sha": "941acd5b5ab9730e6d77870e956605dccb830e55", "filename": "src/test/ui/parser/type-alias-where.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3f504f6984331f9465496d9d96c1f43dab5ce9c6/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f504f6984331f9465496d9d96c1f43dab5ce9c6/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where.rs?ref=3f504f6984331f9465496d9d96c1f43dab5ce9c6", "patch": "@@ -20,18 +20,18 @@ trait Trait {\n impl Trait for u32 {\n     // Not fine, suggests moving.\n     type Assoc where u32: Copy = ();\n-    //~^ ERROR where clause not allowed here\n+    //~^ WARNING where clause not allowed here\n     // Not fine, suggests moving `u32: Copy`\n     type Assoc2 where u32: Copy = () where i32: Copy;\n-    //~^ ERROR where clause not allowed here\n+    //~^ WARNING where clause not allowed here\n }\n \n impl Trait for i32 {\n     // Fine.\n     type Assoc = () where u32: Copy;\n     // Not fine, suggests moving both.\n     type Assoc2 where u32: Copy, i32: Copy = ();\n-    //~^ ERROR where clause not allowed here\n+    //~^ WARNING where clause not allowed here\n }\n \n fn main() {}"}, {"sha": "166302c9e1dd79a2c37037b5280b8aaa0ab86b8a", "filename": "src/test/ui/parser/type-alias-where.stderr", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3f504f6984331f9465496d9d96c1f43dab5ce9c6/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3f504f6984331f9465496d9d96c1f43dab5ce9c6/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where.stderr?ref=3f504f6984331f9465496d9d96c1f43dab5ce9c6", "patch": "@@ -10,23 +10,25 @@ error: where clauses are not allowed after the type for type aliases\n LL | type Baz = () where;\n    |               ^^^^^\n \n-error: where clause not allowed here\n+warning: where clause not allowed here\n   --> $DIR/type-alias-where.rs:22:16\n    |\n LL |     type Assoc where u32: Copy = ();\n    |                ^^^^^^^^^^^^^^^     - help: move it here: `where u32: Copy`\n+   |\n+   = note: `#[warn(deprecated_where_clause_location)]` on by default\n \n-error: where clause not allowed here\n+warning: where clause not allowed here\n   --> $DIR/type-alias-where.rs:25:17\n    |\n LL |     type Assoc2 where u32: Copy = () where i32: Copy;\n    |                 ^^^^^^^^^^^^^^^                     - help: move it here: `, u32: Copy`\n \n-error: where clause not allowed here\n+warning: where clause not allowed here\n   --> $DIR/type-alias-where.rs:33:17\n    |\n LL |     type Assoc2 where u32: Copy, i32: Copy = ();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^     - help: move it here: `where u32: Copy, i32: Copy`\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 2 previous errors; 3 warnings emitted\n "}]}