{"sha": "23370637ef3f7e3666fdc787402afdce543d58ec", "node_id": "C_kwDOAAsO6NoAKDIzMzcwNjM3ZWYzZjdlMzY2NmZkYzc4NzQwMmFmZGNlNTQzZDU4ZWM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-22T19:34:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-22T19:34:55Z"}, "message": "Rollup merge of #102144 - chriss0612:const_convert_control_flow, r=scottmcm\n\nExtend const_convert with const {FormResidual, Try} for ControlFlow.\n\nVery small change so I just used the existing `const_convert` feature flag.  #88674\nNewly const API:\n```\nimpl<B, C> const ops::Try for ControlFlow<B, C>;\nimpl<B, C> const ops::FromResidual for ControlFlow<B, C>;\n```\n\n`@usbalbin` I hope it is ok that I added to your feature.", "tree": {"sha": "ddffa9e107f445b567e6fea316613d96a18c60b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddffa9e107f445b567e6fea316613d96a18c60b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23370637ef3f7e3666fdc787402afdce543d58ec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjLLjfCRBK7hj4Ov3rIwAAjAIIAGjUWEiSB3tCv+t0BXsB/LLi\nAGhPlMqaHGXI0nEBzuEUUjng9WJhJVoZUQ5so14B5NNTHE+u1NgWo48D1feCf/Im\ntojTU8Fi4TeInnkHqwIXh5vdLa01exR/8I2I7qfDTHD2qD7Z8Mz2ejvll59FhwK+\nEL3CoyBxhfgks/urrcP2mVG34S3fOjiaqc9rnv2HWeVyTlpEl4q4cOD3vNBgCx6q\nViGVcnWuroMfKT5HItaGGY5ql6YGBWw2I5G7RBYGe84I0l2Edk/IkYAOKkGhXuaI\n3xpqL2Bgfy/RJZTfvCkzTa0OL6JzKWQ8MoH94xI2gJGpf0ecZirQYqBuA68zjC8=\n=NgOu\n-----END PGP SIGNATURE-----\n", "payload": "tree ddffa9e107f445b567e6fea316613d96a18c60b6\nparent a99e675a982713821835002e2d2501b70ab7dda5\nparent 5a5138df5940119744ba80b1d3ed29b1024b973d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1663875295 +0200\ncommitter GitHub <noreply@github.com> 1663875295 +0200\n\nRollup merge of #102144 - chriss0612:const_convert_control_flow, r=scottmcm\n\nExtend const_convert with const {FormResidual, Try} for ControlFlow.\n\nVery small change so I just used the existing `const_convert` feature flag.  #88674\nNewly const API:\n```\nimpl<B, C> const ops::Try for ControlFlow<B, C>;\nimpl<B, C> const ops::FromResidual for ControlFlow<B, C>;\n```\n\n`@usbalbin` I hope it is ok that I added to your feature.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23370637ef3f7e3666fdc787402afdce543d58ec", "html_url": "https://github.com/rust-lang/rust/commit/23370637ef3f7e3666fdc787402afdce543d58ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23370637ef3f7e3666fdc787402afdce543d58ec/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a99e675a982713821835002e2d2501b70ab7dda5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a99e675a982713821835002e2d2501b70ab7dda5", "html_url": "https://github.com/rust-lang/rust/commit/a99e675a982713821835002e2d2501b70ab7dda5"}, {"sha": "5a5138df5940119744ba80b1d3ed29b1024b973d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a5138df5940119744ba80b1d3ed29b1024b973d", "html_url": "https://github.com/rust-lang/rust/commit/5a5138df5940119744ba80b1d3ed29b1024b973d"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "fd567a8c68492f2a582cd57a4114f90c6f372e36", "filename": "library/core/src/ops/control_flow.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/23370637ef3f7e3666fdc787402afdce543d58ec/library%2Fcore%2Fsrc%2Fops%2Fcontrol_flow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23370637ef3f7e3666fdc787402afdce543d58ec/library%2Fcore%2Fsrc%2Fops%2Fcontrol_flow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fops%2Fcontrol_flow.rs?ref=23370637ef3f7e3666fdc787402afdce543d58ec", "patch": "@@ -95,7 +95,8 @@ pub enum ControlFlow<B, C = ()> {\n }\n \n #[unstable(feature = \"try_trait_v2\", issue = \"84277\")]\n-impl<B, C> ops::Try for ControlFlow<B, C> {\n+#[rustc_const_unstable(feature = \"const_convert\", issue = \"88674\")]\n+impl<B, C> const ops::Try for ControlFlow<B, C> {\n     type Output = C;\n     type Residual = ControlFlow<B, convert::Infallible>;\n \n@@ -114,7 +115,8 @@ impl<B, C> ops::Try for ControlFlow<B, C> {\n }\n \n #[unstable(feature = \"try_trait_v2\", issue = \"84277\")]\n-impl<B, C> ops::FromResidual for ControlFlow<B, C> {\n+#[rustc_const_unstable(feature = \"const_convert\", issue = \"88674\")]\n+impl<B, C> const ops::FromResidual for ControlFlow<B, C> {\n     #[inline]\n     fn from_residual(residual: ControlFlow<B, convert::Infallible>) -> Self {\n         match residual {"}]}