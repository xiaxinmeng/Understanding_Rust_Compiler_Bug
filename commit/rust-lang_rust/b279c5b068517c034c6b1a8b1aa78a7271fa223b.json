{"sha": "b279c5b068517c034c6b1a8b1aa78a7271fa223b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyNzljNWIwNjg1MTdjMDM0YzZiMWE4YjFhYTc4YTcyNzFmYTIyM2I=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-01-21T13:33:58Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-01-25T10:22:30Z"}, "message": "Add dependency tracking to trait cache in translation context", "tree": {"sha": "fc08216dcbecb4f3675d40e6ef53faf15a826dcd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc08216dcbecb4f3675d40e6ef53faf15a826dcd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b279c5b068517c034c6b1a8b1aa78a7271fa223b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b279c5b068517c034c6b1a8b1aa78a7271fa223b", "html_url": "https://github.com/rust-lang/rust/commit/b279c5b068517c034c6b1a8b1aa78a7271fa223b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b279c5b068517c034c6b1a8b1aa78a7271fa223b/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6866f1361debf5857856ff95eeee806bb7bea738", "url": "https://api.github.com/repos/rust-lang/rust/commits/6866f1361debf5857856ff95eeee806bb7bea738", "html_url": "https://github.com/rust-lang/rust/commit/6866f1361debf5857856ff95eeee806bb7bea738"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "7301afa46fcd1d2ed9c27a340ba654bc3f0750eb", "filename": "src/librustc_trans/trans/context.rs", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/b279c5b068517c034c6b1a8b1aa78a7271fa223b/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b279c5b068517c034c6b1a8b1aa78a7271fa223b/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs?ref=b279c5b068517c034c6b1a8b1aa78a7271fa223b", "patch": "@@ -10,6 +10,7 @@\n \n use llvm;\n use llvm::{ContextRef, ModuleRef, ValueRef, BuilderRef};\n+use rustc::dep_graph::{DepNode, DepTrackingMap, DepTrackingMapConfig};\n use middle::cstore::LinkMeta;\n use middle::def::ExportMap;\n use middle::def_id::DefId;\n@@ -33,6 +34,7 @@ use util::nodemap::{NodeMap, NodeSet, DefIdMap, FnvHashMap, FnvHashSet};\n \n use std::ffi::CString;\n use std::cell::{Cell, RefCell};\n+use std::marker::PhantomData;\n use std::ptr;\n use std::rc::Rc;\n use syntax::ast;\n@@ -161,8 +163,23 @@ pub struct LocalCrateContext<'tcx> {\n     /// Depth of the current type-of computation - used to bail out\n     type_of_depth: Cell<usize>,\n \n-    trait_cache: RefCell<FnvHashMap<ty::PolyTraitRef<'tcx>,\n-                                    traits::Vtable<'tcx, ()>>>,\n+    trait_cache: RefCell<DepTrackingMap<TraitSelectionCache<'tcx>>>,\n+}\n+\n+// Implement DepTrackingMapConfig for `trait_cache`\n+pub struct TraitSelectionCache<'tcx> {\n+    data: PhantomData<&'tcx ()>\n+}\n+\n+impl<'tcx> DepTrackingMapConfig for TraitSelectionCache<'tcx> {\n+    type Key = ty::PolyTraitRef<'tcx>;\n+    type Value = traits::Vtable<'tcx, ()>;\n+    fn to_dep_node(key: &ty::PolyTraitRef<'tcx>) -> DepNode {\n+        ty::tls::with(|tcx| {\n+            let lifted_key = tcx.lift(key).unwrap();\n+            lifted_key.to_poly_trait_predicate().dep_node()\n+        })\n+    }\n }\n \n pub struct CrateContext<'a, 'tcx: 'a> {\n@@ -478,7 +495,9 @@ impl<'tcx> LocalCrateContext<'tcx> {\n                 intrinsics: RefCell::new(FnvHashMap()),\n                 n_llvm_insns: Cell::new(0),\n                 type_of_depth: Cell::new(0),\n-                trait_cache: RefCell::new(FnvHashMap()),\n+                trait_cache: RefCell::new(DepTrackingMap::new(shared.tcx\n+                                                                    .dep_graph\n+                                                                    .clone())),\n             };\n \n             local_ccx.int_type = Type::int(&local_ccx.dummy_ccx(shared));\n@@ -752,8 +771,7 @@ impl<'b, 'tcx> CrateContext<'b, 'tcx> {\n         self.local.n_llvm_insns.set(self.local.n_llvm_insns.get() + 1);\n     }\n \n-    pub fn trait_cache(&self) -> &RefCell<FnvHashMap<ty::PolyTraitRef<'tcx>,\n-                                                     traits::Vtable<'tcx, ()>>> {\n+    pub fn trait_cache(&self) -> &RefCell<DepTrackingMap<TraitSelectionCache<'tcx>>> {\n         &self.local.trait_cache\n     }\n "}]}