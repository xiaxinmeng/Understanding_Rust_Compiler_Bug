{"sha": "0b3fedc8df1c102a9a7ea7b345e8105e91676f93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiM2ZlZGM4ZGYxYzEwMmE5YTdlYTdiMzQ1ZTgxMDVlOTE2NzZmOTM=", "commit": {"author": {"name": "Jade", "email": "software@lfcode.ca", "date": "2021-07-01T17:20:57Z"}, "committer": {"name": "Jade", "email": "software@lfcode.ca", "date": "2021-07-01T17:20:57Z"}, "message": "proc_macro/bridge: Remove dead code Slice type\n\nSee https://github.com/rust-lang/rust/pull/85390#discussion_r662464868", "tree": {"sha": "8ceab1359837df5405c2818e3139b3d455a9bb60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ceab1359837df5405c2818e3139b3d455a9bb60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b3fedc8df1c102a9a7ea7b345e8105e91676f93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b3fedc8df1c102a9a7ea7b345e8105e91676f93", "html_url": "https://github.com/rust-lang/rust/commit/0b3fedc8df1c102a9a7ea7b345e8105e91676f93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b3fedc8df1c102a9a7ea7b345e8105e91676f93/comments", "author": {"login": "lf-", "id": 6652840, "node_id": "MDQ6VXNlcjY2NTI4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6652840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lf-", "html_url": "https://github.com/lf-", "followers_url": "https://api.github.com/users/lf-/followers", "following_url": "https://api.github.com/users/lf-/following{/other_user}", "gists_url": "https://api.github.com/users/lf-/gists{/gist_id}", "starred_url": "https://api.github.com/users/lf-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lf-/subscriptions", "organizations_url": "https://api.github.com/users/lf-/orgs", "repos_url": "https://api.github.com/users/lf-/repos", "events_url": "https://api.github.com/users/lf-/events{/privacy}", "received_events_url": "https://api.github.com/users/lf-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lf-", "id": 6652840, "node_id": "MDQ6VXNlcjY2NTI4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6652840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lf-", "html_url": "https://github.com/lf-", "followers_url": "https://api.github.com/users/lf-/followers", "following_url": "https://api.github.com/users/lf-/following{/other_user}", "gists_url": "https://api.github.com/users/lf-/gists{/gist_id}", "starred_url": "https://api.github.com/users/lf-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lf-/subscriptions", "organizations_url": "https://api.github.com/users/lf-/orgs", "repos_url": "https://api.github.com/users/lf-/repos", "events_url": "https://api.github.com/users/lf-/events{/privacy}", "received_events_url": "https://api.github.com/users/lf-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64de4979e8979836e7c029d69eb96e6f7da66185", "url": "https://api.github.com/repos/rust-lang/rust/commits/64de4979e8979836e7c029d69eb96e6f7da66185", "html_url": "https://github.com/rust-lang/rust/commit/64de4979e8979836e7c029d69eb96e6f7da66185"}], "stats": {"total": 29, "additions": 0, "deletions": 29}, "files": [{"sha": "d82669d3e2336622942d127aaf5ca0c2ad501e9e", "filename": "library/proc_macro/src/bridge/buffer.rs", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/0b3fedc8df1c102a9a7ea7b345e8105e91676f93/library%2Fproc_macro%2Fsrc%2Fbridge%2Fbuffer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b3fedc8df1c102a9a7ea7b345e8105e91676f93/library%2Fproc_macro%2Fsrc%2Fbridge%2Fbuffer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Fbridge%2Fbuffer.rs?ref=0b3fedc8df1c102a9a7ea7b345e8105e91676f93", "patch": "@@ -5,35 +5,6 @@ use std::mem;\n use std::ops::{Deref, DerefMut};\n use std::slice;\n \n-#[repr(C)]\n-struct Slice<'a, T> {\n-    data: &'a [T; 0],\n-    len: usize,\n-}\n-\n-unsafe impl<'a, T: Sync> Sync for Slice<'a, T> {}\n-unsafe impl<'a, T: Sync> Send for Slice<'a, T> {}\n-\n-impl<T> Copy for Slice<'a, T> {}\n-impl<T> Clone for Slice<'a, T> {\n-    fn clone(&self) -> Self {\n-        *self\n-    }\n-}\n-\n-impl<T> From<&'a [T]> for Slice<'a, T> {\n-    fn from(xs: &'a [T]) -> Self {\n-        Slice { data: unsafe { &*(xs.as_ptr() as *const [T; 0]) }, len: xs.len() }\n-    }\n-}\n-\n-impl<T> Deref for Slice<'a, T> {\n-    type Target = [T];\n-    fn deref(&self) -> &[T] {\n-        unsafe { slice::from_raw_parts(self.data.as_ptr(), self.len) }\n-    }\n-}\n-\n #[repr(C)]\n pub struct Buffer<T: Copy> {\n     data: *mut T,"}]}