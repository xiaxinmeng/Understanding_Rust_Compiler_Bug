{"sha": "227cc5cd263514fb3c8811e70ef3c94d0add04d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyN2NjNWNkMjYzNTE0ZmIzYzg4MTFlNzBlZjNjOTRkMGFkZDA0ZDM=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-14T07:10:58Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-26T18:23:56Z"}, "message": "Remove an `if` statement with an condition that is always false", "tree": {"sha": "783d6a29ba30f9975565a639c4bb088349efc00d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/783d6a29ba30f9975565a639c4bb088349efc00d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/227cc5cd263514fb3c8811e70ef3c94d0add04d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/227cc5cd263514fb3c8811e70ef3c94d0add04d3", "html_url": "https://github.com/rust-lang/rust/commit/227cc5cd263514fb3c8811e70ef3c94d0add04d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/227cc5cd263514fb3c8811e70ef3c94d0add04d3/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e7a22e3bcc264ad5d5a601f106f6fb9ad564d8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e7a22e3bcc264ad5d5a601f106f6fb9ad564d8e", "html_url": "https://github.com/rust-lang/rust/commit/3e7a22e3bcc264ad5d5a601f106f6fb9ad564d8e"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "f958ca2a441e7d97578292ec3e713098777d961f", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/227cc5cd263514fb3c8811e70ef3c94d0add04d3/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/227cc5cd263514fb3c8811e70ef3c94d0add04d3/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=227cc5cd263514fb3c8811e70ef3c94d0add04d3", "patch": "@@ -283,7 +283,6 @@ impl<'a> ::ModuleS<'a> {\n \n     fn define_in_glob_importers(&self, name: Name, ns: Namespace, binding: &'a NameBinding<'a>) {\n         if !binding.defined_with(DefModifiers::PUBLIC | DefModifiers::IMPORTABLE) { return }\n-        if binding.is_extern_crate() { return }\n         for &(importer, directive) in self.glob_importers.borrow_mut().iter() {\n             let _ = importer.try_define_child(name, ns, directive.import(binding, None));\n         }"}]}