{"sha": "e952377ddc7bdddfee03ee09f3530a1c025f1d99", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5NTIzNzdkZGM3YmRkZGZlZTAzZWUwOWYzNTMwYTFjMDI1ZjFkOTk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-30T06:42:46Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-30T12:50:20Z"}, "message": "MatchExpressionArmPattern -> Pattern\n\nCurrent name is too specific for incoming changes.", "tree": {"sha": "4ef7b94f3ed3210f9b145e68b2e4f8a53b194dfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ef7b94f3ed3210f9b145e68b2e4f8a53b194dfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e952377ddc7bdddfee03ee09f3530a1c025f1d99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e952377ddc7bdddfee03ee09f3530a1c025f1d99", "html_url": "https://github.com/rust-lang/rust/commit/e952377ddc7bdddfee03ee09f3530a1c025f1d99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e952377ddc7bdddfee03ee09f3530a1c025f1d99/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "960acb044bcefc46520cee263b6877160fd296ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/960acb044bcefc46520cee263b6877160fd296ca", "html_url": "https://github.com/rust-lang/rust/commit/960acb044bcefc46520cee263b6877160fd296ca"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "ae629adf8fb5384451ab6e1fa8f230cbe1b5dcf5", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e952377ddc7bdddfee03ee09f3530a1c025f1d99/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e952377ddc7bdddfee03ee09f3530a1c025f1d99/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=e952377ddc7bdddfee03ee09f3530a1c025f1d99", "patch": "@@ -581,7 +581,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         exp_found: Option<ty::error::ExpectedFound<Ty<'tcx>>>,\n     ) {\n         match cause.code {\n-            ObligationCauseCode::MatchExpressionArmPattern { span, ty } => {\n+            ObligationCauseCode::Pattern { span, ty } => {\n                 if ty.is_suggestable() {\n                     // don't show type `_`\n                     err.span_label(span, format!(\"this expression has type `{}`\", ty));"}, {"sha": "5819e7aa5c25dc8391c59d4aca708632ba8ce89c", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e952377ddc7bdddfee03ee09f3530a1c025f1d99/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e952377ddc7bdddfee03ee09f3530a1c025f1d99/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=e952377ddc7bdddfee03ee09f3530a1c025f1d99", "patch": "@@ -2580,7 +2580,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         match *cause_code {\n             ObligationCauseCode::ExprAssignable\n             | ObligationCauseCode::MatchExpressionArm { .. }\n-            | ObligationCauseCode::MatchExpressionArmPattern { .. }\n+            | ObligationCauseCode::Pattern { .. }\n             | ObligationCauseCode::IfExpression { .. }\n             | ObligationCauseCode::IfExpressionWithNoElse\n             | ObligationCauseCode::MainFunctionType"}, {"sha": "6142dc25f22282ae2c73f7b0adab1e11533ec03e", "filename": "src/librustc/traits/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e952377ddc7bdddfee03ee09f3530a1c025f1d99/src%2Flibrustc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e952377ddc7bdddfee03ee09f3530a1c025f1d99/src%2Flibrustc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmod.rs?ref=e952377ddc7bdddfee03ee09f3530a1c025f1d99", "patch": "@@ -249,8 +249,8 @@ pub enum ObligationCauseCode<'tcx> {\n     /// Computing common supertype in the arms of a match expression\n     MatchExpressionArm(Box<MatchExpressionArmCause<'tcx>>),\n \n-    /// Computing common supertype in the pattern guard for the arms of a match expression\n-    MatchExpressionArmPattern {\n+    /// Type error arising from type checking a pattern against an expected type.\n+    Pattern {\n         span: Span,\n         ty: Ty<'tcx>,\n     },"}, {"sha": "cfc27438b50fd82e5d9906181a25dcbfdba67704", "filename": "src/librustc/traits/structural_impls.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e952377ddc7bdddfee03ee09f3530a1c025f1d99/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e952377ddc7bdddfee03ee09f3530a1c025f1d99/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs?ref=e952377ddc7bdddfee03ee09f3530a1c025f1d99", "patch": "@@ -521,9 +521,7 @@ impl<'a, 'tcx> Lift<'tcx> for traits::ObligationCauseCode<'a> {\n                     discrim_hir_id,\n                 })\n             }),\n-            super::MatchExpressionArmPattern { span, ty } => {\n-                tcx.lift(&ty).map(|ty| super::MatchExpressionArmPattern { span, ty })\n-            }\n+            super::Pattern { span, ty } => tcx.lift(&ty).map(|ty| super::Pattern { span, ty }),\n             super::IfExpression(box super::IfExpressionCause { then, outer, semicolon }) => {\n                 Some(super::IfExpression(box super::IfExpressionCause { then, outer, semicolon }))\n             }"}, {"sha": "c11bd6704e4c32b4f97f480fb80259154f60e267", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e952377ddc7bdddfee03ee09f3530a1c025f1d99/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e952377ddc7bdddfee03ee09f3530a1c025f1d99/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=e952377ddc7bdddfee03ee09f3530a1c025f1d99", "patch": "@@ -87,10 +87,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         match_expr_span: Option<Span>,\n     ) -> Option<DiagnosticBuilder<'tcx>> {\n         let cause = if let Some(span) = match_expr_span {\n-            self.cause(\n-                cause_span,\n-                ObligationCauseCode::MatchExpressionArmPattern { span, ty: expected },\n-            )\n+            self.cause(cause_span, ObligationCauseCode::Pattern { span, ty: expected })\n         } else {\n             self.misc(cause_span)\n         };"}]}