{"sha": "f692eb0d34be0a9be9ca649c069bf6efa955a67f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2OTJlYjBkMzRiZTBhOWJlOWNhNjQ5YzA2OWJmNmVmYTk1NWE2N2Y=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-01-17T22:43:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-17T22:43:29Z"}, "message": "Rollup merge of #47468 - estebank:closure-mut-mut, r=pnkfelix\n\nDo not suggest to make `mut` binding external to `Fn` closure\n\nRe #46834.", "tree": {"sha": "c7b42cbc0664b706934965e7efe8f21213121123", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7b42cbc0664b706934965e7efe8f21213121123"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f692eb0d34be0a9be9ca649c069bf6efa955a67f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f692eb0d34be0a9be9ca649c069bf6efa955a67f", "html_url": "https://github.com/rust-lang/rust/commit/f692eb0d34be0a9be9ca649c069bf6efa955a67f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f692eb0d34be0a9be9ca649c069bf6efa955a67f/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49065a14199346c743f21b619c93507adbe7a7e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/49065a14199346c743f21b619c93507adbe7a7e5", "html_url": "https://github.com/rust-lang/rust/commit/49065a14199346c743f21b619c93507adbe7a7e5"}, {"sha": "a0d44976bbd598addcafba9edf8c5505f03415d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0d44976bbd598addcafba9edf8c5505f03415d2", "html_url": "https://github.com/rust-lang/rust/commit/a0d44976bbd598addcafba9edf8c5505f03415d2"}], "stats": {"total": 63, "additions": 60, "deletions": 3}, "files": [{"sha": "d003ef74f054bcee711fc46734369623a65a8d54", "filename": "src/librustc_borrowck/borrowck/mod.rs", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f692eb0d34be0a9be9ca649c069bf6efa955a67f/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f692eb0d34be0a9be9ca649c069bf6efa955a67f/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs?ref=f692eb0d34be0a9be9ca649c069bf6efa955a67f", "patch": "@@ -842,10 +842,32 @@ impl<'a, 'tcx> BorrowckCtxt<'a, 'tcx> {\n                         if let mc::NoteClosureEnv(upvar_id) = err.cmt.note {\n                             let node_id = self.tcx.hir.hir_to_node_id(upvar_id.var_id);\n                             let sp = self.tcx.hir.span(node_id);\n-                            match self.tcx.sess.codemap().span_to_snippet(sp) {\n-                                Ok(snippet) => {\n+                            let fn_closure_msg = \"`Fn` closures cannot capture their enclosing \\\n+                                                  environment for modifications\";\n+                            match (self.tcx.sess.codemap().span_to_snippet(sp), &err.cmt.cat) {\n+                                (_, &Categorization::Upvar(mc::Upvar {\n+                                    kind: ty::ClosureKind::Fn, ..\n+                                })) => {\n+                                    db.note(fn_closure_msg);\n+                                    // we should point at the cause for this closure being\n+                                    // identified as `Fn` (like in signature of method this\n+                                    // closure was passed into)\n+                                }\n+                                (Ok(ref snippet), ref cat) => {\n                                     let msg = &format!(\"consider making `{}` mutable\", snippet);\n-                                    db.span_suggestion(sp, msg, format!(\"mut {}\", snippet));\n+                                    let suggestion = format!(\"mut {}\", snippet);\n+\n+                                    if let &Categorization::Deref(ref cmt, _) = cat {\n+                                        if let Categorization::Upvar(mc::Upvar {\n+                                            kind: ty::ClosureKind::Fn, ..\n+                                        }) = cmt.cat {\n+                                            db.note(fn_closure_msg);\n+                                        } else {\n+                                            db.span_suggestion(sp, msg, suggestion);\n+                                        }\n+                                    } else {\n+                                        db.span_suggestion(sp, msg, suggestion);\n+                                    }\n                                 }\n                                 _ => {\n                                     db.span_help(sp, \"consider making this binding mutable\");"}, {"sha": "385efebd59008f86096495282595c6e2bd3f0941", "filename": "src/test/ui/suggestions/fn-closure-mutable-capture.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f692eb0d34be0a9be9ca649c069bf6efa955a67f/src%2Ftest%2Fui%2Fsuggestions%2Ffn-closure-mutable-capture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f692eb0d34be0a9be9ca649c069bf6efa955a67f/src%2Ftest%2Fui%2Fsuggestions%2Ffn-closure-mutable-capture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffn-closure-mutable-capture.rs?ref=f692eb0d34be0a9be9ca649c069bf6efa955a67f", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn bar<F: Fn()>(_f: F) {}\n+\n+pub fn foo() {\n+    let mut x = 0;\n+    bar(move || x = 1);\n+    //~^ ERROR cannot assign to captured outer variable in an `Fn` closure\n+    //~| NOTE `Fn` closures cannot capture their enclosing environment for modifications\n+}\n+\n+fn main() {}"}, {"sha": "6c79e447a3c391382d9b36363919f968ac3d56a4", "filename": "src/test/ui/suggestions/fn-closure-mutable-capture.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f692eb0d34be0a9be9ca649c069bf6efa955a67f/src%2Ftest%2Fui%2Fsuggestions%2Ffn-closure-mutable-capture.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f692eb0d34be0a9be9ca649c069bf6efa955a67f/src%2Ftest%2Fui%2Fsuggestions%2Ffn-closure-mutable-capture.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffn-closure-mutable-capture.stderr?ref=f692eb0d34be0a9be9ca649c069bf6efa955a67f", "patch": "@@ -0,0 +1,15 @@\n+error[E0594]: cannot assign to captured outer variable in an `Fn` closure\n+  --> $DIR/fn-closure-mutable-capture.rs:15:17\n+   |\n+15 |     bar(move || x = 1);\n+   |                 ^^^^^\n+   |\n+   = note: `Fn` closures cannot capture their enclosing environment for modifications\n+help: consider changing this closure to take self by mutable reference\n+  --> $DIR/fn-closure-mutable-capture.rs:15:9\n+   |\n+15 |     bar(move || x = 1);\n+   |         ^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}