{"sha": "ab73115be09f002cecb5055cf716922fde7b7091", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiNzMxMTViZTA5ZjAwMmNlY2I1MDU1Y2Y3MTY5MjJmZGU3YjcwOTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-07T02:30:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-07T02:30:24Z"}, "message": "Auto merge of #85810 - bjorn3:further_driver_cleanup, r=varkor\n\nDriver improvements\n\nThis PR contains a couple of cleanups for the driver and a few small improvements for the custom codegen backend interface. It also implements `--version` and `-Cpasses=list` support for custom codegen backends.", "tree": {"sha": "2b4214ecb91b7efc0d1f40f4bc669f994d359d0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b4214ecb91b7efc0d1f40f4bc669f994d359d0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab73115be09f002cecb5055cf716922fde7b7091", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab73115be09f002cecb5055cf716922fde7b7091", "html_url": "https://github.com/rust-lang/rust/commit/ab73115be09f002cecb5055cf716922fde7b7091", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab73115be09f002cecb5055cf716922fde7b7091/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df47bce145934355a281ca4c95d230d880b61363", "url": "https://api.github.com/repos/rust-lang/rust/commits/df47bce145934355a281ca4c95d230d880b61363", "html_url": "https://github.com/rust-lang/rust/commit/df47bce145934355a281ca4c95d230d880b61363"}, {"sha": "dbdeafbc2688c52e056befee035829d0e30ee924", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbdeafbc2688c52e056befee035829d0e30ee924", "html_url": "https://github.com/rust-lang/rust/commit/dbdeafbc2688c52e056befee035829d0e30ee924"}], "stats": {"total": 33, "additions": 6, "deletions": 27}, "files": [{"sha": "6676d88602c45d9e34991e80ce25e6cf158077e5", "filename": "src/driver/aot.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ab73115be09f002cecb5055cf716922fde7b7091/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab73115be09f002cecb5055cf716922fde7b7091/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=ab73115be09f002cecb5055cf716922fde7b7091", "patch": "@@ -177,21 +177,6 @@ pub(crate) fn run_aot(\n     metadata: EncodedMetadata,\n     need_metadata_module: bool,\n ) -> Box<(CodegenResults, FxHashMap<WorkProductId, WorkProduct>)> {\n-    use rustc_span::symbol::sym;\n-\n-    let crate_attrs = tcx.hir().attrs(rustc_hir::CRATE_HIR_ID);\n-    let subsystem = tcx.sess.first_attr_value_str_by_name(crate_attrs, sym::windows_subsystem);\n-    let windows_subsystem = subsystem.map(|subsystem| {\n-        if subsystem != sym::windows && subsystem != sym::console {\n-            tcx.sess.fatal(&format!(\n-                \"invalid windows subsystem `{}`, only \\\n-                                    `windows` and `console` are allowed\",\n-                subsystem\n-            ));\n-        }\n-        subsystem.to_string()\n-    });\n-\n     let mut work_products = FxHashMap::default();\n \n     let cgus = if tcx.sess.opts.output_types.should_codegen() {\n@@ -307,12 +292,10 @@ pub(crate) fn run_aot(\n \n     Box::new((\n         CodegenResults {\n-            crate_name: tcx.crate_name(LOCAL_CRATE),\n             modules,\n             allocator_module,\n             metadata_module,\n             metadata,\n-            windows_subsystem,\n             linker_info: LinkerInfo::new(tcx, crate::target_triple(tcx.sess).to_string()),\n             crate_info: CrateInfo::new(tcx),\n         },"}, {"sha": "904efed5bd98c6e45800273a60a59da92529968a", "filename": "src/lib.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ab73115be09f002cecb5055cf716922fde7b7091/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab73115be09f002cecb5055cf716922fde7b7091/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=ab73115be09f002cecb5055cf716922fde7b7091", "patch": "@@ -28,8 +28,7 @@ use rustc_codegen_ssa::traits::CodegenBackend;\n use rustc_codegen_ssa::CodegenResults;\n use rustc_errors::ErrorReported;\n use rustc_middle::dep_graph::{WorkProduct, WorkProductId};\n-use rustc_middle::middle::cstore::{EncodedMetadata, MetadataLoader};\n-use rustc_middle::ty::query::Providers;\n+use rustc_middle::middle::cstore::EncodedMetadata;\n use rustc_session::config::OutputFilenames;\n use rustc_session::Session;\n \n@@ -164,17 +163,14 @@ impl CodegenBackend for CraneliftCodegenBackend {\n         }\n     }\n \n-    fn metadata_loader(&self) -> Box<dyn MetadataLoader + Sync> {\n-        Box::new(rustc_codegen_ssa::back::metadata::DefaultMetadataLoader)\n-    }\n-\n-    fn provide(&self, _providers: &mut Providers) {}\n-    fn provide_extern(&self, _providers: &mut Providers) {}\n-\n     fn target_features(&self, _sess: &Session) -> Vec<rustc_span::Symbol> {\n         vec![]\n     }\n \n+    fn print_version(&self) {\n+        println!(\"Cranelift version: {}\", cranelift_codegen::VERSION);\n+    }\n+\n     fn codegen_crate(\n         &self,\n         tcx: TyCtxt<'_>,\n@@ -222,7 +218,7 @@ impl CodegenBackend for CraneliftCodegenBackend {\n             sess,\n             &codegen_results,\n             outputs,\n-            &codegen_results.crate_name.as_str(),\n+            &codegen_results.crate_info.local_crate_name.as_str(),\n         );\n \n         Ok(())"}]}