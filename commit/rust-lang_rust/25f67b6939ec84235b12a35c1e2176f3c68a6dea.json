{"sha": "25f67b6939ec84235b12a35c1e2176f3c68a6dea", "node_id": "C_kwDOAAsO6NoAKDI1ZjY3YjY5MzllYzg0MjM1YjEyYTM1YzFlMjE3NmYzYzY4YTZkZWE", "commit": {"author": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2022-01-15T02:47:47Z"}, "committer": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2022-01-15T02:47:47Z"}, "message": "make it a config", "tree": {"sha": "fbcc970441ace831610e9749a68cef980144c2f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbcc970441ace831610e9749a68cef980144c2f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25f67b6939ec84235b12a35c1e2176f3c68a6dea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25f67b6939ec84235b12a35c1e2176f3c68a6dea", "html_url": "https://github.com/rust-lang/rust/commit/25f67b6939ec84235b12a35c1e2176f3c68a6dea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25f67b6939ec84235b12a35c1e2176f3c68a6dea/comments", "author": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcc99091f36a8796a76da9a287457d3e04303903", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcc99091f36a8796a76da9a287457d3e04303903", "html_url": "https://github.com/rust-lang/rust/commit/bcc99091f36a8796a76da9a287457d3e04303903"}], "stats": {"total": 46, "additions": 38, "deletions": 8}, "files": [{"sha": "892b34c7d909d22f43f1e0d551dc0644b994c573", "filename": "crates/ide/src/prime_caches.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/25f67b6939ec84235b12a35c1e2176f3c68a6dea/crates%2Fide%2Fsrc%2Fprime_caches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25f67b6939ec84235b12a35c1e2176f3c68a6dea/crates%2Fide%2Fsrc%2Fprime_caches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fprime_caches.rs?ref=25f67b6939ec84235b12a35c1e2176f3c68a6dea", "patch": "@@ -108,7 +108,8 @@ pub(crate) fn parallel_prime_caches(\n         }\n \n         // recv_timeout is somewhat a hack, we need a way to from this thread check to see if the current salsa revision\n-        // is cancelled.\n+        // is cancelled on a regular basis. workers will only exit if they are processing a task that is cancelled, or\n+        // if this thread exits, and closes the work channel.\n         let worker_progress = match progress_receiver.recv_timeout(Duration::from_millis(10)) {\n             Ok(p) => p,\n             Err(crossbeam_channel::RecvTimeoutError::Timeout) => {"}, {"sha": "b04087fa7bd08cff417a85b95a43540cc2e7d98f", "filename": "crates/ide/src/prime_caches/topologic_sort.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/25f67b6939ec84235b12a35c1e2176f3c68a6dea/crates%2Fide%2Fsrc%2Fprime_caches%2Ftopologic_sort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25f67b6939ec84235b12a35c1e2176f3c68a6dea/crates%2Fide%2Fsrc%2Fprime_caches%2Ftopologic_sort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fprime_caches%2Ftopologic_sort.rs?ref=25f67b6939ec84235b12a35c1e2176f3c68a6dea", "patch": "@@ -1,3 +1,4 @@\n+//! helper data structure to schedule work for parallel prime caches.\n use std::{collections::VecDeque, hash::Hash};\n \n use rustc_hash::FxHashMap;"}, {"sha": "76b72707974cf1795bfd6c51e19f7fecd32e57f3", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/25f67b6939ec84235b12a35c1e2176f3c68a6dea/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25f67b6939ec84235b12a35c1e2176f3c68a6dea/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=25f67b6939ec84235b12a35c1e2176f3c68a6dea", "patch": "@@ -298,6 +298,9 @@ config_data! {\n         /// Whether to show `can't find Cargo.toml` error message.\n         notifications_cargoTomlNotFound: bool      = \"true\",\n \n+        /// How many worker threads to to handle priming caches. The default `0` means to pick automatically.\n+        primeCaches_numThreads: ParallelPrimeCachesNumThreads = \"0\",\n+\n         /// Enable support for procedural macros, implies `#rust-analyzer.cargo.runBuildScripts#`.\n         procMacro_enable: bool                     = \"true\",\n         /// Internal config, path to proc-macro server executable (typically,\n@@ -1016,6 +1019,13 @@ impl Config {\n             yield_points: self.data.highlightRelated_yieldPoints,\n         }\n     }\n+\n+    pub fn prime_caches_num_threads(&self) -> u8 {\n+        match self.data.primeCaches_numThreads {\n+            0 => num_cpus::get_physical().try_into().unwrap_or(u8::MAX),\n+            n => n,\n+        }\n+    }\n }\n \n #[derive(Deserialize, Debug, Clone, Copy)]\n@@ -1130,6 +1140,8 @@ enum WorkspaceSymbolSearchKindDef {\n     AllSymbols,\n }\n \n+type ParallelPrimeCachesNumThreads = u8;\n+\n macro_rules! _config_data {\n     (struct $name:ident {\n         $(\n@@ -1351,6 +1363,11 @@ fn field_props(field: &str, ty: &str, doc: &[&str], default: &str) -> serde_json\n                 \"Search for all symbols kinds\"\n             ],\n         },\n+        \"ParallelPrimeCachesNumThreads\" => set! {\n+            \"type\": \"number\",\n+            \"minimum\": 0,\n+            \"maximum\": 255\n+        },\n         _ => panic!(\"{}: {}\", ty, default),\n     }\n "}, {"sha": "45d7c3e5ed4af02280f4d0757415d2546d987640", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/25f67b6939ec84235b12a35c1e2176f3c68a6dea/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25f67b6939ec84235b12a35c1e2176f3c68a6dea/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=25f67b6939ec84235b12a35c1e2176f3c68a6dea", "patch": "@@ -505,17 +505,16 @@ impl GlobalState {\n             self.fetch_build_data();\n         }\n         if self.prime_caches_queue.should_start_op() {\n+            let num_worker_threads = self.config.prime_caches_num_threads();\n+\n             self.task_pool.handle.spawn_with_sender({\n                 let analysis = self.snapshot().analysis;\n                 move |sender| {\n                     sender.send(Task::PrimeCaches(PrimeCachesProgress::Begin)).unwrap();\n-                    let res = analysis.parallel_prime_caches(\n-                        num_cpus::get_physical().try_into().unwrap_or(u8::MAX),\n-                        |progress| {\n-                            let report = PrimeCachesProgress::Report(progress);\n-                            sender.send(Task::PrimeCaches(report)).unwrap();\n-                        },\n-                    );\n+                    let res = analysis.parallel_prime_caches(num_worker_threads, |progress| {\n+                        let report = PrimeCachesProgress::Report(progress);\n+                        sender.send(Task::PrimeCaches(report)).unwrap();\n+                    });\n                     sender\n                         .send(Task::PrimeCaches(PrimeCachesProgress::End {\n                             cancelled: res.is_err(),"}, {"sha": "b10b0d355222d4307a541539af468c2c359be3bd", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/25f67b6939ec84235b12a35c1e2176f3c68a6dea/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/25f67b6939ec84235b12a35c1e2176f3c68a6dea/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=25f67b6939ec84235b12a35c1e2176f3c68a6dea", "patch": "@@ -454,6 +454,11 @@ Number of syntax trees rust-analyzer keeps in memory. Defaults to 128.\n --\n Whether to show `can't find Cargo.toml` error message.\n --\n+[[rust-analyzer.primeCaches.numThreads]]rust-analyzer.primeCaches.numThreads (default: `0`)::\n++\n+--\n+How many worker threads to to handle priming caches. The default `0` means to pick automatically.\n+--\n [[rust-analyzer.procMacro.enable]]rust-analyzer.procMacro.enable (default: `true`)::\n +\n --"}, {"sha": "21a59745bf331e96325859597ae01104640013f8", "filename": "editors/code/package.json", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/25f67b6939ec84235b12a35c1e2176f3c68a6dea/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/25f67b6939ec84235b12a35c1e2176f3c68a6dea/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=25f67b6939ec84235b12a35c1e2176f3c68a6dea", "patch": "@@ -880,6 +880,13 @@\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n+                \"rust-analyzer.primeCaches.numThreads\": {\n+                    \"markdownDescription\": \"How many worker threads to to handle priming caches. The default `0` means to pick automatically.\",\n+                    \"default\": 0,\n+                    \"type\": \"number\",\n+                    \"minimum\": 0,\n+                    \"maximum\": 255\n+                },\n                 \"rust-analyzer.procMacro.enable\": {\n                     \"markdownDescription\": \"Enable support for procedural macros, implies `#rust-analyzer.cargo.runBuildScripts#`.\",\n                     \"default\": true,"}]}