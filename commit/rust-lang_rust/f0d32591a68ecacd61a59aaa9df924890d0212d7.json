{"sha": "f0d32591a68ecacd61a59aaa9df924890d0212d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwZDMyNTkxYTY4ZWNhY2Q2MWE1OWFhYTlkZjkyNDg5MGQwMjEyZDc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-08T12:53:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-08T12:53:53Z"}, "message": "Merge #9812\n\n9812: fix: add `!` to macro completions with existing arg r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "b7089d48a85fdbdbac833c846949d6078cf3da65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7089d48a85fdbdbac833c846949d6078cf3da65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0d32591a68ecacd61a59aaa9df924890d0212d7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhD9PhCRBK7hj4Ov3rIwAAMOUIAATPB5rGMa4KIafoY0PTLhw4\nIOGi1zB2UaX8iD681L6ivMQI4ENhkMrFhtb+a0WOOWhS1DKbplNQgbz7ZEil0Mw5\nJxQSBYkmw6qXR1F7MwMrYjWI4en66zLtyW2X6FC9H0GOnXDr2R2V28no5ayKcFga\nsUMJ5lGlXPnxNOeETvRtFH9cUWqabotTcxiQVEKd54v3TJr6C6XNYV/oVQKc6kKp\neXcu/KnY3JE6iGKQ3W95p3vdwxD366rAefrv55P0njRSP/6h/7eqNwOwEdaItUXV\ndyuj8vp39jOPVw9xJfeWgYvcUe1o6ohopCwkO4QFpUMhWM6oExDZ4CH7ByrUwcM=\n=zUqD\n-----END PGP SIGNATURE-----\n", "payload": "tree b7089d48a85fdbdbac833c846949d6078cf3da65\nparent 546d718a7e04a1c366578f0be94b3c7ef1361b59\nparent 0e437c809b349a13fe4e82d295673fb1eb6bfd18\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1628427233 +0000\ncommitter GitHub <noreply@github.com> 1628427233 +0000\n\nMerge #9812\n\n9812: fix: add `!` to macro completions with existing arg r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0d32591a68ecacd61a59aaa9df924890d0212d7", "html_url": "https://github.com/rust-lang/rust/commit/f0d32591a68ecacd61a59aaa9df924890d0212d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0d32591a68ecacd61a59aaa9df924890d0212d7/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "546d718a7e04a1c366578f0be94b3c7ef1361b59", "url": "https://api.github.com/repos/rust-lang/rust/commits/546d718a7e04a1c366578f0be94b3c7ef1361b59", "html_url": "https://github.com/rust-lang/rust/commit/546d718a7e04a1c366578f0be94b3c7ef1361b59"}, {"sha": "0e437c809b349a13fe4e82d295673fb1eb6bfd18", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e437c809b349a13fe4e82d295673fb1eb6bfd18", "html_url": "https://github.com/rust-lang/rust/commit/0e437c809b349a13fe4e82d295673fb1eb6bfd18"}], "stats": {"total": 43, "additions": 29, "deletions": 14}, "files": [{"sha": "eb9fb4d8bf0a8a4aec33c33175b14b1098d2dff2", "filename": "crates/ide_completion/src/render/macro_.rs", "status": "modified", "additions": 29, "deletions": 14, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/f0d32591a68ecacd61a59aaa9df924890d0212d7/crates%2Fide_completion%2Fsrc%2Frender%2Fmacro_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0d32591a68ecacd61a59aaa9df924890d0212d7/crates%2Fide_completion%2Fsrc%2Frender%2Fmacro_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Fmacro_.rs?ref=f0d32591a68ecacd61a59aaa9df924890d0212d7", "patch": "@@ -49,15 +49,19 @@ impl<'a> MacroRender<'a> {\n             .add_import(import_to_add)\n             .set_detail(self.detail());\n \n-        let needs_bang = self.needs_bang();\n+        let needs_bang = !(self.ctx.completion.in_use_tree()\n+            || matches!(self.ctx.completion.path_call_kind(), Some(CallKind::Mac)));\n+        let has_parens = self.ctx.completion.path_call_kind().is_some();\n+\n         match self.ctx.snippet_cap() {\n-            Some(cap) if needs_bang => {\n-                let snippet = self.snippet();\n-                let lookup = self.lookup();\n+            Some(cap) if needs_bang && !has_parens => {\n+                let snippet = format!(\"{}!{}$0{}\", self.name, self.bra, self.ket);\n+                let lookup = self.banged_name();\n                 item.insert_snippet(cap, snippet).lookup_by(lookup);\n             }\n-            None if needs_bang => {\n-                item.insert_text(self.banged_name());\n+            _ if needs_bang => {\n+                let lookup = self.banged_name();\n+                item.insert_text(self.banged_name()).lookup_by(lookup);\n             }\n             _ => {\n                 cov_mark::hit!(dont_insert_macro_call_parens_unncessary);\n@@ -83,14 +87,6 @@ impl<'a> MacroRender<'a> {\n         }\n     }\n \n-    fn snippet(&self) -> String {\n-        format!(\"{}!{}$0{}\", self.name, self.bra, self.ket)\n-    }\n-\n-    fn lookup(&self) -> String {\n-        self.banged_name()\n-    }\n-\n     fn banged_name(&self) -> String {\n         format!(\"{}!\", self.name)\n     }\n@@ -163,6 +159,25 @@ fn main() { frobnicate!(); }\n         );\n     }\n \n+    #[test]\n+    fn add_bang_to_parens() {\n+        check_edit(\n+            \"frobnicate!\",\n+            r#\"\n+macro_rules! frobnicate { () => () }\n+fn main() {\n+    frob$0()\n+}\n+\"#,\n+            r#\"\n+macro_rules! frobnicate { () => () }\n+fn main() {\n+    frobnicate!()\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn guesses_macro_braces() {\n         check_edit("}]}