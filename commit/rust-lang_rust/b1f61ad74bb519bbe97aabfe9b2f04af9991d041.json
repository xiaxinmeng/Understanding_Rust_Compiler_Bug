{"sha": "b1f61ad74bb519bbe97aabfe9b2f04af9991d041", "node_id": "C_kwDOAAsO6NoAKGIxZjYxYWQ3NGJiNTE5YmJlOTdhYWJmZTliMmYwNGFmOTk5MWQwNDE", "commit": {"author": {"name": "SabrinaJewson", "email": "sejewson@gmail.com", "date": "2022-05-09T16:01:35Z"}, "committer": {"name": "SabrinaJewson", "email": "sejewson@gmail.com", "date": "2022-05-09T16:13:01Z"}, "message": "Add `task::Waker::noop`", "tree": {"sha": "18ee0c799e9abc671186977c278d7a8a1f603f57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18ee0c799e9abc671186977c278d7a8a1f603f57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1f61ad74bb519bbe97aabfe9b2f04af9991d041", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJHBAABCAAxFiEEpFrenxYsOeUIs3WAPVQ4/6XwVWQFAmJ5PY8THHNlamV3c29u\nQGdtYWlsLmNvbQAKCRA9VDj/pfBVZME2EACqXFdFiSXXv/gmSBpaeLVTl52IpQNS\ntJIUA89Dk+fYY7sFgPAyQKwK2V7W0xNggV1mGROIvJPeXCpLwXTf9XkM/bprlSnH\nmF2KeN/qaifYjnD5rh73r8YiSgUHcIdkEQhBrGkkQGkqZcjex81r6ExNZnb26t20\nglSKb8j9c03lwvY6UZufmzddcBMkKgD2B1Whb8vHuG05plgdSt9PvVJfyrFDaqgi\nY/RPsv8Q2JbHvi3HeGQYS5u1kGkkn90PQcviXvPI2yjLk52B757icvUVMiercHPq\ni0Cbxn77JJxDhODTcqkr+1PRTqKF4Q1+vEoXIna1vclgVkyywTVgBc0YOpl0FPTv\nDXby2aQHcRd9nKrWyFio2VnwneX9GXKTFUn1J9ITr5IWJYobq6H0YM8WXNoqfwcy\nsNFPk1lKk3MGWSq1VtNUdo55qbb0NAbiFk6HNyzHhxAomJSGIRldOfvrcLpr572V\ncLlDNaX2zRWd21lYZy2CTAMFwQf7m4cwJ32qphyM6Wk9/jGcJq4k0Llzb27XNXeO\nBqF1IyutaMb7lsVcdicXVjXb6YAkQOEbj/xipDHptd26f9/jOhDf0sofQlHN2QHJ\nocO3nAe/TpG5mfBPfixYqRlweyZ9qJKsh8/as6bpX4v/OwGQdHIpjItmXzLfI1LF\nDYawIgkuUf5Fog==\n=ij4a\n-----END PGP SIGNATURE-----", "payload": "tree 18ee0c799e9abc671186977c278d7a8a1f603f57\nparent e013f9e0ca4055930f931a30171c355de42f9f92\nauthor SabrinaJewson <sejewson@gmail.com> 1652112095 +0100\ncommitter SabrinaJewson <sejewson@gmail.com> 1652112781 +0100\n\nAdd `task::Waker::noop`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1f61ad74bb519bbe97aabfe9b2f04af9991d041", "html_url": "https://github.com/rust-lang/rust/commit/b1f61ad74bb519bbe97aabfe9b2f04af9991d041", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1f61ad74bb519bbe97aabfe9b2f04af9991d041/comments", "author": {"login": "SabrinaJewson", "id": 58880148, "node_id": "MDQ6VXNlcjU4ODgwMTQ4", "avatar_url": "https://avatars.githubusercontent.com/u/58880148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SabrinaJewson", "html_url": "https://github.com/SabrinaJewson", "followers_url": "https://api.github.com/users/SabrinaJewson/followers", "following_url": "https://api.github.com/users/SabrinaJewson/following{/other_user}", "gists_url": "https://api.github.com/users/SabrinaJewson/gists{/gist_id}", "starred_url": "https://api.github.com/users/SabrinaJewson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SabrinaJewson/subscriptions", "organizations_url": "https://api.github.com/users/SabrinaJewson/orgs", "repos_url": "https://api.github.com/users/SabrinaJewson/repos", "events_url": "https://api.github.com/users/SabrinaJewson/events{/privacy}", "received_events_url": "https://api.github.com/users/SabrinaJewson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SabrinaJewson", "id": 58880148, "node_id": "MDQ6VXNlcjU4ODgwMTQ4", "avatar_url": "https://avatars.githubusercontent.com/u/58880148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SabrinaJewson", "html_url": "https://github.com/SabrinaJewson", "followers_url": "https://api.github.com/users/SabrinaJewson/followers", "following_url": "https://api.github.com/users/SabrinaJewson/following{/other_user}", "gists_url": "https://api.github.com/users/SabrinaJewson/gists{/gist_id}", "starred_url": "https://api.github.com/users/SabrinaJewson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SabrinaJewson/subscriptions", "organizations_url": "https://api.github.com/users/SabrinaJewson/orgs", "repos_url": "https://api.github.com/users/SabrinaJewson/repos", "events_url": "https://api.github.com/users/SabrinaJewson/events{/privacy}", "received_events_url": "https://api.github.com/users/SabrinaJewson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e013f9e0ca4055930f931a30171c355de42f9f92", "url": "https://api.github.com/repos/rust-lang/rust/commits/e013f9e0ca4055930f931a30171c355de42f9f92", "html_url": "https://github.com/rust-lang/rust/commit/e013f9e0ca4055930f931a30171c355de42f9f92"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "bf36d3ba2d674ec8883f2daa9bcaaef64a479964", "filename": "library/core/src/task/wake.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/b1f61ad74bb519bbe97aabfe9b2f04af9991d041/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1f61ad74bb519bbe97aabfe9b2f04af9991d041/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs?ref=b1f61ad74bb519bbe97aabfe9b2f04af9991d041", "patch": "@@ -2,6 +2,7 @@\n \n use crate::fmt;\n use crate::marker::{PhantomData, Unpin};\n+use crate::ptr;\n \n /// A `RawWaker` allows the implementor of a task executor to create a [`Waker`]\n /// which provides customized wakeup behavior.\n@@ -277,6 +278,45 @@ impl Waker {\n         Waker { waker }\n     }\n \n+    /// Creates a new `Waker` that does nothing when `wake` is called.\n+    ///\n+    /// This is mostly useful for writing tests that need a [`Context`] to poll\n+    /// some futures, but are not expecting those futures to wake the waker or\n+    /// do not need to do anything specific if it happens.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(noop_waker)]\n+    ///\n+    /// use std::future::Future;\n+    /// use std::task;\n+    ///\n+    /// let waker = task::Waker::noop();\n+    /// let mut cx = task::Context::from_waker(&waker);\n+    ///\n+    /// let mut future = Box::pin(async { 10 });\n+    /// assert_eq!(future.as_mut().poll(&mut cx), task::Poll::Ready(10));\n+    /// ```\n+    #[inline]\n+    #[must_use]\n+    #[unstable(feature = \"noop_waker\", issue = \"none\")]\n+    pub const fn noop() -> Waker {\n+        const VTABLE: RawWakerVTable = RawWakerVTable::new(\n+            // Cloning just returns a new no-op raw waker\n+            |_| RAW,\n+            // `wake` does nothing\n+            |_| {},\n+            // `wake_by_ref` does nothing\n+            |_| {},\n+            // Dropping does nothing as we don't allocate anything\n+            |_| {},\n+        );\n+        const RAW: RawWaker = RawWaker::new(ptr::null(), &VTABLE);\n+\n+        Waker { waker: RAW }\n+    }\n+\n     /// Get a reference to the underlying [`RawWaker`].\n     #[inline]\n     #[must_use]"}]}