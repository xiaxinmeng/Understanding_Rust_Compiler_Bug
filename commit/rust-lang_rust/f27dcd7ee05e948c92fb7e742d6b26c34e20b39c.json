{"sha": "f27dcd7ee05e948c92fb7e742d6b26c34e20b39c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyN2RjZDdlZTA1ZTk0OGM5MmZiN2U3NDJkNmIyNmMzNGUyMGIzOWM=", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2020-06-25T09:15:09Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2020-06-25T09:32:27Z"}, "message": "Rename remaining `fallback` to `self_contained`", "tree": {"sha": "627cc1741e6759bef488039c841fac624eea1c91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/627cc1741e6759bef488039c841fac624eea1c91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f27dcd7ee05e948c92fb7e742d6b26c34e20b39c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f27dcd7ee05e948c92fb7e742d6b26c34e20b39c", "html_url": "https://github.com/rust-lang/rust/commit/f27dcd7ee05e948c92fb7e742d6b26c34e20b39c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f27dcd7ee05e948c92fb7e742d6b26c34e20b39c/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54293c1f157ee83d8e9949a7908e093ae0d5817a", "url": "https://api.github.com/repos/rust-lang/rust/commits/54293c1f157ee83d8e9949a7908e093ae0d5817a", "html_url": "https://github.com/rust-lang/rust/commit/54293c1f157ee83d8e9949a7908e093ae0d5817a"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "a34029410784ac33efd70849d843fe2cb6984bcc", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f27dcd7ee05e948c92fb7e742d6b26c34e20b39c/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f27dcd7ee05e948c92fb7e742d6b26c34e20b39c/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=f27dcd7ee05e948c92fb7e742d6b26c34e20b39c", "patch": "@@ -556,19 +556,25 @@ fn link_natively<'a, B: ArchiveBuilder<'a>>(\n                 \"Linker does not support -static-pie command line option. Retrying with -static instead.\"\n             );\n             // Mirror `add_(pre,post)_link_objects` to replace CRT objects.\n-            let fallback = crt_objects_fallback(sess, crate_type);\n+            let self_contained = crt_objects_fallback(sess, crate_type);\n             let opts = &sess.target.target.options;\n-            let pre_objects =\n-                if fallback { &opts.pre_link_objects_fallback } else { &opts.pre_link_objects };\n-            let post_objects =\n-                if fallback { &opts.post_link_objects_fallback } else { &opts.post_link_objects };\n+            let pre_objects = if self_contained {\n+                &opts.pre_link_objects_fallback\n+            } else {\n+                &opts.pre_link_objects\n+            };\n+            let post_objects = if self_contained {\n+                &opts.post_link_objects_fallback\n+            } else {\n+                &opts.post_link_objects\n+            };\n             let get_objects = |objects: &CrtObjects, kind| {\n                 objects\n                     .get(&kind)\n                     .iter()\n                     .copied()\n                     .flatten()\n-                    .map(|obj| get_object_file_path(sess, obj, fallback).into_os_string())\n+                    .map(|obj| get_object_file_path(sess, obj, self_contained).into_os_string())\n                     .collect::<Vec<_>>()\n             };\n             let pre_objects_static_pie = get_objects(pre_objects, LinkOutputKind::StaticPicExe);\n@@ -1301,12 +1307,13 @@ fn add_pre_link_objects(\n     cmd: &mut dyn Linker,\n     sess: &Session,\n     link_output_kind: LinkOutputKind,\n-    fallback: bool,\n+    self_contained: bool,\n ) {\n     let opts = &sess.target.target.options;\n-    let objects = if fallback { &opts.pre_link_objects_fallback } else { &opts.pre_link_objects };\n+    let objects =\n+        if self_contained { &opts.pre_link_objects_fallback } else { &opts.pre_link_objects };\n     for obj in objects.get(&link_output_kind).iter().copied().flatten() {\n-        cmd.add_object(&get_object_file_path(sess, obj, fallback));\n+        cmd.add_object(&get_object_file_path(sess, obj, self_contained));\n     }\n }\n \n@@ -1315,12 +1322,13 @@ fn add_post_link_objects(\n     cmd: &mut dyn Linker,\n     sess: &Session,\n     link_output_kind: LinkOutputKind,\n-    fallback: bool,\n+    self_contained: bool,\n ) {\n     let opts = &sess.target.target.options;\n-    let objects = if fallback { &opts.post_link_objects_fallback } else { &opts.post_link_objects };\n+    let objects =\n+        if self_contained { &opts.post_link_objects_fallback } else { &opts.post_link_objects };\n     for obj in objects.get(&link_output_kind).iter().copied().flatten() {\n-        cmd.add_object(&get_object_file_path(sess, obj, fallback));\n+        cmd.add_object(&get_object_file_path(sess, obj, self_contained));\n     }\n }\n "}]}