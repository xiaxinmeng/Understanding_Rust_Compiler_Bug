{"sha": "bb2cb89ead84128441472ffec7e5c9174ce204e7", "node_id": "C_kwDOAAsO6NoAKGJiMmNiODllYWQ4NDEyODQ0MTQ3MmZmZWM3ZTVjOTE3NGNlMjA0ZTc", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-04-24T17:30:55Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-04-25T05:02:39Z"}, "message": "Negative coherence test", "tree": {"sha": "20393cf72ffbf423789a5f15350982b21c88646c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20393cf72ffbf423789a5f15350982b21c88646c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb2cb89ead84128441472ffec7e5c9174ce204e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb2cb89ead84128441472ffec7e5c9174ce204e7", "html_url": "https://github.com/rust-lang/rust/commit/bb2cb89ead84128441472ffec7e5c9174ce204e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb2cb89ead84128441472ffec7e5c9174ce204e7/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "794cb890dee2df982403d85a951f9414f86b6daf", "url": "https://api.github.com/repos/rust-lang/rust/commits/794cb890dee2df982403d85a951f9414f86b6daf", "html_url": "https://github.com/rust-lang/rust/commit/794cb890dee2df982403d85a951f9414f86b6daf"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "5436b02c3ded2d64b23101a00d2fb213e999e10b", "filename": "tests/ui/traits/new-solver/negative-coherence-bounds.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/bb2cb89ead84128441472ffec7e5c9174ce204e7/tests%2Fui%2Ftraits%2Fnew-solver%2Fnegative-coherence-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb2cb89ead84128441472ffec7e5c9174ce204e7/tests%2Fui%2Ftraits%2Fnew-solver%2Fnegative-coherence-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fnegative-coherence-bounds.rs?ref=bb2cb89ead84128441472ffec7e5c9174ce204e7", "patch": "@@ -0,0 +1,40 @@\n+// check-pass\n+\n+// This test verifies that negative trait predicate cannot be satisfied from a\n+// positive param-env candidate.\n+\n+// Negative coherence is one of the only places where we actually construct and\n+// evaluate negative predicates. Specifically, when verifying whether the first\n+// and second impls below overlap, we do not want to consider them disjoint,\n+// otherwise the second impl would be missing an associated type `type Item`\n+// which is provided by the first impl that it is specializing.\n+\n+#![feature(specialization)]\n+//~^ WARN the feature `specialization` is incomplete\n+#![feature(with_negative_coherence)]\n+\n+trait BoxIter {\n+    type Item;\n+\n+    fn last(self) -> Option<Self::Item>;\n+}\n+\n+impl<I: Iterator + ?Sized> BoxIter for Box<I> {\n+    type Item = I::Item;\n+\n+    default fn last(self) -> Option<I::Item> {\n+        todo!()\n+    }\n+}\n+\n+// When checking that this impl does/doesn't overlap the one above, we evaluate\n+// a negative version of all of the where-clause predicates of the impl below.\n+// For `I: !Iterator`, we should make sure that the param-env clause `I: Iterator`\n+// from above doesn't satisfy this predicate.\n+impl<I: Iterator> BoxIter for Box<I> {\n+    fn last(self) -> Option<I::Item> {\n+        (*self).last()\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "4127f51f56da2f417dc5beae8abad9d8453ff204", "filename": "tests/ui/traits/new-solver/negative-coherence-bounds.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bb2cb89ead84128441472ffec7e5c9174ce204e7/tests%2Fui%2Ftraits%2Fnew-solver%2Fnegative-coherence-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb2cb89ead84128441472ffec7e5c9174ce204e7/tests%2Fui%2Ftraits%2Fnew-solver%2Fnegative-coherence-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fnegative-coherence-bounds.stderr?ref=bb2cb89ead84128441472ffec7e5c9174ce204e7", "patch": "@@ -0,0 +1,12 @@\n+warning: the feature `specialization` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/negative-coherence-bounds.rs:12:12\n+   |\n+LL | #![feature(specialization)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #31844 <https://github.com/rust-lang/rust/issues/31844> for more information\n+   = help: consider using `min_specialization` instead, which is more stable and complete\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+warning: 1 warning emitted\n+"}]}