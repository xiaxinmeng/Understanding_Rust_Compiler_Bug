{"sha": "33be5762e579a9e03288ba27821951ca7db3a68e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzYmU1NzYyZTU3OWE5ZTAzMjg4YmEyNzgyMTk1MWNhN2RiM2E2OGU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-06-07T17:32:28Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-06-07T17:32:28Z"}, "message": "Attempt to track attr macros during highlighting", "tree": {"sha": "34016c65f02fcc6088c1ecac54d56cdb0d99c63c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34016c65f02fcc6088c1ecac54d56cdb0d99c63c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33be5762e579a9e03288ba27821951ca7db3a68e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33be5762e579a9e03288ba27821951ca7db3a68e", "html_url": "https://github.com/rust-lang/rust/commit/33be5762e579a9e03288ba27821951ca7db3a68e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33be5762e579a9e03288ba27821951ca7db3a68e/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33e747d786e588ab61133fe2c0fb6341826e2cea", "url": "https://api.github.com/repos/rust-lang/rust/commits/33e747d786e588ab61133fe2c0fb6341826e2cea", "html_url": "https://github.com/rust-lang/rust/commit/33e747d786e588ab61133fe2c0fb6341826e2cea"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "2d08a7704fa5430a6f36a18483e0dda968bcfb3a", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/33be5762e579a9e03288ba27821951ca7db3a68e/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33be5762e579a9e03288ba27821951ca7db3a68e/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=33be5762e579a9e03288ba27821951ca7db3a68e", "patch": "@@ -123,6 +123,10 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n         self.imp.expand_attr_macro(item)\n     }\n \n+    pub fn is_attr_macro_call(&self, item: &ast::Item) -> bool {\n+        self.imp.is_attr_macro_call(item)\n+    }\n+\n     pub fn speculative_expand(\n         &self,\n         actual_macro_call: &ast::MacroCall,\n@@ -348,6 +352,12 @@ impl<'db> SemanticsImpl<'db> {\n         Some(node)\n     }\n \n+    fn is_attr_macro_call(&self, item: &ast::Item) -> bool {\n+        let sa = self.analyze(item.syntax());\n+        let src = InFile::new(sa.file_id, item.clone());\n+        self.with_ctx(|ctx| ctx.item_to_macro_call(src).is_some())\n+    }\n+\n     fn speculative_expand(\n         &self,\n         actual_macro_call: &ast::MacroCall,"}, {"sha": "b03f1c71f170303413adae3fd5c5fdf93aa13d43", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/33be5762e579a9e03288ba27821951ca7db3a68e/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33be5762e579a9e03288ba27821951ca7db3a68e/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=33be5762e579a9e03288ba27821951ca7db3a68e", "patch": "@@ -192,6 +192,7 @@ fn traverse(\n     let mut bindings_shadow_count: FxHashMap<Name, u32> = FxHashMap::default();\n \n     let mut current_macro_call: Option<ast::MacroCall> = None;\n+    let mut current_attr_macro_call = None;\n     let mut current_macro: Option<ast::Macro> = None;\n     let mut macro_highlighter = MacroHighlighter::default();\n     let mut inside_attribute = false;\n@@ -227,6 +228,19 @@ fn traverse(\n             }\n             _ => (),\n         }\n+        match event.clone().map(|it| it.into_node().and_then(ast::Item::cast)) {\n+            WalkEvent::Enter(Some(item)) => {\n+                if sema.is_attr_macro_call(&item) {\n+                    current_attr_macro_call = Some(item);\n+                }\n+            }\n+            WalkEvent::Leave(Some(item)) => {\n+                if current_attr_macro_call == Some(item) {\n+                    current_attr_macro_call = None;\n+                }\n+            }\n+            _ => (),\n+        }\n \n         match event.clone().map(|it| it.into_node().and_then(ast::Macro::cast)) {\n             WalkEvent::Enter(Some(mac)) => {\n@@ -286,6 +300,22 @@ fn traverse(\n                 }\n                 None => token.into(),\n             }\n+        } else if current_attr_macro_call.is_some() {\n+            let token = match element.clone().into_token() {\n+                Some(it) => it,\n+                _ => continue,\n+            };\n+            let token = sema.descend_into_macros(token.clone());\n+            match token.parent() {\n+                Some(parent) => {\n+                    // We only care Name and Name_ref\n+                    match (token.kind(), parent.kind()) {\n+                        (IDENT, NAME) | (IDENT, NAME_REF) => parent.into(),\n+                        _ => token.into(),\n+                    }\n+                }\n+                None => token.into(),\n+            }\n         } else {\n             element.clone()\n         };"}]}