{"sha": "91575f89ccf6111f27ae8a65612e5a14ebd54900", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxNTc1Zjg5Y2NmNjExMWYyN2FlOGE2NTYxMmU1YTE0ZWJkNTQ5MDA=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-09-08T15:24:03Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-09-12T14:33:18Z"}, "message": "Use non-recursive algorithm in non-parallel compiler.", "tree": {"sha": "b81b7169d353b1caeeb1e20e2419dc4770ca7310", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b81b7169d353b1caeeb1e20e2419dc4770ca7310"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91575f89ccf6111f27ae8a65612e5a14ebd54900", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91575f89ccf6111f27ae8a65612e5a14ebd54900", "html_url": "https://github.com/rust-lang/rust/commit/91575f89ccf6111f27ae8a65612e5a14ebd54900", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91575f89ccf6111f27ae8a65612e5a14ebd54900/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bbb0792ea7cf0322b896f1cf2a9d57b418ef106", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bbb0792ea7cf0322b896f1cf2a9d57b418ef106", "html_url": "https://github.com/rust-lang/rust/commit/6bbb0792ea7cf0322b896f1cf2a9d57b418ef106"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "fa186f4a931f7156302e7b19ae27b29194260baf", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/91575f89ccf6111f27ae8a65612e5a14ebd54900/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91575f89ccf6111f27ae8a65612e5a14ebd54900/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=91575f89ccf6111f27ae8a65612e5a14ebd54900", "patch": "@@ -6,7 +6,6 @@ use rustc_ast as ast;\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::svh::Svh;\n-use rustc_data_structures::sync::{self, par_iter};\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, LocalDefId, CRATE_DEF_ID, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::definitions::{DefKey, DefPath, DefPathHash};\n@@ -571,13 +570,20 @@ impl<'hir> Map<'hir> {\n         }\n     }\n \n-    pub fn par_for_each_module(&self, f: impl Fn(LocalDefId) + sync::Sync) {\n-        use rustc_data_structures::sync::ParallelIterator;\n+    #[cfg(not(parallel_compiler))]\n+    #[inline]\n+    pub fn par_for_each_module(&self, f: impl Fn(LocalDefId)) {\n+        self.for_each_module(f)\n+    }\n+\n+    #[cfg(parallel_compiler)]\n+    pub fn par_for_each_module(&self, f: impl Fn(LocalDefId) + Sync) {\n+        use rustc_data_structures::sync::{par_iter, ParallelIterator};\n         par_iter_submodules(self.tcx, CRATE_DEF_ID, &f);\n \n         fn par_iter_submodules<F>(tcx: TyCtxt<'_>, module: LocalDefId, f: &F)\n         where\n-            F: Fn(LocalDefId) + sync::Sync,\n+            F: Fn(LocalDefId) + Sync,\n         {\n             (*f)(module);\n             let items = tcx.hir_module_items(module);"}]}