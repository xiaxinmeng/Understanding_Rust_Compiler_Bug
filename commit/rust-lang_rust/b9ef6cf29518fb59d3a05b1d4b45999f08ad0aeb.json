{"sha": "b9ef6cf29518fb59d3a05b1d4b45999f08ad0aeb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5ZWY2Y2YyOTUxOGZiNTlkM2EwNWIxZDRiNDU5OTlmMDhhZDBhZWI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-24T11:51:27Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-24T11:51:27Z"}, "message": "Add missing cancellation point", "tree": {"sha": "8e944628b374521e72576f0b6c88f23b1b1b21db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e944628b374521e72576f0b6c88f23b1b1b21db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9ef6cf29518fb59d3a05b1d4b45999f08ad0aeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9ef6cf29518fb59d3a05b1d4b45999f08ad0aeb", "html_url": "https://github.com/rust-lang/rust/commit/b9ef6cf29518fb59d3a05b1d4b45999f08ad0aeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9ef6cf29518fb59d3a05b1d4b45999f08ad0aeb/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc0a378070676d7b3a028f770ec6e74c5bf7ca96", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc0a378070676d7b3a028f770ec6e74c5bf7ca96", "html_url": "https://github.com/rust-lang/rust/commit/bc0a378070676d7b3a028f770ec6e74c5bf7ca96"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "02d83e0d95858593f41d4c29169e7c1b65161d54", "filename": "crates/ra_hir/src/semantics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b9ef6cf29518fb59d3a05b1d4b45999f08ad0aeb/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9ef6cf29518fb59d3a05b1d4b45999f08ad0aeb/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics.rs?ref=b9ef6cf29518fb59d3a05b1d4b45999f08ad0aeb", "patch": "@@ -321,6 +321,7 @@ impl<'db> SemanticsImpl<'db> {\n         let sa = self.analyze2(parent.as_ref(), None);\n \n         let token = successors(Some(parent.with_value(token)), |token| {\n+            self.db.check_canceled();\n             let macro_call = token.value.ancestors().find_map(ast::MacroCall::cast)?;\n             let tt = macro_call.token_tree()?;\n             if !tt.syntax().text_range().contains_range(token.value.text_range()) {"}]}