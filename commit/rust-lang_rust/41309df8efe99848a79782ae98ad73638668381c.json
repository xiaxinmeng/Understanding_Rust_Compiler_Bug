{"sha": "41309df8efe99848a79782ae98ad73638668381c", "node_id": "C_kwDOAAsO6NoAKDQxMzA5ZGY4ZWZlOTk4NDhhNzk3ODJhZTk4YWQ3MzYzODY2ODM4MWM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-20T18:02:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-20T18:02:34Z"}, "message": "Auto merge of #8857 - smoelius:fix-8855, r=flip1995\n\nAdd test for #8855\n\nFix #8855\n\nHere is what I think is going on.\n\nFirst, the expression `format!(\"{:>6} {:>6}\", a, b.to_string())` expands to:\n```rust\n{\n    let res =\n        ::alloc::fmt::format(::core::fmt::Arguments::new_v1_formatted(&[\"\",\n                            \" \"],\n                &[::core::fmt::ArgumentV1::new_display(&a),\n                            ::core::fmt::ArgumentV1::new_display(&b.to_string())],\n                &[::core::fmt::rt::v1::Argument {\n                                position: 0usize,\n                                format: ::core::fmt::rt::v1::FormatSpec {\n                                    fill: ' ',\n                                    align: ::core::fmt::rt::v1::Alignment::Right,\n                                    flags: 0u32,\n                                    precision: ::core::fmt::rt::v1::Count::Implied,\n                                    width: ::core::fmt::rt::v1::Count::Is(6usize),\n                                },\n                            },\n                            ::core::fmt::rt::v1::Argument {\n                                position: 1usize,\n                                format: ::core::fmt::rt::v1::FormatSpec {\n                                    fill: ' ',\n                                    align: ::core::fmt::rt::v1::Alignment::Right,\n                                    flags: 0u32,\n                                    precision: ::core::fmt::rt::v1::Count::Implied,\n                                    width: ::core::fmt::rt::v1::Count::Is(6usize),\n                                },\n                            }], unsafe { ::core::fmt::UnsafeArg::new() }));\n    res\n}\n```\nWhen I dump the expressions that get past the call to `has_string_formatting` [here](https://github.com/rust-lang/rust-clippy/blob/b312ad7d0cf0f30be2bd4658b71a3520a2e76709/clippy_lints/src/format_args.rs#L83), I see more than I would expect.\n\nIn particular, I see this subexpression of the above:\n```\n                &[::core::fmt::ArgumentV1::new_display(&a),\n                            ::core::fmt::ArgumentV1::new_display(&b.to_string())],\n```\n\nThis suggests to me that more expressions are getting past [this call](https://github.com/rust-lang/rust-clippy/blob/b312ad7d0cf0f30be2bd4658b71a3520a2e76709/clippy_lints/src/format_args.rs#L71) to `FormatArgsExpn::parse` than should.\n\nThose expressions are then visited, but no `::core::fmt::rt::v1::Argument`s are found and pushed [here](https://github.com/rust-lang/rust-clippy/blob/b312ad7d0cf0f30be2bd4658b71a3520a2e76709/clippy_utils/src/macros.rs#L407).\n\nAs a result, the expressions appear unformatted, hence, the false positive.\n\nMy proposed fix is to restrict `FormatArgsExpn::parse` so that it only matches `Call` expressions.\n\ncc: `@akanalytics`\n\nchangelog: none", "tree": {"sha": "bb80b682036ef1b47b18cfe8ededc33e127ea6f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb80b682036ef1b47b18cfe8ededc33e127ea6f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41309df8efe99848a79782ae98ad73638668381c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41309df8efe99848a79782ae98ad73638668381c", "html_url": "https://github.com/rust-lang/rust/commit/41309df8efe99848a79782ae98ad73638668381c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41309df8efe99848a79782ae98ad73638668381c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5820addb240ddcf13712be686c141a3d00ae792a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5820addb240ddcf13712be686c141a3d00ae792a", "html_url": "https://github.com/rust-lang/rust/commit/5820addb240ddcf13712be686c141a3d00ae792a"}, {"sha": "6f3d398e13607d8ee3eb6d18ea633bc7e5a3a118", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f3d398e13607d8ee3eb6d18ea633bc7e5a3a118", "html_url": "https://github.com/rust-lang/rust/commit/6f3d398e13607d8ee3eb6d18ea633bc7e5a3a118"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "e07cae7027706d016712b01aad52ee81e41ea348", "filename": "tests/ui/format_args.fixed", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/41309df8efe99848a79782ae98ad73638668381c/tests%2Fui%2Fformat_args.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/41309df8efe99848a79782ae98ad73638668381c/tests%2Fui%2Fformat_args.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat_args.fixed?ref=41309df8efe99848a79782ae98ad73638668381c", "patch": "@@ -122,3 +122,27 @@ fn issue8643(vendor_id: usize, product_id: usize, name: &str) {\n         name\n     );\n }\n+\n+// https://github.com/rust-lang/rust-clippy/issues/8855\n+mod issue_8855 {\n+    #![allow(dead_code)]\n+\n+    struct A {}\n+\n+    impl std::fmt::Display for A {\n+        fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {\n+            write!(f, \"test\")\n+        }\n+    }\n+\n+    fn main() {\n+        let a = A {};\n+        let b = A {};\n+\n+        let x = format!(\"{} {}\", a, b);\n+        dbg!(x);\n+\n+        let x = format!(\"{:>6} {:>6}\", a, b.to_string());\n+        dbg!(x);\n+    }\n+}"}, {"sha": "86e66bce2c5f410c66acf33bb4ebb92d9e7381c1", "filename": "tests/ui/format_args.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/41309df8efe99848a79782ae98ad73638668381c/tests%2Fui%2Fformat_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41309df8efe99848a79782ae98ad73638668381c/tests%2Fui%2Fformat_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat_args.rs?ref=41309df8efe99848a79782ae98ad73638668381c", "patch": "@@ -122,3 +122,27 @@ fn issue8643(vendor_id: usize, product_id: usize, name: &str) {\n         name\n     );\n }\n+\n+// https://github.com/rust-lang/rust-clippy/issues/8855\n+mod issue_8855 {\n+    #![allow(dead_code)]\n+\n+    struct A {}\n+\n+    impl std::fmt::Display for A {\n+        fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {\n+            write!(f, \"test\")\n+        }\n+    }\n+\n+    fn main() {\n+        let a = A {};\n+        let b = A {};\n+\n+        let x = format!(\"{} {}\", a, b.to_string());\n+        dbg!(x);\n+\n+        let x = format!(\"{:>6} {:>6}\", a, b.to_string());\n+        dbg!(x);\n+    }\n+}"}, {"sha": "e69999cc9d0215f37e6e74aba1fbc905784ce189", "filename": "tests/ui/format_args.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/41309df8efe99848a79782ae98ad73638668381c/tests%2Fui%2Fformat_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41309df8efe99848a79782ae98ad73638668381c/tests%2Fui%2Fformat_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat_args.stderr?ref=41309df8efe99848a79782ae98ad73638668381c", "patch": "@@ -126,5 +126,11 @@ error: `to_string` applied to a type that implements `Display` in `println!` arg\n LL |     println!(\"{foo}{bar}\", bar = \"bar\", foo = \"foo\".to_string());\n    |                                                    ^^^^^^^^^^^^ help: remove this\n \n-error: aborting due to 21 previous errors\n+error: `to_string` applied to a type that implements `Display` in `format!` args\n+  --> $DIR/format_args.rs:142:38\n+   |\n+LL |         let x = format!(\"{} {}\", a, b.to_string());\n+   |                                      ^^^^^^^^^^^^ help: remove this\n+\n+error: aborting due to 22 previous errors\n "}]}