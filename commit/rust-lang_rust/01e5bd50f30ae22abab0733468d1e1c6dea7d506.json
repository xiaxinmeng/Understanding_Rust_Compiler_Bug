{"sha": "01e5bd50f30ae22abab0733468d1e1c6dea7d506", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxZTViZDUwZjMwYWUyMmFiYWIwNzMzNDY4ZDFlMWM2ZGVhN2Q1MDY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-09T08:01:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-09T08:01:34Z"}, "message": "Merge #3908\n\n3908: Fix add missing items assist order r=matklad a=matklad\n\ncloses #3904\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "c94bd703a01cc990e42aa5cfa37460504987b1de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c94bd703a01cc990e42aa5cfa37460504987b1de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01e5bd50f30ae22abab0733468d1e1c6dea7d506", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJejtZeCRBK7hj4Ov3rIwAAdHIIAGNZAPfspJHvFTRJdf2oJ2G9\nQL8N9kT4ZHOnivlENuu//Lq32lhR/U23d3WkjQZGITzLcK+CgJe1UHHz38uPED14\ncnnlsNDomTCUqFFF0JRWWcPBMl8f00JlnLFVxCJXt8/CNohNew2ggSjYfnf1vKpf\n+/JmziF0xrvRuRmP/O07cHfj5/UsVLMQ2ifmN60vMh/LvQHggENaWnkc8XS4OrnR\nab37FeGWxJk9y5l6hv+BoLHyqp8/ltbf1a5VqT766WbCfwQN5hGwr9ZTPSyo9AY7\n/WZ1DL4XQJ8oe6kVw+TT0I8XRnR28u07lSrfu04GpumjnCJLQZ/hq55hUhRMrBI=\n=cFaN\n-----END PGP SIGNATURE-----\n", "payload": "tree c94bd703a01cc990e42aa5cfa37460504987b1de\nparent ebd1309c9a3ac0e6b0cee197f30a962d5263e727\nparent dd2e8e86a9de610ca41846e0088e5e186eddf999\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1586419294 +0000\ncommitter GitHub <noreply@github.com> 1586419294 +0000\n\nMerge #3908\n\n3908: Fix add missing items assist order r=matklad a=matklad\n\ncloses #3904\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01e5bd50f30ae22abab0733468d1e1c6dea7d506", "html_url": "https://github.com/rust-lang/rust/commit/01e5bd50f30ae22abab0733468d1e1c6dea7d506", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01e5bd50f30ae22abab0733468d1e1c6dea7d506/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebd1309c9a3ac0e6b0cee197f30a962d5263e727", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebd1309c9a3ac0e6b0cee197f30a962d5263e727", "html_url": "https://github.com/rust-lang/rust/commit/ebd1309c9a3ac0e6b0cee197f30a962d5263e727"}, {"sha": "dd2e8e86a9de610ca41846e0088e5e186eddf999", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd2e8e86a9de610ca41846e0088e5e186eddf999", "html_url": "https://github.com/rust-lang/rust/commit/dd2e8e86a9de610ca41846e0088e5e186eddf999"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "5ba5254fd042b8d4375cc90de313e0b642793fa1", "filename": "crates/ra_assists/src/lib.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/01e5bd50f30ae22abab0733468d1e1c6dea7d506/crates%2Fra_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01e5bd50f30ae22abab0733468d1e1c6dea7d506/crates%2Fra_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Flib.rs?ref=01e5bd50f30ae22abab0733468d1e1c6dea7d506", "patch": "@@ -132,13 +132,12 @@ mod handlers {\n \n     pub(crate) fn all() -> &'static [AssistHandler] {\n         &[\n+            // These are alphabetic for the foolish consistency\n             add_custom_impl::add_custom_impl,\n             add_derive::add_derive,\n             add_explicit_type::add_explicit_type,\n             add_function::add_function,\n             add_impl::add_impl,\n-            add_missing_impl_members::add_missing_default_members,\n-            add_missing_impl_members::add_missing_impl_members,\n             add_new::add_new,\n             apply_demorgan::apply_demorgan,\n             auto_import::auto_import,\n@@ -168,6 +167,9 @@ mod handlers {\n             replace_unwrap_with_match::replace_unwrap_with_match,\n             split_import::split_import,\n             add_from_impl_for_enum::add_from_impl_for_enum,\n+            // These are manually sorted for better priorities\n+            add_missing_impl_members::add_missing_impl_members,\n+            add_missing_impl_members::add_missing_default_members,\n         ]\n     }\n }"}]}