{"sha": "5c77a17d182fd05f06eaf899281b2eda49047e91", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNzdhMTdkMTgyZmQwNWYwNmVhZjg5OTI4MWIyZWRhNDkwNDdlOTE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-07T14:23:11Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-11T10:04:49Z"}, "message": "note down some more future plans", "tree": {"sha": "c57b4e06de4f3fb72e257101e20ff5e68286ab2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c57b4e06de4f3fb72e257101e20ff5e68286ab2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c77a17d182fd05f06eaf899281b2eda49047e91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c77a17d182fd05f06eaf899281b2eda49047e91", "html_url": "https://github.com/rust-lang/rust/commit/5c77a17d182fd05f06eaf899281b2eda49047e91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c77a17d182fd05f06eaf899281b2eda49047e91/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5a63566d6d8d70687410b41b6464bcef3ef89f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5a63566d6d8d70687410b41b6464bcef3ef89f3", "html_url": "https://github.com/rust-lang/rust/commit/c5a63566d6d8d70687410b41b6464bcef3ef89f3"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "13ec27aa1ab3f67ccd67b85a50f05210eb581859", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c77a17d182fd05f06eaf899281b2eda49047e91/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c77a17d182fd05f06eaf899281b2eda49047e91/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=5c77a17d182fd05f06eaf899281b2eda49047e91", "patch": "@@ -1908,6 +1908,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for InvalidValue {\n                     ty.tuple_fields().all(|field| ty_maybe_allows_zero_init(tcx, field))\n                 }\n                 // FIXME: Would be nice to also warn for `NonNull`/`NonZero*`.\n+                // FIXME: *Only for `mem::uninitialized`*, we could also warn for `bool`,\n+                //        `char`, and any multivariant enum.\n                 // Conservative fallback.\n                 _ => true,\n             }"}]}