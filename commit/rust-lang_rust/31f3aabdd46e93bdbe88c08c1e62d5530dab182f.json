{"sha": "31f3aabdd46e93bdbe88c08c1e62d5530dab182f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxZjNhYWJkZDQ2ZTkzYmRiZTg4YzA4YzFlNjJkNTUzMGRhYjE4MmY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-02-10T13:50:24Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-02-10T13:50:24Z"}, "message": "move some variables closer to their use site.", "tree": {"sha": "f05ca9bddd61e0265466190e969828466f05db0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f05ca9bddd61e0265466190e969828466f05db0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31f3aabdd46e93bdbe88c08c1e62d5530dab182f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31f3aabdd46e93bdbe88c08c1e62d5530dab182f", "html_url": "https://github.com/rust-lang/rust/commit/31f3aabdd46e93bdbe88c08c1e62d5530dab182f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31f3aabdd46e93bdbe88c08c1e62d5530dab182f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e185485b34b5ab783d9faa3f17ead6059b6341b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e185485b34b5ab783d9faa3f17ead6059b6341b", "html_url": "https://github.com/rust-lang/rust/commit/2e185485b34b5ab783d9faa3f17ead6059b6341b"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "859ed32405ca69f505b234de7e2d30250b4035bc", "filename": "src/lvalue.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/31f3aabdd46e93bdbe88c08c1e62d5530dab182f/src%2Flvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31f3aabdd46e93bdbe88c08c1e62d5530dab182f/src%2Flvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flvalue.rs?ref=31f3aabdd46e93bdbe88c08c1e62d5530dab182f", "patch": "@@ -168,11 +168,6 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         field_ty: Ty<'tcx>,\n     ) -> EvalResult<'tcx, Lvalue<'tcx>> {\n         let base_layout = self.type_layout(base_ty)?;\n-        // FIXME(solson)\n-        let base = self.force_allocation(base)?;\n-        let (base_ptr, base_extra) = base.to_ptr_and_extra();\n-\n-        let field_ty = self.monomorphize(field_ty, self.substs());\n \n         use rustc::ty::layout::Layout::*;\n         let (offset, packed) = match *base_layout {\n@@ -181,6 +176,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n             },\n \n             General { ref variants, .. } => {\n+                let (_, base_extra) = base.to_ptr_and_extra();\n                 if let LvalueExtra::DowncastVariant(variant_idx) = base_extra {\n                     // +1 for the discriminant, which is field 0\n                     (variants[variant_idx].offsets[field + 1], variants[variant_idx].packed)\n@@ -210,6 +206,10 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n             _ => bug!(\"field access on non-product type: {:?}\", base_layout),\n         };\n \n+        // FIXME(solson)\n+        let base = self.force_allocation(base)?;\n+        let (base_ptr, base_extra) = base.to_ptr_and_extra();\n+\n         let offset = match base_extra {\n             LvalueExtra::Vtable(tab) => {\n                 let (_, align) = self.size_and_align_of_dst(base_ty, Value::ByValPair(PrimVal::Ptr(base_ptr), PrimVal::Ptr(tab)))?;\n@@ -220,6 +220,8 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n \n         let ptr = base_ptr.offset(offset);\n \n+        let field_ty = self.monomorphize(field_ty, self.substs());\n+\n         if packed {\n             let size = self.type_size(field_ty)?.expect(\"packed struct must be sized\");\n             self.memory.mark_packed(ptr, size);"}]}