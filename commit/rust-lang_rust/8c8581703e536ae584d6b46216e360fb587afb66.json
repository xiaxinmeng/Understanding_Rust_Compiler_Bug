{"sha": "8c8581703e536ae584d6b46216e360fb587afb66", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjODU4MTcwM2U1MzZhZTU4NGQ2YjQ2MjE2ZTM2MGZiNTg3YWZiNjY=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-10-30T10:55:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-30T10:55:27Z"}, "message": "Rollup merge of #55450 - japaric:msp430, r=alexcrichton\n\nmsp430: remove the whole Atomic* API\n\nPR #51953 enabled the Atomic*.{load,store} API on MSP430. Unfortunately,\nthe LLVM backend doesn't currently support those atomic operations, so this\ncommit removes the API and leaves instructions on how and when to enable it\nin the future.\n\nthe second fixes compiling liballoc for msp430\n\ncloses #54511\nr? @alexcrichton\ncc @chernomor @awygle @cr1901 @pftbest", "tree": {"sha": "927063ba76929940bfe2c0a97a8d6dd3035ebf64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/927063ba76929940bfe2c0a97a8d6dd3035ebf64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c8581703e536ae584d6b46216e360fb587afb66", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb2DifCRBK7hj4Ov3rIwAAdHIIAChS1KapjIS8XzKQDj+tBJev\nQhq/O99PRO8C4szKydyARMGKSpn+H8gT+EO5dM0RgqMaFGuD/33A4rhL63vXXZwN\nGa0TTZ7wMchHjaLp3noQUGvijPoey00xtNr/D6D0IRyw7Mlnfmg5w51FrZPq3q99\nlmF3RgBvGgmmGUTpEiBrtiH3sUWoI7p4VlbnCqnjyMavVGPLw5uDrA8FkpgvAMzV\n9GntalXDTqGCxciD8hIiPJOhHnCVnqwTnlucR2fQSV/6rzo11El08r2SRmN3DRT2\nu2jUFBMmUDoDOlc97/4qbqSJ/+jm1h29b9otpggBTYTR2B4uLW45JLYfL8BfgI0=\n=8993\n-----END PGP SIGNATURE-----\n", "payload": "tree 927063ba76929940bfe2c0a97a8d6dd3035ebf64\nparent 62f4316b01709865a6b5f94d68ec04a194b0264b\nparent f67b4e07d861ae2c8317cbd644ec49a9d5720f80\nauthor kennytm <kennytm@gmail.com> 1540896927 +0800\ncommitter GitHub <noreply@github.com> 1540896927 +0800\n\nRollup merge of #55450 - japaric:msp430, r=alexcrichton\n\nmsp430: remove the whole Atomic* API\n\nPR #51953 enabled the Atomic*.{load,store} API on MSP430. Unfortunately,\nthe LLVM backend doesn't currently support those atomic operations, so this\ncommit removes the API and leaves instructions on how and when to enable it\nin the future.\n\nthe second fixes compiling liballoc for msp430\n\ncloses #54511\nr? @alexcrichton\ncc @chernomor @awygle @cr1901 @pftbest\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c8581703e536ae584d6b46216e360fb587afb66", "html_url": "https://github.com/rust-lang/rust/commit/8c8581703e536ae584d6b46216e360fb587afb66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c8581703e536ae584d6b46216e360fb587afb66/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62f4316b01709865a6b5f94d68ec04a194b0264b", "url": "https://api.github.com/repos/rust-lang/rust/commits/62f4316b01709865a6b5f94d68ec04a194b0264b", "html_url": "https://github.com/rust-lang/rust/commit/62f4316b01709865a6b5f94d68ec04a194b0264b"}, {"sha": "f67b4e07d861ae2c8317cbd644ec49a9d5720f80", "url": "https://api.github.com/repos/rust-lang/rust/commits/f67b4e07d861ae2c8317cbd644ec49a9d5720f80", "html_url": "https://github.com/rust-lang/rust/commit/f67b4e07d861ae2c8317cbd644ec49a9d5720f80"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "88e76033f273ed5ae7fed104539ef46a17412b5b", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c8581703e536ae584d6b46216e360fb587afb66/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c8581703e536ae584d6b46216e360fb587afb66/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=8c8581703e536ae584d6b46216e360fb587afb66", "patch": "@@ -36,6 +36,8 @@ use vec::Vec;\n \n const INITIAL_CAPACITY: usize = 7; // 2^3 - 1\n const MINIMUM_CAPACITY: usize = 1; // 2 - 1\n+#[cfg(target_pointer_width = \"16\")]\n+const MAXIMUM_ZST_CAPACITY: usize = 1 << (16 - 1); // Largest possible power of two\n #[cfg(target_pointer_width = \"32\")]\n const MAXIMUM_ZST_CAPACITY: usize = 1 << (32 - 1); // Largest possible power of two\n #[cfg(target_pointer_width = \"64\")]"}, {"sha": "d9ab23844918d02c2d0e719f1c22e7eae403c53d", "filename": "src/librustc_target/spec/msp430_none_elf.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8c8581703e536ae584d6b46216e360fb587afb66/src%2Flibrustc_target%2Fspec%2Fmsp430_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c8581703e536ae584d6b46216e360fb587afb66/src%2Flibrustc_target%2Fspec%2Fmsp430_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmsp430_none_elf.rs?ref=8c8581703e536ae584d6b46216e360fb587afb66", "patch": "@@ -35,9 +35,14 @@ pub fn target() -> TargetResult {\n             no_integrated_as: true,\n \n             // There are no atomic CAS instructions available in the MSP430\n-            // instruction set\n-            max_atomic_width: Some(16),\n+            // instruction set, and the LLVM backend doesn't currently support\n+            // compiler fences so the Atomic* API is missing on this target.\n+            // When the LLVM backend gains support for compile fences uncomment\n+            // the `singlethread: true` line and set `max_atomic_width` to\n+            // `Some(16)`.\n+            max_atomic_width: Some(0),\n             atomic_cas: false,\n+            // singlethread: true,\n \n             // Because these devices have very little resources having an\n             // unwinder is too onerous so we default to \"abort\" because the"}]}