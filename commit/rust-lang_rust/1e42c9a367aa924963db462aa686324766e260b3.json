{"sha": "1e42c9a367aa924963db462aa686324766e260b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlNDJjOWEzNjdhYTkyNDk2M2RiNDYyYWE2ODYzMjQ3NjZlMjYwYjM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-04-08T00:11:33Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-04-08T00:12:48Z"}, "message": "Do not consider ty_bot to be a \"resolved type\".\n\nFixes #2149. Fixes #2150. Fixes #2151.", "tree": {"sha": "0e68295571728de568599eabb53575ed63c29396", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e68295571728de568599eabb53575ed63c29396"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e42c9a367aa924963db462aa686324766e260b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e42c9a367aa924963db462aa686324766e260b3", "html_url": "https://github.com/rust-lang/rust/commit/1e42c9a367aa924963db462aa686324766e260b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e42c9a367aa924963db462aa686324766e260b3/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7aaa120bcc8819c32c78f49aee90b331a2759a40", "url": "https://api.github.com/repos/rust-lang/rust/commits/7aaa120bcc8819c32c78f49aee90b331a2759a40", "html_url": "https://github.com/rust-lang/rust/commit/7aaa120bcc8819c32c78f49aee90b331a2759a40"}], "stats": {"total": 59, "additions": 51, "deletions": 8}, "files": [{"sha": "83b07b9e86c691d602e715b1fd656c6718d8132a", "filename": "src/rustc/middle/typeck.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1e42c9a367aa924963db462aa686324766e260b3/src%2Frustc%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e42c9a367aa924963db462aa686324766e260b3/src%2Frustc%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck.rs?ref=1e42c9a367aa924963db462aa686324766e260b3", "patch": "@@ -232,8 +232,10 @@ fn instantiate_path(fcx: @fn_ctxt, pth: @ast::path,\n // Type tests\n fn structurally_resolved_type(fcx: @fn_ctxt, sp: span, tp: ty::t) -> ty::t {\n     alt infer::resolve_type_structure(fcx.infcx, tp) {\n-      result::ok(typ_s) { ret typ_s; }\n-      result::err(_) {\n+      // note: the bot type doesn't count as resolved; it's what we use when\n+      // there is no information about a variable.\n+      result::ok(t_s) if !ty::type_is_bot(t_s) { ret t_s; }\n+      _ {\n         fcx.ccx.tcx.sess.span_fatal\n             (sp, \"the type of this value must be known in this context\");\n       }"}, {"sha": "8559d78bcdf67c81d65a841fa4b1bd027eba1215", "filename": "src/test/compile-fail/issue-2149.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1e42c9a367aa924963db462aa686324766e260b3/src%2Ftest%2Fcompile-fail%2Fissue-2149.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e42c9a367aa924963db462aa686324766e260b3/src%2Ftest%2Fcompile-fail%2Fissue-2149.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2149.rs?ref=1e42c9a367aa924963db462aa686324766e260b3", "patch": "@@ -0,0 +1,14 @@\n+iface monad<A> {\n+    fn bind<B>(fn(A) -> self<B>);\n+}\n+impl monad<A> of monad<A> for [A] {\n+    fn bind<B>(f: fn(A) -> [B]) {\n+        let mut r = fail;\n+        for self.each {|elt| r += f(elt); }\n+        //!^ WARNING unreachable expression\n+        //!^^ ERROR the type of this value must be known\n+   }\n+}\n+fn main() {\n+    [\"hi\"].bind {|x| [x] };\n+}\n\\ No newline at end of file"}, {"sha": "6fc8bf78af6f14f0e8df15e6fc167b8af56e4028", "filename": "src/test/compile-fail/issue-2150.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1e42c9a367aa924963db462aa686324766e260b3/src%2Ftest%2Fcompile-fail%2Fissue-2150.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e42c9a367aa924963db462aa686324766e260b3/src%2Ftest%2Fcompile-fail%2Fissue-2150.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2150.rs?ref=1e42c9a367aa924963db462aa686324766e260b3", "patch": "@@ -0,0 +1,8 @@\n+fn fail_len(v: [const int]) -> uint {\n+    let mut i = fail;\n+    for v.each {|x| i += 1u; }\n+    //!^ WARNING unreachable statement\n+    //!^^ ERROR the type of this value must be known\n+    ret i;\n+}\n+fn main() {}\n\\ No newline at end of file"}, {"sha": "a69b6df11069dccce087adc1ccf302411b8acc26", "filename": "src/test/compile-fail/issue-2151.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1e42c9a367aa924963db462aa686324766e260b3/src%2Ftest%2Fcompile-fail%2Fissue-2151.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e42c9a367aa924963db462aa686324766e260b3/src%2Ftest%2Fcompile-fail%2Fissue-2151.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2151.rs?ref=1e42c9a367aa924963db462aa686324766e260b3", "patch": "@@ -0,0 +1,6 @@\n+fn main() {\n+    vec::iter(fail) {|i|\n+        log (debug, i * 2);\n+        //!^ ERROR the type of this value must be known\n+   };\n+}\n\\ No newline at end of file"}, {"sha": "1dba6f952b5aa70ce6ff5cee5c9745741c313b1f", "filename": "src/test/compile-fail/unreachable-code-1.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1e42c9a367aa924963db462aa686324766e260b3/src%2Ftest%2Fcompile-fail%2Funreachable-code-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e42c9a367aa924963db462aa686324766e260b3/src%2Ftest%2Fcompile-fail%2Funreachable-code-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funreachable-code-1.rs?ref=1e42c9a367aa924963db462aa686324766e260b3", "patch": "@@ -0,0 +1,14 @@\n+// xfail-pretty\n+\n+fn id(x: bool) -> bool { x }\n+\n+fn call_id() {\n+    let c <- fail;\n+    id(c); //! WARNING unreachable statement\n+}\n+\n+fn call_id_3() { id(ret) && id(ret); }\n+    //!^ ERROR the type of this value must be known\n+\n+fn main() {\n+}"}, {"sha": "b525d0a2da517436a343e6f2f30590ae90d68de5", "filename": "src/test/pretty/disamb-stmt-expr.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1e42c9a367aa924963db462aa686324766e260b3/src%2Ftest%2Fpretty%2Fdisamb-stmt-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e42c9a367aa924963db462aa686324766e260b3/src%2Ftest%2Fpretty%2Fdisamb-stmt-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fdisamb-stmt-expr.rs?ref=1e42c9a367aa924963db462aa686324766e260b3", "patch": "@@ -4,5 +4,7 @@\n // preserved.  They are needed to disambiguate `{ret n+1}; - 0` from\n // `({ret n+1}-0)`.\n \n-fn wsucc(n: int) -> int { ({ ret n + 1 }) - 0; }\n+fn id(f: fn() -> int) -> int { f() }\n+\n+fn wsucc(n: int) -> int { (id {|| 1 }) - 0 }\n fn main() { }"}, {"sha": "977536cd57c8b6e0f5c5f65841a9cec4d6390d72", "filename": "src/test/run-pass/early-ret-binop-add.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e42c9a367aa924963db462aa686324766e260b3/src%2Ftest%2Frun-pass%2Fearly-ret-binop-add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e42c9a367aa924963db462aa686324766e260b3/src%2Ftest%2Frun-pass%2Fearly-ret-binop-add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fearly-ret-binop-add.rs?ref=1e42c9a367aa924963db462aa686324766e260b3", "patch": "@@ -1,2 +1,2 @@\n-fn wsucc(n: int) -> int { ({ ret n + 1 } + 0); }\n+fn wsucc(n: int) -> int { 0 + { ret n + 1 } }\n fn main() { }"}, {"sha": "c97224144e25f885e503a50fd7448f21b3d91737", "filename": "src/test/run-pass/unreachable-code.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1e42c9a367aa924963db462aa686324766e260b3/src%2Ftest%2Frun-pass%2Funreachable-code.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e42c9a367aa924963db462aa686324766e260b3/src%2Ftest%2Frun-pass%2Funreachable-code.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funreachable-code.rs?ref=1e42c9a367aa924963db462aa686324766e260b3", "patch": "@@ -9,8 +9,6 @@ fn call_id() {\n \n fn call_id_2() { id(true) && id(ret); }\n \n-fn call_id_3() { id(ret) && id(ret); }\n-\n fn call_id_4() { while id(ret) { } }\n \n fn bind_id_1() { bind id(fail); }\n@@ -27,7 +25,7 @@ fn log_break() { loop { log(error, break); } }\n \n fn log_cont() { do { log(error, cont); } while false }\n \n-fn ret_ret() -> int { ret (ret 2) + 3; }\n+fn ret_ret() -> int { ret 3 + (ret 2); }\n \n fn ret_guard() {\n     alt check 2 {\n@@ -53,7 +51,6 @@ fn main() {\n   ret_ret();\n   log_ret();\n   call_id_2();\n-  call_id_3();\n   call_id_4();\n   bind_id_2();\n   ret_guard();"}]}