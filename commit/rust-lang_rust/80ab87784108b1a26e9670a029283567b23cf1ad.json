{"sha": "80ab87784108b1a26e9670a029283567b23cf1ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwYWI4Nzc4NDEwOGIxYTI2ZTk2NzBhMDI5MjgzNTY3YjIzY2YxYWQ=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-07-01T02:12:26Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-07-01T02:22:52Z"}, "message": "global_heap: inline malloc_raw and add realloc_raw", "tree": {"sha": "01e7e3d207cc7baaae13c68431804e55325e17f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01e7e3d207cc7baaae13c68431804e55325e17f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80ab87784108b1a26e9670a029283567b23cf1ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80ab87784108b1a26e9670a029283567b23cf1ad", "html_url": "https://github.com/rust-lang/rust/commit/80ab87784108b1a26e9670a029283567b23cf1ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80ab87784108b1a26e9670a029283567b23cf1ad/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "040ac2a93270b4420c59621521d554a078e2d451", "url": "https://api.github.com/repos/rust-lang/rust/commits/040ac2a93270b4420c59621521d554a078e2d451", "html_url": "https://github.com/rust-lang/rust/commit/040ac2a93270b4420c59621521d554a078e2d451"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "f4ea29b5c05e45232c11569e3b622862eee458ac", "filename": "src/libstd/libc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80ab87784108b1a26e9670a029283567b23cf1ad/src%2Flibstd%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80ab87784108b1a26e9670a029283567b23cf1ad/src%2Flibstd%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flibc.rs?ref=80ab87784108b1a26e9670a029283567b23cf1ad", "patch": "@@ -1945,7 +1945,7 @@ pub mod funcs {\n                 #[fast_ffi]\n                 unsafe fn malloc(size: size_t) -> *c_void;\n                 #[fast_ffi]\n-                unsafe fn realloc(p: *c_void, size: size_t) -> *c_void;\n+                unsafe fn realloc(p: *mut c_void, size: size_t) -> *mut c_void;\n                 #[fast_ffi]\n                 unsafe fn free(p: *c_void);\n                 unsafe fn abort() -> !;"}, {"sha": "a7fbed2dd70b773a743c67fbcd511a1ee396ea54", "filename": "src/libstd/rt/global_heap.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/80ab87784108b1a26e9670a029283567b23cf1ad/src%2Flibstd%2Frt%2Fglobal_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80ab87784108b1a26e9670a029283567b23cf1ad/src%2Flibstd%2Frt%2Fglobal_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fglobal_heap.rs?ref=80ab87784108b1a26e9670a029283567b23cf1ad", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use libc::{c_char, c_void, size_t, uintptr_t, free, malloc};\n+use libc::{c_char, c_void, size_t, uintptr_t, free, malloc, realloc};\n use managed::raw::{BoxHeaderRepr, BoxRepr};\n use unstable::intrinsics::TyDesc;\n use sys::size_of;\n@@ -33,6 +33,7 @@ fn align_to(size: uint, align: uint) -> uint {\n }\n \n /// A wrapper around libc::malloc, aborting on out-of-memory\n+#[inline]\n pub unsafe fn malloc_raw(size: uint) -> *c_void {\n     let p = malloc(size as size_t);\n     if p.is_null() {\n@@ -42,6 +43,17 @@ pub unsafe fn malloc_raw(size: uint) -> *c_void {\n     p\n }\n \n+/// A wrapper around libc::realloc, aborting on out-of-memory\n+#[inline]\n+pub unsafe fn realloc_raw(ptr: *mut c_void, size: uint) -> *mut c_void {\n+    let p = realloc(ptr, size as size_t);\n+    if p.is_null() {\n+        // we need a non-allocating way to print an error here\n+        abort();\n+    }\n+    p\n+}\n+\n // FIXME #4942: Make these signatures agree with exchange_alloc's signatures\n #[cfg(stage0, not(test))]\n #[lang=\"exchange_malloc\"]"}]}