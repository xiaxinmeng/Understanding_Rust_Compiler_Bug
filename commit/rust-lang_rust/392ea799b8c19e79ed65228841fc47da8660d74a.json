{"sha": "392ea799b8c19e79ed65228841fc47da8660d74a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MmVhNzk5YjhjMTllNzllZDY1MjI4ODQxZmM0N2RhODY2MGQ3NGE=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-15T04:06:50Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-19T15:51:00Z"}, "message": "librustc_borrowck: use `#[deriving(Copy)]`", "tree": {"sha": "f81442eeaf5f228287fc5c43e2931e31541db2cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f81442eeaf5f228287fc5c43e2931e31541db2cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/392ea799b8c19e79ed65228841fc47da8660d74a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/392ea799b8c19e79ed65228841fc47da8660d74a", "html_url": "https://github.com/rust-lang/rust/commit/392ea799b8c19e79ed65228841fc47da8660d74a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/392ea799b8c19e79ed65228841fc47da8660d74a/comments", "author": null, "committer": null, "parents": [{"sha": "e64a0072d66f0071f47325711a226f34d7b76f05", "url": "https://api.github.com/repos/rust-lang/rust/commits/e64a0072d66f0071f47325711a226f34d7b76f05", "html_url": "https://github.com/rust-lang/rust/commit/e64a0072d66f0071f47325711a226f34d7b76f05"}], "stats": {"total": 48, "additions": 13, "deletions": 35}, "files": [{"sha": "9be87b533f2960640b2be1c3e58b234fcb02a879", "filename": "src/librustc_borrowck/borrowck/mod.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/392ea799b8c19e79ed65228841fc47da8660d74a/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/392ea799b8c19e79ed65228841fc47da8660d74a/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs?ref=392ea799b8c19e79ed65228841fc47da8660d74a", "patch": "@@ -56,11 +56,9 @@ pub mod gather_loans;\n \n pub mod move_data;\n \n-#[deriving(Clone)]\n+#[deriving(Clone, Copy)]\n pub struct LoanDataFlowOperator;\n \n-impl Copy for LoanDataFlowOperator {}\n-\n pub type LoanDataFlow<'a, 'tcx> = DataFlowContext<'a, 'tcx, LoanDataFlowOperator>;\n \n impl<'a, 'tcx, 'v> Visitor<'v> for BorrowckCtxt<'a, 'tcx> {\n@@ -325,14 +323,12 @@ impl<'tcx> LoanPath<'tcx> {\n //     b2b39e8700e37ad32b486b9a8409b50a8a53aa51#commitcomment-7892003\n static DOWNCAST_PRINTED_OPERATOR : &'static str = \" as \";\n \n-#[deriving(PartialEq, Eq, Hash, Show)]\n+#[deriving(Copy, PartialEq, Eq, Hash, Show)]\n pub enum LoanPathElem {\n     LpDeref(mc::PointerKind),    // `*LV` in doc.rs\n     LpInterior(mc::InteriorKind) // `LV.f` in doc.rs\n }\n \n-impl Copy for LoanPathElem {}\n-\n pub fn closure_to_block(closure_id: ast::NodeId,\n                         tcx: &ty::ctxt) -> ast::NodeId {\n     match tcx.map.get(closure_id) {\n@@ -494,21 +490,18 @@ pub struct BckError<'tcx> {\n     code: bckerr_code\n }\n \n+#[deriving(Copy)]\n pub enum AliasableViolationKind {\n     MutabilityViolation,\n     BorrowViolation(euv::LoanCause)\n }\n \n-impl Copy for AliasableViolationKind {}\n-\n-#[deriving(Show)]\n+#[deriving(Copy, Show)]\n pub enum MovedValueUseKind {\n     MovedInUse,\n     MovedInCapture,\n }\n \n-impl Copy for MovedValueUseKind {}\n-\n ///////////////////////////////////////////////////////////////////////////\n // Misc\n "}, {"sha": "d033fd808aa40eadedd842cba911b42a4ebf529e", "filename": "src/librustc_borrowck/borrowck/move_data.rs", "status": "modified", "additions": 8, "deletions": 21, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/392ea799b8c19e79ed65228841fc47da8660d74a/src%2Flibrustc_borrowck%2Fborrowck%2Fmove_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/392ea799b8c19e79ed65228841fc47da8660d74a/src%2Flibrustc_borrowck%2Fborrowck%2Fmove_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmove_data.rs?ref=392ea799b8c19e79ed65228841fc47da8660d74a", "patch": "@@ -78,11 +78,9 @@ pub struct FlowedMoveData<'a, 'tcx: 'a> {\n }\n \n /// Index into `MoveData.paths`, used like a pointer\n-#[deriving(PartialEq, Eq, PartialOrd, Ord, Show)]\n+#[deriving(Copy, PartialEq, Eq, PartialOrd, Ord, Show)]\n pub struct MovePathIndex(uint);\n \n-impl Copy for MovePathIndex {}\n-\n impl MovePathIndex {\n     fn get(&self) -> uint {\n         let MovePathIndex(v) = *self; v\n@@ -100,11 +98,9 @@ static InvalidMovePathIndex: MovePathIndex =\n     MovePathIndex(uint::MAX);\n \n /// Index into `MoveData.moves`, used like a pointer\n-#[deriving(PartialEq)]\n+#[deriving(Copy, PartialEq)]\n pub struct MoveIndex(uint);\n \n-impl Copy for MoveIndex {}\n-\n impl MoveIndex {\n     fn get(&self) -> uint {\n         let MoveIndex(v) = *self; v\n@@ -134,16 +130,15 @@ pub struct MovePath<'tcx> {\n     pub next_sibling: MovePathIndex,\n }\n \n-#[deriving(PartialEq, Show)]\n+#[deriving(Copy, PartialEq, Show)]\n pub enum MoveKind {\n     Declared,   // When declared, variables start out \"moved\".\n     MoveExpr,   // Expression or binding that moves a variable\n     MovePat,    // By-move binding\n     Captured    // Closure creation that moves a value\n }\n \n-impl Copy for MoveKind {}\n-\n+#[deriving(Copy)]\n pub struct Move {\n     /// Path being moved.\n     pub path: MovePathIndex,\n@@ -158,8 +153,7 @@ pub struct Move {\n     pub next_move: MoveIndex\n }\n \n-impl Copy for Move {}\n-\n+#[deriving(Copy)]\n pub struct Assignment {\n     /// Path being assigned.\n     pub path: MovePathIndex,\n@@ -171,8 +165,7 @@ pub struct Assignment {\n     pub span: Span,\n }\n \n-impl Copy for Assignment {}\n-\n+#[deriving(Copy)]\n pub struct VariantMatch {\n     /// downcast to the variant.\n     pub path: MovePathIndex,\n@@ -187,20 +180,14 @@ pub struct VariantMatch {\n     pub mode: euv::MatchMode\n }\n \n-impl Copy for VariantMatch {}\n-\n-#[deriving(Clone)]\n+#[deriving(Clone, Copy)]\n pub struct MoveDataFlowOperator;\n \n-impl Copy for MoveDataFlowOperator {}\n-\n pub type MoveDataFlow<'a, 'tcx> = DataFlowContext<'a, 'tcx, MoveDataFlowOperator>;\n \n-#[deriving(Clone)]\n+#[deriving(Clone, Copy)]\n pub struct AssignDataFlowOperator;\n \n-impl Copy for AssignDataFlowOperator {}\n-\n pub type AssignDataFlow<'a, 'tcx> = DataFlowContext<'a, 'tcx, AssignDataFlowOperator>;\n \n fn loan_path_is_precise(loan_path: &LoanPath) -> bool {"}, {"sha": "3427be1443b3c3b75f29a87e3d9856dd7bd7e192", "filename": "src/librustc_borrowck/graphviz.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/392ea799b8c19e79ed65228841fc47da8660d74a/src%2Flibrustc_borrowck%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/392ea799b8c19e79ed65228841fc47da8660d74a/src%2Flibrustc_borrowck%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fgraphviz.rs?ref=392ea799b8c19e79ed65228841fc47da8660d74a", "patch": "@@ -25,15 +25,13 @@ use rustc::middle::dataflow::{DataFlowOperator, DataFlowContext, EntryOrExit};\n use rustc::middle::dataflow;\n use std::rc::Rc;\n \n-#[deriving(Show)]\n+#[deriving(Show, Copy)]\n pub enum Variant {\n     Loans,\n     Moves,\n     Assigns,\n }\n \n-impl Copy for Variant {}\n-\n impl Variant {\n     pub fn short_name(&self) -> &'static str {\n         match *self {"}]}