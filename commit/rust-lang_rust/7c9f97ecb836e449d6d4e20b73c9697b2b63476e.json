{"sha": "7c9f97ecb836e449d6d4e20b73c9697b2b63476e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjOWY5N2VjYjgzNmU0NDlkNmQ0ZTIwYjczYzk2OTdiMmI2MzQ3NmU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-22T13:03:37Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-22T13:03:37Z"}, "message": "Add paths::RelPath[Buf]", "tree": {"sha": "0af9a258328a702193086136ea15dd337d12a0bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0af9a258328a702193086136ea15dd337d12a0bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c9f97ecb836e449d6d4e20b73c9697b2b63476e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c9f97ecb836e449d6d4e20b73c9697b2b63476e", "html_url": "https://github.com/rust-lang/rust/commit/7c9f97ecb836e449d6d4e20b73c9697b2b63476e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c9f97ecb836e449d6d4e20b73c9697b2b63476e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8842e89e9053b62c081d2995cbf43b8fd5c51b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8842e89e9053b62c081d2995cbf43b8fd5c51b2", "html_url": "https://github.com/rust-lang/rust/commit/d8842e89e9053b62c081d2995cbf43b8fd5c51b2"}], "stats": {"total": 74, "additions": 74, "deletions": 0}, "files": [{"sha": "32267f2e6e3949bd810def80547cacc0ecde2a2e", "filename": "crates/paths/src/lib.rs", "status": "modified", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/7c9f97ecb836e449d6d4e20b73c9697b2b63476e/crates%2Fpaths%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c9f97ecb836e449d6d4e20b73c9697b2b63476e/crates%2Fpaths%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fpaths%2Fsrc%2Flib.rs?ref=7c9f97ecb836e449d6d4e20b73c9697b2b63476e", "patch": "@@ -95,6 +95,80 @@ impl AbsPath {\n     pub fn normalize(&self) -> AbsPathBuf {\n         AbsPathBuf(normalize_path(&self.0))\n     }\n+    pub fn to_path_buf(&self) -> AbsPathBuf {\n+        AbsPathBuf::try_from(self.0.to_path_buf()).unwrap()\n+    }\n+    pub fn strip_prefix(&self, base: &AbsPath) -> Option<&RelPath> {\n+        self.0.strip_prefix(base).ok().map(RelPath::new_unchecked)\n+    }\n+}\n+\n+#[derive(Debug, Clone, Ord, PartialOrd, Eq, PartialEq, Hash)]\n+pub struct RelPathBuf(PathBuf);\n+\n+impl From<RelPathBuf> for PathBuf {\n+    fn from(RelPathBuf(path_buf): RelPathBuf) -> PathBuf {\n+        path_buf\n+    }\n+}\n+\n+impl ops::Deref for RelPathBuf {\n+    type Target = RelPath;\n+    fn deref(&self) -> &RelPath {\n+        self.as_path()\n+    }\n+}\n+\n+impl AsRef<Path> for RelPathBuf {\n+    fn as_ref(&self) -> &Path {\n+        self.0.as_path()\n+    }\n+}\n+\n+impl TryFrom<PathBuf> for RelPathBuf {\n+    type Error = PathBuf;\n+    fn try_from(path_buf: PathBuf) -> Result<RelPathBuf, PathBuf> {\n+        if !path_buf.is_relative() {\n+            return Err(path_buf);\n+        }\n+        Ok(RelPathBuf(path_buf))\n+    }\n+}\n+\n+impl TryFrom<&str> for RelPathBuf {\n+    type Error = PathBuf;\n+    fn try_from(path: &str) -> Result<RelPathBuf, PathBuf> {\n+        RelPathBuf::try_from(PathBuf::from(path))\n+    }\n+}\n+\n+impl RelPathBuf {\n+    pub fn as_path(&self) -> &RelPath {\n+        RelPath::new_unchecked(self.0.as_path())\n+    }\n+}\n+\n+#[derive(Debug, Ord, PartialOrd, Eq, PartialEq, Hash)]\n+#[repr(transparent)]\n+pub struct RelPath(Path);\n+\n+impl ops::Deref for RelPath {\n+    type Target = Path;\n+    fn deref(&self) -> &Path {\n+        &self.0\n+    }\n+}\n+\n+impl AsRef<Path> for RelPath {\n+    fn as_ref(&self) -> &Path {\n+        &self.0\n+    }\n+}\n+\n+impl RelPath {\n+    pub fn new_unchecked(path: &Path) -> &RelPath {\n+        unsafe { &*(path as *const Path as *const RelPath) }\n+    }\n }\n \n // https://github.com/rust-lang/cargo/blob/79c769c3d7b4c2cf6a93781575b7f592ef974255/src/cargo/util/paths.rs#L60-L85"}]}