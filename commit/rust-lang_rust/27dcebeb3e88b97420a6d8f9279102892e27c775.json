{"sha": "27dcebeb3e88b97420a6d8f9279102892e27c775", "node_id": "C_kwDOAAsO6NoAKDI3ZGNlYmViM2U4OGI5NzQyMGE2ZDhmOTI3OTEwMjg5MmUyN2M3NzU", "commit": {"author": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2022-06-15T06:25:51Z"}, "committer": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2022-06-20T18:12:55Z"}, "message": "Improve loading of crates.js and sidebar-items.js\n\nNow that the \"All Crates\" dropdown is only rendered on the search results page,\nthere is no need to load crates.js on most pages. Load it only on crate pages.\nAlso, add the `defer` attribute so it does not block page rendering.\n\nFor sidebar-items.js, move the script tag to `<head>`. Since it already has the\ndefer attribute it won't block loading. The defer attribute does preserve\nordering between scripts, so instead of the callback on load, it can set a\nglobal variable on load, which is slightly simpler. Also, since it is required\nto finish rendering the page, beginning its load earlier is better.\n\nRemove generation and handling of sidebar-vars. Everything there can be computed\nwith information available in JS via other means.\n\nRemove the \"other\" wrapper in the sidebar. It was unnecessary.\n\nRemove excess script fields", "tree": {"sha": "9a81c2259a5f4132e88d9cc717c3ef7d7c81f2ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a81c2259a5f4132e88d9cc717c3ef7d7c81f2ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27dcebeb3e88b97420a6d8f9279102892e27c775", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27dcebeb3e88b97420a6d8f9279102892e27c775", "html_url": "https://github.com/rust-lang/rust/commit/27dcebeb3e88b97420a6d8f9279102892e27c775", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27dcebeb3e88b97420a6d8f9279102892e27c775/comments", "author": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb8c2f41174caceec00c28bc6c5c20ae9f9a175c", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb8c2f41174caceec00c28bc6c5c20ae9f9a175c", "html_url": "https://github.com/rust-lang/rust/commit/bb8c2f41174caceec00c28bc6c5c20ae9f9a175c"}], "stats": {"total": 232, "additions": 91, "deletions": 141}, "files": [{"sha": "7d6d4b71e2eaf6d9fa68236ea4e939fa28df2976", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=27dcebeb3e88b97420a6d8f9279102892e27c775", "patch": "@@ -31,8 +31,6 @@ pub(crate) struct Page<'a> {\n     pub(crate) description: &'a str,\n     pub(crate) keywords: &'a str,\n     pub(crate) resource_suffix: &'a str,\n-    pub(crate) extra_scripts: &'a [&'a str],\n-    pub(crate) static_extra_scripts: &'a [&'a str],\n }\n \n impl<'a> Page<'a> {"}, {"sha": "bfdc44c7e45341ec2672f982b53f3ae9e7104183", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=27dcebeb3e88b97420a6d8f9279102892e27c775", "patch": "@@ -211,8 +211,6 @@ impl<'tcx> Context<'tcx> {\n                 description: &desc,\n                 keywords: &keywords,\n                 resource_suffix: &clone_shared.resource_suffix,\n-                extra_scripts: &[],\n-                static_extra_scripts: &[],\n             };\n             let mut page_buffer = Buffer::html();\n             print_item(self, it, &mut page_buffer, &page);\n@@ -568,8 +566,6 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             description: \"List of all items in this crate\",\n             keywords: BASIC_KEYWORDS,\n             resource_suffix: &shared.resource_suffix,\n-            extra_scripts: &[],\n-            static_extra_scripts: &[],\n         };\n         let sidebar = if shared.cache.crate_version.is_some() {\n             format!(\"<h2 class=\\\"location\\\">Crate {}</h2>\", crate_name)\n@@ -693,7 +689,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             else { unreachable!() };\n             let items = self.build_sidebar_items(module);\n             let js_dst = self.dst.join(&format!(\"sidebar-items{}.js\", self.shared.resource_suffix));\n-            let v = format!(\"initSidebarItems({});\", serde_json::to_string(&items).unwrap());\n+            let v = format!(\"window.SIDEBAR_ITEMS = {};\", serde_json::to_string(&items).unwrap());\n             self.shared.fs.write(js_dst, v)?;\n         }\n         Ok(())"}, {"sha": "3f426ee93e77e98740c2707c09fe5d8758719d78", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=27dcebeb3e88b97420a6d8f9279102892e27c775", "patch": "@@ -56,7 +56,7 @@ use rustc_middle::middle::stability;\n use rustc_middle::ty;\n use rustc_middle::ty::TyCtxt;\n use rustc_span::{\n-    symbol::{kw, sym, Symbol},\n+    symbol::{sym, Symbol},\n     BytePos, FileName, RealFileName,\n };\n use serde::ser::SerializeSeq;\n@@ -1738,8 +1738,6 @@ pub(crate) fn render_impl_summary(\n }\n \n fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n-    let parentlen = cx.current.len() - if it.is_mod() { 1 } else { 0 };\n-\n     if it.is_struct()\n         || it.is_trait()\n         || it.is_primitive()\n@@ -1800,21 +1798,6 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n         write!(buffer, \"<h2 class=\\\"location\\\"><a href=\\\"index.html\\\">In {}</a></h2>\", path);\n     }\n \n-    // Sidebar refers to the enclosing module, not this module.\n-    let relpath = if it.is_mod() && parentlen != 0 { \"./\" } else { \"\" };\n-    write!(\n-        buffer,\n-        \"<div id=\\\"sidebar-vars\\\" data-name=\\\"{name}\\\" data-ty=\\\"{ty}\\\" data-relpath=\\\"{path}\\\">\\\n-        </div>\",\n-        name = it.name.unwrap_or(kw::Empty),\n-        ty = it.type_(),\n-        path = relpath\n-    );\n-    write!(\n-        buffer,\n-        \"<script defer src=\\\"{}sidebar-items{}.js\\\"></script>\",\n-        relpath, cx.shared.resource_suffix\n-    );\n     // Closes sidebar-elems div.\n     buffer.write_str(\"</div>\");\n }"}, {"sha": "27ad91d09e0643c0daedbafaf625c9e5ce00126d", "filename": "src/librustdoc/html/render/write_shared.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs?ref=27dcebeb3e88b97420a6d8f9279102892e27c775", "patch": "@@ -475,8 +475,6 @@ if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};\n                 description: \"List of crates\",\n                 keywords: BASIC_KEYWORDS,\n                 resource_suffix: &shared.resource_suffix,\n-                extra_scripts: &[],\n-                static_extra_scripts: &[],\n             };\n \n             let content = format!("}, {"sha": "1971d08e5bef510820dc4c22689331ae3c81e70c", "filename": "src/librustdoc/html/sources.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Flibrustdoc%2Fhtml%2Fsources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Flibrustdoc%2Fhtml%2Fsources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fsources.rs?ref=27dcebeb3e88b97420a6d8f9279102892e27c775", "patch": "@@ -203,8 +203,6 @@ impl SourceCollector<'_, '_> {\n             description: &desc,\n             keywords: BASIC_KEYWORDS,\n             resource_suffix: &shared.resource_suffix,\n-            extra_scripts: &[&format!(\"source-files{}\", shared.resource_suffix)],\n-            static_extra_scripts: &[&format!(\"source-script{}\", shared.resource_suffix)],\n         };\n         let v = layout::render(\n             &shared.layout,"}, {"sha": "b320db910461258bd5a0784b6cedb10c3b2ea173", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 61, "deletions": 69, "changes": 130, "blob_url": "https://github.com/rust-lang/rust/blob/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=27dcebeb3e88b97420a6d8f9279102892e27c775", "patch": "@@ -66,26 +66,18 @@ function showMain() {\n (function() {\n     window.rootPath = getVar(\"root-path\");\n     window.currentCrate = getVar(\"current-crate\");\n-    window.searchJS =  resourcePath(\"search\", \".js\");\n-    window.searchIndexJS = resourcePath(\"search-index\", \".js\");\n-    window.settingsJS = resourcePath(\"settings\", \".js\");\n-    const sidebarVars = document.getElementById(\"sidebar-vars\");\n-    if (sidebarVars) {\n-        window.sidebarCurrent = {\n-            name: sidebarVars.attributes[\"data-name\"].value,\n-            ty: sidebarVars.attributes[\"data-ty\"].value,\n-            relpath: sidebarVars.attributes[\"data-relpath\"].value,\n-        };\n-        // FIXME: It would be nicer to generate this text content directly in HTML,\n-        // but with the current code it's hard to get the right information in the right place.\n-        const mobileLocationTitle = document.querySelector(\".mobile-topbar h2.location\");\n-        const locationTitle = document.querySelector(\".sidebar h2.location\");\n-        if (mobileLocationTitle && locationTitle) {\n-            mobileLocationTitle.innerHTML = locationTitle.innerHTML;\n-        }\n-    }\n }());\n \n+function setMobileTopbar() {\n+    // FIXME: It would be nicer to generate this text content directly in HTML,\n+    // but with the current code it's hard to get the right information in the right place.\n+    const mobileLocationTitle = document.querySelector(\".mobile-topbar h2.location\");\n+    const locationTitle = document.querySelector(\".sidebar h2.location\");\n+    if (mobileLocationTitle && locationTitle) {\n+        mobileLocationTitle.innerHTML = locationTitle.innerHTML;\n+    }\n+}\n+\n // Gets the human-readable string for the virtual-key code of the\n // given KeyboardEvent, ev.\n //\n@@ -227,7 +219,7 @@ function loadCss(cssFileName) {\n         // Sending request for the CSS and the JS files at the same time so it will\n         // hopefully be loaded when the JS will generate the settings content.\n         loadCss(\"settings\");\n-        loadScript(window.settingsJS);\n+        loadScript(resourcePath(\"settings\", \".js\"));\n     };\n \n     window.searchState = {\n@@ -304,8 +296,8 @@ function loadCss(cssFileName) {\n             function loadSearch() {\n                 if (!searchLoaded) {\n                     searchLoaded = true;\n-                    loadScript(window.searchJS);\n-                    loadScript(window.searchIndexJS);\n+                    loadScript(resourcePath(\"search\", \".js\"));\n+                    loadScript(resourcePath(\"search-index\", \".js\"));\n                 }\n             }\n \n@@ -485,40 +477,11 @@ function loadCss(cssFileName) {\n     document.addEventListener(\"keypress\", handleShortcut);\n     document.addEventListener(\"keydown\", handleShortcut);\n \n-    // delayed sidebar rendering.\n-    window.initSidebarItems = items => {\n-        const sidebar = document.getElementsByClassName(\"sidebar-elems\")[0];\n-        let others;\n-        const current = window.sidebarCurrent;\n-\n-        function addSidebarCrates(crates) {\n-            if (!hasClass(document.body, \"crate\")) {\n-                // We only want to list crates on the crate page.\n-                return;\n-            }\n-            // Draw a convenient sidebar of known crates if we have a listing\n-            const div = document.createElement(\"div\");\n-            div.className = \"block crate\";\n-            div.innerHTML = \"<h3>Crates</h3>\";\n-            const ul = document.createElement(\"ul\");\n-            div.appendChild(ul);\n-\n-            for (const crate of crates) {\n-                let klass = \"crate\";\n-                if (window.rootPath !== \"./\" && crate === window.currentCrate) {\n-                    klass += \" current\";\n-                }\n-                const link = document.createElement(\"a\");\n-                link.href = window.rootPath + crate + \"/index.html\";\n-                link.className = klass;\n-                link.textContent = crate;\n-\n-                const li = document.createElement(\"li\");\n-                li.appendChild(link);\n-                ul.appendChild(li);\n-            }\n-            others.appendChild(div);\n+    function addSidebarItems() {\n+        if (!window.SIDEBAR_ITEMS) {\n+            return;\n         }\n+        const sidebar = document.getElementsByClassName(\"sidebar-elems\")[0];\n \n         /**\n          * Append to the sidebar a \"block\" of links - a heading along with a list (`<ul>`) of items.\n@@ -529,7 +492,7 @@ function loadCss(cssFileName) {\n          *                          \"Modules\", or \"Macros\".\n          */\n         function block(shortty, id, longty) {\n-            const filtered = items[shortty];\n+            const filtered = window.SIDEBAR_ITEMS[shortty];\n             if (!filtered) {\n                 return;\n             }\n@@ -546,17 +509,18 @@ function loadCss(cssFileName) {\n                 const desc = item[1]; // can be null\n \n                 let klass = shortty;\n-                if (name === current.name && shortty === current.ty) {\n-                    klass += \" current\";\n-                }\n                 let path;\n                 if (shortty === \"mod\") {\n                     path = name + \"/index.html\";\n                 } else {\n                     path = shortty + \".\" + name + \".html\";\n                 }\n+                const current_page = document.location.href.split(\"/\").pop();\n+                if (path === current_page) {\n+                    klass += \" current\";\n+                }\n                 const link = document.createElement(\"a\");\n-                link.href = current.relpath + path;\n+                link.href = path;\n                 link.title = desc;\n                 link.className = klass;\n                 link.textContent = name;\n@@ -565,14 +529,10 @@ function loadCss(cssFileName) {\n                 ul.appendChild(li);\n             }\n             div.appendChild(ul);\n-            others.appendChild(div);\n+            sidebar.appendChild(div);\n         }\n \n         if (sidebar) {\n-            others = document.createElement(\"div\");\n-            others.className = \"others\";\n-            sidebar.appendChild(others);\n-\n             const isModule = hasClass(document.body, \"mod\");\n             if (!isModule) {\n                 block(\"primitive\", \"primitives\", \"Primitive Types\");\n@@ -590,12 +550,8 @@ function loadCss(cssFileName) {\n                 block(\"keyword\", \"keywords\", \"Keywords\");\n                 block(\"traitalias\", \"trait-aliases\", \"Trait Aliases\");\n             }\n-\n-            // `crates{version}.js` should always be loaded before this script, so we can use\n-            // it safely.\n-            addSidebarCrates(window.ALL_CRATES);\n         }\n-    };\n+    }\n \n     window.register_implementors = imp => {\n         const implementors = document.getElementById(\"implementors-list\");\n@@ -680,6 +636,39 @@ function loadCss(cssFileName) {\n         window.register_implementors(window.pending_implementors);\n     }\n \n+    function addSidebarCrates() {\n+        if (!window.ALL_CRATES) {\n+            return;\n+        }\n+        const sidebarElems = document.getElementsByClassName(\"sidebar-elems\")[0];\n+        if (!sidebarElems) {\n+            return;\n+        }\n+        // Draw a convenient sidebar of known crates if we have a listing\n+        const div = document.createElement(\"div\");\n+        div.className = \"block crate\";\n+        div.innerHTML = \"<h3>Crates</h3>\";\n+        const ul = document.createElement(\"ul\");\n+        div.appendChild(ul);\n+\n+        for (const crate of window.ALL_CRATES) {\n+            let klass = \"crate\";\n+            if (window.rootPath !== \"./\" && crate === window.currentCrate) {\n+                klass += \" current\";\n+            }\n+            const link = document.createElement(\"a\");\n+            link.href = window.rootPath + crate + \"/index.html\";\n+            link.className = klass;\n+            link.textContent = crate;\n+\n+            const li = document.createElement(\"li\");\n+            li.appendChild(link);\n+            ul.appendChild(li);\n+        }\n+        sidebarElems.appendChild(div);\n+    }\n+\n+\n     function labelForToggleButton(sectionIsCollapsed) {\n         if (sectionIsCollapsed) {\n             // button will expand the section\n@@ -924,6 +913,9 @@ function loadCss(cssFileName) {\n         buildHelperPopup = () => {};\n     };\n \n+    setMobileTopbar();\n+    addSidebarItems();\n+    addSidebarCrates();\n     onHashChange(null);\n     window.addEventListener(\"hashchange\", onHashChange);\n     searchState.setup();"}, {"sha": "cb1609d4983402b62b2320c0c479df8033621ca2", "filename": "src/librustdoc/html/static/js/search.js", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js?ref=27dcebeb3e88b97420a6d8f9279102892e27c775", "patch": "@@ -1719,10 +1719,11 @@ function initSearch(rawSearchIndex) {\n         }\n \n         let crates = \"\";\n-        if (window.ALL_CRATES.length > 1) {\n+        const crates_list = Object.keys(rawSearchIndex);\n+        if (crates_list.length > 1) {\n             crates = \" in <select id=\\\"crate-search\\\"><option value=\\\"All crates\\\">\" +\n                 \"All crates</option>\";\n-            for (const c of window.ALL_CRATES) {\n+            for (const c of crates_list) {\n                 crates += `<option value=\"${c}\" ${c === filterCrates && \"selected\"}>${c}</option>`;\n             }\n             crates += \"</select>\";"}, {"sha": "10f93a1c058dab21ae1f2e53539a36cfb7b93110", "filename": "src/librustdoc/html/static/js/source-script.js", "status": "modified", "additions": 12, "deletions": 29, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js", "raw_url": "https://github.com/rust-lang/rust/raw/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js?ref=27dcebeb3e88b97420a6d8f9279102892e27c775", "patch": "@@ -9,33 +9,19 @@\n \n (function() {\n \n-function getCurrentFilePath() {\n-    const parts = window.location.pathname.split(\"/\");\n-    const rootPathParts = window.rootPath.split(\"/\");\n+const rootPath = document.getElementById(\"rustdoc-vars\").attributes[\"data-root-path\"].value;\n \n-    for (const rootPathPart of rootPathParts) {\n-        if (rootPathPart === \"..\") {\n-            parts.pop();\n-        }\n-    }\n-    let file = window.location.pathname.substring(parts.join(\"/\").length);\n-    if (file.startsWith(\"/\")) {\n-        file = file.substring(1);\n-    }\n-    return file.substring(0, file.length - 5);\n-}\n-\n-function createDirEntry(elem, parent, fullPath, currentFile, hasFoundFile) {\n+function createDirEntry(elem, parent, fullPath, hasFoundFile) {\n     const name = document.createElement(\"div\");\n     name.className = \"name\";\n \n     fullPath += elem[\"name\"] + \"/\";\n \n-    name.onclick = () => {\n-        if (hasClass(name, \"expand\")) {\n-            removeClass(name, \"expand\");\n+    name.onclick = ev => {\n+        if (hasClass(ev.target, \"expand\")) {\n+            removeClass(ev.target, \"expand\");\n         } else {\n-            addClass(name, \"expand\");\n+            addClass(ev.target, \"expand\");\n         }\n     };\n     name.innerText = elem[\"name\"];\n@@ -46,7 +32,7 @@ function createDirEntry(elem, parent, fullPath, currentFile, hasFoundFile) {\n     folders.className = \"folders\";\n     if (elem.dirs) {\n         for (const dir of elem.dirs) {\n-            if (createDirEntry(dir, folders, fullPath, currentFile, hasFoundFile)) {\n+            if (createDirEntry(dir, folders, fullPath, hasFoundFile)) {\n                 addClass(name, \"expand\");\n                 hasFoundFile = true;\n             }\n@@ -60,8 +46,9 @@ function createDirEntry(elem, parent, fullPath, currentFile, hasFoundFile) {\n         for (const file_text of elem.files) {\n             const file = document.createElement(\"a\");\n             file.innerText = file_text;\n-            file.href = window.rootPath + \"src/\" + fullPath + file_text + \".html\";\n-            if (!hasFoundFile && currentFile === fullPath + file_text) {\n+            file.href = rootPath + \"src/\" + fullPath + file_text + \".html\";\n+            const w = window.location.href.split(\"#\")[0];\n+            if (!hasFoundFile && w === file.href) {\n                 file.className = \"selected\";\n                 addClass(name, \"expand\");\n                 hasFoundFile = true;\n@@ -72,7 +59,7 @@ function createDirEntry(elem, parent, fullPath, currentFile, hasFoundFile) {\n     children.appendChild(files);\n     parent.appendChild(name);\n     parent.appendChild(children);\n-    return hasFoundFile && currentFile.startsWith(fullPath);\n+    return hasFoundFile;\n }\n \n function toggleSidebar() {\n@@ -109,9 +96,6 @@ function createSidebarToggle() {\n // This function is called from \"source-files.js\", generated in `html/render/mod.rs`.\n // eslint-disable-next-line no-unused-vars\n function createSourceSidebar() {\n-    if (!window.rootPath.endsWith(\"/\")) {\n-        window.rootPath += \"/\";\n-    }\n     const container = document.querySelector(\"nav.sidebar\");\n \n     const sidebarToggle = createSidebarToggle();\n@@ -125,7 +109,6 @@ function createSourceSidebar() {\n         container.classList.add(\"expanded\");\n     }\n \n-    const currentFile = getCurrentFilePath();\n     let hasFoundFile = false;\n \n     const title = document.createElement(\"div\");\n@@ -135,7 +118,7 @@ function createSourceSidebar() {\n     Object.keys(sourcesIndex).forEach(key => {\n         sourcesIndex[key].name = key;\n         hasFoundFile = createDirEntry(sourcesIndex[key], sidebar, \"\",\n-                                      currentFile, hasFoundFile);\n+            hasFoundFile);\n     });\n \n     container.appendChild(sidebar);"}, {"sha": "c4999e2c74fceafd09eb8d8e0b75f1e26cf197df", "filename": "src/librustdoc/html/templates/page.html", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "raw_url": "https://github.com/rust-lang/rust/raw/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html?ref=27dcebeb3e88b97420a6d8f9279102892e27c775", "patch": "@@ -34,17 +34,18 @@\n       {%- endfor -%}\n     ></script> {#- -#}\n     <script src=\"{{static_root_path|safe}}storage{{page.resource_suffix}}.js\"></script> {#- -#}\n-    <script src=\"{{page.root_path|safe}}crates{{page.resource_suffix}}.js\"></script> {#- -#}\n+    {%- if page.css_class.contains(\"crate\") -%}\n+    <script defer src=\"{{page.root_path|safe}}crates{{page.resource_suffix}}.js\"></script> {#- -#}\n+    {%- else if page.css_class == \"source\" -%}\n+    <script defer src=\"{{static_root_path|safe}}source-script{{page.resource_suffix}}.js\"></script> {#- -#}\n+    <script defer src=\"{{page.root_path|safe}}source-files{{page.resource_suffix}}.js\"></script> {#- -#}\n+    {%- else -%}\n+    <script defer src=\"sidebar-items{{page.resource_suffix}}.js\"></script> {#- -#}\n+    {%- endif -%}\n     <script defer src=\"{{static_root_path|safe}}main{{page.resource_suffix}}.js\"></script> {#- -#}\n-    {%- for script in page.static_extra_scripts -%}\n-    <script defer src=\"{{static_root_path|safe}}{{script}}.js\"></script> {#- -#}\n-    {% endfor %}\n     {%- if layout.scrape_examples_extension -%}\n     <script defer src=\"{{page.root_path|safe}}scrape-examples{{page.resource_suffix}}.js\"></script> {#- -#}\n     {%- endif -%}\n-    {%- for script in page.extra_scripts -%}\n-    <script defer src=\"{{page.root_path|safe}}{{script}}.js\"></script> {#- -#}\n-    {% endfor %}\n     <noscript> {#- -#}\n         <link rel=\"stylesheet\" {# -#}\n            href=\"{{static_root_path|safe}}noscript{{page.resource_suffix}}.css\"> {#- -#}"}, {"sha": "9ea5990622a2b4ad53e13e15c89055cb4f5713b9", "filename": "src/test/rustdoc-gui/duplicate-macro-reexport.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Ftest%2Frustdoc-gui%2Fduplicate-macro-reexport.goml", "raw_url": "https://github.com/rust-lang/rust/raw/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Ftest%2Frustdoc-gui%2Fduplicate-macro-reexport.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fduplicate-macro-reexport.goml?ref=27dcebeb3e88b97420a6d8f9279102892e27c775", "patch": "@@ -1,14 +1,14 @@\n // This test ensures that there is no macro duplicates in the sidebar.\n goto: file://|DOC_PATH|/test_docs/macro.a.html\n // Waiting for the elements in the sidebar to be rendered.\n-wait-for: \".sidebar-elems .others .macro\"\n+wait-for: \".sidebar-elems .macro\"\n // Check there is only one macro named \"a\" listed in the sidebar.\n assert-count: (\n-    \"//*[@class='sidebar-elems']//*[@class='others']/*[@class='block macro']//li/a[text()='a']\",\n+    \"//*[@class='sidebar-elems']//*[@class='block macro']//li/a[text()='a']\",\n     1,\n )\n // Check there is only one macro named \"b\" listed in the sidebar.\n assert-count: (\n-    \"//*[@class='sidebar-elems']//*[@class='others']/*[@class='block macro']//li/a[text()='b']\",\n+    \"//*[@class='sidebar-elems']//*[@class='block macro']//li/a[text()='b']\",\n     1,\n )"}, {"sha": "67e97eb686e11f417a66a0267a5a9036b1b8b265", "filename": "src/test/rustdoc-gui/headings.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Ftest%2Frustdoc-gui%2Fheadings.goml", "raw_url": "https://github.com/rust-lang/rust/raw/27dcebeb3e88b97420a6d8f9279102892e27c775/src%2Ftest%2Frustdoc-gui%2Fheadings.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fheadings.goml?ref=27dcebeb3e88b97420a6d8f9279102892e27c775", "patch": "@@ -106,8 +106,8 @@ assert-css: (\"h6#sub-heading-for-enum-impl-item-doc\", {\"border-bottom-width\": \"0\n assert-css: (\"h6#sub-sub-heading-for-enum-impl-item-doc\", {\"font-size\": \"14px\"})\n assert-css: (\"h6#sub-sub-heading-for-enum-impl-item-doc\", {\"border-bottom-width\": \"0px\"})\n \n-assert-text: (\".sidebar .others h3\", \"Modules\")\n-assert-css: (\".sidebar .others h3\", {\"border-bottom-width\": \"0px\"}, ALL)\n+assert-text: (\".sidebar .mod h3\", \"Modules\")\n+assert-css: (\".sidebar .mod h3\", {\"border-bottom-width\": \"0px\"}, ALL)\n \n goto: file://|DOC_PATH|/test_docs/union.HeavilyDocumentedUnion.html\n "}]}