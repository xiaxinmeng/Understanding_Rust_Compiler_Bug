{"sha": "ba3d6055adf0a93800d79ea2281222df81b44b59", "node_id": "C_kwDOAAsO6NoAKGJhM2Q2MDU1YWRmMGE5MzgwMGQ3OWVhMjI4MTIyMmRmODFiNDRiNTk", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-03-23T21:19:50Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-03-23T21:19:50Z"}, "message": "rustdoc: clean up `storage.js`\n\nThis converts a few functions to more compact versions of\nthemselves, and moves `RUSTDOC_MOBILE_BREAKPOINT` to main.js where\nit's actually used.", "tree": {"sha": "8bcd44f94b9f603598f834ab0e1572c1bbb5b59f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bcd44f94b9f603598f834ab0e1572c1bbb5b59f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba3d6055adf0a93800d79ea2281222df81b44b59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba3d6055adf0a93800d79ea2281222df81b44b59", "html_url": "https://github.com/rust-lang/rust/commit/ba3d6055adf0a93800d79ea2281222df81b44b59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba3d6055adf0a93800d79ea2281222df81b44b59/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98529805949e66a0cfe8e02f7a1ddd496aa330fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/98529805949e66a0cfe8e02f7a1ddd496aa330fb", "html_url": "https://github.com/rust-lang/rust/commit/98529805949e66a0cfe8e02f7a1ddd496aa330fb"}], "stats": {"total": 44, "additions": 14, "deletions": 30}, "files": [{"sha": "7e036626efc2b7b4654a280fb796bde0ca2bdba3", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba3d6055adf0a93800d79ea2281222df81b44b59/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/ba3d6055adf0a93800d79ea2281222df81b44b59/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=ba3d6055adf0a93800d79ea2281222df81b44b59", "patch": "@@ -1538,7 +1538,7 @@ However, it's not needed with smaller screen width because the doc/code block is\n /*\n WARNING: RUSTDOC_MOBILE_BREAKPOINT MEDIA QUERY\n If you update this line, then you also need to update the line with the same warning\n-in storage.js\n+in main.js\n */\n @media (max-width: 700px) {\n \t/* When linking to an item with an `id` (for instance, by clicking a link in the sidebar,"}, {"sha": "1487ebf9b0aa1a4c01f19ebc3f8f1b28e9afe9d4", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ba3d6055adf0a93800d79ea2281222df81b44b59/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/ba3d6055adf0a93800d79ea2281222df81b44b59/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=ba3d6055adf0a93800d79ea2281222df81b44b59", "patch": "@@ -4,6 +4,11 @@\n \n \"use strict\";\n \n+// WARNING: RUSTDOC_MOBILE_BREAKPOINT MEDIA QUERY\n+// If you update this line, then you also need to update the media query with the same\n+// warning in rustdoc.css\n+window.RUSTDOC_MOBILE_BREAKPOINT = 700;\n+\n // Given a basename (e.g. \"storage\") and an extension (e.g. \".js\"), return a URL\n // for a resource under the root-path, with the resource-suffix.\n function resourcePath(basename, extension) {"}, {"sha": "aa90d9f6be9866d842dbafad40e70bc012319ee0", "filename": "src/librustdoc/html/static/js/storage.js", "status": "modified", "additions": 8, "deletions": 29, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/ba3d6055adf0a93800d79ea2281222df81b44b59/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/ba3d6055adf0a93800d79ea2281222df81b44b59/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js?ref=ba3d6055adf0a93800d79ea2281222df81b44b59", "patch": "@@ -8,37 +8,22 @@\n const darkThemes = [\"dark\", \"ayu\"];\n window.currentTheme = document.getElementById(\"themeStyle\");\n \n-// WARNING: RUSTDOC_MOBILE_BREAKPOINT MEDIA QUERY\n-// If you update this line, then you also need to update the media query with the same\n-// warning in rustdoc.css\n-window.RUSTDOC_MOBILE_BREAKPOINT = 700;\n-\n const settingsDataset = (function() {\n     const settingsElement = document.getElementById(\"default-settings\");\n-    if (settingsElement === null) {\n-        return null;\n-    }\n-    const dataset = settingsElement.dataset;\n-    if (dataset === undefined) {\n-        return null;\n-    }\n-    return dataset;\n+    return settingsElement && settingsElement.dataset ? settingsElement.dataset : null;\n })();\n \n function getSettingValue(settingName) {\n     const current = getCurrentValue(settingName);\n-    if (current !== null) {\n-        return current;\n-    }\n-    if (settingsDataset !== null) {\n+    if (current === null && settingsDataset !== null) {\n         // See the comment for `default_settings.into_iter()` etc. in\n         // `Options::from_matches` in `librustdoc/config.rs`.\n         const def = settingsDataset[settingName.replace(/-/g,\"_\")];\n         if (def !== undefined) {\n             return def;\n         }\n     }\n-    return null;\n+    return current;\n }\n \n const localStoredTheme = getSettingValue(\"theme\");\n@@ -49,18 +34,16 @@ function hasClass(elem, className) {\n }\n \n function addClass(elem, className) {\n-    if (!elem || !elem.classList) {\n-        return;\n+    if (elem && elem.classList) {\n+        elem.classList.add(className);\n     }\n-    elem.classList.add(className);\n }\n \n // eslint-disable-next-line no-unused-vars\n function removeClass(elem, className) {\n-    if (!elem || !elem.classList) {\n-        return;\n+    if (elem && elem.classList) {\n+        elem.classList.remove(className);\n     }\n-    elem.classList.remove(className);\n }\n \n /**\n@@ -127,11 +110,7 @@ function getCurrentValue(name) {\n // Rust to the JS. If there is no such element, return null.\n const getVar = (function getVar(name) {\n     const el = document.getElementById(\"rustdoc-vars\");\n-    if (el) {\n-        return el.attributes[\"data-\" + name].value;\n-    } else {\n-        return null;\n-    }\n+    return el ? el.attributes[\"data-\" + name].value : null;\n });\n \n function switchTheme(newThemeName, saveTheme) {"}]}