{"sha": "1fa02dd3e958dad25d667fab2037d7a6d4ab3b37", "node_id": "C_kwDOAAsO6NoAKDFmYTAyZGQzZTk1OGRhZDI1ZDY2N2ZhYjIwMzdkN2E2ZDRhYjNiMzc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-01T14:49:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-01T14:49:32Z"}, "message": "Rollup merge of #99976 - willcrichton:example-analyzer, r=jyn514\n\nMake Rustdoc exit with correct error code when scraping examples from invalid files\n\nThis PR fixes a small issue with the new Rustdoc scrape-examples feature. If a file that is being scraped has a type error, then currently that error is printed out, but the rustdoc process exits as if it succeeded. This is a problem for Cargo, which needs to track whether scraping succeeded (see rust-lang/cargo#10343).\n\nThis PR fixes the issue by checking whether an error is emitted, and aborting if so.", "tree": {"sha": "df97d68e712fafcca0e650224b70ec5a000d1ffe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df97d68e712fafcca0e650224b70ec5a000d1ffe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fa02dd3e958dad25d667fab2037d7a6d4ab3b37", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi5+f8CRBK7hj4Ov3rIwAA90IIAGu8sRTyc+SoMkTaQGm1nU2c\nTh5MMlzxiWD/Bgd6Dd1jwBWqheO/TZbnBgNHKtniddl+z0K09a9ThUbEtVweKevV\nZPqKGSL6cQqXWF3lJodhwtoutvBUvJFYMfnziQK8nnRvsUPU4nvtXXVemXRhYbGr\nQSfmulzWLE77fyX20qgu0bYBj03E70hwRnSt1R55O1JJE9Bj40oy16MuciFWr/Iz\nj+bbRZHquo4tMVFrhKK7ecZnPcTS0zMQrr4ikOardoM7LurtPt4D9CND51RdLLbx\n/wa6Hd//GaKmhQbOIM3zMfvL2PsZkf4q5Utlg9S8VVEfl4nur/uLWB1HzBgpCc0=\n=uqHZ\n-----END PGP SIGNATURE-----\n", "payload": "tree df97d68e712fafcca0e650224b70ec5a000d1ffe\nparent 8db3d7cfb635356f16fd71dd8e873093799690da\nparent a93feaf6e12bf6a14f65c7ab21c6262796315626\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1659365372 +0200\ncommitter GitHub <noreply@github.com> 1659365372 +0200\n\nRollup merge of #99976 - willcrichton:example-analyzer, r=jyn514\n\nMake Rustdoc exit with correct error code when scraping examples from invalid files\n\nThis PR fixes a small issue with the new Rustdoc scrape-examples feature. If a file that is being scraped has a type error, then currently that error is printed out, but the rustdoc process exits as if it succeeded. This is a problem for Cargo, which needs to track whether scraping succeeded (see rust-lang/cargo#10343).\n\nThis PR fixes the issue by checking whether an error is emitted, and aborting if so.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fa02dd3e958dad25d667fab2037d7a6d4ab3b37", "html_url": "https://github.com/rust-lang/rust/commit/1fa02dd3e958dad25d667fab2037d7a6d4ab3b37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fa02dd3e958dad25d667fab2037d7a6d4ab3b37/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8db3d7cfb635356f16fd71dd8e873093799690da", "url": "https://api.github.com/repos/rust-lang/rust/commits/8db3d7cfb635356f16fd71dd8e873093799690da", "html_url": "https://github.com/rust-lang/rust/commit/8db3d7cfb635356f16fd71dd8e873093799690da"}, {"sha": "a93feaf6e12bf6a14f65c7ab21c6262796315626", "url": "https://api.github.com/repos/rust-lang/rust/commits/a93feaf6e12bf6a14f65c7ab21c6262796315626", "html_url": "https://github.com/rust-lang/rust/commit/a93feaf6e12bf6a14f65c7ab21c6262796315626"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "0d96840250332b5cb77c05c56334e2be8bdaa56a", "filename": "src/librustdoc/scrape_examples.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1fa02dd3e958dad25d667fab2037d7a6d4ab3b37/src%2Flibrustdoc%2Fscrape_examples.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fa02dd3e958dad25d667fab2037d7a6d4ab3b37/src%2Flibrustdoc%2Fscrape_examples.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fscrape_examples.rs?ref=1fa02dd3e958dad25d667fab2037d7a6d4ab3b37", "patch": "@@ -304,6 +304,12 @@ pub(crate) fn run(\n         let mut finder = FindCalls { calls: &mut calls, tcx, map: tcx.hir(), cx, target_crates };\n         tcx.hir().visit_all_item_likes_in_crate(&mut finder);\n \n+        // The visitor might have found a type error, which we need to\n+        // promote to a fatal error\n+        if tcx.sess.diagnostic().has_errors_or_lint_errors().is_some() {\n+            return Err(String::from(\"Compilation failed, aborting rustdoc\"));\n+        }\n+\n         // Sort call locations within a given file in document order\n         for fn_calls in calls.values_mut() {\n             for file_calls in fn_calls.values_mut() {"}, {"sha": "8f4fde96d7e4bb6cd937cbf9eb7b698f1bcb6bad", "filename": "src/test/rustdoc-ui/scrape-examples-fail-if-type-error.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1fa02dd3e958dad25d667fab2037d7a6d4ab3b37/src%2Ftest%2Frustdoc-ui%2Fscrape-examples-fail-if-type-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fa02dd3e958dad25d667fab2037d7a6d4ab3b37/src%2Ftest%2Frustdoc-ui%2Fscrape-examples-fail-if-type-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fscrape-examples-fail-if-type-error.rs?ref=1fa02dd3e958dad25d667fab2037d7a6d4ab3b37", "patch": "@@ -0,0 +1,7 @@\n+// check-fail\n+// compile-flags: -Z unstable-options --scrape-examples-output-path {{build-base}}/t.calls --scrape-examples-target-crate foobar\n+\n+pub fn foo() {\n+  INVALID_FUNC();\n+  //~^ ERROR could not resolve path\n+}"}, {"sha": "750aa32071944948222a402011636ebdcac07679", "filename": "src/test/rustdoc-ui/scrape-examples-fail-if-type-error.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1fa02dd3e958dad25d667fab2037d7a6d4ab3b37/src%2Ftest%2Frustdoc-ui%2Fscrape-examples-fail-if-type-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1fa02dd3e958dad25d667fab2037d7a6d4ab3b37/src%2Ftest%2Frustdoc-ui%2Fscrape-examples-fail-if-type-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fscrape-examples-fail-if-type-error.stderr?ref=1fa02dd3e958dad25d667fab2037d7a6d4ab3b37", "patch": "@@ -0,0 +1,14 @@\n+error[E0433]: failed to resolve: could not resolve path `INVALID_FUNC`\n+  --> $DIR/scrape-examples-fail-if-type-error.rs:5:3\n+   |\n+LL |   INVALID_FUNC();\n+   |   ^^^^^^^^^^^^ could not resolve path `INVALID_FUNC`\n+   |\n+   = note: this error was originally ignored because you are running `rustdoc`\n+   = note: try running again with `rustc` or `cargo check` and you may get a more detailed error\n+\n+error: Compilation failed, aborting rustdoc\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0433`."}]}