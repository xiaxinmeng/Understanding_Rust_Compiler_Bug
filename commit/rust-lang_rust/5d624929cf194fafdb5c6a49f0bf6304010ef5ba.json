{"sha": "5d624929cf194fafdb5c6a49f0bf6304010ef5ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkNjI0OTI5Y2YxOTRmYWZkYjVjNmE0OWYwYmY2MzA0MDEwZWY1YmE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-10-24T18:39:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-24T18:39:04Z"}, "message": "fix typo\n\nCo-authored-by: BlackHoleFox <blackholefoxdev@gmail.com>", "tree": {"sha": "5fb722bf9e89a6a1555d40a0385e261298c5c06d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fb722bf9e89a6a1555d40a0385e261298c5c06d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d624929cf194fafdb5c6a49f0bf6304010ef5ba", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJflHTICRBK7hj4Ov3rIwAAdHIIAFaPTccirSBW7Evu3WSWJIPe\ndnOQENA1B4PGaxPQqdCsd2I6Yn8FX2AcJ7R2j/DKyjOJyDA2CWilCLqOW3MmIrip\nAt5BEVjcjqIrfvlHZy0PwkllxS/shWbb28YDH1rY5TWDnn8THyJRXKB3b7btN0tv\nzW8UIO2Ck8X7gCk+vssTKUH3wpLNX4VsRY4RDjuluiuOGiwnapWW4N+fUb4IqcfR\nnIi+q8FH+0HpFkYWXXHIVlDk4HBeLN5MwOvsIENXWtRA3sKsiuOIko+vwfmK1rkB\nDbCmdaUHqY6llVcZEY8hFnheFeqQ6RaAeR7PCPTfBAcCET8BFNMzHQgfbDzx8TY=\n=CCwY\n-----END PGP SIGNATURE-----\n", "payload": "tree 5fb722bf9e89a6a1555d40a0385e261298c5c06d\nparent 1333206eb32a78ef6ffe0defd4acd164e47146b7\nauthor Ralf Jung <post@ralfj.de> 1603564744 +0200\ncommitter GitHub <noreply@github.com> 1603564744 +0200\n\nfix typo\n\nCo-authored-by: BlackHoleFox <blackholefoxdev@gmail.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d624929cf194fafdb5c6a49f0bf6304010ef5ba", "html_url": "https://github.com/rust-lang/rust/commit/5d624929cf194fafdb5c6a49f0bf6304010ef5ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d624929cf194fafdb5c6a49f0bf6304010ef5ba/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1333206eb32a78ef6ffe0defd4acd164e47146b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1333206eb32a78ef6ffe0defd4acd164e47146b7", "html_url": "https://github.com/rust-lang/rust/commit/1333206eb32a78ef6ffe0defd4acd164e47146b7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8f2537404c5cc769bacde90824d2ef7a8816202c", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d624929cf194fafdb5c6a49f0bf6304010ef5ba/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d624929cf194fafdb5c6a49f0bf6304010ef5ba/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=5d624929cf194fafdb5c6a49f0bf6304010ef5ba", "patch": "@@ -382,7 +382,7 @@ fn check_union_fields(tcx: TyCtxt<'_>, span: Span, item_def_id: LocalDefId) -> b\n fn check_static_inhabited<'tcx>(tcx: TyCtxt<'tcx>, def_id: LocalDefId, span: Span) {\n     // Make sure statics are inhabited.\n     // Other parts of the compiler assume that there are no uninhabited places. In principle it\n-    // would be enugh to check this for `extern` statics, as statics with an initializer will\n+    // would be enough to check this for `extern` statics, as statics with an initializer will\n     // have UB during initialization if they are uninhabited, but there also seems to be no good\n     // reason to allow any statics to be uninhabited.\n     let ty = tcx.type_of(def_id);"}]}