{"sha": "3b9b4e5e3d6b45be6d355f0685eb70d99c3ab50a", "node_id": "C_kwDOAAsO6NoAKDNiOWI0ZTVlM2Q2YjQ1YmU2ZDM1NWYwNjg1ZWI3MGQ5OWMzYWI1MGE", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-06-11T20:15:46Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-06-11T20:15:46Z"}, "message": "reorder attributes to make miri-test-libstd work again", "tree": {"sha": "7c13b856c4cd68b312359ad1e71abf28537ad565", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c13b856c4cd68b312359ad1e71abf28537ad565"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b9b4e5e3d6b45be6d355f0685eb70d99c3ab50a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b9b4e5e3d6b45be6d355f0685eb70d99c3ab50a", "html_url": "https://github.com/rust-lang/rust/commit/3b9b4e5e3d6b45be6d355f0685eb70d99c3ab50a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b9b4e5e3d6b45be6d355f0685eb70d99c3ab50a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37998ab508d5d9fa0d465d7b535dc673087dda8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/37998ab508d5d9fa0d465d7b535dc673087dda8f", "html_url": "https://github.com/rust-lang/rust/commit/37998ab508d5d9fa0d465d7b535dc673087dda8f"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "967ad3a0e6901bedb23684e8d2c8e89ee6704ef5", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3b9b4e5e3d6b45be6d355f0685eb70d99c3ab50a/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b9b4e5e3d6b45be6d355f0685eb70d99c3ab50a/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=3b9b4e5e3d6b45be6d355f0685eb70d99c3ab50a", "patch": "@@ -56,6 +56,11 @@\n //! [`Rc`]: rc\n //! [`RefCell`]: core::cell\n \n+// To run alloc tests without x.py without ending up with two copies of alloc, Miri needs to be\n+// able to \"empty\" this crate. See <https://github.com/rust-lang/miri-test-libstd/issues/4>.\n+// rustc itself never sets the feature, so this line has no affect there.\n+#![cfg(any(not(feature = \"miri-test-libstd\"), test, doctest))]\n+//\n #![allow(unused_attributes)]\n #![stable(feature = \"alloc\", since = \"1.36.0\")]\n #![doc(\n@@ -75,11 +80,6 @@\n ))]\n #![no_std]\n #![needs_allocator]\n-// To run alloc tests without x.py without ending up with two copies of alloc, Miri needs to be\n-// able to \"empty\" this crate. See <https://github.com/rust-lang/miri-test-libstd/issues/4>.\n-// rustc itself never sets the feature, so this line has no affect there.\n-#![cfg(any(not(feature = \"miri-test-libstd\"), test, doctest))]\n-//\n // Lints:\n #![deny(unsafe_op_in_unsafe_fn)]\n #![deny(fuzzy_provenance_casts)]"}, {"sha": "da08c018d0e360b0da589ee161dbb7d24a2c0785", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3b9b4e5e3d6b45be6d355f0685eb70d99c3ab50a/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b9b4e5e3d6b45be6d355f0685eb70d99c3ab50a/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=3b9b4e5e3d6b45be6d355f0685eb70d99c3ab50a", "patch": "@@ -188,6 +188,13 @@\n //! [array]: prim@array\n //! [slice]: prim@slice\n \n+// To run std tests without x.py without ending up with two copies of std, Miri needs to be\n+// able to \"empty\" this crate. See <https://github.com/rust-lang/miri-test-libstd/issues/4>.\n+// rustc itself never sets the feature, so this line has no affect there.\n+#![cfg(any(not(feature = \"miri-test-libstd\"), test, doctest))]\n+// miri-test-libstd also prefers to make std use the sysroot versions of the dependencies.\n+#![cfg_attr(feature = \"miri-test-libstd\", feature(rustc_private))]\n+//\n #![cfg_attr(not(feature = \"restricted-std\"), stable(feature = \"rust1\", since = \"1.0.0\"))]\n #![cfg_attr(feature = \"restricted-std\", unstable(feature = \"restricted_std\", issue = \"none\"))]\n #![doc(\n@@ -202,12 +209,6 @@\n     no_global_oom_handling,\n     not(no_global_oom_handling)\n ))]\n-// To run std tests without x.py without ending up with two copies of std, Miri needs to be\n-// able to \"empty\" this crate. See <https://github.com/rust-lang/miri-test-libstd/issues/4>.\n-// rustc itself never sets the feature, so this line has no affect there.\n-#![cfg(any(not(feature = \"miri-test-libstd\"), test, doctest))]\n-// miri-test-libstd also prefers to make std use the sysroot versions of the dependencies.\n-#![cfg_attr(feature = \"miri-test-libstd\", feature(rustc_private))]\n // Don't link to std. We are std.\n #![no_std]\n // Tell the compiler to link to either panic_abort or panic_unwind"}]}