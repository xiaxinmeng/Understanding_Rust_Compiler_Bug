{"sha": "888a14908806d8f0fc60ff4df44aad6e761d3d00", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4OGExNDkwODgwNmQ4ZjBmYzYwZmY0ZGY0NGFhZDZlNzYxZDNkMDA=", "commit": {"author": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2015-01-27T09:02:13Z"}, "committer": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2015-01-27T09:26:03Z"}, "message": "Fix PEP8 for extract_grammar", "tree": {"sha": "24ef0521089880eeb381a86f55de98a0b1f5552e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24ef0521089880eeb381a86f55de98a0b1f5552e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/888a14908806d8f0fc60ff4df44aad6e761d3d00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/888a14908806d8f0fc60ff4df44aad6e761d3d00", "html_url": "https://github.com/rust-lang/rust/commit/888a14908806d8f0fc60ff4df44aad6e761d3d00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/888a14908806d8f0fc60ff4df44aad6e761d3d00/comments", "author": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7faffbef68faf268bd310d07df1c24368379dfb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/7faffbef68faf268bd310d07df1c24368379dfb9", "html_url": "https://github.com/rust-lang/rust/commit/7faffbef68faf268bd310d07df1c24368379dfb9"}], "stats": {"total": 136, "additions": 68, "deletions": 68}, "files": [{"sha": "a12c3298cb35b93b057ed019f97ea208d4665f9d", "filename": "src/etc/extract_grammar.py", "status": "modified", "additions": 68, "deletions": 68, "changes": 136, "blob_url": "https://github.com/rust-lang/rust/blob/888a14908806d8f0fc60ff4df44aad6e761d3d00/src%2Fetc%2Fextract_grammar.py", "raw_url": "https://github.com/rust-lang/rust/raw/888a14908806d8f0fc60ff4df44aad6e761d3d00/src%2Fetc%2Fextract_grammar.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fextract_grammar.py?ref=888a14908806d8f0fc60ff4df44aad6e761d3d00", "patch": "@@ -14,11 +14,11 @@\n \n import fileinput\n \n-collections = { \"gram\": [],\n-                \"keyword\": [],\n-                \"reserved\": [],\n-                \"binop\": [],\n-                \"unop\": [] }\n+collections = {\"gram\": [],\n+               \"keyword\": [],\n+               \"reserved\": [],\n+               \"binop\": [],\n+               \"unop\": []}\n \n \n in_coll = False\n@@ -47,66 +47,66 @@\n # Define operator symbol-names here\n \n tokens = [\"non_star\", \"non_slash\", \"non_eol\",\n-          \"non_single_quote\", \"non_double_quote\", \"ident\" ]\n+          \"non_single_quote\", \"non_double_quote\", \"ident\"]\n \n symnames = {\n-\".\": \"dot\",\n-\"+\": \"plus\",\n-\"-\": \"minus\",\n-\"/\": \"slash\",\n-\"*\": \"star\",\n-\"%\": \"percent\",\n-\n-\"~\": \"tilde\",\n-\"@\": \"at\",\n-\n-\"!\": \"not\",\n-\"&\": \"and\",\n-\"|\": \"or\",\n-\"^\": \"xor\",\n-\n-\"<<\": \"lsl\",\n-\">>\": \"lsr\",\n-\">>>\": \"asr\",\n-\n-\"&&\": \"andand\",\n-\"||\": \"oror\",\n-\n-\"<\" : \"lt\",\n-\"<=\" : \"le\",\n-\"==\" : \"eqeq\",\n-\">=\" : \"ge\",\n-\">\" : \"gt\",\n-\n-\"=\": \"eq\",\n-\n-\"+=\": \"plusequal\",\n-\"-=\": \"minusequal\",\n-\"/=\": \"divequal\",\n-\"*=\": \"starequal\",\n-\"%=\": \"percentequal\",\n-\n-\"&=\": \"andequal\",\n-\"|=\": \"orequal\",\n-\"^=\": \"xorequal\",\n-\n-\">>=\": \"lsrequal\",\n-\">>>=\": \"asrequal\",\n-\"<<=\": \"lslequal\",\n-\n-\"::\": \"coloncolon\",\n-\n-\"->\": \"rightarrow\",\n-\"<-\": \"leftarrow\",\n-\"<->\": \"swaparrow\",\n-\n-\"//\": \"linecomment\",\n-\"/*\": \"openblockcomment\",\n-\"*/\": \"closeblockcomment\",\n-\"macro_rules\": \"macro_rules\",\n-\"=>\" : \"eg\",\n-\"..\" : \"dotdot\",\n-\",\"  : \"comma\"\n+    \".\": \"dot\",\n+    \"+\": \"plus\",\n+    \"-\": \"minus\",\n+    \"/\": \"slash\",\n+    \"*\": \"star\",\n+    \"%\": \"percent\",\n+\n+    \"~\": \"tilde\",\n+    \"@\": \"at\",\n+\n+    \"!\": \"not\",\n+    \"&\": \"and\",\n+    \"|\": \"or\",\n+    \"^\": \"xor\",\n+\n+    \"<<\": \"lsl\",\n+    \">>\": \"lsr\",\n+    \">>>\": \"asr\",\n+\n+    \"&&\": \"andand\",\n+    \"||\": \"oror\",\n+\n+    \"<\": \"lt\",\n+    \"<=\": \"le\",\n+    \"==\": \"eqeq\",\n+    \">=\": \"ge\",\n+    \">\": \"gt\",\n+\n+    \"=\": \"eq\",\n+\n+    \"+=\": \"plusequal\",\n+    \"-=\": \"minusequal\",\n+    \"/=\": \"divequal\",\n+    \"*=\": \"starequal\",\n+    \"%=\": \"percentequal\",\n+\n+    \"&=\": \"andequal\",\n+    \"|=\": \"orequal\",\n+    \"^=\": \"xorequal\",\n+\n+    \">>=\": \"lsrequal\",\n+    \">>>=\": \"asrequal\",\n+    \"<<=\": \"lslequal\",\n+\n+    \"::\": \"coloncolon\",\n+\n+    \"->\": \"rightarrow\",\n+    \"<-\": \"leftarrow\",\n+    \"<->\": \"swaparrow\",\n+\n+    \"//\": \"linecomment\",\n+    \"/*\": \"openblockcomment\",\n+    \"*/\": \"closeblockcomment\",\n+    \"macro_rules\": \"macro_rules\",\n+    \"=>\": \"eg\",\n+    \"..\": \"dotdot\",\n+    \",\": \"comma\"\n }\n \n lines = []\n@@ -126,8 +126,8 @@\n                                         + word)\n                 if word not in tokens:\n                     if (word in collections[\"keyword\"] or\n-                        word in collections[\"reserved\"]):\n-                       tokens.append(word)\n+                            word in collections[\"reserved\"]):\n+                        tokens.append(word)\n                     else:\n                         raise Exception(\"unknown keyword/reserved word: \"\n                                         + word)\n@@ -149,8 +149,8 @@\n print(\"%start parser, token;\")\n print(\"%%token %s ;\" % (\"\\n\\t, \".join(tokens)))\n for coll in [\"keyword\", \"reserved\"]:\n-    print(\"%s: %s ; \" % (coll, \"\\n\\t| \".join(collections[coll])));\n+    print(\"%s: %s ; \" % (coll, \"\\n\\t| \".join(collections[coll])))\n for coll in [\"binop\", \"unop\"]:\n     print(\"%s: %s ; \" % (coll, \"\\n\\t| \".join([symnames[x]\n-                                              for x in collections[coll]])));\n-print(\"\\n\".join(lines));\n+                                              for x in collections[coll]])))\n+print(\"\\n\".join(lines))"}]}