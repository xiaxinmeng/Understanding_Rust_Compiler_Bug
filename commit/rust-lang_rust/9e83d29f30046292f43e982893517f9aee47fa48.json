{"sha": "9e83d29f30046292f43e982893517f9aee47fa48", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllODNkMjlmMzAwNDYyOTJmNDNlOTgyODkzNTE3ZjlhZWU0N2ZhNDg=", "commit": {"author": {"name": "nham", "email": "hamann.nick@gmail.com", "date": "2014-07-22T20:36:09Z"}, "committer": {"name": "nham", "email": "hamann.nick@gmail.com", "date": "2014-07-22T20:36:09Z"}, "message": "Derive Hash for TrieMap and TrieSet", "tree": {"sha": "bca4b102104c8b3d2f3e8f9665a46772b9626fb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bca4b102104c8b3d2f3e8f9665a46772b9626fb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e83d29f30046292f43e982893517f9aee47fa48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e83d29f30046292f43e982893517f9aee47fa48", "html_url": "https://github.com/rust-lang/rust/commit/9e83d29f30046292f43e982893517f9aee47fa48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e83d29f30046292f43e982893517f9aee47fa48/comments", "author": {"login": "nham", "id": 546409, "node_id": "MDQ6VXNlcjU0NjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/546409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nham", "html_url": "https://github.com/nham", "followers_url": "https://api.github.com/users/nham/followers", "following_url": "https://api.github.com/users/nham/following{/other_user}", "gists_url": "https://api.github.com/users/nham/gists{/gist_id}", "starred_url": "https://api.github.com/users/nham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nham/subscriptions", "organizations_url": "https://api.github.com/users/nham/orgs", "repos_url": "https://api.github.com/users/nham/repos", "events_url": "https://api.github.com/users/nham/events{/privacy}", "received_events_url": "https://api.github.com/users/nham/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nham", "id": 546409, "node_id": "MDQ6VXNlcjU0NjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/546409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nham", "html_url": "https://github.com/nham", "followers_url": "https://api.github.com/users/nham/followers", "following_url": "https://api.github.com/users/nham/following{/other_user}", "gists_url": "https://api.github.com/users/nham/gists{/gist_id}", "starred_url": "https://api.github.com/users/nham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nham/subscriptions", "organizations_url": "https://api.github.com/users/nham/orgs", "repos_url": "https://api.github.com/users/nham/repos", "events_url": "https://api.github.com/users/nham/events{/privacy}", "received_events_url": "https://api.github.com/users/nham/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31c908b7be51899b16935dbd453718bdcbee431a", "url": "https://api.github.com/repos/rust-lang/rust/commits/31c908b7be51899b16935dbd453718bdcbee431a", "html_url": "https://github.com/rust-lang/rust/commit/31c908b7be51899b16935dbd453718bdcbee431a"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "21fafdec01988b0c391c9562e0fd803310e60ec3", "filename": "src/libcollections/trie.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/9e83d29f30046292f43e982893517f9aee47fa48/src%2Flibcollections%2Ftrie.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e83d29f30046292f43e982893517f9aee47fa48/src%2Flibcollections%2Ftrie.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ftrie.rs?ref=9e83d29f30046292f43e982893517f9aee47fa48", "patch": "@@ -17,6 +17,7 @@ use core::default::Default;\n use core::mem::zeroed;\n use core::mem;\n use core::uint;\n+use std::hash::{Writer, Hash};\n \n use {Collection, Mutable, Map, MutableMap, Set, MutableSet};\n use slice::{Items, MutItems};\n@@ -292,7 +293,16 @@ impl<T> Extendable<(uint, T)> for TrieMap<T> {\n     }\n }\n \n+impl<S: Writer, T: Hash<S>> Hash<S> for TrieMap<T> {\n+    fn hash(&self, state: &mut S) {\n+        for elt in self.iter() {\n+            elt.hash(state);\n+        }\n+    }\n+}\n+\n #[allow(missing_doc)]\n+#[deriving(Hash)]\n pub struct TrieSet {\n     map: TrieMap<()>\n }\n@@ -1049,6 +1059,7 @@ mod bench_map {\n mod test_set {\n     use std::prelude::*;\n     use std::uint;\n+    use std::hash;\n \n     use {MutableSet, Set};\n     use super::TrieSet;\n@@ -1082,4 +1093,20 @@ mod test_set {\n             assert!(set.contains(x));\n         }\n     }\n+\n+    #[test]\n+    fn test_hash() {\n+      let mut x = TrieSet::new();\n+      let mut y = TrieSet::new();\n+\n+      x.insert(1);\n+      x.insert(2);\n+      x.insert(3);\n+\n+      y.insert(3);\n+      y.insert(2);\n+      y.insert(1);\n+\n+      assert!(hash::hash(&x) == hash::hash(&y));\n+    }\n }"}]}