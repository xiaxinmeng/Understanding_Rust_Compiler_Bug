{"sha": "62ddf617e2d2774744bd376dfb5a17ad4dc9cf19", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyZGRmNjE3ZTJkMjc3NDc0NGJkMzc2ZGZiNWExN2FkNGRjOWNmMTk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-22T11:17:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-22T11:17:23Z"}, "message": "Merge #3230\n\n3230: ra_mbe: convert_literal now works with malformed tokens r=edwin0cheng a=Veetaha\n\nFixes: #3226\n\nCo-authored-by: Veetaha <gerzoh1@gmail.com>\nCo-authored-by: Veetaha <veetaha2@gmail.com>", "tree": {"sha": "d461a85607f0a10cfed39dc42fb9c4e64d677ea9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d461a85607f0a10cfed39dc42fb9c4e64d677ea9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62ddf617e2d2774744bd376dfb5a17ad4dc9cf19", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeUQ3DCRBK7hj4Ov3rIwAAdHIIAJBFjvnHuHexLLRz0UCtfv7L\nv0uODKYsCgeKwiszbXPQGlUL8HGAguMhi7oWj9le+pk9W9u5jCsG14Di1xSO7W22\njILwhas1DUoc8g9UIjCc02ayu1twaN/t/bdPpQIyddNZR/DTFs9pVl/4ruoXpa7E\nSzp6Zkn66GIBawGyteyabcml2Seskn42AoShsJ8Lc3U9AXT1+Am+m8Yv0e9ggC7D\nMd4PQrAk8FgGqfvLQnVb6HPQXLJ3j4nTDrFJTyXd22Y2Wb12Ex8YQ43Zhz19b1cQ\nE3nrqnshQdYJ03cpaXKFlgbCZsjJ3XGomseUAH59vVKBWhyuBNfiZmFO5HBm2Zs=\n=W6dN\n-----END PGP SIGNATURE-----\n", "payload": "tree d461a85607f0a10cfed39dc42fb9c4e64d677ea9\nparent baf832d6d903afbc39e3a01c752a1aa5218c020e\nparent 5f15e3aeb00a8f7379916106fc203f230c5bb7e8\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1582370243 +0000\ncommitter GitHub <noreply@github.com> 1582370243 +0000\n\nMerge #3230\n\n3230: ra_mbe: convert_literal now works with malformed tokens r=edwin0cheng a=Veetaha\n\nFixes: #3226\n\nCo-authored-by: Veetaha <gerzoh1@gmail.com>\nCo-authored-by: Veetaha <veetaha2@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62ddf617e2d2774744bd376dfb5a17ad4dc9cf19", "html_url": "https://github.com/rust-lang/rust/commit/62ddf617e2d2774744bd376dfb5a17ad4dc9cf19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62ddf617e2d2774744bd376dfb5a17ad4dc9cf19/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baf832d6d903afbc39e3a01c752a1aa5218c020e", "url": "https://api.github.com/repos/rust-lang/rust/commits/baf832d6d903afbc39e3a01c752a1aa5218c020e", "html_url": "https://github.com/rust-lang/rust/commit/baf832d6d903afbc39e3a01c752a1aa5218c020e"}, {"sha": "5f15e3aeb00a8f7379916106fc203f230c5bb7e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f15e3aeb00a8f7379916106fc203f230c5bb7e8", "html_url": "https://github.com/rust-lang/rust/commit/5f15e3aeb00a8f7379916106fc203f230c5bb7e8"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "91e324db90842501ff26176ec1e31f9b2d85d536", "filename": "crates/ra_mbe/src/subtree_source.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/62ddf617e2d2774744bd376dfb5a17ad4dc9cf19/crates%2Fra_mbe%2Fsrc%2Fsubtree_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62ddf617e2d2774744bd376dfb5a17ad4dc9cf19/crates%2Fra_mbe%2Fsrc%2Fsubtree_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fsubtree_source.rs?ref=62ddf617e2d2774744bd376dfb5a17ad4dc9cf19", "patch": "@@ -1,7 +1,7 @@\n //! FIXME: write short doc here\n \n use ra_parser::{Token, TokenSource};\n-use ra_syntax::{lex_single_valid_syntax_kind, SmolStr, SyntaxKind, SyntaxKind::*, T};\n+use ra_syntax::{lex_single_syntax_kind, SmolStr, SyntaxKind, SyntaxKind::*, T};\n use std::cell::{Cell, Ref, RefCell};\n use tt::buffer::{Cursor, TokenBuffer};\n \n@@ -129,7 +129,8 @@ fn convert_delim(d: Option<tt::DelimiterKind>, closing: bool) -> TtToken {\n }\n \n fn convert_literal(l: &tt::Literal) -> TtToken {\n-    let kind = lex_single_valid_syntax_kind(&l.text)\n+    let kind = lex_single_syntax_kind(&l.text)\n+        .map(|(kind, _error)| kind)\n         .filter(|kind| kind.is_literal())\n         .unwrap_or_else(|| match l.text.as_ref() {\n             \"true\" => T![true],"}, {"sha": "cb228702fb8120ad10c894b910c0d1b112538e4e", "filename": "crates/ra_mbe/src/tests.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/62ddf617e2d2774744bd376dfb5a17ad4dc9cf19/crates%2Fra_mbe%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62ddf617e2d2774744bd376dfb5a17ad4dc9cf19/crates%2Fra_mbe%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Ftests.rs?ref=62ddf617e2d2774744bd376dfb5a17ad4dc9cf19", "patch": "@@ -1374,14 +1374,22 @@ pub(crate) struct MacroFixture {\n \n impl MacroFixture {\n     pub(crate) fn expand_tt(&self, invocation: &str) -> tt::Subtree {\n-        let source_file = ast::SourceFile::parse(invocation).ok().unwrap();\n+        self.try_expand_tt(invocation).unwrap()\n+    }\n+\n+    fn try_expand_tt(&self, invocation: &str) -> Result<tt::Subtree, ExpandError> {\n+        let source_file = ast::SourceFile::parse(invocation).tree();\n         let macro_invocation =\n             source_file.syntax().descendants().find_map(ast::MacroCall::cast).unwrap();\n \n         let (invocation_tt, _) =\n             ast_to_token_tree(&macro_invocation.token_tree().unwrap()).unwrap();\n \n-        self.rules.expand(&invocation_tt).unwrap()\n+        self.rules.expand(&invocation_tt)\n+    }\n+\n+    fn assert_expand_err(&self, invocation: &str, err: &ExpandError) {\n+        assert_eq!(self.try_expand_tt(invocation).as_ref(), Err(err));\n     }\n \n     fn expand_items(&self, invocation: &str) -> SyntaxNode {\n@@ -1539,3 +1547,13 @@ fn test_repeat_bad_var() {\n     )\n     .assert_expand_items(\"foo!(b0 b1);\", \"b0 b1\");\n }\n+\n+#[test]\n+fn test_expand_bad_literal() {\n+    parse_macro(\n+        r#\"\n+        macro_rules! foo { ($i:literal) => {}; }\n+    \"#,\n+    )\n+    .assert_expand_err(r#\"foo!(&k\");\"#, &ExpandError::NoMatchingRule);\n+}"}]}