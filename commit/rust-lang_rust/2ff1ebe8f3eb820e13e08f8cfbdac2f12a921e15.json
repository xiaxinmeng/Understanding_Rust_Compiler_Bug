{"sha": "2ff1ebe8f3eb820e13e08f8cfbdac2f12a921e15", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmZjFlYmU4ZjNlYjgyMGUxM2UwOGY4Y2ZiZGFjMmYxMmE5MjFlMTU=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-05T21:23:13Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-06T15:46:24Z"}, "message": "Update attributes completion list", "tree": {"sha": "0d87f8d62e7628d49dfd9d0371166e62956707df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d87f8d62e7628d49dfd9d0371166e62956707df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ff1ebe8f3eb820e13e08f8cfbdac2f12a921e15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ff1ebe8f3eb820e13e08f8cfbdac2f12a921e15", "html_url": "https://github.com/rust-lang/rust/commit/2ff1ebe8f3eb820e13e08f8cfbdac2f12a921e15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ff1ebe8f3eb820e13e08f8cfbdac2f12a921e15/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d5aa08712e782f22f04525f291ec74dae183568", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d5aa08712e782f22f04525f291ec74dae183568", "html_url": "https://github.com/rust-lang/rust/commit/8d5aa08712e782f22f04525f291ec74dae183568"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "5404145d5568d94807473bed72d56048d3868c45", "filename": "crates/completion/src/completions/attribute.rs", "status": "modified", "additions": 39, "deletions": 3, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/2ff1ebe8f3eb820e13e08f8cfbdac2f12a921e15/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fattribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ff1ebe8f3eb820e13e08f8cfbdac2f12a921e15/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fattribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fattribute.rs?ref=2ff1ebe8f3eb820e13e08f8cfbdac2f12a921e15", "patch": "@@ -87,30 +87,48 @@ const fn attr(\n     AttrCompletion { label, lookup, snippet, prefer_inner: false }\n }\n \n+/// https://doc.rust-lang.org/reference/attributes.html#built-in-attributes-index\n const ATTRIBUTES: &[AttrCompletion] = &[\n     attr(\"allow(\u2026)\", Some(\"allow\"), Some(\"allow(${0:lint})\")),\n+    attr(\"automatically_derived\", None, None),\n     attr(\"cfg_attr(\u2026)\", Some(\"cfg_attr\"), Some(\"cfg_attr(${1:predicate}, ${0:attr})\")),\n     attr(\"cfg(\u2026)\", Some(\"cfg\"), Some(\"cfg(${0:predicate})\")),\n+    attr(\"cold\", None, None),\n+    attr(r#\"crate_name = \"\"\"#, Some(\"crate_name\"), Some(r#\"crate_name = \"${0:crate_name}\"\"#))\n+        .prefer_inner(),\n     attr(\"deny(\u2026)\", Some(\"deny\"), Some(\"deny(${0:lint})\")),\n     attr(r#\"deprecated = \"\u2026\"\"#, Some(\"deprecated\"), Some(r#\"deprecated = \"${0:reason}\"\"#)),\n     attr(\"derive(\u2026)\", Some(\"derive\"), Some(r#\"derive(${0:Debug})\"#)),\n+    attr(\n+        r#\"export_name = \"\u2026\"\"#,\n+        Some(\"export_name\"),\n+        Some(r#\"export_name = \"${0:exported_symbol_name}\"\"#),\n+    ),\n     attr(r#\"doc = \"\u2026\"\"#, Some(\"doc\"), Some(r#\"doc = \"${0:docs}\"\"#)),\n     attr(\"feature(\u2026)\", Some(\"feature\"), Some(\"feature(${0:flag})\")).prefer_inner(),\n     attr(\"forbid(\u2026)\", Some(\"forbid\"), Some(\"forbid(${0:lint})\")),\n     // FIXME: resolve through macro resolution?\n     attr(\"global_allocator\", None, None).prefer_inner(),\n     attr(r#\"ignore = \"\u2026\"\"#, Some(\"ignore\"), Some(r#\"ignore = \"${0:reason}\"\"#)),\n     attr(\"inline(\u2026)\", Some(\"inline\"), Some(\"inline(${0:lint})\")),\n-    attr(r#\"link_name = \"\u2026\"\"#, Some(\"link_name\"), Some(r#\"link_name = \"${0:symbol_name}\"\"#)),\n     attr(\"link\", None, None),\n+    attr(r#\"link_name = \"\u2026\"\"#, Some(\"link_name\"), Some(r#\"link_name = \"${0:symbol_name}\"\"#)),\n+    attr(\n+        r#\"link_section = \"\u2026\"\"#,\n+        Some(\"link_section\"),\n+        Some(r#\"link_section = \"${0:section_name}\"\"#),\n+    ),\n     attr(\"macro_export\", None, None),\n     attr(\"macro_use\", None, None),\n     attr(r#\"must_use = \"\u2026\"\"#, Some(\"must_use\"), Some(r#\"must_use = \"${0:reason}\"\"#)),\n+    attr(\"no_link\", None, None).prefer_inner(),\n+    attr(\"no_implicit_prelude\", None, None).prefer_inner(),\n+    attr(\"no_main\", None, None).prefer_inner(),\n     attr(\"no_mangle\", None, None),\n     attr(\"no_std\", None, None).prefer_inner(),\n     attr(\"non_exhaustive\", None, None),\n     attr(\"panic_handler\", None, None).prefer_inner(),\n-    attr(\"path = \\\"\u2026\\\"\", Some(\"path\"), Some(\"path =\\\"${0:path}\\\"\")),\n+    attr(r#\"path = \"\u2026\"\"#, Some(\"path\"), Some(r#\"path =\"${0:path}\"\"#)),\n     attr(\"proc_macro\", None, None),\n     attr(\"proc_macro_attribute\", None, None),\n     attr(\"proc_macro_derive(\u2026)\", Some(\"proc_macro_derive\"), Some(\"proc_macro_derive(${0:Trait})\")),\n@@ -125,9 +143,12 @@ const ATTRIBUTES: &[AttrCompletion] = &[\n     attr(\n         r#\"target_feature = \"\u2026\"\"#,\n         Some(\"target_feature\"),\n-        Some(\"target_feature = \\\"${0:feature}\\\"\"),\n+        Some(r#\"target_feature = \"${0:feature}\"\"#),\n     ),\n     attr(\"test\", None, None),\n+    attr(\"track_caller\", None, None),\n+    attr(\"type_length_limit = \u2026\", Some(\"type_length_limit\"), Some(\"type_length_limit = ${0:128}\"))\n+        .prefer_inner(),\n     attr(\"used\", None, None),\n     attr(\"warn(\u2026)\", Some(\"warn\"), Some(\"warn(${0:lint})\")),\n     attr(\n@@ -449,17 +470,21 @@ struct Test {}\n             r#\"#[<|>]\"#,\n             expect![[r#\"\n                 at allow(\u2026)\n+                at automatically_derived\n                 at cfg(\u2026)\n                 at cfg_attr(\u2026)\n+                at cold\n                 at deny(\u2026)\n                 at deprecated = \"\u2026\"\n                 at derive(\u2026)\n                 at doc = \"\u2026\"\n+                at export_name = \"\u2026\"\n                 at forbid(\u2026)\n                 at ignore = \"\u2026\"\n                 at inline(\u2026)\n                 at link\n                 at link_name = \"\u2026\"\n+                at link_section = \"\u2026\"\n                 at macro_export\n                 at macro_use\n                 at must_use = \"\u2026\"\n@@ -473,6 +498,7 @@ struct Test {}\n                 at should_panic(\u2026)\n                 at target_feature = \"\u2026\"\n                 at test\n+                at track_caller\n                 at used\n                 at warn(\u2026)\n             \"#]],\n@@ -490,22 +516,30 @@ struct Test {}\n             r\"#![<|>]\",\n             expect![[r#\"\n                 at allow(\u2026)\n+                at automatically_derived\n                 at cfg(\u2026)\n                 at cfg_attr(\u2026)\n+                at cold\n+                at crate_name = \"\"\n                 at deny(\u2026)\n                 at deprecated = \"\u2026\"\n                 at derive(\u2026)\n                 at doc = \"\u2026\"\n+                at export_name = \"\u2026\"\n                 at feature(\u2026)\n                 at forbid(\u2026)\n                 at global_allocator\n                 at ignore = \"\u2026\"\n                 at inline(\u2026)\n                 at link\n                 at link_name = \"\u2026\"\n+                at link_section = \"\u2026\"\n                 at macro_export\n                 at macro_use\n                 at must_use = \"\u2026\"\n+                at no_implicit_prelude\n+                at no_link\n+                at no_main\n                 at no_mangle\n                 at no_std\n                 at non_exhaustive\n@@ -519,6 +553,8 @@ struct Test {}\n                 at should_panic(\u2026)\n                 at target_feature = \"\u2026\"\n                 at test\n+                at track_caller\n+                at type_length_limit = \u2026\n                 at used\n                 at warn(\u2026)\n                 at windows_subsystem = \"\u2026\""}]}