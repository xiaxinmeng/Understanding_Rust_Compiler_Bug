{"sha": "1fb91dc1c2a34e5cbe384493616254253c821e41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmYjkxZGMxYzJhMzRlNWNiZTM4NDQ5MzYxNjI1NDI1M2M4MjFlNDE=", "commit": {"author": {"name": "Valerii Hiora", "email": "valerii.hiora@gmail.com", "date": "2015-01-08T08:19:52Z"}, "committer": {"name": "Valerii Hiora", "email": "valerii.hiora@gmail.com", "date": "2015-01-09T16:23:42Z"}, "message": "iOS: updated targets\n\n- target_word_size -> target_pointer_width\n- added armv7 and armv7s targets\n- enabled building binaries so tests could be run on a jailbroken device", "tree": {"sha": "9e101306c5e519e2ec614b44c003718ffca83ad0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e101306c5e519e2ec614b44c003718ffca83ad0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fb91dc1c2a34e5cbe384493616254253c821e41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fb91dc1c2a34e5cbe384493616254253c821e41", "html_url": "https://github.com/rust-lang/rust/commit/1fb91dc1c2a34e5cbe384493616254253c821e41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fb91dc1c2a34e5cbe384493616254253c821e41/comments", "author": {"login": "vhbit", "id": 140199, "node_id": "MDQ6VXNlcjE0MDE5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/140199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vhbit", "html_url": "https://github.com/vhbit", "followers_url": "https://api.github.com/users/vhbit/followers", "following_url": "https://api.github.com/users/vhbit/following{/other_user}", "gists_url": "https://api.github.com/users/vhbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/vhbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vhbit/subscriptions", "organizations_url": "https://api.github.com/users/vhbit/orgs", "repos_url": "https://api.github.com/users/vhbit/repos", "events_url": "https://api.github.com/users/vhbit/events{/privacy}", "received_events_url": "https://api.github.com/users/vhbit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vhbit", "id": 140199, "node_id": "MDQ6VXNlcjE0MDE5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/140199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vhbit", "html_url": "https://github.com/vhbit", "followers_url": "https://api.github.com/users/vhbit/followers", "following_url": "https://api.github.com/users/vhbit/following{/other_user}", "gists_url": "https://api.github.com/users/vhbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/vhbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vhbit/subscriptions", "organizations_url": "https://api.github.com/users/vhbit/orgs", "repos_url": "https://api.github.com/users/vhbit/repos", "events_url": "https://api.github.com/users/vhbit/events{/privacy}", "received_events_url": "https://api.github.com/users/vhbit/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b3cd3900ceda838f5798c30ab96ceb41f962534", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b3cd3900ceda838f5798c30ab96ceb41f962534", "html_url": "https://github.com/rust-lang/rust/commit/5b3cd3900ceda838f5798c30ab96ceb41f962534"}], "stats": {"total": 194, "additions": 152, "deletions": 42}, "files": [{"sha": "f9dcb4fb81230b7dc82711602c757352f99f0ce2", "filename": "src/librustc_back/target/apple_ios_base.rs", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/1fb91dc1c2a34e5cbe384493616254253c821e41/src%2Flibrustc_back%2Ftarget%2Fapple_ios_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fb91dc1c2a34e5cbe384493616254253c821e41/src%2Flibrustc_back%2Ftarget%2Fapple_ios_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fapple_ios_base.rs?ref=1fb91dc1c2a34e5cbe384493616254253c821e41", "patch": "@@ -0,0 +1,88 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::io::{Command, IoError, OtherIoError};\n+use target::TargetOptions;\n+\n+use self::Arch::*;\n+\n+#[allow(non_camel_case_types)]\n+pub enum Arch {\n+    Armv7,\n+    Armv7s,\n+    Arm64,\n+    I386,\n+    X86_64\n+}\n+\n+impl Arch {\n+    pub fn to_string(&self) -> &'static str {\n+        match self {\n+            &Armv7 => \"armv7\",\n+            &Armv7s => \"armv7s\",\n+            &Arm64 => \"arm64\",\n+            &I386 => \"i386\",\n+            &X86_64 => \"x86_64\"\n+        }\n+    }\n+}\n+\n+pub fn get_sdk_root(sdk_name: &str) -> String {\n+    let res = Command::new(\"xcrun\")\n+                      .arg(\"--show-sdk-path\")\n+                      .arg(\"-sdk\")\n+                      .arg(sdk_name)\n+                      .spawn()\n+                      .and_then(|c| c.wait_with_output())\n+                      .and_then(|output| {\n+                          if output.status.success() {\n+                              Ok(String::from_utf8(output.output).unwrap())\n+                          } else {\n+                              Err(IoError {\n+                                  kind: OtherIoError,\n+                                  desc: \"process exit with error\",\n+                                  detail: String::from_utf8(output.error).ok()})\n+                          }\n+                      });\n+\n+    match res {\n+        Ok(output) => output.trim().to_string(),\n+        Err(e) => panic!(\"failed to get {} SDK path: {}\", sdk_name, e)\n+    }\n+}\n+\n+fn pre_link_args(arch: Arch) -> Vec<String> {\n+    let sdk_name = match arch {\n+        Armv7 | Armv7s | Arm64 => \"iphoneos\",\n+        I386 | X86_64 => \"iphonesimulator\"\n+    };\n+\n+    let arch_name = arch.to_string();\n+\n+    vec![\"-arch\".to_string(), arch_name.to_string(),\n+         \"-Wl,-syslibroot\".to_string(), get_sdk_root(sdk_name)]\n+}\n+\n+pub fn opts(arch: Arch) -> TargetOptions {\n+    TargetOptions {\n+        dynamic_linking: false,\n+        executables: true,\n+        // Although there is an experimental implementation of LLVM which\n+        // supports SS on armv7 it wasn't approved by Apple, see:\n+        // http://lists.cs.uiuc.edu/pipermail/llvm-commits/Week-of-Mon-20140505/216350.html\n+        // It looks like it might be never accepted to upstream LLVM.\n+        //\n+        // SS might be also enabled on Arm64 as it has builtin support in LLVM\n+        // but I haven't tested it through yet\n+        morestack: false,\n+        pre_link_args: pre_link_args(arch),\n+        .. super::apple_base::opts()\n+    }\n+}"}, {"sha": "e0afef6e3904f235faa475bcb24609e1c7bfdf93", "filename": "src/librustc_back/target/arm_apple_ios.rs", "status": "removed", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/5b3cd3900ceda838f5798c30ab96ceb41f962534/src%2Flibrustc_back%2Ftarget%2Farm_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b3cd3900ceda838f5798c30ab96ceb41f962534/src%2Flibrustc_back%2Ftarget%2Farm_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_apple_ios.rs?ref=5b3cd3900ceda838f5798c30ab96ceb41f962534", "patch": "@@ -1,37 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-use target::{Target, TargetOptions};\n-\n-pub fn target() -> Target {\n-    Target {\n-        data_layout: \"e-p:32:32:32\\\n-                      -i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64\\\n-                      -f32:32:32-f64:64:64\\\n-                      -v64:64:64-v128:64:128\\\n-                      -a:0:64-n32\".to_string(),\n-        llvm_target: \"arm-apple-ios\".to_string(),\n-        target_endian: \"little\".to_string(),\n-        target_pointer_width: \"32\".to_string(),\n-        arch: \"arm\".to_string(),\n-        target_os: \"ios\".to_string(),\n-        options: TargetOptions {\n-            features: \"+v7,+thumb2,+vfp3,+neon\".to_string(),\n-            executables: false,\n-            dynamic_linking: false,\n-            // Although there is an experimental implementation of LLVM which\n-            // supports SS on armv7 it wasn't approved by Apple, see:\n-            // http://lists.cs.uiuc.edu/pipermail/llvm-commits/Week-of-Mon-20140505/216350.html\n-            // It looks like it might be never accepted to upstream LLVM.\n-            morestack: false,\n-            .. super::apple_base::opts()\n-        }\n-    }\n-}"}, {"sha": "4137642188691942df4c855a1d0ea29166582bba", "filename": "src/librustc_back/target/armv7_apple_ios.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/1fb91dc1c2a34e5cbe384493616254253c821e41/src%2Flibrustc_back%2Ftarget%2Farmv7_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fb91dc1c2a34e5cbe384493616254253c821e41/src%2Flibrustc_back%2Ftarget%2Farmv7_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farmv7_apple_ios.rs?ref=1fb91dc1c2a34e5cbe384493616254253c821e41", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use target::{Target, TargetOptions};\n+use super::apple_ios_base::{opts, Arch};\n+\n+pub fn target() -> Target {\n+    Target {\n+        data_layout: \"e-p:32:32-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32\".to_string(),\n+        llvm_target: \"armv7-apple-ios\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        arch: \"arm\".to_string(),\n+        target_os: \"ios\".to_string(),\n+        options: TargetOptions {\n+            features: \"+v7,+vfp3,+neon\".to_string(),\n+            .. opts(Arch::Armv7)\n+        }\n+    }\n+}"}, {"sha": "ef16aefdbd9dd9b8e3f9830703178e64f82a6ebf", "filename": "src/librustc_back/target/armv7s_apple_ios.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/1fb91dc1c2a34e5cbe384493616254253c821e41/src%2Flibrustc_back%2Ftarget%2Farmv7s_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fb91dc1c2a34e5cbe384493616254253c821e41/src%2Flibrustc_back%2Ftarget%2Farmv7s_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farmv7s_apple_ios.rs?ref=1fb91dc1c2a34e5cbe384493616254253c821e41", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use target::{Target, TargetOptions};\n+use super::apple_ios_base::{opts, Arch};\n+\n+pub fn target() -> Target {\n+    Target {\n+        data_layout: \"e-p:32:32-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32\".to_string(),\n+        llvm_target: \"armv7s-apple-ios\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        arch: \"arm\".to_string(),\n+        target_os: \"ios\".to_string(),\n+        options: TargetOptions {\n+            features: \"+v7,+vfp4,+neon\".to_string(),\n+            .. opts(Arch::Armv7s)\n+        }\n+    }\n+}"}, {"sha": "afe63d006cf1a04c0600302a42987cc1fa159738", "filename": "src/librustc_back/target/i386_apple_ios.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1fb91dc1c2a34e5cbe384493616254253c821e41/src%2Flibrustc_back%2Ftarget%2Fi386_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fb91dc1c2a34e5cbe384493616254253c821e41/src%2Flibrustc_back%2Ftarget%2Fi386_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi386_apple_ios.rs?ref=1fb91dc1c2a34e5cbe384493616254253c821e41", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n use target::Target;\n+use super::apple_ios_base::{opts, Arch};\n \n pub fn target() -> Target {\n     Target {\n@@ -22,7 +23,6 @@ pub fn target() -> Target {\n         target_pointer_width: \"32\".to_string(),\n         arch: \"x86\".to_string(),\n         target_os: \"ios\".to_string(),\n-\n-        options: super::apple_base::opts()\n+        options: opts(Arch::I386)\n     }\n }"}, {"sha": "b4a9a3c5f41b5399fbd4ab4479427872700dd262", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1fb91dc1c2a34e5cbe384493616254253c821e41/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fb91dc1c2a34e5cbe384493616254253c821e41/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=1fb91dc1c2a34e5cbe384493616254253c821e41", "patch": "@@ -53,16 +53,19 @@ use std::io::fs::PathExtensions;\n mod windows_base;\n mod linux_base;\n mod apple_base;\n+mod apple_ios_base;\n mod freebsd_base;\n mod dragonfly_base;\n \n-mod arm_apple_ios;\n+mod armv7_apple_ios;\n+mod armv7s_apple_ios;\n+mod i386_apple_ios;\n+\n mod arm_linux_androideabi;\n mod arm_unknown_linux_gnueabi;\n mod arm_unknown_linux_gnueabihf;\n mod aarch64_unknown_linux_gnu;\n mod i686_apple_darwin;\n-mod i386_apple_ios;\n mod i686_pc_windows_gnu;\n mod i686_unknown_dragonfly;\n mod i686_unknown_linux_gnu;\n@@ -346,8 +349,10 @@ impl Target {\n \n             x86_64_apple_darwin,\n             i686_apple_darwin,\n+\n             i386_apple_ios,\n-            arm_apple_ios,\n+            armv7_apple_ios,\n+            armv7s_apple_ios,\n \n             x86_64_pc_windows_gnu,\n             i686_pc_windows_gnu"}]}