{"sha": "4a63d9fa2c21f55bc6f608f80abba028e0ddc741", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhNjNkOWZhMmMyMWY1NWJjNmY2MDhmODBhYmJhMDI4ZTBkZGM3NDE=", "commit": {"author": {"name": "Martin Pool", "email": "mbp@sourcefrog.net", "date": "2015-11-30T15:42:14Z"}, "committer": {"name": "Martin Pool", "email": "mbp@sourcefrog.net", "date": "2015-11-30T15:42:14Z"}, "message": "Remove broken explicit coercion example", "tree": {"sha": "35527d88d891075a38fcf6b20deecc6445de0065", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35527d88d891075a38fcf6b20deecc6445de0065"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a63d9fa2c21f55bc6f608f80abba028e0ddc741", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a63d9fa2c21f55bc6f608f80abba028e0ddc741", "html_url": "https://github.com/rust-lang/rust/commit/4a63d9fa2c21f55bc6f608f80abba028e0ddc741", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a63d9fa2c21f55bc6f608f80abba028e0ddc741/comments", "author": {"login": "sourcefrog", "id": 346355, "node_id": "MDQ6VXNlcjM0NjM1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/346355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sourcefrog", "html_url": "https://github.com/sourcefrog", "followers_url": "https://api.github.com/users/sourcefrog/followers", "following_url": "https://api.github.com/users/sourcefrog/following{/other_user}", "gists_url": "https://api.github.com/users/sourcefrog/gists{/gist_id}", "starred_url": "https://api.github.com/users/sourcefrog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sourcefrog/subscriptions", "organizations_url": "https://api.github.com/users/sourcefrog/orgs", "repos_url": "https://api.github.com/users/sourcefrog/repos", "events_url": "https://api.github.com/users/sourcefrog/events{/privacy}", "received_events_url": "https://api.github.com/users/sourcefrog/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sourcefrog", "id": 346355, "node_id": "MDQ6VXNlcjM0NjM1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/346355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sourcefrog", "html_url": "https://github.com/sourcefrog", "followers_url": "https://api.github.com/users/sourcefrog/followers", "following_url": "https://api.github.com/users/sourcefrog/following{/other_user}", "gists_url": "https://api.github.com/users/sourcefrog/gists{/gist_id}", "starred_url": "https://api.github.com/users/sourcefrog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sourcefrog/subscriptions", "organizations_url": "https://api.github.com/users/sourcefrog/orgs", "repos_url": "https://api.github.com/users/sourcefrog/repos", "events_url": "https://api.github.com/users/sourcefrog/events{/privacy}", "received_events_url": "https://api.github.com/users/sourcefrog/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd2626cc3f5c3652b5a9b4d3b7f850ff2e8e8590", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd2626cc3f5c3652b5a9b4d3b7f850ff2e8e8590", "html_url": "https://github.com/rust-lang/rust/commit/fd2626cc3f5c3652b5a9b4d3b7f850ff2e8e8590"}], "stats": {"total": 7, "additions": 0, "deletions": 7}, "files": [{"sha": "2339fe60bf00b13012b6a02c2d4133a3cb56bf09", "filename": "src/doc/book/casting-between-types.md", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4a63d9fa2c21f55bc6f608f80abba028e0ddc741/src%2Fdoc%2Fbook%2Fcasting-between-types.md", "raw_url": "https://github.com/rust-lang/rust/raw/4a63d9fa2c21f55bc6f608f80abba028e0ddc741/src%2Fdoc%2Fbook%2Fcasting-between-types.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fcasting-between-types.md?ref=4a63d9fa2c21f55bc6f608f80abba028e0ddc741", "patch": "@@ -49,13 +49,6 @@ expression, `e as U2` is not necessarily so (in fact it will only be valid if\n \n A cast `e as U` is valid if `e` has type `T` and `T` *coerces* to `U`.\n \n-For example:\n-\n-```rust\n-let a = \"hello\";\n-let b = a as String;\n-```\n-\n ## Numeric casts\n \n A cast `e as U` is also valid in any of the following cases:"}]}