{"sha": "94f13efefda1f891905913d088869bc1589a45c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0ZjEzZWZlZmRhMWY4OTE5MDU5MTNkMDg4ODY5YmMxNTg5YTQ1Yzk=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-08-11T09:37:29Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-08-11T09:37:29Z"}, "message": "Bump for rustc changes", "tree": {"sha": "4a8e6363298c63273aac92cc122f37fdd3cd0d2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a8e6363298c63273aac92cc122f37fdd3cd0d2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94f13efefda1f891905913d088869bc1589a45c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94f13efefda1f891905913d088869bc1589a45c9", "html_url": "https://github.com/rust-lang/rust/commit/94f13efefda1f891905913d088869bc1589a45c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94f13efefda1f891905913d088869bc1589a45c9/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50f3796597fe2fcf8881e78acef055566570477d", "url": "https://api.github.com/repos/rust-lang/rust/commits/50f3796597fe2fcf8881e78acef055566570477d", "html_url": "https://github.com/rust-lang/rust/commit/50f3796597fe2fcf8881e78acef055566570477d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "cffbec93c5cab0e711b7093b9e5e591ab216d874", "filename": "src/thread.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94f13efefda1f891905913d088869bc1589a45c9/src%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94f13efefda1f891905913d088869bc1589a45c9/src%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fthread.rs?ref=94f13efefda1f891905913d088869bc1589a45c9", "patch": "@@ -530,7 +530,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             if tcx.is_foreign_item(def_id) {\n                 throw_unsup_format!(\"foreign thread-local statics are not supported\");\n             }\n-            let allocation = interpret::get_static(*tcx, def_id)?;\n+            let allocation = tcx.eval_static_initializer(def_id)?;\n             // Create a fresh allocation with this content.\n             let new_alloc_id = this.memory.allocate_with(allocation.clone(), MiriMemoryKind::Tls.into()).alloc_id;\n             this.machine.threads.set_thread_local_alloc_id(def_id, new_alloc_id);"}]}