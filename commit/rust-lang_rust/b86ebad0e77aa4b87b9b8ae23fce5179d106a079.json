{"sha": "b86ebad0e77aa4b87b9b8ae23fce5179d106a079", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4NmViYWQwZTc3YWE0Yjg3YjliOGFlMjNmY2U1MTc5ZDEwNmEwNzk=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-09-11T14:01:36Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-09-11T14:01:36Z"}, "message": "Merge pull request #328 from Manishearth/falsepositives\n\nless false positives for approx_const and float_cmp", "tree": {"sha": "aa9135cea29b1637625b835cccd0ce3a66432a3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa9135cea29b1637625b835cccd0ce3a66432a3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b86ebad0e77aa4b87b9b8ae23fce5179d106a079", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b86ebad0e77aa4b87b9b8ae23fce5179d106a079", "html_url": "https://github.com/rust-lang/rust/commit/b86ebad0e77aa4b87b9b8ae23fce5179d106a079", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b86ebad0e77aa4b87b9b8ae23fce5179d106a079/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aefad45ee72441c46765abb0e92eab34b0ae1a6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/aefad45ee72441c46765abb0e92eab34b0ae1a6d", "html_url": "https://github.com/rust-lang/rust/commit/aefad45ee72441c46765abb0e92eab34b0ae1a6d"}, {"sha": "03af82afd162a7516796097710ab5dc4dd48acf3", "url": "https://api.github.com/repos/rust-lang/rust/commits/03af82afd162a7516796097710ab5dc4dd48acf3", "html_url": "https://github.com/rust-lang/rust/commit/03af82afd162a7516796097710ab5dc4dd48acf3"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "29631b6852f92346ae3019a205d23f95021a75d5", "filename": "src/approx_const.rs", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b86ebad0e77aa4b87b9b8ae23fce5179d106a079/src%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b86ebad0e77aa4b87b9b8ae23fce5179d106a079/src%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fapprox_const.rs?ref=b86ebad0e77aa4b87b9b8ae23fce5179d106a079", "patch": "@@ -1,8 +1,6 @@\n use rustc::lint::*;\n use rustc_front::hir::*;\n-use syntax::codemap::Span;\n use std::f64::consts as f64;\n-\n use utils::span_lint;\n \n declare_lint! {\n@@ -31,29 +29,28 @@ impl LintPass for ApproxConstant {\n \n     fn check_expr(&mut self, cx: &Context, e: &Expr) {\n         if let &ExprLit(ref lit) = &e.node {\n-            check_lit(cx, lit, e.span);\n+            check_lit(cx, lit, e);\n         }\n     }\n }\n \n-fn check_lit(cx: &Context, lit: &Lit, span: Span) {\n+fn check_lit(cx: &Context, lit: &Lit, e: &Expr) {\n     match lit.node {\n-        LitFloat(ref str, TyF32) => check_known_consts(cx, span, str, \"f32\"),\n-        LitFloat(ref str, TyF64) => check_known_consts(cx, span, str, \"f64\"),\n+        LitFloat(ref str, TyF32) => check_known_consts(cx, e, str, \"f32\"),\n+        LitFloat(ref str, TyF64) => check_known_consts(cx, e, str, \"f64\"),\n         LitFloatUnsuffixed(ref str) =>\n-            check_known_consts(cx, span, str, \"f{32, 64}\"),\n+            check_known_consts(cx, e, str, \"f{32, 64}\"),\n         _ => ()\n     }\n }\n \n-fn check_known_consts(cx: &Context, span: Span, str: &str, module: &str) {\n+fn check_known_consts(cx: &Context, e: &Expr, str: &str, module: &str) {\n     if let Ok(value) = str.parse::<f64>() {\n         for &(constant, name) in KNOWN_CONSTS {\n-            if within_epsilon(constant, value) {\n-                span_lint(cx, APPROX_CONSTANT, span, &format!(\n-                    \"approximate value of `{}::{}` found. \\\n-                    Consider using it directly\", module, &name));\n-            }\n+            if !within_epsilon(constant, value) { continue; }\n+            span_lint(cx, APPROX_CONSTANT, e.span, &format!(\n+                \"approximate value of `{}::{}` found. \\\n+                Consider using it directly\", module, &name));\n         }\n     }\n }"}, {"sha": "2cd6babb9c5902e32d4203fa021eca135d3759c4", "filename": "src/misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b86ebad0e77aa4b87b9b8ae23fce5179d106a079/src%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b86ebad0e77aa4b87b9b8ae23fce5179d106a079/src%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmisc.rs?ref=b86ebad0e77aa4b87b9b8ae23fce5179d106a079", "patch": "@@ -93,7 +93,7 @@ impl LintPass for FloatCmp {\n                     return;\n                 }\n                 if let Some(name) = get_item_name(cx, expr) {\n-                    if name == \"eq\" || name == \"ne\" ||\n+                    if name == \"eq\" || name == \"ne\" || name == \"is_nan\" ||\n                             name.as_str().starts_with(\"eq_\") ||\n                             name.as_str().ends_with(\"_eq\") {\n                         return;"}]}