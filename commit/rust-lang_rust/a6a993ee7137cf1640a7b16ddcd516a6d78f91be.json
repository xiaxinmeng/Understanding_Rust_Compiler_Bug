{"sha": "a6a993ee7137cf1640a7b16ddcd516a6d78f91be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2YTk5M2VlNzEzN2NmMTY0MGE3YjE2ZGRjZDUxNmE2ZDc4ZjkxYmU=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-09-03T08:45:00Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-09-03T08:45:00Z"}, "message": "repr: add very basic support for functions\n\nCloses #8917", "tree": {"sha": "2f425497f40c9b34fb38a157b84cf374f18fb543", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f425497f40c9b34fb38a157b84cf374f18fb543"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6a993ee7137cf1640a7b16ddcd516a6d78f91be", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6a993ee7137cf1640a7b16ddcd516a6d78f91be", "html_url": "https://github.com/rust-lang/rust/commit/a6a993ee7137cf1640a7b16ddcd516a6d78f91be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6a993ee7137cf1640a7b16ddcd516a6d78f91be/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09ad0cd362204e3da92cfa6bc8116299516e8275", "url": "https://api.github.com/repos/rust-lang/rust/commits/09ad0cd362204e3da92cfa6bc8116299516e8275", "html_url": "https://github.com/rust-lang/rust/commit/09ad0cd362204e3da92cfa6bc8116299516e8275"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "7141a17d13311d696d179188690ea033e966c874", "filename": "src/libstd/repr.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a6a993ee7137cf1640a7b16ddcd516a6d78f91be/src%2Flibstd%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6a993ee7137cf1640a7b16ddcd516a6d78f91be/src%2Flibstd%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frepr.rs?ref=a6a993ee7137cf1640a7b16ddcd516a6d78f91be", "patch": "@@ -566,14 +566,22 @@ impl<'self> TyVisitor for ReprVisitor<'self> {\n         true\n     }\n \n-    fn visit_fn_input(&mut self, _i: uint, _mode: uint, _inner: *TyDesc) -> bool {\n-        // FIXME: #8917: should print out the parameter types here, separated by commas\n+    fn visit_fn_input(&mut self, i: uint, _mode: uint, inner: *TyDesc) -> bool {\n+        if i != 0 {\n+            self.writer.write(\", \".as_bytes());\n+        }\n+        let name = unsafe { (*inner).name };\n+        self.writer.write(name.as_bytes());\n         true\n     }\n \n-    fn visit_fn_output(&mut self, _retstyle: uint, _inner: *TyDesc) -> bool {\n+    fn visit_fn_output(&mut self, _retstyle: uint, inner: *TyDesc) -> bool {\n         self.writer.write(\")\".as_bytes());\n-        // FIXME: #8917: should print out the output type here, as `-> T`\n+        let name = unsafe { (*inner).name };\n+        if name != \"()\" {\n+            self.writer.write(\" -> \".as_bytes());\n+            self.writer.write(name.as_bytes());\n+        }\n         true\n     }\n \n@@ -620,6 +628,8 @@ fn test_repr() {\n     use str;\n     use str::Str;\n     use rt::io::Decorator;\n+    use util::swap;\n+    use char::is_alphabetic;\n \n     fn exact_test<T>(t: &T, e:&str) {\n         let mut m = io::mem::MemWriter::new();\n@@ -674,7 +684,9 @@ fn test_repr() {\n     exact_test(&(10u64, ~\"hello\"),\n                \"(10u64, ~\\\"hello\\\")\");\n \n-    exact_test(&(&println), \"&fn()\");\n+    exact_test(&println, \"fn(&str)\");\n+    exact_test(&swap::<int>, \"fn(&mut int, &mut int)\");\n+    exact_test(&is_alphabetic, \"fn(char) -> bool\");\n     exact_test(&(~5 as ~ToStr), \"~to_str::ToStr:Send\");\n \n     struct Foo;"}]}