{"sha": "228f668282daab05ec20adbbdeb227e923d10864", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyOGY2NjgyODJkYWFiMDVlYzIwYWRiYmRlYjIyN2U5MjNkMTA4NjQ=", "commit": {"author": {"name": "Takayuki Nakata", "email": "f.seasons017@gmail.com", "date": "2020-07-22T13:11:31Z"}, "committer": {"name": "Takayuki Nakata", "email": "f.seasons017@gmail.com", "date": "2020-08-05T14:00:03Z"}, "message": "Use `mutated_variables`", "tree": {"sha": "94e80884f5e91bf6e7a56cec5fca9973a34b0aee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94e80884f5e91bf6e7a56cec5fca9973a34b0aee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/228f668282daab05ec20adbbdeb227e923d10864", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/228f668282daab05ec20adbbdeb227e923d10864", "html_url": "https://github.com/rust-lang/rust/commit/228f668282daab05ec20adbbdeb227e923d10864", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/228f668282daab05ec20adbbdeb227e923d10864/comments", "author": {"login": "giraffate", "id": 17407489, "node_id": "MDQ6VXNlcjE3NDA3NDg5", "avatar_url": "https://avatars.githubusercontent.com/u/17407489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giraffate", "html_url": "https://github.com/giraffate", "followers_url": "https://api.github.com/users/giraffate/followers", "following_url": "https://api.github.com/users/giraffate/following{/other_user}", "gists_url": "https://api.github.com/users/giraffate/gists{/gist_id}", "starred_url": "https://api.github.com/users/giraffate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giraffate/subscriptions", "organizations_url": "https://api.github.com/users/giraffate/orgs", "repos_url": "https://api.github.com/users/giraffate/repos", "events_url": "https://api.github.com/users/giraffate/events{/privacy}", "received_events_url": "https://api.github.com/users/giraffate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "giraffate", "id": 17407489, "node_id": "MDQ6VXNlcjE3NDA3NDg5", "avatar_url": "https://avatars.githubusercontent.com/u/17407489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giraffate", "html_url": "https://github.com/giraffate", "followers_url": "https://api.github.com/users/giraffate/followers", "following_url": "https://api.github.com/users/giraffate/following{/other_user}", "gists_url": "https://api.github.com/users/giraffate/gists{/gist_id}", "starred_url": "https://api.github.com/users/giraffate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giraffate/subscriptions", "organizations_url": "https://api.github.com/users/giraffate/orgs", "repos_url": "https://api.github.com/users/giraffate/repos", "events_url": "https://api.github.com/users/giraffate/events{/privacy}", "received_events_url": "https://api.github.com/users/giraffate/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7ceb4d3d7ed3ea7039caf803073e86ad3643e21", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7ceb4d3d7ed3ea7039caf803073e86ad3643e21", "html_url": "https://github.com/rust-lang/rust/commit/b7ceb4d3d7ed3ea7039caf803073e86ad3643e21"}], "stats": {"total": 38, "additions": 1, "deletions": 37}, "files": [{"sha": "86952c10dfc1675552e68fd4e51710938d6949b2", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/228f668282daab05ec20adbbdeb227e923d10864/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/228f668282daab05ec20adbbdeb227e923d10864/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=228f668282daab05ec20adbbdeb227e923d10864", "patch": "@@ -1052,42 +1052,6 @@ fn detect_manual_memcpy<'tcx>(\n     }\n }\n \n-// Delegate that traverses expression and detects mutable variables being used\n-struct UsesMutableDelegate {\n-    found_mutable: bool,\n-}\n-\n-impl<'tcx> Delegate<'tcx> for UsesMutableDelegate {\n-    fn consume(&mut self, _: &PlaceWithHirId<'tcx>, _: ConsumeMode) {}\n-\n-    fn borrow(&mut self, _: &PlaceWithHirId<'tcx>, bk: ty::BorrowKind) {\n-        // Mutable variable is found\n-        if let ty::BorrowKind::MutBorrow = bk {\n-            self.found_mutable = true;\n-        }\n-    }\n-\n-    fn mutate(&mut self, _: &PlaceWithHirId<'tcx>) {}\n-}\n-\n-// Uses UsesMutableDelegate to find mutable variables in an expression expr\n-fn has_mutable_variables<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) -> bool {\n-    let mut delegate = UsesMutableDelegate { found_mutable: false };\n-    let def_id = expr.hir_id.owner.to_def_id();\n-    cx.tcx.infer_ctxt().enter(|infcx| {\n-        ExprUseVisitor::new(\n-            &mut delegate,\n-            &infcx,\n-            def_id.expect_local(),\n-            cx.param_env,\n-            cx.typeck_results(),\n-        )\n-        .walk_expr(expr);\n-    });\n-\n-    delegate.found_mutable\n-}\n-\n // Scans for the usage of the for loop pattern\n struct ForPatternVisitor<'a, 'tcx> {\n     found_pattern: bool,\n@@ -1253,7 +1217,7 @@ fn detect_same_item_push<'tcx>(\n     if same_item_push_visitor.should_lint {\n         if let Some((vec, pushed_item)) = same_item_push_visitor.vec_push {\n             // Make sure that the push does not involve possibly mutating values\n-            if !has_mutable_variables(cx, pushed_item) {\n+            if mutated_variables(pushed_item, cx).map_or(false, |mutvars| mutvars.is_empty()) {\n                 // Walk through the expression being pushed and make sure that it\n                 // does not contain the for loop pattern\n                 let mut for_pat_visitor = ForPatternVisitor {"}]}