{"sha": "e44393a953a4654aa14d37df588cf490e1120240", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0NDM5M2E5NTNhNDY1NGFhMTRkMzdkZjU4OGNmNDkwZTExMjAyNDA=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-09-29T15:14:12Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-09-29T15:14:12Z"}, "message": "rollup merge of #17582 : kmcallister/gc-box", "tree": {"sha": "8b31a1a18eb94446c96afe510ac0d8bcb3bb3d8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b31a1a18eb94446c96afe510ac0d8bcb3bb3d8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e44393a953a4654aa14d37df588cf490e1120240", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e44393a953a4654aa14d37df588cf490e1120240", "html_url": "https://github.com/rust-lang/rust/commit/e44393a953a4654aa14d37df588cf490e1120240", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e44393a953a4654aa14d37df588cf490e1120240/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55754ed893ae7c07e813bd64b3c272d3d741d1e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/55754ed893ae7c07e813bd64b3c272d3d741d1e0", "html_url": "https://github.com/rust-lang/rust/commit/55754ed893ae7c07e813bd64b3c272d3d741d1e0"}, {"sha": "f8a180b36ed4d048dbbb88037c3f35afab6b64ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8a180b36ed4d048dbbb88037c3f35afab6b64ff", "html_url": "https://github.com/rust-lang/rust/commit/f8a180b36ed4d048dbbb88037c3f35afab6b64ff"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "d5f0d25fb01f92a9e64fd85127ffd66ae2806e99", "filename": "src/liballoc/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e44393a953a4654aa14d37df588cf490e1120240/src%2Fliballoc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e44393a953a4654aa14d37df588cf490e1120240/src%2Fliballoc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Futil.rs?ref=e44393a953a4654aa14d37df588cf490e1120240", "patch": "@@ -16,7 +16,7 @@ use core::raw;\n #[inline]\n #[deprecated]\n pub fn get_box_size(body_size: uint, body_align: uint) -> uint {\n-    let header_size = mem::size_of::<raw::Box<()>>();\n+    let header_size = mem::size_of::<raw::GcBox<()>>();\n     let total_size = align_to(header_size, body_align) + body_size;\n     total_size\n }"}, {"sha": "86b96ff15f1569fa24d1091cb2347ac996406401", "filename": "src/libcore/raw.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e44393a953a4654aa14d37df588cf490e1120240/src%2Flibcore%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e44393a953a4654aa14d37df588cf490e1120240/src%2Flibcore%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fraw.rs?ref=e44393a953a4654aa14d37df588cf490e1120240", "patch": "@@ -20,12 +20,12 @@\n \n use mem;\n \n-/// The representation of a Rust managed box\n-pub struct Box<T> {\n+/// The representation of `std::gc::Gc`.\n+pub struct GcBox<T> {\n     pub ref_count: uint,\n     pub drop_glue: fn(ptr: *mut u8),\n-    pub prev: *mut Box<T>,\n-    pub next: *mut Box<T>,\n+    pub prev: *mut GcBox<T>,\n+    pub next: *mut GcBox<T>,\n     pub data: T,\n }\n "}, {"sha": "64dc87908824b43bb184838598771c231a199f76", "filename": "src/libdebug/repr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e44393a953a4654aa14d37df588cf490e1120240/src%2Flibdebug%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e44393a953a4654aa14d37df588cf490e1120240/src%2Flibdebug%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibdebug%2Frepr.rs?ref=e44393a953a4654aa14d37df588cf490e1120240", "patch": "@@ -277,7 +277,7 @@ impl<'a> TyVisitor for ReprVisitor<'a> {\n     fn visit_box(&mut self, mtbl: uint, inner: *const TyDesc) -> bool {\n         try!(self, self.writer.write(\"box(GC) \".as_bytes()));\n         self.write_mut_qualifier(mtbl);\n-        self.get::<&raw::Box<()>>(|this, b| {\n+        self.get::<&raw::GcBox<()>>(|this, b| {\n             let p = &b.data as *const () as *const u8;\n             this.visit_ptr_inner(p, inner)\n         })"}, {"sha": "0e84e9c0097f55a8bbea436827aa168b07a520a3", "filename": "src/librustrt/local_heap.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e44393a953a4654aa14d37df588cf490e1120240/src%2Flibrustrt%2Flocal_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e44393a953a4654aa14d37df588cf490e1120240/src%2Flibrustrt%2Flocal_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustrt%2Flocal_heap.rs?ref=e44393a953a4654aa14d37df588cf490e1120240", "patch": "@@ -24,15 +24,15 @@ use task::Task;\n \n static RC_IMMORTAL : uint = 0x77777777;\n \n-pub type Box = raw::Box<()>;\n+pub type Box = raw::GcBox<()>;\n \n pub struct MemoryRegion {\n     live_allocations: uint,\n }\n \n pub struct LocalHeap {\n     memory_region: MemoryRegion,\n-    live_allocs: *mut raw::Box<()>,\n+    live_allocs: *mut raw::GcBox<()>,\n }\n \n impl LocalHeap {\n@@ -161,7 +161,7 @@ impl LocalHeap {\n     }\n \n     unsafe fn each_live_alloc(&mut self, read_next_before: bool,\n-                              f: |&mut LocalHeap, alloc: *mut raw::Box<()>|) {\n+                              f: |&mut LocalHeap, alloc: *mut raw::GcBox<()>|) {\n         //! Walks the internal list of allocations\n \n         let mut alloc = self.live_allocs;"}, {"sha": "ecef8e9ed902231f2f70f0fabc9399d23b71b1c0", "filename": "src/libstd/gc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e44393a953a4654aa14d37df588cf490e1120240/src%2Flibstd%2Fgc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e44393a953a4654aa14d37df588cf490e1120240/src%2Flibstd%2Fgc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fgc.rs?ref=e44393a953a4654aa14d37df588cf490e1120240", "patch": "@@ -89,7 +89,7 @@ impl<T: Default + 'static> Default for Gc<T> {\n     }\n }\n \n-impl<T: 'static> raw::Repr<*const raw::Box<T>> for Gc<T> {}\n+impl<T: 'static> raw::Repr<*const raw::GcBox<T>> for Gc<T> {}\n \n impl<S: hash::Writer, T: hash::Hash<S> + 'static> hash::Hash<S> for Gc<T> {\n     fn hash(&self, s: &mut S) {"}]}