{"sha": "779308a5e123e9346ac0ac53771fa20240be2d5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3OTMwOGE1ZTEyM2U5MzQ2YWMwYWM1Mzc3MWZhMjAyNDBiZTJkNWU=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-07-04T18:20:04Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-07-04T18:22:47Z"}, "message": "Improve error span for async type inference error\n\nFixes #62382\n\nPreviously, we would point at the spawn of the 'await' expression,\ninstead of the actual expression with an unknown type.", "tree": {"sha": "e19897208fb28080e1dd9e0dfa031143b4726f9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e19897208fb28080e1dd9e0dfa031143b4726f9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/779308a5e123e9346ac0ac53771fa20240be2d5e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl0eQ/gACgkQtAh+UQ6Y\nsWQjtQ/+PKfDTWOsSYUKqW+2t9tdCLgqmwu5nDDz2N08vPSD3l1X8UgyRaIRGjqB\nkNPQZrlxxFRlSgya/jBOenonQ+IQ7/OSUuCxOm8fj59cmODk7BPBBpFDfsPJM0iZ\n7nKyGuYeJfkeO+y2UQwj5NGPTFAtU+xwO0GS2e+gw/sRmEZBwHOmCDSXpL9ULtuL\nPSKHkGPu/wRrIIHhN66HFS7ZrVOrliDGop0/R2Pu+ClwTgvrx6ZmVSQfHbja1u0b\nE+uKT92OZY0Tnq7jb46z/ryUQKKFpe5UJSlTtZz+W6IZ5guMrvfSaiNKFIbq86nP\ntsiuaLvXfYJ+u7JpbR+e5SAVMCwjTFzvmu5DHdce0pvG38hmYWA5mdO3/LfMMRgO\nPPCQe4Opk4qf3jpVSACzHQlG1qL1rWNVIyVPPtQII/nWeZslNu1jf5u/+BHPmCf2\nFb889N+RY7e2IEAq2bsmx27RziXCA2kZWjmSA/wZvLvMjWpII6WULiFbVlz483NR\nm5UFkulA6/JB3+bsNOfXUrgY2gAGlAt9yMElSOKn2ze3s/+aEJM7AbsNYawadDzB\nHqpmW7dslG+duldMA9Nk9jJcxUKF/Uv59kW2m3nORFaatICI/gbyrP1e6KHT2AtZ\nuGB2uZaOqpD9qWGnWvw79Csmu1rrUsIZyl621iUtDa9pjYWYeK4=\n=aBJL\n-----END PGP SIGNATURE-----", "payload": "tree e19897208fb28080e1dd9e0dfa031143b4726f9d\nparent b43eb4235ac43c822d903ad26ed806f34cc1a14a\nauthor Aaron Hill <aa1ronham@gmail.com> 1562264404 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1562264567 -0400\n\nImprove error span for async type inference error\n\nFixes #62382\n\nPreviously, we would point at the spawn of the 'await' expression,\ninstead of the actual expression with an unknown type.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/779308a5e123e9346ac0ac53771fa20240be2d5e", "html_url": "https://github.com/rust-lang/rust/commit/779308a5e123e9346ac0ac53771fa20240be2d5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/779308a5e123e9346ac0ac53771fa20240be2d5e/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b43eb4235ac43c822d903ad26ed806f34cc1a14a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b43eb4235ac43c822d903ad26ed806f34cc1a14a", "html_url": "https://github.com/rust-lang/rust/commit/b43eb4235ac43c822d903ad26ed806f34cc1a14a"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "7e4768d81b868663170d88f1703efa6f48ad7a2d", "filename": "src/librustc_typeck/check/generator_interior.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/779308a5e123e9346ac0ac53771fa20240be2d5e/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/779308a5e123e9346ac0ac53771fa20240be2d5e/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs?ref=779308a5e123e9346ac0ac53771fa20240be2d5e", "patch": "@@ -75,7 +75,7 @@ impl<'a, 'tcx> InteriorVisitor<'a, 'tcx> {\n                 // If unresolved type isn't a ty_var then unresolved_type_span is None\n                 self.fcx.need_type_info_err_in_generator(\n                     self.kind,\n-                    unresolved_type_span.unwrap_or(yield_data.span),\n+                    unresolved_type_span.unwrap_or(source_span),\n                     unresolved_type,\n                 )\n                     .span_note(yield_data.span, &*note)"}, {"sha": "d362348a3fddb9d0e4148fe1e4561051bf306a54", "filename": "src/test/ui/async-await/async-error-span.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/779308a5e123e9346ac0ac53771fa20240be2d5e/src%2Ftest%2Fui%2Fasync-await%2Fasync-error-span.rs", "raw_url": "https://github.com/rust-lang/rust/raw/779308a5e123e9346ac0ac53771fa20240be2d5e/src%2Ftest%2Fui%2Fasync-await%2Fasync-error-span.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-error-span.rs?ref=779308a5e123e9346ac0ac53771fa20240be2d5e", "patch": "@@ -0,0 +1,17 @@\n+// edition:2018\n+#![feature(async_await)]\n+\n+// Regression test for issue #62382\n+\n+use std::future::Future;\n+\n+fn get_future() -> impl Future<Output = ()> {\n+    panic!()\n+}\n+\n+async fn foo() {\n+    let a; //~ ERROR type inside `async` object must be known in this context\n+    get_future().await;\n+}\n+\n+fn main() {}"}, {"sha": "bd8966b9c7d47ff517091e679cbcfea7a561ccf5", "filename": "src/test/ui/async-await/async-error-span.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/779308a5e123e9346ac0ac53771fa20240be2d5e/src%2Ftest%2Fui%2Fasync-await%2Fasync-error-span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/779308a5e123e9346ac0ac53771fa20240be2d5e/src%2Ftest%2Fui%2Fasync-await%2Fasync-error-span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-error-span.stderr?ref=779308a5e123e9346ac0ac53771fa20240be2d5e", "patch": "@@ -0,0 +1,15 @@\n+error[E0698]: type inside `async` object must be known in this context\n+  --> $DIR/async-error-span.rs:13:9\n+   |\n+LL |     let a;\n+   |         ^ cannot infer type\n+   |\n+note: the type is part of the `async` object because of this `await`\n+  --> $DIR/async-error-span.rs:14:5\n+   |\n+LL |     get_future().await;\n+   |     ^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0698`."}]}