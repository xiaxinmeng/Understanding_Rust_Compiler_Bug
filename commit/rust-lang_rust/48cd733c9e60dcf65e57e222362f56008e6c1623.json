{"sha": "48cd733c9e60dcf65e57e222362f56008e6c1623", "node_id": "C_kwDOAAsO6NoAKDQ4Y2Q3MzNjOWU2MGRjZjY1ZTU3ZTIyMjM2MmY1NjAwOGU2YzE2MjM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-12-11T14:58:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-11T14:58:07Z"}, "message": "Merge #10956 #10986\n\n10956: minor: Bump deps r=Veykril a=lnicola\n\nbors r+\n\n10986: fix: Fix lint completions not working for unclosed attributes r=Veykril a=Veykril\n\nFixes #10682\r\nUses keywords and nested `TokenTree`s as a heuristic to figure out when to stop parsing in case the attribute is unclosed which should work pretty well as attributes are usually followed by either of those.\r\nbors r+\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "d8dbf0774405b0c084b91dbd679ade503090bf64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8dbf0774405b0c084b91dbd679ade503090bf64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48cd733c9e60dcf65e57e222362f56008e6c1623", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhtLx/CRBK7hj4Ov3rIwAAc+oIADMHfSe7Ikga8W8FMnPLl09x\ndx3nObJacoDalo+wugoZCTl3cRmyhfmS/0BX3KoRd5u9RCVc6qD7d1Bjo6bGEFUi\n9lxxNsYIytZ1CDr69OzIwosMCy0ylfSlV44TLZp+KYtjwVKsN7sAI5CDw+KxF+c1\nuY+KSbzE8BNI2V0lwffCBc7A0jqFdJsv6g4FGV4aZa3EDr5uWdhvIhjPJMmaSydY\n3xVPwt4U8iC+7Bx12lTQTITzhg7mVdqKVBFptYFUSafmpVh+0loUwF9HNGwYqstB\nNiuWCJkdHbIAVOnrbQ0CkyrtWl6BIDekzzwFd8ugSbTjAywKcq66/NQScq/c1Vg=\n=9kQm\n-----END PGP SIGNATURE-----\n", "payload": "tree d8dbf0774405b0c084b91dbd679ade503090bf64\nparent 9946def7e224a2009e7ca3ca7f4ac032aeb0eb42\nparent 9a624abc84f997c71c2c6000d89efc32237e4ea3\nparent 0001a425702f3c3f163d25f63cf3eebd321097dc\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1639234687 +0000\ncommitter GitHub <noreply@github.com> 1639234687 +0000\n\nMerge #10956 #10986\n\n10956: minor: Bump deps r=Veykril a=lnicola\n\nbors r+\n\n10986: fix: Fix lint completions not working for unclosed attributes r=Veykril a=Veykril\n\nFixes #10682\r\nUses keywords and nested `TokenTree`s as a heuristic to figure out when to stop parsing in case the attribute is unclosed which should work pretty well as attributes are usually followed by either of those.\r\nbors r+\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48cd733c9e60dcf65e57e222362f56008e6c1623", "html_url": "https://github.com/rust-lang/rust/commit/48cd733c9e60dcf65e57e222362f56008e6c1623", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48cd733c9e60dcf65e57e222362f56008e6c1623/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9946def7e224a2009e7ca3ca7f4ac032aeb0eb42", "url": "https://api.github.com/repos/rust-lang/rust/commits/9946def7e224a2009e7ca3ca7f4ac032aeb0eb42", "html_url": "https://github.com/rust-lang/rust/commit/9946def7e224a2009e7ca3ca7f4ac032aeb0eb42"}, {"sha": "9a624abc84f997c71c2c6000d89efc32237e4ea3", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a624abc84f997c71c2c6000d89efc32237e4ea3", "html_url": "https://github.com/rust-lang/rust/commit/9a624abc84f997c71c2c6000d89efc32237e4ea3"}, {"sha": "0001a425702f3c3f163d25f63cf3eebd321097dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/0001a425702f3c3f163d25f63cf3eebd321097dc", "html_url": "https://github.com/rust-lang/rust/commit/0001a425702f3c3f163d25f63cf3eebd321097dc"}], "stats": {"total": 85, "additions": 49, "deletions": 36}, "files": [{"sha": "880b34a6fd9997fa2937b761b7ee2e3ab8e92e24", "filename": "Cargo.lock", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/48cd733c9e60dcf65e57e222362f56008e6c1623/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/48cd733c9e60dcf65e57e222362f56008e6c1623/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=48cd733c9e60dcf65e57e222362f56008e6c1623", "patch": "@@ -759,9 +759,9 @@ dependencies = [\n \n [[package]]\n name = \"itertools\"\n-version = \"0.10.1\"\n+version = \"0.10.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"69ddb889f9d0d08a67338271fa9b62996bc788c7796a5c18cf057420aaed5eaf\"\n+checksum = \"a9a9d19fa1e79b6215ff29b9d6880b706147f16e9b1dbb1e4e5947b5b02bc5e3\"\n dependencies = [\n  \"either\",\n ]\n@@ -810,9 +810,9 @@ checksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n \n [[package]]\n name = \"libc\"\n-version = \"0.2.108\"\n+version = \"0.2.109\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"8521a1b57e76b1ec69af7599e75e38e7b7fad6610f037db8c79b127201b5d119\"\n+checksum = \"f98a04dce437184842841303488f70d0188c5f51437d2a834dc097eafa909a01\"\n \n [[package]]\n name = \"libloading\"\n@@ -1128,9 +1128,9 @@ checksum = \"8d31d11c69a6b52a174b42bdc0c30e5e11670f90788b2c471c31c1d17d449443\"\n \n [[package]]\n name = \"proc-macro2\"\n-version = \"1.0.32\"\n+version = \"1.0.33\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"ba508cc11742c0dc5c1659771673afbab7a0efab23aa17e854cbab0837ed0b43\"\n+checksum = \"fb37d2df5df740e582f28f8560cf425f52bb267d872fe58358eadb554909f07a\"\n dependencies = [\n  \"unicode-xid\",\n ]\n@@ -1227,9 +1227,9 @@ dependencies = [\n \n [[package]]\n name = \"pulldown-cmark-to-cmark\"\n-version = \"7.1.0\"\n+version = \"7.1.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"2d85e607de0249c2b5041e38de8684b00b62a64edee60bfcd85c153031a9d658\"\n+checksum = \"8bc14bc6b9f5881f240f9766414707ab24f972bcc3388589fe15b22fb15dc60d\"\n dependencies = [\n  \"pulldown-cmark\",\n ]"}, {"sha": "63b0a91ce5a9a8a0c7e48737dff4f4e412148c45", "filename": "crates/ide_assists/src/handlers/extract_function.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48cd733c9e60dcf65e57e222362f56008e6c1623/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48cd733c9e60dcf65e57e222362f56008e6c1623/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs?ref=48cd733c9e60dcf65e57e222362f56008e6c1623", "patch": "@@ -480,7 +480,7 @@ impl FunctionBody {\n             .statements()\n             .map(|stmt| stmt.syntax().text_range())\n             .filter(|&stmt| selected.intersect(stmt).filter(|it| !it.is_empty()).is_some())\n-            .fold1(|acc, stmt| acc.cover(stmt));\n+            .reduce(|acc, stmt| acc.cover(stmt));\n         if let Some(tail_range) = parent\n             .tail_expr()\n             .map(|it| it.syntax().text_range())"}, {"sha": "7d73632c7994537bed365a827d2b4fc6981872e9", "filename": "crates/ide_assists/src/handlers/unmerge_use.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/48cd733c9e60dcf65e57e222362f56008e6c1623/crates%2Fide_assists%2Fsrc%2Fhandlers%2Funmerge_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48cd733c9e60dcf65e57e222362f56008e6c1623/crates%2Fide_assists%2Fsrc%2Fhandlers%2Funmerge_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Funmerge_use.rs?ref=48cd733c9e60dcf65e57e222362f56008e6c1623", "patch": "@@ -1,4 +1,3 @@\n-use itertools::Itertools;\n use syntax::{\n     ast::{self, make, HasVisibility},\n     ted::{self, Position},\n@@ -70,7 +69,7 @@ fn resolve_full_path(tree: &ast::UseTree) -> Option<ast::Path> {\n         .filter_map(ast::UseTree::cast)\n         .filter_map(|t| t.path());\n \n-    let final_path = paths.fold1(|prev, next| make::path_concat(next, prev))?;\n+    let final_path = paths.reduce(|prev, next| make::path_concat(next, prev))?;\n     if final_path.segment().map_or(false, |it| it.self_token().is_some()) {\n         final_path.qualifier()\n     } else {"}, {"sha": "d92e311915a1e1b3220455069072170a19c2a716", "filename": "crates/ide_completion/src/completions/attribute.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/48cd733c9e60dcf65e57e222362f56008e6c1623/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48cd733c9e60dcf65e57e222362f56008e6c1623/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs?ref=48cd733c9e60dcf65e57e222362f56008e6c1623", "patch": "@@ -30,16 +30,12 @@ pub(crate) fn complete_attribute(acc: &mut Completions, ctx: &CompletionContext)\n         None => None,\n     };\n     match (name_ref, attribute.token_tree()) {\n-        (Some(path), Some(token_tree)) => match path.text().as_str() {\n-            \"repr\" => repr::complete_repr(acc, ctx, token_tree),\n-            \"derive\" => {\n-                derive::complete_derive(acc, ctx, &parse_tt_as_comma_sep_paths(token_tree)?)\n-            }\n-            \"feature\" => {\n-                lint::complete_lint(acc, ctx, &parse_tt_as_comma_sep_paths(token_tree)?, FEATURES)\n-            }\n+        (Some(path), Some(tt)) if tt.l_paren_token().is_some() => match path.text().as_str() {\n+            \"repr\" => repr::complete_repr(acc, ctx, tt),\n+            \"derive\" => derive::complete_derive(acc, ctx, &parse_tt_as_comma_sep_paths(tt)?),\n+            \"feature\" => lint::complete_lint(acc, ctx, &parse_tt_as_comma_sep_paths(tt)?, FEATURES),\n             \"allow\" | \"warn\" | \"deny\" | \"forbid\" => {\n-                let existing_lints = parse_tt_as_comma_sep_paths(token_tree)?;\n+                let existing_lints = parse_tt_as_comma_sep_paths(tt)?;\n                 lint::complete_lint(acc, ctx, &existing_lints, DEFAULT_LINTS);\n                 lint::complete_lint(acc, ctx, &existing_lints, CLIPPY_LINTS);\n                 lint::complete_lint(acc, ctx, &existing_lints, RUSTDOC_LINTS);\n@@ -49,8 +45,8 @@ pub(crate) fn complete_attribute(acc: &mut Completions, ctx: &CompletionContext)\n             }\n             _ => (),\n         },\n-        (None, Some(_)) => (),\n-        _ => complete_new_attribute(acc, ctx, attribute),\n+        (_, Some(_)) => (),\n+        (_, None) => complete_new_attribute(acc, ctx, attribute),\n     }\n     Some(())\n }"}, {"sha": "c90d4966f37a6d65ab37b00082c7778db6001a70", "filename": "crates/ide_completion/src/tests/attribute.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/48cd733c9e60dcf65e57e222362f56008e6c1623/crates%2Fide_completion%2Fsrc%2Ftests%2Fattribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48cd733c9e60dcf65e57e222362f56008e6c1623/crates%2Fide_completion%2Fsrc%2Ftests%2Fattribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fattribute.rs?ref=48cd733c9e60dcf65e57e222362f56008e6c1623", "patch": "@@ -831,6 +831,20 @@ mod lint {\n             r#\"#[allow(rustdoc::bare_urls)] struct Test;\"#,\n         );\n     }\n+\n+    #[test]\n+    fn lint_unclosed() {\n+        check_edit(\n+            \"deprecated\",\n+            r#\"#[allow(dep$0 struct Test;\"#,\n+            r#\"#[allow(deprecated struct Test;\"#,\n+        );\n+        check_edit(\n+            \"bare_urls\",\n+            r#\"#[allow(rustdoc::$0 struct Test;\"#,\n+            r#\"#[allow(rustdoc::bare_urls struct Test;\"#,\n+        );\n+    }\n }\n \n mod repr {"}, {"sha": "7e78b7136cb959dca1c7d0cb8682ea1005db9fba", "filename": "crates/ide_db/src/helpers.rs", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/48cd733c9e60dcf65e57e222362f56008e6c1623/crates%2Fide_db%2Fsrc%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48cd733c9e60dcf65e57e222362f56008e6c1623/crates%2Fide_db%2Fsrc%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers.rs?ref=48cd733c9e60dcf65e57e222362f56008e6c1623", "patch": "@@ -305,20 +305,24 @@ pub fn lint_eq_or_in_group(lint: &str, lint_is: &str) -> bool {\n     }\n }\n \n-/// Parses the input token tree as comma separated paths.\n+/// Parses the input token tree as comma separated plain paths.\n pub fn parse_tt_as_comma_sep_paths(input: ast::TokenTree) -> Option<Vec<ast::Path>> {\n-    let r_paren = input.r_paren_token()?;\n-    let tokens = input\n-        .syntax()\n-        .children_with_tokens()\n-        .skip(1)\n-        .take_while(|it| it.as_token() != Some(&r_paren));\n+    let r_paren = input.r_paren_token();\n+    let tokens =\n+        input.syntax().children_with_tokens().skip(1).map_while(|it| match it.into_token() {\n+            // seeing a keyword means the attribute is unclosed so stop parsing here\n+            Some(tok) if tok.kind().is_keyword() => None,\n+            // don't include the right token tree parenthesis if it exists\n+            tok @ Some(_) if tok == r_paren => None,\n+            // only nodes that we can find are other TokenTrees, those are unexpected in this parse though\n+            None => None,\n+            Some(tok) => Some(tok),\n+        });\n     let input_expressions = tokens.into_iter().group_by(|tok| tok.kind() == T![,]);\n-    Some(\n-        input_expressions\n-            .into_iter()\n-            .filter_map(|(is_sep, group)| (!is_sep).then(|| group))\n-            .filter_map(|mut tokens| ast::Path::parse(&tokens.join(\"\")).ok())\n-            .collect::<Vec<ast::Path>>(),\n-    )\n+    let paths = input_expressions\n+        .into_iter()\n+        .filter_map(|(is_sep, group)| (!is_sep).then(|| group))\n+        .filter_map(|mut tokens| ast::Path::parse(&tokens.join(\"\")).ok())\n+        .collect();\n+    Some(paths)\n }"}]}