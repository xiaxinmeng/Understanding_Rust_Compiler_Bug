{"sha": "b4c5ee33ae128df4e82c992d0c13f6c9df0f9f02", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0YzVlZTMzYWUxMjhkZjRlODJjOTkyZDBjMTNmNmM5ZGYwZjlmMDI=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-04-16T20:08:01Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-04-16T20:08:01Z"}, "message": "Fix extern_process args", "tree": {"sha": "4504f149c0deae8ff8526c172085e023ff3665a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4504f149c0deae8ff8526c172085e023ff3665a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4c5ee33ae128df4e82c992d0c13f6c9df0f9f02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4c5ee33ae128df4e82c992d0c13f6c9df0f9f02", "html_url": "https://github.com/rust-lang/rust/commit/b4c5ee33ae128df4e82c992d0c13f6c9df0f9f02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4c5ee33ae128df4e82c992d0c13f6c9df0f9f02/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "177becea98bddcd995a2abec59c6b60bac6b5a2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/177becea98bddcd995a2abec59c6b60bac6b5a2b", "html_url": "https://github.com/rust-lang/rust/commit/177becea98bddcd995a2abec59c6b60bac6b5a2b"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "b200fd12633e0e262082835829e60e43263d0b19", "filename": "crates/ra_proc_macro/src/lib.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b4c5ee33ae128df4e82c992d0c13f6c9df0f9f02/crates%2Fra_proc_macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4c5ee33ae128df4e82c992d0c13f6c9df0f9f02/crates%2Fra_proc_macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro%2Fsrc%2Flib.rs?ref=b4c5ee33ae128df4e82c992d0c13f6c9df0f9f02", "patch": "@@ -12,6 +12,7 @@ pub mod msg;\n use process::{ProcMacroProcessSrv, ProcMacroProcessThread};\n use ra_tt::{SmolStr, Subtree};\n use std::{\n+    ffi::OsStr,\n     path::{Path, PathBuf},\n     sync::Arc,\n };\n@@ -56,10 +57,14 @@ pub struct ProcMacroClient {\n }\n \n impl ProcMacroClient {\n-    pub fn extern_process<T: AsRef<str>>(\n+    pub fn extern_process<I, S>(\n         process_path: &Path,\n-        args: &[T],\n-    ) -> Result<ProcMacroClient, std::io::Error> {\n+        args: I,\n+    ) -> Result<ProcMacroClient, std::io::Error>\n+    where\n+        I: IntoIterator<Item = S>,\n+        S: AsRef<OsStr>,\n+    {\n         let (thread, process) = ProcMacroProcessSrv::run(process_path, args)?;\n         Ok(ProcMacroClient {\n             kind: ProcMacroClientKind::Process { process: Arc::new(process), thread },"}, {"sha": "f851570bca9f4c562e5d8eecc8411ce08f67cc8d", "filename": "crates/ra_proc_macro/src/process.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b4c5ee33ae128df4e82c992d0c13f6c9df0f9f02/crates%2Fra_proc_macro%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4c5ee33ae128df4e82c992d0c13f6c9df0f9f02/crates%2Fra_proc_macro%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro%2Fsrc%2Fprocess.rs?ref=b4c5ee33ae128df4e82c992d0c13f6c9df0f9f02", "patch": "@@ -9,6 +9,7 @@ use crate::rpc::{ExpansionResult, ExpansionTask, ListMacrosResult, ListMacrosTas\n use io::{BufRead, BufReader};\n use std::{\n     convert::{TryFrom, TryInto},\n+    ffi::OsStr,\n     io::{self, Write},\n     path::{Path, PathBuf},\n     process::{Child, Command, Stdio},\n@@ -44,9 +45,13 @@ impl Drop for Process {\n }\n \n impl Process {\n-    fn run<T: AsRef<str>>(process_path: &Path, args: &[T]) -> Result<Process, io::Error> {\n+    fn run<I, S>(process_path: &Path, args: I) -> Result<Process, io::Error>\n+    where\n+        I: IntoIterator<Item = S>,\n+        S: AsRef<OsStr>,\n+    {\n         let child = Command::new(process_path.clone())\n-            .args(args.iter().map(|it| it.as_ref()))\n+            .args(args)\n             .stdin(Stdio::piped())\n             .stdout(Stdio::piped())\n             .stderr(Stdio::null())\n@@ -75,10 +80,14 @@ impl Process {\n }\n \n impl ProcMacroProcessSrv {\n-    pub fn run<T: AsRef<str>>(\n+    pub fn run<I, S>(\n         process_path: &Path,\n-        args: &[T],\n-    ) -> Result<(ProcMacroProcessThread, ProcMacroProcessSrv), io::Error> {\n+        args: I,\n+    ) -> Result<(ProcMacroProcessThread, ProcMacroProcessSrv), io::Error>\n+    where\n+        I: IntoIterator<Item = S>,\n+        S: AsRef<OsStr>,\n+    {\n         let process = Process::run(process_path, args)?;\n \n         let (task_tx, task_rx) = bounded(0);"}]}