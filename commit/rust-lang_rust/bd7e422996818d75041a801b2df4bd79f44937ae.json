{"sha": "bd7e422996818d75041a801b2df4bd79f44937ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkN2U0MjI5OTY4MThkNzUwNDFhODAxYjJkZjRiZDc5ZjQ0OTM3YWU=", "commit": {"author": {"name": "vegai", "email": "vegai@iki.fi", "date": "2016-03-02T05:06:22Z"}, "committer": {"name": "vegai", "email": "vegai@iki.fi", "date": "2016-03-02T05:06:22Z"}, "message": "Add a span note on type definition spot", "tree": {"sha": "bb5a41f8dfe6e75955174d9ecf8b953736b57cdd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb5a41f8dfe6e75955174d9ecf8b953736b57cdd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd7e422996818d75041a801b2df4bd79f44937ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd7e422996818d75041a801b2df4bd79f44937ae", "html_url": "https://github.com/rust-lang/rust/commit/bd7e422996818d75041a801b2df4bd79f44937ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd7e422996818d75041a801b2df4bd79f44937ae/comments", "author": {"login": "vegai", "id": 1481, "node_id": "MDQ6VXNlcjE0ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/1481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vegai", "html_url": "https://github.com/vegai", "followers_url": "https://api.github.com/users/vegai/followers", "following_url": "https://api.github.com/users/vegai/following{/other_user}", "gists_url": "https://api.github.com/users/vegai/gists{/gist_id}", "starred_url": "https://api.github.com/users/vegai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vegai/subscriptions", "organizations_url": "https://api.github.com/users/vegai/orgs", "repos_url": "https://api.github.com/users/vegai/repos", "events_url": "https://api.github.com/users/vegai/events{/privacy}", "received_events_url": "https://api.github.com/users/vegai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vegai", "id": 1481, "node_id": "MDQ6VXNlcjE0ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/1481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vegai", "html_url": "https://github.com/vegai", "followers_url": "https://api.github.com/users/vegai/followers", "following_url": "https://api.github.com/users/vegai/following{/other_user}", "gists_url": "https://api.github.com/users/vegai/gists{/gist_id}", "starred_url": "https://api.github.com/users/vegai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vegai/subscriptions", "organizations_url": "https://api.github.com/users/vegai/orgs", "repos_url": "https://api.github.com/users/vegai/repos", "events_url": "https://api.github.com/users/vegai/events{/privacy}", "received_events_url": "https://api.github.com/users/vegai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59fafcf00c684665629e2ea79fd884623f7b8812", "url": "https://api.github.com/repos/rust-lang/rust/commits/59fafcf00c684665629e2ea79fd884623f7b8812", "html_url": "https://github.com/rust-lang/rust/commit/59fafcf00c684665629e2ea79fd884623f7b8812"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "e139ac8b2a06924df211cb5075a79b71e1b3ae5e", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bd7e422996818d75041a801b2df4bd79f44937ae/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd7e422996818d75041a801b2df4bd79f44937ae/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=bd7e422996818d75041a801b2df4bd79f44937ae", "patch": "@@ -1988,9 +1988,12 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                                                                                       path_depth)));\n \n                 // If it's a typedef, give a note\n-                if let Def::TyAlias(..) = path_res.base_def {\n+                if let Def::TyAlias(did) = path_res.base_def {\n                     err.fileline_note(trait_path.span,\n                                   \"`type` aliases cannot be used for traits\");\n+                    if let Some(sp) = self.ast_map.span_if_local(did) {\n+                        err.span_note(sp, \"type defined here\");\n+                    }\n                 }\n                 err.emit();\n                 Err(())"}]}