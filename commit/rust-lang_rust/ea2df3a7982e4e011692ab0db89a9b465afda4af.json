{"sha": "ea2df3a7982e4e011692ab0db89a9b465afda4af", "node_id": "C_kwDOAAsO6NoAKGVhMmRmM2E3OTgyZTRlMDExNjkyYWIwZGI4OWE5YjQ2NWFmZGE0YWY", "commit": {"author": {"name": "Obei Sideg", "email": "obei.sideg@gmail.com", "date": "2022-08-08T00:19:37Z"}, "committer": {"name": "Obei Sideg", "email": "obei.sideg@gmail.com", "date": "2022-08-08T21:55:37Z"}, "message": "Recover from mutable variable declaration where `mut` is placed before `let`", "tree": {"sha": "6f2ec506fb49c263cc975768b45d527fcc1d4a5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f2ec506fb49c263cc975768b45d527fcc1d4a5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea2df3a7982e4e011692ab0db89a9b465afda4af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea2df3a7982e4e011692ab0db89a9b465afda4af", "html_url": "https://github.com/rust-lang/rust/commit/ea2df3a7982e4e011692ab0db89a9b465afda4af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea2df3a7982e4e011692ab0db89a9b465afda4af/comments", "author": {"login": "obeis", "id": 54103142, "node_id": "MDQ6VXNlcjU0MTAzMTQy", "avatar_url": "https://avatars.githubusercontent.com/u/54103142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obeis", "html_url": "https://github.com/obeis", "followers_url": "https://api.github.com/users/obeis/followers", "following_url": "https://api.github.com/users/obeis/following{/other_user}", "gists_url": "https://api.github.com/users/obeis/gists{/gist_id}", "starred_url": "https://api.github.com/users/obeis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obeis/subscriptions", "organizations_url": "https://api.github.com/users/obeis/orgs", "repos_url": "https://api.github.com/users/obeis/repos", "events_url": "https://api.github.com/users/obeis/events{/privacy}", "received_events_url": "https://api.github.com/users/obeis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "obeis", "id": 54103142, "node_id": "MDQ6VXNlcjU0MTAzMTQy", "avatar_url": "https://avatars.githubusercontent.com/u/54103142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obeis", "html_url": "https://github.com/obeis", "followers_url": "https://api.github.com/users/obeis/followers", "following_url": "https://api.github.com/users/obeis/following{/other_user}", "gists_url": "https://api.github.com/users/obeis/gists{/gist_id}", "starred_url": "https://api.github.com/users/obeis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obeis/subscriptions", "organizations_url": "https://api.github.com/users/obeis/orgs", "repos_url": "https://api.github.com/users/obeis/repos", "events_url": "https://api.github.com/users/obeis/events{/privacy}", "received_events_url": "https://api.github.com/users/obeis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ee22ff7e82a0a806de72516a6a942bad2202dca", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ee22ff7e82a0a806de72516a6a942bad2202dca", "html_url": "https://github.com/rust-lang/rust/commit/9ee22ff7e82a0a806de72516a6a942bad2202dca"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "697d9cecfe654cad4a6a4aaee415e1d29e01f1fe", "filename": "compiler/rustc_parse/src/parser/stmt.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ea2df3a7982e4e011692ab0db89a9b465afda4af/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea2df3a7982e4e011692ab0db89a9b465afda4af/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs?ref=ea2df3a7982e4e011692ab0db89a9b465afda4af", "patch": "@@ -55,6 +55,19 @@ impl<'a> Parser<'a> {\n             return Ok(Some(stmt.into_inner()));\n         }\n \n+        if self.token.is_keyword(kw::Mut) && self.is_keyword_ahead(1, &[kw::Let]) {\n+            self.bump();\n+            let mut_let_span = lo.to(self.token.span);\n+            self.struct_span_err(mut_let_span, \"invalid variable declaration\")\n+                .span_suggestion(\n+                    mut_let_span,\n+                    \"switch the order of `mut` and `let`\",\n+                    \"let mut\",\n+                    Applicability::MaybeIncorrect,\n+                )\n+                .emit();\n+        }\n+\n         Ok(Some(if self.token.is_keyword(kw::Let) {\n             self.parse_local_mk(lo, attrs, capture_semi, force_collect)?\n         } else if self.is_kw_followed_by_ident(kw::Mut) {"}]}