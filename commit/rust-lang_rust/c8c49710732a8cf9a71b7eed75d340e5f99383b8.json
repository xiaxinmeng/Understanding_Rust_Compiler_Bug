{"sha": "c8c49710732a8cf9a71b7eed75d340e5f99383b8", "node_id": "C_kwDOAAsO6NoAKGM4YzQ5NzEwNzMyYThjZjlhNzFiN2VlZDc1ZDM0MGU1Zjk5MzgzYjg", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-10-27T15:10:33Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-10-27T15:10:33Z"}, "message": "Update miri", "tree": {"sha": "af17603a9884102dfd82e9bdb27ef261f039e77e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af17603a9884102dfd82e9bdb27ef261f039e77e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8c49710732a8cf9a71b7eed75d340e5f99383b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8c49710732a8cf9a71b7eed75d340e5f99383b8", "html_url": "https://github.com/rust-lang/rust/commit/c8c49710732a8cf9a71b7eed75d340e5f99383b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8c49710732a8cf9a71b7eed75d340e5f99383b8/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc53c8f25fb0855c413cbb44041a106dfab9eef1", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc53c8f25fb0855c413cbb44041a106dfab9eef1", "html_url": "https://github.com/rust-lang/rust/commit/dc53c8f25fb0855c413cbb44041a106dfab9eef1"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "5ec787dd44113ae9618cf639ac7e7134cc8b984b", "filename": "src/tools/miri/src/stacked_borrows/mod.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c8c49710732a8cf9a71b7eed75d340e5f99383b8/src%2Ftools%2Fmiri%2Fsrc%2Fstacked_borrows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8c49710732a8cf9a71b7eed75d340e5f99383b8/src%2Ftools%2Fmiri%2Fsrc%2Fstacked_borrows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fstacked_borrows%2Fmod.rs?ref=c8c49710732a8cf9a71b7eed75d340e5f99383b8", "patch": "@@ -16,7 +16,6 @@ use rustc_middle::ty::{\n     layout::{HasParamEnv, LayoutOf},\n     Ty,\n };\n-use rustc_span::DUMMY_SP;\n use rustc_target::abi::Abi;\n use rustc_target::abi::Size;\n use smallvec::SmallVec;\n@@ -714,12 +713,12 @@ trait EvalContextPrivExt<'mir: 'ecx, 'tcx: 'mir, 'ecx>: crate::MiriInterpCxExt<'\n                 let mut kind_str = format!(\"{kind}\");\n                 match kind {\n                     RefKind::Unique { two_phase: false }\n-                        if !ty.is_unpin(this.tcx.at(DUMMY_SP), this.param_env()) =>\n+                        if !ty.is_unpin(*this.tcx, this.param_env()) =>\n                     {\n                         write!(kind_str, \" (!Unpin pointee type {ty})\").unwrap()\n                     },\n                     RefKind::Shared\n-                        if !ty.is_freeze(this.tcx.at(DUMMY_SP), this.param_env()) =>\n+                        if !ty.is_freeze(*this.tcx, this.param_env()) =>\n                     {\n                         write!(kind_str, \" (!Freeze pointee type {ty})\").unwrap()\n                     },\n@@ -834,7 +833,7 @@ trait EvalContextPrivExt<'mir: 'ecx, 'tcx: 'mir, 'ecx>: crate::MiriInterpCxExt<'\n         // There could be existing unique pointers reborrowed from them that should remain valid!\n         let perm = match kind {\n             RefKind::Unique { two_phase: false }\n-                if place.layout.ty.is_unpin(this.tcx.at(DUMMY_SP), this.param_env()) =>\n+                if place.layout.ty.is_unpin(*this.tcx, this.param_env()) =>\n             {\n                 // Only if the type is unpin do we actually enforce uniqueness\n                 Permission::Unique"}]}