{"sha": "6860b647a5c296dfd6c10cf7536853fbd9e6fef1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4NjBiNjQ3YTVjMjk2ZGZkNmMxMGNmNzUzNjg1M2ZiZDllNmZlZjE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-07T20:50:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-07T20:50:47Z"}, "message": "Merge #8753\n\n8753: internal: expose cfg attrs from hir::Crate r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "ab508ae06c161225c9f70452c6c54decd02d0e54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab508ae06c161225c9f70452c6c54decd02d0e54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6860b647a5c296dfd6c10cf7536853fbd9e6fef1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJglagoCRBK7hj4Ov3rIwAAesEIAKzuLe0Cq662SkHwI9uQueiG\nOiwOx3WeRwpqwAXkssTGmDw6fnn8cS60NOvw/VU+xVJtZaXhRILimwtTIVSo1Iqw\nf3Qd0P9/tDGswfhgUskMYMnsLt8BvTkQeX5zxiDKcwY6zeq0LGpTOOZ6Cx0Sr4wX\nruIlhgXHH73ePVw58FEgfnz+/NdMV8fvpZzPXGzJCr3+w6wgXNTpDsrZnOdrNwJP\n2unokwNStx3IWgPPbkbySYT/QcRM4s3kZURQ3nr5LZ86zv+9ZHIhqFFqs7kumgbX\nmcg/zlFzwaM6QG4tl0jIanyJ5pHcxWh2USCV9Ko/HYmI4ZSraLYXsGf2Olrrhuk=\n=YLfK\n-----END PGP SIGNATURE-----\n", "payload": "tree ab508ae06c161225c9f70452c6c54decd02d0e54\nparent ba8620398713d6f116dd1cce1a7e1cd6e3f97461\nparent 53f7149d4510137111ed810803e9529157537288\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1620420647 +0000\ncommitter GitHub <noreply@github.com> 1620420647 +0000\n\nMerge #8753\n\n8753: internal: expose cfg attrs from hir::Crate r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6860b647a5c296dfd6c10cf7536853fbd9e6fef1", "html_url": "https://github.com/rust-lang/rust/commit/6860b647a5c296dfd6c10cf7536853fbd9e6fef1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6860b647a5c296dfd6c10cf7536853fbd9e6fef1/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba8620398713d6f116dd1cce1a7e1cd6e3f97461", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba8620398713d6f116dd1cce1a7e1cd6e3f97461", "html_url": "https://github.com/rust-lang/rust/commit/ba8620398713d6f116dd1cce1a7e1cd6e3f97461"}, {"sha": "53f7149d4510137111ed810803e9529157537288", "url": "https://api.github.com/repos/rust-lang/rust/commits/53f7149d4510137111ed810803e9529157537288", "html_url": "https://github.com/rust-lang/rust/commit/53f7149d4510137111ed810803e9529157537288"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "0e1234b721c35fa8088ba37a0617dada46b0510d", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6860b647a5c296dfd6c10cf7536853fbd9e6fef1/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/6860b647a5c296dfd6c10cf7536853fbd9e6fef1/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=6860b647a5c296dfd6c10cf7536853fbd9e6fef1", "patch": "@@ -480,6 +480,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"arrayvec\",\n  \"base_db\",\n+ \"cfg\",\n  \"either\",\n  \"hir_def\",\n  \"hir_expand\","}, {"sha": "59fd388809cb4058c740056f2cc4147b92e3c875", "filename": "crates/cfg/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6860b647a5c296dfd6c10cf7536853fbd9e6fef1/crates%2Fcfg%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6860b647a5c296dfd6c10cf7536853fbd9e6fef1/crates%2Fcfg%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcfg%2Fsrc%2Flib.rs?ref=6860b647a5c296dfd6c10cf7536853fbd9e6fef1", "patch": "@@ -13,7 +13,7 @@ use tt::SmolStr;\n pub use cfg_expr::{CfgAtom, CfgExpr};\n pub use dnf::DnfExpr;\n \n-/// Configuration options used for conditional compilition on items with `cfg` attributes.\n+/// Configuration options used for conditional compilation on items with `cfg` attributes.\n /// We have two kind of options in different namespaces: atomic options like `unix`, and\n /// key-value options like `target_arch=\"x86\"`.\n ///"}, {"sha": "560b152389388e7ad19545cdf9371d5f94b63470", "filename": "crates/hir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6860b647a5c296dfd6c10cf7536853fbd9e6fef1/crates%2Fhir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6860b647a5c296dfd6c10cf7536853fbd9e6fef1/crates%2Fhir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2FCargo.toml?ref=6860b647a5c296dfd6c10cf7536853fbd9e6fef1", "patch": "@@ -25,3 +25,4 @@ hir_expand = { path = \"../hir_expand\", version = \"0.0.0\" }\n hir_def = { path = \"../hir_def\", version = \"0.0.0\" }\n hir_ty = { path = \"../hir_ty\", version = \"0.0.0\" }\n tt = { path = \"../tt\", version = \"0.0.0\" }\n+cfg = { path = \"../cfg\", version = \"0.0.0\" }"}, {"sha": "ac23e385ee7b2307b3b35c9b73cdade2c16d7bbe", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6860b647a5c296dfd6c10cf7536853fbd9e6fef1/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6860b647a5c296dfd6c10cf7536853fbd9e6fef1/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=6860b647a5c296dfd6c10cf7536853fbd9e6fef1", "patch": "@@ -89,6 +89,7 @@ pub use crate::{\n // Generally, a refactoring which *removes* a name from this list is a good\n // idea!\n pub use {\n+    cfg::{CfgAtom, CfgExpr, CfgOptions},\n     hir_def::{\n         adt::StructKind,\n         attr::{Attr, Attrs, AttrsWithOwner, Documentation},\n@@ -215,6 +216,10 @@ impl Crate {\n \n         doc_url.map(|s| s.trim_matches('\"').trim_end_matches('/').to_owned() + \"/\")\n     }\n+\n+    pub fn cfg(&self, db: &dyn HirDatabase) -> CfgOptions {\n+        db.crate_graph()[self.id].cfg_options.clone()\n+    }\n }\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]"}]}