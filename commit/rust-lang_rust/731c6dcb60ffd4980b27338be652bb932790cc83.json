{"sha": "731c6dcb60ffd4980b27338be652bb932790cc83", "node_id": "C_kwDOAAsO6NoAKDczMWM2ZGNiNjBmZmQ0OTgwYjI3MzM4YmU2NTJiYjkzMjc5MGNjODM", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-04-12T13:55:35Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-04-13T10:36:22Z"}, "message": "Document catch_fn in r#try cannot unwind", "tree": {"sha": "8db39a0e5dd21bdce5e84113ebc5a75ac2f73f09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8db39a0e5dd21bdce5e84113ebc5a75ac2f73f09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/731c6dcb60ffd4980b27338be652bb932790cc83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/731c6dcb60ffd4980b27338be652bb932790cc83", "html_url": "https://github.com/rust-lang/rust/commit/731c6dcb60ffd4980b27338be652bb932790cc83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/731c6dcb60ffd4980b27338be652bb932790cc83/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c9b371a2f3ef7f08e213e236c53733e2e5981c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c9b371a2f3ef7f08e213e236c53733e2e5981c7", "html_url": "https://github.com/rust-lang/rust/commit/5c9b371a2f3ef7f08e213e236c53733e2e5981c7"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "a7c100e1b23ed6d87fd8c0bf00e48bf0c6a966c3", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/731c6dcb60ffd4980b27338be652bb932790cc83/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/731c6dcb60ffd4980b27338be652bb932790cc83/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=731c6dcb60ffd4980b27338be652bb932790cc83", "patch": "@@ -2276,6 +2276,8 @@ extern \"rust-intrinsic\" {\n     /// takes the data pointer and a pointer to the target-specific exception\n     /// object that was caught. For more information see the compiler's\n     /// source as well as std's catch implementation.\n+    ///\n+    /// `catch_fn` must not unwind.\n     #[rustc_nounwind]\n     pub fn r#try(try_fn: fn(*mut u8), data: *mut u8, catch_fn: fn(*mut u8, *mut u8)) -> i32;\n "}, {"sha": "a46a29cbad6081400329485378ea87808bbc2512", "filename": "library/std/src/panicking.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/731c6dcb60ffd4980b27338be652bb932790cc83/library%2Fstd%2Fsrc%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/731c6dcb60ffd4980b27338be652bb932790cc83/library%2Fstd%2Fsrc%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpanicking.rs?ref=731c6dcb60ffd4980b27338be652bb932790cc83", "patch": "@@ -498,6 +498,7 @@ pub unsafe fn r#try<R, F: FnOnce() -> R>(f: F) -> Result<R, Box<dyn Any + Send>>\n     // This function cannot be marked as `unsafe` because `intrinsics::r#try`\n     // expects normal function pointers.\n     #[inline]\n+    #[rustc_nounwind] // `intrinsic::r#try` requires catch fn to be nounwind\n     fn do_catch<F: FnOnce() -> R, R>(data: *mut u8, payload: *mut u8) {\n         // SAFETY: this is the responsibility of the caller, see above.\n         //"}]}