{"sha": "0ee9d3d047ab3c23c1f87e5c58a0a3e64a3dfe66", "node_id": "C_kwDOAAsO6NoAKDBlZTlkM2QwNDdhYjNjMjNjMWY4N2U1YzU4YTBhM2U2NGEzZGZlNjY", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-12T10:42:53Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-12T10:42:53Z"}, "message": "Update a path to libstd source in our comments", "tree": {"sha": "0c9ff0bbfdec11cb0567bcfae927087e27b82b7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c9ff0bbfdec11cb0567bcfae927087e27b82b7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ee9d3d047ab3c23c1f87e5c58a0a3e64a3dfe66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ee9d3d047ab3c23c1f87e5c58a0a3e64a3dfe66", "html_url": "https://github.com/rust-lang/rust/commit/0ee9d3d047ab3c23c1f87e5c58a0a3e64a3dfe66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ee9d3d047ab3c23c1f87e5c58a0a3e64a3dfe66/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f84a976a771f971d53b980ac3a950e2fe5f85f6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f84a976a771f971d53b980ac3a950e2fe5f85f6e", "html_url": "https://github.com/rust-lang/rust/commit/f84a976a771f971d53b980ac3a950e2fe5f85f6e"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "66ba793b98ccbcfb5d7720b84b76745c989d7913", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0ee9d3d047ab3c23c1f87e5c58a0a3e64a3dfe66/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ee9d3d047ab3c23c1f87e5c58a0a3e64a3dfe66/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=0ee9d3d047ab3c23c1f87e5c58a0a3e64a3dfe66", "patch": "@@ -42,7 +42,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n     /// Returns the minimum alignment for the target architecture for allocations of the given size.\n     fn min_align(&self, size: u64, kind: MiriMemoryKind) -> Align {\n         let this = self.eval_context_ref();\n-        // List taken from `libstd/sys_common/alloc.rs`.\n+        // List taken from `library/std/src/sys/common/alloc.rs`.\n+        // This list should be kept in sync with the one from libstd.\n         let min_align = match this.tcx.sess.target.arch.as_ref() {\n             \"x86\" | \"arm\" | \"mips\" | \"powerpc\" | \"powerpc64\" | \"asmjs\" | \"wasm32\" => 8,\n             \"x86_64\" | \"aarch64\" | \"mips64\" | \"s390x\" | \"sparc64\" => 16,"}]}