{"sha": "64308d6292de5373a892532bac48862cec4b2677", "node_id": "C_kwDOAAsO6NoAKDY0MzA4ZDYyOTJkZTUzNzNhODkyNTMyYmFjNDg4NjJjZWM0YjI2Nzc", "commit": {"author": {"name": "Alex", "email": "blyxyas@gmail.com", "date": "2022-10-25T18:35:16Z"}, "committer": {"name": "Alex", "email": "blyxyas@gmail.com", "date": "2022-10-25T18:35:16Z"}, "message": "Lints updated", "tree": {"sha": "d4bebff77f926ff45b732f875ef88efbeaad8f49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4bebff77f926ff45b732f875ef88efbeaad8f49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64308d6292de5373a892532bac48862cec4b2677", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEm7sDx0iUAflIAXjbSPpSS+cZtLUFAmNYLKQACgkQSPpSS+cZ\ntLVNCxAAkpO74HVzVdcW/slKtqimW4sVOkSpKMeo2WHdkL7ZXugCbd5hL2gRxMlc\n66VRT570gFR6c6K3GPYAfmtTki8cCeGxSwdTygDBpcKFYOHi6tb4gLBUKVDeuRqc\n+ufionbLND6aKbVb4XYov14/sf/GnBro0I8f0SB5pP6lykmTEvXbkgtEys+4D+Ev\nzSMLEl6EzW4u64Kgkw0xR8hzx1tt+c26q+BNLjpm2Nt7voFT49uy59jl5+ns0KkZ\nYD42jFdYMyLjpY75SLvjuD16KxqitHL2aHuAk8w3knzoIESF8ALNJKSY3X7QK4H8\naFDD3wD12kSz9bthQ9KYrItmfw19r2K5OyED3PEN0yJEE3OYuhVbTlWfbmby+ACe\n2osJunNojmB1dqruPhVe8sBdIXFkyr5VxFh/ty2KOlMvQLZ6+SWp5k1JpKJ3lKJf\negNbCHCqt/EKX75Fz5BTrRdJTFvvnWtG/BM5KgklpKr7ICxYEMgxWzwYKlv5KRRx\nTI7moA42Cg6Onx4P4wJ8PrKkMLYL5zOt16725XyEncyExf1ceivOUphZ7DoedBsb\nPhfWzlGhs9fjB5qdY0SupKRGkBoocOlVE5Wsmqrkf67rbbn8D6LsJNvcP6I7LOu8\ndgGNweQ1OeDzAlVx1TdiheTxSkATsJUg/+7LoRh+sTysShChAaI=\n=ehNL\n-----END PGP SIGNATURE-----", "payload": "tree d4bebff77f926ff45b732f875ef88efbeaad8f49\nparent 32ded577797fe4a3691e751ecf59b74c6160c47c\nauthor Alex <blyxyas@gmail.com> 1666722916 +0200\ncommitter Alex <blyxyas@gmail.com> 1666722916 +0200\n\nLints updated\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64308d6292de5373a892532bac48862cec4b2677", "html_url": "https://github.com/rust-lang/rust/commit/64308d6292de5373a892532bac48862cec4b2677", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64308d6292de5373a892532bac48862cec4b2677/comments", "author": {"login": "blyxyas", "id": 73757586, "node_id": "MDQ6VXNlcjczNzU3NTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73757586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxyas", "html_url": "https://github.com/blyxyas", "followers_url": "https://api.github.com/users/blyxyas/followers", "following_url": "https://api.github.com/users/blyxyas/following{/other_user}", "gists_url": "https://api.github.com/users/blyxyas/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxyas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxyas/subscriptions", "organizations_url": "https://api.github.com/users/blyxyas/orgs", "repos_url": "https://api.github.com/users/blyxyas/repos", "events_url": "https://api.github.com/users/blyxyas/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxyas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "blyxyas", "id": 73757586, "node_id": "MDQ6VXNlcjczNzU3NTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73757586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxyas", "html_url": "https://github.com/blyxyas", "followers_url": "https://api.github.com/users/blyxyas/followers", "following_url": "https://api.github.com/users/blyxyas/following{/other_user}", "gists_url": "https://api.github.com/users/blyxyas/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxyas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxyas/subscriptions", "organizations_url": "https://api.github.com/users/blyxyas/orgs", "repos_url": "https://api.github.com/users/blyxyas/repos", "events_url": "https://api.github.com/users/blyxyas/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxyas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32ded577797fe4a3691e751ecf59b74c6160c47c", "url": "https://api.github.com/repos/rust-lang/rust/commits/32ded577797fe4a3691e751ecf59b74c6160c47c", "html_url": "https://github.com/rust-lang/rust/commit/32ded577797fe4a3691e751ecf59b74c6160c47c"}], "stats": {"total": 1332, "additions": 1, "deletions": 1331}, "files": [{"sha": "35f86e8aa78f454e6a33b7bd86cc3389aa08a3e5", "filename": "clippy_lints/src/declared_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/64308d6292de5373a892532bac48862cec4b2677/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64308d6292de5373a892532bac48862cec4b2677/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeclared_lints.rs?ref=64308d6292de5373a892532bac48862cec4b2677", "patch": "@@ -543,6 +543,7 @@ pub(crate) static LINTS: &[&crate::LintInfo] = &[\n     crate::suspicious_operation_groupings::SUSPICIOUS_OPERATION_GROUPINGS_INFO,\n     crate::suspicious_trait_impl::SUSPICIOUS_ARITHMETIC_IMPL_INFO,\n     crate::suspicious_trait_impl::SUSPICIOUS_OP_ASSIGN_IMPL_INFO,\n+    crate::suspicious_xor_used_as_pow::SUSPICIOUS_XOR_USED_AS_POW_INFO,\n     crate::swap::ALMOST_SWAPPED_INFO,\n     crate::swap::MANUAL_SWAP_INFO,\n     crate::swap_ptr_to_ref::SWAP_PTR_TO_REF_INFO,"}, {"sha": "3d4e05b335d1c42bd0344723d0b64930feb2127b", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "removed", "additions": 0, "deletions": 621, "changes": 621, "blob_url": "https://github.com/rust-lang/rust/blob/32ded577797fe4a3691e751ecf59b74c6160c47c/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32ded577797fe4a3691e751ecf59b74c6160c47c/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=32ded577797fe4a3691e751ecf59b74c6160c47c", "patch": "@@ -1,621 +0,0 @@\n-// This file was generated by `cargo dev update_lints`.\n-// Use that command to update this file and do not edit by hand.\n-// Manual edits will be overwritten.\n-\n-store.register_lints(&[\n-    #[cfg(feature = \"internal\")]\n-    utils::internal_lints::clippy_lints_internal::CLIPPY_LINTS_INTERNAL,\n-    #[cfg(feature = \"internal\")]\n-    utils::internal_lints::collapsible_calls::COLLAPSIBLE_SPAN_LINT_CALLS,\n-    #[cfg(feature = \"internal\")]\n-    utils::internal_lints::compiler_lint_functions::COMPILER_LINT_FUNCTIONS,\n-    #[cfg(feature = \"internal\")]\n-    utils::internal_lints::if_chain_style::IF_CHAIN_STYLE,\n-    #[cfg(feature = \"internal\")]\n-    utils::internal_lints::interning_defined_symbol::INTERNING_DEFINED_SYMBOL,\n-    #[cfg(feature = \"internal\")]\n-    utils::internal_lints::interning_defined_symbol::UNNECESSARY_SYMBOL_STR,\n-    #[cfg(feature = \"internal\")]\n-    utils::internal_lints::invalid_paths::INVALID_PATHS,\n-    #[cfg(feature = \"internal\")]\n-    utils::internal_lints::lint_without_lint_pass::DEFAULT_DEPRECATION_REASON,\n-    #[cfg(feature = \"internal\")]\n-    utils::internal_lints::lint_without_lint_pass::DEFAULT_LINT,\n-    #[cfg(feature = \"internal\")]\n-    utils::internal_lints::lint_without_lint_pass::INVALID_CLIPPY_VERSION_ATTRIBUTE,\n-    #[cfg(feature = \"internal\")]\n-    utils::internal_lints::lint_without_lint_pass::LINT_WITHOUT_LINT_PASS,\n-    #[cfg(feature = \"internal\")]\n-    utils::internal_lints::lint_without_lint_pass::MISSING_CLIPPY_VERSION_ATTRIBUTE,\n-    #[cfg(feature = \"internal\")]\n-    utils::internal_lints::msrv_attr_impl::MISSING_MSRV_ATTR_IMPL,\n-    #[cfg(feature = \"internal\")]\n-    utils::internal_lints::outer_expn_data_pass::OUTER_EXPN_EXPN_DATA,\n-    #[cfg(feature = \"internal\")]\n-    utils::internal_lints::produce_ice::PRODUCE_ICE,\n-    #[cfg(feature = \"internal\")]\n-    utils::internal_lints::unnecessary_def_path::UNNECESSARY_DEF_PATH,\n-    almost_complete_letter_range::ALMOST_COMPLETE_LETTER_RANGE,\n-    approx_const::APPROX_CONSTANT,\n-    as_conversions::AS_CONVERSIONS,\n-    asm_syntax::INLINE_ASM_X86_ATT_SYNTAX,\n-    asm_syntax::INLINE_ASM_X86_INTEL_SYNTAX,\n-    assertions_on_constants::ASSERTIONS_ON_CONSTANTS,\n-    assertions_on_result_states::ASSERTIONS_ON_RESULT_STATES,\n-    async_yields_async::ASYNC_YIELDS_ASYNC,\n-    attrs::ALLOW_ATTRIBUTES_WITHOUT_REASON,\n-    attrs::BLANKET_CLIPPY_RESTRICTION_LINTS,\n-    attrs::DEPRECATED_CFG_ATTR,\n-    attrs::DEPRECATED_SEMVER,\n-    attrs::EMPTY_LINE_AFTER_OUTER_ATTR,\n-    attrs::INLINE_ALWAYS,\n-    attrs::MISMATCHED_TARGET_OS,\n-    attrs::USELESS_ATTRIBUTE,\n-    await_holding_invalid::AWAIT_HOLDING_INVALID_TYPE,\n-    await_holding_invalid::AWAIT_HOLDING_LOCK,\n-    await_holding_invalid::AWAIT_HOLDING_REFCELL_REF,\n-    blocks_in_if_conditions::BLOCKS_IN_IF_CONDITIONS,\n-    bool_assert_comparison::BOOL_ASSERT_COMPARISON,\n-    bool_to_int_with_if::BOOL_TO_INT_WITH_IF,\n-    booleans::NONMINIMAL_BOOL,\n-    booleans::OVERLY_COMPLEX_BOOL_EXPR,\n-    borrow_deref_ref::BORROW_DEREF_REF,\n-    box_default::BOX_DEFAULT,\n-    cargo::CARGO_COMMON_METADATA,\n-    cargo::MULTIPLE_CRATE_VERSIONS,\n-    cargo::NEGATIVE_FEATURE_NAMES,\n-    cargo::REDUNDANT_FEATURE_NAMES,\n-    cargo::WILDCARD_DEPENDENCIES,\n-    casts::AS_PTR_CAST_MUT,\n-    casts::AS_UNDERSCORE,\n-    casts::BORROW_AS_PTR,\n-    casts::CAST_ABS_TO_UNSIGNED,\n-    casts::CAST_ENUM_CONSTRUCTOR,\n-    casts::CAST_ENUM_TRUNCATION,\n-    casts::CAST_LOSSLESS,\n-    casts::CAST_NAN_TO_INT,\n-    casts::CAST_POSSIBLE_TRUNCATION,\n-    casts::CAST_POSSIBLE_WRAP,\n-    casts::CAST_PRECISION_LOSS,\n-    casts::CAST_PTR_ALIGNMENT,\n-    casts::CAST_REF_TO_MUT,\n-    casts::CAST_SIGN_LOSS,\n-    casts::CAST_SLICE_DIFFERENT_SIZES,\n-    casts::CAST_SLICE_FROM_RAW_PARTS,\n-    casts::CHAR_LIT_AS_U8,\n-    casts::FN_TO_NUMERIC_CAST,\n-    casts::FN_TO_NUMERIC_CAST_ANY,\n-    casts::FN_TO_NUMERIC_CAST_WITH_TRUNCATION,\n-    casts::PTR_AS_PTR,\n-    casts::UNNECESSARY_CAST,\n-    checked_conversions::CHECKED_CONVERSIONS,\n-    cognitive_complexity::COGNITIVE_COMPLEXITY,\n-    collapsible_if::COLLAPSIBLE_ELSE_IF,\n-    collapsible_if::COLLAPSIBLE_IF,\n-    comparison_chain::COMPARISON_CHAIN,\n-    copies::BRANCHES_SHARING_CODE,\n-    copies::IFS_SAME_COND,\n-    copies::IF_SAME_THEN_ELSE,\n-    copies::SAME_FUNCTIONS_IN_IF_CONDITION,\n-    copy_iterator::COPY_ITERATOR,\n-    crate_in_macro_def::CRATE_IN_MACRO_DEF,\n-    create_dir::CREATE_DIR,\n-    dbg_macro::DBG_MACRO,\n-    default::DEFAULT_TRAIT_ACCESS,\n-    default::FIELD_REASSIGN_WITH_DEFAULT,\n-    default_instead_of_iter_empty::DEFAULT_INSTEAD_OF_ITER_EMPTY,\n-    default_numeric_fallback::DEFAULT_NUMERIC_FALLBACK,\n-    default_union_representation::DEFAULT_UNION_REPRESENTATION,\n-    dereference::EXPLICIT_AUTO_DEREF,\n-    dereference::EXPLICIT_DEREF_METHODS,\n-    dereference::NEEDLESS_BORROW,\n-    dereference::REF_BINDING_TO_REFERENCE,\n-    derivable_impls::DERIVABLE_IMPLS,\n-    derive::DERIVE_HASH_XOR_EQ,\n-    derive::DERIVE_ORD_XOR_PARTIAL_ORD,\n-    derive::DERIVE_PARTIAL_EQ_WITHOUT_EQ,\n-    derive::EXPL_IMPL_CLONE_ON_COPY,\n-    derive::UNSAFE_DERIVE_DESERIALIZE,\n-    disallowed_macros::DISALLOWED_MACROS,\n-    disallowed_methods::DISALLOWED_METHODS,\n-    disallowed_names::DISALLOWED_NAMES,\n-    disallowed_script_idents::DISALLOWED_SCRIPT_IDENTS,\n-    disallowed_types::DISALLOWED_TYPES,\n-    doc::DOC_LINK_WITH_QUOTES,\n-    doc::DOC_MARKDOWN,\n-    doc::MISSING_ERRORS_DOC,\n-    doc::MISSING_PANICS_DOC,\n-    doc::MISSING_SAFETY_DOC,\n-    doc::NEEDLESS_DOCTEST_MAIN,\n-    double_parens::DOUBLE_PARENS,\n-    drop_forget_ref::DROP_COPY,\n-    drop_forget_ref::DROP_NON_DROP,\n-    drop_forget_ref::DROP_REF,\n-    drop_forget_ref::FORGET_COPY,\n-    drop_forget_ref::FORGET_NON_DROP,\n-    drop_forget_ref::FORGET_REF,\n-    drop_forget_ref::UNDROPPED_MANUALLY_DROPS,\n-    duplicate_mod::DUPLICATE_MOD,\n-    else_if_without_else::ELSE_IF_WITHOUT_ELSE,\n-    empty_drop::EMPTY_DROP,\n-    empty_enum::EMPTY_ENUM,\n-    empty_structs_with_brackets::EMPTY_STRUCTS_WITH_BRACKETS,\n-    entry::MAP_ENTRY,\n-    enum_clike::ENUM_CLIKE_UNPORTABLE_VARIANT,\n-    enum_variants::ENUM_VARIANT_NAMES,\n-    enum_variants::MODULE_INCEPTION,\n-    enum_variants::MODULE_NAME_REPETITIONS,\n-    equatable_if_let::EQUATABLE_IF_LET,\n-    escape::BOXED_LOCAL,\n-    eta_reduction::REDUNDANT_CLOSURE,\n-    eta_reduction::REDUNDANT_CLOSURE_FOR_METHOD_CALLS,\n-    excessive_bools::FN_PARAMS_EXCESSIVE_BOOLS,\n-    excessive_bools::STRUCT_EXCESSIVE_BOOLS,\n-    exhaustive_items::EXHAUSTIVE_ENUMS,\n-    exhaustive_items::EXHAUSTIVE_STRUCTS,\n-    exit::EXIT,\n-    explicit_write::EXPLICIT_WRITE,\n-    fallible_impl_from::FALLIBLE_IMPL_FROM,\n-    float_literal::EXCESSIVE_PRECISION,\n-    float_literal::LOSSY_FLOAT_LITERAL,\n-    floating_point_arithmetic::IMPRECISE_FLOPS,\n-    floating_point_arithmetic::SUBOPTIMAL_FLOPS,\n-    format::USELESS_FORMAT,\n-    format_args::FORMAT_IN_FORMAT_ARGS,\n-    format_args::TO_STRING_IN_FORMAT_ARGS,\n-    format_args::UNINLINED_FORMAT_ARGS,\n-    format_args::UNUSED_FORMAT_SPECS,\n-    format_impl::PRINT_IN_FORMAT_IMPL,\n-    format_impl::RECURSIVE_FORMAT_IMPL,\n-    format_push_string::FORMAT_PUSH_STRING,\n-    formatting::POSSIBLE_MISSING_COMMA,\n-    formatting::SUSPICIOUS_ASSIGNMENT_FORMATTING,\n-    formatting::SUSPICIOUS_ELSE_FORMATTING,\n-    formatting::SUSPICIOUS_UNARY_OP_FORMATTING,\n-    from_over_into::FROM_OVER_INTO,\n-    from_str_radix_10::FROM_STR_RADIX_10,\n-    functions::DOUBLE_MUST_USE,\n-    functions::MUST_USE_CANDIDATE,\n-    functions::MUST_USE_UNIT,\n-    functions::NOT_UNSAFE_PTR_ARG_DEREF,\n-    functions::RESULT_LARGE_ERR,\n-    functions::RESULT_UNIT_ERR,\n-    functions::TOO_MANY_ARGUMENTS,\n-    functions::TOO_MANY_LINES,\n-    future_not_send::FUTURE_NOT_SEND,\n-    if_let_mutex::IF_LET_MUTEX,\n-    if_not_else::IF_NOT_ELSE,\n-    if_then_some_else_none::IF_THEN_SOME_ELSE_NONE,\n-    implicit_hasher::IMPLICIT_HASHER,\n-    implicit_return::IMPLICIT_RETURN,\n-    implicit_saturating_add::IMPLICIT_SATURATING_ADD,\n-    implicit_saturating_sub::IMPLICIT_SATURATING_SUB,\n-    inconsistent_struct_constructor::INCONSISTENT_STRUCT_CONSTRUCTOR,\n-    index_refutable_slice::INDEX_REFUTABLE_SLICE,\n-    indexing_slicing::INDEXING_SLICING,\n-    indexing_slicing::OUT_OF_BOUNDS_INDEXING,\n-    infinite_iter::INFINITE_ITER,\n-    infinite_iter::MAYBE_INFINITE_ITER,\n-    inherent_impl::MULTIPLE_INHERENT_IMPL,\n-    inherent_to_string::INHERENT_TO_STRING,\n-    inherent_to_string::INHERENT_TO_STRING_SHADOW_DISPLAY,\n-    init_numbered_fields::INIT_NUMBERED_FIELDS,\n-    inline_fn_without_body::INLINE_FN_WITHOUT_BODY,\n-    int_plus_one::INT_PLUS_ONE,\n-    invalid_upcast_comparisons::INVALID_UPCAST_COMPARISONS,\n-    invalid_utf8_in_unchecked::INVALID_UTF8_IN_UNCHECKED,\n-    items_after_statements::ITEMS_AFTER_STATEMENTS,\n-    iter_not_returning_iterator::ITER_NOT_RETURNING_ITERATOR,\n-    large_const_arrays::LARGE_CONST_ARRAYS,\n-    large_enum_variant::LARGE_ENUM_VARIANT,\n-    large_include_file::LARGE_INCLUDE_FILE,\n-    large_stack_arrays::LARGE_STACK_ARRAYS,\n-    len_zero::COMPARISON_TO_EMPTY,\n-    len_zero::LEN_WITHOUT_IS_EMPTY,\n-    len_zero::LEN_ZERO,\n-    let_if_seq::USELESS_LET_IF_SEQ,\n-    let_underscore::LET_UNDERSCORE_DROP,\n-    let_underscore::LET_UNDERSCORE_LOCK,\n-    let_underscore::LET_UNDERSCORE_MUST_USE,\n-    lifetimes::EXTRA_UNUSED_LIFETIMES,\n-    lifetimes::NEEDLESS_LIFETIMES,\n-    literal_representation::DECIMAL_LITERAL_REPRESENTATION,\n-    literal_representation::INCONSISTENT_DIGIT_GROUPING,\n-    literal_representation::LARGE_DIGIT_GROUPS,\n-    literal_representation::MISTYPED_LITERAL_SUFFIXES,\n-    literal_representation::UNREADABLE_LITERAL,\n-    literal_representation::UNUSUAL_BYTE_GROUPINGS,\n-    loops::EMPTY_LOOP,\n-    loops::EXPLICIT_COUNTER_LOOP,\n-    loops::EXPLICIT_INTO_ITER_LOOP,\n-    loops::EXPLICIT_ITER_LOOP,\n-    loops::FOR_KV_MAP,\n-    loops::ITER_NEXT_LOOP,\n-    loops::MANUAL_FIND,\n-    loops::MANUAL_FLATTEN,\n-    loops::MANUAL_MEMCPY,\n-    loops::MISSING_SPIN_LOOP,\n-    loops::MUT_RANGE_BOUND,\n-    loops::NEEDLESS_COLLECT,\n-    loops::NEEDLESS_RANGE_LOOP,\n-    loops::NEVER_LOOP,\n-    loops::SAME_ITEM_PUSH,\n-    loops::SINGLE_ELEMENT_LOOP,\n-    loops::WHILE_IMMUTABLE_CONDITION,\n-    loops::WHILE_LET_LOOP,\n-    loops::WHILE_LET_ON_ITERATOR,\n-    macro_use::MACRO_USE_IMPORTS,\n-    main_recursion::MAIN_RECURSION,\n-    manual_assert::MANUAL_ASSERT,\n-    manual_async_fn::MANUAL_ASYNC_FN,\n-    manual_bits::MANUAL_BITS,\n-    manual_clamp::MANUAL_CLAMP,\n-    manual_instant_elapsed::MANUAL_INSTANT_ELAPSED,\n-    manual_non_exhaustive::MANUAL_NON_EXHAUSTIVE,\n-    manual_rem_euclid::MANUAL_REM_EUCLID,\n-    manual_retain::MANUAL_RETAIN,\n-    manual_string_new::MANUAL_STRING_NEW,\n-    manual_strip::MANUAL_STRIP,\n-    map_unit_fn::OPTION_MAP_UNIT_FN,\n-    map_unit_fn::RESULT_MAP_UNIT_FN,\n-    match_result_ok::MATCH_RESULT_OK,\n-    matches::COLLAPSIBLE_MATCH,\n-    matches::INFALLIBLE_DESTRUCTURING_MATCH,\n-    matches::MANUAL_FILTER,\n-    matches::MANUAL_MAP,\n-    matches::MANUAL_UNWRAP_OR,\n-    matches::MATCH_AS_REF,\n-    matches::MATCH_BOOL,\n-    matches::MATCH_LIKE_MATCHES_MACRO,\n-    matches::MATCH_ON_VEC_ITEMS,\n-    matches::MATCH_OVERLAPPING_ARM,\n-    matches::MATCH_REF_PATS,\n-    matches::MATCH_SAME_ARMS,\n-    matches::MATCH_SINGLE_BINDING,\n-    matches::MATCH_STR_CASE_MISMATCH,\n-    matches::MATCH_WILDCARD_FOR_SINGLE_VARIANTS,\n-    matches::MATCH_WILD_ERR_ARM,\n-    matches::NEEDLESS_MATCH,\n-    matches::REDUNDANT_PATTERN_MATCHING,\n-    matches::REST_PAT_IN_FULLY_BOUND_STRUCTS,\n-    matches::SIGNIFICANT_DROP_IN_SCRUTINEE,\n-    matches::SINGLE_MATCH,\n-    matches::SINGLE_MATCH_ELSE,\n-    matches::TRY_ERR,\n-    matches::WILDCARD_ENUM_MATCH_ARM,\n-    matches::WILDCARD_IN_OR_PATTERNS,\n-    mem_forget::MEM_FORGET,\n-    mem_replace::MEM_REPLACE_OPTION_WITH_NONE,\n-    mem_replace::MEM_REPLACE_WITH_DEFAULT,\n-    mem_replace::MEM_REPLACE_WITH_UNINIT,\n-    methods::BIND_INSTEAD_OF_MAP,\n-    methods::BYTES_COUNT_TO_LEN,\n-    methods::BYTES_NTH,\n-    methods::CASE_SENSITIVE_FILE_EXTENSION_COMPARISONS,\n-    methods::CHARS_LAST_CMP,\n-    methods::CHARS_NEXT_CMP,\n-    methods::CLONED_INSTEAD_OF_COPIED,\n-    methods::CLONE_DOUBLE_REF,\n-    methods::CLONE_ON_COPY,\n-    methods::CLONE_ON_REF_PTR,\n-    methods::COLLAPSIBLE_STR_REPLACE,\n-    methods::ERR_EXPECT,\n-    methods::EXPECT_FUN_CALL,\n-    methods::EXPECT_USED,\n-    methods::EXTEND_WITH_DRAIN,\n-    methods::FILETYPE_IS_FILE,\n-    methods::FILTER_MAP_IDENTITY,\n-    methods::FILTER_MAP_NEXT,\n-    methods::FILTER_NEXT,\n-    methods::FLAT_MAP_IDENTITY,\n-    methods::FLAT_MAP_OPTION,\n-    methods::FROM_ITER_INSTEAD_OF_COLLECT,\n-    methods::GET_FIRST,\n-    methods::GET_LAST_WITH_LEN,\n-    methods::GET_UNWRAP,\n-    methods::IMPLICIT_CLONE,\n-    methods::INEFFICIENT_TO_STRING,\n-    methods::INSPECT_FOR_EACH,\n-    methods::INTO_ITER_ON_REF,\n-    methods::IS_DIGIT_ASCII_RADIX,\n-    methods::ITERATOR_STEP_BY_ZERO,\n-    methods::ITER_CLONED_COLLECT,\n-    methods::ITER_COUNT,\n-    methods::ITER_KV_MAP,\n-    methods::ITER_NEXT_SLICE,\n-    methods::ITER_NTH,\n-    methods::ITER_NTH_ZERO,\n-    methods::ITER_ON_EMPTY_COLLECTIONS,\n-    methods::ITER_ON_SINGLE_ITEMS,\n-    methods::ITER_OVEREAGER_CLONED,\n-    methods::ITER_SKIP_NEXT,\n-    methods::ITER_WITH_DRAIN,\n-    methods::MANUAL_FILTER_MAP,\n-    methods::MANUAL_FIND_MAP,\n-    methods::MANUAL_OK_OR,\n-    methods::MANUAL_SATURATING_ARITHMETIC,\n-    methods::MANUAL_SPLIT_ONCE,\n-    methods::MANUAL_STR_REPEAT,\n-    methods::MAP_CLONE,\n-    methods::MAP_COLLECT_RESULT_UNIT,\n-    methods::MAP_ERR_IGNORE,\n-    methods::MAP_FLATTEN,\n-    methods::MAP_IDENTITY,\n-    methods::MAP_UNWRAP_OR,\n-    methods::MUT_MUTEX_LOCK,\n-    methods::NAIVE_BYTECOUNT,\n-    methods::NEEDLESS_OPTION_AS_DEREF,\n-    methods::NEEDLESS_OPTION_TAKE,\n-    methods::NEEDLESS_SPLITN,\n-    methods::NEW_RET_NO_SELF,\n-    methods::NONSENSICAL_OPEN_OPTIONS,\n-    methods::NO_EFFECT_REPLACE,\n-    methods::OBFUSCATED_IF_ELSE,\n-    methods::OK_EXPECT,\n-    methods::OPTION_AS_REF_DEREF,\n-    methods::OPTION_FILTER_MAP,\n-    methods::OPTION_MAP_OR_NONE,\n-    methods::OR_FUN_CALL,\n-    methods::OR_THEN_UNWRAP,\n-    methods::PATH_BUF_PUSH_OVERWRITE,\n-    methods::RANGE_ZIP_WITH_LEN,\n-    methods::REPEAT_ONCE,\n-    methods::RESULT_MAP_OR_INTO_OPTION,\n-    methods::SEARCH_IS_SOME,\n-    methods::SHOULD_IMPLEMENT_TRAIT,\n-    methods::SINGLE_CHAR_ADD_STR,\n-    methods::SINGLE_CHAR_PATTERN,\n-    methods::SKIP_WHILE_NEXT,\n-    methods::STABLE_SORT_PRIMITIVE,\n-    methods::STRING_EXTEND_CHARS,\n-    methods::SUSPICIOUS_MAP,\n-    methods::SUSPICIOUS_SPLITN,\n-    methods::SUSPICIOUS_TO_OWNED,\n-    methods::UNINIT_ASSUMED_INIT,\n-    methods::UNIT_HASH,\n-    methods::UNNECESSARY_FILTER_MAP,\n-    methods::UNNECESSARY_FIND_MAP,\n-    methods::UNNECESSARY_FOLD,\n-    methods::UNNECESSARY_JOIN,\n-    methods::UNNECESSARY_LAZY_EVALUATIONS,\n-    methods::UNNECESSARY_SORT_BY,\n-    methods::UNNECESSARY_TO_OWNED,\n-    methods::UNWRAP_OR_ELSE_DEFAULT,\n-    methods::UNWRAP_USED,\n-    methods::USELESS_ASREF,\n-    methods::VEC_RESIZE_TO_ZERO,\n-    methods::VERBOSE_FILE_READS,\n-    methods::WRONG_SELF_CONVENTION,\n-    methods::ZST_OFFSET,\n-    minmax::MIN_MAX,\n-    misc::SHORT_CIRCUIT_STATEMENT,\n-    misc::TOPLEVEL_REF_ARG,\n-    misc::USED_UNDERSCORE_BINDING,\n-    misc::ZERO_PTR,\n-    misc_early::BUILTIN_TYPE_SHADOW,\n-    misc_early::DOUBLE_NEG,\n-    misc_early::DUPLICATE_UNDERSCORE_ARGUMENT,\n-    misc_early::MIXED_CASE_HEX_LITERALS,\n-    misc_early::REDUNDANT_PATTERN,\n-    misc_early::SEPARATED_LITERAL_SUFFIX,\n-    misc_early::UNNEEDED_FIELD_PATTERN,\n-    misc_early::UNNEEDED_WILDCARD_PATTERN,\n-    misc_early::UNSEPARATED_LITERAL_SUFFIX,\n-    misc_early::ZERO_PREFIXED_LITERAL,\n-    mismatching_type_param_order::MISMATCHING_TYPE_PARAM_ORDER,\n-    missing_const_for_fn::MISSING_CONST_FOR_FN,\n-    missing_doc::MISSING_DOCS_IN_PRIVATE_ITEMS,\n-    missing_enforced_import_rename::MISSING_ENFORCED_IMPORT_RENAMES,\n-    missing_inline::MISSING_INLINE_IN_PUBLIC_ITEMS,\n-    missing_trait_methods::MISSING_TRAIT_METHODS,\n-    mixed_read_write_in_expression::DIVERGING_SUB_EXPRESSION,\n-    mixed_read_write_in_expression::MIXED_READ_WRITE_IN_EXPRESSION,\n-    module_style::MOD_MODULE_FILES,\n-    module_style::SELF_NAMED_MODULE_FILES,\n-    multi_assignments::MULTI_ASSIGNMENTS,\n-    mut_key::MUTABLE_KEY_TYPE,\n-    mut_mut::MUT_MUT,\n-    mut_reference::UNNECESSARY_MUT_PASSED,\n-    mutable_debug_assertion::DEBUG_ASSERT_WITH_MUT_CALL,\n-    mutex_atomic::MUTEX_ATOMIC,\n-    mutex_atomic::MUTEX_INTEGER,\n-    needless_arbitrary_self_type::NEEDLESS_ARBITRARY_SELF_TYPE,\n-    needless_bool::BOOL_COMPARISON,\n-    needless_bool::NEEDLESS_BOOL,\n-    needless_borrowed_ref::NEEDLESS_BORROWED_REFERENCE,\n-    needless_continue::NEEDLESS_CONTINUE,\n-    needless_for_each::NEEDLESS_FOR_EACH,\n-    needless_late_init::NEEDLESS_LATE_INIT,\n-    needless_parens_on_range_literals::NEEDLESS_PARENS_ON_RANGE_LITERALS,\n-    needless_pass_by_value::NEEDLESS_PASS_BY_VALUE,\n-    needless_question_mark::NEEDLESS_QUESTION_MARK,\n-    needless_update::NEEDLESS_UPDATE,\n-    neg_cmp_op_on_partial_ord::NEG_CMP_OP_ON_PARTIAL_ORD,\n-    neg_multiply::NEG_MULTIPLY,\n-    new_without_default::NEW_WITHOUT_DEFAULT,\n-    no_effect::NO_EFFECT,\n-    no_effect::NO_EFFECT_UNDERSCORE_BINDING,\n-    no_effect::UNNECESSARY_OPERATION,\n-    non_copy_const::BORROW_INTERIOR_MUTABLE_CONST,\n-    non_copy_const::DECLARE_INTERIOR_MUTABLE_CONST,\n-    non_expressive_names::JUST_UNDERSCORES_AND_DIGITS,\n-    non_expressive_names::MANY_SINGLE_CHAR_NAMES,\n-    non_expressive_names::SIMILAR_NAMES,\n-    non_octal_unix_permissions::NON_OCTAL_UNIX_PERMISSIONS,\n-    non_send_fields_in_send_ty::NON_SEND_FIELDS_IN_SEND_TY,\n-    nonstandard_macro_braces::NONSTANDARD_MACRO_BRACES,\n-    octal_escapes::OCTAL_ESCAPES,\n-    only_used_in_recursion::ONLY_USED_IN_RECURSION,\n-    operators::ABSURD_EXTREME_COMPARISONS,\n-    operators::ARITHMETIC_SIDE_EFFECTS,\n-    operators::ASSIGN_OP_PATTERN,\n-    operators::BAD_BIT_MASK,\n-    operators::CMP_NAN,\n-    operators::CMP_OWNED,\n-    operators::DOUBLE_COMPARISONS,\n-    operators::DURATION_SUBSEC,\n-    operators::EQ_OP,\n-    operators::ERASING_OP,\n-    operators::FLOAT_ARITHMETIC,\n-    operators::FLOAT_CMP,\n-    operators::FLOAT_CMP_CONST,\n-    operators::FLOAT_EQUALITY_WITHOUT_ABS,\n-    operators::IDENTITY_OP,\n-    operators::INEFFECTIVE_BIT_MASK,\n-    operators::INTEGER_ARITHMETIC,\n-    operators::INTEGER_DIVISION,\n-    operators::MISREFACTORED_ASSIGN_OP,\n-    operators::MODULO_ARITHMETIC,\n-    operators::MODULO_ONE,\n-    operators::NEEDLESS_BITWISE_BOOL,\n-    operators::OP_REF,\n-    operators::PTR_EQ,\n-    operators::SELF_ASSIGNMENT,\n-    operators::VERBOSE_BIT_MASK,\n-    option_env_unwrap::OPTION_ENV_UNWRAP,\n-    option_if_let_else::OPTION_IF_LET_ELSE,\n-    overflow_check_conditional::OVERFLOW_CHECK_CONDITIONAL,\n-    panic_in_result_fn::PANIC_IN_RESULT_FN,\n-    panic_unimplemented::PANIC,\n-    panic_unimplemented::TODO,\n-    panic_unimplemented::UNIMPLEMENTED,\n-    panic_unimplemented::UNREACHABLE,\n-    partial_pub_fields::PARTIAL_PUB_FIELDS,\n-    partialeq_ne_impl::PARTIALEQ_NE_IMPL,\n-    partialeq_to_none::PARTIALEQ_TO_NONE,\n-    pass_by_ref_or_value::LARGE_TYPES_PASSED_BY_VALUE,\n-    pass_by_ref_or_value::TRIVIALLY_COPY_PASS_BY_REF,\n-    pattern_type_mismatch::PATTERN_TYPE_MISMATCH,\n-    precedence::PRECEDENCE,\n-    ptr::CMP_NULL,\n-    ptr::INVALID_NULL_PTR_USAGE,\n-    ptr::MUT_FROM_REF,\n-    ptr::PTR_ARG,\n-    ptr_offset_with_cast::PTR_OFFSET_WITH_CAST,\n-    pub_use::PUB_USE,\n-    question_mark::QUESTION_MARK,\n-    ranges::MANUAL_RANGE_CONTAINS,\n-    ranges::RANGE_MINUS_ONE,\n-    ranges::RANGE_PLUS_ONE,\n-    ranges::REVERSED_EMPTY_RANGES,\n-    rc_clone_in_vec_init::RC_CLONE_IN_VEC_INIT,\n-    read_zero_byte_vec::READ_ZERO_BYTE_VEC,\n-    redundant_clone::REDUNDANT_CLONE,\n-    redundant_closure_call::REDUNDANT_CLOSURE_CALL,\n-    redundant_else::REDUNDANT_ELSE,\n-    redundant_field_names::REDUNDANT_FIELD_NAMES,\n-    redundant_pub_crate::REDUNDANT_PUB_CRATE,\n-    redundant_slicing::DEREF_BY_SLICING,\n-    redundant_slicing::REDUNDANT_SLICING,\n-    redundant_static_lifetimes::REDUNDANT_STATIC_LIFETIMES,\n-    ref_option_ref::REF_OPTION_REF,\n-    reference::DEREF_ADDROF,\n-    regex::INVALID_REGEX,\n-    regex::TRIVIAL_REGEX,\n-    return_self_not_must_use::RETURN_SELF_NOT_MUST_USE,\n-    returns::LET_AND_RETURN,\n-    returns::NEEDLESS_RETURN,\n-    same_name_method::SAME_NAME_METHOD,\n-    self_named_constructors::SELF_NAMED_CONSTRUCTORS,\n-    semicolon_if_nothing_returned::SEMICOLON_IF_NOTHING_RETURNED,\n-    serde_api::SERDE_API_MISUSE,\n-    shadow::SHADOW_REUSE,\n-    shadow::SHADOW_SAME,\n-    shadow::SHADOW_UNRELATED,\n-    single_char_lifetime_names::SINGLE_CHAR_LIFETIME_NAMES,\n-    single_component_path_imports::SINGLE_COMPONENT_PATH_IMPORTS,\n-    size_of_in_element_count::SIZE_OF_IN_ELEMENT_COUNT,\n-    slow_vector_initialization::SLOW_VECTOR_INITIALIZATION,\n-    std_instead_of_core::ALLOC_INSTEAD_OF_CORE,\n-    std_instead_of_core::STD_INSTEAD_OF_ALLOC,\n-    std_instead_of_core::STD_INSTEAD_OF_CORE,\n-    strings::STRING_ADD,\n-    strings::STRING_ADD_ASSIGN,\n-    strings::STRING_FROM_UTF8_AS_BYTES,\n-    strings::STRING_LIT_AS_BYTES,\n-    strings::STRING_SLICE,\n-    strings::STRING_TO_STRING,\n-    strings::STR_TO_STRING,\n-    strings::TRIM_SPLIT_WHITESPACE,\n-    strlen_on_c_strings::STRLEN_ON_C_STRINGS,\n-    suspicious_operation_groupings::SUSPICIOUS_OPERATION_GROUPINGS,\n-    suspicious_trait_impl::SUSPICIOUS_ARITHMETIC_IMPL,\n-    suspicious_trait_impl::SUSPICIOUS_OP_ASSIGN_IMPL,\n-    suspicious_xor_used_as_pow::SUSPICIOUS_XOR_USED_AS_POW,\n-    swap::ALMOST_SWAPPED,\n-    swap::MANUAL_SWAP,\n-    swap_ptr_to_ref::SWAP_PTR_TO_REF,\n-    tabs_in_doc_comments::TABS_IN_DOC_COMMENTS,\n-    temporary_assignment::TEMPORARY_ASSIGNMENT,\n-    to_digit_is_some::TO_DIGIT_IS_SOME,\n-    trailing_empty_array::TRAILING_EMPTY_ARRAY,\n-    trait_bounds::TRAIT_DUPLICATION_IN_BOUNDS,\n-    trait_bounds::TYPE_REPETITION_IN_BOUNDS,\n-    transmute::CROSSPOINTER_TRANSMUTE,\n-    transmute::TRANSMUTES_EXPRESSIBLE_AS_PTR_CASTS,\n-    transmute::TRANSMUTE_BYTES_TO_STR,\n-    transmute::TRANSMUTE_FLOAT_TO_INT,\n-    transmute::TRANSMUTE_INT_TO_BOOL,\n-    transmute::TRANSMUTE_INT_TO_CHAR,\n-    transmute::TRANSMUTE_INT_TO_FLOAT,\n-    transmute::TRANSMUTE_NUM_TO_BYTES,\n-    transmute::TRANSMUTE_PTR_TO_PTR,\n-    transmute::TRANSMUTE_PTR_TO_REF,\n-    transmute::TRANSMUTE_UNDEFINED_REPR,\n-    transmute::TRANSMUTING_NULL,\n-    transmute::UNSOUND_COLLECTION_TRANSMUTE,\n-    transmute::USELESS_TRANSMUTE,\n-    transmute::WRONG_TRANSMUTE,\n-    types::BORROWED_BOX,\n-    types::BOX_COLLECTION,\n-    types::LINKEDLIST,\n-    types::OPTION_OPTION,\n-    types::RC_BUFFER,\n-    types::RC_MUTEX,\n-    types::REDUNDANT_ALLOCATION,\n-    types::TYPE_COMPLEXITY,\n-    types::VEC_BOX,\n-    undocumented_unsafe_blocks::UNDOCUMENTED_UNSAFE_BLOCKS,\n-    unicode::INVISIBLE_CHARACTERS,\n-    unicode::NON_ASCII_LITERAL,\n-    unicode::UNICODE_NOT_NFC,\n-    uninit_vec::UNINIT_VEC,\n-    unit_return_expecting_ord::UNIT_RETURN_EXPECTING_ORD,\n-    unit_types::LET_UNIT_VALUE,\n-    unit_types::UNIT_ARG,\n-    unit_types::UNIT_CMP,\n-    unnamed_address::FN_ADDRESS_COMPARISONS,\n-    unnamed_address::VTABLE_ADDRESS_COMPARISONS,\n-    unnecessary_owned_empty_strings::UNNECESSARY_OWNED_EMPTY_STRINGS,\n-    unnecessary_self_imports::UNNECESSARY_SELF_IMPORTS,\n-    unnecessary_wraps::UNNECESSARY_WRAPS,\n-    unnested_or_patterns::UNNESTED_OR_PATTERNS,\n-    unsafe_removed_from_name::UNSAFE_REMOVED_FROM_NAME,\n-    unused_async::UNUSED_ASYNC,\n-    unused_io_amount::UNUSED_IO_AMOUNT,\n-    unused_peekable::UNUSED_PEEKABLE,\n-    unused_rounding::UNUSED_ROUNDING,\n-    unused_self::UNUSED_SELF,\n-    unused_unit::UNUSED_UNIT,\n-    unwrap::PANICKING_UNWRAP,\n-    unwrap::UNNECESSARY_UNWRAP,\n-    unwrap_in_result::UNWRAP_IN_RESULT,\n-    upper_case_acronyms::UPPER_CASE_ACRONYMS,\n-    use_self::USE_SELF,\n-    useless_conversion::USELESS_CONVERSION,\n-    vec::USELESS_VEC,\n-    vec_init_then_push::VEC_INIT_THEN_PUSH,\n-    wildcard_imports::ENUM_GLOB_USE,\n-    wildcard_imports::WILDCARD_IMPORTS,\n-    write::PRINTLN_EMPTY_STRING,\n-    write::PRINT_LITERAL,\n-    write::PRINT_STDERR,\n-    write::PRINT_STDOUT,\n-    write::PRINT_WITH_NEWLINE,\n-    write::USE_DEBUG,\n-    write::WRITELN_EMPTY_STRING,\n-    write::WRITE_LITERAL,\n-    write::WRITE_WITH_NEWLINE,\n-    zero_div_zero::ZERO_DIVIDED_BY_ZERO,\n-    zero_sized_map_values::ZERO_SIZED_MAP_VALUES,\n-])"}, {"sha": "aa82966f8e520393c19f7381b76331df2bee9a15", "filename": "clippy_lints/src/lib.register_restriction.rs", "status": "removed", "additions": 0, "deletions": 91, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/32ded577797fe4a3691e751ecf59b74c6160c47c/clippy_lints%2Fsrc%2Flib.register_restriction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32ded577797fe4a3691e751ecf59b74c6160c47c/clippy_lints%2Fsrc%2Flib.register_restriction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_restriction.rs?ref=32ded577797fe4a3691e751ecf59b74c6160c47c", "patch": "@@ -1,91 +0,0 @@\n-// This file was generated by `cargo dev update_lints`.\n-// Use that command to update this file and do not edit by hand.\n-// Manual edits will be overwritten.\n-\n-store.register_group(true, \"clippy::restriction\", Some(\"clippy_restriction\"), vec![\n-    LintId::of(as_conversions::AS_CONVERSIONS),\n-    LintId::of(asm_syntax::INLINE_ASM_X86_ATT_SYNTAX),\n-    LintId::of(asm_syntax::INLINE_ASM_X86_INTEL_SYNTAX),\n-    LintId::of(assertions_on_result_states::ASSERTIONS_ON_RESULT_STATES),\n-    LintId::of(attrs::ALLOW_ATTRIBUTES_WITHOUT_REASON),\n-    LintId::of(casts::AS_UNDERSCORE),\n-    LintId::of(casts::FN_TO_NUMERIC_CAST_ANY),\n-    LintId::of(create_dir::CREATE_DIR),\n-    LintId::of(dbg_macro::DBG_MACRO),\n-    LintId::of(default_numeric_fallback::DEFAULT_NUMERIC_FALLBACK),\n-    LintId::of(default_union_representation::DEFAULT_UNION_REPRESENTATION),\n-    LintId::of(disallowed_script_idents::DISALLOWED_SCRIPT_IDENTS),\n-    LintId::of(else_if_without_else::ELSE_IF_WITHOUT_ELSE),\n-    LintId::of(empty_drop::EMPTY_DROP),\n-    LintId::of(empty_structs_with_brackets::EMPTY_STRUCTS_WITH_BRACKETS),\n-    LintId::of(exhaustive_items::EXHAUSTIVE_ENUMS),\n-    LintId::of(exhaustive_items::EXHAUSTIVE_STRUCTS),\n-    LintId::of(exit::EXIT),\n-    LintId::of(float_literal::LOSSY_FLOAT_LITERAL),\n-    LintId::of(format_push_string::FORMAT_PUSH_STRING),\n-    LintId::of(if_then_some_else_none::IF_THEN_SOME_ELSE_NONE),\n-    LintId::of(implicit_return::IMPLICIT_RETURN),\n-    LintId::of(indexing_slicing::INDEXING_SLICING),\n-    LintId::of(inherent_impl::MULTIPLE_INHERENT_IMPL),\n-    LintId::of(large_include_file::LARGE_INCLUDE_FILE),\n-    LintId::of(let_underscore::LET_UNDERSCORE_MUST_USE),\n-    LintId::of(literal_representation::DECIMAL_LITERAL_REPRESENTATION),\n-    LintId::of(matches::REST_PAT_IN_FULLY_BOUND_STRUCTS),\n-    LintId::of(matches::TRY_ERR),\n-    LintId::of(matches::WILDCARD_ENUM_MATCH_ARM),\n-    LintId::of(mem_forget::MEM_FORGET),\n-    LintId::of(methods::CLONE_ON_REF_PTR),\n-    LintId::of(methods::EXPECT_USED),\n-    LintId::of(methods::FILETYPE_IS_FILE),\n-    LintId::of(methods::GET_UNWRAP),\n-    LintId::of(methods::MAP_ERR_IGNORE),\n-    LintId::of(methods::UNWRAP_USED),\n-    LintId::of(methods::VERBOSE_FILE_READS),\n-    LintId::of(misc_early::SEPARATED_LITERAL_SUFFIX),\n-    LintId::of(misc_early::UNNEEDED_FIELD_PATTERN),\n-    LintId::of(misc_early::UNSEPARATED_LITERAL_SUFFIX),\n-    LintId::of(missing_doc::MISSING_DOCS_IN_PRIVATE_ITEMS),\n-    LintId::of(missing_enforced_import_rename::MISSING_ENFORCED_IMPORT_RENAMES),\n-    LintId::of(missing_inline::MISSING_INLINE_IN_PUBLIC_ITEMS),\n-    LintId::of(missing_trait_methods::MISSING_TRAIT_METHODS),\n-    LintId::of(mixed_read_write_in_expression::MIXED_READ_WRITE_IN_EXPRESSION),\n-    LintId::of(module_style::MOD_MODULE_FILES),\n-    LintId::of(module_style::SELF_NAMED_MODULE_FILES),\n-    LintId::of(operators::ARITHMETIC_SIDE_EFFECTS),\n-    LintId::of(operators::FLOAT_ARITHMETIC),\n-    LintId::of(operators::FLOAT_CMP_CONST),\n-    LintId::of(operators::INTEGER_ARITHMETIC),\n-    LintId::of(operators::INTEGER_DIVISION),\n-    LintId::of(operators::MODULO_ARITHMETIC),\n-    LintId::of(panic_in_result_fn::PANIC_IN_RESULT_FN),\n-    LintId::of(panic_unimplemented::PANIC),\n-    LintId::of(panic_unimplemented::TODO),\n-    LintId::of(panic_unimplemented::UNIMPLEMENTED),\n-    LintId::of(panic_unimplemented::UNREACHABLE),\n-    LintId::of(partial_pub_fields::PARTIAL_PUB_FIELDS),\n-    LintId::of(pattern_type_mismatch::PATTERN_TYPE_MISMATCH),\n-    LintId::of(pub_use::PUB_USE),\n-    LintId::of(redundant_slicing::DEREF_BY_SLICING),\n-    LintId::of(same_name_method::SAME_NAME_METHOD),\n-    LintId::of(shadow::SHADOW_REUSE),\n-    LintId::of(shadow::SHADOW_SAME),\n-    LintId::of(shadow::SHADOW_UNRELATED),\n-    LintId::of(single_char_lifetime_names::SINGLE_CHAR_LIFETIME_NAMES),\n-    LintId::of(std_instead_of_core::ALLOC_INSTEAD_OF_CORE),\n-    LintId::of(std_instead_of_core::STD_INSTEAD_OF_ALLOC),\n-    LintId::of(std_instead_of_core::STD_INSTEAD_OF_CORE),\n-    LintId::of(strings::STRING_ADD),\n-    LintId::of(strings::STRING_SLICE),\n-    LintId::of(strings::STRING_TO_STRING),\n-    LintId::of(strings::STR_TO_STRING),\n-    LintId::of(suspicious_xor_used_as_pow::SUSPICIOUS_XOR_USED_AS_POW),\n-    LintId::of(types::RC_BUFFER),\n-    LintId::of(types::RC_MUTEX),\n-    LintId::of(undocumented_unsafe_blocks::UNDOCUMENTED_UNSAFE_BLOCKS),\n-    LintId::of(unicode::NON_ASCII_LITERAL),\n-    LintId::of(unnecessary_self_imports::UNNECESSARY_SELF_IMPORTS),\n-    LintId::of(unwrap_in_result::UNWRAP_IN_RESULT),\n-    LintId::of(write::PRINT_STDERR),\n-    LintId::of(write::PRINT_STDOUT),\n-    LintId::of(write::USE_DEBUG),\n-])"}, {"sha": "0f46e3f08427ff89719a5428c16a4bd9b701e94a", "filename": "src/docs.rs", "status": "removed", "additions": 0, "deletions": 607, "changes": 607, "blob_url": "https://github.com/rust-lang/rust/blob/32ded577797fe4a3691e751ecf59b74c6160c47c/src%2Fdocs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32ded577797fe4a3691e751ecf59b74c6160c47c/src%2Fdocs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdocs.rs?ref=32ded577797fe4a3691e751ecf59b74c6160c47c", "patch": "@@ -1,607 +0,0 @@\n-// autogenerated. Please look at /clippy_dev/src/update_lints.rs\n-\n-macro_rules! include_lint {\n-    ($file_name: expr) => {\n-        include_str!($file_name)\n-    };\n-}\n-\n-macro_rules! docs {\n-    ($($lint_name: expr,)*) => {\n-        pub fn explain(lint: &str) {\n-            println!(\"{}\", match lint {\n-                $(\n-                    $lint_name => include_lint!(concat!(\"docs/\", concat!($lint_name, \".txt\"))),\n-                )*\n-                _ => \"unknown lint\",\n-            })\n-        }\n-    }\n-}\n-\n-docs! {\n-    \"absurd_extreme_comparisons\",\n-    \"alloc_instead_of_core\",\n-    \"allow_attributes_without_reason\",\n-    \"almost_complete_letter_range\",\n-    \"almost_swapped\",\n-    \"approx_constant\",\n-    \"arithmetic_side_effects\",\n-    \"as_conversions\",\n-    \"as_ptr_cast_mut\",\n-    \"as_underscore\",\n-    \"assertions_on_constants\",\n-    \"assertions_on_result_states\",\n-    \"assign_op_pattern\",\n-    \"async_yields_async\",\n-    \"await_holding_invalid_type\",\n-    \"await_holding_lock\",\n-    \"await_holding_refcell_ref\",\n-    \"bad_bit_mask\",\n-    \"bind_instead_of_map\",\n-    \"blanket_clippy_restriction_lints\",\n-    \"blocks_in_if_conditions\",\n-    \"bool_assert_comparison\",\n-    \"bool_comparison\",\n-    \"bool_to_int_with_if\",\n-    \"borrow_as_ptr\",\n-    \"borrow_deref_ref\",\n-    \"borrow_interior_mutable_const\",\n-    \"borrowed_box\",\n-    \"box_collection\",\n-    \"box_default\",\n-    \"boxed_local\",\n-    \"branches_sharing_code\",\n-    \"builtin_type_shadow\",\n-    \"bytes_count_to_len\",\n-    \"bytes_nth\",\n-    \"cargo_common_metadata\",\n-    \"case_sensitive_file_extension_comparisons\",\n-    \"cast_abs_to_unsigned\",\n-    \"cast_enum_constructor\",\n-    \"cast_enum_truncation\",\n-    \"cast_lossless\",\n-    \"cast_nan_to_int\",\n-    \"cast_possible_truncation\",\n-    \"cast_possible_wrap\",\n-    \"cast_precision_loss\",\n-    \"cast_ptr_alignment\",\n-    \"cast_ref_to_mut\",\n-    \"cast_sign_loss\",\n-    \"cast_slice_different_sizes\",\n-    \"cast_slice_from_raw_parts\",\n-    \"char_lit_as_u8\",\n-    \"chars_last_cmp\",\n-    \"chars_next_cmp\",\n-    \"checked_conversions\",\n-    \"clone_double_ref\",\n-    \"clone_on_copy\",\n-    \"clone_on_ref_ptr\",\n-    \"cloned_instead_of_copied\",\n-    \"cmp_nan\",\n-    \"cmp_null\",\n-    \"cmp_owned\",\n-    \"cognitive_complexity\",\n-    \"collapsible_else_if\",\n-    \"collapsible_if\",\n-    \"collapsible_match\",\n-    \"collapsible_str_replace\",\n-    \"comparison_chain\",\n-    \"comparison_to_empty\",\n-    \"copy_iterator\",\n-    \"crate_in_macro_def\",\n-    \"create_dir\",\n-    \"crosspointer_transmute\",\n-    \"dbg_macro\",\n-    \"debug_assert_with_mut_call\",\n-    \"decimal_literal_representation\",\n-    \"declare_interior_mutable_const\",\n-    \"default_instead_of_iter_empty\",\n-    \"default_numeric_fallback\",\n-    \"default_trait_access\",\n-    \"default_union_representation\",\n-    \"deprecated_cfg_attr\",\n-    \"deprecated_semver\",\n-    \"deref_addrof\",\n-    \"deref_by_slicing\",\n-    \"derivable_impls\",\n-    \"derive_hash_xor_eq\",\n-    \"derive_ord_xor_partial_ord\",\n-    \"derive_partial_eq_without_eq\",\n-    \"disallowed_macros\",\n-    \"disallowed_methods\",\n-    \"disallowed_names\",\n-    \"disallowed_script_idents\",\n-    \"disallowed_types\",\n-    \"diverging_sub_expression\",\n-    \"doc_link_with_quotes\",\n-    \"doc_markdown\",\n-    \"double_comparisons\",\n-    \"double_must_use\",\n-    \"double_neg\",\n-    \"double_parens\",\n-    \"drop_copy\",\n-    \"drop_non_drop\",\n-    \"drop_ref\",\n-    \"duplicate_mod\",\n-    \"duplicate_underscore_argument\",\n-    \"duration_subsec\",\n-    \"else_if_without_else\",\n-    \"empty_drop\",\n-    \"empty_enum\",\n-    \"empty_line_after_outer_attr\",\n-    \"empty_loop\",\n-    \"empty_structs_with_brackets\",\n-    \"enum_clike_unportable_variant\",\n-    \"enum_glob_use\",\n-    \"enum_variant_names\",\n-    \"eq_op\",\n-    \"equatable_if_let\",\n-    \"erasing_op\",\n-    \"err_expect\",\n-    \"excessive_precision\",\n-    \"exhaustive_enums\",\n-    \"exhaustive_structs\",\n-    \"exit\",\n-    \"expect_fun_call\",\n-    \"expect_used\",\n-    \"expl_impl_clone_on_copy\",\n-    \"explicit_auto_deref\",\n-    \"explicit_counter_loop\",\n-    \"explicit_deref_methods\",\n-    \"explicit_into_iter_loop\",\n-    \"explicit_iter_loop\",\n-    \"explicit_write\",\n-    \"extend_with_drain\",\n-    \"extra_unused_lifetimes\",\n-    \"fallible_impl_from\",\n-    \"field_reassign_with_default\",\n-    \"filetype_is_file\",\n-    \"filter_map_identity\",\n-    \"filter_map_next\",\n-    \"filter_next\",\n-    \"flat_map_identity\",\n-    \"flat_map_option\",\n-    \"float_arithmetic\",\n-    \"float_cmp\",\n-    \"float_cmp_const\",\n-    \"float_equality_without_abs\",\n-    \"fn_address_comparisons\",\n-    \"fn_params_excessive_bools\",\n-    \"fn_to_numeric_cast\",\n-    \"fn_to_numeric_cast_any\",\n-    \"fn_to_numeric_cast_with_truncation\",\n-    \"for_kv_map\",\n-    \"forget_copy\",\n-    \"forget_non_drop\",\n-    \"forget_ref\",\n-    \"format_in_format_args\",\n-    \"format_push_string\",\n-    \"from_iter_instead_of_collect\",\n-    \"from_over_into\",\n-    \"from_str_radix_10\",\n-    \"future_not_send\",\n-    \"get_first\",\n-    \"get_last_with_len\",\n-    \"get_unwrap\",\n-    \"identity_op\",\n-    \"if_let_mutex\",\n-    \"if_not_else\",\n-    \"if_same_then_else\",\n-    \"if_then_some_else_none\",\n-    \"ifs_same_cond\",\n-    \"implicit_clone\",\n-    \"implicit_hasher\",\n-    \"implicit_return\",\n-    \"implicit_saturating_add\",\n-    \"implicit_saturating_sub\",\n-    \"imprecise_flops\",\n-    \"inconsistent_digit_grouping\",\n-    \"inconsistent_struct_constructor\",\n-    \"index_refutable_slice\",\n-    \"indexing_slicing\",\n-    \"ineffective_bit_mask\",\n-    \"inefficient_to_string\",\n-    \"infallible_destructuring_match\",\n-    \"infinite_iter\",\n-    \"inherent_to_string\",\n-    \"inherent_to_string_shadow_display\",\n-    \"init_numbered_fields\",\n-    \"inline_always\",\n-    \"inline_asm_x86_att_syntax\",\n-    \"inline_asm_x86_intel_syntax\",\n-    \"inline_fn_without_body\",\n-    \"inspect_for_each\",\n-    \"int_plus_one\",\n-    \"integer_arithmetic\",\n-    \"integer_division\",\n-    \"into_iter_on_ref\",\n-    \"invalid_null_ptr_usage\",\n-    \"invalid_regex\",\n-    \"invalid_upcast_comparisons\",\n-    \"invalid_utf8_in_unchecked\",\n-    \"invisible_characters\",\n-    \"is_digit_ascii_radix\",\n-    \"items_after_statements\",\n-    \"iter_cloned_collect\",\n-    \"iter_count\",\n-    \"iter_kv_map\",\n-    \"iter_next_loop\",\n-    \"iter_next_slice\",\n-    \"iter_not_returning_iterator\",\n-    \"iter_nth\",\n-    \"iter_nth_zero\",\n-    \"iter_on_empty_collections\",\n-    \"iter_on_single_items\",\n-    \"iter_overeager_cloned\",\n-    \"iter_skip_next\",\n-    \"iter_with_drain\",\n-    \"iterator_step_by_zero\",\n-    \"just_underscores_and_digits\",\n-    \"large_const_arrays\",\n-    \"large_digit_groups\",\n-    \"large_enum_variant\",\n-    \"large_include_file\",\n-    \"large_stack_arrays\",\n-    \"large_types_passed_by_value\",\n-    \"len_without_is_empty\",\n-    \"len_zero\",\n-    \"let_and_return\",\n-    \"let_underscore_drop\",\n-    \"let_underscore_lock\",\n-    \"let_underscore_must_use\",\n-    \"let_unit_value\",\n-    \"linkedlist\",\n-    \"lossy_float_literal\",\n-    \"macro_use_imports\",\n-    \"main_recursion\",\n-    \"manual_assert\",\n-    \"manual_async_fn\",\n-    \"manual_bits\",\n-    \"manual_clamp\",\n-    \"manual_filter\",\n-    \"manual_filter_map\",\n-    \"manual_find\",\n-    \"manual_find_map\",\n-    \"manual_flatten\",\n-    \"manual_instant_elapsed\",\n-    \"manual_map\",\n-    \"manual_memcpy\",\n-    \"manual_non_exhaustive\",\n-    \"manual_ok_or\",\n-    \"manual_range_contains\",\n-    \"manual_rem_euclid\",\n-    \"manual_retain\",\n-    \"manual_saturating_arithmetic\",\n-    \"manual_split_once\",\n-    \"manual_str_repeat\",\n-    \"manual_string_new\",\n-    \"manual_strip\",\n-    \"manual_swap\",\n-    \"manual_unwrap_or\",\n-    \"many_single_char_names\",\n-    \"map_clone\",\n-    \"map_collect_result_unit\",\n-    \"map_entry\",\n-    \"map_err_ignore\",\n-    \"map_flatten\",\n-    \"map_identity\",\n-    \"map_unwrap_or\",\n-    \"match_as_ref\",\n-    \"match_bool\",\n-    \"match_like_matches_macro\",\n-    \"match_on_vec_items\",\n-    \"match_overlapping_arm\",\n-    \"match_ref_pats\",\n-    \"match_result_ok\",\n-    \"match_same_arms\",\n-    \"match_single_binding\",\n-    \"match_str_case_mismatch\",\n-    \"match_wild_err_arm\",\n-    \"match_wildcard_for_single_variants\",\n-    \"maybe_infinite_iter\",\n-    \"mem_forget\",\n-    \"mem_replace_option_with_none\",\n-    \"mem_replace_with_default\",\n-    \"mem_replace_with_uninit\",\n-    \"min_max\",\n-    \"mismatched_target_os\",\n-    \"mismatching_type_param_order\",\n-    \"misrefactored_assign_op\",\n-    \"missing_const_for_fn\",\n-    \"missing_docs_in_private_items\",\n-    \"missing_enforced_import_renames\",\n-    \"missing_errors_doc\",\n-    \"missing_inline_in_public_items\",\n-    \"missing_panics_doc\",\n-    \"missing_safety_doc\",\n-    \"missing_spin_loop\",\n-    \"missing_trait_methods\",\n-    \"mistyped_literal_suffixes\",\n-    \"mixed_case_hex_literals\",\n-    \"mixed_read_write_in_expression\",\n-    \"mod_module_files\",\n-    \"module_inception\",\n-    \"module_name_repetitions\",\n-    \"modulo_arithmetic\",\n-    \"modulo_one\",\n-    \"multi_assignments\",\n-    \"multiple_crate_versions\",\n-    \"multiple_inherent_impl\",\n-    \"must_use_candidate\",\n-    \"must_use_unit\",\n-    \"mut_from_ref\",\n-    \"mut_mut\",\n-    \"mut_mutex_lock\",\n-    \"mut_range_bound\",\n-    \"mutable_key_type\",\n-    \"mutex_atomic\",\n-    \"mutex_integer\",\n-    \"naive_bytecount\",\n-    \"needless_arbitrary_self_type\",\n-    \"needless_bitwise_bool\",\n-    \"needless_bool\",\n-    \"needless_borrow\",\n-    \"needless_borrowed_reference\",\n-    \"needless_collect\",\n-    \"needless_continue\",\n-    \"needless_doctest_main\",\n-    \"needless_for_each\",\n-    \"needless_late_init\",\n-    \"needless_lifetimes\",\n-    \"needless_match\",\n-    \"needless_option_as_deref\",\n-    \"needless_option_take\",\n-    \"needless_parens_on_range_literals\",\n-    \"needless_pass_by_value\",\n-    \"needless_question_mark\",\n-    \"needless_range_loop\",\n-    \"needless_return\",\n-    \"needless_splitn\",\n-    \"needless_update\",\n-    \"neg_cmp_op_on_partial_ord\",\n-    \"neg_multiply\",\n-    \"negative_feature_names\",\n-    \"never_loop\",\n-    \"new_ret_no_self\",\n-    \"new_without_default\",\n-    \"no_effect\",\n-    \"no_effect_replace\",\n-    \"no_effect_underscore_binding\",\n-    \"non_ascii_literal\",\n-    \"non_octal_unix_permissions\",\n-    \"non_send_fields_in_send_ty\",\n-    \"nonminimal_bool\",\n-    \"nonsensical_open_options\",\n-    \"nonstandard_macro_braces\",\n-    \"not_unsafe_ptr_arg_deref\",\n-    \"obfuscated_if_else\",\n-    \"octal_escapes\",\n-    \"ok_expect\",\n-    \"only_used_in_recursion\",\n-    \"op_ref\",\n-    \"option_as_ref_deref\",\n-    \"option_env_unwrap\",\n-    \"option_filter_map\",\n-    \"option_if_let_else\",\n-    \"option_map_or_none\",\n-    \"option_map_unit_fn\",\n-    \"option_option\",\n-    \"or_fun_call\",\n-    \"or_then_unwrap\",\n-    \"out_of_bounds_indexing\",\n-    \"overflow_check_conditional\",\n-    \"overly_complex_bool_expr\",\n-    \"panic\",\n-    \"panic_in_result_fn\",\n-    \"panicking_unwrap\",\n-    \"partial_pub_fields\",\n-    \"partialeq_ne_impl\",\n-    \"partialeq_to_none\",\n-    \"path_buf_push_overwrite\",\n-    \"pattern_type_mismatch\",\n-    \"possible_missing_comma\",\n-    \"precedence\",\n-    \"print_in_format_impl\",\n-    \"print_literal\",\n-    \"print_stderr\",\n-    \"print_stdout\",\n-    \"print_with_newline\",\n-    \"println_empty_string\",\n-    \"ptr_arg\",\n-    \"ptr_as_ptr\",\n-    \"ptr_eq\",\n-    \"ptr_offset_with_cast\",\n-    \"pub_use\",\n-    \"question_mark\",\n-    \"range_minus_one\",\n-    \"range_plus_one\",\n-    \"range_zip_with_len\",\n-    \"rc_buffer\",\n-    \"rc_clone_in_vec_init\",\n-    \"rc_mutex\",\n-    \"read_zero_byte_vec\",\n-    \"recursive_format_impl\",\n-    \"redundant_allocation\",\n-    \"redundant_clone\",\n-    \"redundant_closure\",\n-    \"redundant_closure_call\",\n-    \"redundant_closure_for_method_calls\",\n-    \"redundant_else\",\n-    \"redundant_feature_names\",\n-    \"redundant_field_names\",\n-    \"redundant_pattern\",\n-    \"redundant_pattern_matching\",\n-    \"redundant_pub_crate\",\n-    \"redundant_slicing\",\n-    \"redundant_static_lifetimes\",\n-    \"ref_binding_to_reference\",\n-    \"ref_option_ref\",\n-    \"repeat_once\",\n-    \"rest_pat_in_fully_bound_structs\",\n-    \"result_large_err\",\n-    \"result_map_or_into_option\",\n-    \"result_map_unit_fn\",\n-    \"result_unit_err\",\n-    \"return_self_not_must_use\",\n-    \"reversed_empty_ranges\",\n-    \"same_functions_in_if_condition\",\n-    \"same_item_push\",\n-    \"same_name_method\",\n-    \"search_is_some\",\n-    \"self_assignment\",\n-    \"self_named_constructors\",\n-    \"self_named_module_files\",\n-    \"semicolon_if_nothing_returned\",\n-    \"separated_literal_suffix\",\n-    \"serde_api_misuse\",\n-    \"shadow_reuse\",\n-    \"shadow_same\",\n-    \"shadow_unrelated\",\n-    \"short_circuit_statement\",\n-    \"should_implement_trait\",\n-    \"significant_drop_in_scrutinee\",\n-    \"similar_names\",\n-    \"single_char_add_str\",\n-    \"single_char_lifetime_names\",\n-    \"single_char_pattern\",\n-    \"single_component_path_imports\",\n-    \"single_element_loop\",\n-    \"single_match\",\n-    \"single_match_else\",\n-    \"size_of_in_element_count\",\n-    \"skip_while_next\",\n-    \"slow_vector_initialization\",\n-    \"stable_sort_primitive\",\n-    \"std_instead_of_alloc\",\n-    \"std_instead_of_core\",\n-    \"str_to_string\",\n-    \"string_add\",\n-    \"string_add_assign\",\n-    \"string_extend_chars\",\n-    \"string_from_utf8_as_bytes\",\n-    \"string_lit_as_bytes\",\n-    \"string_slice\",\n-    \"string_to_string\",\n-    \"strlen_on_c_strings\",\n-    \"struct_excessive_bools\",\n-    \"suboptimal_flops\",\n-    \"suspicious_arithmetic_impl\",\n-    \"suspicious_assignment_formatting\",\n-    \"suspicious_else_formatting\",\n-    \"suspicious_map\",\n-    \"suspicious_op_assign_impl\",\n-    \"suspicious_operation_groupings\",\n-    \"suspicious_splitn\",\n-    \"suspicious_to_owned\",\n-    \"suspicious_unary_op_formatting\",\n-    \"suspicious_xor_used_as_pow\",\n-    \"swap_ptr_to_ref\",\n-    \"tabs_in_doc_comments\",\n-    \"temporary_assignment\",\n-    \"to_digit_is_some\",\n-    \"to_string_in_format_args\",\n-    \"todo\",\n-    \"too_many_arguments\",\n-    \"too_many_lines\",\n-    \"toplevel_ref_arg\",\n-    \"trailing_empty_array\",\n-    \"trait_duplication_in_bounds\",\n-    \"transmute_bytes_to_str\",\n-    \"transmute_float_to_int\",\n-    \"transmute_int_to_bool\",\n-    \"transmute_int_to_char\",\n-    \"transmute_int_to_float\",\n-    \"transmute_num_to_bytes\",\n-    \"transmute_ptr_to_ptr\",\n-    \"transmute_ptr_to_ref\",\n-    \"transmute_undefined_repr\",\n-    \"transmutes_expressible_as_ptr_casts\",\n-    \"transmuting_null\",\n-    \"trim_split_whitespace\",\n-    \"trivial_regex\",\n-    \"trivially_copy_pass_by_ref\",\n-    \"try_err\",\n-    \"type_complexity\",\n-    \"type_repetition_in_bounds\",\n-    \"undocumented_unsafe_blocks\",\n-    \"undropped_manually_drops\",\n-    \"unicode_not_nfc\",\n-    \"unimplemented\",\n-    \"uninit_assumed_init\",\n-    \"uninit_vec\",\n-    \"uninlined_format_args\",\n-    \"unit_arg\",\n-    \"unit_cmp\",\n-    \"unit_hash\",\n-    \"unit_return_expecting_ord\",\n-    \"unnecessary_cast\",\n-    \"unnecessary_filter_map\",\n-    \"unnecessary_find_map\",\n-    \"unnecessary_fold\",\n-    \"unnecessary_join\",\n-    \"unnecessary_lazy_evaluations\",\n-    \"unnecessary_mut_passed\",\n-    \"unnecessary_operation\",\n-    \"unnecessary_owned_empty_strings\",\n-    \"unnecessary_self_imports\",\n-    \"unnecessary_sort_by\",\n-    \"unnecessary_to_owned\",\n-    \"unnecessary_unwrap\",\n-    \"unnecessary_wraps\",\n-    \"unneeded_field_pattern\",\n-    \"unneeded_wildcard_pattern\",\n-    \"unnested_or_patterns\",\n-    \"unreachable\",\n-    \"unreadable_literal\",\n-    \"unsafe_derive_deserialize\",\n-    \"unsafe_removed_from_name\",\n-    \"unseparated_literal_suffix\",\n-    \"unsound_collection_transmute\",\n-    \"unused_async\",\n-    \"unused_format_specs\",\n-    \"unused_io_amount\",\n-    \"unused_peekable\",\n-    \"unused_rounding\",\n-    \"unused_self\",\n-    \"unused_unit\",\n-    \"unusual_byte_groupings\",\n-    \"unwrap_in_result\",\n-    \"unwrap_or_else_default\",\n-    \"unwrap_used\",\n-    \"upper_case_acronyms\",\n-    \"use_debug\",\n-    \"use_self\",\n-    \"used_underscore_binding\",\n-    \"useless_asref\",\n-    \"useless_attribute\",\n-    \"useless_conversion\",\n-    \"useless_format\",\n-    \"useless_let_if_seq\",\n-    \"useless_transmute\",\n-    \"useless_vec\",\n-    \"vec_box\",\n-    \"vec_init_then_push\",\n-    \"vec_resize_to_zero\",\n-    \"verbose_bit_mask\",\n-    \"verbose_file_reads\",\n-    \"vtable_address_comparisons\",\n-    \"while_immutable_condition\",\n-    \"while_let_loop\",\n-    \"while_let_on_iterator\",\n-    \"wildcard_dependencies\",\n-    \"wildcard_enum_match_arm\",\n-    \"wildcard_imports\",\n-    \"wildcard_in_or_patterns\",\n-    \"write_literal\",\n-    \"write_with_newline\",\n-    \"writeln_empty_string\",\n-    \"wrong_self_convention\",\n-    \"wrong_transmute\",\n-    \"zero_divided_by_zero\",\n-    \"zero_prefixed_literal\",\n-    \"zero_ptr\",\n-    \"zero_sized_map_values\",\n-    \"zst_offset\",\n-\n-}"}, {"sha": "2cae5497f0f5a66da0326cd251be44e0c5874f02", "filename": "src/docs/suspicious_xor_used_as_pow.txt", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/32ded577797fe4a3691e751ecf59b74c6160c47c/src%2Fdocs%2Fsuspicious_xor_used_as_pow.txt", "raw_url": "https://github.com/rust-lang/rust/raw/32ded577797fe4a3691e751ecf59b74c6160c47c/src%2Fdocs%2Fsuspicious_xor_used_as_pow.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdocs%2Fsuspicious_xor_used_as_pow.txt?ref=32ded577797fe4a3691e751ecf59b74c6160c47c", "patch": "@@ -1,12 +0,0 @@\n-### What it does\n-Warns for a Bitwise XOR (`^`) operator being probably confused as a powering. It will not trigger if any of the numbers are not in decimal.\n-### Why is this bad?\n-\tIt's most probably a typo and may lead to unexpected behaviours.\n-### Example\n-```\n-let x = 3_i32 ^ 4_i32;\n-```\n-Use instead:\n-```\n-let x = 3_i32.pow(4);\n-```\n\\ No newline at end of file"}]}