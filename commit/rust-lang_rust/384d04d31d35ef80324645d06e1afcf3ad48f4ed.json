{"sha": "384d04d31d35ef80324645d06e1afcf3ad48f4ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4NGQwNGQzMWQzNWVmODAzMjQ2NDVkMDZlMWFmY2YzYWQ0OGY0ZWQ=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-07-12T13:41:24Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-07-14T05:31:19Z"}, "message": "Reduce the number of clone()s needed in obligation_forest\n\nSome can be avoided by using remove_entry instead of remove.", "tree": {"sha": "a5713d23376be716f80a92549c30e5308f786810", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5713d23376be716f80a92549c30e5308f786810"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/384d04d31d35ef80324645d06e1afcf3ad48f4ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/384d04d31d35ef80324645d06e1afcf3ad48f4ed", "html_url": "https://github.com/rust-lang/rust/commit/384d04d31d35ef80324645d06e1afcf3ad48f4ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/384d04d31d35ef80324645d06e1afcf3ad48f4ed/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d334027c58060449cc45b8e5cc37dd51ca077d30", "url": "https://api.github.com/repos/rust-lang/rust/commits/d334027c58060449cc45b8e5cc37dd51ca077d30", "html_url": "https://github.com/rust-lang/rust/commit/d334027c58060449cc45b8e5cc37dd51ca077d30"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "0d6cf260dcd98978bf18cc33416c906ccb77bb70", "filename": "src/librustc_data_structures/obligation_forest/mod.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/384d04d31d35ef80324645d06e1afcf3ad48f4ed/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/384d04d31d35ef80324645d06e1afcf3ad48f4ed/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs?ref=384d04d31d35ef80324645d06e1afcf3ad48f4ed", "patch": "@@ -496,9 +496,14 @@ impl<O: ForestObligation> ObligationForest<O> {\n                     }\n                 }\n                 NodeState::Done => {\n-                    self.waiting_cache.remove(self.nodes[i].obligation.as_predicate());\n-                    // FIXME(HashMap): why can't I get my key back?\n-                    self.done_cache.insert(self.nodes[i].obligation.as_predicate().clone());\n+                    // Avoid cloning the key (predicate) in case it exists in the waiting cache\n+                    if let Some((predicate, _)) = self.waiting_cache\n+                        .remove_entry(self.nodes[i].obligation.as_predicate())\n+                    {\n+                        self.done_cache.insert(predicate);\n+                    } else {\n+                        self.done_cache.insert(self.nodes[i].obligation.as_predicate().clone());\n+                    }\n                     node_rewrites[i] = nodes_len;\n                     dead_nodes += 1;\n                 }"}]}