{"sha": "af83a9613c00b358b5a969e4bcffd6842f87588d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmODNhOTYxM2MwMGIzNThiNWE5NjllNGJjZmZkNjg0MmY4NzU4OGQ=", "commit": {"author": {"name": "Jade", "email": "software@lfcode.ca", "date": "2021-08-28T19:47:04Z"}, "committer": {"name": "Jade", "email": "software@lfcode.ca", "date": "2021-08-28T19:47:04Z"}, "message": "std: Stabilize command_access\n\nTracking issue: #44434", "tree": {"sha": "c6a3ef00a51d2f8da20d89be620c61048b00fae9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6a3ef00a51d2f8da20d89be620c61048b00fae9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af83a9613c00b358b5a969e4bcffd6842f87588d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af83a9613c00b358b5a969e4bcffd6842f87588d", "html_url": "https://github.com/rust-lang/rust/commit/af83a9613c00b358b5a969e4bcffd6842f87588d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af83a9613c00b358b5a969e4bcffd6842f87588d/comments", "author": {"login": "lf-", "id": 6652840, "node_id": "MDQ6VXNlcjY2NTI4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6652840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lf-", "html_url": "https://github.com/lf-", "followers_url": "https://api.github.com/users/lf-/followers", "following_url": "https://api.github.com/users/lf-/following{/other_user}", "gists_url": "https://api.github.com/users/lf-/gists{/gist_id}", "starred_url": "https://api.github.com/users/lf-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lf-/subscriptions", "organizations_url": "https://api.github.com/users/lf-/orgs", "repos_url": "https://api.github.com/users/lf-/repos", "events_url": "https://api.github.com/users/lf-/events{/privacy}", "received_events_url": "https://api.github.com/users/lf-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lf-", "id": 6652840, "node_id": "MDQ6VXNlcjY2NTI4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6652840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lf-", "html_url": "https://github.com/lf-", "followers_url": "https://api.github.com/users/lf-/followers", "following_url": "https://api.github.com/users/lf-/following{/other_user}", "gists_url": "https://api.github.com/users/lf-/gists{/gist_id}", "starred_url": "https://api.github.com/users/lf-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lf-/subscriptions", "organizations_url": "https://api.github.com/users/lf-/orgs", "repos_url": "https://api.github.com/users/lf-/repos", "events_url": "https://api.github.com/users/lf-/events{/privacy}", "received_events_url": "https://api.github.com/users/lf-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42a2a53ec13b0e6e915acd09a2a9a963e5fa3b92", "url": "https://api.github.com/repos/rust-lang/rust/commits/42a2a53ec13b0e6e915acd09a2a9a963e5fa3b92", "html_url": "https://github.com/rust-lang/rust/commit/42a2a53ec13b0e6e915acd09a2a9a963e5fa3b92"}], "stats": {"total": 26, "additions": 11, "deletions": 15}, "files": [{"sha": "9b915c6e8e7eac747c7dc5f55943e8960e5f17c9", "filename": "library/std/src/process.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/af83a9613c00b358b5a969e4bcffd6842f87588d/library%2Fstd%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af83a9613c00b358b5a969e4bcffd6842f87588d/library%2Fstd%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprocess.rs?ref=af83a9613c00b358b5a969e4bcffd6842f87588d", "patch": "@@ -115,7 +115,7 @@ use crate::path::Path;\n use crate::str;\n use crate::sys::pipe::{read2, AnonPipe};\n use crate::sys::process as imp;\n-#[unstable(feature = \"command_access\", issue = \"44434\")]\n+#[stable(feature = \"command_access\", since = \"1.56.0\")]\n pub use crate::sys_common::process::CommandEnvs;\n use crate::sys_common::{AsInner, AsInnerMut, FromInner, IntoInner};\n \n@@ -943,13 +943,12 @@ impl Command {\n     /// # Examples\n     ///\n     /// ```\n-    /// # #![feature(command_access)]\n     /// use std::process::Command;\n     ///\n     /// let cmd = Command::new(\"echo\");\n     /// assert_eq!(cmd.get_program(), \"echo\");\n     /// ```\n-    #[unstable(feature = \"command_access\", issue = \"44434\")]\n+    #[stable(feature = \"command_access\", since = \"1.56.0\")]\n     pub fn get_program(&self) -> &OsStr {\n         self.inner.get_program()\n     }\n@@ -963,7 +962,6 @@ impl Command {\n     /// # Examples\n     ///\n     /// ```\n-    /// # #![feature(command_access)]\n     /// use std::ffi::OsStr;\n     /// use std::process::Command;\n     ///\n@@ -972,7 +970,7 @@ impl Command {\n     /// let args: Vec<&OsStr> = cmd.get_args().collect();\n     /// assert_eq!(args, &[\"first\", \"second\"]);\n     /// ```\n-    #[unstable(feature = \"command_access\", issue = \"44434\")]\n+    #[stable(feature = \"command_access\", since = \"1.56.0\")]\n     pub fn get_args(&self) -> CommandArgs<'_> {\n         CommandArgs { inner: self.inner.get_args() }\n     }\n@@ -992,7 +990,6 @@ impl Command {\n     /// # Examples\n     ///\n     /// ```\n-    /// # #![feature(command_access)]\n     /// use std::ffi::OsStr;\n     /// use std::process::Command;\n     ///\n@@ -1004,7 +1001,7 @@ impl Command {\n     ///     (OsStr::new(\"TZ\"), None)\n     /// ]);\n     /// ```\n-    #[unstable(feature = \"command_access\", issue = \"44434\")]\n+    #[stable(feature = \"command_access\", since = \"1.56.0\")]\n     pub fn get_envs(&self) -> CommandEnvs<'_> {\n         self.inner.get_envs()\n     }\n@@ -1016,7 +1013,6 @@ impl Command {\n     /// # Examples\n     ///\n     /// ```\n-    /// # #![feature(command_access)]\n     /// use std::path::Path;\n     /// use std::process::Command;\n     ///\n@@ -1025,7 +1021,7 @@ impl Command {\n     /// cmd.current_dir(\"/bin\");\n     /// assert_eq!(cmd.get_current_dir(), Some(Path::new(\"/bin\")));\n     /// ```\n-    #[unstable(feature = \"command_access\", issue = \"44434\")]\n+    #[stable(feature = \"command_access\", since = \"1.56.0\")]\n     pub fn get_current_dir(&self) -> Option<&Path> {\n         self.inner.get_current_dir()\n     }\n@@ -1057,13 +1053,13 @@ impl AsInnerMut<imp::Command> for Command {\n ///\n /// This struct is created by [`Command::get_args`]. See its documentation for\n /// more.\n-#[unstable(feature = \"command_access\", issue = \"44434\")]\n+#[stable(feature = \"command_access\", since = \"1.56.0\")]\n #[derive(Debug)]\n pub struct CommandArgs<'a> {\n     inner: imp::CommandArgs<'a>,\n }\n \n-#[unstable(feature = \"command_access\", issue = \"44434\")]\n+#[stable(feature = \"command_access\", since = \"1.56.0\")]\n impl<'a> Iterator for CommandArgs<'a> {\n     type Item = &'a OsStr;\n     fn next(&mut self) -> Option<&'a OsStr> {\n@@ -1074,7 +1070,7 @@ impl<'a> Iterator for CommandArgs<'a> {\n     }\n }\n \n-#[unstable(feature = \"command_access\", issue = \"44434\")]\n+#[stable(feature = \"command_access\", since = \"1.56.0\")]\n impl<'a> ExactSizeIterator for CommandArgs<'a> {\n     fn len(&self) -> usize {\n         self.inner.len()"}, {"sha": "124f27d26409f78768612bb6df60fddb981738a7", "filename": "library/std/src/sys_common/process.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/af83a9613c00b358b5a969e4bcffd6842f87588d/library%2Fstd%2Fsrc%2Fsys_common%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af83a9613c00b358b5a969e4bcffd6842f87588d/library%2Fstd%2Fsrc%2Fsys_common%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fprocess.rs?ref=af83a9613c00b358b5a969e4bcffd6842f87588d", "patch": "@@ -106,13 +106,13 @@ impl CommandEnv {\n /// This struct is created by\n /// [`Command::get_envs`][crate::process::Command::get_envs]. See its\n /// documentation for more.\n-#[unstable(feature = \"command_access\", issue = \"44434\")]\n+#[stable(feature = \"command_access\", since = \"1.56.0\")]\n #[derive(Debug)]\n pub struct CommandEnvs<'a> {\n     iter: crate::collections::btree_map::Iter<'a, EnvKey, Option<OsString>>,\n }\n \n-#[unstable(feature = \"command_access\", issue = \"44434\")]\n+#[stable(feature = \"command_access\", since = \"1.56.0\")]\n impl<'a> Iterator for CommandEnvs<'a> {\n     type Item = (&'a OsStr, Option<&'a OsStr>);\n     fn next(&mut self) -> Option<Self::Item> {\n@@ -123,7 +123,7 @@ impl<'a> Iterator for CommandEnvs<'a> {\n     }\n }\n \n-#[unstable(feature = \"command_access\", issue = \"44434\")]\n+#[stable(feature = \"command_access\", since = \"1.56.0\")]\n impl<'a> ExactSizeIterator for CommandEnvs<'a> {\n     fn len(&self) -> usize {\n         self.iter.len()"}]}