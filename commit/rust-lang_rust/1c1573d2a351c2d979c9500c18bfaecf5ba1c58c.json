{"sha": "1c1573d2a351c2d979c9500c18bfaecf5ba1c58c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjMTU3M2QyYTM1MWMyZDk3OWM5NTAwYzE4YmZhZWNmNWJhMWM1OGM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2021-07-04T16:50:35Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2021-07-04T16:50:35Z"}, "message": "remove outdated comment", "tree": {"sha": "10e38cdda6a9f1ab607256fff5e26d51ce7f3bdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10e38cdda6a9f1ab607256fff5e26d51ce7f3bdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c1573d2a351c2d979c9500c18bfaecf5ba1c58c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c1573d2a351c2d979c9500c18bfaecf5ba1c58c", "html_url": "https://github.com/rust-lang/rust/commit/1c1573d2a351c2d979c9500c18bfaecf5ba1c58c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c1573d2a351c2d979c9500c18bfaecf5ba1c58c/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63fbefd359cb2934525b0395556b64078ac86cc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/63fbefd359cb2934525b0395556b64078ac86cc9", "html_url": "https://github.com/rust-lang/rust/commit/63fbefd359cb2934525b0395556b64078ac86cc9"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "a09fad3b6b78ad72b0b87e5cbba12a6efdbc04c3", "filename": "compiler/rustc_typeck/src/check/cast.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c1573d2a351c2d979c9500c18bfaecf5ba1c58c/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c1573d2a351c2d979c9500c18bfaecf5ba1c58c/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcast.rs?ref=1c1573d2a351c2d979c9500c18bfaecf5ba1c58c", "patch": "@@ -440,8 +440,6 @@ impl<'a, 'tcx> CastCheck<'tcx> {\n                             let expr_ty = fcx.resolve_vars_if_possible(self.expr_ty);\n                             let expr_ty = fcx.tcx.erase_regions(expr_ty);\n                             let ty_params = fcx.tcx.mk_substs_trait(expr_ty, &[]);\n-                            // Check for infer types because cases like `Option<{integer}>` would\n-                            // panic otherwise.\n                             if fcx\n                                 .tcx\n                                 .type_implements_trait((from_trait, ty, ty_params, fcx.param_env))"}]}