{"sha": "abcd2449273ebced7df695be2249f56ed4c8f331", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiY2QyNDQ5MjczZWJjZWQ3ZGY2OTViZTIyNDlmNTZlZDRjOGYzMzE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-09T09:01:11Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-09T09:01:42Z"}, "message": "add async fn with partial initialization", "tree": {"sha": "de3bdfdb715111767354939a3bb6e0e2a9b499dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de3bdfdb715111767354939a3bb6e0e2a9b499dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abcd2449273ebced7df695be2249f56ed4c8f331", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abcd2449273ebced7df695be2249f56ed4c8f331", "html_url": "https://github.com/rust-lang/rust/commit/abcd2449273ebced7df695be2249f56ed4c8f331", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abcd2449273ebced7df695be2249f56ed4c8f331/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc06cb71bfa606ed602969868abd9623c27464e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc06cb71bfa606ed602969868abd9623c27464e9", "html_url": "https://github.com/rust-lang/rust/commit/fc06cb71bfa606ed602969868abd9623c27464e9"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "91266f67aa8e4556bad8bd749e8f4f288cb93e1b", "filename": "tests/run-pass/async-fn.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/abcd2449273ebced7df695be2249f56ed4c8f331/tests%2Frun-pass%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abcd2449273ebced7df695be2249f56ed4c8f331/tests%2Frun-pass%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fasync-fn.rs?ref=abcd2449273ebced7df695be2249f56ed4c8f331", "patch": "@@ -1,4 +1,4 @@\n-#![feature(async_await)]\n+#![feature(async_await, never_type)]\n \n use std::{future::Future, pin::Pin, task::Poll, ptr};\n use std::task::{Waker, RawWaker, RawWakerVTable, Context};\n@@ -40,6 +40,11 @@ async fn includes_never(crash: bool, x: u32) -> u32 {\n     result\n }\n \n+async fn partial_init(x: u32) -> u32 {\n+    #[allow(unreachable_code)]\n+    let _x: (String, !) = (String::new(), return async { x + x }.await);\n+}\n+\n fn run_fut(mut fut: impl Future<Output=u32>, output: u32) {\n     fn raw_waker_clone(_this: *const ()) -> RawWaker {\n         panic!(\"unimplemented\");\n@@ -71,4 +76,6 @@ fn main() {\n     run_fut(build_aggregate(1, 2, 3, 4), 10);\n \n     run_fut(includes_never(false, 4), 16);\n+\n+    run_fut(partial_init(4), 8);\n }"}]}