{"sha": "765f93b8d851e5e853c844c8a279e73b4b7d965c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NWY5M2I4ZDg1MWU1ZTg1M2M4NDRjOGEyNzllNzNiNGI3ZDk2NWM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-20T22:04:20Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-20T22:15:56Z"}, "message": "add is_union to structs AST", "tree": {"sha": "ca8a3a7d60bca8e807a6597e4ec734953b4851d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca8a3a7d60bca8e807a6597e4ec734953b4851d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/765f93b8d851e5e853c844c8a279e73b4b7d965c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/765f93b8d851e5e853c844c8a279e73b4b7d965c", "html_url": "https://github.com/rust-lang/rust/commit/765f93b8d851e5e853c844c8a279e73b4b7d965c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/765f93b8d851e5e853c844c8a279e73b4b7d965c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ca8331933033b4cb8252c3056020bc4bfa2d78f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ca8331933033b4cb8252c3056020bc4bfa2d78f", "html_url": "https://github.com/rust-lang/rust/commit/4ca8331933033b4cb8252c3056020bc4bfa2d78f"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "e4c99784c3da7b64b693ebe31db08203fbd5dfec", "filename": "crates/ra_syntax/src/ast/extensions.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/765f93b8d851e5e853c844c8a279e73b4b7d965c/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/765f93b8d851e5e853c844c8a279e73b4b7d965c/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs?ref=765f93b8d851e5e853c844c8a279e73b4b7d965c", "patch": "@@ -3,7 +3,12 @@\n \n use itertools::Itertools;\n \n-use crate::{SmolStr, SyntaxToken, ast::{self, AstNode, children, child_opt}, SyntaxKind::*, SyntaxElement, T};\n+use crate::{\n+    SmolStr, SyntaxToken,\n+    ast::{self, AstNode, children, child_opt},\n+    SyntaxKind::*,\n+    SyntaxElement, T,\n+};\n use ra_parser::SyntaxKind;\n \n impl ast::Name {\n@@ -196,6 +201,17 @@ impl StructKind<'_> {\n }\n \n impl ast::StructDef {\n+    pub fn is_union(&self) -> bool {\n+        for child in self.syntax().children_with_tokens() {\n+            match child.kind() {\n+                T![struct] => return false,\n+                T![union] => return true,\n+                _ => (),\n+            }\n+        }\n+        false\n+    }\n+\n     pub fn kind(&self) -> StructKind {\n         StructKind::from_node(self)\n     }"}]}