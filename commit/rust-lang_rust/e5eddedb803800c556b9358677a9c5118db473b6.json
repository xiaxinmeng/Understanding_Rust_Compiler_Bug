{"sha": "e5eddedb803800c556b9358677a9c5118db473b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ZWRkZWRiODAzODAwYzU1NmI5MzU4Njc3YTljNTExOGRiNDczYjY=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-04-05T21:24:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-05T21:24:08Z"}, "message": "Rollup merge of #83370 - jyn514:setup-tools, r=Mark-Simulacrum\n\nAdd `x.py setup tools` which enables `download-rustc` by default\n\nHelps with https://github.com/rust-lang/rust/issues/81930. I know I said in that issue that I should fix that rebasing rebuilds bootstrap, but the compile time improvement is so good I think it's ok to leave that fix for later (I still plan to work on it). I think all the outright bugs have been fixed :)\n\nThis builds on https://github.com/rust-lang/rust/pull/83368 so I can set the option to `if-unchanged`.\n\nr? ```@Mark-Simulacrum```", "tree": {"sha": "80a1f0dccb19598ba1db9edc06db6056abecd9d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80a1f0dccb19598ba1db9edc06db6056abecd9d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5eddedb803800c556b9358677a9c5118db473b6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJga3/5CRBK7hj4Ov3rIwAAdHIIADx+x2MeAjKsaCzcX+fXtEH9\nGJM3+sU9PilhVmiNZc/9zxcL8vx/JMjTeanc5mdJdH9Q6BBdIOcjM4et4T7ZKbS4\nqLu4hd5ykSwaBnhdT8VkHy+GyDPoSg6i1sz8UBlG+czq5+/2Qh4Ce0NLScCIV8IN\nfyqkNHblgZoiAYyf2dmZ9KeInHEspMGWWhK73bulwaPq4CzSieQIzGiLebL+fD50\nqJl8aLwitKZcewl1h8Y995pCXP6jGgLcvgO/U6WCK/wZqUa6Ve46ydLZptwjFNPk\n+Z5cZYhK3iEbR87vMhNFyqHmZKhhZE8uxksCacTkjfNBn5kngd+lH8VQYagPTXc=\n=7IZN\n-----END PGP SIGNATURE-----\n", "payload": "tree 80a1f0dccb19598ba1db9edc06db6056abecd9d1\nparent d203fceeb12f8c0e3123fc45036575018d2f990a\nparent f8653c9aca23317836277ef38decb2b220d9843d\nauthor Yuki Okushi <jtitor@2k36.org> 1617657848 +0900\ncommitter GitHub <noreply@github.com> 1617657848 +0900\n\nRollup merge of #83370 - jyn514:setup-tools, r=Mark-Simulacrum\n\nAdd `x.py setup tools` which enables `download-rustc` by default\n\nHelps with https://github.com/rust-lang/rust/issues/81930. I know I said in that issue that I should fix that rebasing rebuilds bootstrap, but the compile time improvement is so good I think it's ok to leave that fix for later (I still plan to work on it). I think all the outright bugs have been fixed :)\n\nThis builds on https://github.com/rust-lang/rust/pull/83368 so I can set the option to `if-unchanged`.\n\nr? ```@Mark-Simulacrum```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5eddedb803800c556b9358677a9c5118db473b6", "html_url": "https://github.com/rust-lang/rust/commit/e5eddedb803800c556b9358677a9c5118db473b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5eddedb803800c556b9358677a9c5118db473b6/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d203fceeb12f8c0e3123fc45036575018d2f990a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d203fceeb12f8c0e3123fc45036575018d2f990a", "html_url": "https://github.com/rust-lang/rust/commit/d203fceeb12f8c0e3123fc45036575018d2f990a"}, {"sha": "f8653c9aca23317836277ef38decb2b220d9843d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8653c9aca23317836277ef38decb2b220d9843d", "html_url": "https://github.com/rust-lang/rust/commit/f8653c9aca23317836277ef38decb2b220d9843d"}], "stats": {"total": 39, "additions": 34, "deletions": 5}, "files": [{"sha": "883bfead64e4afc7d087ea2aa74c20cf6a1bfaf8", "filename": "src/bootstrap/defaults/config.compiler.toml", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5eddedb803800c556b9358677a9c5118db473b6/src%2Fbootstrap%2Fdefaults%2Fconfig.compiler.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e5eddedb803800c556b9358677a9c5118db473b6/src%2Fbootstrap%2Fdefaults%2Fconfig.compiler.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdefaults%2Fconfig.compiler.toml?ref=e5eddedb803800c556b9358677a9c5118db473b6", "patch": "@@ -8,6 +8,5 @@ debug-logging = true\n incremental = true\n \n [llvm]\n-# Will download LLVM from CI if available on your platform (Linux only for now)\n-# https://github.com/rust-lang/rust/issues/77084 tracks support for more platforms\n+# Will download LLVM from CI if available on your platform.\n download-ci-llvm = \"if-available\""}, {"sha": "182fb0fb0675c1887b22746ed5038450396f9cbf", "filename": "src/bootstrap/defaults/config.tools.toml", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e5eddedb803800c556b9358677a9c5118db473b6/src%2Fbootstrap%2Fdefaults%2Fconfig.tools.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e5eddedb803800c556b9358677a9c5118db473b6/src%2Fbootstrap%2Fdefaults%2Fconfig.tools.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdefaults%2Fconfig.tools.toml?ref=e5eddedb803800c556b9358677a9c5118db473b6", "patch": "@@ -0,0 +1,16 @@\n+# These defaults are meant for contributors to tools which build on the\n+# compiler, but do not modify it directly.\n+[rust]\n+# This enables `RUSTC_LOG=debug`, avoiding confusing situations\n+# where adding `debug!()` appears to do nothing.\n+# However, it makes running the compiler slightly slower.\n+debug-logging = true\n+# This greatly increases the speed of rebuilds, especially when there are only minor changes. However, it makes the initial build slightly slower.\n+incremental = true\n+# Download rustc from CI instead of building it from source.\n+# This cuts compile times by almost 60x, but means you can't modify the compiler.\n+download-rustc = \"if-unchanged\"\n+\n+[llvm]\n+# Will download LLVM from CI if available on your platform.\n+download-ci-llvm = \"if-available\""}, {"sha": "a5829dfa9d87905192b6331a780e2f397d519431", "filename": "src/bootstrap/setup.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e5eddedb803800c556b9358677a9c5118db473b6/src%2Fbootstrap%2Fsetup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5eddedb803800c556b9358677a9c5118db473b6/src%2Fbootstrap%2Fsetup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsetup.rs?ref=e5eddedb803800c556b9358677a9c5118db473b6", "patch": "@@ -13,6 +13,7 @@ pub enum Profile {\n     Compiler,\n     Codegen,\n     Library,\n+    Tools,\n     User,\n }\n \n@@ -24,15 +25,16 @@ impl Profile {\n     pub fn all() -> impl Iterator<Item = Self> {\n         use Profile::*;\n         // N.B. these are ordered by how they are displayed, not alphabetically\n-        [Library, Compiler, Codegen, User].iter().copied()\n+        [Library, Compiler, Codegen, Tools, User].iter().copied()\n     }\n \n     pub fn purpose(&self) -> String {\n         use Profile::*;\n         match self {\n             Library => \"Contribute to the standard library\",\n-            Compiler => \"Contribute to the compiler or rustdoc\",\n+            Compiler => \"Contribute to the compiler itself\",\n             Codegen => \"Contribute to the compiler, and also modify LLVM or codegen\",\n+            Tools => \"Contribute to tools which depend on the compiler, but do not modify it directly (e.g. rustdoc, clippy, miri)\",\n             User => \"Install Rust from source\",\n         }\n         .to_string()\n@@ -53,9 +55,12 @@ impl FromStr for Profile {\n     fn from_str(s: &str) -> Result<Self, Self::Err> {\n         match s {\n             \"lib\" | \"library\" => Ok(Profile::Library),\n-            \"compiler\" | \"rustdoc\" => Ok(Profile::Compiler),\n+            \"compiler\" => Ok(Profile::Compiler),\n             \"llvm\" | \"codegen\" => Ok(Profile::Codegen),\n             \"maintainer\" | \"user\" => Ok(Profile::User),\n+            \"tools\" | \"tool\" | \"rustdoc\" | \"clippy\" | \"miri\" | \"rustfmt\" | \"rls\" => {\n+                Ok(Profile::Tools)\n+            }\n             _ => Err(format!(\"unknown profile: '{}'\", s)),\n         }\n     }\n@@ -68,6 +73,7 @@ impl fmt::Display for Profile {\n             Profile::Codegen => write!(f, \"codegen\"),\n             Profile::Library => write!(f, \"library\"),\n             Profile::User => write!(f, \"user\"),\n+            Profile::Tools => write!(f, \"tools\"),\n         }\n     }\n }\n@@ -103,6 +109,14 @@ pub fn setup(src_path: &Path, profile: Profile) {\n \n     let suggestions = match profile {\n         Profile::Codegen | Profile::Compiler => &[\"check\", \"build\", \"test\"][..],\n+        Profile::Tools => &[\n+            \"check\",\n+            \"build\",\n+            \"test src/test/rustdoc*\",\n+            \"test src/tools/clippy\",\n+            \"test src/tools/miri\",\n+            \"test src/tools/rustfmt\",\n+        ],\n         Profile::Library => &[\"check\", \"build\", \"test library/std\", \"doc\"],\n         Profile::User => &[\"dist\", \"build\"],\n     };"}]}