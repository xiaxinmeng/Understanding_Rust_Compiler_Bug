{"sha": "ab949fdd64433749ebb7f8ef516ee2cdfe217a9d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiOTQ5ZmRkNjQ0MzM3NDllYmI3ZjhlZjUxNmVlMmNkZmUyMTdhOWQ=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-08-17T09:29:17Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-08-17T09:29:17Z"}, "message": "Cast only where necessary", "tree": {"sha": "79c42247ba385c9cbe3e4aa3015009d99c0c6383", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79c42247ba385c9cbe3e4aa3015009d99c0c6383"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab949fdd64433749ebb7f8ef516ee2cdfe217a9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab949fdd64433749ebb7f8ef516ee2cdfe217a9d", "html_url": "https://github.com/rust-lang/rust/commit/ab949fdd64433749ebb7f8ef516ee2cdfe217a9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab949fdd64433749ebb7f8ef516ee2cdfe217a9d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fb854a0f5ec500414f7e4fd4eac30357a9dd666", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fb854a0f5ec500414f7e4fd4eac30357a9dd666", "html_url": "https://github.com/rust-lang/rust/commit/1fb854a0f5ec500414f7e4fd4eac30357a9dd666"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "19f18088579b33172594c31e835da33a7443702b", "filename": "src/librustc_codegen_llvm/common.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ab949fdd64433749ebb7f8ef516ee2cdfe217a9d/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab949fdd64433749ebb7f8ef516ee2cdfe217a9d/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcommon.rs?ref=ab949fdd64433749ebb7f8ef516ee2cdfe217a9d", "patch": "@@ -333,20 +333,21 @@ impl ConstMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n         offset: Size,\n     ) -> PlaceRef<'tcx, &'ll Value> {\n         assert_eq!(alloc.align, layout.align.abi);\n+        let llty = self.type_ptr_to(layout.llvm_type(self));\n         let llval = if layout.size == Size::ZERO {\n             let llval = self.const_usize(alloc.align.bytes());\n-            unsafe { llvm::LLVMConstIntToPtr(llval, self.type_ptr_to(self.type_i8p())) }\n+            unsafe { llvm::LLVMConstIntToPtr(llval, llty) }\n         } else {\n             let init = const_alloc_to_llvm(self, alloc);\n             let base_addr = self.static_addr_of(init, alloc.align, None);\n \n-            unsafe { llvm::LLVMConstInBoundsGEP(\n+            let llval = unsafe { llvm::LLVMConstInBoundsGEP(\n                 self.const_bitcast(base_addr, self.type_i8p()),\n                 &self.const_usize(offset.bytes()),\n                 1,\n-            )}\n+            )};\n+            self.const_bitcast(llval, llty)\n         };\n-        let llval = self.const_bitcast(llval, self.type_ptr_to(layout.llvm_type(self)));\n         PlaceRef::new_sized(llval, layout, alloc.align)\n     }\n "}]}