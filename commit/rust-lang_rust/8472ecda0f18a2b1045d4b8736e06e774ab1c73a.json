{"sha": "8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0NzJlY2RhMGYxOGEyYjEwNDVkNGI4NzM2ZTA2ZTc3NGFiMWM3M2E=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-02-21T08:39:38Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-02-21T10:14:18Z"}, "message": "Fix fallout", "tree": {"sha": "26fd7a74ebdb2e8cbcbd7ad815f33cf81bd4b758", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26fd7a74ebdb2e8cbcbd7ad815f33cf81bd4b758"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl5PrXoACgkQaTCGhp1Q\nZjfcnRAArpMq9kCxwNtauFzb4knWcnECFCw89x3wKQiB6R/eVTZJHAfqOLsAwzg0\nHw2nNIkTKHCLq6AbpGiYH4LlEtvFeQqXiUfqOpJHuc+3YAfxr90zLB/T9lWntDXl\nFhWP4W24+DrsFe6VdaydCZ6D4HBM5tmaPBvRwkjILcY9V2iThZbGvDls0MUdEBgw\nQGE7tMxVMPx7bU0Tlso9/xLYGYYOyiuRkHjlIMcYf3KIajJjgItSzqFBSYnWIulC\n4Jgu3ID9pLfpCDgsW0PhGTYbRHxz13M9R1iu1/RFNR+6kcrpZfncoI0YkP9HosY/\nKahUKgg3P86wlgINnLhd874Wl21BKp5J0ZJUIYKxIIEQhuYC4lRIFzJEX7tM/YGH\nSQZ6uYgMNricx4T4uYYujwv3LKvRZlqk6D94KI7+x03zZgkiCt+yB/tDdSCD5aoY\ncva3T/D3Cwo+IWKND0xDr9qVCsckZScnnKtz221pLOtDk3MNYDULvhZK+gGxlf8a\nhCtVV63cwmUWebEjDKzdDQkW/9i7uCK/mRKYoj3X8Suc7qoa2n4kERhZL5duJJmy\nIp5mF2JmtX1w8hfAL8GAUbHFdylJZZR93ClY4u6+UimCO4zjO4qPhpxOJCz+EYAC\nfaFYN80ZpdkwkKiTCtUUrEGkCWOq5RNxVFzIRiWaIBORdGD+BVQ=\n=SxuU\n-----END PGP SIGNATURE-----", "payload": "tree 26fd7a74ebdb2e8cbcbd7ad815f33cf81bd4b758\nparent b67764d5cb067aaa3ee53168855959465a8a7267\nauthor flip1995 <hello@philkrones.com> 1582274378 +0100\ncommitter flip1995 <hello@philkrones.com> 1582280058 +0100\n\nFix fallout\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "html_url": "https://github.com/rust-lang/rust/commit/8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b67764d5cb067aaa3ee53168855959465a8a7267", "url": "https://api.github.com/repos/rust-lang/rust/commits/b67764d5cb067aaa3ee53168855959465a8a7267", "html_url": "https://github.com/rust-lang/rust/commit/b67764d5cb067aaa3ee53168855959465a8a7267"}], "stats": {"total": 381, "additions": 219, "deletions": 162}, "files": [{"sha": "901e663ded38200e5e9b0b23b1ae40caf71b3672", "filename": "clippy_dev/src/main.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_dev%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_dev%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fmain.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,7 +1,10 @@\n #![cfg_attr(feature = \"deny-warnings\", deny(warnings))]\n \n use clap::{App, Arg, SubCommand};\n-use clippy_dev::*;\n+use clippy_dev::{\n+    gather_all, gen_changelog_lint_list, gen_deprecated, gen_lint_group_list, gen_modules_list, gen_register_lint_list,\n+    replace_region_in_file, Lint, DOCS_LINK,\n+};\n use std::path::Path;\n \n mod fmt;"}, {"sha": "042b83dc386df1d16cc1051b1fdc29a33cea824e", "filename": "clippy_lints/src/approx_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fapprox_const.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,5 +1,5 @@\n use crate::utils::span_lint;\n-use rustc_hir::*;\n+use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol;"}, {"sha": "5c584b18f4c3cf36dc770ddb6ee1c59a29765bb0", "filename": "clippy_lints/src/as_conversions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fas_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fas_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fas_conversions.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,7 +1,7 @@\n use rustc::lint::in_external_macro;\n use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::*;\n+use syntax::ast::{Expr, ExprKind};\n \n use crate::utils::span_lint_and_help;\n "}, {"sha": "8a7a48aebf9be6db989c911b11ca8309ab1f9707", "filename": "clippy_lints/src/assertions_on_constants.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassertions_on_constants.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -2,7 +2,7 @@ use crate::consts::{constant, Constant};\n use crate::utils::paths;\n use crate::utils::{is_direct_expn_of, is_expn_of, match_function_call, snippet_opt, span_lint_and_help};\n use if_chain::if_chain;\n-use rustc_hir::*;\n+use rustc_hir::{Expr, ExprKind, PatKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::LitKind;"}, {"sha": "bc4e47340c69bb98cc635adbab9026a35b1d8961", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -231,7 +231,9 @@ fn lint_misrefactored_assign_op(\n \n #[must_use]\n fn is_commutative(op: hir::BinOpKind) -> bool {\n-    use rustc_hir::BinOpKind::*;\n+    use rustc_hir::BinOpKind::{\n+        Add, And, BitAnd, BitOr, BitXor, Div, Eq, Ge, Gt, Le, Lt, Mul, Ne, Or, Rem, Shl, Shr, Sub,\n+    };\n     match op {\n         Add | Mul | And | Or | BitXor | BitAnd | BitOr | Eq | Ne => true,\n         Sub | Div | Rem | Shl | Shr | Lt | Le | Ge | Gt => false,"}, {"sha": "871ca029b1aaf791102d57f307ed97d531c5d6ee", "filename": "clippy_lints/src/atomic_ordering.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fatomic_ordering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fatomic_ordering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fatomic_ordering.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -2,7 +2,7 @@ use crate::utils::{match_def_path, span_lint_and_help};\n use if_chain::if_chain;\n use rustc::ty;\n use rustc_hir::def_id::DefId;\n-use rustc_hir::*;\n+use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "5c083cefc8d13fd37cd749de429f2bb005ca5588", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,6 +1,6 @@\n //! checks for attributes\n \n-use crate::reexport::*;\n+use crate::reexport::Name;\n use crate::utils::{\n     first_line_of_span, is_present_in_source, match_def_path, paths, snippet_opt, span_lint, span_lint_and_sugg,\n     span_lint_and_then, without_block_comments,\n@@ -9,7 +9,9 @@ use if_chain::if_chain;\n use rustc::lint::in_external_macro;\n use rustc::ty;\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{\n+    Block, Expr, ExprKind, ImplItem, ImplItemKind, Item, ItemKind, StmtKind, TraitItem, TraitItemKind, TraitMethod,\n+};\n use rustc_lint::{CheckLintNameResult, EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;"}, {"sha": "05f85e929614682ed10adabde7a9c759595911db", "filename": "clippy_lints/src/bit_mask.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fbit_mask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fbit_mask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbit_mask.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -3,7 +3,7 @@ use crate::utils::sugg::Sugg;\n use crate::utils::{span_lint, span_lint_and_then};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;"}, {"sha": "6f26f031431dbfb0eb7cda8e722a59fc14ebf1bc", "filename": "clippy_lints/src/blacklisted_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fblacklisted_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fblacklisted_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblacklisted_name.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::span_lint;\n use rustc_data_structures::fx::FxHashSet;\n-use rustc_hir::*;\n+use rustc_hir::{Pat, PatKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n "}, {"sha": "d004dcddfea013861f514ca3eab01d29fb9d7a10", "filename": "clippy_lints/src/block_in_if_condition.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,10 +1,10 @@\n-use crate::utils::*;\n+use crate::utils::{differing_macro_contexts, higher, snippet_block_with_applicability, span_lint, span_lint_and_sugg};\n use matches::matches;\n use rustc::hir::map::Map;\n use rustc::lint::in_external_macro;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n-use rustc_hir::*;\n+use rustc_hir::{BlockCheckMode, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "07b4f572dd547f5e052840df63287589aa368ab0", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -5,8 +5,8 @@ use crate::utils::{\n use if_chain::if_chain;\n use rustc::hir::map::Map;\n use rustc_errors::Applicability;\n-use rustc_hir::intravisit::*;\n-use rustc_hir::*;\n+use rustc_hir::intravisit::{walk_expr, FnKind, NestedVisitorMap, Visitor};\n+use rustc_hir::{BinOpKind, Body, Expr, ExprKind, FnDecl, HirId, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n@@ -161,7 +161,7 @@ struct SuggestContext<'a, 'tcx, 'v> {\n \n impl<'a, 'tcx, 'v> SuggestContext<'a, 'tcx, 'v> {\n     fn recurse(&mut self, suggestion: &Bool) -> Option<()> {\n-        use quine_mc_cluskey::Bool::*;\n+        use quine_mc_cluskey::Bool::{And, False, Not, Or, Term, True};\n         match suggestion {\n             True => {\n                 self.output.push_str(\"true\");\n@@ -277,7 +277,7 @@ fn suggest(cx: &LateContext<'_, '_>, suggestion: &Bool, terminals: &[&Expr<'_>])\n }\n \n fn simple_negate(b: Bool) -> Bool {\n-    use quine_mc_cluskey::Bool::*;\n+    use quine_mc_cluskey::Bool::{And, False, Not, Or, Term, True};\n     match b {\n         True => False,\n         False => True,\n@@ -325,7 +325,7 @@ fn terminal_stats(b: &Bool) -> Stats {\n             &Term(n) => stats.terminals[n as usize] += 1,\n         }\n     }\n-    use quine_mc_cluskey::Bool::*;\n+    use quine_mc_cluskey::Bool::{And, False, Not, Or, Term, True};\n     let mut stats = Stats::default();\n     recurse(b, &mut stats);\n     stats"}, {"sha": "e8168cb7393a879d3e1dc5209b0842915909e425", "filename": "clippy_lints/src/bytecount.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fbytecount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fbytecount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbytecount.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -5,7 +5,7 @@ use crate::utils::{\n use if_chain::if_chain;\n use rustc::ty;\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{BinOpKind, BorrowKind, Expr, ExprKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::{Name, UintTy};"}, {"sha": "9e0e9d7dd6a091e215351f8af39d9bcbcbfea281", "filename": "clippy_lints/src/cargo_common_metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -6,7 +6,7 @@ use crate::utils::span_lint;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::DUMMY_SP;\n-use syntax::ast::*;\n+use syntax::ast::Crate;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks to see if all common metadata is defined in"}, {"sha": "835f8b7f902ac9a8d2f1f58a48d362d6d12ae8a6", "filename": "clippy_lints/src/checked_conversions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fchecked_conversions.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -3,7 +3,7 @@\n use if_chain::if_chain;\n use rustc::lint::in_external_macro;\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{BinOp, BinOpKind, Expr, ExprKind, QPath, TyKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::LitKind;"}, {"sha": "ecae13a49708e7ca320dbd2a61200a128dda460d", "filename": "clippy_lints/src/cognitive_complexity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcognitive_complexity.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -2,7 +2,7 @@\n \n use rustc::hir::map::Map;\n use rustc_hir::intravisit::{walk_expr, FnKind, NestedVisitorMap, Visitor};\n-use rustc_hir::*;\n+use rustc_hir::{Body, Expr, ExprKind, FnDecl, HirId};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;"}, {"sha": "e0c381ddbfc458ef4cbce20dcd5eeba7ef9b5ef2", "filename": "clippy_lints/src/comparison_chain.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcomparison_chain.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::{\n     get_trait_def_id, if_sequence, implements_trait, parent_node_is_if_expr, paths, span_lint_and_help, SpanlessEq,\n };\n-use rustc_hir::*;\n+use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "edfd2486be28216542da97916fa6f9f4db89ce0d", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -7,13 +7,13 @@ use rustc::ty::{self, Ty, TyCtxt};\n use rustc::{bug, span_bug};\n use rustc_data_structures::sync::Lrc;\n use rustc_hir::def::{DefKind, Res};\n-use rustc_hir::*;\n+use rustc_hir::{BinOp, BinOpKind, Block, Expr, ExprKind, HirId, QPath, UnOp};\n use rustc_lint::LateContext;\n use rustc_span::symbol::Symbol;\n use std::cmp::Ordering::{self, Equal};\n use std::convert::TryInto;\n use std::hash::{Hash, Hasher};\n-use syntax::ast::{FloatTy, LitKind};\n+use syntax::ast::{FloatTy, LitFloatType, LitKind};\n \n /// A `LitKind`-like enum to fold constant `Expr`s into.\n #[derive(Debug, Clone)]\n@@ -152,8 +152,6 @@ impl Constant {\n \n /// Parses a `LitKind` to a `Constant`.\n pub fn lit_to_constant(lit: &LitKind, ty: Option<Ty<'_>>) -> Constant {\n-    use syntax::ast::*;\n-\n     match *lit {\n         LitKind::Str(ref is, _) => Constant::Str(is.to_string()),\n         LitKind::Byte(b) => Constant::Int(u128::from(b)),\n@@ -277,7 +275,7 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n \n     #[allow(clippy::cast_possible_wrap)]\n     fn constant_not(&self, o: &Constant, ty: Ty<'_>) -> Option<Constant> {\n-        use self::Constant::*;\n+        use self::Constant::{Bool, Int};\n         match *o {\n             Bool(b) => Some(Bool(!b)),\n             Int(value) => {\n@@ -293,7 +291,7 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n     }\n \n     fn constant_negate(&self, o: &Constant, ty: Ty<'_>) -> Option<Constant> {\n-        use self::Constant::*;\n+        use self::Constant::{Int, F32, F64};\n         match *o {\n             Int(value) => {\n                 let ity = match ty.kind {"}, {"sha": "996f80a757e71534aebbaa11128519d69900b444", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -2,7 +2,7 @@ use crate::utils::{get_parent_expr, higher, if_sequence, same_tys, snippet, span\n use crate::utils::{SpanlessEq, SpanlessHash};\n use rustc::ty::Ty;\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_hir::*;\n+use rustc_hir::{Arm, Block, Expr, ExprKind, MatchSource, Pat, PatKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::Symbol;"}, {"sha": "f99e6d96e030e43712d1e81b1a744b78ae83d725", "filename": "clippy_lints/src/default_trait_access.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fdefault_trait_access.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fdefault_trait_access.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault_trait_access.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,7 +1,7 @@\n use if_chain::if_chain;\n use rustc::ty;\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{Expr, ExprKind, QPath};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "f130a69778f6c81070c2618df76a1118d38ef7b6", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -2,7 +2,7 @@ use crate::utils::paths;\n use crate::utils::{is_automatically_derived, is_copy, match_path, span_lint_and_then};\n use if_chain::if_chain;\n use rustc::ty::{self, Ty};\n-use rustc_hir::*;\n+use rustc_hir::{Item, ItemKind, TraitRef};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;"}, {"sha": "be65fd21a68ee052d728466716209dee93d5ddb1", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -350,7 +350,7 @@ fn check_attrs<'a>(cx: &LateContext<'_, '_>, valid_idents: &FxHashSet<String>, a\n     let parser = pulldown_cmark::Parser::new(&doc).into_offset_iter();\n     // Iterate over all `Events` and combine consecutive events into one\n     let events = parser.coalesce(|previous, current| {\n-        use pulldown_cmark::Event::*;\n+        use pulldown_cmark::Event::Text;\n \n         let previous_range = previous.1;\n         let current_range = current.1;\n@@ -374,8 +374,10 @@ fn check_doc<'a, Events: Iterator<Item = (pulldown_cmark::Event<'a>, Range<usize\n     spans: &[(usize, Span)],\n ) -> DocHeaders {\n     // true if a safety header was found\n-    use pulldown_cmark::Event::*;\n-    use pulldown_cmark::Tag::*;\n+    use pulldown_cmark::Event::{\n+        Code, End, FootnoteReference, HardBreak, Html, Rule, SoftBreak, Start, TaskListMarker, Text,\n+    };\n+    use pulldown_cmark::Tag::{CodeBlock, Heading, Link};\n \n     let mut headers = DocHeaders {\n         safety: false,"}, {"sha": "44f85d1ea6e19cd77709f87fddeccf0b93db1139", "filename": "clippy_lints/src/double_comparison.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_comparison.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,7 +1,7 @@\n //! Lint on unnecessary double comparisons. Some examples:\n \n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;"}, {"sha": "c4c4758ebb78e514dcc9544f96a7c047100b5e49", "filename": "clippy_lints/src/double_parens.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fdouble_parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fdouble_parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_parens.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::span_lint;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::*;\n+use syntax::ast::{Expr, ExprKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for unnecessary double parentheses."}, {"sha": "f49668082791392167b0ebf70af75a4e81ae433b", "filename": "clippy_lints/src/drop_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fdrop_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fdrop_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdrop_bounds.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{match_def_path, paths, span_lint};\n use if_chain::if_chain;\n-use rustc_hir::*;\n+use rustc_hir::{GenericBound, GenericParam, WhereBoundPredicate, WherePredicate};\n use rustc_lint::LateLintPass;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "bd9bdfef090b2fe81511ce76222c0f732ae47e56", "filename": "clippy_lints/src/drop_forget_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::{is_copy, match_def_path, paths, qpath_res, span_lint_and_note};\n use if_chain::if_chain;\n use rustc::ty;\n-use rustc_hir::*;\n+use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "b35a8facf8b9951cef7d316e9829fe00fac3f75a", "filename": "clippy_lints/src/duration_subsec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fduration_subsec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fduration_subsec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fduration_subsec.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,6 +1,6 @@\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;"}, {"sha": "c41c5aadbee789c52ce13c430ca2a52ecbd00286", "filename": "clippy_lints/src/else_if_without_else.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Felse_if_without_else.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -3,7 +3,7 @@\n use rustc::lint::in_external_macro;\n use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::*;\n+use syntax::ast::{Expr, ExprKind};\n \n use crate::utils::span_lint_and_help;\n "}, {"sha": "010d208c9e7948e17f332d279e5bb76716918f7a", "filename": "clippy_lints/src/empty_enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fempty_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fempty_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fempty_enum.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,7 +1,7 @@\n //! lint when there is an enum with no variants\n \n use crate::utils::span_lint_and_then;\n-use rustc_hir::*;\n+use rustc_hir::{Item, ItemKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "19da4c4bc9a56c6f11981a6faa33b5c202fb6622", "filename": "clippy_lints/src/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fentry.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -5,7 +5,7 @@ use if_chain::if_chain;\n use rustc::hir::map::Map;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n-use rustc_hir::*;\n+use rustc_hir::{BorrowKind, Expr, ExprKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;"}, {"sha": "e8063ac3006c60d95d6ca71f7d250f1218e865c2", "filename": "clippy_lints/src/enum_clike.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fenum_clike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fenum_clike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_clike.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -5,7 +5,7 @@ use crate::consts::{miri_to_const, Constant};\n use crate::utils::span_lint;\n use rustc::ty;\n use rustc::ty::util::IntTypeExt;\n-use rustc_hir::*;\n+use rustc_hir::{Item, ItemKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::convert::TryFrom;"}, {"sha": "0d14b8a75e8af2aaff18f022343d92d8d89235e0", "filename": "clippy_lints/src/enum_variants.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_variants.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -6,7 +6,7 @@ use rustc_lint::{EarlyContext, EarlyLintPass, Lint};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::Symbol;\n-use syntax::ast::*;\n+use syntax::ast::{EnumDef, Item, ItemKind, VisibilityKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Detects enumeration variants that are prefixed or suffixed"}, {"sha": "1df0bcc6b7e8f770afa84975611e30e2cca2b9a2", "filename": "clippy_lints/src/eq_op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feq_op.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -2,7 +2,7 @@ use crate::utils::{\n     implements_trait, in_macro, is_copy, multispan_sugg, snippet, span_lint, span_lint_and_then, SpanlessEq,\n };\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{BinOp, BinOpKind, BorrowKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "3ff0506e28d007ffeefdcb784b2685a3029a1a0e", "filename": "clippy_lints/src/erasing_op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Ferasing_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Ferasing_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ferasing_op.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,4 +1,4 @@\n-use rustc_hir::*;\n+use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;"}, {"sha": "850c7f728bd28c1476178f078652589fa16162a1", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,12 +1,12 @@\n use rustc::ty::layout::LayoutOf;\n use rustc::ty::{self, Ty};\n use rustc_hir::intravisit;\n-use rustc_hir::{self, *};\n+use rustc_hir::{self, Body, FnDecl, HirId, HirIdSet, ItemKind, Node};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n-use rustc_typeck::expr_use_visitor::*;\n+use rustc_typeck::expr_use_visitor::{ConsumeMode, Delegate, ExprUseVisitor, Place, PlaceBase};\n \n use crate::utils::span_lint;\n "}, {"sha": "8c324e09df55af857e95ac34326c295b71062698", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -3,7 +3,7 @@ use matches::matches;\n use rustc::lint::in_external_macro;\n use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{def_id, Expr, ExprKind, Param, PatKind, QPath};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "d6b847d1dbb1094f21c325e5b722284e695beff3", "filename": "clippy_lints/src/eval_order_dependence.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feval_order_dependence.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -3,7 +3,7 @@ use if_chain::if_chain;\n use rustc::hir::map::Map;\n use rustc::ty;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n-use rustc_hir::*;\n+use rustc_hir::{def, BinOpKind, Block, Expr, ExprKind, Guard, HirId, Local, Node, QPath, Stmt, StmtKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "a3005d8bd82a59d4f176de6bc4a45df19cb728b3", "filename": "clippy_lints/src/explicit_write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fexplicit_write.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fexplicit_write.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexplicit_write.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::{is_expn_of, match_function_call, paths, span_lint, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{BorrowKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::LitKind;"}, {"sha": "19a122594cb7b6955c1ada925d9720f4b46f7f42", "filename": "clippy_lints/src/fallible_impl_from.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffallible_impl_from.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -48,7 +48,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for FallibleImplFrom {\n \n fn lint_impl_body<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, impl_span: Span, impl_items: &[hir::ImplItemRef<'_>]) {\n     use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n-    use rustc_hir::*;\n+    use rustc_hir::{Expr, ExprKind, ImplItemKind, QPath};\n \n     struct FindPanicUnwrap<'a, 'tcx> {\n         lcx: &'a LateContext<'a, 'tcx>,"}, {"sha": "18006f0534f00a476ac7a605bb78dca9c2fd2872", "filename": "clippy_lints/src/float_literal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Ffloat_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Ffloat_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloat_literal.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -7,7 +7,7 @@ use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::{f32, f64, fmt};\n-use syntax::ast::*;\n+use syntax::ast::{FloatTy, LitFloatType, LitKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for float literals with a precision greater"}, {"sha": "6c80b6525bb5dfe57d3aa1670e9a58c5cf547083", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -5,7 +5,7 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{Arm, BorrowKind, Expr, ExprKind, MatchSource, PatKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;"}, {"sha": "0ab6b1242b3fcf1faf6889314e6c92a59328a17e", "filename": "clippy_lints/src/formatting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformatting.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -4,7 +4,7 @@ use rustc::lint::in_external_macro;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n-use syntax::ast::*;\n+use syntax::ast::{BinOpKind, Block, Expr, ExprKind, StmtKind, UnOp};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for use of the non-existent `=*`, `=!` and `=-`"}, {"sha": "26b9f2cd613f6c1d8dbc365353f61e16af5b998f", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -497,7 +497,7 @@ fn is_mutable_pat(cx: &LateContext<'_, '_>, pat: &hir::Pat<'_>, tys: &mut FxHash\n static KNOWN_WRAPPER_TYS: &[&[&str]] = &[&[\"alloc\", \"rc\", \"Rc\"], &[\"std\", \"sync\", \"Arc\"]];\n \n fn is_mutable_ty<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, ty: Ty<'tcx>, span: Span, tys: &mut FxHashSet<DefId>) -> bool {\n-    use ty::TyKind::*;\n+    use ty::TyKind::{Adt, Array, Bool, Char, Float, Int, RawPtr, Ref, Slice, Str, Tuple, Uint};\n     match ty.kind {\n         // primitive types are never mutable\n         Bool | Char | Int(_) | Uint(_) | Float(_) | Str => false,\n@@ -593,7 +593,7 @@ impl<'a, 'tcx> intravisit::Visitor<'tcx> for StaticMutVisitor<'a, 'tcx> {\n     type Map = Map<'tcx>;\n \n     fn visit_expr(&mut self, expr: &'tcx hir::Expr<'_>) {\n-        use hir::ExprKind::*;\n+        use hir::ExprKind::{AddrOf, Assign, AssignOp, Call, MethodCall};\n \n         if self.mutates_static {\n             return;\n@@ -631,7 +631,7 @@ impl<'a, 'tcx> intravisit::Visitor<'tcx> for StaticMutVisitor<'a, 'tcx> {\n }\n \n fn is_mutated_static(cx: &LateContext<'_, '_>, e: &hir::Expr<'_>) -> bool {\n-    use hir::ExprKind::*;\n+    use hir::ExprKind::{Field, Index, Path};\n \n     match e.kind {\n         Path(ref qpath) => {"}, {"sha": "3d073421984667098c063b42f099abec33c17465", "filename": "clippy_lints/src/identity_conversion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fidentity_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fidentity_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_conversion.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -2,7 +2,7 @@ use crate::utils::{\n     match_def_path, match_trait_method, paths, same_tys, snippet, snippet_with_macro_callsite, span_lint_and_then,\n };\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{Expr, ExprKind, HirId, MatchSource};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n "}, {"sha": "abd546870aae4ca218c1e76ed66a09ad3b3a8ff6", "filename": "clippy_lints/src/identity_op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_op.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,5 +1,5 @@\n use rustc::ty;\n-use rustc_hir::*;\n+use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;"}, {"sha": "33e2471d5b8f0e41764f5095fe98288a46102b66", "filename": "clippy_lints/src/if_let_some_result.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fif_let_some_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fif_let_some_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_let_some_result.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::{match_type, method_chain_args, paths, snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{print, Expr, ExprKind, MatchSource, PatKind, QPath};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "4689e24f368ef876747816366c4e56cbffbbec0b", "filename": "clippy_lints/src/if_not_else.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fif_not_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fif_not_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_not_else.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -4,7 +4,7 @@\n use rustc::lint::in_external_macro;\n use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::*;\n+use syntax::ast::{BinOpKind, Expr, ExprKind, UnOp};\n \n use crate::utils::span_lint_and_help;\n "}, {"sha": "f4a7b798521fa82baacdb9f7172244a66db405ff", "filename": "clippy_lints/src/indexing_slicing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Findexing_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Findexing_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Findexing_slicing.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -3,7 +3,7 @@\n use crate::consts::{constant, Constant};\n use crate::utils::{higher, span_lint, span_lint_and_help};\n use rustc::ty;\n-use rustc_hir::*;\n+use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::RangeLimits;"}, {"sha": "cd989c0ea6f67a0be9f872b89dd8a340def2db94", "filename": "clippy_lints/src/infinite_iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Finfinite_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Finfinite_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finfinite_iter.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,4 +1,4 @@\n-use rustc_hir::*;\n+use rustc_hir::{BorrowKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "355e75d0d559773fe9559ddd84dc115999dd7c8a", "filename": "clippy_lints/src/inherent_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Finherent_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Finherent_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_impl.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -2,7 +2,7 @@\n \n use crate::utils::{in_macro, span_lint_and_then};\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_hir::*;\n+use rustc_hir::{def_id, Crate, Item, ItemKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::Span;"}, {"sha": "85c61ba2396426217c14f883ce2788572c894bf7", "filename": "clippy_lints/src/inline_fn_without_body.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finline_fn_without_body.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -3,7 +3,7 @@\n use crate::utils::span_lint_and_then;\n use crate::utils::sugg::DiagnosticBuilderExt;\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{TraitItem, TraitItemKind, TraitMethod};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::{Attribute, Name};"}, {"sha": "c6734427dab73cd81dd06a87839749968efd72d9", "filename": "clippy_lints/src/int_plus_one.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fint_plus_one.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fint_plus_one.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fint_plus_one.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -3,7 +3,7 @@\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::*;\n+use syntax::ast::{BinOpKind, Expr, ExprKind, Lit, LitKind};\n \n use crate::utils::{snippet_opt, span_lint_and_then};\n "}, {"sha": "13da725393b35a35d44969f223feceda82315372", "filename": "clippy_lints/src/items_after_statements.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fitems_after_statements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fitems_after_statements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fitems_after_statements.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -4,7 +4,7 @@ use crate::utils::span_lint;\n use matches::matches;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::*;\n+use syntax::ast::{Block, ItemKind, StmtKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for items declared after some statement in a block."}, {"sha": "39c8c4cfa6936bb24e34e20114fb5596fd878e38", "filename": "clippy_lints/src/large_enum_variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_enum_variant.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -3,7 +3,7 @@\n use crate::utils::{snippet_opt, span_lint_and_then};\n use rustc::ty::layout::LayoutOf;\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{Item, ItemKind, VariantData};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n "}, {"sha": "e08042bcbb2648dd9c5c55ad566e9496de00b6fb", "filename": "clippy_lints/src/large_stack_arrays.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,6 +1,6 @@\n use rustc::mir::interpret::ConstValue;\n use rustc::ty::{self, ConstKind};\n-use rustc_hir::*;\n+use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n "}, {"sha": "821ca2fefa4e78cf718200fd90e528c74e7578c6", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -3,7 +3,7 @@ use rustc::ty;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::Applicability;\n use rustc_hir::def_id::DefId;\n-use rustc_hir::*;\n+use rustc_hir::{AssocItemKind, BinOpKind, Expr, ExprKind, ImplItemRef, Item, ItemKind, TraitItemRef};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{Span, Spanned};"}, {"sha": "5690a12141b96f8e5e645a773196c5162d6575f7", "filename": "clippy_lints/src/let_underscore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_underscore.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,6 +1,6 @@\n use if_chain::if_chain;\n use rustc::lint::in_external_macro;\n-use rustc_hir::*;\n+use rustc_hir::{PatKind, Stmt, StmtKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "a120e3a7517fabb9fe8fcf7a21a395753ef46bd8", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -3,15 +3,21 @@ use rustc::hir::map::Map;\n use rustc::lint::in_external_macro;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir::def::{DefKind, Res};\n-use rustc_hir::intravisit::*;\n+use rustc_hir::intravisit::{\n+    walk_fn_decl, walk_generic_param, walk_generics, walk_param_bound, walk_ty, NestedVisitorMap, Visitor,\n+};\n use rustc_hir::FnRetTy::Return;\n-use rustc_hir::*;\n+use rustc_hir::{\n+    BodyId, FnDecl, GenericArg, GenericBound, GenericParam, GenericParamKind, Generics, ImplItem, ImplItemKind, Item,\n+    ItemKind, Lifetime, LifetimeName, ParamName, QPath, TraitBoundModifier, TraitItem, TraitItemKind, TraitMethod, Ty,\n+    TyKind, WhereClause, WherePredicate,\n+};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::kw;\n \n-use crate::reexport::*;\n+use crate::reexport::Name;\n use crate::utils::{last_path_segment, span_lint, trait_ref_of_method};\n \n declare_clippy_lint! {"}, {"sha": "7c8001eebd47fba949c5543b61f0b4d70a8fbef3", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -7,7 +7,7 @@ use rustc::lint::in_external_macro;\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint, impl_lint_pass};\n-use syntax::ast::*;\n+use syntax::ast::{Expr, ExprKind, Lit, LitFloatType, LitIntType, LitKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Warns if a long integral or floating-point constant does"}, {"sha": "eb15b104bea69edf55421575c5b9787040784a48", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,5 +1,5 @@\n use crate::consts::{constant, Constant};\n-use crate::reexport::*;\n+use crate::reexport::Name;\n use crate::utils::paths;\n use crate::utils::usage::{is_unused, mutated_variables};\n use crate::utils::{\n@@ -19,13 +19,16 @@ use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::Applicability;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::intravisit::{walk_block, walk_expr, walk_pat, walk_stmt, NestedVisitorMap, Visitor};\n-use rustc_hir::*;\n+use rustc_hir::{\n+    def_id, BinOpKind, BindingAnnotation, Block, BorrowKind, Expr, ExprKind, GenericArg, HirId, LoopSource,\n+    MatchSource, Mutability, Node, Pat, PatKind, QPath, Stmt, StmtKind,\n+};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::{BytePos, Symbol};\n-use rustc_typeck::expr_use_visitor::*;\n+use rustc_typeck::expr_use_visitor::{ConsumeMode, Delegate, ExprUseVisitor, Place, PlaceBase};\n use std::iter::{once, Iterator};\n use std::mem;\n use syntax::ast;"}, {"sha": "d9d3611bc5a0db109d24c52a5fab2ecb8456459f", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -12,7 +12,10 @@ use rustc::lint::in_external_macro;\n use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n use rustc_hir::def::CtorKind;\n-use rustc_hir::*;\n+use rustc_hir::{\n+    print, Arm, BindingAnnotation, Block, BorrowKind, Expr, ExprKind, Local, MatchSource, Mutability, PatKind, QPath,\n+    RangeEnd,\n+};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;"}, {"sha": "19f3c447861625d9337513cf9d49f4328626aa6c", "filename": "clippy_lints/src/methods/manual_saturating_arithmetic.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fmethods%2Fmanual_saturating_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fmethods%2Fmanual_saturating_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmanual_saturating_arithmetic.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -23,7 +23,10 @@ pub fn lint(cx: &LateContext<'_, '_>, expr: &hir::Expr<'_>, args: &[&[hir::Expr<\n     };\n \n     if ty.is_signed() {\n-        use self::{MinMax::*, Sign::*};\n+        use self::{\n+            MinMax::{Max, Min},\n+            Sign::{Neg, Pos},\n+        };\n \n         let sign = if let Some(sign) = lit_sign(arith_rhs) {\n             sign"}, {"sha": "4df963a4f7960632bb60c720e115ff7150142073", "filename": "clippy_lints/src/methods/option_map_unwrap_or.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fmethods%2Foption_map_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fmethods%2Foption_map_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Foption_map_unwrap_or.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -4,7 +4,7 @@ use rustc::hir::map::Map;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::{walk_path, NestedVisitorMap, Visitor};\n-use rustc_hir::{self, *};\n+use rustc_hir::{self, HirId, Path};\n use rustc_lint::LateContext;\n use rustc_span::source_map::Span;\n use rustc_span::symbol::Symbol;"}, {"sha": "b02c993de526b0478cacbcfc990f17d752d454f4", "filename": "clippy_lints/src/minmax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fminmax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fminmax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fminmax.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,6 +1,6 @@\n use crate::consts::{constant_simple, Constant};\n use crate::utils::{match_def_path, paths, span_lint};\n-use rustc_hir::*;\n+use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::cmp::Ordering;"}, {"sha": "85d66db83b156deb4e130a121a452db02e07904d", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -3,7 +3,10 @@ use matches::matches;\n use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::FnKind;\n-use rustc_hir::*;\n+use rustc_hir::{\n+    def, BinOpKind, BindingAnnotation, Body, Expr, ExprKind, FnDecl, HirId, Mutability, PatKind, Stmt, StmtKind, Ty,\n+    TyKind, UnOp,\n+};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{ExpnKind, Span};"}, {"sha": "6e89f35143be8de0ed3aac7b3560d274677e4eb1", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -9,7 +9,10 @@ use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n-use syntax::ast::*;\n+use syntax::ast::{\n+    Block, Expr, ExprKind, GenericParamKind, Generics, Lit, LitFloatType, LitIntType, LitKind, NodeId, Pat, PatKind,\n+    StmtKind, UnOp,\n+};\n use syntax::visit::{walk_expr, FnKind, Visitor};\n \n declare_clippy_lint! {"}, {"sha": "7446b732c4b241c26f08984e792e2104ca9e176a", "filename": "clippy_lints/src/modulo_arithmetic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -2,7 +2,7 @@ use crate::consts::{constant, Constant};\n use crate::utils::{sext, span_lint_and_then};\n use if_chain::if_chain;\n use rustc::ty::{self};\n-use rustc_hir::*;\n+use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::fmt::Display;"}, {"sha": "57e56d8f959a3421c637459c4ce77bb6cbd71fe5", "filename": "clippy_lints/src/mul_add.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fmul_add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fmul_add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmul_add.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,9 +1,9 @@\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n-use crate::utils::*;\n+use crate::utils::{snippet, span_lint_and_sugg};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for expressions of the form `a * b + c`"}, {"sha": "0bcce04e81200edf72adb85c54a9bff69b0be4e4", "filename": "clippy_lints/src/multiple_crate_versions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -4,7 +4,7 @@ use crate::utils::span_lint;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::DUMMY_SP;\n-use syntax::ast::*;\n+use syntax::ast::Crate;\n \n use itertools::Itertools;\n "}, {"sha": "aeffcd34110e43ee78b9e44b5007ad7bac8569bf", "filename": "clippy_lints/src/mut_reference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fmut_reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fmut_reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_reference.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::span_lint;\n use rustc::ty::subst::Subst;\n use rustc::ty::{self, Ty};\n-use rustc_hir::*;\n+use rustc_hir::{print, BorrowKind, Expr, ExprKind, Mutability};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "7282874fdbd0b8bd21b2aa0c5ae30c7932275247", "filename": "clippy_lints/src/needless_bool.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -5,7 +5,7 @@\n use crate::utils::sugg::Sugg;\n use crate::utils::{higher, parent_node_is_if_expr, span_lint, span_lint_and_sugg};\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{BinOpKind, Block, Expr, ExprKind, StmtKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n@@ -62,7 +62,7 @@ declare_lint_pass!(NeedlessBool => [NEEDLESS_BOOL]);\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessBool {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, e: &'tcx Expr<'_>) {\n-        use self::Expression::*;\n+        use self::Expression::{Bool, RetBool};\n         if let Some((ref pred, ref then_block, Some(ref else_expr))) = higher::if_block(&e) {\n             let reduce = |ret, not| {\n                 let mut applicability = Applicability::MachineApplicable;\n@@ -191,7 +191,7 @@ fn check_comparison<'a, 'tcx>(\n     right_false: Option<(impl FnOnce(Sugg<'a>) -> Sugg<'a>, &str)>,\n     no_literal: Option<(impl FnOnce(Sugg<'a>, Sugg<'a>) -> Sugg<'a>, &str)>,\n ) {\n-    use self::Expression::*;\n+    use self::Expression::{Bool, Other};\n \n     if let ExprKind::Binary(_, ref left_side, ref right_side) = e.kind {\n         let (l_ty, r_ty) = (cx.tables.expr_ty(left_side), cx.tables.expr_ty(right_side));"}, {"sha": "10782b9f3b4d0c1631f58eac9a67e371cd4d964f", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -9,7 +9,7 @@ use rustc::ty::{self, TypeFoldable};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_hir::intravisit::FnKind;\n-use rustc_hir::*;\n+use rustc_hir::{BindingAnnotation, Body, FnDecl, GenericArg, HirId, ItemKind, Node, PatKind, QPath, TyKind};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_infer::traits;\n use rustc_infer::traits::misc::can_type_implement_copy;"}, {"sha": "65643d89df57a01ba651cdc3cf9c73815a72be1d", "filename": "clippy_lints/src/neg_cmp_op_on_partial_ord.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,6 +1,6 @@\n use if_chain::if_chain;\n use rustc::lint::in_external_macro;\n-use rustc_hir::*;\n+use rustc_hir::{BinOpKind, Expr, ExprKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "4681e990df88a1880efa4484c8aceb1ffb2ca5f5", "filename": "clippy_lints/src/neg_multiply.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fneg_multiply.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fneg_multiply.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneg_multiply.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,5 +1,5 @@\n use if_chain::if_chain;\n-use rustc_hir::*;\n+use rustc_hir::{BinOpKind, Expr, ExprKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;"}, {"sha": "46e26b3269711a0844044b4ac21ffb8a6778b3ef", "filename": "clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -7,7 +7,7 @@ use std::ptr;\n use rustc::ty::adjustment::Adjust;\n use rustc::ty::{Ty, TypeFlags};\n use rustc_hir::def::{DefKind, Res};\n-use rustc_hir::*;\n+use rustc_hir::{Expr, ExprKind, ImplItem, ImplItemKind, Item, ItemKind, Node, TraitItem, TraitItemKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass, Lint};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::{InnerSpan, Span, DUMMY_SP};"}, {"sha": "de5ae5d30322dcc8ff04af30878378f066261f29", "filename": "clippy_lints/src/non_expressive_names.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_expressive_names.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -4,7 +4,9 @@ use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::SymbolStr;\n use std::cmp::Ordering;\n-use syntax::ast::*;\n+use syntax::ast::{\n+    Arm, AssocItem, AssocItemKind, Attribute, Block, FnDecl, Ident, Item, ItemKind, Local, Mac, Pat, PatKind,\n+};\n use syntax::attr;\n use syntax::visit::{walk_block, walk_expr, walk_pat, Visitor};\n "}, {"sha": "6dc6893bf71cfb0374b98cad33e9e685224a9c03", "filename": "clippy_lints/src/option_env_unwrap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Foption_env_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Foption_env_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foption_env_unwrap.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -2,7 +2,7 @@ use crate::utils::{is_direct_expn_of, span_lint_and_help};\n use if_chain::if_chain;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::*;\n+use syntax::ast::{Expr, ExprKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `option_env!(...).unwrap()` and"}, {"sha": "b90fdc232e72c825d406fce6df2035820e3db488", "filename": "clippy_lints/src/overflow_check_conditional.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{span_lint, SpanlessEq};\n use if_chain::if_chain;\n-use rustc_hir::*;\n+use rustc_hir::{BinOpKind, Expr, ExprKind, QPath};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "76a77e25de3c44420ffc79d79769860ae989b0e0", "filename": "clippy_lints/src/panic_unimplemented.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{is_direct_expn_of, is_expn_of, match_function_call, paths, span_lint};\n use if_chain::if_chain;\n-use rustc_hir::*;\n+use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::Span;"}, {"sha": "1445df41c452f4aaa2856353f235c686cc08aec6", "filename": "clippy_lints/src/partialeq_ne_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{is_automatically_derived, span_lint_hir};\n use if_chain::if_chain;\n-use rustc_hir::*;\n+use rustc_hir::{Item, ItemKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "775a8ad0b933d1a84c7adc69d636b5201cdb9d2f", "filename": "clippy_lints/src/path_buf_push_overwrite.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fpath_buf_push_overwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fpath_buf_push_overwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpath_buf_push_overwrite.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::{match_type, paths, span_lint_and_sugg, walk_ptrs_ty};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::path::{Component, Path};"}, {"sha": "8ba4e10c9660322029cc65c3c9998b39c27270e6", "filename": "clippy_lints/src/precedence.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fprecedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fprecedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fprecedence.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -3,7 +3,7 @@ use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n-use syntax::ast::*;\n+use syntax::ast::{BinOpKind, Expr, ExprKind, LitKind, UnOp};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for operations where precedence may be unclear\n@@ -123,7 +123,7 @@ fn is_arith_expr(expr: &Expr) -> bool {\n \n #[must_use]\n fn is_bit_op(op: BinOpKind) -> bool {\n-    use syntax::ast::BinOpKind::*;\n+    use syntax::ast::BinOpKind::{BitAnd, BitOr, BitXor, Shl, Shr};\n     match op {\n         BitXor | BitAnd | BitOr | Shl | Shr => true,\n         _ => false,\n@@ -132,7 +132,7 @@ fn is_bit_op(op: BinOpKind) -> bool {\n \n #[must_use]\n fn is_arith_op(op: BinOpKind) -> bool {\n-    use syntax::ast::BinOpKind::*;\n+    use syntax::ast::BinOpKind::{Add, Div, Mul, Rem, Sub};\n     match op {\n         Add | Sub | Mul | Div | Rem => true,\n         _ => false,"}, {"sha": "c1aee94aa4210c75b96d9f8c12c41fceb78ffa97", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -8,7 +8,10 @@ use crate::utils::{\n use if_chain::if_chain;\n use rustc::ty;\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{\n+    BinOpKind, BodyId, Expr, ExprKind, FnDecl, FnRetTy, GenericArg, HirId, ImplItem, ImplItemKind, Item, ItemKind,\n+    Lifetime, MutTy, Mutability, Node, PathSegment, QPath, TraitItem, TraitItemKind, TraitMethod, Ty, TyKind,\n+};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;"}, {"sha": "f21c2985d194f8efd7de1611de3ffe8d4f426aab", "filename": "clippy_lints/src/question_mark.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fquestion_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fquestion_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fquestion_mark.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,11 +1,11 @@\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::def::{DefKind, Res};\n-use rustc_hir::*;\n+use rustc_hir::{def, Block, Expr, ExprKind, StmtKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n-use crate::utils::paths::*;\n+use crate::utils::paths::{OPTION, OPTION_NONE};\n use crate::utils::sugg::Sugg;\n use crate::utils::{higher, match_def_path, match_type, span_lint_and_then, SpanlessEq};\n "}, {"sha": "f1a93d508ce28a04cf65feeee3d59c45a24d70c6", "filename": "clippy_lints/src/ranges.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Franges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Franges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Franges.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,6 +1,6 @@\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{BinOpKind, Expr, ExprKind, QPath};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;"}, {"sha": "ddb0c7484348bc881216ac34322bde3b00853b54", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -529,7 +529,7 @@ impl TypeVisitor<'_> for ContainsRegion {\n }\n \n fn rvalue_locals(rvalue: &mir::Rvalue<'_>, mut visit: impl FnMut(mir::Local)) {\n-    use rustc::mir::Rvalue::*;\n+    use rustc::mir::Rvalue::{Aggregate, BinaryOp, Cast, CheckedBinaryOp, Repeat, UnaryOp, Use};\n \n     let mut visit_op = |op: &mir::Operand<'_>| match op {\n         mir::Operand::Copy(p) | mir::Operand::Move(p) => visit(p.local),"}, {"sha": "a839a023e5259e2381d78056ab848258a3df76c1", "filename": "clippy_lints/src/redundant_field_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_field_names.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -2,7 +2,7 @@ use crate::utils::span_lint_and_sugg;\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::*;\n+use syntax::ast::{Expr, ExprKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for fields in struct literals where shorthands"}, {"sha": "c8706c2b363baecd76519b6c04ce0f991fbd7d89", "filename": "clippy_lints/src/redundant_pattern_matching.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{match_qpath, paths, snippet, span_lint_and_then};\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{Arm, Expr, ExprKind, MatchSource, PatKind, QPath};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::LitKind;"}, {"sha": "98ec793de7c19086ff9ccd1f0e64eee2f6266a68", "filename": "clippy_lints/src/redundant_static_lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -2,7 +2,7 @@ use crate::utils::{snippet, span_lint_and_then};\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::*;\n+use syntax::ast::{Item, ItemKind, Ty, TyKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for constants and statics with an explicit `'static` lifetime."}, {"sha": "028b89b39b9496c3412bce7a3c3274a9c82e0963", "filename": "clippy_lints/src/regex.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fregex.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -2,7 +2,7 @@ use crate::consts::{constant, Constant};\n use crate::utils::{is_expn_of, match_def_path, match_type, paths, span_lint, span_lint_and_help};\n use if_chain::if_chain;\n use rustc_data_structures::fx::FxHashSet;\n-use rustc_hir::*;\n+use rustc_hir::{Block, BorrowKind, Crate, Expr, ExprKind, HirId};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::{BytePos, Span};\n@@ -145,8 +145,8 @@ fn const_str<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, e: &'tcx Expr<'_>) -> Option<\n }\n \n fn is_trivial_regex(s: &regex_syntax::hir::Hir) -> Option<&'static str> {\n-    use regex_syntax::hir::Anchor::*;\n-    use regex_syntax::hir::HirKind::*;\n+    use regex_syntax::hir::Anchor::{EndText, StartText};\n+    use regex_syntax::hir::HirKind::{Alternation, Anchor, Concat, Empty, Literal};\n \n     let is_literal = |e: &[regex_syntax::hir::Hir]| {\n         e.iter().all(|e| match *e.kind() {"}, {"sha": "aca1ebbd5080fbf281625d0f495626426b35cb9e", "filename": "clippy_lints/src/replace_consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Freplace_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Freplace_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freplace_consts.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -2,7 +2,7 @@ use crate::utils::{match_def_path, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::def::{DefKind, Res};\n-use rustc_hir::*;\n+use rustc_hir::{Expr, ExprKind, Node};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "6820d1620bd187abec727ba6025f09e385926dc5", "filename": "clippy_lints/src/serde_api.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fserde_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fserde_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fserde_api.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,5 +1,5 @@\n use crate::utils::{get_trait_def_id, paths, span_lint};\n-use rustc_hir::*;\n+use rustc_hir::{Item, ItemKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "0dc2705550b903b8469382b049fb9f60fabda68e", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,9 +1,12 @@\n-use crate::reexport::*;\n+use crate::reexport::Name;\n use crate::utils::{contains_name, higher, iter_input_pats, snippet, span_lint_and_then};\n use rustc::lint::in_external_macro;\n use rustc::ty;\n use rustc_hir::intravisit::FnKind;\n-use rustc_hir::*;\n+use rustc_hir::{\n+    Block, Body, Expr, ExprKind, FnDecl, Guard, HirId, Local, MutTy, Pat, PatKind, Path, QPath, StmtKind, Ty, TyKind,\n+    UnOp,\n+};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;"}, {"sha": "71fcff33544e2a5943bc82033ea1e49cb724d81d", "filename": "clippy_lints/src/slow_vector_initialization.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -4,7 +4,7 @@ use if_chain::if_chain;\n use rustc::hir::map::Map;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::{walk_block, walk_expr, walk_stmt, NestedVisitorMap, Visitor};\n-use rustc_hir::*;\n+use rustc_hir::{BindingAnnotation, Block, Expr, ExprKind, HirId, PatKind, QPath, Stmt, StmtKind};\n use rustc_lint::{LateContext, LateLintPass, Lint};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::Symbol;"}, {"sha": "20ed4d9aac057b4af61b0a52a13c0232c1b0c5e8", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,6 +1,6 @@\n use rustc::lint::in_external_macro;\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;"}, {"sha": "a1f5dee2a9c37bcda89fc9dee7ef3b29748d00dd", "filename": "clippy_lints/src/swap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fswap.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -7,7 +7,7 @@ use if_chain::if_chain;\n use matches::matches;\n use rustc::ty;\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{Block, Expr, ExprKind, PatKind, QPath, StmtKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::Symbol;"}, {"sha": "d343ec4a84838a87bc013cef823d55f7e22a5c50", "filename": "clippy_lints/src/trait_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrait_bounds.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{in_macro, snippet, span_lint_and_help, SpanlessHash};\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_hir::*;\n+use rustc_hir::{GenericBound, Generics, WherePredicate};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n "}, {"sha": "68c924cea47525075ef7bffe2e99132b656f2d6b", "filename": "clippy_lints/src/transmute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -4,7 +4,7 @@ use crate::utils::{\n use if_chain::if_chain;\n use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{Expr, ExprKind, GenericArg, Mutability, QPath, TyKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::borrow::Cow;"}, {"sha": "e00bc2e090ae1e4d3e49ade85065e583d1ac21e7", "filename": "clippy_lints/src/trivially_copy_pass_by_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -8,7 +8,7 @@ use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::intravisit::FnKind;\n-use rustc_hir::*;\n+use rustc_hir::{Body, FnDecl, HirId, ItemKind, MutTy, Mutability, Node};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::Span;"}, {"sha": "a6624408ce05e24e1ea6351c13502c790c7b9f86", "filename": "clippy_lints/src/try_err.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Ftry_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Ftry_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftry_err.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -3,7 +3,7 @@ use if_chain::if_chain;\n use rustc::lint::in_external_macro;\n use rustc::ty::Ty;\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{Arm, Expr, ExprKind, MatchSource};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "e9c0b0935fa977c95d03a5a86fccc89a9571ce7f", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -12,7 +12,11 @@ use rustc::ty::{self, InferTy, Ty, TyCtxt, TypeckTables};\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::intravisit::{walk_body, walk_expr, walk_ty, FnKind, NestedVisitorMap, Visitor};\n-use rustc_hir::*;\n+use rustc_hir::{\n+    BinOpKind, Body, Expr, ExprKind, FnDecl, FnRetTy, FnSig, GenericArg, GenericParamKind, HirId, ImplItem,\n+    ImplItemKind, Item, ItemKind, Lifetime, Local, MatchSource, MutTy, Mutability, QPath, Stmt, StmtKind, TraitItem,\n+    TraitItemKind, TraitMethod, TyKind, UnOp,\n+};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint, impl_lint_pass};\n use rustc_span::hygiene::{ExpnKind, MacroKind};\n@@ -1679,9 +1683,9 @@ fn detect_absurd_comparison<'a, 'tcx>(\n     lhs: &'tcx Expr<'_>,\n     rhs: &'tcx Expr<'_>,\n ) -> Option<(ExtremeExpr<'tcx>, AbsurdComparisonResult)> {\n-    use crate::types::AbsurdComparisonResult::*;\n-    use crate::types::ExtremeType::*;\n-    use crate::utils::comparisons::*;\n+    use crate::types::AbsurdComparisonResult::{AlwaysFalse, AlwaysTrue, InequalityImpossible};\n+    use crate::types::ExtremeType::{Maximum, Minimum};\n+    use crate::utils::comparisons::{normalize_comparison, Rel};\n \n     // absurd comparison only makes sense on primitive types\n     // primitive types don't implement comparison operators with each other\n@@ -1726,7 +1730,7 @@ fn detect_absurd_comparison<'a, 'tcx>(\n }\n \n fn detect_extreme_expr<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr<'_>) -> Option<ExtremeExpr<'tcx>> {\n-    use crate::types::ExtremeType::*;\n+    use crate::types::ExtremeType::{Maximum, Minimum};\n \n     let ty = cx.tables.expr_ty(expr);\n \n@@ -1755,8 +1759,8 @@ fn detect_extreme_expr<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr<'_\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AbsurdExtremeComparisons {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr<'_>) {\n-        use crate::types::AbsurdComparisonResult::*;\n-        use crate::types::ExtremeType::*;\n+        use crate::types::AbsurdComparisonResult::{AlwaysFalse, AlwaysTrue, InequalityImpossible};\n+        use crate::types::ExtremeType::{Maximum, Minimum};\n \n         if let ExprKind::Binary(ref cmp, ref lhs, ref rhs) = expr.kind {\n             if let Some((culprit, result)) = detect_absurd_comparison(cx, cmp.node, lhs, rhs) {\n@@ -1863,7 +1867,7 @@ impl Ord for FullInt {\n }\n \n fn numeric_cast_precast_bounds<'a>(cx: &LateContext<'_, '_>, expr: &'a Expr<'_>) -> Option<(FullInt, FullInt)> {\n-    use std::*;\n+    use std::{i128, i16, i32, i64, i8, isize, u128, u16, u32, u64, u8, usize};\n \n     if let ExprKind::Cast(ref cast_exp, _) = expr.kind {\n         let pre_cast_ty = cx.tables.expr_ty(cast_exp);\n@@ -1963,7 +1967,7 @@ fn upcast_comparison_bounds_err<'a, 'tcx>(\n     rhs: &'tcx Expr<'_>,\n     invert: bool,\n ) {\n-    use crate::utils::comparisons::*;\n+    use crate::utils::comparisons::Rel;\n \n     if let Some((lb, ub)) = lhs_bounds {\n         if let Some(norm_rhs_val) = node_as_const_fullint(cx, rhs) {"}, {"sha": "355d2ec0f1c74500224d072b5558c44c4ebeb598", "filename": "clippy_lints/src/unicode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funicode.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{is_allowed, snippet, span_lint_and_sugg};\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{Expr, ExprKind, HirId};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;"}, {"sha": "2b2df4241505bb7c0433d740eab166f93339c344", "filename": "clippy_lints/src/unsafe_removed_from_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -3,7 +3,7 @@ use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::SymbolStr;\n-use syntax::ast::*;\n+use syntax::ast::{Ident, Item, ItemKind, UseTree, UseTreeKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for imports that remove \"unsafe\" from an item's"}, {"sha": "79dd93e64ff8ffd86579ca07d601e8ba83713f1b", "filename": "clippy_lints/src/unwrap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Funwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Funwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funwrap.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -2,8 +2,8 @@ use crate::utils::{higher::if_block, match_type, paths, span_lint_and_then, usag\n use if_chain::if_chain;\n use rustc::hir::map::Map;\n use rustc::lint::in_external_macro;\n-use rustc_hir::intravisit::*;\n-use rustc_hir::*;\n+use rustc_hir::intravisit::{walk_expr, walk_fn, FnKind, NestedVisitorMap, Visitor};\n+use rustc_hir::{BinOpKind, Body, Expr, ExprKind, FnDecl, HirId, Path, QPath, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;"}, {"sha": "4170dcc7fadfce67c712b6c578b7d7d1f00a389d", "filename": "clippy_lints/src/use_self.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuse_self.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -7,7 +7,10 @@ use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::intravisit::{walk_item, walk_path, walk_ty, NestedVisitorMap, Visitor};\n-use rustc_hir::*;\n+use rustc_hir::{\n+    def, FnDecl, FnRetTy, FnSig, GenericArg, HirId, ImplItem, ImplItemKind, Item, ItemKind, Path, PathSegment, QPath,\n+    TyKind,\n+};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::kw;"}, {"sha": "a4dc24cecc224d641f4259b46373a3abc7527c4a", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -157,7 +157,7 @@ impl PrintVisitor {\n     }\n \n     fn next(&mut self, s: &'static str) -> String {\n-        use std::collections::hash_map::Entry::*;\n+        use std::collections::hash_map::Entry::{Occupied, Vacant};\n         match self.ids.entry(s) {\n             // already there: start numbering from `1`\n             Occupied(mut occ) => {"}, {"sha": "c62f95cd5624d01f62d06ea8f680db0f6bc56fd3", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -3,7 +3,11 @@ use crate::utils::differing_macro_contexts;\n use rustc::ich::StableHashingContextProvider;\n use rustc::ty::TypeckTables;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n-use rustc_hir::*;\n+use rustc_hir::{\n+    BinOpKind, Block, BlockCheckMode, BodyId, BorrowKind, CaptureBy, Expr, ExprKind, Field, FnRetTy, GenericArg,\n+    GenericArgs, Guard, Lifetime, LifetimeName, ParamName, Pat, PatKind, Path, PathSegment, QPath, Stmt, StmtKind, Ty,\n+    TyKind, TypeBinding,\n+};\n use rustc_lint::LateContext;\n use std::hash::Hash;\n use syntax::ast::Name;"}, {"sha": "85fee84cb3b949c89b78d0ea9dd31d5164e668ca", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -9,7 +9,7 @@ use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n-use rustc_hir::*;\n+use rustc_hir::{Crate, Expr, ExprKind, HirId, Item, MutTy, Mutability, Path, Ty, TyKind};\n use rustc_lint::{EarlyContext, EarlyLintPass, LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::{Span, Spanned};"}, {"sha": "2689cab2817f7e19c4b8b9f599c2f30e86056fce", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -40,7 +40,10 @@ use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::intravisit::{NestedVisitorMap, Visitor};\n use rustc_hir::Node;\n-use rustc_hir::*;\n+use rustc_hir::{\n+    def, Arm, Block, Body, Constness, Crate, Expr, ExprKind, FnDecl, HirId, ImplItem, ImplItemKind, Item, ItemKind,\n+    MatchSource, Param, Pat, PatKind, Path, PathSegment, QPath, TraitItem, TraitItemKind, TraitRef, TyKind, Unsafety,\n+};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_infer::traits::predicate_for_trait_def;\n use rustc_lint::{LateContext, Level, Lint, LintContext};\n@@ -52,7 +55,7 @@ use smallvec::SmallVec;\n use syntax::ast::{self, Attribute, LitKind};\n \n use crate::consts::{constant, Constant};\n-use crate::reexport::*;\n+use crate::reexport::Name;\n \n /// Returns `true` if the two spans come from differing expansions (i.e., one is\n /// from a macro and one isn't).\n@@ -1289,7 +1292,7 @@ pub fn must_use_attr(attrs: &[Attribute]) -> Option<&Attribute> {\n \n // Returns whether the type has #[must_use] attribute\n pub fn is_must_use_ty<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, ty: Ty<'tcx>) -> bool {\n-    use ty::TyKind::*;\n+    use ty::TyKind::{Adt, Array, Dynamic, Foreign, Opaque, RawPtr, Ref, Slice, Tuple};\n     match ty.kind {\n         Adt(ref adt, _) => must_use_attr(&cx.tcx.get_attrs(adt.did)).is_some(),\n         Foreign(ref did) => must_use_attr(&cx.tcx.get_attrs(*did)).is_some(),"}, {"sha": "3d97c18e9b4e84cdd873a2e4cd6329f18a400a8d", "filename": "clippy_lints/src/utils/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Futils%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Futils%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fptr.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::{get_pat_name, match_var, snippet};\n use rustc::hir::map::Map;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n-use rustc_hir::*;\n+use rustc_hir::{Body, BodyId, Expr, ExprKind, Param};\n use rustc_lint::LateContext;\n use rustc_span::source_map::Span;\n use std::borrow::Cow;"}, {"sha": "278505859b720ed68ef1d9f45ffb224fb912bf95", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -426,7 +426,10 @@ enum Associativity {\n /// associative.\n #[must_use]\n fn associativity(op: &AssocOp) -> Associativity {\n-    use syntax::util::parser::AssocOp::*;\n+    use syntax::util::parser::AssocOp::{\n+        Add, As, Assign, AssignOp, BitAnd, BitOr, BitXor, Colon, Divide, DotDot, DotDotEq, Equal, Greater,\n+        GreaterEqual, LAnd, LOr, Less, LessEqual, Modulus, Multiply, NotEqual, ShiftLeft, ShiftRight, Subtract,\n+    };\n \n     match *op {\n         Assign | AssignOp(_) => Associativity::Right,\n@@ -439,7 +442,7 @@ fn associativity(op: &AssocOp) -> Associativity {\n \n /// Converts a `hir::BinOp` to the corresponding assigning binary operator.\n fn hirbinop2assignop(op: hir::BinOp) -> AssocOp {\n-    use syntax::token::BinOpToken::*;\n+    use syntax::token::BinOpToken::{And, Caret, Minus, Or, Percent, Plus, Shl, Shr, Slash, Star};\n \n     AssocOp::AssignOp(match op.node {\n         hir::BinOpKind::Add => Plus,\n@@ -466,7 +469,9 @@ fn hirbinop2assignop(op: hir::BinOp) -> AssocOp {\n \n /// Converts an `ast::BinOp` to the corresponding assigning binary operator.\n fn astbinop2assignop(op: ast::BinOp) -> AssocOp {\n-    use syntax::ast::BinOpKind::*;\n+    use syntax::ast::BinOpKind::{\n+        Add, And, BitAnd, BitOr, BitXor, Div, Eq, Ge, Gt, Le, Lt, Mul, Ne, Or, Rem, Shl, Shr, Sub,\n+    };\n     use syntax::token::BinOpToken;\n \n     AssocOp::AssignOp(match op.node {"}, {"sha": "3e8b29295f394d243da9a0217a364b8b58eda2a3", "filename": "clippy_lints/src/utils/usage.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fusage.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -4,11 +4,11 @@ use rustc::ty;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::def::Res;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n-use rustc_hir::*;\n+use rustc_hir::{def_id, Expr, HirId, Path};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::LateContext;\n use rustc_span::symbol::Ident;\n-use rustc_typeck::expr_use_visitor::*;\n+use rustc_typeck::expr_use_visitor::{ConsumeMode, Delegate, ExprUseVisitor, Place, PlaceBase};\n use syntax::ast;\n \n /// Returns a set of mutated local variable IDs, or `None` if mutations could not be determined."}, {"sha": "726a34856aebbba18773c48ff73b2e8010532e06", "filename": "clippy_lints/src/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fvec.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -3,7 +3,7 @@ use crate::utils::{higher, is_copy, snippet_with_applicability, span_lint_and_su\n use if_chain::if_chain;\n use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{BorrowKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;"}, {"sha": "0be168d563ab5d5905a44d301907efad5f2d44ea", "filename": "clippy_lints/src/wildcard_dependencies.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -2,7 +2,7 @@ use crate::utils::span_lint;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::DUMMY_SP;\n-use syntax::ast::*;\n+use syntax::ast::Crate;\n \n use if_chain::if_chain;\n "}, {"sha": "904e2fab07ad9ce84b4e279fc693c172acd30a43", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -9,7 +9,7 @@ use rustc_parse::parser;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::Symbol;\n use rustc_span::{BytePos, Span};\n-use syntax::ast::*;\n+use syntax::ast::{Expr, ExprKind, Mac, StrLit, StrStyle};\n use syntax::token;\n use syntax::tokenstream::TokenStream;\n \n@@ -317,7 +317,9 @@ fn newline_span(fmtstr: &StrLit) -> Span {\n /// ```\n #[allow(clippy::too_many_lines)]\n fn check_tts<'a>(cx: &EarlyContext<'a>, tts: &TokenStream, is_write: bool) -> (Option<StrLit>, Option<Expr>) {\n-    use fmt_macros::*;\n+    use fmt_macros::{\n+        AlignUnknown, ArgumentImplicitlyIs, ArgumentIs, ArgumentNamed, CountImplied, FormatSpec, Parser, Piece,\n+    };\n     let tts = tts.clone();\n \n     let mut parser = parser::Parser::new(&cx.sess.parse_sess, tts, None, false, false, None);"}, {"sha": "42cb9a77db02b1f81850dd57b715966737ecc8ff", "filename": "clippy_lints/src/zero_div_zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fzero_div_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/clippy_lints%2Fsrc%2Fzero_div_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fzero_div_zero.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,7 +1,7 @@\n use crate::consts::{constant_simple, Constant};\n use crate::utils::span_lint_and_help;\n use if_chain::if_chain;\n-use rustc_hir::*;\n+use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n "}, {"sha": "7865f6bb9dd0e0f2c173bfe457e515900fc8ea7b", "filename": "src/driver.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -15,7 +15,7 @@ extern crate rustc_interface;\n \n use rustc::ty::TyCtxt;\n use rustc_interface::interface;\n-use rustc_tools_util::*;\n+use rustc_tools_util::VersionInfo;\n \n use lazy_static::lazy_static;\n use std::borrow::Cow;\n@@ -93,7 +93,7 @@ impl rustc_driver::Callbacks for ClippyCallbacks {\n \n #[allow(clippy::find_map, clippy::filter_map)]\n fn describe_lints() {\n-    use lintlist::*;\n+    use lintlist::{Level, Lint, ALL_LINTS, LINT_LEVELS};\n     use std::collections::HashSet;\n \n     println!("}, {"sha": "93e6996be069af7b5d9293a5fab9088ffb243802", "filename": "src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8472ecda0f18a2b1045d4b8736e06e774ab1c73a/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=8472ecda0f18a2b1045d4b8736e06e774ab1c73a", "patch": "@@ -1,6 +1,6 @@\n #![cfg_attr(feature = \"deny-warnings\", deny(warnings))]\n \n-use rustc_tools_util::*;\n+use rustc_tools_util::VersionInfo;\n \n const CARGO_CLIPPY_HELP: &str = r#\"Checks a package to catch common mistakes and improve your Rust code.\n "}]}