{"sha": "f8a222a5e1c443039f98e4e9a70a2bf95aa21c9c", "node_id": "C_kwDOAAsO6NoAKGY4YTIyMmE1ZTFjNDQzMDM5Zjk4ZTRlOWE3MGEyYmY5NWFhMjFjOWM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-22T15:53:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-22T15:53:15Z"}, "message": "Auto merge of #2258 - RalfJung:fmt, r=RalfJung\n\nfmt", "tree": {"sha": "c17577710822e5357f0ba10c478fcd8b8ebcf3f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c17577710822e5357f0ba10c478fcd8b8ebcf3f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8a222a5e1c443039f98e4e9a70a2bf95aa21c9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8a222a5e1c443039f98e4e9a70a2bf95aa21c9c", "html_url": "https://github.com/rust-lang/rust/commit/f8a222a5e1c443039f98e4e9a70a2bf95aa21c9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8a222a5e1c443039f98e4e9a70a2bf95aa21c9c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d1d345f8f9badc83bad702b83ecca5feb85691f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d1d345f8f9badc83bad702b83ecca5feb85691f", "html_url": "https://github.com/rust-lang/rust/commit/3d1d345f8f9badc83bad702b83ecca5feb85691f"}, {"sha": "599a0cf4fc0440ec391b6d1fc736bb68dd28028b", "url": "https://api.github.com/repos/rust-lang/rust/commits/599a0cf4fc0440ec391b6d1fc736bb68dd28028b", "html_url": "https://github.com/rust-lang/rust/commit/599a0cf4fc0440ec391b6d1fc736bb68dd28028b"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "43c687e9c9a50552aed9e0173b12131d04cc37b4", "filename": "ui_test/src/comments.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f8a222a5e1c443039f98e4e9a70a2bf95aa21c9c/ui_test%2Fsrc%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8a222a5e1c443039f98e4e9a70a2bf95aa21c9c/ui_test%2Fsrc%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ui_test%2Fsrc%2Fcomments.rs?ref=f8a222a5e1c443039f98e4e9a70a2bf95aa21c9c", "patch": "@@ -31,7 +31,6 @@ pub(crate) struct Comments {\n     pub error_matches: Vec<ErrorMatch>,\n }\n \n-\n /// The conditions used for \"ignore\" and \"only\" filters.\n #[derive(Debug)]\n pub(crate) enum Condition {\n@@ -55,7 +54,9 @@ pub(crate) struct ErrorMatch {\n impl Condition {\n     fn parse(c: &str) -> Self {\n         if let Some(bits) = c.strip_suffix(\"bit\") {\n-            let bits: u8 = bits.parse().expect(\"ignore/only filter ending in 'bit' must be of the form 'Nbit' for some integer N\");\n+            let bits: u8 = bits.parse().expect(\n+                \"ignore/only filter ending in 'bit' must be of the form 'Nbit' for some integer N\",\n+            );\n             Condition::Bitwidth(bits)\n         } else {\n             Condition::Target(c.to_owned())"}]}