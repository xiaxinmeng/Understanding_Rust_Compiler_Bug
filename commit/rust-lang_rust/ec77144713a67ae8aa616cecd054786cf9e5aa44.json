{"sha": "ec77144713a67ae8aa616cecd054786cf9e5aa44", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjNzcxNDQ3MTNhNjdhZThhYTYxNmNlY2QwNTQ3ODZjZjllNWFhNDQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-10-31T17:28:18Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-02T21:14:20Z"}, "message": "add -m64 to gcc args if appropriate", "tree": {"sha": "de3d627a28cf046336d832b88e520602ab415ff9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de3d627a28cf046336d832b88e520602ab415ff9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec77144713a67ae8aa616cecd054786cf9e5aa44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec77144713a67ae8aa616cecd054786cf9e5aa44", "html_url": "https://github.com/rust-lang/rust/commit/ec77144713a67ae8aa616cecd054786cf9e5aa44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec77144713a67ae8aa616cecd054786cf9e5aa44/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e012fd03f3a4ff383a2e9beae62f93c527e1eed5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e012fd03f3a4ff383a2e9beae62f93c527e1eed5", "html_url": "https://github.com/rust-lang/rust/commit/e012fd03f3a4ff383a2e9beae62f93c527e1eed5"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "8d46774712ab228a7b29edf3cfef92433420aeb8", "filename": "src/comp/back/link.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec77144713a67ae8aa616cecd054786cf9e5aa44/src%2Fcomp%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec77144713a67ae8aa616cecd054786cf9e5aa44/src%2Fcomp%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Flink.rs?ref=ec77144713a67ae8aa616cecd054786cf9e5aa44", "patch": "@@ -516,7 +516,9 @@ fn link_binary(sess: session::session,\n     let prog: str = \"gcc\";\n     // The invocations of gcc share some flags across platforms\n \n-    let gcc_args = [stage, \"-m32\", \"-o\", out_filename, obj_filename];\n+    let gcc_args =\n+        [stage] + sess.get_targ_cfg().target_strs.gcc_args +\n+        [\"-o\", out_filename, obj_filename];\n     let lib_cmd;\n \n     let os = sess.get_targ_cfg().os;"}, {"sha": "c3f70d83dfc3ac67444ff313161b84545f0f5e0a", "filename": "src/comp/back/target_strs.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ec77144713a67ae8aa616cecd054786cf9e5aa44/src%2Fcomp%2Fback%2Ftarget_strs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec77144713a67ae8aa616cecd054786cf9e5aa44/src%2Fcomp%2Fback%2Ftarget_strs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Ftarget_strs.rs?ref=ec77144713a67ae8aa616cecd054786cf9e5aa44", "patch": "@@ -4,5 +4,6 @@ type t = {\n     module_asm: str,\n     meta_sect_name: str,\n     data_layout: str,\n-    target_triple: str\n+    target_triple: str,\n+    gcc_args: [str]\n };\n\\ No newline at end of file"}, {"sha": "0aff0604389f8838551f4600e3ed76fac72e2436", "filename": "src/comp/back/x86.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec77144713a67ae8aa616cecd054786cf9e5aa44/src%2Fcomp%2Fback%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec77144713a67ae8aa616cecd054786cf9e5aa44/src%2Fcomp%2Fback%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Fx86.rs?ref=ec77144713a67ae8aa616cecd054786cf9e5aa44", "patch": "@@ -33,7 +33,9 @@ fn get_target_strs(target_os: session::os) -> target_strs::t {\n           session::os_macos. { \"i686-apple-darwin\" }\n           session::os_win32. { \"i686-pc-mingw32\" }\n           session::os_linux. { \"i686-unknown-linux-gnu\" }\n-        }\n+        },\n+\n+        gcc_args: [\"-m32\"]\n     };\n }\n "}, {"sha": "a668e3ee2f097c877b32dc54ecfab752be143840", "filename": "src/comp/back/x86_64.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec77144713a67ae8aa616cecd054786cf9e5aa44/src%2Fcomp%2Fback%2Fx86_64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec77144713a67ae8aa616cecd054786cf9e5aa44/src%2Fcomp%2Fback%2Fx86_64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Fx86_64.rs?ref=ec77144713a67ae8aa616cecd054786cf9e5aa44", "patch": "@@ -33,7 +33,9 @@ fn get_target_strs(target_os: session::os) -> target_strs::t {\n           session::os_macos. { \"x86_64-apple-darwin\" }\n           session::os_win32. { \"x86_64-pc-mingw32\" }\n           session::os_linux. { \"x86_64-unknown-linux-gnu\" }\n-        }\n+        },\n+\n+        gcc_args: [\"-m64\"]\n     };\n }\n "}, {"sha": "d60fcc88c3e83e9afc9b3eb3976ffe33a5939e54", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ec77144713a67ae8aa616cecd054786cf9e5aa44/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec77144713a67ae8aa616cecd054786cf9e5aa44/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=ec77144713a67ae8aa616cecd054786cf9e5aa44", "patch": "@@ -6063,11 +6063,13 @@ fn trans_crate(sess: session::session, crate: @ast::crate, tcx: ty::ctxt,\n         llvm::LLVMModuleCreateWithNameInContext\n             (buf, llvm::LLVMGetGlobalContext())\n     });\n+    let data_layout = sess.get_targ_cfg().target_strs.data_layout;\n+    let targ_triple = sess.get_targ_cfg().target_strs.target_triple;\n     let _: () =\n-        str::as_buf(sess.get_targ_cfg().target_strs.data_layout,\n+        str::as_buf(data_layout,\n                     {|buf| llvm::LLVMSetDataLayout(llmod, buf) });\n     let _: () =\n-        str::as_buf(sess.get_targ_cfg().target_strs.target_triple,\n+        str::as_buf(targ_triple,\n                     {|buf| llvm::LLVMSetTarget(llmod, buf) });\n     let targ_cfg = sess.get_targ_cfg();\n     let td = mk_target_data(sess.get_targ_cfg().target_strs.data_layout);"}]}