{"sha": "74fdb5cf2cbd069ad2890ee642d66fc59b3ddc0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0ZmRiNWNmMmNiZDA2OWFkMjg5MGVlNjQyZDY2ZmM1OWIzZGRjMGU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-09T07:12:26Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-17T15:33:47Z"}, "message": "patch away --error-format and --json so that errors are rendered properly", "tree": {"sha": "60d1fc5eb4faf145ba3d3d3d1a5dff60ccf756eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60d1fc5eb4faf145ba3d3d3d1a5dff60ccf756eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74fdb5cf2cbd069ad2890ee642d66fc59b3ddc0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74fdb5cf2cbd069ad2890ee642d66fc59b3ddc0e", "html_url": "https://github.com/rust-lang/rust/commit/74fdb5cf2cbd069ad2890ee642d66fc59b3ddc0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74fdb5cf2cbd069ad2890ee642d66fc59b3ddc0e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "119bf4d6073e0675714c1ee1f3f4f9b655b83544", "url": "https://api.github.com/repos/rust-lang/rust/commits/119bf4d6073e0675714c1ee1f3f4f9b655b83544", "html_url": "https://github.com/rust-lang/rust/commit/119bf4d6073e0675714c1ee1f3f4f9b655b83544"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "bac38e3c801889423f405ecd4cfd07ff3097b1dd", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/74fdb5cf2cbd069ad2890ee642d66fc59b3ddc0e/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74fdb5cf2cbd069ad2890ee642d66fc59b3ddc0e/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=74fdb5cf2cbd069ad2890ee642d66fc59b3ddc0e", "patch": "@@ -588,16 +588,32 @@ fn phase_cargo_runner(binary: &str, binary_args: env::Args) {\n     }\n \n     let mut cmd = miri();\n-    // Forward rustc arguments. We need to patch \"--extern\" filenames because\n-    // we forced a check-only build without cargo knowing about that: replace `.rlib` suffix by `.rmeta`.\n+    // Forward rustc arguments.\n+    // We need to patch \"--extern\" filenames because we forced a check-only\n+    // build without cargo knowing about that: replace `.rlib` suffix by\n+    // `.rmeta`.\n+    // We also need to remove `--error-format` as cargo specifies that to be JSON,\n+    // but when we run here, cargo does not interpret the JSON any more. `--json`\n+    // then also nees to be dropped.\n     let mut args = info.args.into_iter();\n     let extern_flag = \"--extern\";\n+    let error_format_flag = \"--error-format\";\n+    let json_flag = \"--json\";\n     while let Some(arg) = args.next() {\n         if arg == extern_flag {\n+            // `--extern` is always passed as a separate argument by cargo.\n             let next_arg = args.next().expect(\"`--extern` should be followed by a filename\");\n             let next_arg = next_arg.strip_suffix(\".rlib\").expect(\"all extern filenames should end in `.rlib`\");\n             cmd.arg(extern_flag);\n             cmd.arg(format!(\"{}.rmeta\", next_arg));\n+        } else if arg.starts_with(error_format_flag) {\n+            let suffix = &arg[error_format_flag.len()..];\n+            assert!(suffix.starts_with('='));\n+            // Drop this argument.\n+        } else if arg.starts_with(json_flag) {\n+            let suffix = &arg[json_flag.len()..];\n+            assert!(suffix.starts_with('='));\n+            // Drop this argument.\n         } else {\n             cmd.arg(arg);\n         }"}]}