{"sha": "cfa76c438a907bf223e4487ab4da2500277474cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmYTc2YzQzOGE5MDdiZjIyM2U0NDg3YWI0ZGEyNTAwMjc3NDc0Y2M=", "commit": {"author": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-03-25T10:49:08Z"}, "committer": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-03-25T10:49:08Z"}, "message": "black_box should inhibit optimizations on platforms without inline assembly", "tree": {"sha": "f49d736607ac49fbf3bc839d1f845cb56a016629", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f49d736607ac49fbf3bc839d1f845cb56a016629"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfa76c438a907bf223e4487ab4da2500277474cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfa76c438a907bf223e4487ab4da2500277474cc", "html_url": "https://github.com/rust-lang/rust/commit/cfa76c438a907bf223e4487ab4da2500277474cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfa76c438a907bf223e4487ab4da2500277474cc/comments", "author": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2443831e97279d94902997d2c012d2e92d5d996", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2443831e97279d94902997d2c012d2e92d5d996", "html_url": "https://github.com/rust-lang/rust/commit/f2443831e97279d94902997d2c012d2e92d5d996"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "abaf0b31b468f0df25e9368c49e2f84e816e9202", "filename": "src/libcore/hint.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cfa76c438a907bf223e4487ab4da2500277474cc/src%2Flibcore%2Fhint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfa76c438a907bf223e4487ab4da2500277474cc/src%2Flibcore%2Fhint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhint.rs?ref=cfa76c438a907bf223e4487ab4da2500277474cc", "patch": "@@ -106,7 +106,10 @@ pub fn black_box<T>(dummy: T) -> T {\n         dummy\n     }\n     #[cfg(any(target_arch = \"asmjs\", target_arch = \"wasm32\"))] {\n-        #[inline(never)] fn black_box_(x: T) -> T { x }\n-        black_box_(dummy)\n-    }\n+        unsafe {\n+            let ret = crate::ptr::read_volatile(&dummy);\n+            crate::mem::forget(dummy);\n+            ret\n+        }\n+   }\n }"}]}