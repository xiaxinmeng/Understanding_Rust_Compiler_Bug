{"sha": "13e1bf1881f2523edd315a73412f74339a2168db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzZTFiZjE4ODFmMjUyM2VkZDMxNWE3MzQxMmY3NDMzOWEyMTY4ZGI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-21T04:57:25Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:30Z"}, "message": "librustc: De-`@mut` `FunctionDebugContextData::source_locations_enabled`", "tree": {"sha": "a8694072499213d203e71bc48114b6243d53a411", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8694072499213d203e71bc48114b6243d53a411"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13e1bf1881f2523edd315a73412f74339a2168db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13e1bf1881f2523edd315a73412f74339a2168db", "html_url": "https://github.com/rust-lang/rust/commit/13e1bf1881f2523edd315a73412f74339a2168db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13e1bf1881f2523edd315a73412f74339a2168db/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a74138ed2253b792760f1fa6ab88d6b3d28a07e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a74138ed2253b792760f1fa6ab88d6b3d28a07e9", "html_url": "https://github.com/rust-lang/rust/commit/a74138ed2253b792760f1fa6ab88d6b3d28a07e9"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "0dd72bf54b1ce61fcd660947dbdc3ec872b8cfe7", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/13e1bf1881f2523edd315a73412f74339a2168db/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e1bf1881f2523edd315a73412f74339a2168db/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=13e1bf1881f2523edd315a73412f74339a2168db", "patch": "@@ -251,7 +251,7 @@ struct FunctionDebugContextData {\n     scope_map: RefCell<HashMap<ast::NodeId, DIScope>>,\n     fn_metadata: DISubprogram,\n     argument_counter: Cell<uint>,\n-    source_locations_enabled: bool,\n+    source_locations_enabled: Cell<bool>,\n }\n \n enum VariableAccess<'a> {\n@@ -569,7 +569,7 @@ pub fn set_source_location(fcx: &FunctionContext,\n \n     debug!(\"set_source_location: {}\", cx.sess.codemap.span_to_str(span));\n \n-    if fcx.debug_context.get_ref(cx, span).source_locations_enabled {\n+    if fcx.debug_context.get_ref(cx, span).source_locations_enabled.get() {\n         let loc = span_start(cx, span);\n         let scope = scope_metadata(fcx, node_id, span);\n \n@@ -598,7 +598,9 @@ pub fn clear_source_location(fcx: &FunctionContext) {\n /// translated.\n pub fn start_emitting_source_locations(fcx: &mut FunctionContext) {\n     match fcx.debug_context {\n-        FunctionDebugContext(~ref mut data) => data.source_locations_enabled = true,\n+        FunctionDebugContext(~ref mut data) => {\n+            data.source_locations_enabled.set(true)\n+        },\n         _ => { /* safe to ignore */ }\n     }\n }\n@@ -765,7 +767,7 @@ pub fn create_function_debug_context(cx: &CrateContext,\n         scope_map: RefCell::new(HashMap::new()),\n         fn_metadata: fn_metadata,\n         argument_counter: Cell::new(1),\n-        source_locations_enabled: false,\n+        source_locations_enabled: Cell::new(false),\n     };\n \n     let arg_pats = fn_decl.inputs.map(|arg_ref| arg_ref.pat);\n@@ -1049,7 +1051,11 @@ fn declare_local(bcx: @Block,\n \n     match variable_kind {\n         ArgumentVariable(_) | CapturedVariable => {\n-            assert!(!bcx.fcx.debug_context.get_ref(cx, span).source_locations_enabled);\n+            assert!(!bcx.fcx\n+                        .debug_context\n+                        .get_ref(cx, span)\n+                        .source_locations_enabled\n+                        .get());\n             set_debug_location(cx, UnknownLocation);\n         }\n         _ => { /* nothing to do */ }"}]}