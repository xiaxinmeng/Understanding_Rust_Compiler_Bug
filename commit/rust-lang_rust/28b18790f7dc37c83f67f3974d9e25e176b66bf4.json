{"sha": "28b18790f7dc37c83f67f3974d9e25e176b66bf4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4YjE4NzkwZjdkYzM3YzgzZjY3ZjM5NzRkOWUyNWUxNzZiNjZiZjQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-11-01T05:32:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-01T05:32:12Z"}, "message": "Rollup merge of #45624 - glaubitz:bootstrap-sparc64, r=kennytm\n\nbootstrap: Add missing cputype matching for sparc64\n\nTrying to configure rust natively on sparc64-unknown-linux-gnu currently fails with:\n\n```\nroot@deb4g:/local_scratch/glaubitz/rust/rust# ./configure --host=sparc64-unknown-linux-gnu --enable-local-rust --local-rust-root=/usr/local\nconfigure: processing command line\nconfigure:\nconfigure: build.host           := ['sparc64-unknown-linux-gnu']\nconfigure: build.rustc          := /usr/local/bin/rustc\nconfigure: build.cargo          := /usr/local/bin/cargo\nconfigure: build.rustc          := /usr/local/bin/rustc\nconfigure: build.cargo          := /usr/local/bin/cargo\nconfigure: build.configure-args := ['--host=sparc64-unknown-linux-gnu', '--enable ...\nunknown cpu type: sparc64\nroot@deb4g:/local_scratch/glaubitz/rust/rust#\n```\n\nThis is trivially fixed by defining sparc64 as a valid cputype.", "tree": {"sha": "aaf9edac2e97cbd9e1df472c320f5b5cb496f60f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aaf9edac2e97cbd9e1df472c320f5b5cb496f60f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28b18790f7dc37c83f67f3974d9e25e176b66bf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28b18790f7dc37c83f67f3974d9e25e176b66bf4", "html_url": "https://github.com/rust-lang/rust/commit/28b18790f7dc37c83f67f3974d9e25e176b66bf4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28b18790f7dc37c83f67f3974d9e25e176b66bf4/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18fa54f835c202c4ee58a12425ba080ddb0a5447", "url": "https://api.github.com/repos/rust-lang/rust/commits/18fa54f835c202c4ee58a12425ba080ddb0a5447", "html_url": "https://github.com/rust-lang/rust/commit/18fa54f835c202c4ee58a12425ba080ddb0a5447"}, {"sha": "d7dec7c8d71b30fea6e4c5aca40adce1724ba87d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7dec7c8d71b30fea6e4c5aca40adce1724ba87d", "html_url": "https://github.com/rust-lang/rust/commit/d7dec7c8d71b30fea6e4c5aca40adce1724ba87d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "707aceebb1eda99ed8eeacf5cfe345903a7b0d4f", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28b18790f7dc37c83f67f3974d9e25e176b66bf4/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/28b18790f7dc37c83f67f3974d9e25e176b66bf4/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=28b18790f7dc37c83f67f3974d9e25e176b66bf4", "patch": "@@ -294,7 +294,7 @@ def default_build_triple():\n             raise ValueError('unknown byteorder: {}'.format(sys.byteorder))\n         # only the n64 ABI is supported, indicate it\n         ostype += 'abi64'\n-    elif cputype == 'sparcv9':\n+    elif cputype == 'sparcv9' or cputype == 'sparc64':\n         pass\n     else:\n         err = \"unknown cpu type: {}\".format(cputype)"}]}