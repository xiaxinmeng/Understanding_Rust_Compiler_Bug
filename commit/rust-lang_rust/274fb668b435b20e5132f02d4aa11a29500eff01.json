{"sha": "274fb668b435b20e5132f02d4aa11a29500eff01", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3NGZiNjY4YjQzNWIyMGU1MTMyZjAyZDRhYTExYTI5NTAwZWZmMDE=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-02-12T15:00:15Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-03-14T21:52:31Z"}, "message": "Replace `Hir` with `hir_owner` in tests", "tree": {"sha": "02750c9ed4f42bbbf97aebdd68deabf3463b9b31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02750c9ed4f42bbbf97aebdd68deabf3463b9b31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/274fb668b435b20e5132f02d4aa11a29500eff01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/274fb668b435b20e5132f02d4aa11a29500eff01", "html_url": "https://github.com/rust-lang/rust/commit/274fb668b435b20e5132f02d4aa11a29500eff01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/274fb668b435b20e5132f02d4aa11a29500eff01/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0b60c428a051773dea79426cb4a6a03737ca902", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0b60c428a051773dea79426cb4a6a03737ca902", "html_url": "https://github.com/rust-lang/rust/commit/c0b60c428a051773dea79426cb4a6a03737ca902"}], "stats": {"total": 944, "additions": 472, "deletions": 472}, "files": [{"sha": "87f108abadd55869139a5744256b679a35db4e5c", "filename": "src/test/incremental/hashes/call_expressions.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Fcall_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Fcall_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fcall_expressions.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -55,8 +55,8 @@ mod change_callee_indirectly_function {\n     #[cfg(not(cfail1))]\n     use super::callee2 as callee;\n \n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n \n@@ -152,7 +152,7 @@ pub fn change_to_ufcs() {\n #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_items,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n // One might think this would be expanded in the hir_owner_items/Mir, but it actually\n-// results in slightly different Hir/Mir.\n+// results in slightly different hir_owner/Mir.\n pub fn change_to_ufcs() {\n     let s = Struct;\n     Struct::method1(&s, 'x', true);"}, {"sha": "8f77bb24f872e42022da29bbc61371f0ae31c4fa", "filename": "src/test/incremental/hashes/consts.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -19,7 +19,7 @@\n const CONST_VISIBILITY: u8 = 0;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub const CONST_VISIBILITY: u8 = 0;\n \n@@ -29,7 +29,7 @@ pub const CONST_VISIBILITY: u8 = 0;\n const CONST_CHANGE_TYPE_1: i32 = 0;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n const CONST_CHANGE_TYPE_1: u32 = 0;\n \n@@ -39,7 +39,7 @@ const CONST_CHANGE_TYPE_1: u32 = 0;\n const CONST_CHANGE_TYPE_2: Option<u32> = None;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n const CONST_CHANGE_TYPE_2: Option<u64> = None;\n \n@@ -99,11 +99,11 @@ mod const_change_type_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedType2 as Type;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     const CONST_CHANGE_TYPE_INDIRECTLY_1: Type = Type;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     const CONST_CHANGE_TYPE_INDIRECTLY_2: Option<Type> = None;\n }"}, {"sha": "5ad6eeafc7fc3ddee50a0d27f18b4fa7c8cd594a", "filename": "src/test/incremental/hashes/enum_constructors.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Fenum_constructors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Fenum_constructors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fenum_constructors.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -139,7 +139,7 @@ pub mod change_constructor_path_indirectly_struct_like {\n \n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"fn_sig,Hir,hir_owner_items,optimized_mir,mir_built,\\\n+        except=\"fn_sig,hir_owner,hir_owner_items,optimized_mir,mir_built,\\\n                 typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n@@ -232,7 +232,7 @@ pub mod change_constructor_path_indirectly_tuple_like {\n \n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"fn_sig,Hir,hir_owner_items,optimized_mir,mir_built,\\\n+        except=\"fn_sig,hir_owner,hir_owner_items,optimized_mir,mir_built,\\\n                 typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n@@ -309,7 +309,7 @@ pub mod change_constructor_path_indirectly_c_like {\n \n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"fn_sig,Hir,hir_owner_items,optimized_mir,mir_built,\\\n+        except=\"fn_sig,hir_owner,hir_owner_items,optimized_mir,mir_built,\\\n                 typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]"}, {"sha": "7be15b4bb155f56eb83fdfd6b8136a0ce570b6ef", "filename": "src/test/incremental/hashes/enum_defs.rs", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Fenum_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Fenum_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fenum_defs.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -26,7 +26,7 @@\n enum EnumVisibility { A }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub enum EnumVisibility {\n     A\n@@ -42,7 +42,7 @@ enum EnumChangeNameCStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumChangeNameCStyleVariant {\n     Variant1,\n@@ -59,7 +59,7 @@ enum EnumChangeNameTupleStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumChangeNameTupleStyleVariant {\n     Variant1,\n@@ -76,7 +76,7 @@ enum EnumChangeNameStructStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumChangeNameStructStyleVariant {\n     Variant1,\n@@ -109,7 +109,7 @@ enum EnumChangeValueCStyleVariant1 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumChangeValueCStyleVariant1 {\n     Variant1,\n@@ -125,7 +125,7 @@ enum EnumAddCStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumAddCStyleVariant {\n     Variant1,\n@@ -142,7 +142,7 @@ enum EnumRemoveCStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumRemoveCStyleVariant {\n     Variant1,\n@@ -157,7 +157,7 @@ enum EnumAddTupleStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumAddTupleStyleVariant {\n     Variant1,\n@@ -174,7 +174,7 @@ enum EnumRemoveTupleStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumRemoveTupleStyleVariant {\n     Variant1,\n@@ -189,7 +189,7 @@ enum EnumAddStructStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumAddStructStyleVariant {\n     Variant1,\n@@ -206,7 +206,7 @@ enum EnumRemoveStructStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumRemoveStructStyleVariant {\n     Variant1,\n@@ -221,7 +221,7 @@ enum EnumChangeFieldTypeTupleStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumChangeFieldTypeTupleStyleVariant {\n     Variant1(u32,\n@@ -238,7 +238,7 @@ enum EnumChangeFieldTypeStructStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumChangeFieldTypeStructStyleVariant {\n     Variant1,\n@@ -257,7 +257,7 @@ enum EnumChangeFieldNameStructStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumChangeFieldNameStructStyleVariant {\n     Variant1 { a: u32, c: u32 },\n@@ -272,7 +272,7 @@ enum EnumChangeOrderTupleStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumChangeOrderTupleStyleVariant {\n     Variant1(\n@@ -289,7 +289,7 @@ enum EnumChangeFieldOrderStructStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumChangeFieldOrderStructStyleVariant {\n     Variant1 { b: f32, a: u32 },\n@@ -304,7 +304,7 @@ enum EnumAddFieldTupleStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumAddFieldTupleStyleVariant {\n     Variant1(u32, u32, u32),\n@@ -319,7 +319,7 @@ enum EnumAddFieldStructStyleVariant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumAddFieldStructStyleVariant {\n     Variant1 { a: u32, b: u32, c: u32 },\n@@ -335,7 +335,7 @@ enum EnumAddMustUse {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[must_use]\n enum EnumAddMustUse {\n@@ -353,7 +353,7 @@ enum EnumAddReprC {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[repr(C)]\n enum EnumAddReprC {\n@@ -531,7 +531,7 @@ enum EnumSwapUsageTypeParameters<A, B> {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumSwapUsageTypeParameters<A, B> {\n     Variant1 {\n@@ -552,7 +552,7 @@ enum EnumSwapUsageLifetimeParameters<'a, 'b> {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n enum EnumSwapUsageLifetimeParameters<'a, 'b> {\n     Variant1 {\n@@ -577,7 +577,7 @@ mod change_field_type_indirectly_tuple_style {\n     #[cfg(not(cfail1))]\n     use super::ReferencedType2 as FieldType;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     enum TupleStyle {\n         Variant1(\n@@ -595,7 +595,7 @@ mod change_field_type_indirectly_struct_style {\n     #[cfg(not(cfail1))]\n     use super::ReferencedType2 as FieldType;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     enum StructStyle {\n         Variant1 {\n@@ -618,7 +618,7 @@ mod change_trait_bound_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait2 as Trait;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,predicates_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,predicates_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     enum Enum<T: Trait> {\n         Variant1(T)\n@@ -634,7 +634,7 @@ mod change_trait_bound_indirectly_where {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait2 as Trait;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,predicates_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,predicates_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     enum Enum<T> where T: Trait {\n         Variant1(T)"}, {"sha": "b546930ea8fcdb44baf8c00aa36e5c849863711e", "filename": "src/test/incremental/hashes/exported_vs_not.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Fexported_vs_not.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Fexported_vs_not.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fexported_vs_not.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -8,7 +8,7 @@\n \n // Case 1: The function body is not exported to metadata. If the body changes,\n //         the hash of the hir_owner_items node should change, but not the hash of\n-//         either the Hir or the Metadata node.\n+//         either the hir_owner or the Metadata node.\n \n #[cfg(cfail1)]\n pub fn body_not_exported_to_metadata() -> u32 {\n@@ -25,7 +25,7 @@ pub fn body_not_exported_to_metadata() -> u32 {\n \n \n // Case 2: The function body *is* exported to metadata because the function is\n-//         marked as #[inline]. Only the hash of the Hir depnode should be\n+//         marked as #[inline]. Only the hash of the hir_owner depnode should be\n //         unaffected by a change to the body.\n \n #[cfg(cfail1)]\n@@ -45,7 +45,7 @@ pub fn body_exported_to_metadata_because_of_inline() -> u32 {\n \n \n // Case 2: The function body *is* exported to metadata because the function is\n-//         generic. Only the hash of the Hir depnode should be\n+//         generic. Only the hash of the hir_owner depnode should be\n //         unaffected by a change to the body.\n \n #[cfg(cfail1)]"}, {"sha": "a7d2d76cf26bd303678a3149156b9c1882a9895c", "filename": "src/test/incremental/hashes/function_interfaces.rs", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -23,7 +23,7 @@ pub fn add_parameter() {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+              except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn add_parameter(p: i32) {}\n \n@@ -34,7 +34,7 @@ pub fn add_parameter(p: i32) {}\n pub fn add_return_type() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"hir_owner, hir_owner_items\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn add_return_type() -> () {}\n \n@@ -46,7 +46,7 @@ pub fn type_of_parameter(p: i32) {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+              except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn type_of_parameter(p: i64) {}\n \n@@ -58,7 +58,7 @@ pub fn type_of_parameter_ref(p: &i32) {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+              except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn type_of_parameter_ref(p: &mut i32) {}\n \n@@ -70,7 +70,7 @@ pub fn order_of_parameters(p1: i32, p2: i64) {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+              except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn order_of_parameters(p2: i64, p1: i32) {}\n \n@@ -82,7 +82,7 @@ pub fn make_unsafe() {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+              except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub unsafe fn make_unsafe() {}\n \n@@ -93,7 +93,7 @@ pub unsafe fn make_unsafe() {}\n pub fn make_extern() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items, typeck_tables_of, fn_sig\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"hir_owner, hir_owner_items, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub extern \"C\" fn make_extern() {}\n \n@@ -105,7 +105,7 @@ pub fn type_parameter() {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, hir_owner_items, generics_of, type_of, predicates_of\")]\n+              except = \"hir_owner, hir_owner_items, generics_of, type_of, predicates_of\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn type_parameter<T>() {}\n \n@@ -116,7 +116,7 @@ pub fn type_parameter<T>() {}\n pub fn lifetime_parameter() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items, generics_of\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"hir_owner, hir_owner_items, generics_of\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn lifetime_parameter<'a>() {}\n \n@@ -127,7 +127,7 @@ pub fn lifetime_parameter<'a>() {}\n pub fn trait_bound<T>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items, predicates_of\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"hir_owner, hir_owner_items, predicates_of\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn trait_bound<T: Eq>() {}\n \n@@ -138,7 +138,7 @@ pub fn trait_bound<T: Eq>() {}\n pub fn builtin_bound<T>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items, predicates_of\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"hir_owner, hir_owner_items, predicates_of\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn builtin_bound<T: Send>() {}\n \n@@ -150,7 +150,7 @@ pub fn lifetime_bound<'a, T>() {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, hir_owner_items, generics_of, type_of, predicates_of\")]\n+              except = \"hir_owner, hir_owner_items, generics_of, type_of, predicates_of\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn lifetime_bound<'a, T: 'a>() {}\n \n@@ -161,7 +161,7 @@ pub fn lifetime_bound<'a, T: 'a>() {}\n pub fn second_trait_bound<T: Eq>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items, predicates_of\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"hir_owner, hir_owner_items, predicates_of\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn second_trait_bound<T: Eq + Clone>() {}\n \n@@ -172,7 +172,7 @@ pub fn second_trait_bound<T: Eq + Clone>() {}\n pub fn second_builtin_bound<T: Send>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items, predicates_of\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"hir_owner, hir_owner_items, predicates_of\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn second_builtin_bound<T: Send + Sized>() {}\n \n@@ -184,7 +184,7 @@ pub fn second_lifetime_bound<'a, 'b, T: 'a>() {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, hir_owner_items, generics_of, type_of, predicates_of\")]\n+              except = \"hir_owner, hir_owner_items, generics_of, type_of, predicates_of\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn second_lifetime_bound<'a, 'b, T: 'a + 'b>() {}\n \n@@ -195,7 +195,7 @@ pub fn second_lifetime_bound<'a, 'b, T: 'a + 'b>() {}\n pub fn inline() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"hir_owner, hir_owner_items\")]\n #[rustc_clean(cfg = \"cfail3\")]\n #[inline]\n pub fn inline() {}\n@@ -208,7 +208,7 @@ pub fn inline() {}\n pub fn inline_never() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"hir_owner, hir_owner_items\")]\n #[rustc_clean(cfg = \"cfail3\")]\n #[inline(never)]\n pub fn inline_never() {}\n@@ -220,7 +220,7 @@ pub fn inline_never() {}\n pub fn no_mangle() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"hir_owner, hir_owner_items\")]\n #[rustc_clean(cfg = \"cfail3\")]\n #[no_mangle]\n pub fn no_mangle() {}\n@@ -232,7 +232,7 @@ pub fn no_mangle() {}\n pub fn linkage() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"hir_owner, hir_owner_items\")]\n #[rustc_clean(cfg = \"cfail3\")]\n #[linkage = \"weak_odr\"]\n pub fn linkage() {}\n@@ -246,7 +246,7 @@ pub fn return_impl_trait() -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items, typeck_tables_of, fn_sig\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"hir_owner, hir_owner_items, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn return_impl_trait() -> impl Clone {\n     0\n@@ -280,7 +280,7 @@ pub mod change_return_type_indirectly {\n     use super::ReferencedType2 as ReturnType;\n \n     #[rustc_clean(cfg = \"cfail2\",\n-                  except = \"Hir, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+                  except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n     #[rustc_clean(cfg = \"cfail3\")]\n     pub fn indirect_return_type() -> ReturnType {\n         ReturnType {}\n@@ -297,7 +297,7 @@ pub mod change_parameter_type_indirectly {\n     use super::ReferencedType2 as ParameterType;\n \n     #[rustc_clean(cfg = \"cfail2\",\n-                  except = \"Hir, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+                  except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n     #[rustc_clean(cfg = \"cfail3\")]\n     pub fn indirect_parameter_type(p: ParameterType) {}\n }\n@@ -314,7 +314,7 @@ pub mod change_trait_bound_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait2 as Trait;\n \n-    #[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items, predicates_of\")]\n+    #[rustc_clean(cfg = \"cfail2\", except = \"hir_owner, hir_owner_items, predicates_of\")]\n     #[rustc_clean(cfg = \"cfail3\")]\n     pub fn indirect_trait_bound<T: Trait>(p: T) {}\n }\n@@ -328,7 +328,7 @@ pub mod change_trait_bound_indirectly_in_where_clause {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait2 as Trait;\n \n-    #[rustc_clean(cfg = \"cfail2\", except = \"Hir, hir_owner_items, predicates_of\")]\n+    #[rustc_clean(cfg = \"cfail2\", except = \"hir_owner, hir_owner_items, predicates_of\")]\n     #[rustc_clean(cfg = \"cfail3\")]\n     pub fn indirect_trait_bound_where<T>(p: T)\n     where"}, {"sha": "84c0298918e7ef3565f8c338ef1b4bc9e5905c87", "filename": "src/test/incremental/hashes/indexing_expressions.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Findexing_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Findexing_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Findexing_expressions.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -20,8 +20,8 @@ fn change_simple_index(slice: &[u32]) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n fn change_simple_index(slice: &[u32]) -> u32 {\n@@ -37,8 +37,8 @@ fn change_lower_bound(slice: &[u32]) -> &[u32] {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n fn change_lower_bound(slice: &[u32]) -> &[u32] {\n@@ -54,8 +54,8 @@ fn change_upper_bound(slice: &[u32]) -> &[u32] {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n fn change_upper_bound(slice: &[u32]) -> &[u32] {\n@@ -71,8 +71,8 @@ fn add_lower_bound(slice: &[u32]) -> &[u32] {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n fn add_lower_bound(slice: &[u32]) -> &[u32] {\n@@ -88,8 +88,8 @@ fn add_upper_bound(slice: &[u32]) -> &[u32] {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n fn add_upper_bound(slice: &[u32]) -> &[u32] {\n@@ -105,8 +105,8 @@ fn change_mutability(slice: &mut [u32]) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n fn change_mutability(slice: &mut [u32]) -> u32 {\n@@ -122,8 +122,8 @@ fn exclusive_to_inclusive_range(slice: &[u32]) -> &[u32] {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n fn exclusive_to_inclusive_range(slice: &[u32]) -> &[u32] {"}, {"sha": "c0b80a92df6ee56eb44e1fb50de56985c461b738", "filename": "src/test/incremental/hashes/inherent_impls.rs", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -23,7 +23,7 @@ impl Foo {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,associated_item_def_ids\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,associated_item_def_ids\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail3\")]\n@@ -85,10 +85,10 @@ impl Foo {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"associated_item,Hir,hir_owner_items\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"associated_item,hir_owner,hir_owner_items\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method_privacy() { }\n }\n@@ -100,7 +100,7 @@ impl Foo {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_dirty(cfg=\"cfail2\", except=\"type_of,predicates_of,promoted_mir\")]\n@@ -120,7 +120,7 @@ impl Foo {\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"Hir,hir_owner_items,fn_sig,typeck_tables_of,optimized_mir,mir_built\"\n+        except=\"hir_owner,hir_owner_items,fn_sig,typeck_tables_of,optimized_mir,mir_built\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn method_selfmutness(&mut self) { }\n@@ -135,7 +135,7 @@ impl Foo {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,associated_item_def_ids\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,associated_item_def_ids\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\")]\n@@ -160,7 +160,7 @@ impl Foo {\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"Hir,hir_owner_items,fn_sig,typeck_tables_of,optimized_mir,mir_built\"\n+        except=\"hir_owner,hir_owner_items,fn_sig,typeck_tables_of,optimized_mir,mir_built\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn add_method_parameter(&self, _: i32) { }\n@@ -197,7 +197,7 @@ impl Foo {\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"Hir,hir_owner_items,fn_sig,optimized_mir,mir_built,typeck_tables_of\")]\n+        except=\"hir_owner,hir_owner_items,fn_sig,optimized_mir,mir_built,typeck_tables_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn change_method_return_type(&self) -> u8 { 0 }\n }\n@@ -214,7 +214,7 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     #[inline]\n     pub fn make_method_inline(&self) -> u8 { 0 }\n@@ -251,7 +251,7 @@ impl Foo {\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"Hir,hir_owner_items,fn_sig,typeck_tables_of,optimized_mir,mir_built\"\n+        except=\"hir_owner,hir_owner_items,fn_sig,typeck_tables_of,optimized_mir,mir_built\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub unsafe fn make_method_unsafe(&self) { }\n@@ -269,7 +269,7 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,fn_sig,typeck_tables_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,fn_sig,typeck_tables_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub extern fn make_method_extern(&self) { }\n }\n@@ -286,7 +286,7 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,fn_sig,typeck_tables_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,fn_sig,typeck_tables_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub extern \"system\" fn change_method_calling_convention(&self) { }\n }\n@@ -312,7 +312,7 @@ impl Foo {\n     // if we lower generics before the body, then the `HirId` for\n     // things in the body will be affected. So if you start to see\n     // `typeck_tables_of` appear dirty, that might be the cause. -nmatsakis\n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn add_lifetime_parameter_to_method<'a>(&self) { }\n }\n@@ -340,7 +340,7 @@ impl Foo {\n     // appear dirty, that might be the cause. -nmatsakis\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"Hir,hir_owner_items,generics_of,predicates_of,type_of\",\n+        except=\"hir_owner,hir_owner_items,generics_of,predicates_of,type_of\",\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn add_type_parameter_to_method<T>(&self) { }\n@@ -360,7 +360,7 @@ impl Foo {\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"Hir,hir_owner_items,generics_of,predicates_of,type_of,typeck_tables_of\"\n+        except=\"hir_owner,hir_owner_items,generics_of,predicates_of,type_of,typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn add_lifetime_bound_to_lifetime_param_of_method<'a, 'b: 'a>(&self) { }\n@@ -387,7 +387,7 @@ impl Foo {\n     // generics before the body, then the `HirId` for things in the\n     // body will be affected. So if you start to see `typeck_tables_of`\n     // appear dirty, that might be the cause. -nmatsakis\n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,generics_of,predicates_of,\\\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,generics_of,predicates_of,\\\n                                         type_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn add_lifetime_bound_to_type_param_of_method<'a, T: 'a>(&self) { }\n@@ -414,7 +414,7 @@ impl Foo {\n     // generics before the body, then the `HirId` for things in the\n     // body will be affected. So if you start to see `typeck_tables_of`\n     // appear dirty, that might be the cause. -nmatsakis\n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,predicates_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,predicates_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn add_trait_bound_to_type_param_of_method<T: Clone>(&self) { }\n }\n@@ -431,7 +431,7 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     #[no_mangle]\n     pub fn add_no_mangle_to_method(&self) { }\n@@ -448,7 +448,7 @@ impl Bar<u32> {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,generics_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,generics_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl<T> Bar<T> {\n     #[rustc_clean(\n@@ -468,7 +468,7 @@ impl Bar<u32> {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Bar<u64> {\n     #[rustc_clean(cfg=\"cfail2\", except=\"fn_sig,optimized_mir,mir_built,typeck_tables_of\")]\n@@ -485,7 +485,7 @@ impl<T> Bar<T> {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl<T: 'static> Bar<T> {\n     #[rustc_clean(cfg=\"cfail2\")]\n@@ -502,7 +502,7 @@ impl<T> Bar<T> {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl<T: Clone> Bar<T> {\n     #[rustc_clean(cfg=\"cfail2\")]"}, {"sha": "536b79324734c2aeef5bca6fc7f4fb1769d7a563", "filename": "src/test/incremental/hashes/statics.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Fstatics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Fstatics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fstatics.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -21,7 +21,7 @@\n static STATIC_VISIBILITY: u8 = 0;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub static STATIC_VISIBILITY: u8 = 0;\n \n@@ -31,7 +31,7 @@ pub static STATIC_VISIBILITY: u8 = 0;\n static STATIC_MUTABILITY: u8 = 0;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n static mut STATIC_MUTABILITY: u8 = 0;\n \n@@ -41,7 +41,7 @@ static mut STATIC_MUTABILITY: u8 = 0;\n static STATIC_LINKAGE: u8 = 0;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[linkage=\"weak_odr\"]\n static STATIC_LINKAGE: u8 = 0;\n@@ -52,7 +52,7 @@ static STATIC_LINKAGE: u8 = 0;\n static STATIC_NO_MANGLE: u8 = 0;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[no_mangle]\n static STATIC_NO_MANGLE: u8 = 0;\n@@ -63,7 +63,7 @@ static STATIC_NO_MANGLE: u8 = 0;\n static STATIC_THREAD_LOCAL: u8 = 0;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n #[thread_local]\n static STATIC_THREAD_LOCAL: u8 = 0;\n@@ -74,7 +74,7 @@ static STATIC_THREAD_LOCAL: u8 = 0;\n static STATIC_CHANGE_TYPE_1: i16 = 0;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n static STATIC_CHANGE_TYPE_1: u64 = 0;\n \n@@ -84,7 +84,7 @@ static STATIC_CHANGE_TYPE_1: u64 = 0;\n static STATIC_CHANGE_TYPE_2: Option<i8> = None;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n static STATIC_CHANGE_TYPE_2: Option<u16> = None;\n \n@@ -144,11 +144,11 @@ mod static_change_type_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedType2 as Type;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     static STATIC_CHANGE_TYPE_INDIRECTLY_1: Type = Type;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items,type_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items,type_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     static STATIC_CHANGE_TYPE_INDIRECTLY_2: Option<Type> = None;\n }"}, {"sha": "89b18eefd0646c70d89973d12916620a69e3e76b", "filename": "src/test/incremental/hashes/struct_constructors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_constructors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_constructors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_constructors.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -173,7 +173,7 @@ pub mod change_constructor_path_indirectly_regular_struct {\n \n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"fn_sig,Hir,hir_owner_items,optimized_mir,mir_built,typeck_tables_of\"\n+        except=\"fn_sig,hir_owner,hir_owner_items,optimized_mir,mir_built,typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn function() -> Struct {\n@@ -230,7 +230,7 @@ pub mod change_constructor_path_indirectly_tuple_struct {\n \n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"fn_sig,Hir,hir_owner_items,optimized_mir,mir_built,typeck_tables_of\"\n+        except=\"fn_sig,hir_owner,hir_owner_items,optimized_mir,mir_built,typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn function() -> Struct {"}, {"sha": "fa08b7ec1ed3a93fe0005dc34ff82edcf7f3e1f1", "filename": "src/test/incremental/hashes/struct_defs.rs", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_defs.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -24,12 +24,12 @@\n pub struct LayoutPacked;\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -41,12 +41,12 @@ pub struct LayoutPacked;\n struct LayoutC;\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -61,12 +61,12 @@ struct LayoutC;\n struct TupleStructFieldType(i32);\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -84,12 +84,12 @@ struct TupleStructFieldType(\n struct TupleStructAddField(i32);\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -106,12 +106,12 @@ struct TupleStructAddField(\n struct TupleStructFieldVisibility(char);\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -125,12 +125,12 @@ struct TupleStructFieldVisibility(pub char);\n struct RecordStructFieldType { x: f32 }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -148,12 +148,12 @@ struct RecordStructFieldType {\n struct RecordStructFieldName { x: f32 }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -167,12 +167,12 @@ struct RecordStructFieldName { y: f32 }\n struct RecordStructAddField { x: f32 }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -188,12 +188,12 @@ struct RecordStructAddField {\n struct RecordStructFieldVisibility { x: f32 }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -209,12 +209,12 @@ struct RecordStructFieldVisibility {\n struct AddLifetimeParameter<'a>(&'a f32, &'a f64);\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -228,12 +228,12 @@ struct AddLifetimeParameter<'a, 'b>(&'a f32, &'b f64);\n struct AddLifetimeParameterBound<'a, 'b>(&'a f32, &'b f64);\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"predicates_of\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -247,12 +247,12 @@ struct AddLifetimeParameterBound<'a, 'b: 'a>(\n struct AddLifetimeParameterBoundWhereClause<'a, 'b>(&'a f32, &'b f64);\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"predicates_of\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -269,12 +269,12 @@ struct AddLifetimeParameterBoundWhereClause<'a, 'b>(\n struct AddTypeParameter<T1>(T1, T1);\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"predicates_of\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -293,12 +293,12 @@ struct AddTypeParameter<T1, T2>(\n struct AddTypeParameterBound<T>(T);\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"predicates_of\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -312,12 +312,12 @@ struct AddTypeParameterBound<T: Send>(\n struct AddTypeParameterBoundWhereClause<T>(T);\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"predicates_of\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -332,12 +332,12 @@ struct AddTypeParameterBoundWhereClause<T>(\n // fingerprint is stable (i.e., that there are no random influences like memory\n // addresses taken into account by the hashing algorithm).\n // Note: there is no #[cfg(...)], so this is ALWAYS compiled\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -351,12 +351,12 @@ pub struct EmptyStruct;\n struct Visibility;\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -373,12 +373,12 @@ mod tuple_struct_change_field_type_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedType2 as FieldType;\n \n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n     #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -396,12 +396,12 @@ mod record_struct_change_field_type_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedType2 as FieldType;\n \n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n     #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"predicates_of\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -424,12 +424,12 @@ mod change_trait_bound_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait2 as Trait;\n \n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n     #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n     #[rustc_dirty(label=\"predicates_of\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]\n@@ -444,12 +444,12 @@ mod change_trait_bound_indirectly_in_where_clause {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait2 as Trait;\n \n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n     #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"type_of\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"generics_of\", cfg=\"cfail2\")]\n     #[rustc_dirty(label=\"predicates_of\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"type_of\", cfg=\"cfail3\")]\n     #[rustc_clean(label=\"generics_of\", cfg=\"cfail3\")]"}, {"sha": "df41b73f92c42ebd6097b172613fc7481ca8a1d6", "filename": "src/test/incremental/hashes/trait_defs.rs", "status": "modified", "additions": 208, "deletions": 208, "changes": 416, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -25,8 +25,8 @@\n trait TraitVisibility { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n pub trait TraitVisibility { }\n \n \n@@ -36,8 +36,8 @@ pub trait TraitVisibility { }\n trait TraitUnsafety { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n unsafe trait TraitUnsafety { }\n \n \n@@ -48,8 +48,8 @@ trait TraitAddMethod {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n pub trait TraitAddMethod {\n     fn method();\n }\n@@ -63,8 +63,8 @@ trait TraitChangeMethodName {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitChangeMethodName {\n     fn methodChanged();\n }\n@@ -78,11 +78,11 @@ trait TraitAddReturnType {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddReturnType {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method() -> u32;\n }\n \n@@ -95,11 +95,11 @@ trait TraitChangeReturnType {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitChangeReturnType {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method() -> u64;\n }\n \n@@ -112,11 +112,11 @@ trait TraitAddParameterToMethod {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddParameterToMethod {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method(a: u32);\n }\n \n@@ -130,16 +130,16 @@ trait TraitChangeMethodParameterName {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitChangeMethodParameterName {\n     // FIXME(#38501) This should preferably always be clean.\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method(b: u32);\n \n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n     fn with_default(y: i32) {}\n@@ -154,11 +154,11 @@ trait TraitChangeMethodParameterType {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitChangeMethodParameterType {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method(a: i64);\n }\n \n@@ -171,11 +171,11 @@ trait TraitChangeMethodParameterTypeRef {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitChangeMethodParameterTypeRef {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method(a: &mut i32);\n }\n \n@@ -188,11 +188,11 @@ trait TraitChangeMethodParametersOrder {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitChangeMethodParametersOrder {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method(b: i64, a: i32);\n }\n \n@@ -205,11 +205,11 @@ trait TraitAddMethodAutoImplementation {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddMethodAutoImplementation {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method() { }\n }\n \n@@ -223,8 +223,8 @@ trait TraitChangeOrderOfMethods {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitChangeOrderOfMethods {\n     fn method1();\n     fn method0();\n@@ -239,11 +239,11 @@ trait TraitChangeModeSelfRefToMut {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitChangeModeSelfRefToMut {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method(&mut self);\n }\n \n@@ -255,11 +255,11 @@ trait TraitChangeModeSelfOwnToMut: Sized {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitChangeModeSelfOwnToMut: Sized {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n     fn method(mut self) {}\n@@ -273,11 +273,11 @@ trait TraitChangeModeSelfOwnToRef {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitChangeModeSelfOwnToRef {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method(&self);\n }\n \n@@ -290,11 +290,11 @@ trait TraitAddUnsafeModifier {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddUnsafeModifier {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     unsafe fn method();\n }\n \n@@ -307,11 +307,11 @@ trait TraitAddExternModifier {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddExternModifier {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     extern fn method();\n }\n \n@@ -324,11 +324,11 @@ trait TraitChangeExternCToRustIntrinsic {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitChangeExternCToRustIntrinsic {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     extern \"stdcall\" fn method();\n }\n \n@@ -341,11 +341,11 @@ trait TraitAddTypeParameterToMethod {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddTypeParameterToMethod {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method<T>();\n }\n \n@@ -358,11 +358,11 @@ trait TraitAddLifetimeParameterToMethod {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddLifetimeParameterToMethod {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method<'a>();\n }\n \n@@ -379,11 +379,11 @@ trait TraitAddTraitBoundToMethodTypeParameter {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddTraitBoundToMethodTypeParameter {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method<T: ReferencedTrait0>();\n }\n \n@@ -396,11 +396,11 @@ trait TraitAddBuiltinBoundToMethodTypeParameter {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddBuiltinBoundToMethodTypeParameter {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method<T: Sized>();\n }\n \n@@ -413,11 +413,11 @@ trait TraitAddLifetimeBoundToMethodLifetimeParameter {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddLifetimeBoundToMethodLifetimeParameter {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method<'a, 'b: 'a>(a: &'a u32, b: &'b u32);\n }\n \n@@ -430,11 +430,11 @@ trait TraitAddSecondTraitBoundToMethodTypeParameter {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddSecondTraitBoundToMethodTypeParameter {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method<T: ReferencedTrait0 + ReferencedTrait1>();\n }\n \n@@ -447,11 +447,11 @@ trait TraitAddSecondBuiltinBoundToMethodTypeParameter {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddSecondBuiltinBoundToMethodTypeParameter {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method<T: Sized + Sync>();\n }\n \n@@ -464,11 +464,11 @@ trait TraitAddSecondLifetimeBoundToMethodLifetimeParameter {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddSecondLifetimeBoundToMethodLifetimeParameter {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method<'a, 'b, 'c: 'a + 'b>(a: &'a u32, b: &'b u32, c: &'c u32);\n }\n \n@@ -478,14 +478,14 @@ trait TraitAddSecondLifetimeBoundToMethodLifetimeParameter {\n #[cfg(cfail1)]\n trait TraitAddAssociatedType {\n \n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method();\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddAssociatedType {\n     type Associated;\n \n@@ -506,11 +506,11 @@ trait TraitAddTraitBoundToAssociatedType {\n // Apparently the type bound contributes to the predicates of the trait, but\n // does not change the associated item itself.\n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddTraitBoundToAssociatedType {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     type Associated: ReferencedTrait0;\n \n     fn method();\n@@ -527,11 +527,11 @@ trait TraitAddLifetimeBoundToAssociatedType<'a> {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddLifetimeBoundToAssociatedType<'a> {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     type Associated: 'a;\n \n     fn method();\n@@ -548,11 +548,11 @@ trait TraitAddDefaultToAssociatedType {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddDefaultToAssociatedType {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     type Associated = ReferenceType0;\n \n     fn method();\n@@ -567,8 +567,8 @@ trait TraitAddAssociatedConstant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddAssociatedConstant {\n     const Value: u32;\n \n@@ -586,15 +586,15 @@ trait TraitAddInitializerToAssociatedConstant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddInitializerToAssociatedConstant {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     const Value: u32 = 1;\n \n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method();\n }\n \n@@ -609,15 +609,15 @@ trait TraitChangeTypeOfAssociatedConstant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitChangeTypeOfAssociatedConstant {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     const Value: f64;\n \n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method();\n }\n \n@@ -628,8 +628,8 @@ trait TraitChangeTypeOfAssociatedConstant {\n trait TraitAddSuperTrait { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddSuperTrait : ReferencedTrait0 { }\n \n \n@@ -639,8 +639,8 @@ trait TraitAddSuperTrait : ReferencedTrait0 { }\n trait TraitAddBuiltiBound { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddBuiltiBound : Send { }\n \n \n@@ -650,8 +650,8 @@ trait TraitAddBuiltiBound : Send { }\n trait TraitAddStaticLifetimeBound { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddStaticLifetimeBound : 'static { }\n \n \n@@ -661,16 +661,16 @@ trait TraitAddStaticLifetimeBound : 'static { }\n trait TraitAddTraitAsSecondBound : ReferencedTrait0 { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddTraitAsSecondBound : ReferencedTrait0 + ReferencedTrait1 { }\n \n #[cfg(cfail1)]\n trait TraitAddTraitAsSecondBoundFromBuiltin : Send { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddTraitAsSecondBoundFromBuiltin : Send + ReferencedTrait0 { }\n \n \n@@ -680,16 +680,16 @@ trait TraitAddTraitAsSecondBoundFromBuiltin : Send + ReferencedTrait0 { }\n trait TraitAddBuiltinBoundAsSecondBound : ReferencedTrait0 { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddBuiltinBoundAsSecondBound : ReferencedTrait0 + Send { }\n \n #[cfg(cfail1)]\n trait TraitAddBuiltinBoundAsSecondBoundFromBuiltin : Send { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddBuiltinBoundAsSecondBoundFromBuiltin: Send + Copy { }\n \n \n@@ -699,16 +699,16 @@ trait TraitAddBuiltinBoundAsSecondBoundFromBuiltin: Send + Copy { }\n trait TraitAddStaticBoundAsSecondBound : ReferencedTrait0 { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddStaticBoundAsSecondBound : ReferencedTrait0 + 'static { }\n \n #[cfg(cfail1)]\n trait TraitAddStaticBoundAsSecondBoundFromBuiltin : Send { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddStaticBoundAsSecondBoundFromBuiltin : Send + 'static { }\n \n \n@@ -718,8 +718,8 @@ trait TraitAddStaticBoundAsSecondBoundFromBuiltin : Send + 'static { }\n trait TraitAddTypeParameterToTrait { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddTypeParameterToTrait<T> { }\n \n \n@@ -729,8 +729,8 @@ trait TraitAddTypeParameterToTrait<T> { }\n trait TraitAddLifetimeParameterToTrait { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddLifetimeParameterToTrait<'a> { }\n \n \n@@ -740,8 +740,8 @@ trait TraitAddLifetimeParameterToTrait<'a> { }\n trait TraitAddTraitBoundToTypeParameterOfTrait<T> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddTraitBoundToTypeParameterOfTrait<T: ReferencedTrait0> { }\n \n \n@@ -751,8 +751,8 @@ trait TraitAddTraitBoundToTypeParameterOfTrait<T: ReferencedTrait0> { }\n trait TraitAddLifetimeBoundToTypeParameterOfTrait<'a, T> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddLifetimeBoundToTypeParameterOfTrait<'a, T: 'a> { }\n \n \n@@ -762,8 +762,8 @@ trait TraitAddLifetimeBoundToTypeParameterOfTrait<'a, T: 'a> { }\n trait TraitAddLifetimeBoundToLifetimeParameterOfTrait<'a, 'b> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddLifetimeBoundToLifetimeParameterOfTrait<'a: 'b, 'b> { }\n \n \n@@ -773,8 +773,8 @@ trait TraitAddLifetimeBoundToLifetimeParameterOfTrait<'a: 'b, 'b> { }\n trait TraitAddBuiltinBoundToTypeParameterOfTrait<T> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddBuiltinBoundToTypeParameterOfTrait<T: Send> { }\n \n \n@@ -784,8 +784,8 @@ trait TraitAddBuiltinBoundToTypeParameterOfTrait<T: Send> { }\n trait TraitAddSecondTypeParameterToTrait<T> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddSecondTypeParameterToTrait<T, S> { }\n \n \n@@ -795,8 +795,8 @@ trait TraitAddSecondTypeParameterToTrait<T, S> { }\n trait TraitAddSecondLifetimeParameterToTrait<'a> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddSecondLifetimeParameterToTrait<'a, 'b> { }\n \n \n@@ -806,8 +806,8 @@ trait TraitAddSecondLifetimeParameterToTrait<'a, 'b> { }\n trait TraitAddSecondTraitBoundToTypeParameterOfTrait<T: ReferencedTrait0> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddSecondTraitBoundToTypeParameterOfTrait<T: ReferencedTrait0 + ReferencedTrait1> { }\n \n \n@@ -817,8 +817,8 @@ trait TraitAddSecondTraitBoundToTypeParameterOfTrait<T: ReferencedTrait0 + Refer\n trait TraitAddSecondLifetimeBoundToTypeParameterOfTrait<'a, 'b, T: 'a> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddSecondLifetimeBoundToTypeParameterOfTrait<'a, 'b, T: 'a + 'b> { }\n \n \n@@ -828,8 +828,8 @@ trait TraitAddSecondLifetimeBoundToTypeParameterOfTrait<'a, 'b, T: 'a + 'b> { }\n trait TraitAddSecondLifetimeBoundToLifetimeParameterOfTrait<'a: 'b, 'b, 'c> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddSecondLifetimeBoundToLifetimeParameterOfTrait<'a: 'b + 'c, 'b, 'c> { }\n \n \n@@ -839,8 +839,8 @@ trait TraitAddSecondLifetimeBoundToLifetimeParameterOfTrait<'a: 'b + 'c, 'b, 'c>\n trait TraitAddSecondBuiltinBoundToTypeParameterOfTrait<T: Send> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddSecondBuiltinBoundToTypeParameterOfTrait<T: Send + Sync> { }\n \n \n@@ -855,8 +855,8 @@ struct ReferenceType1 {}\n trait TraitAddTraitBoundToTypeParameterOfTraitWhere<T> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddTraitBoundToTypeParameterOfTraitWhere<T> where T: ReferencedTrait0 { }\n \n \n@@ -866,8 +866,8 @@ trait TraitAddTraitBoundToTypeParameterOfTraitWhere<T> where T: ReferencedTrait0\n trait TraitAddLifetimeBoundToTypeParameterOfTraitWhere<'a, T> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddLifetimeBoundToTypeParameterOfTraitWhere<'a, T> where T: 'a { }\n \n \n@@ -877,8 +877,8 @@ trait TraitAddLifetimeBoundToTypeParameterOfTraitWhere<'a, T> where T: 'a { }\n trait TraitAddLifetimeBoundToLifetimeParameterOfTraitWhere<'a, 'b> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddLifetimeBoundToLifetimeParameterOfTraitWhere<'a, 'b> where 'a: 'b { }\n \n \n@@ -888,8 +888,8 @@ trait TraitAddLifetimeBoundToLifetimeParameterOfTraitWhere<'a, 'b> where 'a: 'b\n trait TraitAddBuiltinBoundToTypeParameterOfTraitWhere<T> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddBuiltinBoundToTypeParameterOfTraitWhere<T> where T: Send { }\n \n \n@@ -899,8 +899,8 @@ trait TraitAddBuiltinBoundToTypeParameterOfTraitWhere<T> where T: Send { }\n trait TraitAddSecondTraitBoundToTypeParameterOfTraitWhere<T> where T: ReferencedTrait0 { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddSecondTraitBoundToTypeParameterOfTraitWhere<T>\n     where T: ReferencedTrait0 + ReferencedTrait1 { }\n \n@@ -911,8 +911,8 @@ trait TraitAddSecondTraitBoundToTypeParameterOfTraitWhere<T>\n trait TraitAddSecondLifetimeBoundToTypeParameterOfTraitWhere<'a, 'b, T> where T: 'a { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddSecondLifetimeBoundToTypeParameterOfTraitWhere<'a, 'b, T> where T: 'a + 'b { }\n \n \n@@ -922,8 +922,8 @@ trait TraitAddSecondLifetimeBoundToTypeParameterOfTraitWhere<'a, 'b, T> where T:\n trait TraitAddSecondLifetimeBoundToLifetimeParameterOfTraitWhere<'a, 'b, 'c> where 'a: 'b { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddSecondLifetimeBoundToLifetimeParameterOfTraitWhere<'a, 'b, 'c> where 'a: 'b + 'c { }\n \n \n@@ -933,8 +933,8 @@ trait TraitAddSecondLifetimeBoundToLifetimeParameterOfTraitWhere<'a, 'b, 'c> whe\n trait TraitAddSecondBuiltinBoundToTypeParameterOfTraitWhere<T> where T: Send { }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n trait TraitAddSecondBuiltinBoundToTypeParameterOfTraitWhere<T> where T: Send + Sync { }\n \n \n@@ -945,11 +945,11 @@ mod change_return_type_of_method_indirectly_use {\n     #[cfg(not(cfail1))]\n     use super::ReferenceType1 as ReturnType;\n \n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     trait TraitChangeReturnType {\n-        #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-        #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+        #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+        #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n         fn method() -> ReturnType;\n     }\n }\n@@ -963,11 +963,11 @@ mod change_method_parameter_type_indirectly_by_use {\n     #[cfg(not(cfail1))]\n     use super::ReferenceType1 as ArgType;\n \n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     trait TraitChangeArgType {\n-        #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-        #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+        #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+        #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n         fn method(a: ArgType);\n     }\n }\n@@ -981,11 +981,11 @@ mod change_method_parameter_type_bound_indirectly_by_use {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait1 as Bound;\n \n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     trait TraitChangeBoundOfMethodTypeParameter {\n-        #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-        #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+        #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+        #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n         fn method<T: Bound>(a: T);\n     }\n }\n@@ -1000,11 +1000,11 @@ mod change_method_parameter_type_bound_indirectly_by_use_where {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait1 as Bound;\n \n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     trait TraitChangeBoundOfMethodTypeParameterWhere {\n-        #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-        #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+        #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+        #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n         fn method<T>(a: T) where T: Bound;\n     }\n }\n@@ -1018,8 +1018,8 @@ mod change_method_type_parameter_bound_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait1 as Bound;\n \n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     trait TraitChangeTraitBound<T: Bound> {\n         fn method(a: T);\n     }\n@@ -1035,8 +1035,8 @@ mod change_method_type_parameter_bound_indirectly_where {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait1 as Bound;\n \n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     trait TraitChangeTraitBoundWhere<T> where T: Bound {\n         fn method(a: T);\n     }"}, {"sha": "70e066870b6b449f017561707516bf6fa65cfb1d", "filename": "src/test/incremental/hashes/trait_impls.rs", "status": "modified", "additions": 74, "deletions": 74, "changes": 148, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -30,18 +30,18 @@ impl ChangeMethodNameTrait for Foo {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n pub trait ChangeMethodNameTrait {\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method_name2();\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n impl ChangeMethodNameTrait for Foo {\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method_name2() { }\n }\n \n@@ -59,11 +59,11 @@ impl ChangeMethodBodyTrait for Foo {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n impl ChangeMethodBodyTrait for Foo {\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n     fn method_name() {\n@@ -86,11 +86,11 @@ impl ChangeMethodBodyTraitInlined for Foo {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n impl ChangeMethodBodyTraitInlined for Foo {\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail3\")]\n     #[inline]\n@@ -117,11 +117,11 @@ pub trait ChangeMethodSelfnessTrait {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n impl ChangeMethodSelfnessTrait for Foo {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method_name(&self) {\n         ()\n     }\n@@ -145,11 +145,11 @@ pub trait RemoveMethodSelfnessTrait {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n impl RemoveMethodSelfnessTrait for Foo {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method_name() {}\n }\n \n@@ -171,11 +171,11 @@ pub trait ChangeMethodSelfmutnessTrait {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n impl ChangeMethodSelfmutnessTrait for Foo {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method_name(&mut self) {}\n }\n \n@@ -197,8 +197,8 @@ pub trait ChangeItemKindTrait {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n impl ChangeItemKindTrait for Foo {\n     type name = ();\n }\n@@ -223,8 +223,8 @@ pub trait RemoveItemTrait {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n impl RemoveItemTrait for Foo {\n     type TypeName = ();\n }\n@@ -248,8 +248,8 @@ pub trait AddItemTrait {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n impl AddItemTrait for Foo {\n     type TypeName = ();\n     fn method_name() { }\n@@ -268,17 +268,17 @@ impl ChangeHasValueTrait for Foo {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n pub trait ChangeHasValueTrait {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method_name() { }\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n impl ChangeHasValueTrait for Foo {\n     fn method_name() { }\n }\n@@ -295,11 +295,11 @@ impl AddDefaultTrait for Foo {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n impl AddDefaultTrait for Foo {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     default fn method_name() { }\n }\n \n@@ -321,11 +321,11 @@ pub trait AddArgumentTrait {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n impl AddArgumentTrait for Foo {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method_name(&self, _x: u32) { }\n }\n \n@@ -347,11 +347,11 @@ pub trait ChangeArgumentTypeTrait {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n impl ChangeArgumentTypeTrait for Foo {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn method_name(&self, _x: char) { }\n }\n \n@@ -370,11 +370,11 @@ impl AddTypeParameterToImpl<u32> for Bar<u32> {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n impl<T> AddTypeParameterToImpl<T> for Bar<T> {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn id(t: T) -> T { t }\n }\n \n@@ -391,11 +391,11 @@ impl ChangeSelfTypeOfImpl for u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n impl ChangeSelfTypeOfImpl for u64 {\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn id(self) -> Self { self }\n }\n \n@@ -412,11 +412,11 @@ impl<T> AddLifetimeBoundToImplParameter for T {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n impl<T: 'static> AddLifetimeBoundToImplParameter for T {\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn id(self) -> Self { self }\n }\n \n@@ -433,11 +433,11 @@ impl<T> AddTraitBoundToImplParameter for T {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n impl<T: Clone> AddTraitBoundToImplParameter for T {\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     fn id(self) -> Self { self }\n }\n \n@@ -454,11 +454,11 @@ impl AddNoMangleToMethod for Foo {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n impl AddNoMangleToMethod for Foo {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     #[no_mangle]\n     fn add_no_mangle_to_method(&self) { }\n }\n@@ -475,11 +475,11 @@ impl MakeMethodInline for Foo {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n impl MakeMethodInline for Foo {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail3\")]\n     #[inline]\n     fn make_method_inline(&self) -> u8 { 0 }\n }"}, {"sha": "bbe1514ba9fd49f36d360333d246d6f8d5f3da40", "filename": "src/test/incremental/hashes/type_defs.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Ftype_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fhashes%2Ftype_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftype_defs.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -24,7 +24,7 @@\n type ChangePrimitiveType = i32;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangePrimitiveType = i64;\n \n@@ -35,7 +35,7 @@ type ChangePrimitiveType = i64;\n type ChangeMutability = &'static i32;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangeMutability = &'static mut i32;\n \n@@ -46,7 +46,7 @@ type ChangeMutability = &'static mut i32;\n type ChangeLifetime<'a> = (&'static i32, &'a i32);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangeLifetime<'a> = (&'a i32, &'a i32);\n \n@@ -60,7 +60,7 @@ struct Struct2;\n type ChangeTypeStruct = Struct1;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangeTypeStruct = Struct2;\n \n@@ -71,7 +71,7 @@ type ChangeTypeStruct = Struct2;\n type ChangeTypeTuple = (u32, u64);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangeTypeTuple = (u32, i64);\n \n@@ -91,7 +91,7 @@ enum Enum2 {\n type ChangeTypeEnum = Enum1;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangeTypeEnum = Enum2;\n \n@@ -102,7 +102,7 @@ type ChangeTypeEnum = Enum2;\n type AddTupleField = (i32, i64);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type AddTupleField = (i32, i64, i16);\n \n@@ -113,7 +113,7 @@ type AddTupleField = (i32, i64, i16);\n type ChangeNestedTupleField = (i32, (i64, i16));\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangeNestedTupleField = (i32, (i64, i8));\n \n@@ -124,7 +124,7 @@ type ChangeNestedTupleField = (i32, (i64, i8));\n type AddTypeParam<T1> = (T1, T1);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type AddTypeParam<T1, T2> = (T1, T2);\n \n@@ -135,7 +135,7 @@ type AddTypeParam<T1, T2> = (T1, T2);\n type AddTypeParamBound<T1> = (T1, u32);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type AddTypeParamBound<T1: Clone> = (T1, u32);\n \n@@ -146,7 +146,7 @@ type AddTypeParamBound<T1: Clone> = (T1, u32);\n type AddTypeParamBoundWhereClause<T1> where T1: Clone = (T1, u32);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type AddTypeParamBoundWhereClause<T1> where T1: Clone+Copy = (T1, u32);\n \n@@ -157,7 +157,7 @@ type AddTypeParamBoundWhereClause<T1> where T1: Clone+Copy = (T1, u32);\n type AddLifetimeParam<'a> = (&'a u32, &'a u32);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type AddLifetimeParam<'a, 'b> = (&'a u32, &'b u32);\n \n@@ -168,7 +168,7 @@ type AddLifetimeParam<'a, 'b> = (&'a u32, &'b u32);\n type AddLifetimeParamBound<'a, 'b> = (&'a u32, &'b u32);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type AddLifetimeParamBound<'a, 'b: 'a> = (&'a u32, &'b u32);\n \n@@ -181,7 +181,7 @@ where 'b: 'a\n     = (&'a u32, &'b u32, &'c u32);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type AddLifetimeParamBoundWhereClause<'a, 'b, 'c>\n where 'b: 'a,\n@@ -200,7 +200,7 @@ mod change_trait_bound_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait2 as Trait;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     type ChangeTraitBoundIndirectly<T: Trait> = (T, u32);\n }\n@@ -214,7 +214,7 @@ mod change_trait_bound_indirectly_in_where_clause {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait2 as Trait;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,hir_owner_items\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_items\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     type ChangeTraitBoundIndirectly<T> where T : Trait = (T, u32);\n }"}, {"sha": "a9ec66346acb0a15f0604aff57439a184c13ed04", "filename": "src/test/incremental/ich_method_call_trait_scope.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fich_method_call_trait_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fich_method_call_trait_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fich_method_call_trait_scope.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -26,14 +26,14 @@ mod mod3 {\n     #[cfg(rpass2)]\n     use Trait2;\n \n-    #[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"rpass2\")]\n     #[rustc_clean(label=\"hir_owner_items\", cfg=\"rpass2\")]\n     #[rustc_dirty(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n     fn bar() {\n         ().method();\n     }\n \n-    #[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"rpass2\")]\n     #[rustc_clean(label=\"hir_owner_items\", cfg=\"rpass2\")]\n     #[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n     fn baz() {"}, {"sha": "c30cfc49bdcb381ba1a2c25724dafe1c090f49a5", "filename": "src/test/incremental/ich_nested_items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fich_nested_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fich_nested_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fich_nested_items.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -7,13 +7,13 @@\n #![crate_type = \"rlib\"]\n #![feature(rustc_attrs)]\n \n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"cfail2\")]\n pub fn foo() {\n     #[cfg(cfail1)]\n     pub fn baz() { } // order is different...\n \n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"hir_owner_items\", cfg=\"cfail2\")]\n     pub fn bar() { } // but that doesn't matter.\n "}, {"sha": "c4674faabf5d63494178c223c0c9e0173fc7fd58", "filename": "src/test/incremental/ich_resolve_results.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fich_resolve_results.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fich_resolve_results.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fich_resolve_results.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -28,17 +28,17 @@ mod mod3 {\n     #[cfg(rpass3)]\n     use mod2::Foo;\n \n-    #[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"rpass2\")]\n     #[rustc_clean(label=\"hir_owner_items\", cfg=\"rpass2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"rpass3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"rpass3\")]\n     #[rustc_dirty(label=\"hir_owner_items\", cfg=\"rpass3\")]\n     fn in_expr() {\n         Foo(0);\n     }\n \n-    #[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"rpass2\")]\n     #[rustc_clean(label=\"hir_owner_items\", cfg=\"rpass2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"rpass3\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"rpass3\")]\n     #[rustc_dirty(label=\"hir_owner_items\", cfg=\"rpass3\")]\n     fn in_type() {\n         test::<Foo>();"}, {"sha": "bb76a0bb8fe868bdc174652c6bfa69f6e1b7e929", "filename": "src/test/incremental/inlined_hir_34991/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Finlined_hir_34991%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Finlined_hir_34991%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Finlined_hir_34991%2Fmain.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -1,6 +1,6 @@\n // Regression test for #34991: an ICE occurred here because we inline\n // some of the vector routines and give them a local def-id `X`. This\n-// got hashed after codegen (`Hir(X)`). When we load back up, we get an\n+// got hashed after codegen (`hir_owner(X)`). When we load back up, we get an\n // error because the `X` is remapped to the original def-id (in\n // libstd), and we can't hash a HIR node from std.\n "}, {"sha": "a360a66a64b24afab6c86b5844b3945ced77fd62", "filename": "src/test/incremental/source_loc_macros.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fsource_loc_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fsource_loc_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fsource_loc_macros.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -7,25 +7,25 @@\n \n #![feature(rustc_attrs)]\n \n-#[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"rpass2\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"rpass2\")]\n fn line_same() {\n     let _ = line!();\n }\n \n-#[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"rpass2\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"rpass2\")]\n fn col_same() {\n     let _ = column!();\n }\n \n-#[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"rpass2\")]\n #[rustc_clean(label=\"hir_owner_items\", cfg=\"rpass2\")]\n fn file_same() {\n     let _ = file!();\n }\n \n-#[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"rpass2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"rpass2\")]\n fn line_different() {\n     #[cfg(rpass1)]\n@@ -38,7 +38,7 @@ fn line_different() {\n     }\n }\n \n-#[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"rpass2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"rpass2\")]\n fn col_different() {\n     #[cfg(rpass1)]"}, {"sha": "2927ddec4e52c324e4afaf0dc3efd8cc267216d2", "filename": "src/test/incremental/span_hash_stable/auxiliary/sub1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fspan_hash_stable%2Fauxiliary%2Fsub1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fspan_hash_stable%2Fauxiliary%2Fsub1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fspan_hash_stable%2Fauxiliary%2Fsub1.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -1,4 +1,4 @@\n-#[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"rpass2\")]\n pub struct SomeType {\n     pub x: u32,\n     pub y: i64,"}, {"sha": "aa635077db8ee612db05b964f6a3128095bd10dc", "filename": "src/test/incremental/span_hash_stable/auxiliary/sub2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fspan_hash_stable%2Fauxiliary%2Fsub2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fspan_hash_stable%2Fauxiliary%2Fsub2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fspan_hash_stable%2Fauxiliary%2Fsub2.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -1,4 +1,4 @@\n-#[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"hir_owner\", cfg=\"rpass2\")]\n pub struct SomeOtherType {\n     pub a: i32,\n     pub b: u64,"}, {"sha": "b87d829132b29e4a3788c904f229094cca0018bd", "filename": "src/test/incremental/spans_significant_w_debuginfo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fspans_significant_w_debuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Fspans_significant_w_debuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fspans_significant_w_debuginfo.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -12,6 +12,6 @@\n pub fn main() {}\n \n #[cfg(rpass2)]\n-#[rustc_dirty(label=\"Hir\", cfg=\"rpass2\")]\n+#[rustc_dirty(label=\"hir_owner\", cfg=\"rpass2\")]\n #[rustc_dirty(label=\"hir_owner_items\", cfg=\"rpass2\")]\n pub fn main() {}"}, {"sha": "3bc8818aa6f4ca76dbbbc5fb46d205ee3398d619", "filename": "src/test/incremental/unchecked_dirty_clean.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Funchecked_dirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274fb668b435b20e5132f02d4aa11a29500eff01/src%2Ftest%2Fincremental%2Funchecked_dirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Funchecked_dirty_clean.rs?ref=274fb668b435b20e5132f02d4aa11a29500eff01", "patch": "@@ -10,25 +10,25 @@\n \n fn main() {\n \n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n     //[cfail2]~^ ERROR found unchecked `#[rustc_dirty]` / `#[rustc_clean]` attribute\n     {\n         // empty block\n     }\n \n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n     //[cfail2]~^ ERROR found unchecked `#[rustc_dirty]` / `#[rustc_clean]` attribute\n     {\n         // empty block\n     }\n }\n \n struct _Struct {\n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_dirty(label=\"hir_owner\", cfg=\"cfail2\")]\n     //[cfail2]~^ ERROR found unchecked `#[rustc_dirty]` / `#[rustc_clean]` attribute\n     _field1: i32,\n \n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"hir_owner\", cfg=\"cfail2\")]\n     //[cfail2]~^ ERROR found unchecked `#[rustc_dirty]` / `#[rustc_clean]` attribute\n     _field2: i32,\n }"}]}