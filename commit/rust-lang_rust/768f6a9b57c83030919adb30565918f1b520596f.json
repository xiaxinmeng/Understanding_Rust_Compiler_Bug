{"sha": "768f6a9b57c83030919adb30565918f1b520596f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2OGY2YTliNTdjODMwMzA5MTlhZGIzMDU2NTkxOGYxYjUyMDU5NmY=", "commit": {"author": {"name": "king6cong", "email": "king6cong@gmail.com", "date": "2017-02-03T09:42:01Z"}, "committer": {"name": "king6cong", "email": "king6cong@gmail.com", "date": "2017-02-03T09:54:34Z"}, "message": "add and use rename_or_copy_remove fn that fallback to copy & remove", "tree": {"sha": "c734cea7aeb8e8e2e772f051e233f87d247c4bea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c734cea7aeb8e8e2e772f051e233f87d247c4bea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/768f6a9b57c83030919adb30565918f1b520596f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/768f6a9b57c83030919adb30565918f1b520596f", "html_url": "https://github.com/rust-lang/rust/commit/768f6a9b57c83030919adb30565918f1b520596f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/768f6a9b57c83030919adb30565918f1b520596f/comments", "author": {"login": "king6cong", "id": 302560, "node_id": "MDQ6VXNlcjMwMjU2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/302560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/king6cong", "html_url": "https://github.com/king6cong", "followers_url": "https://api.github.com/users/king6cong/followers", "following_url": "https://api.github.com/users/king6cong/following{/other_user}", "gists_url": "https://api.github.com/users/king6cong/gists{/gist_id}", "starred_url": "https://api.github.com/users/king6cong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/king6cong/subscriptions", "organizations_url": "https://api.github.com/users/king6cong/orgs", "repos_url": "https://api.github.com/users/king6cong/repos", "events_url": "https://api.github.com/users/king6cong/events{/privacy}", "received_events_url": "https://api.github.com/users/king6cong/received_events", "type": "User", "site_admin": false}, "committer": {"login": "king6cong", "id": 302560, "node_id": "MDQ6VXNlcjMwMjU2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/302560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/king6cong", "html_url": "https://github.com/king6cong", "followers_url": "https://api.github.com/users/king6cong/followers", "following_url": "https://api.github.com/users/king6cong/following{/other_user}", "gists_url": "https://api.github.com/users/king6cong/gists{/gist_id}", "starred_url": "https://api.github.com/users/king6cong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/king6cong/subscriptions", "organizations_url": "https://api.github.com/users/king6cong/orgs", "repos_url": "https://api.github.com/users/king6cong/repos", "events_url": "https://api.github.com/users/king6cong/events{/privacy}", "received_events_url": "https://api.github.com/users/king6cong/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e41ec2cccb86db1a9677d2bfb9d2f623755f3de", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e41ec2cccb86db1a9677d2bfb9d2f623755f3de", "html_url": "https://github.com/rust-lang/rust/commit/5e41ec2cccb86db1a9677d2bfb9d2f623755f3de"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "7f8a69de607235897315490b8b8fdeaedac4e03d", "filename": "src/librustc/util/fs.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/768f6a9b57c83030919adb30565918f1b520596f/src%2Flibrustc%2Futil%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/768f6a9b57c83030919adb30565918f1b520596f/src%2Flibrustc%2Futil%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Ffs.rs?ref=768f6a9b57c83030919adb30565918f1b520596f", "patch": "@@ -82,6 +82,31 @@ pub fn link_or_copy<P: AsRef<Path>, Q: AsRef<Path>>(p: P, q: Q) -> io::Result<Li\n     }\n }\n \n+#[derive(Debug)]\n+pub enum RenameOrCopyRemove {\n+    Rename,\n+    CopyRemove\n+}\n+\n+/// Rename `p` into `q`, preferring to use `rename` if possible.\n+/// If `rename` fails (rename may fail for reasons such as crossing filesystem), fallback to copy & remove\n+pub fn rename_or_copy_remove<P: AsRef<Path>, Q: AsRef<Path>>(p: P, q: Q) -> io::Result<RenameOrCopyRemove> {\n+    let p = p.as_ref();\n+    let q = q.as_ref();\n+    match fs::rename(p, q) {\n+        Ok(()) => Ok(RenameOrCopyRemove::Rename),\n+        Err(_) => {\n+            match fs::copy(p, q) {\n+                Ok(_) => {\n+                    fs::remove_file(p)?;\n+                    Ok(RenameOrCopyRemove::CopyRemove)\n+                },\n+                Err(e) => Err(e)\n+            }\n+        }\n+    }\n+}\n+\n // Like std::fs::create_dir_all, except handles concurrent calls among multiple\n // threads or processes.\n pub fn create_dir_racy(path: &Path) -> io::Result<()> {"}, {"sha": "33bf4d5276adf23e7f9aa8b0d3204bc8483660a0", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/768f6a9b57c83030919adb30565918f1b520596f/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/768f6a9b57c83030919adb30565918f1b520596f/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=768f6a9b57c83030919adb30565918f1b520596f", "patch": "@@ -22,6 +22,7 @@ use rustc::middle::privacy::AccessLevels;\n use rustc::ty::{self, TyCtxt, Resolutions, GlobalArenas};\n use rustc::util::common::time;\n use rustc::util::nodemap::{NodeSet, NodeMap};\n+use rustc::util::fs::rename_or_copy_remove;\n use rustc_borrowck as borrowck;\n use rustc_incremental::{self, IncrementalHashesMap};\n use rustc_incremental::ich::Fingerprint;\n@@ -1084,7 +1085,7 @@ pub fn phase_5_run_llvm_passes(sess: &Session,\n         // are going to build an executable\n         if sess.opts.output_types.contains_key(&OutputType::Exe) {\n             let f = outputs.path(OutputType::Object);\n-            fs::rename(&f,\n+            rename_or_copy_remove(&f,\n                      f.with_file_name(format!(\"{}.0.o\",\n                                               f.file_stem().unwrap().to_string_lossy()))).unwrap();\n         }"}]}