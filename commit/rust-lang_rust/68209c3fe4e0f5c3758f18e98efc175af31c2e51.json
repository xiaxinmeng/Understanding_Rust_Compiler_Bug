{"sha": "68209c3fe4e0f5c3758f18e98efc175af31c2e51", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4MjA5YzNmZTRlMGY1YzM3NThmMThlOThlZmMxNzVhZjMxYzJlNTE=", "commit": {"author": {"name": "Laurence Tratt", "email": "laurie@tratt.net", "date": "2020-08-17T08:31:09Z"}, "committer": {"name": "Laurence Tratt", "email": "laurie@tratt.net", "date": "2020-08-17T08:31:09Z"}, "message": "Rename the types for clarity.", "tree": {"sha": "23dfdf84680c58467a6bef91c1177acc2e7b67bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23dfdf84680c58467a6bef91c1177acc2e7b67bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68209c3fe4e0f5c3758f18e98efc175af31c2e51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68209c3fe4e0f5c3758f18e98efc175af31c2e51", "html_url": "https://github.com/rust-lang/rust/commit/68209c3fe4e0f5c3758f18e98efc175af31c2e51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68209c3fe4e0f5c3758f18e98efc175af31c2e51/comments", "author": {"login": "ltratt", "id": 20318, "node_id": "MDQ6VXNlcjIwMzE4", "avatar_url": "https://avatars.githubusercontent.com/u/20318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ltratt", "html_url": "https://github.com/ltratt", "followers_url": "https://api.github.com/users/ltratt/followers", "following_url": "https://api.github.com/users/ltratt/following{/other_user}", "gists_url": "https://api.github.com/users/ltratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ltratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ltratt/subscriptions", "organizations_url": "https://api.github.com/users/ltratt/orgs", "repos_url": "https://api.github.com/users/ltratt/repos", "events_url": "https://api.github.com/users/ltratt/events{/privacy}", "received_events_url": "https://api.github.com/users/ltratt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ltratt", "id": 20318, "node_id": "MDQ6VXNlcjIwMzE4", "avatar_url": "https://avatars.githubusercontent.com/u/20318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ltratt", "html_url": "https://github.com/ltratt", "followers_url": "https://api.github.com/users/ltratt/followers", "following_url": "https://api.github.com/users/ltratt/following{/other_user}", "gists_url": "https://api.github.com/users/ltratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ltratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ltratt/subscriptions", "organizations_url": "https://api.github.com/users/ltratt/orgs", "repos_url": "https://api.github.com/users/ltratt/repos", "events_url": "https://api.github.com/users/ltratt/events{/privacy}", "received_events_url": "https://api.github.com/users/ltratt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55802e3bf3bf6d1db5c76aea581a7912bd752890", "url": "https://api.github.com/repos/rust-lang/rust/commits/55802e3bf3bf6d1db5c76aea581a7912bd752890", "html_url": "https://github.com/rust-lang/rust/commit/55802e3bf3bf6d1db5c76aea581a7912bd752890"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "9789bce82dda144faff152518d3f57ce9b318371", "filename": "library/core/src/option.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/68209c3fe4e0f5c3758f18e98efc175af31c2e51/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68209c3fe4e0f5c3758f18e98efc175af31c2e51/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=68209c3fe4e0f5c3758f18e98efc175af31c2e51", "patch": "@@ -72,15 +72,15 @@\n //!\n //! # Representation\n //!\n-//! Rust guarantees to optimize the following types `<T>` such that an\n+//! Rust guarantees to optimize the following types `T` such that\n //! [`Option<T>`] has the same size as `T`:\n //!\n-//! * [`Box<T>`]\n-//! * `&T`\n-//! * `&mut T`\n+//! * [`Box<U>`]\n+//! * `&U`\n+//! * `&mut U`\n //! * `fn`, `extern \"C\" fn`\n //! * [`num::NonZero*`]\n-//! * [`ptr::NonNull<T>`]\n+//! * [`ptr::NonNull<U>`]\n //! * `#[repr(transparent)]` struct around one of the types in this list.\n //!\n //! For the above cases, it is guaranteed that one can [`mem::transmute`]"}]}