{"sha": "81fd01684820b3937f6ae5e281b844ffbe5e1377", "node_id": "C_kwDOAAsO6NoAKDgxZmQwMTY4NDgyMGIzOTM3ZjZhZTVlMjgxYjg0NGZmYmU1ZTEzNzc", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-11-19T04:06:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-19T04:06:32Z"}, "message": "Rollup merge of #90578 - lcnr:add-test, r=Mark-Simulacrum\n\nadd const generics test\n\ncc https://github.com/rust-lang/rust/pull/89829#issuecomment-948921310\n\nr? rust-lang/project-const-generics", "tree": {"sha": "808836eedf0bab1c7a0e8cde21d1cfd90c28861d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/808836eedf0bab1c7a0e8cde21d1cfd90c28861d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81fd01684820b3937f6ae5e281b844ffbe5e1377", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhlyLICRBK7hj4Ov3rIwAAdbMIAKsN/hlTtX70z0IdP86hgNNG\nYQ9ExLTljBiSE4CaW/GujGDdbVAvdzM4bX/xqGXSG9uBMXMykUuW9ZuNhx1nkcZf\nXnpsyQzTt1vbpdVrw+VL8j7ntn4aEmdiEydaYCXltQ85v0zZDZ8iWR6XuK8Z2ed5\n8ajXqjhD96iNV0SH5CaHdZO/ifShlYAyp6IocMrwwiIcLKi1MxFJMgHif0TsvBl/\n5SIM0veIAelr5fh32YWbJs+yNaLZm742Z3vul1g92rXkquNb0tkDePasPloHOR2I\nq2aL7Rr+gVQzGqhxnyl2YbTME/fBu67dYi1n+A6gXtgt28BZfiieM9nGRYVrpMc=\n=dz5Z\n-----END PGP SIGNATURE-----\n", "payload": "tree 808836eedf0bab1c7a0e8cde21d1cfd90c28861d\nparent 7432588e5d0212dc3339b34e6fc41b96dbaa5320\nparent 8ace1929886d0bd8a0f7a56e291b002fe006d59a\nauthor Yuki Okushi <jtitor@2k36.org> 1637294792 +0900\ncommitter GitHub <noreply@github.com> 1637294792 +0900\n\nRollup merge of #90578 - lcnr:add-test, r=Mark-Simulacrum\n\nadd const generics test\n\ncc https://github.com/rust-lang/rust/pull/89829#issuecomment-948921310\n\nr? rust-lang/project-const-generics\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81fd01684820b3937f6ae5e281b844ffbe5e1377", "html_url": "https://github.com/rust-lang/rust/commit/81fd01684820b3937f6ae5e281b844ffbe5e1377", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81fd01684820b3937f6ae5e281b844ffbe5e1377/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7432588e5d0212dc3339b34e6fc41b96dbaa5320", "url": "https://api.github.com/repos/rust-lang/rust/commits/7432588e5d0212dc3339b34e6fc41b96dbaa5320", "html_url": "https://github.com/rust-lang/rust/commit/7432588e5d0212dc3339b34e6fc41b96dbaa5320"}, {"sha": "8ace1929886d0bd8a0f7a56e291b002fe006d59a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ace1929886d0bd8a0f7a56e291b002fe006d59a", "html_url": "https://github.com/rust-lang/rust/commit/8ace1929886d0bd8a0f7a56e291b002fe006d59a"}], "stats": {"total": 85, "additions": 85, "deletions": 0}, "files": [{"sha": "ce0fad104713b64a766b653e1df6065db617e691", "filename": "src/test/ui/const-generics/invariant.nll.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/81fd01684820b3937f6ae5e281b844ffbe5e1377/src%2Ftest%2Fui%2Fconst-generics%2Finvariant.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81fd01684820b3937f6ae5e281b844ffbe5e1377/src%2Ftest%2Fui%2Fconst-generics%2Finvariant.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finvariant.nll.stderr?ref=81fd01684820b3937f6ae5e281b844ffbe5e1377", "patch": "@@ -0,0 +1,26 @@\n+warning: conflicting implementations of trait `SadBee` for type `for<'a> fn(&'a ())`\n+  --> $DIR/invariant.rs:14:1\n+   |\n+LL | impl SadBee for for<'a> fn(&'a ()) {\n+   | ---------------------------------- first implementation here\n+...\n+LL | impl SadBee for fn(&'static ()) {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `for<'a> fn(&'a ())`\n+   |\n+   = note: `#[warn(coherence_leak_check)]` on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #56105 <https://github.com/rust-lang/rust/issues/56105>\n+   = note: this behavior recently changed as a result of a bug fix; see rust-lang/rust#56105 for details\n+\n+error[E0308]: mismatched types\n+  --> $DIR/invariant.rs:27:5\n+   |\n+LL |     v\n+   |     ^ one type is more general than the other\n+   |\n+   = note: expected reference `&Foo<fn(&())>`\n+              found reference `&Foo<for<'a> fn(&'a ())>`\n+\n+error: aborting due to previous error; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "ee191b65c2c76fdcf8cacc2484993ae5abb090fa", "filename": "src/test/ui/const-generics/invariant.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/81fd01684820b3937f6ae5e281b844ffbe5e1377/src%2Ftest%2Fui%2Fconst-generics%2Finvariant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81fd01684820b3937f6ae5e281b844ffbe5e1377/src%2Ftest%2Fui%2Fconst-generics%2Finvariant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finvariant.rs?ref=81fd01684820b3937f6ae5e281b844ffbe5e1377", "patch": "@@ -0,0 +1,33 @@\n+#![feature(generic_const_exprs)]\n+#![allow(incomplete_features)]\n+use std::marker::PhantomData;\n+\n+trait SadBee {\n+    const ASSOC: usize;\n+}\n+// fn(&'static ())` is a supertype of `for<'a> fn(&'a ())` while\n+// we allow two different impls for these types, leading\n+// to different const eval results.\n+impl SadBee for for<'a> fn(&'a ()) {\n+    const ASSOC: usize = 0;\n+}\n+impl SadBee for fn(&'static ()) {\n+    //~^ WARNING conflicting implementations of trait\n+    //~| WARNING this was previously accepted\n+    const ASSOC: usize = 100;\n+}\n+\n+struct Foo<T: SadBee>([u8; <T as SadBee>::ASSOC], PhantomData<T>)\n+where\n+    [(); <T as SadBee>::ASSOC]: ;\n+\n+fn covariant(\n+    v: &'static Foo<for<'a> fn(&'a ())>\n+) -> &'static Foo<fn(&'static ())> {\n+    v //~ ERROR mismatched types\n+}\n+\n+fn main() {\n+    let y = covariant(&Foo([], PhantomData));\n+    println!(\"{:?}\", y.0);\n+}"}, {"sha": "318c885e6a6bb8962d1b4d41cbfd58506c7381e6", "filename": "src/test/ui/const-generics/invariant.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/81fd01684820b3937f6ae5e281b844ffbe5e1377/src%2Ftest%2Fui%2Fconst-generics%2Finvariant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81fd01684820b3937f6ae5e281b844ffbe5e1377/src%2Ftest%2Fui%2Fconst-generics%2Finvariant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finvariant.stderr?ref=81fd01684820b3937f6ae5e281b844ffbe5e1377", "patch": "@@ -0,0 +1,26 @@\n+warning: conflicting implementations of trait `SadBee` for type `for<'a> fn(&'a ())`\n+  --> $DIR/invariant.rs:14:1\n+   |\n+LL | impl SadBee for for<'a> fn(&'a ()) {\n+   | ---------------------------------- first implementation here\n+...\n+LL | impl SadBee for fn(&'static ()) {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `for<'a> fn(&'a ())`\n+   |\n+   = note: `#[warn(coherence_leak_check)]` on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #56105 <https://github.com/rust-lang/rust/issues/56105>\n+   = note: this behavior recently changed as a result of a bug fix; see rust-lang/rust#56105 for details\n+\n+error[E0308]: mismatched types\n+  --> $DIR/invariant.rs:27:5\n+   |\n+LL |     v\n+   |     ^ one type is more general than the other\n+   |\n+   = note: expected reference `&'static Foo<fn(&'static ())>`\n+              found reference `&'static Foo<for<'a> fn(&'a ())>`\n+\n+error: aborting due to previous error; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0308`."}]}