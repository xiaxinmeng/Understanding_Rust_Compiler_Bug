{"sha": "11e002a001348e7ea035c0cb2665be806e2a832e", "node_id": "C_kwDOAAsO6NoAKDExZTAwMmEwMDEzNDhlN2VhMDM1YzBjYjI2NjViZTgwNmUyYTgzMmU", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2023-01-14T21:49:00Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2023-01-14T22:44:02Z"}, "message": "Make stage2 rustdoc and proc-macro-srv disableable in x.py install", "tree": {"sha": "92ad9d87f24583241171c3a6ab3ad970da2837f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92ad9d87f24583241171c3a6ab3ad970da2837f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11e002a001348e7ea035c0cb2665be806e2a832e", "comment_count": 2, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmPDMEIACgkQ+boUO5X/\nbYIUcw//UKlekp1yv5Hlwvx+rQoSHtCl3YiOlXm/5RVnsPccg4e+RjeKL15p6D+J\neFET5K2WkHCbro/HPwy4UiJ0qHvzoz+1w/ms1BCJ0AZhvREDySZ8MmkB7nzvSl6n\nupdP4b21zXDdDoZOAoIyD6u+Pdfl7iIWoifwaxl1jikJfR/rHvAg/sRv4eTXO5mA\ngugmItUtXvjZQ4GnUaTjeTsJN6oeZn3qDmlMEMubs/Yq+ZwUPzjlWWDTXc3chxF/\nM5MocfLLov7dd+LXVq0n4Zt8ypf/41OSVVCaTCiUpuDiQhTfuEJD/v/UwK57HDcA\n82RBnvW4h0OWmKYhVgrV7aAOKHZMNn/lX7CZgezaJHChO56zYzLWJ9VHJKzS9/0P\nmWCkrLfJIfzaSpkHVGLrxp8Yyh+ex5HlW9aHa87i/wx7cs8sJmQdhoNcq/ZFBjNR\nZd1IELiMEgExiUy5v7xdnsX4apOGgSOwwhEuAwdPsZehoO/X0wYPAq8acgolAnrq\nD9YSUMbRwcNlMEAWufCfDN/c8Xk6pmFuLrkyWTqqy2wX5eWaxpurM0+VDS2t5rJV\nB1eC3Ue62RakES9RU+pbvhL0A9g/dkHUXbdYqceHkaf0Q2lFbPPb2nXi70cSia9K\nb+gOZKZxoHCXrDx2m95GrASoLXLrVwF3q134eT17r4ysy4SHyrY=\n=/zmt\n-----END PGP SIGNATURE-----", "payload": "tree 92ad9d87f24583241171c3a6ab3ad970da2837f2\nparent b8f9cb345ab1401f2fbd14cc23f64dda9dd2314e\nauthor David Tolnay <dtolnay@gmail.com> 1673732940 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1673736242 -0800\n\nMake stage2 rustdoc and proc-macro-srv disableable in x.py install\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11e002a001348e7ea035c0cb2665be806e2a832e", "html_url": "https://github.com/rust-lang/rust/commit/11e002a001348e7ea035c0cb2665be806e2a832e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11e002a001348e7ea035c0cb2665be806e2a832e/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8f9cb345ab1401f2fbd14cc23f64dda9dd2314e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8f9cb345ab1401f2fbd14cc23f64dda9dd2314e", "html_url": "https://github.com/rust-lang/rust/commit/b8f9cb345ab1401f2fbd14cc23f64dda9dd2314e"}], "stats": {"total": 51, "additions": 40, "deletions": 11}, "files": [{"sha": "299bfd779e57a83461efc1167ae9de9e3d603ab8", "filename": "config.toml.example", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/11e002a001348e7ea035c0cb2665be806e2a832e/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/11e002a001348e7ea035c0cb2665be806e2a832e/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=11e002a001348e7ea035c0cb2665be806e2a832e", "patch": "@@ -285,11 +285,24 @@ changelog-seen = 2\n # be built if `extended = true`.\n #extended = false\n \n-# Installs chosen set of extended tools if `extended = true`. By default builds\n-# all extended tools except `rust-demangler`, unless the target is also being\n-# built with `profiler = true`. If chosen tool failed to build the installation\n-# fails. If `extended = false`, this option is ignored.\n-#tools = [\"cargo\", \"rls\", \"clippy\", \"rustfmt\", \"analysis\", \"src\"] # + \"rust-demangler\" if `profiler`\n+# Set of tools to be included in the installation.\n+#\n+# If `extended = false`, the only one of these built by default is rustdoc.\n+#\n+# If `extended = true`, they're all included, with the exception of\n+# rust-demangler which additionally requires `profiler = true` to be set.\n+#\n+# If any enabled tool fails to build, the installation fails.\n+#tools = [\n+#    \"cargo\",\n+#    \"clippy\",\n+#    \"rustdoc\",\n+#    \"rustfmt\",\n+#    \"rust-analyzer\",\n+#    \"analysis\",\n+#    \"src\",\n+#    \"rust-demangler\",  # if profiler = true\n+#]\n \n # Verbosity level: 0 == not verbose, 1 == verbose, 2 == very verbose\n #verbose = 0"}, {"sha": "2bff0f21b53701dc2d6bcefaffd8457bc6f76364", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/11e002a001348e7ea035c0cb2665be806e2a832e/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11e002a001348e7ea035c0cb2665be806e2a832e/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=11e002a001348e7ea035c0cb2665be806e2a832e", "patch": "@@ -392,19 +392,29 @@ impl Step for Rustc {\n             t!(fs::create_dir_all(image.join(\"bin\")));\n             builder.cp_r(&src.join(\"bin\"), &image.join(\"bin\"));\n \n-            builder.install(&builder.rustdoc(compiler), &image.join(\"bin\"), 0o755);\n+            if builder\n+                .config\n+                .tools\n+                .as_ref()\n+                .map_or(true, |tools| tools.iter().any(|tool| tool == \"rustdoc\"))\n+            {\n+                let rustdoc = builder.rustdoc(compiler);\n+                builder.install(&rustdoc, &image.join(\"bin\"), 0o755);\n+            }\n \n-            let ra_proc_macro_srv = builder\n-                .ensure(tool::RustAnalyzerProcMacroSrv {\n+            if let Some(ra_proc_macro_srv) = builder.ensure_if_default(\n+                tool::RustAnalyzerProcMacroSrv {\n                     compiler: builder.compiler_for(\n                         compiler.stage,\n                         builder.config.build,\n                         compiler.host,\n                     ),\n                     target: compiler.host,\n-                })\n-                .expect(\"rust-analyzer-proc-macro-server always builds\");\n-            builder.install(&ra_proc_macro_srv, &image.join(\"libexec\"), 0o755);\n+                },\n+                builder.kind,\n+            ) {\n+                builder.install(&ra_proc_macro_srv, &image.join(\"libexec\"), 0o755);\n+            }\n \n             let libdir_relative = builder.libdir_relative(compiler);\n "}, {"sha": "ca5f500f93bc41deea9db9be5a6698f1154ab021", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/11e002a001348e7ea035c0cb2665be806e2a832e/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11e002a001348e7ea035c0cb2665be806e2a832e/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=11e002a001348e7ea035c0cb2665be806e2a832e", "patch": "@@ -765,9 +765,15 @@ impl Step for RustAnalyzerProcMacroSrv {\n     const ONLY_HOSTS: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n+        let builder = run.builder;\n         // Allow building `rust-analyzer-proc-macro-srv` both as part of the `rust-analyzer` and as a stand-alone tool.\n         run.path(\"src/tools/rust-analyzer\")\n             .path(\"src/tools/rust-analyzer/crates/proc-macro-srv-cli\")\n+            .default_condition(builder.config.tools.as_ref().map_or(true, |tools| {\n+                tools\n+                    .iter()\n+                    .any(|tool| tool == \"rust-analyzer\" || tool == \"rust-analyzer-proc-macro-srv\")\n+            }))\n     }\n \n     fn make_run(run: RunConfig<'_>) {"}]}