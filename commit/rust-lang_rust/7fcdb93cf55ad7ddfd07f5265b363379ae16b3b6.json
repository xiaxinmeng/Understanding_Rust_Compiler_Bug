{"sha": "7fcdb93cf55ad7ddfd07f5265b363379ae16b3b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmY2RiOTNjZjU1YWQ3ZGRmZDA3ZjUyNjViMzYzMzc5YWUxNmIzYjY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-03-12T12:41:12Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-03-12T12:41:12Z"}, "message": "Note that NonNull does not launder shared references for mutation", "tree": {"sha": "bd0b7e19b06648692c173e1ee233f732e0688ac9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd0b7e19b06648692c173e1ee233f732e0688ac9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7fcdb93cf55ad7ddfd07f5265b363379ae16b3b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7fcdb93cf55ad7ddfd07f5265b363379ae16b3b6", "html_url": "https://github.com/rust-lang/rust/commit/7fcdb93cf55ad7ddfd07f5265b363379ae16b3b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7fcdb93cf55ad7ddfd07f5265b363379ae16b3b6/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7486b9c208f7e1c4aa1e36961927327bd793e952", "url": "https://api.github.com/repos/rust-lang/rust/commits/7486b9c208f7e1c4aa1e36961927327bd793e952", "html_url": "https://github.com/rust-lang/rust/commit/7486b9c208f7e1c4aa1e36961927327bd793e952"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "a3cf8b63483f88368013597ef625e75d5c4e8a91", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7fcdb93cf55ad7ddfd07f5265b363379ae16b3b6/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fcdb93cf55ad7ddfd07f5265b363379ae16b3b6/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=7fcdb93cf55ad7ddfd07f5265b363379ae16b3b6", "patch": "@@ -2874,6 +2874,15 @@ impl<'a, T: ?Sized> From<NonNull<T>> for Unique<T> {\n /// Usually this won't be necessary; covariance is correct for most safe abstractions,\n /// such as Box, Rc, Arc, Vec, and LinkedList. This is the case because they\n /// provide a public API that follows the normal shared XOR mutable rules of Rust.\n+///\n+/// Notice that `NonNull<T>` has a `From` instance for `&T`. However, this does\n+/// not change the fact that mutating through a (pointer derived from a) shared\n+/// reference is undefined behavior unless the mutation happens inside an\n+/// [`UnsafeCell<T>`]. When using this `From` instance without an `UnsafeCell<T>`,\n+/// it is your responsibility to ensure that `as_mut` is never called, and `as_ptr`\n+/// is never used for mutation.\n+///\n+/// [`UnsafeCell<T>`]: ../cell/struct.UnsafeCell.html\n #[stable(feature = \"nonnull\", since = \"1.25.0\")]\n #[repr(transparent)]\n #[rustc_layout_scalar_valid_range_start(1)]"}]}