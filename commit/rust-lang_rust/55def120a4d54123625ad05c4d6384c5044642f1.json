{"sha": "55def120a4d54123625ad05c4d6384c5044642f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1ZGVmMTIwYTRkNTQxMjM2MjVhZDA1YzRkNjM4NGM1MDQ0NjQyZjE=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-08-05T17:52:08Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-08-05T17:52:08Z"}, "message": "replace Vec<u8> with Box<[u8]>", "tree": {"sha": "d6e28ff83c54b10ce64f7c5578e661f310104551", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6e28ff83c54b10ce64f7c5578e661f310104551"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55def120a4d54123625ad05c4d6384c5044642f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55def120a4d54123625ad05c4d6384c5044642f1", "html_url": "https://github.com/rust-lang/rust/commit/55def120a4d54123625ad05c4d6384c5044642f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55def120a4d54123625ad05c4d6384c5044642f1/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ed2d870fc0bb8eaebdbb1cc820b264bb433fdb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ed2d870fc0bb8eaebdbb1cc820b264bb433fdb3", "html_url": "https://github.com/rust-lang/rust/commit/6ed2d870fc0bb8eaebdbb1cc820b264bb433fdb3"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "5964efa78e9e928b8484a5a3fdece056cadc99d3", "filename": "compiler/rustc_middle/src/mir/interpret/allocation.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/55def120a4d54123625ad05c4d6384c5044642f1/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55def120a4d54123625ad05c4d6384c5044642f1/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs?ref=55def120a4d54123625ad05c4d6384c5044642f1", "patch": "@@ -28,7 +28,7 @@ use crate::ty;\n pub struct Allocation<Tag = AllocId, Extra = ()> {\n     /// The actual bytes of the allocation.\n     /// Note that the bytes of a pointer represent the offset of the pointer.\n-    bytes: Vec<u8>,\n+    bytes: Box<[u8]>,\n     /// Maps from byte addresses to extra data for each pointer.\n     /// Only the first byte of a pointer is inserted into the map; i.e.,\n     /// every entry in this map applies to `pointer_size` consecutive bytes starting\n@@ -112,7 +112,7 @@ impl<Tag> Allocation<Tag> {\n         align: Align,\n         mutability: Mutability,\n     ) -> Self {\n-        let bytes = slice.into().into_owned();\n+        let bytes = Box::<[u8]>::from(slice.into());\n         let size = Size::from_bytes(bytes.len());\n         Self {\n             bytes,\n@@ -145,9 +145,8 @@ impl<Tag> Allocation<Tag> {\n             });\n             InterpError::ResourceExhaustion(ResourceExhaustionInfo::MemoryExhausted)\n         })?;\n-        // SAFETY: This turns a Box<[MaybeUninit<u8>]> into a Vec<u8>. This is safe since the box\n-        // was zero-allocated which is a valid value for u8.\n-        let bytes = unsafe { bytes.assume_init().into_vec() };\n+        // SAFETY: the box was zero-allocated, which is a valid initial value for Box<[u8]>\n+        let bytes = unsafe { bytes.assume_init() };\n         Ok(Allocation {\n             bytes,\n             relocations: Relocations::new(),"}]}