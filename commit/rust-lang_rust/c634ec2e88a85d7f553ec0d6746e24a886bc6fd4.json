{"sha": "c634ec2e88a85d7f553ec0d6746e24a886bc6fd4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2MzRlYzJlODhhODVkN2Y1NTNlYzBkNjc0NmUyNGE4ODZiYzZmZDQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-30T23:40:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-30T23:40:27Z"}, "message": "Auto merge of #24989 - alexcrichton:rustdoc-associated-constant, r=brson\n\nAssociated constants were now showing up for traits and would panic if they were\r\nfound on an inherent impl. This commit unblocks the nighly builders.", "tree": {"sha": "c62f07daef30abdb90a890ec550df97e171b1828", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c62f07daef30abdb90a890ec550df97e171b1828"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c634ec2e88a85d7f553ec0d6746e24a886bc6fd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c634ec2e88a85d7f553ec0d6746e24a886bc6fd4", "html_url": "https://github.com/rust-lang/rust/commit/c634ec2e88a85d7f553ec0d6746e24a886bc6fd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c634ec2e88a85d7f553ec0d6746e24a886bc6fd4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a60e5667fa77c4a7a4e13bf7ab4ad6f1d033ca9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a60e5667fa77c4a7a4e13bf7ab4ad6f1d033ca9", "html_url": "https://github.com/rust-lang/rust/commit/8a60e5667fa77c4a7a4e13bf7ab4ad6f1d033ca9"}, {"sha": "543b910f9be6b4d8d757f0471f00ba0a691bc5f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/543b910f9be6b4d8d757f0471f00ba0a691bc5f6", "html_url": "https://github.com/rust-lang/rust/commit/543b910f9be6b4d8d757f0471f00ba0a691bc5f6"}], "stats": {"total": 56, "additions": 49, "deletions": 7}, "files": [{"sha": "5a828e8376e528805414d6ff0df3cd8e58ab4416", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/c634ec2e88a85d7f553ec0d6746e24a886bc6fd4/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c634ec2e88a85d7f553ec0d6746e24a886bc6fd4/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=c634ec2e88a85d7f553ec0d6746e24a886bc6fd4", "patch": "@@ -1787,6 +1787,9 @@ fn item_trait(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n     let types = t.items.iter().filter(|m| {\n         match m.inner { clean::AssociatedTypeItem(..) => true, _ => false }\n     }).collect::<Vec<_>>();\n+    let consts = t.items.iter().filter(|m| {\n+        match m.inner { clean::AssociatedConstItem(..) => true, _ => false }\n+    }).collect::<Vec<_>>();\n     let required = t.items.iter().filter(|m| {\n         match m.inner { clean::TyMethodItem(_) => true, _ => false }\n     }).collect::<Vec<_>>();\n@@ -1803,7 +1806,15 @@ fn item_trait(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n             try!(render_assoc_item(w, t, AssocItemLink::Anchor));\n             try!(write!(w, \";\\n\"));\n         }\n-        if !types.is_empty() && !required.is_empty() {\n+        if !types.is_empty() && !consts.is_empty() {\n+            try!(w.write_str(\"\\n\"));\n+        }\n+        for t in &consts {\n+            try!(write!(w, \"    \"));\n+            try!(render_assoc_item(w, t, AssocItemLink::Anchor));\n+            try!(write!(w, \";\\n\"));\n+        }\n+        if !consts.is_empty() && !required.is_empty() {\n             try!(w.write_str(\"\\n\"));\n         }\n         for m in &required {\n@@ -1905,11 +1916,11 @@ fn item_trait(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n }\n \n fn assoc_const(w: &mut fmt::Formatter, it: &clean::Item,\n-               ty: &clean::Type, default: &Option<String>)\n+               ty: &clean::Type, default: Option<&String>)\n                -> fmt::Result {\n     try!(write!(w, \"const {}\", it.name.as_ref().unwrap()));\n     try!(write!(w, \": {}\", ty));\n-    if let Some(ref default) = *default {\n+    if let Some(default) = default {\n         try!(write!(w, \" = {}\", default));\n     }\n     Ok(())\n@@ -1971,7 +1982,7 @@ fn render_assoc_item(w: &mut fmt::Formatter, meth: &clean::Item,\n                    link)\n         }\n         clean::AssociatedConstItem(ref ty, ref default) => {\n-            assoc_const(w, meth, ty, default)\n+            assoc_const(w, meth, ty, default.as_ref())\n         }\n         clean::AssociatedTypeItem(ref bounds, ref default) => {\n             assoc_type(w, meth, bounds, default)\n@@ -2335,9 +2346,15 @@ fn render_impl(w: &mut fmt::Formatter, i: &Impl, link: AssocItemLink,\n             clean::AssociatedConstItem(ref ty, ref default) => {\n                 let name = item.name.as_ref().unwrap();\n                 try!(write!(w, \"<h4 id='assoc_const.{}' class='{}'><code>\",\n-                            *name,\n-                            shortty(item)));\n-                try!(assoc_const(w, item, ty, default));\n+                            *name, shortty(item)));\n+                try!(assoc_const(w, item, ty, default.as_ref()));\n+                try!(write!(w, \"</code></h4>\\n\"));\n+            }\n+            clean::ConstantItem(ref c) => {\n+                let name = item.name.as_ref().unwrap();\n+                try!(write!(w, \"<h4 id='assoc_const.{}' class='{}'><code>\",\n+                            *name, shortty(item)));\n+                try!(assoc_const(w, item, &c.type_, Some(&c.expr)));\n                 try!(write!(w, \"</code></h4>\\n\"));\n             }\n             clean::AssociatedTypeItem(ref bounds, ref default) => {"}, {"sha": "cd8d7ec16dce40deac7cf6e0c582400e316e44dd", "filename": "src/test/rustdoc/assoc-consts.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c634ec2e88a85d7f553ec0d6746e24a886bc6fd4/src%2Ftest%2Frustdoc%2Fassoc-consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c634ec2e88a85d7f553ec0d6746e24a886bc6fd4/src%2Ftest%2Frustdoc%2Fassoc-consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fassoc-consts.rs?ref=c634ec2e88a85d7f553ec0d6746e24a886bc6fd4", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(associated_consts)]\n+\n+pub trait Foo {\n+    // @has assoc_consts/trait.Foo.html '//*[@class=\"rust trait\"]' \\\n+    //      'const FOO: usize;'\n+    const FOO: usize;\n+}\n+\n+pub struct Bar;\n+\n+impl Bar {\n+    // @has assoc_consts/struct.Bar.html '//*[@id=\"assoc_const.BAR\"]' \\\n+    //      'const BAR: usize = 3'\n+    pub const BAR: usize = 3;\n+}"}]}