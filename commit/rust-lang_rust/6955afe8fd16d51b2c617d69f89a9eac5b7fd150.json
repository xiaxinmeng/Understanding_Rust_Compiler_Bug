{"sha": "6955afe8fd16d51b2c617d69f89a9eac5b7fd150", "node_id": "C_kwDOAAsO6NoAKDY5NTVhZmU4ZmQxNmQ1MWIyYzYxN2Q2OWY4OWE5ZWFjNWI3ZmQxNTA", "commit": {"author": {"name": "Badel2", "email": "2badel2@gmail.com", "date": "2021-11-23T21:55:48Z"}, "committer": {"name": "Badel2", "email": "2badel2@gmail.com", "date": "2021-11-23T22:07:11Z"}, "message": "Fix stack overflow in `usefulness.rs`", "tree": {"sha": "687f6b9fa14aee21e986dd8674a7e6a402c12862", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/687f6b9fa14aee21e986dd8674a7e6a402c12862"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6955afe8fd16d51b2c617d69f89a9eac5b7fd150", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6955afe8fd16d51b2c617d69f89a9eac5b7fd150", "html_url": "https://github.com/rust-lang/rust/commit/6955afe8fd16d51b2c617d69f89a9eac5b7fd150", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6955afe8fd16d51b2c617d69f89a9eac5b7fd150/comments", "author": {"login": "Badel2", "id": 15879619, "node_id": "MDQ6VXNlcjE1ODc5NjE5", "avatar_url": "https://avatars.githubusercontent.com/u/15879619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Badel2", "html_url": "https://github.com/Badel2", "followers_url": "https://api.github.com/users/Badel2/followers", "following_url": "https://api.github.com/users/Badel2/following{/other_user}", "gists_url": "https://api.github.com/users/Badel2/gists{/gist_id}", "starred_url": "https://api.github.com/users/Badel2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Badel2/subscriptions", "organizations_url": "https://api.github.com/users/Badel2/orgs", "repos_url": "https://api.github.com/users/Badel2/repos", "events_url": "https://api.github.com/users/Badel2/events{/privacy}", "received_events_url": "https://api.github.com/users/Badel2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Badel2", "id": 15879619, "node_id": "MDQ6VXNlcjE1ODc5NjE5", "avatar_url": "https://avatars.githubusercontent.com/u/15879619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Badel2", "html_url": "https://github.com/Badel2", "followers_url": "https://api.github.com/users/Badel2/followers", "following_url": "https://api.github.com/users/Badel2/following{/other_user}", "gists_url": "https://api.github.com/users/Badel2/gists{/gist_id}", "starred_url": "https://api.github.com/users/Badel2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Badel2/subscriptions", "organizations_url": "https://api.github.com/users/Badel2/orgs", "repos_url": "https://api.github.com/users/Badel2/repos", "events_url": "https://api.github.com/users/Badel2/events{/privacy}", "received_events_url": "https://api.github.com/users/Badel2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b3cd075bbe309031b418650a9c32baf0b4a3276", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b3cd075bbe309031b418650a9c32baf0b4a3276", "html_url": "https://github.com/rust-lang/rust/commit/7b3cd075bbe309031b418650a9c32baf0b4a3276"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "286473c38e36d2920fd15a34fab64d09c510a117", "filename": "compiler/rustc_mir_build/src/thir/pattern/usefulness.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6955afe8fd16d51b2c617d69f89a9eac5b7fd150/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fusefulness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6955afe8fd16d51b2c617d69f89a9eac5b7fd150/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fusefulness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fusefulness.rs?ref=6955afe8fd16d51b2c617d69f89a9eac5b7fd150", "patch": "@@ -289,6 +289,7 @@ use super::deconstruct_pat::{Constructor, DeconstructedPat, Fields, SplitWildcar\n use rustc_data_structures::captures::Captures;\n \n use rustc_arena::TypedArena;\n+use rustc_data_structures::stack::ensure_sufficient_stack;\n use rustc_hir::def_id::DefId;\n use rustc_hir::HirId;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n@@ -808,8 +809,9 @@ fn is_useful<'p, 'tcx>(\n         // We try each or-pattern branch in turn.\n         let mut matrix = matrix.clone();\n         for v in v.expand_or_pat() {\n-            let usefulness =\n-                is_useful(cx, &matrix, &v, witness_preference, hir_id, is_under_guard, false);\n+            let usefulness = ensure_sufficient_stack(|| {\n+                is_useful(cx, &matrix, &v, witness_preference, hir_id, is_under_guard, false)\n+            });\n             ret.extend(usefulness);\n             // If pattern has a guard don't add it to the matrix.\n             if !is_under_guard {\n@@ -840,8 +842,9 @@ fn is_useful<'p, 'tcx>(\n             // We cache the result of `Fields::wildcards` because it is used a lot.\n             let spec_matrix = start_matrix.specialize_constructor(pcx, &ctor);\n             let v = v.pop_head_constructor(cx, &ctor);\n-            let usefulness =\n-                is_useful(cx, &spec_matrix, &v, witness_preference, hir_id, is_under_guard, false);\n+            let usefulness = ensure_sufficient_stack(|| {\n+                is_useful(cx, &spec_matrix, &v, witness_preference, hir_id, is_under_guard, false)\n+            });\n             let usefulness = usefulness.apply_constructor(pcx, start_matrix, &ctor);\n \n             // When all the conditions are met we have a match with a `non_exhaustive` enum"}, {"sha": "948c99f9ce989ce0f6624beb46ffe098ed52753a", "filename": "src/test/ui/pattern/usefulness/issue-88747.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6955afe8fd16d51b2c617d69f89a9eac5b7fd150/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-88747.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6955afe8fd16d51b2c617d69f89a9eac5b7fd150/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-88747.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-88747.rs?ref=6955afe8fd16d51b2c617d69f89a9eac5b7fd150", "patch": "@@ -0,0 +1,14 @@\n+// check-pass: this used to be a stack overflow because of recursion in `usefulness.rs`\n+\n+macro_rules! long_tuple_arg {\n+    ([$($t:tt)*]#$($h:tt)*) => {\n+        long_tuple_arg!{[$($t)*$($t)*]$($h)*}\n+    };\n+    ([$([$t:tt $y:tt])*]) => {\n+        pub fn _f(($($t,)*): ($($y,)*)) {}\n+    }\n+}\n+\n+long_tuple_arg!{[[_ u8]]########## ###}\n+\n+fn main() {}"}]}