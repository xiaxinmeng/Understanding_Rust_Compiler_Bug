{"sha": "cef616b1dc1b3e0aa846fd8325ab8dde94de12d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlZjYxNmIxZGMxYjNlMGFhODQ2ZmQ4MzI1YWI4ZGRlOTRkZTEyZDU=", "commit": {"author": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-05-13T18:49:45Z"}, "committer": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-05-13T19:00:18Z"}, "message": "Improve comments in iter::Step", "tree": {"sha": "4cb198e63fdcf89343d40d29270d9caddab66b64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4cb198e63fdcf89343d40d29270d9caddab66b64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cef616b1dc1b3e0aa846fd8325ab8dde94de12d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cef616b1dc1b3e0aa846fd8325ab8dde94de12d5", "html_url": "https://github.com/rust-lang/rust/commit/cef616b1dc1b3e0aa846fd8325ab8dde94de12d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cef616b1dc1b3e0aa846fd8325ab8dde94de12d5/comments", "author": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f34322d71f6ba523fb2c0ebef258d7e51a7531c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f34322d71f6ba523fb2c0ebef258d7e51a7531c8", "html_url": "https://github.com/rust-lang/rust/commit/f34322d71f6ba523fb2c0ebef258d7e51a7531c8"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "9e54e69bc55248daa7546173e14a754cad52ea53", "filename": "src/libcore/iter/range.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cef616b1dc1b3e0aa846fd8325ab8dde94de12d5/src%2Flibcore%2Fiter%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cef616b1dc1b3e0aa846fd8325ab8dde94de12d5/src%2Flibcore%2Fiter%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Frange.rs?ref=cef616b1dc1b3e0aa846fd8325ab8dde94de12d5", "patch": "@@ -15,7 +15,7 @@ use super::{FusedIterator, TrustedLen};\n /// This trait is `unsafe` because its implementation must be correct for\n /// the safety of `unsafe trait TrustedLen` implementations, and the results\n /// of using this trait can otherwise be trusted by `unsafe` code to be correct\n-/// and fulful the listed obligations.\n+/// and fulfill the listed obligations.\n #[unstable(feature = \"step_trait\", reason = \"recently redesigned\", issue = \"42168\")]\n pub unsafe trait Step: Clone + PartialOrd + Sized {\n     /// Returns the number of *successor* steps required to get from `start` to `end`.\n@@ -27,8 +27,8 @@ pub unsafe trait Step: Clone + PartialOrd + Sized {\n     ///\n     /// For any `a`, `b`, and `n`:\n     ///\n-    /// * `steps_between(&a, &b) == Some(n)` if and only if `Step::forward(&a, n) == Some(b)`\n-    /// * `steps_between(&a, &b) == Some(n)` if and only if `Step::backward(&a, n) == Some(a)`\n+    /// * `steps_between(&a, &b) == Some(n)` if and only if `Step::forward_checked(&a, n) == Some(b)`\n+    /// * `steps_between(&a, &b) == Some(n)` if and only if `Step::backward_checked(&a, n) == Some(a)`\n     /// * `steps_between(&a, &b) == Some(n)` only if `a <= b`\n     ///   * Corollary: `steps_between(&a, &b) == Some(0)` if and only if `a == b`\n     ///   * Note that `a <= b` does _not_ imply `steps_between(&a, &b) != None`;"}]}