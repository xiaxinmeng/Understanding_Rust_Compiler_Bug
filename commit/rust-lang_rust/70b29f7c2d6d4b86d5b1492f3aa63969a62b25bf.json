{"sha": "70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf", "node_id": "C_kwDOAAsO6NoAKDcwYjI5ZjdjMmQ2ZDRiODZkNWIxNDkyZjNhYTYzOTY5YTYyYjI1YmY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-18T12:22:07Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-21T02:35:11Z"}, "message": "Note closure kind mismatch cause", "tree": {"sha": "1da4bac18bd93bb37f781346d1a09ff45ec45644", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1da4bac18bd93bb37f781346d1a09ff45ec45644"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf", "html_url": "https://github.com/rust-lang/rust/commit/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52e2065ed4dba1a68a5f85e8de212e76dde72e7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/52e2065ed4dba1a68a5f85e8de212e76dde72e7a", "html_url": "https://github.com/rust-lang/rust/commit/52e2065ed4dba1a68a5f85e8de212e76dde72e7a"}], "stats": {"total": 89, "additions": 79, "deletions": 10}, "files": [{"sha": "70fac83325a9c693d406138744c84e869e7f342c", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf", "patch": "@@ -860,8 +860,7 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                             }\n                         }\n \n-                        err.emit();\n-                        return;\n+                        err\n                     }\n \n                     ty::PredicateKind::WellFormed(ty) => {"}, {"sha": "f744b71c284b0d68c8c965e48c2c515368011c3f", "filename": "src/test/ui/closure_context/issue-26046-fn-mut.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf/src%2Ftest%2Fui%2Fclosure_context%2Fissue-26046-fn-mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf/src%2Ftest%2Fui%2Fclosure_context%2Fissue-26046-fn-mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosure_context%2Fissue-26046-fn-mut.stderr?ref=70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf", "patch": "@@ -8,6 +8,8 @@ LL |         num += 1;\n ...\n LL |     Box::new(closure)\n    |     ----------------- the requirement to implement `Fn` derives from here\n+   |\n+   = note: required for the cast from `[closure@$DIR/issue-26046-fn-mut.rs:4:19: 4:21]` to the object type `dyn Fn()`\n \n error: aborting due to previous error\n "}, {"sha": "34f94f9dca6d34de487fe29fbb94781a2bf93e00", "filename": "src/test/ui/closure_context/issue-26046-fn-once.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf/src%2Ftest%2Fui%2Fclosure_context%2Fissue-26046-fn-once.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf/src%2Ftest%2Fui%2Fclosure_context%2Fissue-26046-fn-once.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosure_context%2Fissue-26046-fn-once.stderr?ref=70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf", "patch": "@@ -8,6 +8,8 @@ LL |         vec\n ...\n LL |     Box::new(closure)\n    |     ----------------- the requirement to implement `Fn` derives from here\n+   |\n+   = note: required for the cast from `[closure@$DIR/issue-26046-fn-once.rs:4:19: 4:26]` to the object type `dyn Fn() -> Vec<u8>`\n \n error: aborting due to previous error\n "}, {"sha": "309c63e52932baa970fcba0d9ed3c60a952becb7", "filename": "src/test/ui/closures/2229_closure_analysis/diagnostics/closure-origin-array-diagnostics.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fclosure-origin-array-diagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fclosure-origin-array-diagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fclosure-origin-array-diagnostics.stderr?ref=70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf", "patch": "@@ -7,7 +7,15 @@ LL |         let [_, _s] = s;\n    |                       - closure is `FnOnce` because it moves the variable `s` out of its environment\n LL |     };\n LL |     expect_fn(c);\n-   |               - the requirement to implement `Fn` derives from here\n+   |     --------- - the requirement to implement `Fn` derives from here\n+   |     |\n+   |     required by a bound introduced by this call\n+   |\n+note: required by a bound in `expect_fn`\n+  --> $DIR/closure-origin-array-diagnostics.rs:5:17\n+   |\n+LL | fn expect_fn<F: Fn()>(_f: F) {}\n+   |                 ^^^^ required by this bound in `expect_fn`\n \n error: aborting due to previous error\n "}, {"sha": "3e77635f9e0c82c7736d07d565fe206e40268cc3", "filename": "src/test/ui/closures/2229_closure_analysis/diagnostics/closure-origin-tuple-diagnostics.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fclosure-origin-tuple-diagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fclosure-origin-tuple-diagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fclosure-origin-tuple-diagnostics.stderr?ref=70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf", "patch": "@@ -7,7 +7,15 @@ LL |         let s = s.1;\n    |                 --- closure is `FnOnce` because it moves the variable `s.1` out of its environment\n LL |     };\n LL |     expect_fn(c);\n-   |               - the requirement to implement `Fn` derives from here\n+   |     --------- - the requirement to implement `Fn` derives from here\n+   |     |\n+   |     required by a bound introduced by this call\n+   |\n+note: required by a bound in `expect_fn`\n+  --> $DIR/closure-origin-tuple-diagnostics.rs:5:17\n+   |\n+LL | fn expect_fn<F: Fn()>(_f: F) {}\n+   |                 ^^^^ required by this bound in `expect_fn`\n \n error: aborting due to previous error\n "}, {"sha": "9ea55d764f345b6d77c74fc1056835c09a00b9a7", "filename": "src/test/ui/closures/closure-wrong-kind.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf/src%2Ftest%2Fui%2Fclosures%2Fclosure-wrong-kind.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf/src%2Ftest%2Fui%2Fclosures%2Fclosure-wrong-kind.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-wrong-kind.stderr?ref=70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf", "patch": "@@ -6,7 +6,15 @@ LL |     let closure = |_| foo(x);\n    |                   |\n    |                   this closure implements `FnOnce`, not `Fn`\n LL |     bar(closure);\n-   |         ------- the requirement to implement `Fn` derives from here\n+   |     --- ------- the requirement to implement `Fn` derives from here\n+   |     |\n+   |     required by a bound introduced by this call\n+   |\n+note: required by a bound in `bar`\n+  --> $DIR/closure-wrong-kind.rs:6:11\n+   |\n+LL | fn bar<T: Fn(u32)>(_: T) {}\n+   |           ^^^^^^^ required by this bound in `bar`\n \n error: aborting due to previous error\n "}, {"sha": "8e9a16619f3b13cf537040461d15a5abcc614e3a", "filename": "src/test/ui/issues/issue-34349.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf/src%2Ftest%2Fui%2Fissues%2Fissue-34349.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf/src%2Ftest%2Fui%2Fissues%2Fissue-34349.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-34349.stderr?ref=70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf", "patch": "@@ -7,7 +7,15 @@ LL |         farewell.push_str(\"!!!\");\n    |         -------- closure is `FnMut` because it mutates the variable `farewell` here\n ...\n LL |     apply(diary);\n-   |           ----- the requirement to implement `Fn` derives from here\n+   |     ----- ----- the requirement to implement `Fn` derives from here\n+   |     |\n+   |     required by a bound introduced by this call\n+   |\n+note: required by a bound in `apply`\n+  --> $DIR/issue-34349.rs:11:32\n+   |\n+LL |     fn apply<F>(f: F) where F: Fn() {\n+   |                                ^^^^ required by this bound in `apply`\n \n error: aborting due to previous error\n "}, {"sha": "eba65a61803d0c9e37a43e15d7dd8684390a1a57", "filename": "src/test/ui/pattern/move-ref-patterns/move-ref-patterns-closure-captures.stderr", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf/src%2Ftest%2Fui%2Fpattern%2Fmove-ref-patterns%2Fmove-ref-patterns-closure-captures.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf/src%2Ftest%2Fui%2Fpattern%2Fmove-ref-patterns%2Fmove-ref-patterns-closure-captures.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fmove-ref-patterns%2Fmove-ref-patterns-closure-captures.stderr?ref=70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf", "patch": "@@ -8,7 +8,15 @@ LL |         drop::<U>(_x1);\n    |                   --- closure is `FnOnce` because it moves the variable `_x1` out of its environment\n ...\n LL |     accept_fn_mut(&c1);\n-   |                   --- the requirement to implement `FnMut` derives from here\n+   |     ------------- --- the requirement to implement `FnMut` derives from here\n+   |     |\n+   |     required by a bound introduced by this call\n+   |\n+note: required by a bound in `accept_fn_mut`\n+  --> $DIR/move-ref-patterns-closure-captures.rs:4:31\n+   |\n+LL |     fn accept_fn_mut(_: &impl FnMut()) {}\n+   |                               ^^^^^^^ required by this bound in `accept_fn_mut`\n \n error[E0525]: expected a closure that implements the `Fn` trait, but this closure only implements `FnOnce`\n   --> $DIR/move-ref-patterns-closure-captures.rs:9:14\n@@ -20,7 +28,15 @@ LL |         drop::<U>(_x1);\n    |                   --- closure is `FnOnce` because it moves the variable `_x1` out of its environment\n ...\n LL |     accept_fn(&c1);\n-   |               --- the requirement to implement `Fn` derives from here\n+   |     --------- --- the requirement to implement `Fn` derives from here\n+   |     |\n+   |     required by a bound introduced by this call\n+   |\n+note: required by a bound in `accept_fn`\n+  --> $DIR/move-ref-patterns-closure-captures.rs:5:27\n+   |\n+LL |     fn accept_fn(_: &impl Fn()) {}\n+   |                           ^^^^ required by this bound in `accept_fn`\n \n error[E0525]: expected a closure that implements the `Fn` trait, but this closure only implements `FnMut`\n   --> $DIR/move-ref-patterns-closure-captures.rs:20:14\n@@ -32,7 +48,15 @@ LL |         drop::<&mut U>(_x2);\n    |                        --- closure is `FnMut` because it mutates the variable `_x2` here\n ...\n LL |     accept_fn(&c2);\n-   |               --- the requirement to implement `Fn` derives from here\n+   |     --------- --- the requirement to implement `Fn` derives from here\n+   |     |\n+   |     required by a bound introduced by this call\n+   |\n+note: required by a bound in `accept_fn`\n+  --> $DIR/move-ref-patterns-closure-captures.rs:5:27\n+   |\n+LL |     fn accept_fn(_: &impl Fn()) {}\n+   |                           ^^^^ required by this bound in `accept_fn`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "635ebbb71d0701bc2e4bc439e4d43dfb29d0785d", "filename": "src/test/ui/unboxed-closures/unboxed-closures-infer-fn-once-move-from-projection.stderr", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-infer-fn-once-move-from-projection.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-infer-fn-once-move-from-projection.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-infer-fn-once-move-from-projection.stderr?ref=70b29f7c2d6d4b86d5b1492f3aa63969a62b25bf", "patch": "@@ -6,7 +6,17 @@ LL |     let c = || drop(y.0);\n    |             |\n    |             this closure implements `FnOnce`, not `Fn`\n LL |     foo(c);\n-   |         - the requirement to implement `Fn` derives from here\n+   |     --- - the requirement to implement `Fn` derives from here\n+   |     |\n+   |     required by a bound introduced by this call\n+   |\n+note: required by a bound in `foo`\n+  --> $DIR/unboxed-closures-infer-fn-once-move-from-projection.rs:4:14\n+   |\n+LL | fn foo<F>(f: F)\n+   |    --- required by a bound in this\n+LL |     where F: Fn()\n+   |              ^^^^ required by this bound in `foo`\n \n error: aborting due to previous error\n "}]}