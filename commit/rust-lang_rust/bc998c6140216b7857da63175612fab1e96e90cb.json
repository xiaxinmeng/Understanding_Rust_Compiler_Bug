{"sha": "bc998c6140216b7857da63175612fab1e96e90cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjOTk4YzYxNDAyMTZiNzg1N2RhNjMxNzU2MTJmYWIxZTk2ZTkwY2I=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-08-19T08:06:20Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-08-19T08:19:21Z"}, "message": "Use move semantics when returning a local var\n\n(Since the variable won't be used after return anyway.)", "tree": {"sha": "e69f54dc77ae561a7c41c256dd06c9c1c7083057", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e69f54dc77ae561a7c41c256dd06c9c1c7083057"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc998c6140216b7857da63175612fab1e96e90cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc998c6140216b7857da63175612fab1e96e90cb", "html_url": "https://github.com/rust-lang/rust/commit/bc998c6140216b7857da63175612fab1e96e90cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc998c6140216b7857da63175612fab1e96e90cb/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6ae60a432d041b4387f9655dc7e8551b8cbed00", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6ae60a432d041b4387f9655dc7e8551b8cbed00", "html_url": "https://github.com/rust-lang/rust/commit/f6ae60a432d041b4387f9655dc7e8551b8cbed00"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "d59a3cf6e346206e911390b244b0f1563919c303", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bc998c6140216b7857da63175612fab1e96e90cb/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc998c6140216b7857da63175612fab1e96e90cb/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=bc998c6140216b7857da63175612fab1e96e90cb", "patch": "@@ -5369,7 +5369,19 @@ fn trans_ret(cx: &@block_ctxt, e: &option::t<@ast::expr>) -> result {\n         let t = ty::expr_ty(bcx_tcx(cx), x);\n         let lv = trans_lval(cx, x);\n         bcx = lv.res.bcx;\n-        bcx = move_val_if_temp(bcx, INIT, cx.fcx.llretptr, lv, t).bcx;\n+        let is_local = alt x.node {\n+          ast::expr_path(p) {\n+            alt bcx_tcx(bcx).def_map.get(x.id) {\n+              ast::def_local(_) { true } _ { false }\n+            }\n+          }\n+          _ { false }\n+        };\n+        if is_local {\n+            bcx = move_val(bcx, INIT, cx.fcx.llretptr, lv, t).bcx;\n+        } else {\n+            bcx = move_val_if_temp(bcx, INIT, cx.fcx.llretptr, lv, t).bcx;\n+        }\n       }\n       _ {\n         let t = llvm::LLVMGetElementType(val_ty(cx.fcx.llretptr));"}]}