{"sha": "274d9f90aed4320f223fe98916fc0cd71ad6f92f", "node_id": "C_kwDOAAsO6NoAKDI3NGQ5ZjkwYWVkNDMyMGYyMjNmZTk4OTE2ZmMwY2Q3MWFkNmY5MmY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-11-05T13:53:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-05T13:53:59Z"}, "message": "Merge #10703\n\n10703: internal: Don't check items for macro calls if they have no attributes r=Veykril a=Veykril\n\nTurns out when highlighting we currently populate the Dynmaps of pretty much every item in a file, who would've known that would be so costly...\r\nShaves off 250 ms for the integrated benchmark on `rust-analyzer/src/config.rs`.\r\n\r\nWe are still looking at a heft `154ms - descend_into_macros (2190 calls)` but I feel like this is slowly nearing towards just call overhead.\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "c570190b84a122951aa07c9aa97e2254f7760ab5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c570190b84a122951aa07c9aa97e2254f7760ab5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/274d9f90aed4320f223fe98916fc0cd71ad6f92f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhhTd3CRBK7hj4Ov3rIwAAf7gIAB8mmjaMRnbjp9YZ9Nnikwwy\na24O3VU2yghxCJeaWaQo1Z4DCjLl+mOKa7qa7EMAMRn6n6bjQY7OjvGTkJBZh8RK\nFw6Rc0UgCoPIivYZ93j/AvKgxwZiVZykwdOET6YmtCwe8Tg+NSml9ZK43HnyOgyV\nygS9hUniuHdeP8Oc5fBn2Jsd8hYac9MEv27kJ5KRc8fgiilEIWlnF3nHCL7kfTRM\nlyMua6A7LT8yo0Zkh3+gfLsGQR6LVTwjoWvWqezrojsoMZR34FLWMirY49Ky1Edt\nQQSNy9vdCHvS388jrgR3/h+n/QO6RHSG9Z7NK1Yj+m29w8AFMG7UMIOuaEJqsds=\n=Nrsy\n-----END PGP SIGNATURE-----\n", "payload": "tree c570190b84a122951aa07c9aa97e2254f7760ab5\nparent d1e449e313555a36fae31302f0fce5812ed84e9b\nparent 8dad1b92284d7c79872ac36e1fb3eece5756c86e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1636120439 +0000\ncommitter GitHub <noreply@github.com> 1636120439 +0000\n\nMerge #10703\n\n10703: internal: Don't check items for macro calls if they have no attributes r=Veykril a=Veykril\n\nTurns out when highlighting we currently populate the Dynmaps of pretty much every item in a file, who would've known that would be so costly...\r\nShaves off 250 ms for the integrated benchmark on `rust-analyzer/src/config.rs`.\r\n\r\nWe are still looking at a heft `154ms - descend_into_macros (2190 calls)` but I feel like this is slowly nearing towards just call overhead.\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/274d9f90aed4320f223fe98916fc0cd71ad6f92f", "html_url": "https://github.com/rust-lang/rust/commit/274d9f90aed4320f223fe98916fc0cd71ad6f92f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/274d9f90aed4320f223fe98916fc0cd71ad6f92f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1e449e313555a36fae31302f0fce5812ed84e9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1e449e313555a36fae31302f0fce5812ed84e9b", "html_url": "https://github.com/rust-lang/rust/commit/d1e449e313555a36fae31302f0fce5812ed84e9b"}, {"sha": "8dad1b92284d7c79872ac36e1fb3eece5756c86e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dad1b92284d7c79872ac36e1fb3eece5756c86e", "html_url": "https://github.com/rust-lang/rust/commit/8dad1b92284d7c79872ac36e1fb3eece5756c86e"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "302d666318386294996130a9dc247a952b682fc6", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/274d9f90aed4320f223fe98916fc0cd71ad6f92f/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274d9f90aed4320f223fe98916fc0cd71ad6f92f/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=274d9f90aed4320f223fe98916fc0cd71ad6f92f", "patch": "@@ -17,7 +17,7 @@ use rustc_hash::{FxHashMap, FxHashSet};\n use smallvec::{smallvec, SmallVec};\n use syntax::{\n     algo::skip_trivia_token,\n-    ast::{self, HasGenericParams, HasLoopBody},\n+    ast::{self, HasAttrs, HasGenericParams, HasLoopBody},\n     match_ast, AstNode, Direction, SyntaxNode, SyntaxNodePtr, SyntaxToken, TextRange, TextSize,\n };\n \n@@ -588,7 +588,10 @@ impl<'db> SemanticsImpl<'db> {\n                 // are we inside an attribute macro call\n                 let containing_attribute_macro_call = self.with_ctx(|ctx| {\n                     token.value.ancestors().filter_map(ast::Item::cast).find_map(|item| {\n-                        // investigate this, seems to be VERY(250ms) expensive in rust-analyzer/src/config.rs?\n+                        if item.attrs().next().is_none() {\n+                            // Don't force populate the dyn cache for items that don't have an attribute anyways\n+                            return None;\n+                        }\n                         Some((ctx.item_to_macro_call(token.with_value(item.clone()))?, item))\n                     })\n                 });"}]}