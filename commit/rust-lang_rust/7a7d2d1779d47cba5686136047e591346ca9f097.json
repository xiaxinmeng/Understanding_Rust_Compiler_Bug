{"sha": "7a7d2d1779d47cba5686136047e591346ca9f097", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhN2QyZDE3NzlkNDdjYmE1Njg2MTM2MDQ3ZTU5MTM0NmNhOWYwOTc=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2021-08-12T09:28:06Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2021-08-12T12:40:09Z"}, "message": "fix command-create-pidfd test inside unprivileged docker containers", "tree": {"sha": "76782fe0fb1d16d43431ea5ee87a6be6c0363080", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76782fe0fb1d16d43431ea5ee87a6be6c0363080"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a7d2d1779d47cba5686136047e591346ca9f097", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmEVFqkACgkQzXazX3c0\ndp4MdRAAl9SRZWfRGOnoA4nqILE9BRue9IXBWY6CptJoZqDxVm/y4wQ3kZT7MnOy\nXcB0GEPg9odSlnYNSXY2C24xTTWaHJS+SPwNjdxMWWfpXe6oowAXW/W1n8Gev3ue\ngI8caiF0wGmS+1hWfhhq0i76Zxd//YyKUly4KLM3hIG3KSiCKIU74N151+xgzGJp\n6IoBYqaHRmTCDWAweZWE+zucPc7VcFiqnx8KEYoYV4Cmk+uoPILcT7r0r2Q03A5+\nM9snS9+D5i8iChpPWDKoFnTgJc2jsghF4go3iOAwfmckTpmNAl1+/H04+RD4uD8h\nJpeyiKRBFpY7LWwFOG3Gb/Bl3+5dTnNDEOZiF2Q11BQIVCaTFsM9dzRYu/RDi/Fo\n1VTvYQc8yTUrerwqt0wdnzXMZ1BWlvS0WEF85ynxkuTdvpjWID2DeEuJ9wOl9eQO\n8GUdDeQFYYifV40AA1QhGToY/JAHLGfMoNzH0eefxtdrl/c/jSSdhhySuplQBgRX\nIZ/JuMxfbzeUOSesVTGlFSOU6IQt3PJvuzglUjik4hv1LbIG3S1q75ZK7RYgofCL\nyhH/Ud42uoV/YU5LkuLoLAIBQ6UkeMtJB60zMOPbcCmy7F+RhNvDkDbX39dfygL1\n2tHmL26mYqN5INFAAx0w8On2uj5Iheebd4AH4fFel7c96r7hyps=\n=Wfpv\n-----END PGP SIGNATURE-----", "payload": "tree 76782fe0fb1d16d43431ea5ee87a6be6c0363080\nparent 4e900176b6c402035a6e52da03d453c848f0b336\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1628760486 +0200\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1628772009 +0200\n\nfix command-create-pidfd test inside unprivileged docker containers\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a7d2d1779d47cba5686136047e591346ca9f097", "html_url": "https://github.com/rust-lang/rust/commit/7a7d2d1779d47cba5686136047e591346ca9f097", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a7d2d1779d47cba5686136047e591346ca9f097/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e900176b6c402035a6e52da03d453c848f0b336", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e900176b6c402035a6e52da03d453c848f0b336", "html_url": "https://github.com/rust-lang/rust/commit/4e900176b6c402035a6e52da03d453c848f0b336"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "4df443c66d65bc0b2339b0e9a89b17f7663ecc8c", "filename": "src/test/ui/command/command-create-pidfd.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7a7d2d1779d47cba5686136047e591346ca9f097/src%2Ftest%2Fui%2Fcommand%2Fcommand-create-pidfd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a7d2d1779d47cba5686136047e591346ca9f097/src%2Ftest%2Fui%2Fcommand%2Fcommand-create-pidfd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcommand%2Fcommand-create-pidfd.rs?ref=7a7d2d1779d47cba5686136047e591346ca9f097", "patch": "@@ -15,7 +15,18 @@ fn has_clone3() -> bool {\n     let err = (res == -1)\n         .then(|| Error::last_os_error())\n         .expect(\"probe syscall should not succeed\");\n-    err.raw_os_error() != Some(libc::ENOSYS)\n+\n+    // If the `clone3` syscall is not implemented in the current kernel version it should return an\n+    // `ENOSYS` error. Docker also blocks the whole syscall inside unprivileged containers, and\n+    // returns `EPERM` (instead of `ENOSYS`) when a program tries to invoke the syscall. Because of\n+    // that we need to check for *both* `ENOSYS` and `EPERM`.\n+    //\n+    // Note that Docker's behavior is breaking other projects (notably glibc), so they're planning\n+    // to update their filtering to return `ENOSYS` in a future release:\n+    //\n+    //     https://github.com/moby/moby/issues/42680\n+    //\n+    err.raw_os_error() != Some(libc::ENOSYS) && err.raw_os_error() != Some(libc::EPERM)\n }\n \n fn main() {"}]}