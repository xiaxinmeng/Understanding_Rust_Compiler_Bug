{"sha": "dd0133d8362f0e1fca6f4346c620dd13c7e18dbc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkMDEzM2Q4MzYyZjBlMWZjYTZmNDM0NmM2MjBkZDEzYzdlMThkYmM=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-02-09T19:06:24Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-02-09T19:07:51Z"}, "message": "Some docs for std::num\n\nThis commit does two things:\n\n* Re-works the module-level documentation.\n* Cleaning up wording and adding links to where error types are used.\n\nPart of #29364", "tree": {"sha": "741f8ca205a5f6856edd9f7460ba5aaf5619d581", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/741f8ca205a5f6856edd9f7460ba5aaf5619d581"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd0133d8362f0e1fca6f4346c620dd13c7e18dbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd0133d8362f0e1fca6f4346c620dd13c7e18dbc", "html_url": "https://github.com/rust-lang/rust/commit/dd0133d8362f0e1fca6f4346c620dd13c7e18dbc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd0133d8362f0e1fca6f4346c620dd13c7e18dbc/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6630a0819553898c3fc0d060cc72a94d62ae1330", "url": "https://api.github.com/repos/rust-lang/rust/commits/6630a0819553898c3fc0d060cc72a94d62ae1330", "html_url": "https://github.com/rust-lang/rust/commit/6630a0819553898c3fc0d060cc72a94d62ae1330"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "9e946dc65c25388d75305e687456ccdd59ffeed6", "filename": "src/libcore/num/dec2flt/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dd0133d8362f0e1fca6f4346c620dd13c7e18dbc/src%2Flibcore%2Fnum%2Fdec2flt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd0133d8362f0e1fca6f4346c620dd13c7e18dbc/src%2Flibcore%2Fnum%2Fdec2flt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fdec2flt%2Fmod.rs?ref=dd0133d8362f0e1fca6f4346c620dd13c7e18dbc", "patch": "@@ -149,6 +149,13 @@ from_str_float_impl!(f32);\n from_str_float_impl!(f64);\n \n /// An error which can be returned when parsing a float.\n+///\n+/// This error is used as the error type for the [`FromStr`] implementation\n+/// for [`f32`] and [`f64`].\n+///\n+/// [`FromStr`]: ../str/trait.FromStr.html\n+/// [`f32`]: ../primitive.f32.html\n+/// [`f64`]: ../primitive.f64.html\n #[derive(Debug, Clone, PartialEq)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct ParseFloatError {"}, {"sha": "9a9dfaa26797a3977c39708940c4cefcce3a8dc9", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/dd0133d8362f0e1fca6f4346c620dd13c7e18dbc/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd0133d8362f0e1fca6f4346c620dd13c7e18dbc/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=dd0133d8362f0e1fca6f4346c620dd13c7e18dbc", "patch": "@@ -2160,7 +2160,13 @@ impl usize {\n         intrinsics::mul_with_overflow }\n }\n \n-/// Used for representing the classification of floating point numbers\n+/// A classification of floating point numbers.\n+///\n+/// This `enum` is used as the return type for [`f32::classify()`] and [`f64::classify()`]. See\n+/// their documentation for more.\n+///\n+/// [`f32::classify()`]: ../primitive.f32.html#method.classify\n+/// [`f64::classify()`]: ../primitive.f64.html#method.classify\n #[derive(Copy, Clone, PartialEq, Debug)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub enum FpCategory {\n@@ -2387,6 +2393,11 @@ fn from_str_radix<T: FromStrRadixHelper>(src: &str, radix: u32)\n }\n \n /// An error which can be returned when parsing an integer.\n+///\n+/// This error is used as the error type for the `from_str_radix()` functions\n+/// on the primitive integer types, such as [`i8::from_str_radix()`].\n+///\n+/// [`i8::from_str_radix()`]: ../std/primitive.i8.html#method.from_str_radix\n #[derive(Debug, Clone, PartialEq)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct ParseIntError { kind: IntErrorKind }"}, {"sha": "dd0d874ee4b7cbdd942e317180ea114c56849ee0", "filename": "src/libstd/num/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dd0133d8362f0e1fca6f4346c620dd13c7e18dbc/src%2Flibstd%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd0133d8362f0e1fca6f4346c620dd13c7e18dbc/src%2Flibstd%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fmod.rs?ref=dd0133d8362f0e1fca6f4346c620dd13c7e18dbc", "patch": "@@ -8,10 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Numeric traits and functions for generic mathematics\n+//! Additional functionality for numerics.\n //!\n-//! These are implemented for the primitive numeric types in `std::{u8, u16,\n-//! u32, u64, usize, i8, i16, i32, i64, isize, f32, f64}`.\n+//! This module provides some extra types that are useful when doing numerical\n+//! work. See the individual documentation for each piece for more information.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n #![allow(missing_docs)]"}]}