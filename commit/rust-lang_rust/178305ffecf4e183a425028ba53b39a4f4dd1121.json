{"sha": "178305ffecf4e183a425028ba53b39a4f4dd1121", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3ODMwNWZmZWNmNGUxODNhNDI1MDI4YmE1M2IzOWE0ZjRkZDExMjE=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-04-18T23:48:33Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-04-30T23:31:55Z"}, "message": "fixed up issue-2185, but now it has a trait failure", "tree": {"sha": "5ba8b573a8fc0e7ab33d5fe0dc8632d1c881ff8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ba8b573a8fc0e7ab33d5fe0dc8632d1c881ff8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/178305ffecf4e183a425028ba53b39a4f4dd1121", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/178305ffecf4e183a425028ba53b39a4f4dd1121", "html_url": "https://github.com/rust-lang/rust/commit/178305ffecf4e183a425028ba53b39a4f4dd1121", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/178305ffecf4e183a425028ba53b39a4f4dd1121/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6bb587c12da816b2872db1c1f9154a58fc91006", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6bb587c12da816b2872db1c1f9154a58fc91006", "html_url": "https://github.com/rust-lang/rust/commit/d6bb587c12da816b2872db1c1f9154a58fc91006"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "350dea4415dd0fb3c93a0c0ea9d6e299a9e7763d", "filename": "src/test/run-pass/issue-2185.rs", "status": "modified", "additions": 27, "deletions": 4, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/178305ffecf4e183a425028ba53b39a4f4dd1121/src%2Ftest%2Frun-pass%2Fissue-2185.rs", "raw_url": "https://github.com/rust-lang/rust/raw/178305ffecf4e183a425028ba53b39a4f4dd1121/src%2Ftest%2Frun-pass%2Fissue-2185.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2185.rs?ref=178305ffecf4e183a425028ba53b39a4f4dd1121", "patch": "@@ -8,22 +8,45 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-test FIXME #2263\n+// does the second one subsume the first?\n+// xfail-test\n // xfail-fast\n+\n+// notes on this test case:\n+// On Thu, Apr 18, 2013 at 6:30 PM, John Clements <clements@brinckerhoff.org> wrote:\n+// the \"issue-2185.rs\" test was xfailed with a ref to #2263. Issue #2263 is now fixed, so I tried it again, and after adding some &self parameters, I got this error:\n+// \n+// Running /usr/local/bin/rustc:\n+// issue-2185.rs:24:0: 26:1 error: conflicting implementations for a trait\n+// issue-2185.rs:24 impl iterable<uint> for @fn(&fn(uint)) {\n+// issue-2185.rs:25     fn iter(&self, blk: &fn(v: uint)) { self( |i| blk(i) ) }\n+// issue-2185.rs:26 }\n+// issue-2185.rs:20:0: 22:1 note: note conflicting implementation here\n+// issue-2185.rs:20 impl<A> iterable<A> for @fn(&fn(A)) {\n+// issue-2185.rs:21     fn iter(&self, blk: &fn(A)) { self(blk); }\n+// issue-2185.rs:22 }\n+// \n+// \u2026 so it looks like it's just not possible to implement both the generic iterable<uint> and iterable<A> for the type iterable<uint>. Is it okay if I just remove this test?\n+//\n+// but Niko responded:\n+// think it's fine to remove this test, just because it's old and cruft and not hard to reproduce. *However* it should eventually be possible to implement the same interface for the same type multiple times with different type parameters, it's just that our current trait implementation has accidental limitations.\n+\n+// so I'm leaving it in.\n+\n // This test had to do with an outdated version of the iterable trait.\n // However, the condition it was testing seemed complex enough to\n // warrant still having a test, so I inlined the old definitions.\n \n trait iterable<A> {\n-    fn iter(blk: &fn(A));\n+    fn iter(&self, blk: &fn(A));\n }\n \n impl<A> iterable<A> for @fn(&fn(A)) {\n-    fn iter(blk: &fn(A)) { self(blk); }\n+    fn iter(&self, blk: &fn(A)) { self(blk); }\n }\n \n impl iterable<uint> for @fn(&fn(uint)) {\n-    fn iter(blk: &fn(&&v: uint)) { self( |i| blk(i) ) }\n+    fn iter(&self, blk: &fn(v: uint)) { self( |i| blk(i) ) }\n }\n \n fn filter<A,IA:iterable<A>>(self: IA, prd: @fn(A) -> bool, blk: &fn(A)) {"}]}