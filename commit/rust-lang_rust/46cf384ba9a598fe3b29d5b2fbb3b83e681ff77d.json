{"sha": "46cf384ba9a598fe3b29d5b2fbb3b83e681ff77d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2Y2YzODRiYTlhNTk4ZmUzYjI5ZDViMmZiYjNiODNlNjgxZmY3N2Q=", "commit": {"author": {"name": "Piotr Jawniak", "email": "sawyer47@gmail.com", "date": "2014-08-23T11:59:39Z"}, "committer": {"name": "Piotr Jawniak", "email": "sawyer47@gmail.com", "date": "2014-08-24T07:14:41Z"}, "message": "Fix const evaluation of cast expression from bool", "tree": {"sha": "9a030c96316dcd7724aba3ccbec94ce5dc00734e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a030c96316dcd7724aba3ccbec94ce5dc00734e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46cf384ba9a598fe3b29d5b2fbb3b83e681ff77d", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46cf384ba9a598fe3b29d5b2fbb3b83e681ff77d", "html_url": "https://github.com/rust-lang/rust/commit/46cf384ba9a598fe3b29d5b2fbb3b83e681ff77d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46cf384ba9a598fe3b29d5b2fbb3b83e681ff77d/comments", "author": {"login": "Sawyer47", "id": 1534302, "node_id": "MDQ6VXNlcjE1MzQzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1534302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sawyer47", "html_url": "https://github.com/Sawyer47", "followers_url": "https://api.github.com/users/Sawyer47/followers", "following_url": "https://api.github.com/users/Sawyer47/following{/other_user}", "gists_url": "https://api.github.com/users/Sawyer47/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sawyer47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sawyer47/subscriptions", "organizations_url": "https://api.github.com/users/Sawyer47/orgs", "repos_url": "https://api.github.com/users/Sawyer47/repos", "events_url": "https://api.github.com/users/Sawyer47/events{/privacy}", "received_events_url": "https://api.github.com/users/Sawyer47/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Sawyer47", "id": 1534302, "node_id": "MDQ6VXNlcjE1MzQzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1534302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sawyer47", "html_url": "https://github.com/Sawyer47", "followers_url": "https://api.github.com/users/Sawyer47/followers", "following_url": "https://api.github.com/users/Sawyer47/following{/other_user}", "gists_url": "https://api.github.com/users/Sawyer47/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sawyer47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sawyer47/subscriptions", "organizations_url": "https://api.github.com/users/Sawyer47/orgs", "repos_url": "https://api.github.com/users/Sawyer47/repos", "events_url": "https://api.github.com/users/Sawyer47/events{/privacy}", "received_events_url": "https://api.github.com/users/Sawyer47/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0c314205c8820d7119465cc78eba14f17853c3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0c314205c8820d7119465cc78eba14f17853c3b", "html_url": "https://github.com/rust-lang/rust/commit/d0c314205c8820d7119465cc78eba14f17853c3b"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "b6ad584c303058fe30860976af1a05497cb8bce9", "filename": "src/librustc/middle/const_eval.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/46cf384ba9a598fe3b29d5b2fbb3b83e681ff77d/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46cf384ba9a598fe3b29d5b2fbb3b83e681ff77d/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs?ref=46cf384ba9a598fe3b29d5b2fbb3b83e681ff77d", "patch": "@@ -517,26 +517,29 @@ pub fn eval_const_expr_partial<T: ty::ExprTyProvider>(tcx: &T, e: &Expr)\n                 match ty::get(ety).sty {\n                     ty::ty_float(_) => {\n                         match val {\n+                            const_bool(b) => Ok(const_float(b as f64)),\n                             const_uint(u) => Ok(const_float(u as f64)),\n                             const_int(i) => Ok(const_float(i as f64)),\n                             const_float(f) => Ok(const_float(f)),\n-                            _ => Err(\"can't cast float to str\".to_string()),\n+                            _ => Err(\"can't cast this type to float\".to_string()),\n                         }\n                     }\n                     ty::ty_uint(_) => {\n                         match val {\n+                            const_bool(b) => Ok(const_uint(b as u64)),\n                             const_uint(u) => Ok(const_uint(u)),\n                             const_int(i) => Ok(const_uint(i as u64)),\n                             const_float(f) => Ok(const_uint(f as u64)),\n-                            _ => Err(\"can't cast str to uint\".to_string()),\n+                            _ => Err(\"can't cast this type to uint\".to_string()),\n                         }\n                     }\n-                    ty::ty_int(_) | ty::ty_bool => {\n+                    ty::ty_int(_) => {\n                         match val {\n+                            const_bool(b) => Ok(const_int(b as i64)),\n                             const_uint(u) => Ok(const_int(u as i64)),\n                             const_int(i) => Ok(const_int(i)),\n                             const_float(f) => Ok(const_int(f as i64)),\n-                            _ => Err(\"can't cast str to int\".to_string()),\n+                            _ => Err(\"can't cast this type to int\".to_string()),\n                         }\n                     }\n                     _ => Err(\"can't cast this type\".to_string())"}, {"sha": "13e5b89b84e04d718e9f42bb18352170a51b1906", "filename": "src/test/run-pass/cast-in-array-size.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/46cf384ba9a598fe3b29d5b2fbb3b83e681ff77d/src%2Ftest%2Frun-pass%2Fcast-in-array-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46cf384ba9a598fe3b29d5b2fbb3b83e681ff77d/src%2Ftest%2Frun-pass%2Fcast-in-array-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcast-in-array-size.rs?ref=46cf384ba9a598fe3b29d5b2fbb3b83e681ff77d", "patch": "@@ -16,4 +16,5 @@ fn main() {\n     let _a: [bool, ..1 as uint];\n     let _b: [int, ..SIZE as uint] = [1, ..SIZE as uint];\n     let _c: [bool, ..'\\n' as uint] = [true, ..'\\n' as uint];\n+    let _d: [bool, ..true as uint] = [true, ..true as uint];\n }"}]}