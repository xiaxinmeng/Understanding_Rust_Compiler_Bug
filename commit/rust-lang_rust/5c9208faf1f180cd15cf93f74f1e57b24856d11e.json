{"sha": "5c9208faf1f180cd15cf93f74f1e57b24856d11e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjOTIwOGZhZjFmMTgwY2QxNWNmOTNmNzRmMWU1N2IyNDg1NmQxMWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-03-09T06:06:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-03-09T06:06:34Z"}, "message": "Auto merge of #40337 - alexcrichton:racy-dirs, r=brson\n\nrustbuild: Assert directory creation succeeds\n\nI've been seeing failures on the bots when building jemalloc and my assumption\nis that it's because cwd isn't created. That may be possible if this\n`create_dir_all` call change in this commit fails, in which case we ignore the\nerror.\n\nThis commit updates the location to call `create_dir_racy` which handles\nconcurrent invocations, as multiple build scripts may be trying to create the\n`native` dir.", "tree": {"sha": "0d6cd4274d9abf0a976baea94459942a34155b8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d6cd4274d9abf0a976baea94459942a34155b8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c9208faf1f180cd15cf93f74f1e57b24856d11e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c9208faf1f180cd15cf93f74f1e57b24856d11e", "html_url": "https://github.com/rust-lang/rust/commit/5c9208faf1f180cd15cf93f74f1e57b24856d11e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c9208faf1f180cd15cf93f74f1e57b24856d11e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "758f37480be34e657abd3870c863e6e7edb1cd30", "url": "https://api.github.com/repos/rust-lang/rust/commits/758f37480be34e657abd3870c863e6e7edb1cd30", "html_url": "https://github.com/rust-lang/rust/commit/758f37480be34e657abd3870c863e6e7edb1cd30"}, {"sha": "e412af2a887da25c987d4ca367b7b471b6c5fb55", "url": "https://api.github.com/repos/rust-lang/rust/commits/e412af2a887da25c987d4ca367b7b471b6c5fb55", "html_url": "https://github.com/rust-lang/rust/commit/e412af2a887da25c987d4ca367b7b471b6c5fb55"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "cb58a916fb7971305675e4d2a2e47ccc949569cd", "filename": "src/build_helper/lib.rs", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5c9208faf1f180cd15cf93f74f1e57b24856d11e/src%2Fbuild_helper%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c9208faf1f180cd15cf93f74f1e57b24856d11e/src%2Fbuild_helper%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuild_helper%2Flib.rs?ref=5c9208faf1f180cd15cf93f74f1e57b24856d11e", "patch": "@@ -12,10 +12,11 @@\n \n extern crate filetime;\n \n-use std::{fs, env};\n use std::fs::File;\n-use std::process::{Command, Stdio};\n+use std::io;\n use std::path::{Path, PathBuf};\n+use std::process::{Command, Stdio};\n+use std::{fs, env};\n \n use filetime::FileTime;\n \n@@ -196,7 +197,7 @@ pub fn native_lib_boilerplate(src_name: &str,\n \n     let out_dir = env::var_os(\"RUSTBUILD_NATIVE_DIR\").unwrap_or(env::var_os(\"OUT_DIR\").unwrap());\n     let out_dir = PathBuf::from(out_dir).join(out_name);\n-    let _ = fs::create_dir_all(&out_dir);\n+    t!(create_dir_racy(&out_dir));\n     println!(\"cargo:rustc-link-lib=static={}\", link_name);\n     println!(\"cargo:rustc-link-search=native={}\", out_dir.join(search_subdir).display());\n \n@@ -223,3 +224,21 @@ fn fail(s: &str) -> ! {\n     println!(\"\\n\\n{}\\n\\n\", s);\n     std::process::exit(1);\n }\n+\n+fn create_dir_racy(path: &Path) -> io::Result<()> {\n+    match fs::create_dir(path) {\n+        Ok(()) => return Ok(()),\n+        Err(ref e) if e.kind() == io::ErrorKind::AlreadyExists => return Ok(()),\n+        Err(ref e) if e.kind() == io::ErrorKind::NotFound => {}\n+        Err(e) => return Err(e),\n+    }\n+    match path.parent() {\n+        Some(p) => try!(create_dir_racy(p)),\n+        None => return Err(io::Error::new(io::ErrorKind::Other, \"failed to create whole tree\")),\n+    }\n+    match fs::create_dir(path) {\n+        Ok(()) => Ok(()),\n+        Err(ref e) if e.kind() == io::ErrorKind::AlreadyExists => Ok(()),\n+        Err(e) => Err(e),\n+    }\n+}"}]}