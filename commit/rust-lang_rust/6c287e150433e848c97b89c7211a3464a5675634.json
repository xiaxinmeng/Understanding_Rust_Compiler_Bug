{"sha": "6c287e150433e848c97b89c7211a3464a5675634", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjMjg3ZTE1MDQzM2U4NDhjOTdiODljNzIxMWEzNDY0YTU2NzU2MzQ=", "commit": {"author": {"name": "Chayim Refael Friedman", "email": "chayimfr@gmail.com", "date": "2021-04-18T02:09:20Z"}, "committer": {"name": "Chayim Refael Friedman", "email": "chayimfr@gmail.com", "date": "2021-04-18T03:15:40Z"}, "message": "Accept `E<error_number>` notation in doctests\n\n```compile_fail,E0000\n```\n\nThe code was stolen from rustdoc at https://github.com/rust-lang/rust/blob/392ba2ba1a7d6c542d2459fb8133bebf62a4a423/src/librustdoc/html/markdown.rs#L866-L867", "tree": {"sha": "5b87c25afe703ad2a55abc8ffce7a76e860da7f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b87c25afe703ad2a55abc8ffce7a76e860da7f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c287e150433e848c97b89c7211a3464a5675634", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c287e150433e848c97b89c7211a3464a5675634", "html_url": "https://github.com/rust-lang/rust/commit/6c287e150433e848c97b89c7211a3464a5675634", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c287e150433e848c97b89c7211a3464a5675634/comments", "author": {"login": "ChayimFriedman2", "id": 24700207, "node_id": "MDQ6VXNlcjI0NzAwMjA3", "avatar_url": "https://avatars.githubusercontent.com/u/24700207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChayimFriedman2", "html_url": "https://github.com/ChayimFriedman2", "followers_url": "https://api.github.com/users/ChayimFriedman2/followers", "following_url": "https://api.github.com/users/ChayimFriedman2/following{/other_user}", "gists_url": "https://api.github.com/users/ChayimFriedman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChayimFriedman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChayimFriedman2/subscriptions", "organizations_url": "https://api.github.com/users/ChayimFriedman2/orgs", "repos_url": "https://api.github.com/users/ChayimFriedman2/repos", "events_url": "https://api.github.com/users/ChayimFriedman2/events{/privacy}", "received_events_url": "https://api.github.com/users/ChayimFriedman2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChayimFriedman2", "id": 24700207, "node_id": "MDQ6VXNlcjI0NzAwMjA3", "avatar_url": "https://avatars.githubusercontent.com/u/24700207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChayimFriedman2", "html_url": "https://github.com/ChayimFriedman2", "followers_url": "https://api.github.com/users/ChayimFriedman2/followers", "following_url": "https://api.github.com/users/ChayimFriedman2/following{/other_user}", "gists_url": "https://api.github.com/users/ChayimFriedman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChayimFriedman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChayimFriedman2/subscriptions", "organizations_url": "https://api.github.com/users/ChayimFriedman2/orgs", "repos_url": "https://api.github.com/users/ChayimFriedman2/repos", "events_url": "https://api.github.com/users/ChayimFriedman2/events{/privacy}", "received_events_url": "https://api.github.com/users/ChayimFriedman2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19fc1f333f64e76784ced4ea185e62329d0defb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/19fc1f333f64e76784ced4ea185e62329d0defb6", "html_url": "https://github.com/rust-lang/rust/commit/19fc1f333f64e76784ced4ea185e62329d0defb6"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "855c7fba823da2b6792b838b93b82cbc6fe4df12", "filename": "crates/ide/src/syntax_highlighting/inject.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6c287e150433e848c97b89c7211a3464a5675634/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c287e150433e848c97b89c7211a3464a5675634/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs?ref=6c287e150433e848c97b89c7211a3464a5675634", "patch": "@@ -90,6 +90,13 @@ const RUSTDOC_FENCE_TOKENS: &[&'static str] = &[\n     \"edition2021\",\n ];\n \n+fn is_rustdoc_fence_token(token: &str) -> bool {\n+    if RUSTDOC_FENCE_TOKENS.contains(&token) {\n+        return true;\n+    }\n+    token.starts_with('E') && token.len() == 5 && token[1..].parse::<u32>().is_ok()\n+}\n+\n /// Injection of syntax highlighting of doctests.\n pub(super) fn doc_comment(\n     hl: &mut Highlights,\n@@ -174,8 +181,7 @@ pub(super) fn doc_comment(\n                     is_codeblock = !is_codeblock;\n                     // Check whether code is rust by inspecting fence guards\n                     let guards = &line[idx + RUSTDOC_FENCE.len()..];\n-                    let is_rust =\n-                        guards.split(',').all(|sub| RUSTDOC_FENCE_TOKENS.contains(&sub.trim()));\n+                    let is_rust = guards.split(',').all(|sub| is_rustdoc_fence_token(sub.trim()));\n                     is_doctest = is_codeblock && is_rust;\n                     continue;\n                 }"}, {"sha": "a51ff89e4b85e0e4f44087f9645732a8a6fa5938", "filename": "crates/rust-analyzer/src/markdown.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6c287e150433e848c97b89c7211a3464a5675634/crates%2Frust-analyzer%2Fsrc%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c287e150433e848c97b89c7211a3464a5675634/crates%2Frust-analyzer%2Fsrc%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmarkdown.rs?ref=6c287e150433e848c97b89c7211a3464a5675634", "patch": "@@ -27,9 +27,8 @@ pub(crate) fn format_docs(src: &str) -> String {\n             in_code_block ^= true;\n \n             if in_code_block {\n-                is_rust = header\n-                    .split(',')\n-                    .all(|sub| RUSTDOC_CODE_BLOCK_ATTRIBUTES_RUST_SPECIFIC.contains(&sub.trim()));\n+                is_rust =\n+                    header.split(',').all(|sub| is_rust_specific_code_block_attribute(sub.trim()));\n \n                 if is_rust {\n                     line = \"```rust\";\n@@ -42,6 +41,13 @@ pub(crate) fn format_docs(src: &str) -> String {\n     processed_lines.join(\"\\n\")\n }\n \n+fn is_rust_specific_code_block_attribute(attr: &str) -> bool {\n+    if RUSTDOC_CODE_BLOCK_ATTRIBUTES_RUST_SPECIFIC.contains(&attr) {\n+        return true;\n+    }\n+    attr.starts_with('E') && attr.len() == 5 && attr[1..].parse::<u32>().is_ok()\n+}\n+\n fn code_line_ignored_by_rustdoc(line: &str) -> bool {\n     let trimmed = line.trim();\n     trimmed == \"#\" || trimmed.starts_with(\"# \") || trimmed.starts_with(\"#\\t\")\n@@ -81,6 +87,12 @@ mod tests {\n         assert_eq!(format_docs(comment), \"```rust\\nlet z = 55;\\n```\");\n     }\n \n+    #[test]\n+    fn test_format_docs_handles_error_codes() {\n+        let comment = \"```compile_fail,E0641\\nlet b = 0 as *const _;\\n```\";\n+        assert_eq!(format_docs(comment), \"```rust\\nlet b = 0 as *const _;\\n```\");\n+    }\n+\n     #[test]\n     fn test_format_docs_skips_comments_in_rust_block() {\n         let comment ="}]}