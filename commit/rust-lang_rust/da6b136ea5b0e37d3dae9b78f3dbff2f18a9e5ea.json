{"sha": "da6b136ea5b0e37d3dae9b78f3dbff2f18a9e5ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhNmIxMzZlYTViMGUzN2QzZGFlOWI3OGYzZGJmZjJmMThhOWU1ZWE=", "commit": {"author": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-04-21T15:19:18Z"}, "committer": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-04-21T15:19:18Z"}, "message": "Improve autocompletion by looking on the type and name\n\nSigned-off-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>", "tree": {"sha": "38bb819663ec8b3b1520363dddadd46983f2bb32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38bb819663ec8b3b1520363dddadd46983f2bb32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da6b136ea5b0e37d3dae9b78f3dbff2f18a9e5ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da6b136ea5b0e37d3dae9b78f3dbff2f18a9e5ea", "html_url": "https://github.com/rust-lang/rust/commit/da6b136ea5b0e37d3dae9b78f3dbff2f18a9e5ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da6b136ea5b0e37d3dae9b78f3dbff2f18a9e5ea/comments", "author": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6a7be19d9df53e39fa9bc1779cc19b7b708e495", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6a7be19d9df53e39fa9bc1779cc19b7b708e495", "html_url": "https://github.com/rust-lang/rust/commit/b6a7be19d9df53e39fa9bc1779cc19b7b708e495"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "7e30956cc30302b504e5fa85db764b04ad793a43", "filename": "crates/rust-analyzer/src/conv.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/da6b136ea5b0e37d3dae9b78f3dbff2f18a9e5ea/crates%2Frust-analyzer%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da6b136ea5b0e37d3dae9b78f3dbff2f18a9e5ea/crates%2Frust-analyzer%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconv.rs?ref=da6b136ea5b0e37d3dae9b78f3dbff2f18a9e5ea", "patch": "@@ -114,10 +114,10 @@ impl Conv for Severity {\n     }\n }\n \n-impl ConvWith<(&LineIndex, LineEndings, usize)> for CompletionItem {\n+impl ConvWith<(&LineIndex, LineEndings, &mut usize)> for CompletionItem {\n     type Output = ::lsp_types::CompletionItem;\n \n-    fn conv_with(self, ctx: (&LineIndex, LineEndings, usize)) -> ::lsp_types::CompletionItem {\n+    fn conv_with(self, ctx: (&LineIndex, LineEndings, &mut usize)) -> ::lsp_types::CompletionItem {\n         let mut additional_text_edits = Vec::new();\n         let mut text_edit = None;\n         // LSP does not allow arbitrary edits in completion, so we have to do a\n@@ -170,7 +170,8 @@ impl ConvWith<(&LineIndex, LineEndings, usize)> for CompletionItem {\n                 CompletionScore::TypeAndNameMatch => res.preselect = Some(true),\n                 CompletionScore::TypeMatch => {}\n             }\n-            res.sort_text = Some(format!(\"{:02}\", ctx.2));\n+            res.sort_text = Some(format!(\"{:02}\", *ctx.2));\n+            *ctx.2 += 1;\n         }\n \n         if self.deprecated() {"}, {"sha": "08f5ad47c2e9e814f654b23a966c3fdc0a052397", "filename": "crates/rust-analyzer/src/main_loop/handlers.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/da6b136ea5b0e37d3dae9b78f3dbff2f18a9e5ea/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da6b136ea5b0e37d3dae9b78f3dbff2f18a9e5ea/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=da6b136ea5b0e37d3dae9b78f3dbff2f18a9e5ea", "patch": "@@ -423,10 +423,10 @@ pub fn handle_completion(\n     };\n     let line_index = world.analysis().file_line_index(position.file_id)?;\n     let line_endings = world.file_line_endings(position.file_id);\n+    let mut count_sort_text_item = 0usize;\n     let items: Vec<CompletionItem> = items\n         .into_iter()\n-        .enumerate()\n-        .map(|(idx, item)| item.conv_with((&line_index, line_endings, idx)))\n+        .map(|item| item.conv_with((&line_index, line_endings, &mut count_sort_text_item)))\n         .collect();\n \n     Ok(Some(items.into()))"}]}