{"sha": "7499f3c7a945f7dc32c3b9a7fd553874a2adff43", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0OTlmM2M3YTk0NWY3ZGMzMmMzYjlhN2ZkNTUzODc0YTJhZGZmNDM=", "commit": {"author": {"name": "Florian Hartwig", "email": "florian.j.hartwig@gmail.com", "date": "2016-01-14T18:27:24Z"}, "committer": {"name": "Florian Hartwig", "email": "florian.j.hartwig@gmail.com", "date": "2016-01-14T18:27:24Z"}, "message": "Consider lifetime in self paramter in unused_lifetime lint", "tree": {"sha": "0366a60dce63270626e4c88de4023aef28a3b972", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0366a60dce63270626e4c88de4023aef28a3b972"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7499f3c7a945f7dc32c3b9a7fd553874a2adff43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7499f3c7a945f7dc32c3b9a7fd553874a2adff43", "html_url": "https://github.com/rust-lang/rust/commit/7499f3c7a945f7dc32c3b9a7fd553874a2adff43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7499f3c7a945f7dc32c3b9a7fd553874a2adff43/comments", "author": {"login": "fhartwig", "id": 83271, "node_id": "MDQ6VXNlcjgzMjcx", "avatar_url": "https://avatars.githubusercontent.com/u/83271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhartwig", "html_url": "https://github.com/fhartwig", "followers_url": "https://api.github.com/users/fhartwig/followers", "following_url": "https://api.github.com/users/fhartwig/following{/other_user}", "gists_url": "https://api.github.com/users/fhartwig/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhartwig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhartwig/subscriptions", "organizations_url": "https://api.github.com/users/fhartwig/orgs", "repos_url": "https://api.github.com/users/fhartwig/repos", "events_url": "https://api.github.com/users/fhartwig/events{/privacy}", "received_events_url": "https://api.github.com/users/fhartwig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhartwig", "id": 83271, "node_id": "MDQ6VXNlcjgzMjcx", "avatar_url": "https://avatars.githubusercontent.com/u/83271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhartwig", "html_url": "https://github.com/fhartwig", "followers_url": "https://api.github.com/users/fhartwig/followers", "following_url": "https://api.github.com/users/fhartwig/following{/other_user}", "gists_url": "https://api.github.com/users/fhartwig/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhartwig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhartwig/subscriptions", "organizations_url": "https://api.github.com/users/fhartwig/orgs", "repos_url": "https://api.github.com/users/fhartwig/repos", "events_url": "https://api.github.com/users/fhartwig/events{/privacy}", "received_events_url": "https://api.github.com/users/fhartwig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6f8723c78cffe7cebec5b3792fcff0c81586ab8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6f8723c78cffe7cebec5b3792fcff0c81586ab8", "html_url": "https://github.com/rust-lang/rust/commit/f6f8723c78cffe7cebec5b3792fcff0c81586ab8"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "1edd75a45aa162aaf323f900d4c2a375b7219a0c", "filename": "src/lifetimes.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7499f3c7a945f7dc32c3b9a7fd553874a2adff43/src%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7499f3c7a945f7dc32c3b9a7fd553874a2adff43/src%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flifetimes.rs?ref=7499f3c7a945f7dc32c3b9a7fd553874a2adff43", "patch": "@@ -77,7 +77,7 @@ fn check_fn_inner(cx: &LateContext, decl: &FnDecl, slf: Option<&ExplicitSelf>, g\n                   span,\n                   \"explicit lifetimes given in parameter types where they could be elided\");\n     }\n-    report_extra_lifetimes(cx, decl, &generics);\n+    report_extra_lifetimes(cx, decl, &generics, slf);\n }\n \n fn could_use_elision(cx: &LateContext, func: &FnDecl, slf: Option<&ExplicitSelf>, named_lts: &[LifetimeDef]) -> bool {\n@@ -303,14 +303,25 @@ impl<'v> Visitor<'v> for LifetimeChecker {\n     }\n }\n \n-fn report_extra_lifetimes(cx: &LateContext, func: &FnDecl, generics: &Generics) {\n+fn report_extra_lifetimes(cx: &LateContext, func: &FnDecl,\n+                          generics: &Generics, slf: Option<&ExplicitSelf>) {\n     let hs = generics.lifetimes\n                      .iter()\n                      .map(|lt| (lt.lifetime.name, lt.lifetime.span))\n                      .collect();\n     let mut checker = LifetimeChecker(hs);\n+\n     walk_generics(&mut checker, generics);\n     walk_fn_decl(&mut checker, func);\n+\n+    if let Some(slf) = slf {\n+        match slf.node {\n+            SelfRegion(Some(ref lt), _, _) => checker.visit_lifetime(lt),\n+            SelfExplicit(ref t, _) => walk_ty(&mut checker, t),\n+            _ => {}\n+        }\n+    }\n+\n     for (_, v) in checker.0 {\n         span_lint(cx, UNUSED_LIFETIMES, v, \"this lifetime isn't used in the function definition\");\n     }"}, {"sha": "99c16917426ed9f5ad41bb130bbd650b2f01bffb", "filename": "tests/compile-fail/lifetimes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7499f3c7a945f7dc32c3b9a7fd553874a2adff43/tests%2Fcompile-fail%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7499f3c7a945f7dc32c3b9a7fd553874a2adff43/tests%2Fcompile-fail%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Flifetimes.rs?ref=7499f3c7a945f7dc32c3b9a7fd553874a2adff43", "patch": "@@ -1,8 +1,8 @@\n #![feature(plugin)]\n #![plugin(clippy)]\n \n-#![deny(needless_lifetimes)]\n-#![allow(dead_code, unused_lifetimes)]\n+#![deny(needless_lifetimes, unused_lifetimes)]\n+#![allow(dead_code)]\n fn distinct_lifetimes<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: u8) { }\n //~^ERROR explicit lifetimes given\n "}, {"sha": "a35718b5848ffd16399b7b69292326b949fc862a", "filename": "tests/compile-fail/unused_lt.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7499f3c7a945f7dc32c3b9a7fd553874a2adff43/tests%2Fcompile-fail%2Funused_lt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7499f3c7a945f7dc32c3b9a7fd553874a2adff43/tests%2Fcompile-fail%2Funused_lt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Funused_lt.rs?ref=7499f3c7a945f7dc32c3b9a7fd553874a2adff43", "patch": "@@ -52,6 +52,13 @@ pub fn parse2<'a, I>(_it: &mut I) where I: Iterator<Item=&'a str>{\n     unimplemented!()\n }\n \n+struct X { x: u32 }\n+\n+impl X {\n+    fn self_ref_with_lifetime<'a>(&'a self) {}\n+    fn explicit_self_with_lifetime<'a>(self: &'a Self) {}\n+}\n+\n fn main() {\n \n }"}]}