{"sha": "4adb13c3a4328046688f04d4a15c8c3321ca6bfb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhZGIxM2MzYTQzMjgwNDY2ODhmMDRkNGExNWM4YzMzMjFjYTZiZmI=", "commit": {"author": {"name": "Marc-Antoine Perennou", "email": "Marc-Antoine@Perennou.com", "date": "2020-07-17T20:10:37Z"}, "committer": {"name": "Marc-Antoine Perennou", "email": "Marc-Antoine@Perennou.com", "date": "2020-07-17T20:11:06Z"}, "message": "rustbuild: drop tool::should_install\n\nAlways install when the build succeeds\n\nFixes #74431\n\nSigned-off-by: Marc-Antoine Perennou <Marc-Antoine@Perennou.com>", "tree": {"sha": "e8770a9dd04ec7c894a8a89e444c52d37d32bfd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8770a9dd04ec7c894a8a89e444c52d37d32bfd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4adb13c3a4328046688f04d4a15c8c3321ca6bfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4adb13c3a4328046688f04d4a15c8c3321ca6bfb", "html_url": "https://github.com/rust-lang/rust/commit/4adb13c3a4328046688f04d4a15c8c3321ca6bfb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4adb13c3a4328046688f04d4a15c8c3321ca6bfb/comments", "author": {"login": "Keruspe", "id": 222942, "node_id": "MDQ6VXNlcjIyMjk0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/222942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Keruspe", "html_url": "https://github.com/Keruspe", "followers_url": "https://api.github.com/users/Keruspe/followers", "following_url": "https://api.github.com/users/Keruspe/following{/other_user}", "gists_url": "https://api.github.com/users/Keruspe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Keruspe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Keruspe/subscriptions", "organizations_url": "https://api.github.com/users/Keruspe/orgs", "repos_url": "https://api.github.com/users/Keruspe/repos", "events_url": "https://api.github.com/users/Keruspe/events{/privacy}", "received_events_url": "https://api.github.com/users/Keruspe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Keruspe", "id": 222942, "node_id": "MDQ6VXNlcjIyMjk0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/222942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Keruspe", "html_url": "https://github.com/Keruspe", "followers_url": "https://api.github.com/users/Keruspe/followers", "following_url": "https://api.github.com/users/Keruspe/following{/other_user}", "gists_url": "https://api.github.com/users/Keruspe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Keruspe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Keruspe/subscriptions", "organizations_url": "https://api.github.com/users/Keruspe/orgs", "repos_url": "https://api.github.com/users/Keruspe/repos", "events_url": "https://api.github.com/users/Keruspe/events{/privacy}", "received_events_url": "https://api.github.com/users/Keruspe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3014f23ddd437d2ba9947383c4565d09c1eb39f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/3014f23ddd437d2ba9947383c4565d09c1eb39f2", "html_url": "https://github.com/rust-lang/rust/commit/3014f23ddd437d2ba9947383c4565d09c1eb39f2"}], "stats": {"total": 29, "additions": 5, "deletions": 24}, "files": [{"sha": "b4a817738ff3f14f4cdd196d0bc1d7b325d5948f", "filename": "src/bootstrap/install.rs", "status": "modified", "additions": 5, "deletions": 24, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4adb13c3a4328046688f04d4a15c8c3321ca6bfb/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4adb13c3a4328046688f04d4a15c8c3321ca6bfb/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=4adb13c3a4328046688f04d4a15c8c3321ca6bfb", "patch": "@@ -159,11 +159,6 @@ macro_rules! install {\n                 config.extended && config.tools.as_ref()\n                     .map_or(true, |t| t.contains($path))\n             }\n-\n-            #[allow(dead_code)]\n-            fn should_install(builder: &Builder<'_>) -> bool {\n-                builder.config.tools.as_ref().map_or(false, |t| t.contains($path))\n-            }\n         }\n \n         impl Step for $name {\n@@ -210,8 +205,7 @@ install!((self, builder, _config),\n         install_cargo(builder, self.compiler.stage, self.target);\n     };\n     Rls, \"rls\", Self::should_build(_config), only_hosts: true, {\n-        if builder.ensure(dist::Rls { compiler: self.compiler, target: self.target }).is_some() ||\n-            Self::should_install(builder) {\n+        if builder.ensure(dist::Rls { compiler: self.compiler, target: self.target }).is_some() {\n             install_rls(builder, self.compiler.stage, self.target);\n         } else {\n             builder.info(\n@@ -221,27 +215,14 @@ install!((self, builder, _config),\n     };\n     RustAnalyzer, \"rust-analyzer\", Self::should_build(_config), only_hosts: true, {\n         builder.ensure(dist::RustAnalyzer { compiler: self.compiler, target: self.target });\n-        if Self::should_install(builder) {\n-            install_rust_analyzer(builder, self.compiler.stage, self.target);\n-        } else {\n-            builder.info(\n-                &format!(\"skipping Install rust-analyzer stage{} ({})\", self.compiler.stage, self.target),\n-            );\n-        }\n+        install_rust_analyzer(builder, self.compiler.stage, self.target);\n     };\n     Clippy, \"clippy\", Self::should_build(_config), only_hosts: true, {\n         builder.ensure(dist::Clippy { compiler: self.compiler, target: self.target });\n-        if Self::should_install(builder) {\n-            install_clippy(builder, self.compiler.stage, self.target);\n-        } else {\n-            builder.info(\n-                &format!(\"skipping Install clippy stage{} ({})\", self.compiler.stage, self.target),\n-            );\n-        }\n+        install_clippy(builder, self.compiler.stage, self.target);\n     };\n     Miri, \"miri\", Self::should_build(_config), only_hosts: true, {\n-        if builder.ensure(dist::Miri { compiler: self.compiler, target: self.target }).is_some() ||\n-            Self::should_install(builder) {\n+        if builder.ensure(dist::Miri { compiler: self.compiler, target: self.target }).is_some() {\n             install_miri(builder, self.compiler.stage, self.target);\n         } else {\n             builder.info(\n@@ -253,7 +234,7 @@ install!((self, builder, _config),\n         if builder.ensure(dist::Rustfmt {\n             compiler: self.compiler,\n             target: self.target\n-        }).is_some() || Self::should_install(builder) {\n+        }).is_some() {\n             install_rustfmt(builder, self.compiler.stage, self.target);\n         } else {\n             builder.info("}]}