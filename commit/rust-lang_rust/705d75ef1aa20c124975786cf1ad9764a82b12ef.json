{"sha": "705d75ef1aa20c124975786cf1ad9764a82b12ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwNWQ3NWVmMWFhMjBjMTI0OTc1Nzg2Y2YxYWQ5NzY0YTgyYjEyZWY=", "commit": {"author": {"name": "LooMaclin", "email": "loo.maclin@protonmail.com", "date": "2019-04-02T03:33:54Z"}, "committer": {"name": "LooMaclin", "email": "loo.maclin@protonmail.com", "date": "2019-04-02T03:33:54Z"}, "message": "Improve miri's error reporting in check_in_alloc", "tree": {"sha": "d6196fc7c7fdbec876ae0c50caadfbdf99f65353", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6196fc7c7fdbec876ae0c50caadfbdf99f65353"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/705d75ef1aa20c124975786cf1ad9764a82b12ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/705d75ef1aa20c124975786cf1ad9764a82b12ef", "html_url": "https://github.com/rust-lang/rust/commit/705d75ef1aa20c124975786cf1ad9764a82b12ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/705d75ef1aa20c124975786cf1ad9764a82b12ef/comments", "author": {"login": "LooMaclin", "id": 10957765, "node_id": "MDQ6VXNlcjEwOTU3NzY1", "avatar_url": "https://avatars.githubusercontent.com/u/10957765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LooMaclin", "html_url": "https://github.com/LooMaclin", "followers_url": "https://api.github.com/users/LooMaclin/followers", "following_url": "https://api.github.com/users/LooMaclin/following{/other_user}", "gists_url": "https://api.github.com/users/LooMaclin/gists{/gist_id}", "starred_url": "https://api.github.com/users/LooMaclin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LooMaclin/subscriptions", "organizations_url": "https://api.github.com/users/LooMaclin/orgs", "repos_url": "https://api.github.com/users/LooMaclin/repos", "events_url": "https://api.github.com/users/LooMaclin/events{/privacy}", "received_events_url": "https://api.github.com/users/LooMaclin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LooMaclin", "id": 10957765, "node_id": "MDQ6VXNlcjEwOTU3NzY1", "avatar_url": "https://avatars.githubusercontent.com/u/10957765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LooMaclin", "html_url": "https://github.com/LooMaclin", "followers_url": "https://api.github.com/users/LooMaclin/followers", "following_url": "https://api.github.com/users/LooMaclin/following{/other_user}", "gists_url": "https://api.github.com/users/LooMaclin/gists{/gist_id}", "starred_url": "https://api.github.com/users/LooMaclin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LooMaclin/subscriptions", "organizations_url": "https://api.github.com/users/LooMaclin/orgs", "repos_url": "https://api.github.com/users/LooMaclin/repos", "events_url": "https://api.github.com/users/LooMaclin/events{/privacy}", "received_events_url": "https://api.github.com/users/LooMaclin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b4bc6974a16df46e5d50a1191c124fc8c1f56ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b4bc6974a16df46e5d50a1191c124fc8c1f56ae", "html_url": "https://github.com/rust-lang/rust/commit/7b4bc6974a16df46e5d50a1191c124fc8c1f56ae"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "50f5da77c0fb619b1aa1b5f66972c86ce2927336", "filename": "src/librustc/mir/interpret/allocation.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/705d75ef1aa20c124975786cf1ad9764a82b12ef/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/705d75ef1aa20c124975786cf1ad9764a82b12ef/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs?ref=705d75ef1aa20c124975786cf1ad9764a82b12ef", "patch": "@@ -353,7 +353,8 @@ impl<'tcx, Tag: Copy, Extra> Allocation<Tag, Extra> {\n         // FIXME: Working around https://github.com/rust-lang/rust/issues/56209\n         where Extra: AllocationExtra<Tag, MemoryExtra>\n     {\n-        let bytes = self.get_bytes_mut(cx, ptr, Size::from_bytes(src.len() as u64), CheckInAllocMsg::WriteBytes)?;\n+        let bytes = self.get_bytes_mut(cx, ptr, Size::from_bytes(src.len() as u64),\n+                                       CheckInAllocMsg::WriteBytes)?;\n         bytes.clone_from_slice(src);\n         Ok(())\n     }"}, {"sha": "561ac207b6bcba53569835c637dd6781392a1289", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/705d75ef1aa20c124975786cf1ad9764a82b12ef/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/705d75ef1aa20c124975786cf1ad9764a82b12ef/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=705d75ef1aa20c124975786cf1ad9764a82b12ef", "patch": "@@ -1418,7 +1418,8 @@ fn slice_pat_covered_by_const<'tcx>(\n                 return Ok(false);\n             }\n             let n = n.assert_usize(tcx).unwrap();\n-            alloc.get_bytes(&tcx, ptr, Size::from_bytes(n), CheckInAllocMsg::SlicePatCoveredByConst).unwrap()\n+            alloc.get_bytes(&tcx, ptr, Size::from_bytes(n),\n+                            CheckInAllocMsg::SlicePatCoveredByConst).unwrap()\n         },\n         // a slice fat pointer to a zero length slice\n         (ConstValue::Slice(Scalar::Bits { .. }, 0), ty::Slice(t)) => {"}, {"sha": "7529ec0aee59c9ca966e42f7b38f93e4ce4b358d", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/705d75ef1aa20c124975786cf1ad9764a82b12ef/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/705d75ef1aa20c124975786cf1ad9764a82b12ef/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=705d75ef1aa20c124975786cf1ad9764a82b12ef", "patch": "@@ -667,7 +667,8 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> InterpretCx<'a, 'mir, 'tcx, M>\n                     ScalarMaybeUndef::Scalar(Scalar::Ptr(ptr)) => {\n                         // The niche must be just 0 (which an inbounds pointer value never is)\n                         let ptr_valid = niche_start == 0 && variants_start == variants_end &&\n-                            self.memory.check_bounds_ptr(ptr, CheckInAllocMsg::ReadDiscriminant).is_ok();\n+                            self.memory.check_bounds_ptr(ptr,\n+                                                         CheckInAllocMsg::ReadDiscriminant).is_ok();\n                         if !ptr_valid {\n                             return err!(InvalidDiscriminant(raw_discr.erase_tag()));\n                         }"}]}