{"sha": "d4bdcdb1ec1c166c5ba67459511e471c4ad2a0ab", "node_id": "C_kwDOAAsO6NoAKGQ0YmRjZGIxZWMxYzE2NmM1YmE2NzQ1OTUxMWU0NzFjNGFkMmEwYWI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-31T08:20:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-31T08:20:27Z"}, "message": "Rollup merge of #89951 - ojeda:stable-unwrap_unchecked, r=dtolnay\n\nStabilize `option_result_unwrap_unchecked`\n\nCloses https://github.com/rust-lang/rust/issues/81383.\n\nStabilization report: https://github.com/rust-lang/rust/issues/81383#issuecomment-944498212.\n\n```@rustbot``` label +A-option-result +T-libs-api", "tree": {"sha": "d1bd8ba52866ab0b335f7b8c44cec127ac504b1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1bd8ba52866ab0b335f7b8c44cec127ac504b1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4bdcdb1ec1c166c5ba67459511e471c4ad2a0ab", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhflHLCRBK7hj4Ov3rIwAAkHUIAFLvwJ1J1bdeMt1qjE818iXx\nKXSUfWB17Qrg4qKDLSRuvQkBBioZq55jS1ofwcfPBzeZ2i/1LgDUB2Jf/VIzi4pt\n7B8Xw3Wzm1C/q0I/UA98wtUhJxZhQK+QrqNZJawAhWeCNUpbnah5LVmdnSKOsvW5\nRbTxYH//HaqnCkr2Frn2a5etLzEwHCvyPjqGnMNnnTskjWBJeEN7BC9W4kPYwmw9\nckTkYNNTbDUqvaTs1qn/AvPe/GEgITrjPoDQPUis4+S71rWjnyIGoUHRU2QzFGYB\nsdRGIG1GFODZpjM/lI8pAvjE2tz9FHm12vd8XWwb0q5Wiwwr6iIM7OWYUR3gC/c=\n=bFUq\n-----END PGP SIGNATURE-----\n", "payload": "tree d1bd8ba52866ab0b335f7b8c44cec127ac504b1c\nparent 95750ae4394b4575df24e2d1484a823ca2988231\nparent 63d788257562ecac2614005fea0c9a8aece1ec37\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1635668427 +0100\ncommitter GitHub <noreply@github.com> 1635668427 +0100\n\nRollup merge of #89951 - ojeda:stable-unwrap_unchecked, r=dtolnay\n\nStabilize `option_result_unwrap_unchecked`\n\nCloses https://github.com/rust-lang/rust/issues/81383.\n\nStabilization report: https://github.com/rust-lang/rust/issues/81383#issuecomment-944498212.\n\n```@rustbot``` label +A-option-result +T-libs-api\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4bdcdb1ec1c166c5ba67459511e471c4ad2a0ab", "html_url": "https://github.com/rust-lang/rust/commit/d4bdcdb1ec1c166c5ba67459511e471c4ad2a0ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4bdcdb1ec1c166c5ba67459511e471c4ad2a0ab/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95750ae4394b4575df24e2d1484a823ca2988231", "url": "https://api.github.com/repos/rust-lang/rust/commits/95750ae4394b4575df24e2d1484a823ca2988231", "html_url": "https://github.com/rust-lang/rust/commit/95750ae4394b4575df24e2d1484a823ca2988231"}, {"sha": "63d788257562ecac2614005fea0c9a8aece1ec37", "url": "https://api.github.com/repos/rust-lang/rust/commits/63d788257562ecac2614005fea0c9a8aece1ec37", "html_url": "https://github.com/rust-lang/rust/commit/63d788257562ecac2614005fea0c9a8aece1ec37"}], "stats": {"total": 14, "additions": 3, "deletions": 11}, "files": [{"sha": "34d2cfc8e2c5b778c200ccbd661173d192028ded", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d4bdcdb1ec1c166c5ba67459511e471c4ad2a0ab/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bdcdb1ec1c166c5ba67459511e471c4ad2a0ab/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=d4bdcdb1ec1c166c5ba67459511e471c4ad2a0ab", "patch": "@@ -112,7 +112,6 @@\n #![feature(maybe_uninit_slice)]\n #![cfg_attr(test, feature(new_uninit))]\n #![feature(nonnull_slice_from_raw_parts)]\n-#![feature(option_result_unwrap_unchecked)]\n #![feature(pattern)]\n #![feature(ptr_internals)]\n #![feature(receiver_trait)]"}, {"sha": "baf9948857bbe1e0c2d96eeaad6827e0727bebcd", "filename": "library/core/src/option.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4bdcdb1ec1c166c5ba67459511e471c4ad2a0ab/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bdcdb1ec1c166c5ba67459511e471c4ad2a0ab/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=d4bdcdb1ec1c166c5ba67459511e471c4ad2a0ab", "patch": "@@ -800,19 +800,17 @@ impl<T> Option<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(option_result_unwrap_unchecked)]\n     /// let x = Some(\"air\");\n     /// assert_eq!(unsafe { x.unwrap_unchecked() }, \"air\");\n     /// ```\n     ///\n     /// ```no_run\n-    /// #![feature(option_result_unwrap_unchecked)]\n     /// let x: Option<&str> = None;\n     /// assert_eq!(unsafe { x.unwrap_unchecked() }, \"air\"); // Undefined behavior!\n     /// ```\n     #[inline]\n     #[track_caller]\n-    #[unstable(feature = \"option_result_unwrap_unchecked\", reason = \"newly added\", issue = \"81383\")]\n+    #[stable(feature = \"option_result_unwrap_unchecked\", since = \"1.58.0\")]\n     pub unsafe fn unwrap_unchecked(self) -> T {\n         debug_assert!(self.is_some());\n         match self {"}, {"sha": "8fec2e928aae2505b8154d91c813dec46c5e627d", "filename": "library/core/src/result.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d4bdcdb1ec1c166c5ba67459511e471c4ad2a0ab/library%2Fcore%2Fsrc%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bdcdb1ec1c166c5ba67459511e471c4ad2a0ab/library%2Fcore%2Fsrc%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fresult.rs?ref=d4bdcdb1ec1c166c5ba67459511e471c4ad2a0ab", "patch": "@@ -1096,19 +1096,17 @@ impl<T, E> Result<T, E> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(option_result_unwrap_unchecked)]\n     /// let x: Result<u32, &str> = Ok(2);\n     /// assert_eq!(unsafe { x.unwrap_unchecked() }, 2);\n     /// ```\n     ///\n     /// ```no_run\n-    /// #![feature(option_result_unwrap_unchecked)]\n     /// let x: Result<u32, &str> = Err(\"emergency failure\");\n     /// unsafe { x.unwrap_unchecked(); } // Undefined behavior!\n     /// ```\n     #[inline]\n     #[track_caller]\n-    #[unstable(feature = \"option_result_unwrap_unchecked\", reason = \"newly added\", issue = \"81383\")]\n+    #[stable(feature = \"option_result_unwrap_unchecked\", since = \"1.58.0\")]\n     pub unsafe fn unwrap_unchecked(self) -> T {\n         debug_assert!(self.is_ok());\n         match self {\n@@ -1130,19 +1128,17 @@ impl<T, E> Result<T, E> {\n     /// # Examples\n     ///\n     /// ```no_run\n-    /// #![feature(option_result_unwrap_unchecked)]\n     /// let x: Result<u32, &str> = Ok(2);\n     /// unsafe { x.unwrap_err_unchecked() }; // Undefined behavior!\n     /// ```\n     ///\n     /// ```\n-    /// #![feature(option_result_unwrap_unchecked)]\n     /// let x: Result<u32, &str> = Err(\"emergency failure\");\n     /// assert_eq!(unsafe { x.unwrap_err_unchecked() }, \"emergency failure\");\n     /// ```\n     #[inline]\n     #[track_caller]\n-    #[unstable(feature = \"option_result_unwrap_unchecked\", reason = \"newly added\", issue = \"81383\")]\n+    #[stable(feature = \"option_result_unwrap_unchecked\", since = \"1.58.0\")]\n     pub unsafe fn unwrap_err_unchecked(self) -> E {\n         debug_assert!(self.is_err());\n         match self {"}, {"sha": "ce40bac3f31a515d300a0d2bfb540f1ad8c573ea", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d4bdcdb1ec1c166c5ba67459511e471c4ad2a0ab/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bdcdb1ec1c166c5ba67459511e471c4ad2a0ab/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=d4bdcdb1ec1c166c5ba67459511e471c4ad2a0ab", "patch": "@@ -59,7 +59,6 @@\n #![feature(const_raw_ptr_deref)]\n #![feature(never_type)]\n #![feature(unwrap_infallible)]\n-#![feature(option_result_unwrap_unchecked)]\n #![feature(result_into_ok_or_err)]\n #![feature(ptr_metadata)]\n #![feature(once_cell)]"}]}