{"sha": "b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwYWQ0OTJlM2Q2OWNlOWJjNWVkYmI0ZTM0ZTBjODcxZDQwZTdkOGY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-11-13T15:25:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-13T15:25:26Z"}, "message": "Merge #6519\n\n6519: Add \"Open Cargo.toml\" action r=matklad a=p3achyjr\n\n## What is it?\r\n\r\nThis adds an \"open cargo.toml\" action from the vscode shell, resolves #6462 \r\n\r\n## Test\r\n\r\nRan ```cargo xtask install --server``` and ```cargo xtask install --client```, then ```Developer: Reload Window```.\r\n\r\n![image](https://user-images.githubusercontent.com/8763808/98614382-2a578f00-22ad-11eb-9811-4a72a54ff6fb.png)\r\n\r\nWhen clicked:\r\n\r\n![image](https://user-images.githubusercontent.com/8763808/98618176-77d7fa00-22b5-11eb-8788-35256542f3a6.png)\r\n\n\nCo-authored-by: Anatol Liu <axlui@anatols-mbp.lan>", "tree": {"sha": "5ef4edd53953b6a0d7a21dfb85041f02ace945ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ef4edd53953b6a0d7a21dfb85041f02ace945ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfrqVmCRBK7hj4Ov3rIwAAdHIIAE8ARtKOZVa+5LPf0CkKNYtH\n8paeFcjzaHWJwF7ul7+IFttUgdW8aeUPX8Il67K2B36R/x7R+HbdRDVwYwnoDRaM\n1OGuZKWZn0Xonfv0zoUJPE26r7M4SlsZPkZKZzTHorDvgBIA+bmwQg/QpyPrDjp6\n+s68qN1ShLxhEH/iFHWnAhw7llggCDdyXtC0E1vxTxFJCDNUFSF/ySWfiXHLFpd6\nvR5zzP8lRTf397Wedmuk+9xS/gQ5Ee58PzDpcGnXBzPori1ctO5YAr7fqmIURK5a\nxTzjNN6+k3s+DNNoEOgUj4lhdGZfOaOmceGeagfqbZZmkvvt5Jpb1ZlZYeo7oNk=\n=HZCk\n-----END PGP SIGNATURE-----\n", "payload": "tree 5ef4edd53953b6a0d7a21dfb85041f02ace945ff\nparent 475a296f6fff0ccebb7a5a6eb71decf7cd0ba39d\nparent b1b7727e046b4b25dcca034ee767a7fc3238409d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1605281126 +0000\ncommitter GitHub <noreply@github.com> 1605281126 +0000\n\nMerge #6519\n\n6519: Add \"Open Cargo.toml\" action r=matklad a=p3achyjr\n\n## What is it?\r\n\r\nThis adds an \"open cargo.toml\" action from the vscode shell, resolves #6462 \r\n\r\n## Test\r\n\r\nRan ```cargo xtask install --server``` and ```cargo xtask install --client```, then ```Developer: Reload Window```.\r\n\r\n![image](https://user-images.githubusercontent.com/8763808/98614382-2a578f00-22ad-11eb-9811-4a72a54ff6fb.png)\r\n\r\nWhen clicked:\r\n\r\n![image](https://user-images.githubusercontent.com/8763808/98618176-77d7fa00-22b5-11eb-8788-35256542f3a6.png)\r\n\n\nCo-authored-by: Anatol Liu <axlui@anatols-mbp.lan>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f", "html_url": "https://github.com/rust-lang/rust/commit/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "475a296f6fff0ccebb7a5a6eb71decf7cd0ba39d", "url": "https://api.github.com/repos/rust-lang/rust/commits/475a296f6fff0ccebb7a5a6eb71decf7cd0ba39d", "html_url": "https://github.com/rust-lang/rust/commit/475a296f6fff0ccebb7a5a6eb71decf7cd0ba39d"}, {"sha": "b1b7727e046b4b25dcca034ee767a7fc3238409d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1b7727e046b4b25dcca034ee767a7fc3238409d", "html_url": "https://github.com/rust-lang/rust/commit/b1b7727e046b4b25dcca034ee767a7fc3238409d"}], "stats": {"total": 113, "additions": 105, "deletions": 8}, "files": [{"sha": "7e097c01585091c4d297061cfa367efc456955ed", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f", "patch": "@@ -10,3 +10,4 @@ crates/*/target\n generated_assists.adoc\n generated_features.adoc\n generated_diagnostic.adoc\n+.DS_Store"}, {"sha": "a566736aa9e5aab4c0493be03fee3ac09047de3d", "filename": "crates/ide/.DS_Store", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/crates%2Fide%2F.DS_Store", "raw_url": "https://github.com/rust-lang/rust/raw/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/crates%2Fide%2F.DS_Store", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2F.DS_Store?ref=b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f"}, {"sha": "372180ab58c11493b005e9aa80d177a02de8575d", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f", "patch": "@@ -398,13 +398,10 @@ impl Config {\n             }\n \n             if let Some(code_action) = &doc_caps.code_action {\n-                match (code_action.data_support, &code_action.resolve_support) {\n-                    (Some(true), Some(resolve_support)) => {\n-                        if resolve_support.properties.iter().any(|it| it == \"edit\") {\n-                            self.client_caps.code_action_resolve = true;\n-                        }\n+                if let Some(resolve_support) = &code_action.resolve_support {\n+                    if resolve_support.properties.iter().any(|it| it == \"edit\") {\n+                        self.client_caps.code_action_resolve = true;\n                     }\n-                    _ => (),\n                 }\n             }\n         }"}, {"sha": "782797e85f7fb7c82d6aacc5a81c90354346f6b0", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f", "patch": "@@ -1322,6 +1322,28 @@ pub(crate) fn handle_open_docs(\n     Ok(remote.and_then(|remote| Url::parse(&remote).ok()))\n }\n \n+pub(crate) fn handle_open_cargo_toml(\n+    snap: GlobalStateSnapshot,\n+    params: lsp_ext::OpenCargoTomlParams,\n+) -> Result<Option<lsp_types::GotoDefinitionResponse>> {\n+    let _p = profile::span(\"handle_open_cargo_toml\");\n+    let file_id = from_proto::file_id(&snap, &params.text_document.uri)?;\n+    let maybe_cargo_spec = CargoTargetSpec::for_file(&snap, file_id)?;\n+    if maybe_cargo_spec.is_none() {\n+        return Ok(None);\n+    }\n+\n+    let cargo_spec = maybe_cargo_spec.unwrap();\n+    let cargo_toml_path = cargo_spec.workspace_root.join(\"Cargo.toml\");\n+    if !cargo_toml_path.exists() {\n+        return Ok(None);\n+    }\n+    let cargo_toml_url = to_proto::url_from_abs_path(&cargo_toml_path);\n+    let cargo_toml_location = Location::new(cargo_toml_url, Range::default());\n+    let res = lsp_types::GotoDefinitionResponse::from(cargo_toml_location);\n+    Ok(Some(res))\n+}\n+\n fn implementation_title(count: usize) -> String {\n     if count == 1 {\n         \"1 implementation\".into()"}, {"sha": "a5c65fa3e8baaf2ddc82f3d0fe969d42f9fbc623", "filename": "crates/rust-analyzer/src/lsp_ext.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs?ref=b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f", "patch": "@@ -354,3 +354,17 @@ impl Request for ExternalDocs {\n     type Result = Option<lsp_types::Url>;\n     const METHOD: &'static str = \"experimental/externalDocs\";\n }\n+\n+pub enum OpenCargoToml {}\n+\n+impl Request for OpenCargoToml {\n+    type Params = OpenCargoTomlParams;\n+    type Result = Option<lsp_types::GotoDefinitionResponse>;\n+    const METHOD: &'static str = \"experimental/openCargoToml\";\n+}\n+\n+#[derive(Serialize, Deserialize, Debug)]\n+#[serde(rename_all = \"camelCase\")]\n+pub struct OpenCargoTomlParams {\n+    pub text_document: TextDocumentIdentifier,\n+}"}, {"sha": "68a53bbcb969f0ba5f6a85dfaa19697d121c1ea0", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f", "patch": "@@ -438,6 +438,7 @@ impl GlobalState {\n             .on::<lsp_ext::CodeActionResolveRequest>(handlers::handle_code_action_resolve)\n             .on::<lsp_ext::HoverRequest>(handlers::handle_hover)\n             .on::<lsp_ext::ExternalDocs>(handlers::handle_open_docs)\n+            .on::<lsp_ext::OpenCargoToml>(handlers::handle_open_cargo_toml)\n             .on::<lsp_types::request::OnTypeFormatting>(handlers::handle_on_type_formatting)\n             .on::<lsp_types::request::DocumentSymbolRequest>(handlers::handle_document_symbol)\n             .on::<lsp_types::request::WorkspaceSymbol>(handlers::handle_workspace_symbol)"}, {"sha": "db9727bee42aeeb3a543d378da897e79d334b415", "filename": "docs/dev/lsp-extensions.md", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/docs%2Fdev%2Flsp-extensions.md", "raw_url": "https://github.com/rust-lang/rust/raw/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/docs%2Fdev%2Flsp-extensions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Flsp-extensions.md?ref=b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f", "patch": "@@ -1,8 +1,8 @@\n <!---\n-lsp_ext.rs hash: 4f86fb54e4b2870e\n+lsp_ext.rs hash: 9d5daed5b25dc4f6\n \n If you need to change the above hash to make the test pass, please check if you\n-need to adjust this doc as well and ping this issue:\n+need to adjust this doc as well and ping this  issue:\n \n   https://github.com/rust-analyzer/rust-analyzer/issues/4604\n \n@@ -537,3 +537,28 @@ Such actions on the client side are appended to a hover bottom as command links:\n   +-----------------------------+\n   ...\n ```\n+\n+## Open Cargo.toml\n+\n+**Issue:** https://github.com/rust-analyzer/rust-analyzer/issues/6462\n+\n+This request is sent from client to server to open the current project's Cargo.toml\n+\n+**Method:** `experimental/openCargoToml`\n+\n+**Request:** `OpenCargoTomlParams`\n+\n+**Response:** `Location | null`\n+\n+\n+### Example\n+\n+```rust\n+// Cargo.toml\n+[package]\n+// src/main.rs\n+\n+/* cursor here*/\n+```\n+\n+`experimental/openCargoToml` returns a single `Link` to the start of the `[package]` keyword."}, {"sha": "3768679fe9b08219622abc0df943b14226259be9", "filename": "editors/code/package.json", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f", "patch": "@@ -187,6 +187,11 @@\n                 \"command\": \"rust-analyzer.openDocs\",\n                 \"title\": \"Open docs under cursor\",\n                 \"category\": \"Rust Analyzer\"\n+            },\n+            {\n+                \"command\": \"rust-analyzer.openCargoToml\",\n+                \"title\": \"Open Cargo.toml\",\n+                \"category\": \"Rust Analyzer\"\n             }\n         ],\n         \"keybindings\": [\n@@ -1065,6 +1070,10 @@\n                 {\n                     \"command\": \"rust-analyzer.openDocs\",\n                     \"when\": \"inRustProject\"\n+                },\n+                {\n+                    \"command\": \"rust-analyzer.openCargoToml\",\n+                    \"when\": \"inRustProject\"\n                 }\n             ]\n         }"}, {"sha": "92bc4d7f7239506d34c5d99d02e6520185385eb0", "filename": "editors/code/src/commands.ts", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/editors%2Fcode%2Fsrc%2Fcommands.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/editors%2Fcode%2Fsrc%2Fcommands.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands.ts?ref=b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f", "patch": "@@ -188,6 +188,27 @@ export function parentModule(ctx: Ctx): Cmd {\n     };\n }\n \n+export function openCargoToml(ctx: Ctx): Cmd {\n+    return async () => {\n+        const editor = ctx.activeRustEditor;\n+        const client = ctx.client;\n+        if (!editor || !client) return;\n+\n+        const response = await client.sendRequest(ra.openCargoToml, {\n+            textDocument: ctx.client.code2ProtocolConverter.asTextDocumentIdentifier(editor.document),\n+        });\n+        if (!response) return;\n+\n+        const uri = client.protocol2CodeConverter.asUri(response.uri);\n+        const range = client.protocol2CodeConverter.asRange(response.range);\n+\n+        const doc = await vscode.workspace.openTextDocument(uri);\n+        const e = await vscode.window.showTextDocument(doc);\n+        e.selection = new vscode.Selection(range.start, range.start);\n+        e.revealRange(range, vscode.TextEditorRevealType.InCenter);\n+    };\n+}\n+\n export function ssr(ctx: Ctx): Cmd {\n     return async () => {\n         const editor = vscode.window.activeTextEditor;"}, {"sha": "5e877ce65114a9897165b06b0ebfe2a472f6e796", "filename": "editors/code/src/lsp_ext.ts", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Flsp_ext.ts?ref=b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f", "patch": "@@ -114,3 +114,9 @@ export interface CommandLinkGroup {\n }\n \n export const openDocs = new lc.RequestType<lc.TextDocumentPositionParams, string | void, void>('experimental/externalDocs');\n+\n+export const openCargoToml = new lc.RequestType<OpenCargoTomlParams, lc.Location, void>(\"experimental/openCargoToml\");\n+\n+export interface OpenCargoTomlParams {\n+    textDocument: lc.TextDocumentIdentifier;\n+}"}, {"sha": "2f3dde8acd6dedc51fc58a6560cfdae304156783", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=b0ad492e3d69ce9bc5edbb4e34e0c871d40e7d8f", "patch": "@@ -111,6 +111,7 @@ async function tryActivate(context: vscode.ExtensionContext) {\n     ctx.registerCommand('debug', commands.debug);\n     ctx.registerCommand('newDebugConfig', commands.newDebugConfig);\n     ctx.registerCommand('openDocs', commands.openDocs);\n+    ctx.registerCommand('openCargoToml', commands.openCargoToml);\n \n     defaultOnEnter.dispose();\n     ctx.registerCommand('onEnter', commands.onEnter);"}]}