{"sha": "f99d6cab43f787f8887a488b21ba3cd9f8ab9de4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5OWQ2Y2FiNDNmNzg3Zjg4ODdhNDg4YjIxYmEzY2Q5ZjhhYjlkZTQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-01-12T01:59:35Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-01-12T01:59:35Z"}, "message": "Long lines", "tree": {"sha": "c7acd86f05ebf1fd58c6f4d301c6251c6752deab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7acd86f05ebf1fd58c6f4d301c6251c6752deab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f99d6cab43f787f8887a488b21ba3cd9f8ab9de4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f99d6cab43f787f8887a488b21ba3cd9f8ab9de4", "html_url": "https://github.com/rust-lang/rust/commit/f99d6cab43f787f8887a488b21ba3cd9f8ab9de4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f99d6cab43f787f8887a488b21ba3cd9f8ab9de4/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "063a7ad4814967e0770fcb03be28006f7856bb75", "url": "https://api.github.com/repos/rust-lang/rust/commits/063a7ad4814967e0770fcb03be28006f7856bb75", "html_url": "https://github.com/rust-lang/rust/commit/063a7ad4814967e0770fcb03be28006f7856bb75"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "a88a11969359d20d16d63929444cfb3aafbc98cf", "filename": "src/libcore/private.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f99d6cab43f787f8887a488b21ba3cd9f8ab9de4/src%2Flibcore%2Fprivate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f99d6cab43f787f8887a488b21ba3cd9f8ab9de4/src%2Flibcore%2Fprivate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fprivate.rs?ref=f99d6cab43f787f8887a488b21ba3cd9f8ab9de4", "patch": "@@ -53,9 +53,12 @@ extern mod rusti {\n type raw_thread = libc::c_void;\n \n /**\n-Start a new thread outside of the current runtime context and wait for it to terminate.\n \n-The executing thread has no access to a task pointer and will be using a normal large stack.\n+Start a new thread outside of the current runtime context and wait\n+for it to terminate.\n+\n+The executing thread has no access to a task pointer and will be using\n+a normal large stack.\n */\n pub unsafe fn run_in_bare_thread(f: ~fn()) {\n     let (port, chan) = pipes::stream();"}]}