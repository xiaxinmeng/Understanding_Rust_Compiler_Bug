{"sha": "9743757113afbdaeca8a06e38f06a2ea4329b75e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3NDM3NTcxMTNhZmJkYWVjYThhMDZlMzhmMDZhMmVhNDMyOWI3NWU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-02T05:18:41Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-02T05:36:24Z"}, "message": "syntax: Support dropping argument list from for/do", "tree": {"sha": "f131e772902b9fc6089fab560004aa6d927fb8a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f131e772902b9fc6089fab560004aa6d927fb8a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9743757113afbdaeca8a06e38f06a2ea4329b75e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9743757113afbdaeca8a06e38f06a2ea4329b75e", "html_url": "https://github.com/rust-lang/rust/commit/9743757113afbdaeca8a06e38f06a2ea4329b75e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9743757113afbdaeca8a06e38f06a2ea4329b75e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa6a446e6cd39ff3522a03fa9de7302e069408a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa6a446e6cd39ff3522a03fa9de7302e069408a7", "html_url": "https://github.com/rust-lang/rust/commit/fa6a446e6cd39ff3522a03fa9de7302e069408a7"}], "stats": {"total": 54, "additions": 45, "deletions": 9}, "files": [{"sha": "0492ab273468e23727b8a621b9b558a862edf5dc", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 34, "deletions": 8, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/9743757113afbdaeca8a06e38f06a2ea4329b75e/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9743757113afbdaeca8a06e38f06a2ea4329b75e/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=9743757113afbdaeca8a06e38f06a2ea4329b75e", "patch": "@@ -1357,21 +1357,47 @@ class parser {\n \n     // `|args| { ... }` like in `do` expressions\n     fn parse_lambda_block_expr() -> @expr {\n-        self.parse_lambda_expr_(|| {\n-            let blk = self.parse_block();\n-            self.mk_expr(blk.span.lo, blk.span.hi, expr_block(blk))\n-        })\n+        self.parse_lambda_expr_(\n+            || {\n+                alt self.token {\n+                  token::BINOP(token::OR) | token::OROR {\n+                    self.parse_fn_block_decl()\n+                  }\n+                  _ {\n+                    // No argument list - `do foo {`\n+                    ({\n+                        {\n+                            inputs: ~[],\n+                            output: @{\n+                                id: self.get_id(),\n+                                node: ty_infer,\n+                                span: self.span\n+                            },\n+                            purity: impure_fn,\n+                            cf: return_val,\n+                            constraints: ~[]\n+                        }\n+                    },\n+                    @~[])\n+                  }\n+                }\n+            },\n+            || {\n+                let blk = self.parse_block();\n+                self.mk_expr(blk.span.lo, blk.span.hi, expr_block(blk))\n+            })\n     }\n \n     // `|args| expr`\n     fn parse_lambda_expr() -> @expr {\n-        self.parse_lambda_expr_(|| self.parse_expr())\n+        self.parse_lambda_expr_(|| self.parse_fn_block_decl(),\n+                                || self.parse_expr())\n     }\n \n-    fn parse_lambda_expr_(parse_body: fn&() -> @expr) -> @expr {\n+    fn parse_lambda_expr_(parse_decl: fn&() -> (fn_decl, capture_clause),\n+                          parse_body: fn&() -> @expr) -> @expr {\n         let lo = self.last_span.lo;\n-        // New style lambdas `|args| expr`\n-        let (decl, captures) = self.parse_fn_block_decl();\n+        let (decl, captures) = parse_decl();\n         let body = parse_body();\n         let fakeblock = {view_items: ~[], stmts: ~[], expr: some(body),\n                          id: self.get_id(), rules: default_blk};"}, {"sha": "49ffcd86a5f59bc97a889bb485007361691ccbc8", "filename": "src/test/compile-fail/do1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9743757113afbdaeca8a06e38f06a2ea4329b75e/src%2Ftest%2Fcompile-fail%2Fdo1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9743757113afbdaeca8a06e38f06a2ea4329b75e/src%2Ftest%2Fcompile-fail%2Fdo1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdo1.rs?ref=9743757113afbdaeca8a06e38f06a2ea4329b75e", "patch": "@@ -1,3 +1,3 @@\n fn main() {\n-    let x = do y; //! ERROR: expecting '|' but found\n+    let x = do y; //! ERROR: expecting '{' but found\n }"}, {"sha": "d3f860e16ece79144113ca8fddef7d796c7b198c", "filename": "src/test/run-pass/do-for-no-args.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9743757113afbdaeca8a06e38f06a2ea4329b75e/src%2Ftest%2Frun-pass%2Fdo-for-no-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9743757113afbdaeca8a06e38f06a2ea4329b75e/src%2Ftest%2Frun-pass%2Fdo-for-no-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdo-for-no-args.rs?ref=9743757113afbdaeca8a06e38f06a2ea4329b75e", "patch": "@@ -0,0 +1,10 @@\n+// Testing that we can drop the || in for/do exprs\n+\n+fn f(f: fn@() -> bool) { }\n+\n+fn d(f: fn@()) { }\n+\n+fn main() {\n+    for f { }\n+    do d { }\n+}\n\\ No newline at end of file"}]}