{"sha": "5dfed41812b3904c1f50bd11aa7047b29ee9f47a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkZmVkNDE4MTJiMzkwNGMxZjUwYmQxMWFhNzA0N2IyOWVlOWY0N2E=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-03-24T22:48:37Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-03-26T08:40:51Z"}, "message": "Simplify generics on try_start.", "tree": {"sha": "46a685d8fdb0d3dfe83302be99509f1419588807", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46a685d8fdb0d3dfe83302be99509f1419588807"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5dfed41812b3904c1f50bd11aa7047b29ee9f47a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5dfed41812b3904c1f50bd11aa7047b29ee9f47a", "html_url": "https://github.com/rust-lang/rust/commit/5dfed41812b3904c1f50bd11aa7047b29ee9f47a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5dfed41812b3904c1f50bd11aa7047b29ee9f47a/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa06cfd25b2f53d01eb92605caac8d39cbb57ab0", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa06cfd25b2f53d01eb92605caac8d39cbb57ab0", "html_url": "https://github.com/rust-lang/rust/commit/fa06cfd25b2f53d01eb92605caac8d39cbb57ab0"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "e1b86e55ce8cfa7abd273488e06640823d1a9d6a", "filename": "src/librustc_query_system/query/plumbing.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5dfed41812b3904c1f50bd11aa7047b29ee9f47a/src%2Flibrustc_query_system%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dfed41812b3904c1f50bd11aa7047b29ee9f47a/src%2Flibrustc_query_system%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2Fquery%2Fplumbing.rs?ref=5dfed41812b3904c1f50bd11aa7047b29ee9f47a", "patch": "@@ -168,16 +168,15 @@ where\n     /// This function is inlined because that results in a noticeable speed-up\n     /// for some compile-time benchmarks.\n     #[inline(always)]\n-    fn try_start<'a, 'b, Q, K>(\n+    fn try_start<'a, 'b, Q>(\n         tcx: CTX,\n         span: Span,\n         key: &C::Key,\n         mut lookup: QueryLookup<'a, CTX, C::Key, C::Sharded>,\n     ) -> TryGetJob<'b, CTX, C>\n     where\n-        K: DepKind,\n         Q: QueryDescription<CTX, Key = C::Key, Value = C::Value, Cache = C>,\n-        CTX: QueryContext<DepKind = K>,\n+        CTX: QueryContext,\n     {\n         let lock = &mut *lookup.lock;\n \n@@ -391,7 +390,7 @@ where\n     Q: QueryDescription<CTX>,\n     CTX: QueryContext,\n {\n-    let job = match JobOwner::try_start::<Q, _>(tcx, span, &key, lookup) {\n+    let job = match JobOwner::try_start::<Q>(tcx, span, &key, lookup) {\n         TryGetJob::NotYetStarted(job) => job,\n         TryGetJob::Cycle(result) => return result,\n         #[cfg(parallel_compiler)]\n@@ -697,7 +696,7 @@ where\n                 // Cache hit, do nothing\n             },\n             |key, lookup| {\n-                let job = match JobOwner::try_start::<Q, _>(self, span, &key, lookup) {\n+                let job = match JobOwner::try_start::<Q>(self, span, &key, lookup) {\n                     TryGetJob::NotYetStarted(job) => job,\n                     TryGetJob::Cycle(_) => return,\n                     #[cfg(parallel_compiler)]"}]}