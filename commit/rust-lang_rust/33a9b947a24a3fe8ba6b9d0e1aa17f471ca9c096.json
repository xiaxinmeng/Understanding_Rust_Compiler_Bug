{"sha": "33a9b947a24a3fe8ba6b9d0e1aa17f471ca9c096", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzYTliOTQ3YTI0YTNmZThiYTZiOWQwZTFhYTE3ZjQ3MWNhOWMwOTY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-03-31T15:00:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-31T15:00:50Z"}, "message": "Merge #3791\n\n3791: Revert accidental package.json changes r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "2e04756d5cb9c365ae165e02d80c5bcb1bc12623", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e04756d5cb9c365ae165e02d80c5bcb1bc12623"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33a9b947a24a3fe8ba6b9d0e1aa17f471ca9c096", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeg1siCRBK7hj4Ov3rIwAAdHIIAI+usWS0RfiwliOnBSTG3hHx\nvaDkRLS1m1aPoZAw35R4+SA8XdVI2CqqwgXPle4YUyAaUpEfN8Gy3k89Q37He2gw\nCJ2jTk0S61+ZtIWAvktFaCbxt517RCyGlshlzcqcNVV3Q1IafARtsdEn/XXkEOIU\nMooa5AJ5B1r2nSlE/XBhgrsWnTDnaaozK4LRlPsua0oU1N4g2H9imTLRWAqnkD80\nYj8Yszo3rBHqBxDWGkB/YoPQDVbFmQwkreSgi7aRBRGwrbhEgdp/blE4VVkKmuIs\nrmKU0npyXMeptOXQSwKFUfQ5BEh2jEPa2M3MiVYLAck5M0yjz2Ffknh/Kf37iL8=\n=fiCY\n-----END PGP SIGNATURE-----\n", "payload": "tree 2e04756d5cb9c365ae165e02d80c5bcb1bc12623\nparent 7a546490ecb93b9da1cd888086f00a69ebd8d0aa\nparent 6343ddd00945b7977ca71c645432224ffc130f53\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1585666850 +0000\ncommitter GitHub <noreply@github.com> 1585666850 +0000\n\nMerge #3791\n\n3791: Revert accidental package.json changes r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33a9b947a24a3fe8ba6b9d0e1aa17f471ca9c096", "html_url": "https://github.com/rust-lang/rust/commit/33a9b947a24a3fe8ba6b9d0e1aa17f471ca9c096", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33a9b947a24a3fe8ba6b9d0e1aa17f471ca9c096/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a546490ecb93b9da1cd888086f00a69ebd8d0aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a546490ecb93b9da1cd888086f00a69ebd8d0aa", "html_url": "https://github.com/rust-lang/rust/commit/7a546490ecb93b9da1cd888086f00a69ebd8d0aa"}, {"sha": "6343ddd00945b7977ca71c645432224ffc130f53", "url": "https://api.github.com/repos/rust-lang/rust/commits/6343ddd00945b7977ca71c645432224ffc130f53", "html_url": "https://github.com/rust-lang/rust/commit/6343ddd00945b7977ca71c645432224ffc130f53"}], "stats": {"total": 50, "additions": 17, "deletions": 33}, "files": [{"sha": "ba31c4e63dd6bd9595b0b2a265f69de87d22af17", "filename": "editors/code/package.json", "status": "modified", "additions": 17, "deletions": 33, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/33a9b947a24a3fe8ba6b9d0e1aa17f471ca9c096/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/33a9b947a24a3fe8ba6b9d0e1aa17f471ca9c096/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=33a9b947a24a3fe8ba6b9d0e1aa17f471ca9c096", "patch": "@@ -261,57 +261,41 @@\n                     \"default\": [],\n                     \"description\": \"Paths to exclude from analysis\"\n                 },\n-                \"rust-analyzer.useClientWatching\": {\n-                    \"type\": \"boolean\",\n-                    \"default\": true,\n-                    \"description\": \"client provided file watching instead of notify watching.\"\n-                },\n-                \"rust-analyzer.rustfmt.extraArgs\": {\n-                    \"type\": \"array\",\n-                    \"items\": {\n-                        \"type\": \"string\"\n-                    },\n-                    \"default\": [],\n-                    \"markdownDescription\": \"Additional `cargo fmt` arguments\"\n-                },\n-                \"rust-analyzer.rustfmt.overrideCommand\": {\n+                \"rust-analyzer.rustfmtArgs\": {\n                     \"type\": \"array\",\n                     \"items\": {\n                         \"type\": \"string\"\n                     },\n                     \"default\": [],\n-                    \"markdownDescription\": \"Advanced option, fully override `cargo fmt` command line\"\n+                    \"description\": \"Additional arguments to rustfmt\"\n                 },\n-                \"rust-analyzer.checkOnSave.enable\": {\n+                \"rust-analyzer.useClientWatching\": {\n                     \"type\": \"boolean\",\n                     \"default\": true,\n-                    \"markdownDescription\": \"Run `cargo check` command for diagnostics on save\"\n-                },\n-                \"rust-analyzer.checkOnSave.cargoCommand\": {\n-                    \"type\": \"string\",\n-                    \"default\": \"check\",\n-                    \"markdownDescription\": \"Cargo command to run on save\"\n+                    \"description\": \"client provided file watching instead of notify watching.\"\n                 },\n-                \"rust-analyzer.checkOnSave.allTargets\": {\n+                \"rust-analyzer.cargo-watch.enable\": {\n                     \"type\": \"boolean\",\n                     \"default\": true,\n-                    \"markdownDescription\": \"Check all targets and tests (will be passed as `--all-targets`)\"\n+                    \"markdownDescription\": \"Run specified `cargo-watch` command for diagnostics on save\"\n                 },\n-                \"rust-analyzer.checkOnSave.extraArgs\": {\n+                \"rust-analyzer.cargo-watch.arguments\": {\n                     \"type\": \"array\",\n                     \"items\": {\n                         \"type\": \"string\"\n                     },\n-                    \"markdownDescription\": \"Additional `cargo check` arguments\",\n+                    \"markdownDescription\": \"`cargo-watch` arguments. (e.g: `--features=\\\"shumway,pdf\\\"` will run as `cargo watch -x \\\"check --features=\\\"shumway,pdf\\\"\\\"` )\",\n                     \"default\": []\n                 },\n-                \"rust-analyzer.checkOnSave.overrideCommand\": {\n-                    \"type\": \"array\",\n-                    \"items\": {\n-                        \"type\": \"string\"\n-                    },\n-                    \"default\": [],\n-                    \"markdownDescription\": \"Advanced option, fully override `cargo check` command line (this must include at least `--message-format=json`)\"\n+                \"rust-analyzer.cargo-watch.command\": {\n+                    \"type\": \"string\",\n+                    \"markdownDescription\": \"`cargo-watch` command. (e.g: `clippy` will run as `cargo watch -x clippy` )\",\n+                    \"default\": \"check\"\n+                },\n+                \"rust-analyzer.cargo-watch.allTargets\": {\n+                    \"type\": \"boolean\",\n+                    \"markdownDescription\": \"Check all targets and tests (will be passed as `--all-targets`)\",\n+                    \"default\": true\n                 },\n                 \"rust-analyzer.trace.server\": {\n                     \"type\": \"string\","}]}