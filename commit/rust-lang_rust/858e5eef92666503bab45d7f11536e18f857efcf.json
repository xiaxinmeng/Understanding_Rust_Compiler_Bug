{"sha": "858e5eef92666503bab45d7f11536e18f857efcf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1OGU1ZWVmOTI2NjY1MDNiYWI0NWQ3ZjExNTM2ZTE4Zjg1N2VmY2Y=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-26T00:10:05Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-26T00:31:40Z"}, "message": "check mutable UnsafeCell; hack for AtomicBool::get_mut", "tree": {"sha": "c2d134648eb8cf2a797b4667ac1db6617fcea1d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2d134648eb8cf2a797b4667ac1db6617fcea1d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/858e5eef92666503bab45d7f11536e18f857efcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/858e5eef92666503bab45d7f11536e18f857efcf", "html_url": "https://github.com/rust-lang/rust/commit/858e5eef92666503bab45d7f11536e18f857efcf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/858e5eef92666503bab45d7f11536e18f857efcf/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "744780e79410e02c54061fa85b981ef9fcf652ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/744780e79410e02c54061fa85b981ef9fcf652ce", "html_url": "https://github.com/rust-lang/rust/commit/744780e79410e02c54061fa85b981ef9fcf652ce"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "f49eed265c034f243972ae56be7f1c264a29994f", "filename": "src/librustc_mir/interpret/validation.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/858e5eef92666503bab45d7f11536e18f857efcf/src%2Flibrustc_mir%2Finterpret%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/858e5eef92666503bab45d7f11536e18f857efcf/src%2Flibrustc_mir%2Finterpret%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidation.rs?ref=858e5eef92666503bab45d7f11536e18f857efcf", "patch": "@@ -46,6 +46,7 @@ std::mem::swap::|\\\n std::mem::uninitialized::|\\\n std::ptr::read::|\\\n std::panicking::try::do_call::|\\\n+std::sync::atomic::AtomicBool::get_mut$|\\\n <std::vec::Vec<T>><[a-zA-Z0-9_]+>::into_boxed_slice$\\\n )\").unwrap();\n             }\n@@ -320,10 +321,8 @@ std::panicking::try::do_call::|\\\n                 Ok(())\n             }\n             TyAdt(adt, subst) => {\n-                if Some(adt.did) == self.tcx.lang_items.unsafe_cell_type() /*&& query.mutbl == MutImmutable*/ {\n+                if Some(adt.did) == self.tcx.lang_items.unsafe_cell_type() && query.mutbl == MutImmutable {\n                     // No locks for shared unsafe cells.  Also no other validation, the only field is private anyway.\n-                    // FIXME: For now we also don't acquire locks for mutable UnsafeCell, because this gets violated a lot\n-                    // by unsafe code.\n                     return Ok(());\n                 }\n "}]}