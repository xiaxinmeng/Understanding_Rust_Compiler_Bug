{"sha": "537c7f4fa95f4c5b0a6259ee7badae5ad57d0940", "node_id": "C_kwDOAAsO6NoAKDUzN2M3ZjRmYTk1ZjRjNWIwYTYyNTllZTdiYWRhZTVhZDU3ZDA5NDA", "commit": {"author": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-01-02T05:07:02Z"}, "committer": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-01-02T11:43:07Z"}, "message": "Print correct base for too-large literals\n\nAlso update tests", "tree": {"sha": "2de3397d26bfd7836e2e7fb3ae72e7afaa87f1bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2de3397d26bfd7836e2e7fb3ae72e7afaa87f1bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940", "html_url": "https://github.com/rust-lang/rust/commit/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/comments", "author": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cafdd2f7bb1be0fa888e0aecafa3adde1a4b5476", "url": "https://api.github.com/repos/rust-lang/rust/commits/cafdd2f7bb1be0fa888e0aecafa3adde1a4b5476", "html_url": "https://github.com/rust-lang/rust/commit/cafdd2f7bb1be0fa888e0aecafa3adde1a4b5476"}], "stats": {"total": 112, "additions": 83, "deletions": 29}, "files": [{"sha": "69a9a58304837d26d91f7eebaab3d9e6fe4882f9", "filename": "compiler/rustc_ast/src/util/literal.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/compiler%2Frustc_ast%2Fsrc%2Futil%2Fliteral.rs", "raw_url": "https://github.com/rust-lang/rust/raw/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/compiler%2Frustc_ast%2Fsrc%2Futil%2Fliteral.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Futil%2Fliteral.rs?ref=537c7f4fa95f4c5b0a6259ee7badae5ad57d0940", "patch": "@@ -34,7 +34,7 @@ pub enum LitError {\n     InvalidIntSuffix,\n     InvalidFloatSuffix,\n     NonDecimalFloat(u32),\n-    IntTooLarge,\n+    IntTooLarge(u32),\n }\n \n impl LitKind {\n@@ -333,6 +333,6 @@ fn integer_lit(symbol: Symbol, suffix: Option<Symbol>) -> Result<LitKind, LitErr\n         // but these kinds of errors are already reported by the lexer.\n         let from_lexer =\n             base < 10 && s.chars().any(|c| c.to_digit(10).map_or(false, |d| d >= base));\n-        if from_lexer { LitError::LexerError } else { LitError::IntTooLarge }\n+        if from_lexer { LitError::LexerError } else { LitError::IntTooLarge(base) }\n     })\n }"}, {"sha": "bc37d91a7c6afd5cdcec34daa242be14e090bcae", "filename": "compiler/rustc_error_messages/locales/en-US/session.ftl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsession.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsession.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsession.ftl?ref=537c7f4fa95f4c5b0a6259ee7badae5ad57d0940", "patch": "@@ -85,7 +85,7 @@ session_invalid_float_literal_suffix = invalid suffix `{$suffix}` for float lite\n     .help = valid suffixes are `f32` and `f64`\n \n session_int_literal_too_large = integer literal is too large\n-    .note = value exceeds limit of 340282366920938463463374607431768211455\n+    .note = value exceeds limit of `{$limit}`\n \n session_invalid_int_literal_width = invalid width `{$width}` for integer literal\n     .help = valid widths are 8, 16, 32, 64 and 128"}, {"sha": "f5a72573d58cd00d8d1cc5c4fbafb5e6ed0e9333", "filename": "compiler/rustc_session/src/errors.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/compiler%2Frustc_session%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/compiler%2Frustc_session%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Ferrors.rs?ref=537c7f4fa95f4c5b0a6259ee7badae5ad57d0940", "patch": "@@ -264,6 +264,7 @@ pub(crate) struct InvalidFloatLiteralSuffix {\n pub(crate) struct IntLiteralTooLarge {\n     #[primary_span]\n     pub span: Span,\n+    pub limit: String,\n }\n \n #[derive(Diagnostic)]\n@@ -362,8 +363,15 @@ pub fn report_lit_error(sess: &ParseSess, err: LitError, lit: token::Lit, span:\n                 _ => unreachable!(),\n             };\n         }\n-        LitError::IntTooLarge => {\n-            sess.emit_err(IntLiteralTooLarge { span });\n+        LitError::IntTooLarge(base) => {\n+            let max = u128::MAX;\n+            let limit = match base {\n+                2 => format!(\"{max:#b}\"),\n+                8 => format!(\"{max:#o}\"),\n+                16 => format!(\"{max:#x}\"),\n+                _ => format!(\"{max}\"),\n+            };\n+            sess.emit_err(IntLiteralTooLarge { span, limit });\n         }\n     }\n }"}, {"sha": "ecbdb14dc868e502fde7ffd64cc40a36c2b95f96", "filename": "src/test/ui/lexer/error-stage.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/src%2Ftest%2Fui%2Flexer%2Ferror-stage.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/src%2Ftest%2Fui%2Flexer%2Ferror-stage.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flexer%2Ferror-stage.stderr?ref=537c7f4fa95f4c5b0a6259ee7badae5ad57d0940", "patch": "@@ -49,6 +49,8 @@ error: integer literal is too large\n    |\n LL |     999340282366920938463463374607431768211455999;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: value exceeds limit of `340282366920938463463374607431768211455`\n \n error: aborting due to 8 previous errors\n "}, {"sha": "56bdc50e40d689031f729d6ec7408e8bad88e3c8", "filename": "src/test/ui/lexer/lex-bad-numeric-literals.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/src%2Ftest%2Fui%2Flexer%2Flex-bad-numeric-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/src%2Ftest%2Fui%2Flexer%2Flex-bad-numeric-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flexer%2Flex-bad-numeric-literals.rs?ref=537c7f4fa95f4c5b0a6259ee7badae5ad57d0940", "patch": "@@ -1,3 +1,5 @@\n+// ignore-tidy-linelength\n+\n fn main() {\n     0o1.0; //~ ERROR: octal float literal is not supported\n     0o2f32; //~ ERROR: octal float literal is not supported\n@@ -15,6 +17,12 @@ fn main() {\n     //~^ ERROR: integer literal is too large\n     9900000000000000000000000000999999999999999999999999999999;\n     //~^ ERROR: integer literal is too large\n+    0b111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110;\n+    //~^ ERROR: integer literal is too large\n+    0o37777777777777777777777777777777777777777770;\n+    //~^ ERROR: integer literal is too large\n+    0xffffffffffffffffffffffffffffffff0;\n+    //~^ ERROR: integer literal is too large\n     0x; //~ ERROR: no valid digits\n     0xu32; //~ ERROR: no valid digits\n     0ou32; //~ ERROR: no valid digits"}, {"sha": "1457541970af456b03d709f22c7baa2f893ce050", "filename": "src/test/ui/lexer/lex-bad-numeric-literals.stderr", "status": "modified", "additions": 52, "deletions": 24, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/src%2Ftest%2Fui%2Flexer%2Flex-bad-numeric-literals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/src%2Ftest%2Fui%2Flexer%2Flex-bad-numeric-literals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flexer%2Flex-bad-numeric-literals.stderr?ref=537c7f4fa95f4c5b0a6259ee7badae5ad57d0940", "patch": "@@ -1,141 +1,169 @@\n error: octal float literal is not supported\n-  --> $DIR/lex-bad-numeric-literals.rs:2:5\n+  --> $DIR/lex-bad-numeric-literals.rs:4:5\n    |\n LL |     0o1.0;\n    |     ^^^^^\n \n error: octal float literal is not supported\n-  --> $DIR/lex-bad-numeric-literals.rs:4:5\n+  --> $DIR/lex-bad-numeric-literals.rs:6:5\n    |\n LL |     0o3.0f32;\n    |     ^^^^^\n \n error: octal float literal is not supported\n-  --> $DIR/lex-bad-numeric-literals.rs:5:5\n+  --> $DIR/lex-bad-numeric-literals.rs:7:5\n    |\n LL |     0o4e4;\n    |     ^^^^^\n \n error: octal float literal is not supported\n-  --> $DIR/lex-bad-numeric-literals.rs:6:5\n+  --> $DIR/lex-bad-numeric-literals.rs:8:5\n    |\n LL |     0o5.0e5;\n    |     ^^^^^^^\n \n error: octal float literal is not supported\n-  --> $DIR/lex-bad-numeric-literals.rs:7:5\n+  --> $DIR/lex-bad-numeric-literals.rs:9:5\n    |\n LL |     0o6e6f32;\n    |     ^^^^^\n \n error: octal float literal is not supported\n-  --> $DIR/lex-bad-numeric-literals.rs:8:5\n+  --> $DIR/lex-bad-numeric-literals.rs:10:5\n    |\n LL |     0o7.0e7f64;\n    |     ^^^^^^^\n \n error: hexadecimal float literal is not supported\n-  --> $DIR/lex-bad-numeric-literals.rs:9:5\n+  --> $DIR/lex-bad-numeric-literals.rs:11:5\n    |\n LL |     0x8.0e+9;\n    |     ^^^^^^^^\n \n error: hexadecimal float literal is not supported\n-  --> $DIR/lex-bad-numeric-literals.rs:10:5\n+  --> $DIR/lex-bad-numeric-literals.rs:12:5\n    |\n LL |     0x9.0e-9;\n    |     ^^^^^^^^\n \n error[E0768]: no valid digits found for number\n-  --> $DIR/lex-bad-numeric-literals.rs:11:5\n+  --> $DIR/lex-bad-numeric-literals.rs:13:5\n    |\n LL |     0o;\n    |     ^^\n \n error: expected at least one digit in exponent\n-  --> $DIR/lex-bad-numeric-literals.rs:12:5\n+  --> $DIR/lex-bad-numeric-literals.rs:14:5\n    |\n LL |     1e+;\n    |     ^^^\n \n error: hexadecimal float literal is not supported\n-  --> $DIR/lex-bad-numeric-literals.rs:13:5\n+  --> $DIR/lex-bad-numeric-literals.rs:15:5\n    |\n LL |     0x539.0;\n    |     ^^^^^^^\n \n error[E0768]: no valid digits found for number\n-  --> $DIR/lex-bad-numeric-literals.rs:18:5\n+  --> $DIR/lex-bad-numeric-literals.rs:26:5\n    |\n LL |     0x;\n    |     ^^\n \n error[E0768]: no valid digits found for number\n-  --> $DIR/lex-bad-numeric-literals.rs:19:5\n+  --> $DIR/lex-bad-numeric-literals.rs:27:5\n    |\n LL |     0xu32;\n    |     ^^\n \n error[E0768]: no valid digits found for number\n-  --> $DIR/lex-bad-numeric-literals.rs:20:5\n+  --> $DIR/lex-bad-numeric-literals.rs:28:5\n    |\n LL |     0ou32;\n    |     ^^\n \n error[E0768]: no valid digits found for number\n-  --> $DIR/lex-bad-numeric-literals.rs:21:5\n+  --> $DIR/lex-bad-numeric-literals.rs:29:5\n    |\n LL |     0bu32;\n    |     ^^\n \n error[E0768]: no valid digits found for number\n-  --> $DIR/lex-bad-numeric-literals.rs:22:5\n+  --> $DIR/lex-bad-numeric-literals.rs:30:5\n    |\n LL |     0b;\n    |     ^^\n \n error: octal float literal is not supported\n-  --> $DIR/lex-bad-numeric-literals.rs:24:5\n+  --> $DIR/lex-bad-numeric-literals.rs:32:5\n    |\n LL |     0o123.456;\n    |     ^^^^^^^^^\n \n error: binary float literal is not supported\n-  --> $DIR/lex-bad-numeric-literals.rs:26:5\n+  --> $DIR/lex-bad-numeric-literals.rs:34:5\n    |\n LL |     0b111.101;\n    |     ^^^^^^^^^\n \n error: octal float literal is not supported\n-  --> $DIR/lex-bad-numeric-literals.rs:3:5\n+  --> $DIR/lex-bad-numeric-literals.rs:5:5\n    |\n LL |     0o2f32;\n    |     ^^^^^^ not supported\n \n error: integer literal is too large\n-  --> $DIR/lex-bad-numeric-literals.rs:14:5\n+  --> $DIR/lex-bad-numeric-literals.rs:16:5\n    |\n LL |     9900000000000000000000000000999999999999999999999999999999;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: value exceeds limit of `340282366920938463463374607431768211455`\n \n error: integer literal is too large\n-  --> $DIR/lex-bad-numeric-literals.rs:16:5\n+  --> $DIR/lex-bad-numeric-literals.rs:18:5\n    |\n LL |     9900000000000000000000000000999999999999999999999999999999;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: value exceeds limit of `340282366920938463463374607431768211455`\n+\n+error: integer literal is too large\n+  --> $DIR/lex-bad-numeric-literals.rs:20:5\n+   |\n+LL |     0b111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: value exceeds limit of `0b11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111`\n+\n+error: integer literal is too large\n+  --> $DIR/lex-bad-numeric-literals.rs:22:5\n+   |\n+LL |     0o37777777777777777777777777777777777777777770;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: value exceeds limit of `0o3777777777777777777777777777777777777777777`\n+\n+error: integer literal is too large\n+  --> $DIR/lex-bad-numeric-literals.rs:24:5\n+   |\n+LL |     0xffffffffffffffffffffffffffffffff0;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: value exceeds limit of `0xffffffffffffffffffffffffffffffff`\n \n error: octal float literal is not supported\n-  --> $DIR/lex-bad-numeric-literals.rs:23:5\n+  --> $DIR/lex-bad-numeric-literals.rs:31:5\n    |\n LL |     0o123f64;\n    |     ^^^^^^^^ not supported\n \n error: binary float literal is not supported\n-  --> $DIR/lex-bad-numeric-literals.rs:25:5\n+  --> $DIR/lex-bad-numeric-literals.rs:33:5\n    |\n LL |     0b101f64;\n    |     ^^^^^^^^ not supported\n \n-error: aborting due to 23 previous errors\n+error: aborting due to 26 previous errors\n \n For more information about this error, try `rustc --explain E0768`."}, {"sha": "8807279c27f93577096448ff5711f26cd1c8241e", "filename": "src/test/ui/macros/issue-104769-concat_bytes-invalid-literal.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/src%2Ftest%2Fui%2Fmacros%2Fissue-104769-concat_bytes-invalid-literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/src%2Ftest%2Fui%2Fmacros%2Fissue-104769-concat_bytes-invalid-literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-104769-concat_bytes-invalid-literal.stderr?ref=537c7f4fa95f4c5b0a6259ee7badae5ad57d0940", "patch": "@@ -11,6 +11,8 @@ error: integer literal is too large\n    |\n LL |     concat_bytes!(888888888888888888888888888888888888888);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: value exceeds limit of `340282366920938463463374607431768211455`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "49d6aa5eff8ceee845bf6295d5604255be866ce7", "filename": "src/test/ui/parser/int-literal-too-large-span.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/src%2Ftest%2Fui%2Fparser%2Fint-literal-too-large-span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/src%2Ftest%2Fui%2Fparser%2Fint-literal-too-large-span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fint-literal-too-large-span.stderr?ref=537c7f4fa95f4c5b0a6259ee7badae5ad57d0940", "patch": "@@ -3,6 +3,8 @@ error: integer literal is too large\n    |\n LL |     9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: value exceeds limit of `340282366920938463463374607431768211455`\n \n error: aborting due to previous error\n "}, {"sha": "6e68c75850afe576d6b25e4bf5fe8213bf720c2f", "filename": "src/test/ui/parser/issues/issue-5544-a.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-5544-a.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-5544-a.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-5544-a.stderr?ref=537c7f4fa95f4c5b0a6259ee7badae5ad57d0940", "patch": "@@ -3,6 +3,8 @@ error: integer literal is too large\n    |\n LL |     let __isize = 340282366920938463463374607431768211456; // 2^128\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: value exceeds limit of `340282366920938463463374607431768211455`\n \n error: aborting due to previous error\n "}, {"sha": "5d0e76d5d9445ce007477a430484ccb21068c348", "filename": "src/test/ui/parser/issues/issue-5544-b.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-5544-b.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/537c7f4fa95f4c5b0a6259ee7badae5ad57d0940/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-5544-b.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-5544-b.stderr?ref=537c7f4fa95f4c5b0a6259ee7badae5ad57d0940", "patch": "@@ -3,6 +3,8 @@ error: integer literal is too large\n    |\n LL |     let __isize = 0xffff_ffff_ffff_ffff_ffff_ffff_ffff_ffff_ff;\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: value exceeds limit of `0xffffffffffffffffffffffffffffffff`\n \n error: aborting due to previous error\n "}]}