{"sha": "cf01b514c876656696e87672a1c118a3ce7817ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmMDFiNTE0Yzg3NjY1NjY5NmU4NzY3MmExYzExOGEzY2U3ODE3ZWQ=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-25T21:57:31Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-02-01T15:38:46Z"}, "message": "Generic type parameters are flexible even for existential types", "tree": {"sha": "76de0b5d6d16e9add8564e6e546d5d41126096d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76de0b5d6d16e9add8564e6e546d5d41126096d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf01b514c876656696e87672a1c118a3ce7817ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf01b514c876656696e87672a1c118a3ce7817ed", "html_url": "https://github.com/rust-lang/rust/commit/cf01b514c876656696e87672a1c118a3ce7817ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf01b514c876656696e87672a1c118a3ce7817ed/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d25ff8842ca35b7eabd2d8a22669c5b2216ad82", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d25ff8842ca35b7eabd2d8a22669c5b2216ad82", "html_url": "https://github.com/rust-lang/rust/commit/0d25ff8842ca35b7eabd2d8a22669c5b2216ad82"}], "stats": {"total": 119, "additions": 32, "deletions": 87}, "files": [{"sha": "e4fc1925eb377923c5ee94587543ec25c5415121", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/cf01b514c876656696e87672a1c118a3ce7817ed/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf01b514c876656696e87672a1c118a3ce7817ed/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=cf01b514c876656696e87672a1c118a3ce7817ed", "patch": "@@ -1346,7 +1346,16 @@ fn find_existential_constraints<'a, 'tcx>(\n                 // FIXME(oli-obk): trace the actual span from inference to improve errors\n                 let span = self.tcx.def_span(def_id);\n                 if let Some((prev_span, prev_ty)) = self.found {\n-                    if ty != prev_ty {\n+                    let mut ty = ty.walk().fuse();\n+                    let mut prev_ty = prev_ty.walk().fuse();\n+                    let iter_eq = (&mut ty).zip(&mut prev_ty).all(|(t, p)| match (&t.sty, &p.sty) {\n+                        // type parameters are equal to any other type parameter for the purpose of\n+                        // concrete type equality, as it is possible to obtain the same type just\n+                        // by passing matching parameters to a function.\n+                        (ty::Param(_), ty::Param(_)) => true,\n+                        _ => t == p,\n+                    });\n+                    if !iter_eq || ty.next().is_some() || prev_ty.next().is_some() {\n                         // found different concrete types for the existential type\n                         let mut err = self.tcx.sess.struct_span_err(\n                             span,"}, {"sha": "d08cd88c600d083e0ab339bcd255b3c5c95721d7", "filename": "src/test/ui/existential_types/generic_duplicate_param_use.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cf01b514c876656696e87672a1c118a3ce7817ed/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf01b514c876656696e87672a1c118a3ce7817ed/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use.rs?ref=cf01b514c876656696e87672a1c118a3ce7817ed", "patch": "@@ -1,11 +1,13 @@\n // compile-pass\n #![feature(existential_type)]\n \n+use std::fmt::Debug;\n+\n fn main() {}\n \n // test that unused generic parameters are ok\n-existential type Two<T, U>: 'static;\n+existential type Two<T, U>: Debug;\n \n-fn one<T: 'static>(t: T) -> Two<T, T> {\n+fn one<T: Debug>(t: T) -> Two<T, T> {\n     t\n }"}, {"sha": "c27fbb74cf19d5fa1a7e68e333ac4bfec525af52", "filename": "src/test/ui/existential_types/generic_duplicate_param_use2.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cf01b514c876656696e87672a1c118a3ce7817ed/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf01b514c876656696e87672a1c118a3ce7817ed/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use2.rs?ref=cf01b514c876656696e87672a1c118a3ce7817ed", "patch": "@@ -1,15 +1,17 @@\n // compile-pass\n #![feature(existential_type)]\n \n+use std::fmt::Debug;\n+\n fn main() {}\n \n // test that unused generic parameters are ok\n-existential type Two<T, U>: 'static;\n+existential type Two<T, U>: Debug;\n \n-fn one<T: 'static>(t: T) -> Two<T, T> {\n+fn one<T: Debug>(t: T) -> Two<T, T> {\n     t\n }\n \n-fn two<T: 'static, U: 'static>(t: T, _: U) -> Two<T, U> {\n+fn two<T: Debug, U>(t: T, _: U) -> Two<T, U> {\n     t\n }"}, {"sha": "b4d1b26dbabda388bdf651fa7f42f0fe9a103ddc", "filename": "src/test/ui/existential_types/generic_duplicate_param_use3.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cf01b514c876656696e87672a1c118a3ce7817ed/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf01b514c876656696e87672a1c118a3ce7817ed/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use3.rs?ref=cf01b514c876656696e87672a1c118a3ce7817ed", "patch": "@@ -1,19 +1,21 @@\n+// compile-pass\n #![feature(existential_type)]\n \n+use std::fmt::Debug;\n+\n fn main() {}\n \n // test that unused generic parameters are ok\n-existential type Two<T, U>: 'static;\n+existential type Two<T, U>: Debug;\n \n-fn one<T: 'static>(t: T) -> Two<T, T> {\n+fn one<T: Debug>(t: T) -> Two<T, T> {\n     t\n }\n \n-fn two<T: 'static, U: 'static>(t: T, _: U) -> Two<T, U> {\n+fn two<T: Debug, U>(t: T, _: U) -> Two<T, U> {\n     t\n }\n \n-fn three<T: 'static, U: 'static>(_: T, u: U) -> Two<T, U> {\n-    //~^ ERROR defining existential type use differs from previous\n+fn three<T, U: Debug>(_: T, u: U) -> Two<T, U> {\n     u\n }"}, {"sha": "67c30ad648b354d36fca0a0f7b5e63028644ef57", "filename": "src/test/ui/existential_types/generic_duplicate_param_use3.stderr", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0d25ff8842ca35b7eabd2d8a22669c5b2216ad82/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d25ff8842ca35b7eabd2d8a22669c5b2216ad82/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use3.stderr?ref=0d25ff8842ca35b7eabd2d8a22669c5b2216ad82", "patch": "@@ -1,19 +0,0 @@\n-error: defining existential type use differs from previous\n-  --> $DIR/generic_duplicate_param_use3.rs:16:1\n-   |\n-LL | / fn three<T: 'static, U: 'static>(_: T, u: U) -> Two<T, U> {\n-LL | |     //~^ ERROR defining existential type use differs from previous\n-LL | |     u\n-LL | | }\n-   | |_^\n-   |\n-note: previous use here\n-  --> $DIR/generic_duplicate_param_use3.rs:8:1\n-   |\n-LL | / fn one<T: 'static>(t: T) -> Two<T, T> {\n-LL | |     t\n-LL | | }\n-   | |_^\n-\n-error: aborting due to previous error\n-"}, {"sha": "afab86c3ff07589107928a0f05c8f7fed700e4f4", "filename": "src/test/ui/existential_types/generic_duplicate_param_use4.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cf01b514c876656696e87672a1c118a3ce7817ed/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf01b514c876656696e87672a1c118a3ce7817ed/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use4.rs?ref=cf01b514c876656696e87672a1c118a3ce7817ed", "patch": "@@ -1,15 +1,17 @@\n+// compile-pass\n #![feature(existential_type)]\n \n+use std::fmt::Debug;\n+\n fn main() {}\n \n // test that unused generic parameters are ok\n-existential type Two<T, U>: 'static;\n+existential type Two<T, U>: Debug;\n \n-fn one<T: 'static>(t: T) -> Two<T, T> {\n+fn one<T: Debug>(t: T) -> Two<T, T> {\n     t\n }\n \n-fn three<T: 'static, U: 'static>(_: T, u: U) -> Two<T, U> {\n-//~^ ERROR defining existential type use differs from previous\n+fn three<T, U: Debug>(_: T, u: U) -> Two<T, U> {\n     u\n }"}, {"sha": "e7a372e0e0c9b75e39099346af9cac57879a54dd", "filename": "src/test/ui/existential_types/generic_duplicate_param_use4.stderr", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0d25ff8842ca35b7eabd2d8a22669c5b2216ad82/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d25ff8842ca35b7eabd2d8a22669c5b2216ad82/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use4.stderr?ref=0d25ff8842ca35b7eabd2d8a22669c5b2216ad82", "patch": "@@ -1,19 +0,0 @@\n-error: defining existential type use differs from previous\n-  --> $DIR/generic_duplicate_param_use4.rs:12:1\n-   |\n-LL | / fn three<T: 'static, U: 'static>(_: T, u: U) -> Two<T, U> {\n-LL | | //~^ ERROR defining existential type use differs from previous\n-LL | |     u\n-LL | | }\n-   | |_^\n-   |\n-note: previous use here\n-  --> $DIR/generic_duplicate_param_use4.rs:8:1\n-   |\n-LL | / fn one<T: 'static>(t: T) -> Two<T, T> {\n-LL | |     t\n-LL | | }\n-   | |_^\n-\n-error: aborting due to previous error\n-"}, {"sha": "f9d336d759b623687de8c1a37612aea6c034bb0b", "filename": "src/test/ui/existential_types/generic_duplicate_param_use5.rs", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0d25ff8842ca35b7eabd2d8a22669c5b2216ad82/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d25ff8842ca35b7eabd2d8a22669c5b2216ad82/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use5.rs?ref=0d25ff8842ca35b7eabd2d8a22669c5b2216ad82", "patch": "@@ -1,15 +0,0 @@\n-#![feature(existential_type)]\n-\n-fn main() {}\n-\n-// test that unused generic parameters are ok\n-existential type Two<T, U>: 'static;\n-\n-fn one<T: 'static>(t: T) -> Two<T, T> {\n-    t\n-}\n-\n-fn two<T: 'static, U: 'static>(t: T, _: U) -> Two<U, T> {\n-//~^ ERROR defining existential type use differs from previous\n-    t\n-}"}, {"sha": "e2bf4a9e0dfef770166effbf8b102424747ec288", "filename": "src/test/ui/existential_types/generic_duplicate_param_use5.stderr", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0d25ff8842ca35b7eabd2d8a22669c5b2216ad82/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d25ff8842ca35b7eabd2d8a22669c5b2216ad82/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use5.stderr?ref=0d25ff8842ca35b7eabd2d8a22669c5b2216ad82", "patch": "@@ -1,19 +0,0 @@\n-error: defining existential type use differs from previous\n-  --> $DIR/generic_duplicate_param_use5.rs:12:1\n-   |\n-LL | / fn two<T: 'static, U: 'static>(t: T, _: U) -> Two<U, T> {\n-LL | | //~^ ERROR defining existential type use differs from previous\n-LL | |     t\n-LL | | }\n-   | |_^\n-   |\n-note: previous use here\n-  --> $DIR/generic_duplicate_param_use5.rs:8:1\n-   |\n-LL | / fn one<T: 'static>(t: T) -> Two<T, T> {\n-LL | |     t\n-LL | | }\n-   | |_^\n-\n-error: aborting due to previous error\n-"}]}