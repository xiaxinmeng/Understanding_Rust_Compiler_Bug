{"sha": "5f82012779c374d9f6b518634aefb14ce28e17e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmODIwMTI3NzljMzc0ZDlmNmI1MTg2MzRhZWZiMTRjZTI4ZTE3ZTY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-08-09T09:21:50Z"}, "committer": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-08-09T09:21:50Z"}, "message": "Merge #1669\n\n1669: Parse tuple struct field initialization r=matklad a=eupn\n\nCloses #1218.\r\n\r\nThis PR modifies the parser to accept the following code:\r\n```rust\r\nfn main() {\r\n    struct TupleStruct(usize);\r\n    let s = TupleStruct {\r\n        0: 1usize,\r\n    };\r\n    \r\n    dbg!(s.0);\r\n}\r\n```\r\n\r\n<details><summary>with following AST:</summary>\r\n\r\n```\r\nSOURCE_FILE@[0; 118)\r\n  FN_DEF@[0; 116)\r\n    FN_KW@[0; 2) \"fn\"\r\n    WHITESPACE@[2; 3) \" \"\r\n    NAME@[3; 7)\r\n      IDENT@[3; 7) \"main\"\r\n    PARAM_LIST@[7; 9)\r\n      L_PAREN@[7; 8) \"(\"\r\n      R_PAREN@[8; 9) \")\"\r\n    WHITESPACE@[9; 10) \" \"\r\n    BLOCK@[10; 116)\r\n      L_CURLY@[10; 11) \"{\"\r\n      WHITESPACE@[11; 16) \"\\n    \"\r\n      STRUCT_DEF@[16; 42)\r\n        STRUCT_KW@[16; 22) \"struct\"\r\n        WHITESPACE@[22; 23) \" \"\r\n        NAME@[23; 34)\r\n          IDENT@[23; 34) \"TupleStruct\"\r\n        POS_FIELD_DEF_LIST@[34; 41)\r\n          L_PAREN@[34; 35) \"(\"\r\n          POS_FIELD_DEF@[35; 40)\r\n            PATH_TYPE@[35; 40)\r\n              PATH@[35; 40)\r\n                PATH_SEGMENT@[35; 40)\r\n                  NAME_REF@[35; 40)\r\n                    IDENT@[35; 40) \"usize\"\r\n          R_PAREN@[40; 41) \")\"\r\n        SEMI@[41; 42) \";\"\r\n      WHITESPACE@[42; 47) \"\\n    \"\r\n      LET_STMT@[47; 94)\r\n        LET_KW@[47; 50) \"let\"\r\n        WHITESPACE@[50; 51) \" \"\r\n        BIND_PAT@[51; 52)\r\n          NAME@[51; 52)\r\n            IDENT@[51; 52) \"s\"\r\n        WHITESPACE@[52; 53) \" \"\r\n        EQ@[53; 54) \"=\"\r\n        WHITESPACE@[54; 55) \" \"\r\n        STRUCT_LIT@[55; 93)\r\n          PATH@[55; 66)\r\n            PATH_SEGMENT@[55; 66)\r\n              NAME_REF@[55; 66)\r\n                IDENT@[55; 66) \"TupleStruct\"\r\n          WHITESPACE@[66; 67) \" \"\r\n          NAMED_FIELD_LIST@[67; 93)\r\n            L_CURLY@[67; 68) \"{\"\r\n            WHITESPACE@[68; 77) \"\\n        \"\r\n            NAMED_FIELD@[77; 86)\r\n              NAME_REF@[77; 78)\r\n                INT_NUMBER@[77; 78) \"0\"\r\n              COLON@[78; 79) \":\"\r\n              WHITESPACE@[79; 80) \" \"\r\n              LITERAL@[80; 86)\r\n                INT_NUMBER@[80; 86) \"1usize\"\r\n            COMMA@[86; 87) \",\"\r\n            WHITESPACE@[87; 92) \"\\n    \"\r\n            R_CURLY@[92; 93) \"}\"\r\n        SEMI@[93; 94) \";\"\r\n      WHITESPACE@[94; 104) \"\\n    \\n    \"\r\n      EXPR_STMT@[104; 114)\r\n        MACRO_CALL@[104; 113)\r\n          PATH@[104; 107)\r\n            PATH_SEGMENT@[104; 107)\r\n              NAME_REF@[104; 107)\r\n                IDENT@[104; 107) \"dbg\"\r\n          EXCL@[107; 108) \"!\"\r\n          TOKEN_TREE@[108; 113)\r\n            L_PAREN@[108; 109) \"(\"\r\n            IDENT@[109; 110) \"s\"\r\n            DOT@[110; 111) \".\"\r\n            INT_NUMBER@[111; 112) \"0\"\r\n            R_PAREN@[112; 113) \")\"\r\n        SEMI@[113; 114) \";\"\r\n      WHITESPACE@[114; 115) \"\\n\"\r\n      R_CURLY@[115; 116) \"}\"\r\n  WHITESPACE@[116; 118) \"\\n\\n\"\r\n```\r\n\r\n</summary>\n\nCo-authored-by: Evgenii P <eupn@protonmail.com>", "tree": {"sha": "40db0d5e514bf1d260aa21a3a305b37986136481", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40db0d5e514bf1d260aa21a3a305b37986136481"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f82012779c374d9f6b518634aefb14ce28e17e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f82012779c374d9f6b518634aefb14ce28e17e6", "html_url": "https://github.com/rust-lang/rust/commit/5f82012779c374d9f6b518634aefb14ce28e17e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f82012779c374d9f6b518634aefb14ce28e17e6/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "2fbec23d9990147e09a3b819c37dc1467a5e95d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fbec23d9990147e09a3b819c37dc1467a5e95d4", "html_url": "https://github.com/rust-lang/rust/commit/2fbec23d9990147e09a3b819c37dc1467a5e95d4"}, {"sha": "fa24e20867893178ed7265ecadb2bcb09cf76dac", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa24e20867893178ed7265ecadb2bcb09cf76dac", "html_url": "https://github.com/rust-lang/rust/commit/fa24e20867893178ed7265ecadb2bcb09cf76dac"}], "stats": {"total": 55, "additions": 39, "deletions": 16}, "files": [{"sha": "2ee121ccd09da193b0ba08ed1bf731aa040fcc12", "filename": "crates/ra_parser/src/grammar.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5f82012779c374d9f6b518634aefb14ce28e17e6/crates%2Fra_parser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f82012779c374d9f6b518634aefb14ce28e17e6/crates%2Fra_parser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar.rs?ref=5f82012779c374d9f6b518634aefb14ce28e17e6", "patch": "@@ -273,8 +273,8 @@ fn name(p: &mut Parser) {\n     name_r(p, TokenSet::empty())\n }\n \n-fn name_ref(p: &mut Parser) {\n-    if p.at(IDENT) {\n+fn name_ref(p: &mut Parser, allow_numeric_names: bool) {\n+    if p.at(IDENT) || (allow_numeric_names && p.at(INT_NUMBER)) {\n         let m = p.start();\n         p.bump();\n         m.complete(p, NAME_REF);"}, {"sha": "9f9e9cb0eed396c3769f044e99597ed81f93c983", "filename": "crates/ra_parser/src/grammar/expressions.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5f82012779c374d9f6b518634aefb14ce28e17e6/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f82012779c374d9f6b518634aefb14ce28e17e6/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=5f82012779c374d9f6b518634aefb14ce28e17e6", "patch": "@@ -458,7 +458,7 @@ fn method_call_expr(p: &mut Parser, lhs: CompletedMarker) -> CompletedMarker {\n     assert!(p.at(T![.]) && p.nth(1) == IDENT && (p.nth(2) == T!['('] || p.nth(2) == T![::]));\n     let m = lhs.precede(p);\n     p.bump();\n-    name_ref(p);\n+    name_ref(p, false);\n     type_args::opt_type_arg_list(p, true);\n     if p.at(T!['(']) {\n         arg_list(p);\n@@ -485,7 +485,7 @@ fn field_expr(p: &mut Parser, lhs: CompletedMarker) -> CompletedMarker {\n     let m = lhs.precede(p);\n     p.bump();\n     if p.at(IDENT) {\n-        name_ref(p)\n+        name_ref(p, false)\n     } else if p.at(INT_NUMBER) {\n         p.bump();\n     } else if p.at(FLOAT_NUMBER) {\n@@ -572,6 +572,7 @@ fn path_expr(p: &mut Parser, r: Restrictions) -> (CompletedMarker, BlockLike) {\n //     S {};\n //     S { x, y: 32, };\n //     S { x, y: 32, ..Default::default() };\n+//     TupleStruct { 0: 1 };\n // }\n pub(crate) fn named_field_list(p: &mut Parser) {\n     assert!(p.at(T!['{']));\n@@ -583,10 +584,10 @@ pub(crate) fn named_field_list(p: &mut Parser) {\n             // fn main() {\n             //     S { #[cfg(test)] field: 1 }\n             // }\n-            IDENT | T![#] => {\n+            IDENT | INT_NUMBER | T![#] => {\n                 let m = p.start();\n                 attributes::outer_attributes(p);\n-                name_ref(p);\n+                name_ref(p, true);\n                 if p.eat(T![:]) {\n                     expr(p);\n                 }"}, {"sha": "b0081f39607111bd1dbedcd706c0fbf4db6c621d", "filename": "crates/ra_parser/src/grammar/items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f82012779c374d9f6b518634aefb14ce28e17e6/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f82012779c374d9f6b518634aefb14ce28e17e6/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs?ref=5f82012779c374d9f6b518634aefb14ce28e17e6", "patch": "@@ -279,7 +279,7 @@ fn extern_crate_item(p: &mut Parser, m: Marker) {\n     p.bump();\n     assert!(p.at(T![crate]));\n     p.bump();\n-    name_ref(p);\n+    name_ref(p, false);\n     opt_alias(p);\n     p.expect(T![;]);\n     m.complete(p, EXTERN_CRATE_ITEM);"}, {"sha": "2c8f0f7e824e6655d6f96fa77b207a548ecdcd7d", "filename": "crates/ra_parser/src/grammar/paths.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f82012779c374d9f6b518634aefb14ce28e17e6/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f82012779c374d9f6b518634aefb14ce28e17e6/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpaths.rs?ref=5f82012779c374d9f6b518634aefb14ce28e17e6", "patch": "@@ -71,7 +71,7 @@ fn path_segment(p: &mut Parser, mode: Mode, first: bool) {\n         }\n         match p.current() {\n             IDENT => {\n-                name_ref(p);\n+                name_ref(p, false);\n                 opt_path_type_args(p, mode);\n             }\n             // test crate_path"}, {"sha": "f1d999dead6f8c96a42093f5d4d76b8662bbf0d1", "filename": "crates/ra_parser/src/grammar/type_args.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5f82012779c374d9f6b518634aefb14ce28e17e6/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftype_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f82012779c374d9f6b518634aefb14ce28e17e6/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftype_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftype_args.rs?ref=5f82012779c374d9f6b518634aefb14ce28e17e6", "patch": "@@ -38,12 +38,12 @@ fn type_arg(p: &mut Parser) {\n         // test associated_type_bounds\n         // fn print_all<T: Iterator<Item: Display>>(printables: T) {}\n         IDENT if p.nth(1) == T![:] => {\n-            name_ref(p);\n+            name_ref(p, false);\n             type_params::bounds(p);\n             m.complete(p, ASSOC_TYPE_ARG);\n         }\n         IDENT if p.nth(1) == T![=] => {\n-            name_ref(p);\n+            name_ref(p, false);\n             p.bump();\n             types::type_(p);\n             m.complete(p, ASSOC_TYPE_ARG);"}, {"sha": "6285e554977220d75cfeef116439828ae3c6b182", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0061_struct_lit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5f82012779c374d9f6b518634aefb14ce28e17e6/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_struct_lit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f82012779c374d9f6b518634aefb14ce28e17e6/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_struct_lit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_struct_lit.rs?ref=5f82012779c374d9f6b518634aefb14ce28e17e6", "patch": "@@ -2,4 +2,5 @@ fn foo() {\n     S {};\n     S { x, y: 32, };\n     S { x, y: 32, ..Default::default() };\n+    TupleStruct { 0: 1 };\n }"}, {"sha": "d06594cae29b4ddd0c3ac9a60bd321d4f4657cca", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0061_struct_lit.txt", "status": "modified", "additions": 27, "deletions": 6, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/5f82012779c374d9f6b518634aefb14ce28e17e6/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_struct_lit.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5f82012779c374d9f6b518634aefb14ce28e17e6/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_struct_lit.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_struct_lit.txt?ref=5f82012779c374d9f6b518634aefb14ce28e17e6", "patch": "@@ -1,5 +1,5 @@\n-SOURCE_FILE@[0; 86)\n-  FN_DEF@[0; 85)\n+SOURCE_FILE@[0; 112)\n+  FN_DEF@[0; 111)\n     FN_KW@[0; 2) \"fn\"\n     WHITESPACE@[2; 3) \" \"\n     NAME@[3; 6)\n@@ -8,7 +8,7 @@ SOURCE_FILE@[0; 86)\n       L_PAREN@[6; 7) \"(\"\n       R_PAREN@[7; 8) \")\"\n     WHITESPACE@[8; 9) \" \"\n-    BLOCK@[9; 85)\n+    BLOCK@[9; 111)\n       L_CURLY@[9; 10) \"{\"\n       WHITESPACE@[10; 15) \"\\n    \"\n       EXPR_STMT@[15; 20)\n@@ -92,6 +92,27 @@ SOURCE_FILE@[0; 86)\n             WHITESPACE@[80; 81) \" \"\n             R_CURLY@[81; 82) \"}\"\n         SEMI@[82; 83) \";\"\n-      WHITESPACE@[83; 84) \"\\n\"\n-      R_CURLY@[84; 85) \"}\"\n-  WHITESPACE@[85; 86) \"\\n\"\n+      WHITESPACE@[83; 88) \"\\n    \"\n+      EXPR_STMT@[88; 109)\n+        STRUCT_LIT@[88; 108)\n+          PATH@[88; 99)\n+            PATH_SEGMENT@[88; 99)\n+              NAME_REF@[88; 99)\n+                IDENT@[88; 99) \"TupleStruct\"\n+          WHITESPACE@[99; 100) \" \"\n+          NAMED_FIELD_LIST@[100; 108)\n+            L_CURLY@[100; 101) \"{\"\n+            WHITESPACE@[101; 102) \" \"\n+            NAMED_FIELD@[102; 106)\n+              NAME_REF@[102; 103)\n+                INT_NUMBER@[102; 103) \"0\"\n+              COLON@[103; 104) \":\"\n+              WHITESPACE@[104; 105) \" \"\n+              LITERAL@[105; 106)\n+                INT_NUMBER@[105; 106) \"1\"\n+            WHITESPACE@[106; 107) \" \"\n+            R_CURLY@[107; 108) \"}\"\n+        SEMI@[108; 109) \";\"\n+      WHITESPACE@[109; 110) \"\\n\"\n+      R_CURLY@[110; 111) \"}\"\n+  WHITESPACE@[111; 112) \"\\n\""}]}