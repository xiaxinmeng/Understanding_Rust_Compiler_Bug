{"sha": "658be0d1cff1e84473f20f7301bf89d6d1249787", "node_id": "C_kwDOAAsO6NoAKDY1OGJlMGQxY2ZmMWU4NDQ3M2YyMGY3MzAxYmY4OWQ2ZDEyNDk3ODc", "commit": {"author": {"name": "Connor Horman", "email": "chorman64@gmail.com", "date": "2022-05-17T00:15:06Z"}, "committer": {"name": "Connor Horman", "email": "chorman64@gmail.com", "date": "2022-05-17T00:15:06Z"}, "message": "Add tmm_reg clobbers", "tree": {"sha": "8a57d9bc48faa2a259c1d81b73aa04f7262c78f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a57d9bc48faa2a259c1d81b73aa04f7262c78f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/658be0d1cff1e84473f20f7301bf89d6d1249787", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/658be0d1cff1e84473f20f7301bf89d6d1249787", "html_url": "https://github.com/rust-lang/rust/commit/658be0d1cff1e84473f20f7301bf89d6d1249787", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/658be0d1cff1e84473f20f7301bf89d6d1249787/comments", "author": {"login": "chorman0773", "id": 5026283, "node_id": "MDQ6VXNlcjUwMjYyODM=", "avatar_url": "https://avatars.githubusercontent.com/u/5026283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chorman0773", "html_url": "https://github.com/chorman0773", "followers_url": "https://api.github.com/users/chorman0773/followers", "following_url": "https://api.github.com/users/chorman0773/following{/other_user}", "gists_url": "https://api.github.com/users/chorman0773/gists{/gist_id}", "starred_url": "https://api.github.com/users/chorman0773/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chorman0773/subscriptions", "organizations_url": "https://api.github.com/users/chorman0773/orgs", "repos_url": "https://api.github.com/users/chorman0773/repos", "events_url": "https://api.github.com/users/chorman0773/events{/privacy}", "received_events_url": "https://api.github.com/users/chorman0773/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chorman0773", "id": 5026283, "node_id": "MDQ6VXNlcjUwMjYyODM=", "avatar_url": "https://avatars.githubusercontent.com/u/5026283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chorman0773", "html_url": "https://github.com/chorman0773", "followers_url": "https://api.github.com/users/chorman0773/followers", "following_url": "https://api.github.com/users/chorman0773/following{/other_user}", "gists_url": "https://api.github.com/users/chorman0773/gists{/gist_id}", "starred_url": "https://api.github.com/users/chorman0773/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chorman0773/subscriptions", "organizations_url": "https://api.github.com/users/chorman0773/orgs", "repos_url": "https://api.github.com/users/chorman0773/repos", "events_url": "https://api.github.com/users/chorman0773/events{/privacy}", "received_events_url": "https://api.github.com/users/chorman0773/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c52b9c10bfb5164015eb977ff498e0597ae63eb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c52b9c10bfb5164015eb977ff498e0597ae63eb1", "html_url": "https://github.com/rust-lang/rust/commit/c52b9c10bfb5164015eb977ff498e0597ae63eb1"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "a53946995ee1c43d484f35369c4e31d72fb9fecf", "filename": "compiler/rustc_codegen_llvm/src/asm.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/658be0d1cff1e84473f20f7301bf89d6d1249787/compiler%2Frustc_codegen_llvm%2Fsrc%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/658be0d1cff1e84473f20f7301bf89d6d1249787/compiler%2Frustc_codegen_llvm%2Fsrc%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fasm.rs?ref=658be0d1cff1e84473f20f7301bf89d6d1249787", "patch": "@@ -604,7 +604,8 @@ fn reg_to_llvm(reg: InlineAsmRegOrRegClass, layout: Option<&TyAndLayout<'_>>) ->\n             InlineAsmRegClass::X86(\n                 X86InlineAsmRegClass::x87_reg\n                 | X86InlineAsmRegClass::mmx_reg\n-                | X86InlineAsmRegClass::kreg0,\n+                | X86InlineAsmRegClass::kreg0\n+                | X86InlineAsmRegClass::tmm_reg,\n             ) => unreachable!(\"clobber-only\"),\n             InlineAsmRegClass::Wasm(WasmInlineAsmRegClass::local) => \"r\",\n             InlineAsmRegClass::Bpf(BpfInlineAsmRegClass::reg) => \"r\",\n@@ -692,7 +693,8 @@ fn modifier_to_llvm(\n         InlineAsmRegClass::X86(\n             X86InlineAsmRegClass::x87_reg\n             | X86InlineAsmRegClass::mmx_reg\n-            | X86InlineAsmRegClass::kreg0,\n+            | X86InlineAsmRegClass::kreg0\n+            | X86InlineAsmRegClass::tmm_reg,\n         ) => {\n             unreachable!(\"clobber-only\")\n         }\n@@ -766,7 +768,8 @@ fn dummy_output_type<'ll>(cx: &CodegenCx<'ll, '_>, reg: InlineAsmRegClass) -> &'\n         InlineAsmRegClass::X86(\n             X86InlineAsmRegClass::x87_reg\n             | X86InlineAsmRegClass::mmx_reg\n-            | X86InlineAsmRegClass::kreg0,\n+            | X86InlineAsmRegClass::kreg0\n+            | X86InlineAsmRegClass::tmm_reg,\n         ) => {\n             unreachable!(\"clobber-only\")\n         }"}, {"sha": "5c9c16350e469b3a96fa4d42de2f8b7fc0d4548a", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/658be0d1cff1e84473f20f7301bf89d6d1249787/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/658be0d1cff1e84473f20f7301bf89d6d1249787/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=658be0d1cff1e84473f20f7301bf89d6d1249787", "patch": "@@ -1408,6 +1408,7 @@ symbols! {\n         thread_local_macro,\n         thumb2,\n         thumb_mode: \"thumb-mode\",\n+        tmm_reg,\n         todo_macro,\n         tool_attributes,\n         tool_lints,"}, {"sha": "e35035fd25af6e52263aad4218d15b16a73d092b", "filename": "compiler/rustc_target/src/asm/x86.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/658be0d1cff1e84473f20f7301bf89d6d1249787/compiler%2Frustc_target%2Fsrc%2Fasm%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/658be0d1cff1e84473f20f7301bf89d6d1249787/compiler%2Frustc_target%2Fsrc%2Fasm%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fasm%2Fx86.rs?ref=658be0d1cff1e84473f20f7301bf89d6d1249787", "patch": "@@ -17,6 +17,7 @@ def_reg_class! {\n         kreg0,\n         mmx_reg,\n         x87_reg,\n+        tmm_reg,\n     }\n }\n \n@@ -41,6 +42,7 @@ impl X86InlineAsmRegClass {\n             Self::xmm_reg | Self::ymm_reg | Self::zmm_reg => &['x', 'y', 'z'],\n             Self::kreg | Self::kreg0 => &[],\n             Self::mmx_reg | Self::x87_reg => &[],\n+            Self::tmm_reg => &[],\n         }\n     }\n \n@@ -80,6 +82,7 @@ impl X86InlineAsmRegClass {\n             },\n             Self::kreg | Self::kreg0 => None,\n             Self::mmx_reg | Self::x87_reg => None,\n+            Self::tmm_reg => None,\n         }\n     }\n \n@@ -98,6 +101,7 @@ impl X86InlineAsmRegClass {\n             Self::zmm_reg => Some(('z', \"zmm0\")),\n             Self::kreg | Self::kreg0 => None,\n             Self::mmx_reg | Self::x87_reg => None,\n+            Self::tmm_reg => None,\n         }\n     }\n \n@@ -135,6 +139,7 @@ impl X86InlineAsmRegClass {\n             },\n             Self::kreg0 => &[],\n             Self::mmx_reg | Self::x87_reg => &[],\n+            Self::tmm_reg => &[],\n         }\n     }\n }\n@@ -320,6 +325,14 @@ def_regs! {\n         st5: x87_reg = [\"st(5)\"],\n         st6: x87_reg = [\"st(6)\"],\n         st7: x87_reg = [\"st(7)\"],\n+        tmm0: tmm_reg = [\"tmm0\"] % x86_64_only,\n+        tmm1: tmm_reg = [\"tmm1\"] % x86_64_only,\n+        tmm2: tmm_reg = [\"tmm2\"] % x86_64_only,\n+        tmm3: tmm_reg = [\"tmm3\"] % x86_64_only,\n+        tmm4: tmm_reg = [\"tmm4\"] % x86_64_only,\n+        tmm5: tmm_reg = [\"tmm5\"] % x86_64_only,\n+        tmm6: tmm_reg = [\"tmm6\"] % x86_64_only,\n+        tmm7: tmm_reg = [\"tmm7\"] % x86_64_only,\n         #error = [\"bp\", \"bpl\", \"ebp\", \"rbp\"] =>\n             \"the frame pointer cannot be used as an operand for inline asm\",\n         #error = [\"sp\", \"spl\", \"esp\", \"rsp\"] =>"}]}