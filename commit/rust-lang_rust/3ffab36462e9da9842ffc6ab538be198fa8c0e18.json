{"sha": "3ffab36462e9da9842ffc6ab538be198fa8c0e18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZmFiMzY0NjJlOWRhOTg0MmZmYzZhYjUzOGJlMTk4ZmE4YzBlMTg=", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "matti@marinelayer.io", "date": "2019-05-30T11:59:12Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2019-05-30T11:59:12Z"}, "message": "Migrate unstable-book to MdBook2", "tree": {"sha": "29f00045c2655d2a66a1a20f755adf927f208e5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29f00045c2655d2a66a1a20f755adf927f208e5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ffab36462e9da9842ffc6ab538be198fa8c0e18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ffab36462e9da9842ffc6ab538be198fa8c0e18", "html_url": "https://github.com/rust-lang/rust/commit/3ffab36462e9da9842ffc6ab538be198fa8c0e18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ffab36462e9da9842ffc6ab538be198fa8c0e18/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c28084ac16af4ab594b6860958df140e7c876a13", "url": "https://api.github.com/repos/rust-lang/rust/commits/c28084ac16af4ab594b6860958df140e7c876a13", "html_url": "https://github.com/rust-lang/rust/commit/c28084ac16af4ab594b6860958df140e7c876a13"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "b98a6b5e1814b29e450b10b36601231e26aa6c0f", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=3ffab36462e9da9842ffc6ab538be198fa8c0e18", "patch": "@@ -134,7 +134,7 @@ impl Step for UnstableBook {\n             target: self.target,\n             name: INTERNER.intern_str(\"unstable-book\"),\n             src: builder.md_doc_out(self.target),\n-            version: RustbookVersion::MdBook1,\n+            version: RustbookVersion::MdBook2,\n         })\n     }\n }"}, {"sha": "2a1b6397781f95fc9a98fbb620c6e5b2dd29aae8", "filename": "src/doc/unstable-book/src/language-features/asm.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fasm.md", "raw_url": "https://github.com/rust-lang/rust/raw/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fasm.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fasm.md?ref=3ffab36462e9da9842ffc6ab538be198fa8c0e18", "patch": "@@ -190,4 +190,4 @@ constraints, etc.\n [llvm-docs]: http://llvm.org/docs/LangRef.html#inline-assembler-expressions\n \n If you need more power and don't mind losing some of the niceties of\n-`asm!`, check out [global_asm](language-features/global-asm.html).\n+`asm!`, check out [global_asm](global-asm.md)."}, {"sha": "bf0819ec920b7f0462ad912fa87ad80124e1c34c", "filename": "src/doc/unstable-book/src/language-features/box-patterns.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fbox-patterns.md", "raw_url": "https://github.com/rust-lang/rust/raw/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fbox-patterns.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fbox-patterns.md?ref=3ffab36462e9da9842ffc6ab538be198fa8c0e18", "patch": "@@ -4,7 +4,7 @@ The tracking issue for this feature is: [#29641]\n \n [#29641]: https://github.com/rust-lang/rust/issues/29641\n \n-See also [`box_syntax`](language-features/box-syntax.html)\n+See also [`box_syntax`](box-syntax.md)\n \n ------------------------\n "}, {"sha": "9569974d22ca28124cd888e78c56a9a81d15aedf", "filename": "src/doc/unstable-book/src/language-features/box-syntax.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fbox-syntax.md", "raw_url": "https://github.com/rust-lang/rust/raw/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fbox-syntax.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fbox-syntax.md?ref=3ffab36462e9da9842ffc6ab538be198fa8c0e18", "patch": "@@ -4,7 +4,7 @@ The tracking issue for this feature is: [#49733]\n \n [#49733]: https://github.com/rust-lang/rust/issues/49733\n \n-See also [`box_patterns`](language-features/box-patterns.html)\n+See also [`box_patterns`](box-patterns.md)\n \n ------------------------\n "}, {"sha": "bc55fe80fa64c599f954ebdedd613ebba60465e1", "filename": "src/doc/unstable-book/src/language-features/global-asm.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fglobal-asm.md", "raw_url": "https://github.com/rust-lang/rust/raw/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fglobal-asm.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fglobal-asm.md?ref=3ffab36462e9da9842ffc6ab538be198fa8c0e18", "patch": "@@ -75,4 +75,4 @@ usages and placed the larger, single usage in the crate root.\n If you don't need quite as much power and flexibility as\n `global_asm!` provides, and you don't mind restricting your inline\n assembly to `fn` bodies only, you might try the\n-[asm](language-features/asm.html) feature instead.\n+[asm](asm.md) feature instead."}, {"sha": "3ee024c6b588361e8f10a3f593aebf1f60b6333d", "filename": "src/doc/unstable-book/src/language-features/lang-items.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Flang-items.md", "raw_url": "https://github.com/rust-lang/rust/raw/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Flang-items.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Flang-items.md?ref=3ffab36462e9da9842ffc6ab538be198fa8c0e18", "patch": "@@ -192,7 +192,7 @@ such as \"```undefined reference to `__rust_probestack'```\". Using this crate\n also requires enabling the library feature `compiler_builtins_lib`. You can read\n more about this [here][compiler-builtins-lib].\n \n-[compiler-builtins-lib]: library-features/compiler-builtins-lib.html\n+[compiler-builtins-lib]: ../library-features/compiler-builtins-lib.md\n \n ## More about the language items\n "}, {"sha": "22dae0c89a6ff5a460ef4c04679f2b29c24ca0c6", "filename": "src/doc/unstable-book/src/language-features/non-ascii-idents.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fnon-ascii-idents.md", "raw_url": "https://github.com/rust-lang/rust/raw/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fnon-ascii-idents.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fnon-ascii-idents.md?ref=3ffab36462e9da9842ffc6ab538be198fa8c0e18", "patch": "@@ -45,4 +45,4 @@ that does _not_ occur in the set of [strict keywords].\n \n [`XID_start`]:  http://unicode.org/cldr/utility/list-unicodeset.jsp?a=%5B%3AXID_Start%3A%5D&abb=on&g=&i=\n [`XID_continue`]: http://unicode.org/cldr/utility/list-unicodeset.jsp?a=%5B%3AXID_Continue%3A%5D&abb=on&g=&i=\n-[strict keywords]: ../reference/keywords.html#strict-keywords\n+[strict keywords]: ../../reference/keywords.md#strict-keywords"}, {"sha": "bf5dd81d735af768be0994f50fa6fb6193be9569", "filename": "src/doc/unstable-book/src/language-features/plugin-registrar.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin-registrar.md", "raw_url": "https://github.com/rust-lang/rust/raw/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin-registrar.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin-registrar.md?ref=3ffab36462e9da9842ffc6ab538be198fa8c0e18", "patch": "@@ -8,6 +8,6 @@ This feature is part of \"compiler plugins.\" It will often be used with the\n [`plugin`] and `rustc_private` features as well. For more details, see\n their docs.\n \n-[`plugin`]: language-features/plugin.html\n+[`plugin`]: plugin.md\n \n ------------------------"}, {"sha": "43fffd680372fb1330454972561e42abd40a434d", "filename": "src/doc/unstable-book/src/language-features/plugin.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md", "raw_url": "https://github.com/rust-lang/rust/raw/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md?ref=3ffab36462e9da9842ffc6ab538be198fa8c0e18", "patch": "@@ -8,7 +8,7 @@ The tracking issue for this feature is: [#29597]\n This feature is part of \"compiler plugins.\" It will often be used with the\n [`plugin_registrar`] and `rustc_private` features.\n \n-[`plugin_registrar`]: language-features/plugin-registrar.html\n+[`plugin_registrar`]: plugin-registrar.md\n \n ------------------------\n \n@@ -39,7 +39,7 @@ of a library.\n \n Plugins can extend Rust's syntax in various ways. One kind of syntax extension\n is the procedural macro. These are invoked the same way as [ordinary\n-macros](../book/macros.html), but the expansion is performed by arbitrary Rust\n+macros](../../book/macros.md), but the expansion is performed by arbitrary Rust\n code that manipulates syntax trees at\n compile time.\n \n@@ -130,7 +130,7 @@ The advantages over a simple `fn(&str) -> u32` are:\n   a way to define new literal syntax for any data type.\n \n In addition to procedural macros, you can define new\n-[`derive`](../reference/attributes/derive.html)-like attributes and other kinds\n+[`derive`](../../reference/attributes/derive.md)-like attributes and other kinds\n of extensions.  See `Registry::register_syntax_extension` and the\n `SyntaxExtension` enum.  For a more involved macro example, see\n [`regex_macros`](https://github.com/rust-lang/regex/blob/master/regex_macros/src/lib.rs).\n@@ -174,7 +174,7 @@ quasiquote as an ordinary plugin library.\n # Lint plugins\n \n Plugins can extend [Rust's lint\n-infrastructure](../reference/attributes/diagnostics.html#lint-check-attributes) with\n+infrastructure](../../reference/attributes/diagnostics.md#lint-check-attributes) with\n additional checks for code style, safety, etc. Now let's write a plugin\n [`lint_plugin_test.rs`](https://github.com/rust-lang/rust/blob/master/src/test/ui-fulldeps/auxiliary/lint_plugin_test.rs)\n that warns about any item named `lintme`.\n@@ -253,7 +253,7 @@ mostly use the same infrastructure as lint plugins, and provide examples of how\n to access type information.\n \n Lints defined by plugins are controlled by the usual [attributes and compiler\n-flags](../reference/attributes/diagnostics.html#lint-check-attributes), e.g.\n+flags](../../reference/attributes/diagnostics.md#lint-check-attributes), e.g.\n `#[allow(test_lint)]` or `-A test-lint`. These identifiers are derived from the\n first argument to `declare_lint!`, with appropriate case and punctuation\n conversion."}, {"sha": "71003fba00ba237e9fed3601258d7aa18c502165", "filename": "src/doc/unstable-book/src/language-features/unboxed-closures.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Funboxed-closures.md", "raw_url": "https://github.com/rust-lang/rust/raw/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Funboxed-closures.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Funboxed-closures.md?ref=3ffab36462e9da9842ffc6ab538be198fa8c0e18", "patch": "@@ -2,7 +2,7 @@\n \n The tracking issue for this feature is [#29625]\n \n-See Also: [`fn_traits`](library-features/fn-traits.html)\n+See Also: [`fn_traits`](../library-features/fn-traits.md)\n \n [#29625]: https://github.com/rust-lang/rust/issues/29625\n "}, {"sha": "29a8aecee6c2fd26e5420a2c06640823e01b99fa", "filename": "src/doc/unstable-book/src/library-features/fn-traits.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Ffn-traits.md", "raw_url": "https://github.com/rust-lang/rust/raw/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Ffn-traits.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Ffn-traits.md?ref=3ffab36462e9da9842ffc6ab538be198fa8c0e18", "patch": "@@ -2,7 +2,7 @@\n \n The tracking issue for this feature is [#29625]\n \n-See Also: [`unboxed_closures`](language-features/unboxed-closures.html)\n+See Also: [`unboxed_closures`](../language-features/unboxed-closures.md)\n \n [#29625]: https://github.com/rust-lang/rust/issues/29625\n "}, {"sha": "97e32cc0acb121ef319d51fa79275dbd5e2073ba", "filename": "src/doc/unstable-book/src/library-features/fnbox.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Ffnbox.md", "raw_url": "https://github.com/rust-lang/rust/raw/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Ffnbox.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Ffnbox.md?ref=3ffab36462e9da9842ffc6ab538be198fa8c0e18", "patch": "@@ -27,6 +27,6 @@ impl<A, F> Fn for &F where F: Fn<A> + ?Sized {}\n \n Before the introduction of [`unsized_locals`][unsized_locals], we had been unable to provide the former impls. That means, unlike `&dyn Fn()` or `&mut dyn FnMut()` we could not use `Box<dyn FnOnce()>` at that time.\n \n-[unsized_locals]: language-features/unsized-locals.html\n+[unsized_locals]: ../language-features/unsized-locals.md\n \n `FnBox()` is an alternative approach to `Box<dyn FnBox()>` is delegated to `FnBox::call_box` which doesn't need unsized locals. As we now have `Box<dyn FnOnce()>` working, the `fnbox` feature is going to be removed."}, {"sha": "554c52c3c9c2761c7f6768a51923c7b36fdbf2c5", "filename": "src/doc/unstable-book/src/the-unstable-book.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Fthe-unstable-book.md", "raw_url": "https://github.com/rust-lang/rust/raw/3ffab36462e9da9842ffc6ab538be198fa8c0e18/src%2Fdoc%2Funstable-book%2Fsrc%2Fthe-unstable-book.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fthe-unstable-book.md?ref=3ffab36462e9da9842ffc6ab538be198fa8c0e18", "patch": "@@ -14,7 +14,7 @@ fn main() {\n \n The `box_syntax` feature [has a chapter][box] describing how to use it.\n \n-[box]: language-features/box-syntax.html\n+[box]: language-features/box-syntax.md\n \n Because this documentation relates to unstable features, we make no guarantees\n that what is contained here is accurate or up to date. It's developed on a"}]}