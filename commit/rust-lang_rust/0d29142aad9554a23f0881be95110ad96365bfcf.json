{"sha": "0d29142aad9554a23f0881be95110ad96365bfcf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkMjkxNDJhYWQ5NTU0YTIzZjA4ODFiZTk1MTEwYWQ5NjM2NWJmY2Y=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-08-13T22:59:14Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-08-13T22:59:14Z"}, "message": "expand: `expand_fragment` -> `fully_expand_fragment`", "tree": {"sha": "7236368088a78b6ea81ca6e39da8f4a1d7932766", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7236368088a78b6ea81ca6e39da8f4a1d7932766"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d29142aad9554a23f0881be95110ad96365bfcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d29142aad9554a23f0881be95110ad96365bfcf", "html_url": "https://github.com/rust-lang/rust/commit/0d29142aad9554a23f0881be95110ad96365bfcf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d29142aad9554a23f0881be95110ad96365bfcf/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60960a260f7b5c695fd0717311d72ce62dd4eb43", "url": "https://api.github.com/repos/rust-lang/rust/commits/60960a260f7b5c695fd0717311d72ce62dd4eb43", "html_url": "https://github.com/rust-lang/rust/commit/60960a260f7b5c695fd0717311d72ce62dd4eb43"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "21cf232ecc34a6d37df55ae0c2437ee27985caf3", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0d29142aad9554a23f0881be95110ad96365bfcf/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d29142aad9554a23f0881be95110ad96365bfcf/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=0d29142aad9554a23f0881be95110ad96365bfcf", "patch": "@@ -118,13 +118,13 @@ macro_rules! ast_fragments {\n \n         impl<'a, 'b> MutVisitor for MacroExpander<'a, 'b> {\n             fn filter_map_expr(&mut self, expr: P<ast::Expr>) -> Option<P<ast::Expr>> {\n-                self.expand_fragment(AstFragment::OptExpr(Some(expr))).make_opt_expr()\n+                self.fully_expand_fragment(AstFragment::OptExpr(Some(expr))).make_opt_expr()\n             }\n             $($(fn $mut_visit_ast(&mut self, ast: &mut $AstTy) {\n-                visit_clobber(ast, |ast| self.expand_fragment(AstFragment::$Kind(ast)).$make_ast());\n+                visit_clobber(ast, |ast| self.fully_expand_fragment(AstFragment::$Kind(ast)).$make_ast());\n             })?)*\n             $($(fn $flat_map_ast_elt(&mut self, ast_elt: <$AstTy as IntoIterator>::Item) -> $AstTy {\n-                self.expand_fragment(AstFragment::$Kind(smallvec![ast_elt])).$make_ast()\n+                self.fully_expand_fragment(AstFragment::$Kind(smallvec![ast_elt])).$make_ast()\n             })?)*\n         }\n \n@@ -265,7 +265,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n             tokens: None,\n         })]);\n \n-        match self.expand_fragment(krate_item).make_items().pop().map(P::into_inner) {\n+        match self.fully_expand_fragment(krate_item).make_items().pop().map(P::into_inner) {\n             Some(ast::Item { attrs, node: ast::ItemKind::Mod(module), .. }) => {\n                 krate.attrs = attrs;\n                 krate.module = module;\n@@ -285,8 +285,8 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n         krate\n     }\n \n-    // Fully expand all macro invocations in this AST fragment.\n-    fn expand_fragment(&mut self, input_fragment: AstFragment) -> AstFragment {\n+    // Recursively expand all macro invocations in this AST fragment.\n+    fn fully_expand_fragment(&mut self, input_fragment: AstFragment) -> AstFragment {\n         let orig_expansion_data = self.cx.current_expansion.clone();\n         self.cx.current_expansion.depth = 0;\n "}]}