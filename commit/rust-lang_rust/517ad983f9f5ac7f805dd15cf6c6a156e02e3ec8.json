{"sha": "517ad983f9f5ac7f805dd15cf6c6a156e02e3ec8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxN2FkOTgzZjlmNWFjN2Y4MDVkZDE1Y2Y2YzZhMTU2ZTAyZTNlYzg=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-08-06T20:09:10Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-08-06T20:25:34Z"}, "message": "Handle interpolated paths in pattern parsing. Fixes #3007.\n\nWe might need to use is_ident_or_path in a for other places too.", "tree": {"sha": "194520faef38ce641175fbef688c9c0b68837a15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/194520faef38ce641175fbef688c9c0b68837a15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/517ad983f9f5ac7f805dd15cf6c6a156e02e3ec8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/517ad983f9f5ac7f805dd15cf6c6a156e02e3ec8", "html_url": "https://github.com/rust-lang/rust/commit/517ad983f9f5ac7f805dd15cf6c6a156e02e3ec8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/517ad983f9f5ac7f805dd15cf6c6a156e02e3ec8/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4544c015b3bd45b18612ede3e0c091ec3ee27e8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4544c015b3bd45b18612ede3e0c091ec3ee27e8a", "html_url": "https://github.com/rust-lang/rust/commit/4544c015b3bd45b18612ede3e0c091ec3ee27e8a"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "b4fc1f5c484b22410ef64a57522f3ac5f3215bb5", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/517ad983f9f5ac7f805dd15cf6c6a156e02e3ec8/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/517ad983f9f5ac7f805dd15cf6c6a156e02e3ec8/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=517ad983f9f5ac7f805dd15cf6c6a156e02e3ec8", "patch": "@@ -73,7 +73,8 @@ fn add_new_extension(cx: ext_ctxt, sp: span, name: ident,\n                                                ~[rhs]);\n                     let p = parser(cx.parse_sess(), cx.cfg(),\n                                    trncbr as reader, SOURCE_FILE);\n-                    return mr_expr(p.parse_expr());\n+                    let e = p.parse_expr();\n+                    return mr_expr(e);\n                   }\n                   failure(sp, msg) => if sp.lo >= best_fail_spot.lo {\n                     best_fail_spot = sp;"}, {"sha": "4a34b66793704c8c9e47558ca60eb5d5a9554bf1", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/517ad983f9f5ac7f805dd15cf6c6a156e02e3ec8/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/517ad983f9f5ac7f805dd15cf6c6a156e02e3ec8/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=517ad983f9f5ac7f805dd15cf6c6a156e02e3ec8", "patch": "@@ -3,7 +3,8 @@ import print::pprust::expr_to_str;\n import result::result;\n import either::{either, left, right};\n import std::map::{hashmap, str_hash};\n-import token::{can_begin_expr, is_ident, is_plain_ident, INTERPOLATED};\n+import token::{can_begin_expr, is_ident, is_ident_or_path, is_plain_ident,\n+               INTERPOLATED};\n import codemap::{span,fss_none};\n import util::interner;\n import ast_util::{spanned, respan, mk_sp, ident_to_path, operator_prec};\n@@ -1748,7 +1749,7 @@ class parser {\n             }\n           }\n           tok => {\n-            if !is_ident(tok) ||\n+            if !is_ident_or_path(tok) ||\n                     self.is_keyword(~\"true\") || self.is_keyword(~\"false\") {\n                 let val = self.parse_expr_res(RESTRICT_NO_BAR_OP);\n                 if self.eat_keyword(~\"to\") {"}, {"sha": "9e9a3bbca56c63271bde3567fe18fc60284329f3", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/517ad983f9f5ac7f805dd15cf6c6a156e02e3ec8/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/517ad983f9f5ac7f805dd15cf6c6a156e02e3ec8/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=517ad983f9f5ac7f805dd15cf6c6a156e02e3ec8", "patch": "@@ -262,6 +262,13 @@ pure fn is_ident(t: token) -> bool {\n     alt t { IDENT(_, _) => true, _ => false }\n }\n \n+pure fn is_ident_or_path(t: token) -> bool {\n+    alt t {\n+      IDENT(_, _) | INTERPOLATED(nt_path(*)) => true,\n+      _ => false\n+    }\n+}\n+\n pure fn is_plain_ident(t: token) -> bool {\n     alt t { IDENT(_, false) => true, _ => false }\n }"}]}