{"sha": "f54df449072895f258876adf9545fe3a0840492f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1NGRmNDQ5MDcyODk1ZjI1ODg3NmFkZjk1NDVmZTNhMDg0MDQ5MmY=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2019-04-11T13:56:35Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2019-04-11T13:56:35Z"}, "message": "Remove note about transmute for float bitpatterns.", "tree": {"sha": "cf8b07d87302c91ea468612d8b6f7c7273aba22d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf8b07d87302c91ea468612d8b6f7c7273aba22d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f54df449072895f258876adf9545fe3a0840492f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f54df449072895f258876adf9545fe3a0840492f", "html_url": "https://github.com/rust-lang/rust/commit/f54df449072895f258876adf9545fe3a0840492f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f54df449072895f258876adf9545fe3a0840492f/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f9f2c0095cd683b94adca133f2733aa1f88bb19", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f9f2c0095cd683b94adca133f2733aa1f88bb19", "html_url": "https://github.com/rust-lang/rust/commit/9f9f2c0095cd683b94adca133f2733aa1f88bb19"}], "stats": {"total": 10, "additions": 0, "deletions": 10}, "files": [{"sha": "2f725db22ca6a8e4648635ee28a6e9a40d5fe9fe", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f54df449072895f258876adf9545fe3a0840492f/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f54df449072895f258876adf9545fe3a0840492f/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=f54df449072895f258876adf9545fe3a0840492f", "patch": "@@ -737,16 +737,6 @@ extern \"rust-intrinsic\" {\n     ///\n     /// There are a few things that `transmute` is really useful for.\n     ///\n-    /// Getting the bitpattern of a floating point type (or, more generally,\n-    /// type punning, when `T` and `U` aren't pointers):\n-    ///\n-    /// ```\n-    /// let bitpattern = unsafe {\n-    ///     std::mem::transmute::<f32, u32>(1.0)\n-    /// };\n-    /// assert_eq!(bitpattern, 0x3F800000);\n-    /// ```\n-    ///\n     /// Turning a pointer into a function pointer. This is *not* portable to\n     /// machines where function pointers and data pointers have different sizes.\n     ///"}]}