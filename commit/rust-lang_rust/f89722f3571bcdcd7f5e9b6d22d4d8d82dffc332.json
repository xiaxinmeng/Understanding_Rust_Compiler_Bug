{"sha": "f89722f3571bcdcd7f5e9b6d22d4d8d82dffc332", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4OTcyMmYzNTcxYmNkY2Q3ZjVlOWI2ZDIyZDRkOGQ4MmRmZmMzMzI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-27T00:00:08Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-27T00:04:33Z"}, "message": "Better exe probing", "tree": {"sha": "690249f8406f074866604ffa98045e5f476e83d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/690249f8406f074866604ffa98045e5f476e83d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f89722f3571bcdcd7f5e9b6d22d4d8d82dffc332", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f89722f3571bcdcd7f5e9b6d22d4d8d82dffc332", "html_url": "https://github.com/rust-lang/rust/commit/f89722f3571bcdcd7f5e9b6d22d4d8d82dffc332", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f89722f3571bcdcd7f5e9b6d22d4d8d82dffc332/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1a4e810a4909c36eabf6f4b746a021c2074c2c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1a4e810a4909c36eabf6f4b746a021c2074c2c3", "html_url": "https://github.com/rust-lang/rust/commit/b1a4e810a4909c36eabf6f4b746a021c2074c2c3"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "9916e52c48090eb966af85b3b02707b7e6b7c1b7", "filename": "crates/ra_toolchain/src/lib.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f89722f3571bcdcd7f5e9b6d22d4d8d82dffc332/crates%2Fra_toolchain%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f89722f3571bcdcd7f5e9b6d22d4d8d82dffc332/crates%2Fra_toolchain%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_toolchain%2Fsrc%2Flib.rs?ref=f89722f3571bcdcd7f5e9b6d22d4d8d82dffc332", "patch": "@@ -46,22 +46,23 @@ fn get_path_for_executable(executable_name: &'static str) -> PathBuf {\n         path.push(\".cargo\");\n         path.push(\"bin\");\n         path.push(executable_name);\n-        if path.is_file() {\n+        if let Some(path) = probe(path) {\n             return path;\n         }\n     }\n+\n     executable_name.into()\n }\n \n fn lookup_in_path(exec: &str) -> bool {\n     let paths = env::var_os(\"PATH\").unwrap_or_default();\n-    let mut candidates = env::split_paths(&paths).flat_map(|path| {\n-        let candidate = path.join(&exec);\n-        let with_exe = match env::consts::EXE_EXTENSION {\n-            \"\" => None,\n-            it => Some(candidate.with_extension(it)),\n-        };\n-        iter::once(candidate).chain(with_exe)\n-    });\n-    candidates.any(|it| it.is_file())\n+    env::split_paths(&paths).map(|path| path.join(exec)).find_map(probe).is_some()\n+}\n+\n+fn probe(path: PathBuf) -> Option<PathBuf> {\n+    let with_extension = match env::consts::EXE_EXTENSION {\n+        \"\" => None,\n+        it => Some(path.with_extension(it)),\n+    };\n+    iter::once(path).chain(with_extension).find(|it| it.is_file())\n }"}]}