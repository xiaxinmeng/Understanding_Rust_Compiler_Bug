{"sha": "146d040f0b187876ac85993ae15427ebb7438eb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0NmQwNDBmMGIxODc4NzZhYzg1OTkzYWUxNTQyN2ViYjc0MzhlYjc=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-04-11T18:42:06Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-04-11T18:42:06Z"}, "message": "Reword tracking issue note", "tree": {"sha": "5fc57def2e3389367f29c66cb0ecefdb3f14b26a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fc57def2e3389367f29c66cb0ecefdb3f14b26a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/146d040f0b187876ac85993ae15427ebb7438eb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/146d040f0b187876ac85993ae15427ebb7438eb7", "html_url": "https://github.com/rust-lang/rust/commit/146d040f0b187876ac85993ae15427ebb7438eb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/146d040f0b187876ac85993ae15427ebb7438eb7/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ab97062cfddb6e5e5e32352dd15ca2243aba3ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ab97062cfddb6e5e5e32352dd15ca2243aba3ff", "html_url": "https://github.com/rust-lang/rust/commit/3ab97062cfddb6e5e5e32352dd15ca2243aba3ff"}], "stats": {"total": 747, "additions": 375, "deletions": 372}, "files": [{"sha": "f77593ed02a149b123b5d3e05252cb3efc03804e", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -1481,9 +1481,12 @@ fn leveled_feature_err<'a>(\n     };\n \n     match issue {\n-        None | Some(0) => {}\n+        None | Some(0) => {}  // We still accept `0` as a stand-in for backwards compatibility\n         Some(n) => {\n-            err.note(&format!(\"for more information, see tracking issue #{}\", n));\n+            err.note(&format!(\n+                \"for more information, see https://github.com/rust-lang/rust/issues/{}\",\n+                n,\n+            ));\n         }\n     }\n "}, {"sha": "c40accfd7c4a1f412cf37b3eb1955ad40101ba07", "filename": "src/test/ui/cast/cast-ptr-to-int-const.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fcast%2Fcast-ptr-to-int-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fcast%2Fcast-ptr-to-int-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcast%2Fcast-ptr-to-int-const.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: casting pointers to integers in constants is unstable\n LL |         main as u32\n    |         ^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51910\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51910\n    = help: add #![feature(const_raw_ptr_to_usize_cast)] to the crate attributes to enable\n \n error[E0658]: casting pointers to integers in constants is unstable\n@@ -13,7 +13,7 @@ error[E0658]: casting pointers to integers in constants is unstable\n LL |         &Y as *const u32 as u32\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51910\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51910\n    = help: add #![feature(const_raw_ptr_to_usize_cast)] to the crate attributes to enable\n \n error: aborting due to 2 previous errors"}, {"sha": "ec77789449aef507462a8302326721118574702d", "filename": "src/test/ui/conditional-compilation/cfg-attr-crate-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-crate-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-crate-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-crate-2.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: no_core is experimental\n LL | #![cfg_attr(broken, no_core)]\n    |                     ^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29639\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29639\n    = help: add #![feature(no_core)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "ad5177dc9c0e8b51ac3a0f9f61f19e7f7d55b794", "filename": "src/test/ui/conditional-compilation/cfg-attr-multi-invalid-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-invalid-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-invalid-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-invalid-1.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: no_core is experimental\n LL | #![cfg_attr(broken, no_core, no_std)]\n    |                     ^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29639\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29639\n    = help: add #![feature(no_core)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "675997758e6a5b4a8d4bc2cf09f5fd830134f258", "filename": "src/test/ui/conditional-compilation/cfg-attr-multi-invalid-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-invalid-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-invalid-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-invalid-2.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: no_core is experimental\n LL | #![cfg_attr(broken, no_std, no_core)]\n    |                             ^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29639\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29639\n    = help: add #![feature(no_core)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "ca3e3d9eff16dd671ca6d768ec1872c63c997626", "filename": "src/test/ui/conditional-compilation/cfg-attr-unknown-attribute-macro-expansion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-unknown-attribute-macro-expansion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-unknown-attribute-macro-expansion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-unknown-attribute-macro-expansion.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -7,7 +7,7 @@ LL |         #[cfg_attr(all(), unknown)]\n LL | foo!();\n    | ------- in this macro invocation\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "23ac3b85ee66d55aab9e02380724593062e9062b", "filename": "src/test/ui/consts/const-deref-ptr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconsts%2Fconst-deref-ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconsts%2Fconst-deref-ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-deref-ptr.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: dereferencing raw pointers in statics is unstable\n LL |     static C: u64 = unsafe {*(0xdeadbeef as *const u64)};\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51911\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51911\n    = help: add #![feature(const_raw_ptr_deref)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "069a8bfd4e704776945ac6dc1e8e141bc6b6930b", "filename": "src/test/ui/consts/const-eval/feature-gate-const_fn_union.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_fn_union.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_fn_union.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_fn_union.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: unions in const fn are unstable\n LL |     Foo { u }.i\n    |     ^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51909\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51909\n    = help: add #![feature(const_fn_union)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "5d3e88e4e58c2c3caa6fcd9d6b4da60c25838af6", "filename": "src/test/ui/consts/const-eval/feature-gate-const_panic.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_panic.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: panicking in constants is unstable\n LL | const Z: () = panic!(\"cheese\");\n    |               ^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51999\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51999\n    = help: add #![feature(const_panic)] to the crate attributes to enable\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n@@ -14,7 +14,7 @@ error[E0658]: panicking in constants is unstable\n LL | const X: () = unimplemented!();\n    |               ^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51999\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51999\n    = help: add #![feature(const_panic)] to the crate attributes to enable\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n@@ -24,7 +24,7 @@ error[E0658]: panicking in constants is unstable\n LL | const Y: () = unreachable!();\n    |               ^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51999\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51999\n    = help: add #![feature(const_panic)] to the crate attributes to enable\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n "}, {"sha": "e0af01aeef46bae1c9bfc651c61a03e49eb20300", "filename": "src/test/ui/consts/const-eval/match-test-ptr-null.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.rs?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -5,7 +5,7 @@ fn main() {\n     let _: [u8; 0] = [4; {\n         match &1 as *const i32 as usize {\n             //~^ ERROR casting pointers to integers in constants\n-            //~| NOTE for more information, see tracking issue #51910\n+            //~| NOTE for more information, see\n             0 => 42, //~ ERROR constant contains unimplemented expression type\n             //~^ NOTE \"pointer arithmetic or comparison\" needs an rfc before being allowed\n             //~| ERROR evaluation of constant value failed"}, {"sha": "79e278f68ad6966a7c00e39e24c3ecbf53ca62fc", "filename": "src/test/ui/consts/const-eval/match-test-ptr-null.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: casting pointers to integers in constants is unstable\n LL |         match &1 as *const i32 as usize {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51910\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51910\n    = help: add #![feature(const_raw_ptr_to_usize_cast)] to the crate attributes to enable\n \n error[E0019]: constant contains unimplemented expression type"}, {"sha": "5c1bbc6ba31cfaa8ac074a3fc6e992281f42e86b", "filename": "src/test/ui/consts/min_const_fn/min_const_fn_unsafe.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_unsafe.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_unsafe.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_unsafe.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: dereferencing raw pointers in constant functions is unstable\n LL | const fn bad_const_fn_deref_raw(x: *mut usize) -> &'static usize { unsafe { &*x } }\n    |                                                                             ^^^\n    |\n-   = note: for more information, see tracking issue #51911\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51911\n    = help: add #![feature(const_raw_ptr_deref)] to the crate attributes to enable\n \n error[E0658]: dereferencing raw pointers in constant functions is unstable\n@@ -13,7 +13,7 @@ error[E0658]: dereferencing raw pointers in constant functions is unstable\n LL | const unsafe fn bad_const_unsafe_deref_raw(x: *mut usize) -> usize { *x }\n    |                                                                      ^^\n    |\n-   = note: for more information, see tracking issue #51911\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51911\n    = help: add #![feature(const_raw_ptr_deref)] to the crate attributes to enable\n \n error[E0658]: dereferencing raw pointers in constant functions is unstable\n@@ -22,7 +22,7 @@ error[E0658]: dereferencing raw pointers in constant functions is unstable\n LL | const unsafe fn bad_const_unsafe_deref_raw_ref(x: *mut usize) -> &'static usize { &*x }\n    |                                                                                   ^^^\n    |\n-   = note: for more information, see tracking issue #51911\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51911\n    = help: add #![feature(const_raw_ptr_deref)] to the crate attributes to enable\n \n error[E0658]: unions in const fn are unstable\n@@ -31,7 +31,7 @@ error[E0658]: unions in const fn are unstable\n LL |     Foo { x: () }.y\n    |     ^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51909\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51909\n    = help: add #![feature(const_fn_union)] to the crate attributes to enable\n \n error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block"}, {"sha": "15d332aba1f86b55d3c961e7a6bc5b6ab956a1f3", "filename": "src/test/ui/consts/projection_qualif.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -16,7 +16,7 @@ error[E0658]: dereferencing raw pointers in constants is unstable\n LL |         unsafe { *b = 5; }\n    |                  ^^^^^^\n    |\n-   = note: for more information, see tracking issue #51911\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51911\n    = help: add #![feature(const_raw_ptr_deref)] to the crate attributes to enable\n \n error: aborting due to 3 previous errors"}, {"sha": "adb05e3fb2a1c654208e384e916be390a8a1872c", "filename": "src/test/ui/custom_attribute.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fcustom_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fcustom_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcustom_attribute.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: The attribute `foo` is currently unknown to the compiler and may h\n LL | #[foo]\n    |   ^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `foo` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -13,7 +13,7 @@ error[E0658]: The attribute `foo` is currently unknown to the compiler and may h\n LL |     #[foo]\n    |       ^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `foo` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -22,7 +22,7 @@ error[E0658]: The attribute `foo` is currently unknown to the compiler and may h\n LL |     #[foo]\n    |       ^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error: aborting due to 3 previous errors"}, {"sha": "30a4d4815ffba214b9639421be516e4323361090", "filename": "src/test/ui/error-codes/E0395.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ferror-codes%2FE0395.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ferror-codes%2FE0395.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0395.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: comparing raw pointers inside static\n LL | static BAZ: bool = unsafe { (&FOO as *const i32) == (&BAR as *const i32) };\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #53020\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/53020\n    = help: add #![feature(const_compare_raw_pointers)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "6d2d121e91c008fa41f079f1827da1e29ec2b934", "filename": "src/test/ui/error-codes/E0396.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ferror-codes%2FE0396.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ferror-codes%2FE0396.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0396.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: dereferencing raw pointers in constants is unstable\n LL | const VALUE: u8 = unsafe { *REG_ADDR };\n    |                            ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51911\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51911\n    = help: add #![feature(const_raw_ptr_deref)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "ff3f74addd25b71c46715d8b280569f63735831a", "filename": "src/test/ui/error-codes/E0658.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ferror-codes%2FE0658.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ferror-codes%2FE0658.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0658.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -6,7 +6,7 @@ LL | |     Bar(u64),\n LL | | }\n    | |_^\n    |\n-   = note: for more information, see tracking issue #35118\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/35118\n    = help: add #![feature(repr128)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "eb28ad410fa1260b8fd3b589b41726e41eabc80d", "filename": "src/test/ui/explore-issue-38412.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fexplore-issue-38412.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fexplore-issue-38412.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexplore-issue-38412.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: use of unstable library feature 'unstable_undeclared'\n LL |     let Record { a_stable_pub: _, a_unstable_declared_pub: _, a_unstable_undeclared_pub: _, .. } =\n    |                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38412\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38412\n    = help: add #![feature(unstable_undeclared)] to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_undeclared'\n@@ -13,7 +13,7 @@ error[E0658]: use of unstable library feature 'unstable_undeclared'\n LL |     r.a_unstable_undeclared_pub;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38412\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38412\n    = help: add #![feature(unstable_undeclared)] to the crate attributes to enable\n \n error[E0616]: field `b_crate` of struct `pub_and_stability::Record` is private\n@@ -40,7 +40,7 @@ error[E0658]: use of unstable library feature 'unstable_undeclared'\n LL |     t.2;\n    |     ^^^\n    |\n-   = note: for more information, see tracking issue #38412\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38412\n    = help: add #![feature(unstable_undeclared)] to the crate attributes to enable\n \n error[E0616]: field `3` of struct `pub_and_stability::Tuple` is private\n@@ -67,7 +67,7 @@ error[E0658]: use of unstable library feature 'unstable_undeclared'\n LL |     r.unstable_undeclared_trait_method();\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38412\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38412\n    = help: add #![feature(unstable_undeclared)] to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_undeclared'\n@@ -76,7 +76,7 @@ error[E0658]: use of unstable library feature 'unstable_undeclared'\n LL |     r.unstable_undeclared();\n    |       ^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38412\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38412\n    = help: add #![feature(unstable_undeclared)] to the crate attributes to enable\n \n error[E0624]: method `pub_crate` is private\n@@ -103,7 +103,7 @@ error[E0658]: use of unstable library feature 'unstable_undeclared'\n LL |     t.unstable_undeclared_trait_method();\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38412\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38412\n    = help: add #![feature(unstable_undeclared)] to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_undeclared'\n@@ -112,7 +112,7 @@ error[E0658]: use of unstable library feature 'unstable_undeclared'\n LL |     t.unstable_undeclared();\n    |       ^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38412\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38412\n    = help: add #![feature(unstable_undeclared)] to the crate attributes to enable\n \n error[E0624]: method `pub_crate` is private"}, {"sha": "b4ba3fded150d8ffa3f449d9918bbda144779a5d", "filename": "src/test/ui/feature-gate-optimize_attribute.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gate-optimize_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gate-optimize_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-optimize_attribute.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: #[optimize] attribute is an unstable feature\n LL | #[optimize(size)]\n    | ^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #54882\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54882\n    = help: add #![feature(optimize_attribute)] to the crate attributes to enable\n \n error[E0658]: #[optimize] attribute is an unstable feature\n@@ -13,7 +13,7 @@ error[E0658]: #[optimize] attribute is an unstable feature\n LL | #[optimize(speed)]\n    | ^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #54882\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54882\n    = help: add #![feature(optimize_attribute)] to the crate attributes to enable\n \n error[E0658]: #[optimize] attribute is an unstable feature\n@@ -22,7 +22,7 @@ error[E0658]: #[optimize] attribute is an unstable feature\n LL | #[optimize(banana)]\n    | ^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #54882\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54882\n    = help: add #![feature(optimize_attribute)] to the crate attributes to enable\n \n error[E0658]: #[optimize] attribute is an unstable feature\n@@ -31,7 +31,7 @@ error[E0658]: #[optimize] attribute is an unstable feature\n LL | #[optimize(size)]\n    | ^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #54882\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54882\n    = help: add #![feature(optimize_attribute)] to the crate attributes to enable\n \n error[E0658]: #[optimize] attribute is an unstable feature\n@@ -40,7 +40,7 @@ error[E0658]: #[optimize] attribute is an unstable feature\n LL | #![optimize(speed)]\n    | ^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #54882\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54882\n    = help: add #![feature(optimize_attribute)] to the crate attributes to enable\n \n error[E0722]: invalid argument"}, {"sha": "a1362901862434a479e2c1e4ed3b425a338746e7", "filename": "src/test/ui/feature-gate/feature-gate-c_variadic.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-c_variadic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-c_variadic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-c_variadic.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: C-varaidic functions are unstable\n LL | pub unsafe extern \"C\" fn test(_: i32, ap: ...) { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #44930\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44930\n    = help: add #![feature(c_variadic)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "4a653265f165a22813339407a18a3671e3010a52", "filename": "src/test/ui/feature-gate/feature-gate-static-nobundle-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-static-nobundle-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-static-nobundle-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-static-nobundle-2.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -1,6 +1,6 @@\n error[E0658]: kind=\"static-nobundle\" is feature gated\n    |\n-   = note: for more information, see tracking issue #37403\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/37403\n    = help: add #![feature(static_nobundle)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "0eb26ec8291e55199b48b4736569f11d97eb5e29", "filename": "src/test/ui/feature-gates/feature-gate-abi-msp430-interrupt.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi-msp430-interrupt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi-msp430-interrupt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi-msp430-interrupt.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: msp430-interrupt ABI is experimental and subject to change\n LL | extern \"msp430-interrupt\" fn foo() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38487\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38487\n    = help: add #![feature(abi_msp430_interrupt)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "e20ab0cb2f521ef7f7292ad66edc722a49d5f77e", "filename": "src/test/ui/feature-gates/feature-gate-abi.stderr", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -12,7 +12,7 @@ error[E0658]: platform intrinsics are experimental and possibly buggy\n LL | extern \"platform-intrinsic\" fn f2() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #27731\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n    = help: add #![feature(platform_intrinsics)] to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n@@ -29,7 +29,7 @@ error[E0658]: rust-call ABI is subject to change\n LL | extern \"rust-call\" fn f4() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n@@ -38,7 +38,7 @@ error[E0658]: msp430-interrupt ABI is experimental and subject to change\n LL | extern \"msp430-interrupt\" fn f5() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38487\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38487\n    = help: add #![feature(abi_msp430_interrupt)] to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n@@ -47,7 +47,7 @@ error[E0658]: PTX ABIs are experimental and subject to change\n LL | extern \"ptx-kernel\" fn f6() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38788\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38788\n    = help: add #![feature(abi_ptx)] to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n@@ -56,7 +56,7 @@ error[E0658]: x86-interrupt ABI is experimental and subject to change\n LL | extern \"x86-interrupt\" fn f7() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #40180\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/40180\n    = help: add #![feature(abi_x86_interrupt)] to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n@@ -73,7 +73,7 @@ error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n LL | extern \"amdgpu-kernel\" fn f9() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51575\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51575\n    = help: add #![feature(abi_amdgpu_kernel)] to the crate attributes to enable\n \n error[E0658]: intrinsics are subject to change\n@@ -90,7 +90,7 @@ error[E0658]: platform intrinsics are experimental and possibly buggy\n LL |     extern \"platform-intrinsic\" fn m2();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #27731\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n    = help: add #![feature(platform_intrinsics)] to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n@@ -107,7 +107,7 @@ error[E0658]: rust-call ABI is subject to change\n LL |     extern \"rust-call\" fn m4();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n@@ -116,7 +116,7 @@ error[E0658]: msp430-interrupt ABI is experimental and subject to change\n LL |     extern \"msp430-interrupt\" fn m5();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38487\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38487\n    = help: add #![feature(abi_msp430_interrupt)] to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n@@ -125,7 +125,7 @@ error[E0658]: PTX ABIs are experimental and subject to change\n LL |     extern \"ptx-kernel\" fn m6();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38788\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38788\n    = help: add #![feature(abi_ptx)] to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n@@ -134,7 +134,7 @@ error[E0658]: x86-interrupt ABI is experimental and subject to change\n LL |     extern \"x86-interrupt\" fn m7();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #40180\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/40180\n    = help: add #![feature(abi_x86_interrupt)] to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n@@ -151,7 +151,7 @@ error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n LL |     extern \"amdgpu-kernel\" fn m9();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51575\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51575\n    = help: add #![feature(abi_amdgpu_kernel)] to the crate attributes to enable\n \n error[E0658]: intrinsics are subject to change\n@@ -168,7 +168,7 @@ error[E0658]: platform intrinsics are experimental and possibly buggy\n LL |     extern \"platform-intrinsic\" fn dm2() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #27731\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n    = help: add #![feature(platform_intrinsics)] to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n@@ -185,7 +185,7 @@ error[E0658]: rust-call ABI is subject to change\n LL |     extern \"rust-call\" fn dm4() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n@@ -194,7 +194,7 @@ error[E0658]: msp430-interrupt ABI is experimental and subject to change\n LL |     extern \"msp430-interrupt\" fn dm5() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38487\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38487\n    = help: add #![feature(abi_msp430_interrupt)] to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n@@ -203,7 +203,7 @@ error[E0658]: PTX ABIs are experimental and subject to change\n LL |     extern \"ptx-kernel\" fn dm6() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38788\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38788\n    = help: add #![feature(abi_ptx)] to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n@@ -212,7 +212,7 @@ error[E0658]: x86-interrupt ABI is experimental and subject to change\n LL |     extern \"x86-interrupt\" fn dm7() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #40180\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/40180\n    = help: add #![feature(abi_x86_interrupt)] to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n@@ -229,7 +229,7 @@ error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n LL |     extern \"amdgpu-kernel\" fn dm9() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51575\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51575\n    = help: add #![feature(abi_amdgpu_kernel)] to the crate attributes to enable\n \n error[E0658]: intrinsics are subject to change\n@@ -246,7 +246,7 @@ error[E0658]: platform intrinsics are experimental and possibly buggy\n LL |     extern \"platform-intrinsic\" fn m2() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #27731\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n    = help: add #![feature(platform_intrinsics)] to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n@@ -263,7 +263,7 @@ error[E0658]: rust-call ABI is subject to change\n LL |     extern \"rust-call\" fn m4() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n@@ -272,7 +272,7 @@ error[E0658]: msp430-interrupt ABI is experimental and subject to change\n LL |     extern \"msp430-interrupt\" fn m5() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38487\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38487\n    = help: add #![feature(abi_msp430_interrupt)] to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n@@ -281,7 +281,7 @@ error[E0658]: PTX ABIs are experimental and subject to change\n LL |     extern \"ptx-kernel\" fn m6() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38788\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38788\n    = help: add #![feature(abi_ptx)] to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n@@ -290,7 +290,7 @@ error[E0658]: x86-interrupt ABI is experimental and subject to change\n LL |     extern \"x86-interrupt\" fn m7() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #40180\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/40180\n    = help: add #![feature(abi_x86_interrupt)] to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n@@ -307,7 +307,7 @@ error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n LL |     extern \"amdgpu-kernel\" fn m9() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51575\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51575\n    = help: add #![feature(abi_amdgpu_kernel)] to the crate attributes to enable\n \n error[E0658]: intrinsics are subject to change\n@@ -324,7 +324,7 @@ error[E0658]: platform intrinsics are experimental and possibly buggy\n LL |     extern \"platform-intrinsic\" fn im2() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #27731\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n    = help: add #![feature(platform_intrinsics)] to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n@@ -341,7 +341,7 @@ error[E0658]: rust-call ABI is subject to change\n LL |     extern \"rust-call\" fn im4() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n@@ -350,7 +350,7 @@ error[E0658]: msp430-interrupt ABI is experimental and subject to change\n LL |     extern \"msp430-interrupt\" fn im5() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38487\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38487\n    = help: add #![feature(abi_msp430_interrupt)] to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n@@ -359,7 +359,7 @@ error[E0658]: PTX ABIs are experimental and subject to change\n LL |     extern \"ptx-kernel\" fn im6() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38788\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38788\n    = help: add #![feature(abi_ptx)] to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n@@ -368,7 +368,7 @@ error[E0658]: x86-interrupt ABI is experimental and subject to change\n LL |     extern \"x86-interrupt\" fn im7() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #40180\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/40180\n    = help: add #![feature(abi_x86_interrupt)] to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n@@ -385,7 +385,7 @@ error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n LL |     extern \"amdgpu-kernel\" fn im9() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51575\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51575\n    = help: add #![feature(abi_amdgpu_kernel)] to the crate attributes to enable\n \n error[E0658]: intrinsics are subject to change\n@@ -402,7 +402,7 @@ error[E0658]: platform intrinsics are experimental and possibly buggy\n LL | type A2 = extern \"platform-intrinsic\" fn();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #27731\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n    = help: add #![feature(platform_intrinsics)] to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n@@ -419,7 +419,7 @@ error[E0658]: rust-call ABI is subject to change\n LL | type A4 = extern \"rust-call\" fn();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n@@ -428,7 +428,7 @@ error[E0658]: msp430-interrupt ABI is experimental and subject to change\n LL | type A5 = extern \"msp430-interrupt\" fn();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38487\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38487\n    = help: add #![feature(abi_msp430_interrupt)] to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n@@ -437,7 +437,7 @@ error[E0658]: PTX ABIs are experimental and subject to change\n LL | type A6 = extern \"ptx-kernel\" fn ();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38788\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38788\n    = help: add #![feature(abi_ptx)] to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n@@ -446,7 +446,7 @@ error[E0658]: x86-interrupt ABI is experimental and subject to change\n LL | type A7 = extern \"x86-interrupt\" fn();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #40180\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/40180\n    = help: add #![feature(abi_x86_interrupt)] to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n@@ -463,7 +463,7 @@ error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n LL | type A9 = extern \"amdgpu-kernel\" fn();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51575\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51575\n    = help: add #![feature(abi_amdgpu_kernel)] to the crate attributes to enable\n \n error[E0658]: intrinsics are subject to change\n@@ -480,7 +480,7 @@ error[E0658]: platform intrinsics are experimental and possibly buggy\n LL | extern \"platform-intrinsic\" {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #27731\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n    = help: add #![feature(platform_intrinsics)] to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n@@ -497,7 +497,7 @@ error[E0658]: rust-call ABI is subject to change\n LL | extern \"rust-call\" {}\n    | ^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n@@ -506,7 +506,7 @@ error[E0658]: msp430-interrupt ABI is experimental and subject to change\n LL | extern \"msp430-interrupt\" {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38487\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38487\n    = help: add #![feature(abi_msp430_interrupt)] to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n@@ -515,7 +515,7 @@ error[E0658]: PTX ABIs are experimental and subject to change\n LL | extern \"ptx-kernel\" {}\n    | ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #38788\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/38788\n    = help: add #![feature(abi_ptx)] to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n@@ -524,7 +524,7 @@ error[E0658]: x86-interrupt ABI is experimental and subject to change\n LL | extern \"x86-interrupt\" {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #40180\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/40180\n    = help: add #![feature(abi_x86_interrupt)] to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n@@ -541,7 +541,7 @@ error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n LL | extern \"amdgpu-kernel\" {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51575\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51575\n    = help: add #![feature(abi_amdgpu_kernel)] to the crate attributes to enable\n \n error: aborting due to 63 previous errors"}, {"sha": "cb01b5caf85a16a379dfb74d7cafa64456443d3e", "filename": "src/test/ui/feature-gates/feature-gate-alloc-error-handler.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-alloc-error-handler.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-alloc-error-handler.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-alloc-error-handler.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: #[alloc_error_handler] is an unstable feature\n LL | #[alloc_error_handler]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51540\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51540\n    = help: add #![feature(alloc_error_handler)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "af7c8de61d5f9b7807c93e422c48be1ffab5c3ee", "filename": "src/test/ui/feature-gates/feature-gate-allow_fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow_fail.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: allow_fail attribute is currently unstable\n LL | #[allow_fail]\n    | ^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #46488\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/46488\n    = help: add #![feature(allow_fail)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "8d061a95676fbec37f5261c660370fa8e547565c", "filename": "src/test/ui/feature-gates/feature-gate-arbitrary-self-types.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-arbitrary-self-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-arbitrary-self-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-arbitrary-self-types.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: `Ptr<Self>` cannot be used as the type of `self` without the `arbi\n LL |     fn foo(self: Ptr<Self>);\n    |                  ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #44874\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44874\n    = help: add #![feature(arbitrary_self_types)] to the crate attributes to enable\n    = help: consider changing to `self`, `&self`, `&mut self`, or `self: Box<Self>`\n \n@@ -14,7 +14,7 @@ error[E0658]: `Ptr<Bar>` cannot be used as the type of `self` without the `arbit\n LL |     fn foo(self: Ptr<Self>) {}\n    |                  ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #44874\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44874\n    = help: add #![feature(arbitrary_self_types)] to the crate attributes to enable\n    = help: consider changing to `self`, `&self`, `&mut self`, or `self: Box<Self>`\n \n@@ -24,7 +24,7 @@ error[E0658]: `std::boxed::Box<Ptr<Bar>>` cannot be used as the type of `self` w\n LL |     fn bar(self: Box<Ptr<Self>>) {}\n    |                  ^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #44874\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44874\n    = help: add #![feature(arbitrary_self_types)] to the crate attributes to enable\n    = help: consider changing to `self`, `&self`, `&mut self`, or `self: Box<Self>`\n "}, {"sha": "eda2403e0570681b571064663b0903142179737b", "filename": "src/test/ui/feature-gates/feature-gate-arbitrary_self_types-raw-pointer.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-arbitrary_self_types-raw-pointer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-arbitrary_self_types-raw-pointer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-arbitrary_self_types-raw-pointer.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: `*const Self` cannot be used as the type of `self` without the `ar\n LL |     fn bar(self: *const Self);\n    |                  ^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #44874\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44874\n    = help: add #![feature(arbitrary_self_types)] to the crate attributes to enable\n    = help: consider changing to `self`, `&self`, `&mut self`, or `self: Box<Self>`\n \n@@ -14,7 +14,7 @@ error[E0658]: `*const Foo` cannot be used as the type of `self` without the `arb\n LL |     fn foo(self: *const Self) {}\n    |                  ^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #44874\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44874\n    = help: add #![feature(arbitrary_self_types)] to the crate attributes to enable\n    = help: consider changing to `self`, `&self`, `&mut self`, or `self: Box<Self>`\n \n@@ -24,7 +24,7 @@ error[E0658]: `*const ()` cannot be used as the type of `self` without the `arbi\n LL |     fn bar(self: *const Self) {}\n    |                  ^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #44874\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44874\n    = help: add #![feature(arbitrary_self_types)] to the crate attributes to enable\n    = help: consider changing to `self`, `&self`, `&mut self`, or `self: Box<Self>`\n "}, {"sha": "ccaf34f0169fd8ca66cf9d0229d9f3ff33cee264", "filename": "src/test/ui/feature-gates/feature-gate-asm.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: inline assembly is not stable enough for use and is subject to cha\n LL |         asm!(\"\");\n    |         ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29722\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29722\n    = help: add #![feature(asm)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "cafe2be9d0bb014b4171e7a7bac77a5b03554374", "filename": "src/test/ui/feature-gates/feature-gate-asm2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm2.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: inline assembly is not stable enough for use and is subject to cha\n LL |         println!(\"{:?}\", asm!(\"\"));\n    |                          ^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29722\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29722\n    = help: add #![feature(asm)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "16b37cf29cadd951271d8fdfead6fb01370ace36", "filename": "src/test/ui/feature-gates/feature-gate-assoc-type-defaults.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-assoc-type-defaults.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-assoc-type-defaults.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-assoc-type-defaults.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: associated type defaults are unstable\n LL |     type Bar = u8;\n    |     ^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29661\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29661\n    = help: add #![feature(associated_type_defaults)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "77dc6a486a1da0a936073e112bbd1d814a9b8d8c", "filename": "src/test/ui/feature-gates/feature-gate-async-await-2015-edition.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-async-await-2015-edition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-async-await-2015-edition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-async-await-2015-edition.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -22,7 +22,7 @@ error[E0658]: async fn is unstable\n LL | async fn foo() {}\n    | ^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #50547\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/50547\n    = help: add #![feature(async_await)] to the crate attributes to enable\n \n error: aborting due to 4 previous errors"}, {"sha": "6bff254607fcafe4f2705dc3dfb7863b2e4bea4a", "filename": "src/test/ui/feature-gates/feature-gate-async-await.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-async-await.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-async-await.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-async-await.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: async fn is unstable\n LL | async fn foo() {}\n    | ^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #50547\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/50547\n    = help: add #![feature(async_await)] to the crate attributes to enable\n \n error[E0658]: async blocks are unstable\n@@ -13,7 +13,7 @@ error[E0658]: async blocks are unstable\n LL |     let _ = async {};\n    |             ^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #50547\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/50547\n    = help: add #![feature(async_await)] to the crate attributes to enable\n \n error[E0658]: async closures are unstable\n@@ -22,7 +22,7 @@ error[E0658]: async closures are unstable\n LL |     let _ = async || {};\n    |             ^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #50547\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/50547\n    = help: add #![feature(async_await)] to the crate attributes to enable\n \n error: aborting due to 3 previous errors"}, {"sha": "9666793313ea43f27dd3610bbeb16059d6a469e8", "filename": "src/test/ui/feature-gates/feature-gate-box-expr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box-expr.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: box expression syntax is experimental; you can call `Box::new` ins\n LL |     let x = box 'c';\n    |             ^^^^^^^\n    |\n-   = note: for more information, see tracking issue #49733\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49733\n    = help: add #![feature(box_syntax)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "765b929de8a31638b72c1663b56f7e1b9f4450a9", "filename": "src/test/ui/feature-gates/feature-gate-box_patterns.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box_patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box_patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box_patterns.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: box pattern syntax is experimental\n LL |     let box x = Box::new('c');\n    |         ^^^^^\n    |\n-   = note: for more information, see tracking issue #29641\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29641\n    = help: add #![feature(box_patterns)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "a9cac7686eace220d136921e70f96c451691563e", "filename": "src/test/ui/feature-gates/feature-gate-box_syntax.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box_syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box_syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box_syntax.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: box expression syntax is experimental; you can call `Box::new` ins\n LL |     let x = box 3;\n    |             ^^^^^\n    |\n-   = note: for more information, see tracking issue #49733\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49733\n    = help: add #![feature(box_syntax)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "995528efdd375e4e76ba304d6b5cb646115cb1cb", "filename": "src/test/ui/feature-gates/feature-gate-cfg-target-has-atomic.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-has-atomic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-has-atomic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-has-atomic.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n LL | #[cfg(target_has_atomic = \"8\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32976\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n@@ -13,7 +13,7 @@ error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n LL | #[cfg(target_has_atomic = \"8\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32976\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n@@ -22,7 +22,7 @@ error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n LL | #[cfg(target_has_atomic = \"16\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32976\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n@@ -31,7 +31,7 @@ error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n LL | #[cfg(target_has_atomic = \"16\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32976\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n@@ -40,7 +40,7 @@ error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n LL | #[cfg(target_has_atomic = \"32\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32976\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n@@ -49,7 +49,7 @@ error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n LL | #[cfg(target_has_atomic = \"32\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32976\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n@@ -58,7 +58,7 @@ error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n LL | #[cfg(target_has_atomic = \"64\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32976\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n@@ -67,7 +67,7 @@ error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n LL | #[cfg(target_has_atomic = \"64\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32976\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n@@ -76,7 +76,7 @@ error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n LL | #[cfg(target_has_atomic = \"128\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32976\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n@@ -85,7 +85,7 @@ error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n LL | #[cfg(target_has_atomic = \"128\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32976\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n@@ -94,7 +94,7 @@ error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n LL | #[cfg(target_has_atomic = \"ptr\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32976\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n@@ -103,7 +103,7 @@ error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n LL | #[cfg(target_has_atomic = \"ptr\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32976\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n@@ -112,7 +112,7 @@ error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n LL |     cfg!(target_has_atomic = \"8\");\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32976\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n@@ -121,7 +121,7 @@ error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n LL |     cfg!(target_has_atomic = \"16\");\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32976\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n@@ -130,7 +130,7 @@ error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n LL |     cfg!(target_has_atomic = \"32\");\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32976\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n@@ -139,7 +139,7 @@ error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n LL |     cfg!(target_has_atomic = \"64\");\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32976\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n@@ -148,7 +148,7 @@ error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n LL |     cfg!(target_has_atomic = \"128\");\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32976\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n@@ -157,7 +157,7 @@ error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n LL |     cfg!(target_has_atomic = \"ptr\");\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32976\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error: aborting due to 18 previous errors"}, {"sha": "3d24b2182537e3c5ecbf4d56fffc23ddff4401a8", "filename": "src/test/ui/feature-gates/feature-gate-cfg-target-thread-local.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-thread-local.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-thread-local.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-thread-local.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: `cfg(target_thread_local)` is experimental and subject to change\n LL |     #[cfg_attr(target_thread_local, thread_local)]\n    |                ^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29594\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29594\n    = help: add #![feature(cfg_target_thread_local)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "be8c727e2beec84212ea35a2b2f8cc6017b6f79f", "filename": "src/test/ui/feature-gates/feature-gate-concat_idents.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: `concat_idents` is not stable enough for use and is subject to cha\n LL |     let a = concat_idents!(X, Y_1);\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29599\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29599\n    = help: add #![feature(concat_idents)] to the crate attributes to enable\n \n error[E0658]: `concat_idents` is not stable enough for use and is subject to change\n@@ -13,7 +13,7 @@ error[E0658]: `concat_idents` is not stable enough for use and is subject to cha\n LL |     let b = concat_idents!(X, Y_2);\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29599\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29599\n    = help: add #![feature(concat_idents)] to the crate attributes to enable\n \n error: aborting due to 2 previous errors"}, {"sha": "1ef45115bd1b8c7991ea0ce1c375033e5ff8d93d", "filename": "src/test/ui/feature-gates/feature-gate-concat_idents2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents2.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: `concat_idents` is not stable enough for use and is subject to cha\n LL |     concat_idents!(a, b);\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29599\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29599\n    = help: add #![feature(concat_idents)] to the crate attributes to enable\n \n error[E0425]: cannot find value `ab` in this scope"}, {"sha": "cb8725ab566a2ebe273d79405dd58370c7cf84fb", "filename": "src/test/ui/feature-gates/feature-gate-concat_idents3.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents3.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: `concat_idents` is not stable enough for use and is subject to cha\n LL |     assert_eq!(10, concat_idents!(X, Y_1));\n    |                    ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29599\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29599\n    = help: add #![feature(concat_idents)] to the crate attributes to enable\n \n error[E0658]: `concat_idents` is not stable enough for use and is subject to change\n@@ -13,7 +13,7 @@ error[E0658]: `concat_idents` is not stable enough for use and is subject to cha\n LL |     assert_eq!(20, concat_idents!(X, Y_2));\n    |                    ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29599\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29599\n    = help: add #![feature(concat_idents)] to the crate attributes to enable\n \n error: aborting due to 2 previous errors"}, {"sha": "0edd4eb7ab00615e2f60074ec2fda911dd0982ef", "filename": "src/test/ui/feature-gates/feature-gate-const_fn.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -22,7 +22,7 @@ error[E0658]: const fn is unstable\n LL |     const fn foo() -> u32;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #57563\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/57563\n    = help: add #![feature(const_fn)] to the crate attributes to enable\n \n error[E0658]: const fn is unstable\n@@ -31,7 +31,7 @@ error[E0658]: const fn is unstable\n LL |     const fn bar() -> u32 { 0 }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #57563\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/57563\n    = help: add #![feature(const_fn)] to the crate attributes to enable\n \n error: aborting due to 5 previous errors"}, {"sha": "9ea04a1e204359dda16beb36786ac509a8bf1c84", "filename": "src/test/ui/feature-gates/feature-gate-const_generics.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: const generics are unstable\n LL | fn foo<const X: ()>() {}\n    |              ^\n    |\n-   = note: for more information, see tracking issue #44580\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44580\n    = help: add #![feature(const_generics)] to the crate attributes to enable\n \n error[E0658]: const generics are unstable\n@@ -13,7 +13,7 @@ error[E0658]: const generics are unstable\n LL | struct Foo<const X: usize>([(); X]);\n    |                  ^\n    |\n-   = note: for more information, see tracking issue #44580\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44580\n    = help: add #![feature(const_generics)] to the crate attributes to enable\n \n error: aborting due to 2 previous errors"}, {"sha": "c3cd3131342795ee82552d219f2c31dd42366bcc", "filename": "src/test/ui/feature-gates/feature-gate-const_transmute.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_transmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_transmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_transmute.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: The use of std::mem::transmute() is gated in constants\n LL | const TRANSMUTED_U32: u32 = unsafe { mem::transmute(Foo(3)) };\n    |                                      ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #53605\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/53605\n    = help: add #![feature(const_transmute)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "4e70870ae7222dd4f85c35614285691826b91da8", "filename": "src/test/ui/feature-gates/feature-gate-crate_visibility_modifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-crate_visibility_modifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-crate_visibility_modifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-crate_visibility_modifier.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: `crate` visibility modifier is experimental\n LL | crate struct Bender {\n    | ^^^^^\n    |\n-   = note: for more information, see tracking issue #53120\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/53120\n    = help: add #![feature(crate_visibility_modifier)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "9b81c38f86b8739bb79e9ca530aa41ee29854441", "filename": "src/test/ui/feature-gates/feature-gate-custom_attribute.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_attribute.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and\n LL | #[fake_attr]\n    |   ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -13,7 +13,7 @@ error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and\n LL | #[fake_attr(100)]\n    |   ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -22,7 +22,7 @@ error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and\n LL | #[fake_attr(1, 2, 3)]\n    |   ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -31,7 +31,7 @@ error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and\n LL | #[fake_attr(\"hello\")]\n    |   ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -40,7 +40,7 @@ error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and\n LL | #[fake_attr(name = \"hello\")]\n    |   ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -49,7 +49,7 @@ error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and\n LL | #[fake_attr(1, \"hi\", key = 12, true, false)]\n    |   ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -58,7 +58,7 @@ error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and\n LL | #[fake_attr(key = \"hello\", val = 10)]\n    |   ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -67,7 +67,7 @@ error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and\n LL | #[fake_attr(key(\"hello\"), val(10))]\n    |   ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -76,7 +76,7 @@ error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and\n LL | #[fake_attr(enabled = true, disabled = false)]\n    |   ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -85,7 +85,7 @@ error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and\n LL | #[fake_attr(true)]\n    |   ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -94,7 +94,7 @@ error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and\n LL | #[fake_attr(pi = 3.14159)]\n    |   ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -103,7 +103,7 @@ error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and\n LL | #[fake_attr(b\"hi\")]\n    |   ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `fake_doc` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -112,7 +112,7 @@ error[E0658]: The attribute `fake_doc` is currently unknown to the compiler and\n LL | #[fake_doc(r\"doc\")]\n    |   ^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error: aborting due to 13 previous errors"}, {"sha": "8c8ac1233a046824dcbd4baa6310da373f4b1aee", "filename": "src/test/ui/feature-gates/feature-gate-custom_attribute2.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_attribute2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_attribute2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_attribute2.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: The attribute `lt_struct` is currently unknown to the compiler and\n LL | struct StLt<#[lt_struct] 'a>(&'a u32);\n    |             ^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `ty_struct` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -13,7 +13,7 @@ error[E0658]: The attribute `ty_struct` is currently unknown to the compiler and\n LL | struct StTy<#[ty_struct] I>(I);\n    |             ^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `lt_enum` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -22,7 +22,7 @@ error[E0658]: The attribute `lt_enum` is currently unknown to the compiler and m\n LL | enum EnLt<#[lt_enum] 'b> { A(&'b u32), B }\n    |           ^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `ty_enum` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -31,7 +31,7 @@ error[E0658]: The attribute `ty_enum` is currently unknown to the compiler and m\n LL | enum EnTy<#[ty_enum] J> { A(J), B }\n    |           ^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `lt_trait` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -40,7 +40,7 @@ error[E0658]: The attribute `lt_trait` is currently unknown to the compiler and\n LL | trait TrLt<#[lt_trait] 'c> { fn foo(&self, _: &'c [u32]) -> &'c u32; }\n    |            ^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `ty_trait` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -49,7 +49,7 @@ error[E0658]: The attribute `ty_trait` is currently unknown to the compiler and\n LL | trait TrTy<#[ty_trait] K> { fn foo(&self, _: K); }\n    |            ^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `lt_type` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -58,7 +58,7 @@ error[E0658]: The attribute `lt_type` is currently unknown to the compiler and m\n LL | type TyLt<#[lt_type] 'd> = &'d u32;\n    |           ^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `ty_type` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -67,7 +67,7 @@ error[E0658]: The attribute `ty_type` is currently unknown to the compiler and m\n LL | type TyTy<#[ty_type] L> = (L, );\n    |           ^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `lt_inherent` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -76,7 +76,7 @@ error[E0658]: The attribute `lt_inherent` is currently unknown to the compiler a\n LL | impl<#[lt_inherent] 'e> StLt<'e> { }\n    |      ^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `ty_inherent` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -85,7 +85,7 @@ error[E0658]: The attribute `ty_inherent` is currently unknown to the compiler a\n LL | impl<#[ty_inherent] M> StTy<M> { }\n    |      ^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `lt_impl_for` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -94,7 +94,7 @@ error[E0658]: The attribute `lt_impl_for` is currently unknown to the compiler a\n LL | impl<#[lt_impl_for] 'f> TrLt<'f> for StLt<'f> {\n    |      ^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `ty_impl_for` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -103,7 +103,7 @@ error[E0658]: The attribute `ty_impl_for` is currently unknown to the compiler a\n LL | impl<#[ty_impl_for] N> TrTy<N> for StTy<N> {\n    |      ^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `lt_fn` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -112,7 +112,7 @@ error[E0658]: The attribute `lt_fn` is currently unknown to the compiler and may\n LL | fn f_lt<#[lt_fn] 'g>(_: &'g [u32]) -> &'g u32 { loop { } }\n    |         ^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `ty_fn` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -121,7 +121,7 @@ error[E0658]: The attribute `ty_fn` is currently unknown to the compiler and may\n LL | fn f_ty<#[ty_fn] O>(_: O) { }\n    |         ^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `lt_meth` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -130,7 +130,7 @@ error[E0658]: The attribute `lt_meth` is currently unknown to the compiler and m\n LL |     fn m_lt<#[lt_meth] 'h>(_: &'h [u32]) -> &'h u32 { loop { } }\n    |             ^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `ty_meth` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -139,7 +139,7 @@ error[E0658]: The attribute `ty_meth` is currently unknown to the compiler and m\n LL |     fn m_ty<#[ty_meth] P>(_: P) { }\n    |             ^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `lt_hof` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -148,7 +148,7 @@ error[E0658]: The attribute `lt_hof` is currently unknown to the compiler and ma\n LL |     where Q: for <#[lt_hof] 'i> Fn(&'i [u32]) -> &'i u32\n    |                   ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error: aborting due to 17 previous errors"}, {"sha": "e288af54cb270c838a5c9314a8936066037b263b", "filename": "src/test/ui/feature-gates/feature-gate-custom_test_frameworks.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_test_frameworks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_test_frameworks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_test_frameworks.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: custom test frameworks are an unstable feature\n LL | #![test_runner(main)]\n    | ^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #50297\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/50297\n    = help: add #![feature(custom_test_frameworks)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "808363a0048b75b8f7c2d7f74f5ec0f6b261c9fb", "filename": "src/test/ui/feature-gates/feature-gate-decl_macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-decl_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-decl_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-decl_macro.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: `macro` is experimental\n LL | macro m() {}\n    | ^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #39412\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/39412\n    = help: add #![feature(decl_macro)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "be85ae4b137927b250392b1d9c5dbe236faa4c78", "filename": "src/test/ui/feature-gates/feature-gate-doc_alias.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_alias.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: #[doc(alias = \"...\")] is experimental\n LL | #[doc(alias = \"foo\")]\n    | ^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #50146\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/50146\n    = help: add #![feature(doc_alias)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "0f84a1b11f06ffeda831c8a8b649f7249838cfd9", "filename": "src/test/ui/feature-gates/feature-gate-doc_cfg-cfg-rustdoc.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg-cfg-rustdoc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg-cfg-rustdoc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg-cfg-rustdoc.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: `cfg(rustdoc)` is experimental and subject to change\n LL | #[cfg(rustdoc)]\n    |       ^^^^^^^\n    |\n-   = note: for more information, see tracking issue #43781\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/43781\n    = help: add #![feature(doc_cfg)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "9e4aa6c7a0717654317d966d27ebac75fb498023", "filename": "src/test/ui/feature-gates/feature-gate-doc_cfg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: #[doc(cfg(...))] is experimental\n LL | #[doc(cfg(unix))]\n    | ^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #43781\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/43781\n    = help: add #![feature(doc_cfg)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "6e4647817219ec5db74d87265c867e8c8cbd5d7f", "filename": "src/test/ui/feature-gates/feature-gate-doc_keyword.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_keyword.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_keyword.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_keyword.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: #[doc(keyword = \"...\")] is experimental\n LL | #[doc(keyword = \"match\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51315\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51315\n    = help: add #![feature(doc_keyword)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "d778d4d994c869e5dcdf8e20ea187d91cdd807b2", "filename": "src/test/ui/feature-gates/feature-gate-doc_masked.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_masked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_masked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_masked.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: #[doc(masked)] is experimental\n LL | #[doc(masked)]\n    | ^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #44027\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44027\n    = help: add #![feature(doc_masked)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "2bf201f4907ee721db0fc2c051c2f1d0c8a01c5a", "filename": "src/test/ui/feature-gates/feature-gate-doc_spotlight.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_spotlight.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_spotlight.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_spotlight.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: #[doc(spotlight)] is experimental\n LL | #[doc(spotlight)]\n    | ^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #45040\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/45040\n    = help: add #![feature(doc_spotlight)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "9c7f7b2178d17cf3923f4128f821e7b75f04c4ac", "filename": "src/test/ui/feature-gates/feature-gate-dropck-ugeh.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-dropck-ugeh.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-dropck-ugeh.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-dropck-ugeh.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: unsafe_destructor_blind_to_params has been replaced by may_dangle\n LL |     #[unsafe_destructor_blind_to_params] // This is the UGEH attribute\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #28498\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/28498\n    = help: add #![feature(dropck_parametricity)] to the crate attributes to enable\n \n warning: use of deprecated attribute `dropck_parametricity`: unsafe_destructor_blind_to_params has been replaced by may_dangle and will be removed in the future. See https://github.com/rust-lang/rust/issues/34761"}, {"sha": "0eb6da3b125ea6048782f19fa541f548335f8427", "filename": "src/test/ui/feature-gates/feature-gate-exclusive-range-pattern.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-exclusive-range-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-exclusive-range-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-exclusive-range-pattern.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: exclusive range pattern syntax is experimental\n LL |         0 .. 3 => {}\n    |         ^^^^^^\n    |\n-   = note: for more information, see tracking issue #37854\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/37854\n    = help: add #![feature(exclusive_range_pattern)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "efaf29c00daeea3bdff9dc7a3b93f8475f2d766b", "filename": "src/test/ui/feature-gates/feature-gate-existential-type.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-existential-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-existential-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-existential-type.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: existential types are unstable\n LL | existential type Foo: std::fmt::Debug;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #34511\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/34511\n    = help: add #![feature(existential_type)] to the crate attributes to enable\n \n error[E0658]: existential types are unstable\n@@ -13,7 +13,7 @@ error[E0658]: existential types are unstable\n LL |     existential type Baa: std::fmt::Debug;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #34511\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/34511\n    = help: add #![feature(existential_type)] to the crate attributes to enable\n \n error: aborting due to 2 previous errors"}, {"sha": "18c0bae2c4ba2224fb2a69eac723e7bbad4d175e", "filename": "src/test/ui/feature-gates/feature-gate-extern_types.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_types.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: extern types are experimental\n LL |     type T;\n    |     ^^^^^^^\n    |\n-   = note: for more information, see tracking issue #43467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/43467\n    = help: add #![feature(extern_types)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "79e4f8e9b6263f7bf5a343e15b1af92f7a9ac8ae", "filename": "src/test/ui/feature-gates/feature-gate-external_doc.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-external_doc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-external_doc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-external_doc.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: #[doc(include = \"...\")] is experimental\n LL | #[doc(include=\"asdf.md\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #44732\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44732\n    = help: add #![feature(external_doc)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "c28d45df7cd417b64d466ceab2967c44a8b09c02", "filename": "src/test/ui/feature-gates/feature-gate-ffi_returns_twice.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_returns_twice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_returns_twice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_returns_twice.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the `#[ffi_returns_twice]` attribute is an experimental feature\n LL |     #[ffi_returns_twice]\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #58314\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/58314\n    = help: add #![feature(ffi_returns_twice)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "265b576bc79d3cd76055f5df0b672eca7645802c", "filename": "src/test/ui/feature-gates/feature-gate-fundamental.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-fundamental.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-fundamental.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-fundamental.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the `#[fundamental]` attribute is an experimental feature\n LL | #[fundamental]\n    | ^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29635\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29635\n    = help: add #![feature(fundamental)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "b29fe7094f30f9f6706b775cd3d8f1cf4cf31a7f", "filename": "src/test/ui/feature-gates/feature-gate-generators.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generators.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generators.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generators.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: yield syntax is experimental\n LL |     yield true;\n    |     ^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #43122\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/43122\n    = help: add #![feature(generators)] to the crate attributes to enable\n \n error[E0627]: yield statement outside of generator literal"}, {"sha": "d37dd93983c242c4ca98b73ba386e5e577bfb1e9", "filename": "src/test/ui/feature-gates/feature-gate-generic_associated_types.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generic_associated_types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generic_associated_types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generic_associated_types.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: generic associated types are unstable\n LL |     type Pointer<T>: Deref<Target = T>;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #44265\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44265\n    = help: add #![feature(generic_associated_types)] to the crate attributes to enable\n \n error[E0658]: generic associated types are unstable\n@@ -13,7 +13,7 @@ error[E0658]: generic associated types are unstable\n LL |     type Pointer2<T>: Deref<Target = T> where T: Clone, U: Clone;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #44265\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44265\n    = help: add #![feature(generic_associated_types)] to the crate attributes to enable\n \n error[E0658]: where clauses on associated types are unstable\n@@ -22,7 +22,7 @@ error[E0658]: where clauses on associated types are unstable\n LL |     type Pointer2<T>: Deref<Target = T> where T: Clone, U: Clone;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #44265\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44265\n    = help: add #![feature(generic_associated_types)] to the crate attributes to enable\n \n error[E0658]: generic associated types are unstable\n@@ -31,7 +31,7 @@ error[E0658]: generic associated types are unstable\n LL |     type Pointer<Usize> = Box<Usize>;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #44265\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44265\n    = help: add #![feature(generic_associated_types)] to the crate attributes to enable\n \n error[E0658]: generic associated types are unstable\n@@ -40,7 +40,7 @@ error[E0658]: generic associated types are unstable\n LL |     type Pointer2<U32> = Box<U32>;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #44265\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44265\n    = help: add #![feature(generic_associated_types)] to the crate attributes to enable\n \n error[E0658]: where clauses on associated types are unstable\n@@ -49,7 +49,7 @@ error[E0658]: where clauses on associated types are unstable\n LL |     type Assoc where Self: Sized;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #44265\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44265\n    = help: add #![feature(generic_associated_types)] to the crate attributes to enable\n \n error[E0658]: where clauses on associated types are unstable\n@@ -58,7 +58,7 @@ error[E0658]: where clauses on associated types are unstable\n LL |     type Assoc where Self: Sized = Foo;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #44265\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44265\n    = help: add #![feature(generic_associated_types)] to the crate attributes to enable\n \n error: aborting due to 7 previous errors"}, {"sha": "7d8abac399068923ce72df3b920332f3a81616f6", "filename": "src/test/ui/feature-gates/feature-gate-global_asm.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-global_asm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-global_asm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-global_asm.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: `global_asm!` is not stable enough for use and is subject to chang\n LL | global_asm!(\"\");\n    | ^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #35119\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/35119\n    = help: add #![feature(global_asm)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "1d5998641be8e0a51deeec4771dd8875e7f22cb6", "filename": "src/test/ui/feature-gates/feature-gate-is_sorted.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-is_sorted.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-is_sorted.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-is_sorted.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: use of unstable library feature 'is_sorted': new API\n LL |     assert!([1, 2, 2, 9].iter().is_sorted());\n    |                                 ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #53485\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/53485\n    = help: add #![feature(is_sorted)] to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'is_sorted': new API\n@@ -13,7 +13,7 @@ error[E0658]: use of unstable library feature 'is_sorted': new API\n LL |     assert!(![-2i32, -1, 0, 3].iter().is_sorted_by_key(|n| n.abs()));\n    |                                       ^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #53485\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/53485\n    = help: add #![feature(is_sorted)] to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'is_sorted': new API\n@@ -22,7 +22,7 @@ error[E0658]: use of unstable library feature 'is_sorted': new API\n LL |     assert!([1, 2, 2, 9].is_sorted());\n    |                          ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #53485\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/53485\n    = help: add #![feature(is_sorted)] to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'is_sorted': new API\n@@ -31,7 +31,7 @@ error[E0658]: use of unstable library feature 'is_sorted': new API\n LL |     assert!(![-2i32, -1, 0, 3].is_sorted_by_key(|n| n.abs()));\n    |                                ^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #53485\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/53485\n    = help: add #![feature(is_sorted)] to the crate attributes to enable\n \n error: aborting due to 4 previous errors"}, {"sha": "40efc4dec4b49f34491d51cd54c0655c70039e34", "filename": "src/test/ui/feature-gates/feature-gate-label_break_value.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-label_break_value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-label_break_value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-label_break_value.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: labels on blocks are unstable\n LL |     'a: {\n    |     ^^\n    |\n-   = note: for more information, see tracking issue #48594\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/48594\n    = help: add #![feature(label_break_value)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "5267b56253fb068e34c30bbccce9ad6de84bbb2e", "filename": "src/test/ui/feature-gates/feature-gate-link_args.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_args.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the `link_args` attribute is experimental and not portable across\n LL | #[link_args = \"-l expected_use_case\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29596\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29596\n    = help: add #![feature(link_args)] to the crate attributes to enable\n \n error[E0658]: the `link_args` attribute is experimental and not portable across platforms, it is recommended to use `#[link(name = \"foo\")] instead\n@@ -13,7 +13,7 @@ error[E0658]: the `link_args` attribute is experimental and not portable across\n LL | #[link_args = \"-l unexected_use_on_non_extern_item\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29596\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29596\n    = help: add #![feature(link_args)] to the crate attributes to enable\n \n error[E0658]: the `link_args` attribute is experimental and not portable across platforms, it is recommended to use `#[link(name = \"foo\")] instead\n@@ -22,7 +22,7 @@ error[E0658]: the `link_args` attribute is experimental and not portable across\n LL | #![link_args = \"-l unexpected_use_as_inner_attr_on_mod\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29596\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29596\n    = help: add #![feature(link_args)] to the crate attributes to enable\n \n error: aborting due to 3 previous errors"}, {"sha": "1648245d0b812f7e69dded6ffe8070ba5a3ac0a4", "filename": "src/test/ui/feature-gates/feature-gate-link_cfg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_cfg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_cfg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_cfg.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: is feature gated\n LL | #[link(name = \"foo\", cfg(foo))]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #37406\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/37406\n    = help: add #![feature(link_cfg)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "903696dc7c2aa53cee6ab43e4a519dc3346c511c", "filename": "src/test/ui/feature-gates/feature-gate-link_llvm_intrinsics.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_llvm_intrinsics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_llvm_intrinsics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_llvm_intrinsics.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: linking to LLVM intrinsics is experimental\n LL |     fn sqrt(x: f32) -> f32;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29602\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29602\n    = help: add #![feature(link_llvm_intrinsics)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "872c695120a8fba842d93daff39a4d93432f5f75", "filename": "src/test/ui/feature-gates/feature-gate-linkage.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-linkage.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-linkage.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-linkage.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the `linkage` attribute is experimental and not portable across pl\n LL |     #[linkage = \"extern_weak\"] static foo: isize;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29603\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29603\n    = help: add #![feature(linkage)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "9e814a20d6db69d796b242bed20d95e85209a87e", "filename": "src/test/ui/feature-gates/feature-gate-lint-reasons.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-lint-reasons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-lint-reasons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-lint-reasons.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: lint reasons are experimental\n LL | #![warn(nonstandard_style, reason = \"the standard should be respected\")]\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #54503\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54503\n    = help: add #![feature(lint_reasons)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "67bd48d3bedf29c5ad93265eec61a79e21461949", "filename": "src/test/ui/feature-gates/feature-gate-log_syntax.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: `log_syntax!` is not stable enough for use and is subject to chang\n LL |     log_syntax!()\n    |     ^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29598\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29598\n    = help: add #![feature(log_syntax)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "ff0fa343c84d17049a20aa1c011f356b9c8dad38", "filename": "src/test/ui/feature-gates/feature-gate-log_syntax2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax2.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: `log_syntax!` is not stable enough for use and is subject to chang\n LL |     println!(\"{:?}\", log_syntax!());\n    |                      ^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29598\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29598\n    = help: add #![feature(log_syntax)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "891ed81107f3960147acf566916f722ba3e5beb1", "filename": "src/test/ui/feature-gates/feature-gate-macros_in_extern.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-macros_in_extern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-macros_in_extern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-macros_in_extern.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: macro invocations in `extern {}` blocks are experimental\n LL |     returns_isize!(rust_get_test_int);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #49476\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49476\n    = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n \n error[E0658]: macro invocations in `extern {}` blocks are experimental\n@@ -13,7 +13,7 @@ error[E0658]: macro invocations in `extern {}` blocks are experimental\n LL |     takes_u32_returns_u32!(rust_dbg_extern_identity_u32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #49476\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49476\n    = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n \n error[E0658]: macro invocations in `extern {}` blocks are experimental\n@@ -22,7 +22,7 @@ error[E0658]: macro invocations in `extern {}` blocks are experimental\n LL |     emits_nothing!();\n    |     ^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #49476\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49476\n    = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n \n error: aborting due to 3 previous errors"}, {"sha": "4d2d01b49f365316ad9de5caa3cb7fbdf8151be5", "filename": "src/test/ui/feature-gates/feature-gate-main.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-main.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: declaration of a nonstandard #[main] function may change over time\n LL | fn foo() {}\n    | ^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29634\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29634\n    = help: add #![feature(main)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "3ed43b52e5626f32b19b3ccb8843572355cc7592", "filename": "src/test/ui/feature-gates/feature-gate-marker_trait_attr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-marker_trait_attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-marker_trait_attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-marker_trait_attr.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: marker traits is an experimental feature\n LL | #[marker] trait ExplicitMarker {}\n    | ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29864\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29864\n    = help: add #![feature(marker_trait_attr)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "f93be3ed4e71ff2f4c0c8ac44976af82e33e8e07", "filename": "src/test/ui/feature-gates/feature-gate-may-dangle.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-may-dangle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-may-dangle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-may-dangle.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: may_dangle has unstable semantics and may be removed in the future\n LL | unsafe impl<#[may_dangle] A> Drop for Pt<A> {\n    |             ^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #34761\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/34761\n    = help: add #![feature(dropck_eyepatch)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "a1c329df63a25f692fcce106983b9495962f3cc9", "filename": "src/test/ui/feature-gates/feature-gate-min_const_fn.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_const_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_const_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_const_fn.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -22,7 +22,7 @@ error[E0658]: const fn is unstable\n LL |     const fn foo() -> u32;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #57563\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/57563\n    = help: add #![feature(const_fn)] to the crate attributes to enable\n \n error[E0658]: const fn is unstable\n@@ -31,7 +31,7 @@ error[E0658]: const fn is unstable\n LL |     const fn bar() -> u32 { 0 }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #57563\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/57563\n    = help: add #![feature(const_fn)] to the crate attributes to enable\n \n error: aborting due to 5 previous errors"}, {"sha": "0ba4d551a6d7d6b9969be19a9651c996c0e2535d", "filename": "src/test/ui/feature-gates/feature-gate-naked_functions.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-naked_functions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-naked_functions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-naked_functions.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the `#[naked]` attribute is an experimental feature\n LL | #[naked]\n    | ^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32408\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32408\n    = help: add #![feature(naked_functions)] to the crate attributes to enable\n \n error[E0658]: the `#[naked]` attribute is an experimental feature\n@@ -13,7 +13,7 @@ error[E0658]: the `#[naked]` attribute is an experimental feature\n LL | #[naked]\n    | ^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32408\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32408\n    = help: add #![feature(naked_functions)] to the crate attributes to enable\n \n error: aborting due to 2 previous errors"}, {"sha": "45a6e6de18b02e44ec6b477f5d3a42732fd73088", "filename": "src/test/ui/feature-gates/feature-gate-never_type.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-never_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-never_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-never_type.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: The `!` type is experimental\n LL | type Ma = (u32, !, i32);\n    |                 ^\n    |\n-   = note: for more information, see tracking issue #35121\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/35121\n    = help: add #![feature(never_type)] to the crate attributes to enable\n \n error[E0658]: The `!` type is experimental\n@@ -13,7 +13,7 @@ error[E0658]: The `!` type is experimental\n LL | type Meeshka = Vec<!>;\n    |                    ^\n    |\n-   = note: for more information, see tracking issue #35121\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/35121\n    = help: add #![feature(never_type)] to the crate attributes to enable\n \n error[E0658]: The `!` type is experimental\n@@ -22,7 +22,7 @@ error[E0658]: The `!` type is experimental\n LL | type Mow = &'static fn(!) -> !;\n    |                        ^\n    |\n-   = note: for more information, see tracking issue #35121\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/35121\n    = help: add #![feature(never_type)] to the crate attributes to enable\n \n error[E0658]: The `!` type is experimental\n@@ -31,7 +31,7 @@ error[E0658]: The `!` type is experimental\n LL | type Skwoz = &'static mut !;\n    |                           ^\n    |\n-   = note: for more information, see tracking issue #35121\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/35121\n    = help: add #![feature(never_type)] to the crate attributes to enable\n \n error[E0658]: The `!` type is experimental\n@@ -40,7 +40,7 @@ error[E0658]: The `!` type is experimental\n LL |     type Wub = !;\n    |                ^\n    |\n-   = note: for more information, see tracking issue #35121\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/35121\n    = help: add #![feature(never_type)] to the crate attributes to enable\n \n error: aborting due to 5 previous errors"}, {"sha": "a58a75b70c5015e9f3e6ebc8c10598c459e1878e", "filename": "src/test/ui/feature-gates/feature-gate-no-debug.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-no-debug.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-no-debug.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-no-debug.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the `#[no_debug]` attribute was an experimental feature that has b\n LL | #[no_debug]\n    | ^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29721\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29721\n    = help: add #![feature(no_debug)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "e2f0fd68a7ccd48b5cad7995f3fc6dc71af84581", "filename": "src/test/ui/feature-gates/feature-gate-no_core.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-no_core.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-no_core.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-no_core.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: no_core is experimental\n LL | #![no_core]\n    | ^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29639\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29639\n    = help: add #![feature(no_core)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "1d78b87a3e0cb20af5d39764ea3187d63948170e", "filename": "src/test/ui/feature-gates/feature-gate-non_ascii_idents.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-non_ascii_idents.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-non_ascii_idents.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-non_ascii_idents.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: non-ascii idents are not fully supported\n LL | extern crate core as b\u00e4z;\n    |                      ^^^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n@@ -13,7 +13,7 @@ error[E0658]: non-ascii idents are not fully supported\n LL | use f\u00f6\u00f6::bar;\n    |     ^^^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n@@ -22,7 +22,7 @@ error[E0658]: non-ascii idents are not fully supported\n LL | mod f\u00f6\u00f6 {\n    |     ^^^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n@@ -31,7 +31,7 @@ error[E0658]: non-ascii idents are not fully supported\n LL | fn b\u00e4r(\n    |    ^^^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n@@ -40,7 +40,7 @@ error[E0658]: non-ascii idents are not fully supported\n LL |     b\u00e4z: isize\n    |     ^^^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n@@ -49,7 +49,7 @@ error[E0658]: non-ascii idents are not fully supported\n LL |     let _\u00f6: isize;\n    |         ^^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n@@ -58,7 +58,7 @@ error[E0658]: non-ascii idents are not fully supported\n LL |         (_\u00e4, _) => {}\n    |          ^^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n@@ -67,7 +67,7 @@ error[E0658]: non-ascii idents are not fully supported\n LL | struct F\u00f6\u00f6 {\n    |        ^^^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n@@ -76,7 +76,7 @@ error[E0658]: non-ascii idents are not fully supported\n LL |     f\u00f6\u00f6: isize\n    |     ^^^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n@@ -85,7 +85,7 @@ error[E0658]: non-ascii idents are not fully supported\n LL | enum B\u00e4r {\n    |      ^^^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n@@ -94,7 +94,7 @@ error[E0658]: non-ascii idents are not fully supported\n LL |     B\u00e4z {\n    |     ^^^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n@@ -103,7 +103,7 @@ error[E0658]: non-ascii idents are not fully supported\n LL |         q\u00fcx: isize\n    |         ^^^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n@@ -112,7 +112,7 @@ error[E0658]: non-ascii idents are not fully supported\n LL |     fn q\u00fcx();\n    |        ^^^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n error: aborting due to 13 previous errors"}, {"sha": "fdb1ffb0a9bffe98c82c725796c74ae794b29149", "filename": "src/test/ui/feature-gates/feature-gate-non_exhaustive.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-non_exhaustive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-non_exhaustive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-non_exhaustive.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: non exhaustive is an experimental feature\n LL | #[non_exhaustive]\n    | ^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #44109\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44109\n    = help: add #![feature(non_exhaustive)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "044a9a398d68182bcd9b65f5825249bd1dec6afb", "filename": "src/test/ui/feature-gates/feature-gate-on-unimplemented.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-on-unimplemented.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-on-unimplemented.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-on-unimplemented.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the `#[rustc_on_unimplemented]` attribute is an experimental featu\n LL | #[rustc_on_unimplemented = \"test error `{Self}` with `{Bar}`\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29628\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29628\n    = help: add #![feature(on_unimplemented)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "baad1627d9cb32e77789d35bf597b61da73e2895", "filename": "src/test/ui/feature-gates/feature-gate-optin-builtin-traits.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-optin-builtin-traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-optin-builtin-traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-optin-builtin-traits.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: auto traits are experimental and possibly buggy\n LL | auto trait AutoDummyTrait {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #13231\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/13231\n    = help: add #![feature(optin_builtin_traits)] to the crate attributes to enable\n \n error[E0658]: negative trait bounds are not yet fully implemented; use marker types for now\n@@ -13,7 +13,7 @@ error[E0658]: negative trait bounds are not yet fully implemented; use marker ty\n LL | impl !AutoDummyTrait for DummyStruct {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #13231\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/13231\n    = help: add #![feature(optin_builtin_traits)] to the crate attributes to enable\n \n error: aborting due to 2 previous errors"}, {"sha": "5ac4120188847b56989136f3a4becffeb948ad10", "filename": "src/test/ui/feature-gates/feature-gate-plugin.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: compiler plugins are experimental and possibly buggy\n LL | #![plugin(foo)]\n    | ^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29597\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29597\n    = help: add #![feature(plugin)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "941a6c49d156cc786d22f3ca92896e8fe7f9bc1c", "filename": "src/test/ui/feature-gates/feature-gate-plugin_registrar.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin_registrar.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin_registrar.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin_registrar.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: compiler plugins are experimental and possibly buggy\n LL | pub fn registrar() {}\n    | ^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29597\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29597\n    = help: add #![feature(plugin_registrar)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "056bfdd85d1beeb5f96c2249aecfa4f97365c238", "filename": "src/test/ui/feature-gates/feature-gate-repr-simd.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr-simd.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr-simd.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr-simd.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: SIMD types are experimental and possibly buggy\n LL | #[repr(simd)]\n    | ^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #27731\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n    = help: add #![feature(repr_simd)] to the crate attributes to enable\n \n error[E0658]: SIMD types are experimental and possibly buggy\n@@ -13,7 +13,7 @@ error[E0658]: SIMD types are experimental and possibly buggy\n LL | #[repr(simd)]\n    | ^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #27731\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n    = help: add #![feature(repr_simd)] to the crate attributes to enable\n \n warning[E0566]: conflicting representation hints"}, {"sha": "30433447a2b40fc3391de7bccd51e5080afbda87", "filename": "src/test/ui/feature-gates/feature-gate-repr128.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr128.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr128.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr128.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -6,7 +6,7 @@ LL | |     A(u64)\n LL | | }\n    | |_^\n    |\n-   = note: for more information, see tracking issue #35118\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/35118\n    = help: add #![feature(repr128)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "36924f4c167ca0b7e11ae67d5ac886ef2ebcc036", "filename": "src/test/ui/feature-gates/feature-gate-repr_align_enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr_align_enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr_align_enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr_align_enum.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: `#[repr(align(x))]` on enums is experimental\n LL | #[repr(align(8))]\n    | ^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #57996\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/57996\n    = help: add #![feature(repr_align_enum)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "882feb87f42e805c7496ba2b9a81203475e710d5", "filename": "src/test/ui/feature-gates/feature-gate-rustc-attrs-1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs-1.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the `#[rustc_variance]` attribute is just used for rustc unit test\n LL | #[rustc_variance]\n    | ^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n \n error[E0658]: the `#[rustc_error]` attribute is just used for rustc unit tests and will never be stable\n@@ -13,7 +13,7 @@ error[E0658]: the `#[rustc_error]` attribute is just used for rustc unit tests a\n LL | #[rustc_error]\n    | ^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n \n error: aborting due to 2 previous errors"}, {"sha": "3c823c8d4e25f4e6fd1e05bba620c1fce490be26", "filename": "src/test/ui/feature-gates/feature-gate-rustc-attrs.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: unless otherwise specified, attributes with the prefix `rustc_` ar\n LL | #[rustc_foo]\n    |   ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "1686a8530fe0e9db4448e473d642316a35db1c40", "filename": "src/test/ui/feature-gates/feature-gate-simd.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-simd.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-simd.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-simd.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: SIMD types are experimental and possibly buggy\n LL | #[repr(simd)]\n    | ^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #27731\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n    = help: add #![feature(repr_simd)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "fe3c1e0afdd6bbfe8f7818e735efc46efb6cd216", "filename": "src/test/ui/feature-gates/feature-gate-slice-patterns.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-slice-patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-slice-patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-slice-patterns.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: syntax for subslices in slice patterns is not yet stabilized\n LL |         [1, 2, ..] => {}\n    |                ^^\n    |\n-   = note: for more information, see tracking issue #23121\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/23121\n    = help: add #![feature(slice_patterns)] to the crate attributes to enable\n \n error[E0658]: syntax for subslices in slice patterns is not yet stabilized\n@@ -13,7 +13,7 @@ error[E0658]: syntax for subslices in slice patterns is not yet stabilized\n LL |         [1, .., 5] => {}\n    |             ^^\n    |\n-   = note: for more information, see tracking issue #23121\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/23121\n    = help: add #![feature(slice_patterns)] to the crate attributes to enable\n \n error[E0658]: syntax for subslices in slice patterns is not yet stabilized\n@@ -22,7 +22,7 @@ error[E0658]: syntax for subslices in slice patterns is not yet stabilized\n LL |         [.., 4, 5] => {}\n    |          ^^\n    |\n-   = note: for more information, see tracking issue #23121\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/23121\n    = help: add #![feature(slice_patterns)] to the crate attributes to enable\n \n error[E0658]: syntax for subslices in slice patterns is not yet stabilized\n@@ -31,7 +31,7 @@ error[E0658]: syntax for subslices in slice patterns is not yet stabilized\n LL |         [ xs.., 4, 5 ] => {}\n    |           ^^\n    |\n-   = note: for more information, see tracking issue #23121\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/23121\n    = help: add #![feature(slice_patterns)] to the crate attributes to enable\n \n error[E0658]: syntax for subslices in slice patterns is not yet stabilized\n@@ -40,7 +40,7 @@ error[E0658]: syntax for subslices in slice patterns is not yet stabilized\n LL |         [ 1, xs.., 5 ] => {}\n    |              ^^\n    |\n-   = note: for more information, see tracking issue #23121\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/23121\n    = help: add #![feature(slice_patterns)] to the crate attributes to enable\n \n error[E0658]: syntax for subslices in slice patterns is not yet stabilized\n@@ -49,7 +49,7 @@ error[E0658]: syntax for subslices in slice patterns is not yet stabilized\n LL |         [ 1, 2, xs.. ] => {}\n    |                 ^^\n    |\n-   = note: for more information, see tracking issue #23121\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/23121\n    = help: add #![feature(slice_patterns)] to the crate attributes to enable\n \n error: aborting due to 6 previous errors"}, {"sha": "fbe64ea130d963f78d7fadb6fb642eaeb7e2f4f3", "filename": "src/test/ui/feature-gates/feature-gate-start.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-start.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-start.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-start.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: a #[start] function is an experimental feature whose signature may\n LL | fn foo(_: isize, _: *const *const u8) -> isize { 0 }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29633\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29633\n    = help: add #![feature(start)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "7d5ed74abd102d7b85003bc48d8e887eaf43f470", "filename": "src/test/ui/feature-gates/feature-gate-static-nobundle.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: kind=\"static-nobundle\" is feature gated\n LL | #[link(name=\"foo\", kind=\"static-nobundle\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #37403\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/37403\n    = help: add #![feature(static_nobundle)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "bbf0f66ca543adc9ceebfddce854ddb659f5a682", "filename": "src/test/ui/feature-gates/feature-gate-stmt_expr_attributes.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-stmt_expr_attributes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-stmt_expr_attributes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-stmt_expr_attributes.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: attributes on expressions are experimental\n LL | const X: i32 = #[allow(dead_code)] 8;\n    |                ^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #15701\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n    = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "95334d23d510b2d437ed2070d26539e877f0ca8b", "filename": "src/test/ui/feature-gates/feature-gate-thread_local.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-thread_local.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-thread_local.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-thread_local.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: `#[thread_local]` is an experimental feature, and does not current\n LL | #[thread_local]\n    | ^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29594\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29594\n    = help: add #![feature(thread_local)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "bcce31d873b0aa7e89e5e98b96afad9c0f9c6cc4", "filename": "src/test/ui/feature-gates/feature-gate-trace_macros.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trace_macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trace_macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trace_macros.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: `trace_macros` is not stable enough for use and is subject to chan\n LL |     trace_macros!(true);\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29598\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29598\n    = help: add #![feature(trace_macros)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "1a9718a6ce4ccfabc25905f3686f7141e23459ce", "filename": "src/test/ui/feature-gates/feature-gate-trait-alias.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trait-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trait-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trait-alias.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: trait aliases are experimental\n LL | trait Foo = Default;\n    | ^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #41517\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/41517\n    = help: add #![feature(trait_alias)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "cb72b067333706872c9981928642b938d8c38fb0", "filename": "src/test/ui/feature-gates/feature-gate-try_blocks.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-try_blocks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-try_blocks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-try_blocks.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -8,7 +8,7 @@ LL | |         x\n LL | |     };\n    | |_____^\n    |\n-   = note: for more information, see tracking issue #31436\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/31436\n    = help: add #![feature(try_blocks)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "f1d82d94a521cff46ca81906d31a47ad8dacf28d", "filename": "src/test/ui/feature-gates/feature-gate-try_reserve.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-try_reserve.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-try_reserve.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-try_reserve.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: use of unstable library feature 'try_reserve': new API\n LL |     v.try_reserve(10);\n    |       ^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #48043\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/48043\n    = help: add #![feature(try_reserve)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "0e4e25882c8e3106389c4fcf2adecfaa8f239be9", "filename": "src/test/ui/feature-gates/feature-gate-type_ascription.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_ascription.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_ascription.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_ascription.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: type ascription is experimental\n LL |     let a = 10: u8;\n    |             ^^^^^^\n    |\n-   = note: for more information, see tracking issue #23416\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/23416\n    = help: add #![feature(type_ascription)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "5fbaf8dd0ba71fa36342e3f66a9bea45ddf843c1", "filename": "src/test/ui/feature-gates/feature-gate-unboxed-closures-manual-impls.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-manual-impls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-manual-impls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-manual-impls.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: rust-call ABI is subject to change\n LL |     extern \"rust-call\" fn call(self, args: ()) -> () {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n@@ -13,7 +13,7 @@ error[E0658]: rust-call ABI is subject to change\n LL |     extern \"rust-call\" fn call_once(self, args: ()) -> () {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n@@ -22,7 +22,7 @@ error[E0658]: rust-call ABI is subject to change\n LL |     extern \"rust-call\" fn call_mut(&self, args: ()) -> () {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n@@ -31,7 +31,7 @@ error[E0658]: rust-call ABI is subject to change\n LL |     extern \"rust-call\" fn call_once(&self, args: ()) -> () {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error[E0658]: the precise format of `Fn`-family traits' type parameters is subject to change. Use parenthetical notation (Fn(Foo, Bar) -> Baz) instead\n@@ -40,7 +40,7 @@ error[E0658]: the precise format of `Fn`-family traits' type parameters is subje\n LL | impl Fn<()> for Foo {\n    |      ^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error[E0229]: associated type bindings are not allowed here\n@@ -55,7 +55,7 @@ error[E0658]: the precise format of `Fn`-family traits' type parameters is subje\n LL | impl FnMut<()> for Bar {\n    |      ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error[E0658]: the precise format of `Fn`-family traits' type parameters is subject to change. Use parenthetical notation (Fn(Foo, Bar) -> Baz) instead\n@@ -64,7 +64,7 @@ error[E0658]: the precise format of `Fn`-family traits' type parameters is subje\n LL | impl FnOnce<()> for Baz {\n    |      ^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error: aborting due to 8 previous errors"}, {"sha": "164368cd8ef795c64b63331c90d6310a440de1c4", "filename": "src/test/ui/feature-gates/feature-gate-unboxed-closures-method-calls.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-method-calls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-method-calls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-method-calls.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: use of unstable library feature 'fn_traits'\n LL |     f.call(());\n    |       ^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(fn_traits)] to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'fn_traits'\n@@ -13,7 +13,7 @@ error[E0658]: use of unstable library feature 'fn_traits'\n LL |     f.call_mut(());\n    |       ^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(fn_traits)] to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'fn_traits'\n@@ -22,7 +22,7 @@ error[E0658]: use of unstable library feature 'fn_traits'\n LL |     f.call_once(());\n    |       ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(fn_traits)] to the crate attributes to enable\n \n error: aborting due to 3 previous errors"}, {"sha": "ff2629fe4216e3ae887a41cdeb0107ea3a15bca2", "filename": "src/test/ui/feature-gates/feature-gate-unboxed-closures-ufcs-calls.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-ufcs-calls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-ufcs-calls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-ufcs-calls.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: use of unstable library feature 'fn_traits'\n LL |     Fn::call(&f, ());\n    |     ^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(fn_traits)] to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'fn_traits'\n@@ -13,7 +13,7 @@ error[E0658]: use of unstable library feature 'fn_traits'\n LL |     FnMut::call_mut(&mut f, ());\n    |     ^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(fn_traits)] to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'fn_traits'\n@@ -22,7 +22,7 @@ error[E0658]: use of unstable library feature 'fn_traits'\n LL |     FnOnce::call_once(f, ());\n    |     ^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(fn_traits)] to the crate attributes to enable\n \n error: aborting due to 3 previous errors"}, {"sha": "872a593f3e4718f4f5b46287f72c488f6b8050e4", "filename": "src/test/ui/feature-gates/feature-gate-unboxed-closures.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -6,7 +6,7 @@ LL | |         a + b\n LL | |     }\n    | |_____^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error[E0658]: the precise format of `Fn`-family traits' type parameters is subject to change. Use parenthetical notation (Fn(Foo, Bar) -> Baz) instead\n@@ -15,7 +15,7 @@ error[E0658]: the precise format of `Fn`-family traits' type parameters is subje\n LL | impl FnOnce<(u32, u32)> for Test {\n    |      ^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error: aborting due to 2 previous errors"}, {"sha": "8d925424d8ce51dba6f50acbc148eb5a4d998d83", "filename": "src/test/ui/feature-gates/feature-gate-underscore_const_names.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-underscore_const_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-underscore_const_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-underscore_const_names.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -10,7 +10,7 @@ LL | |     ()\n LL | | };\n    | |__^\n    |\n-   = note: for more information, see tracking issue #54912\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54912\n    = help: add #![feature(underscore_const_names)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "669e87ceadaf50ea45c5e6992ef2b5fa170f1951", "filename": "src/test/ui/feature-gates/feature-gate-unsized_tuple_coercion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unsized_tuple_coercion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unsized_tuple_coercion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unsized_tuple_coercion.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: unsized tuple coercion is not stable enough for use and is subject\n LL |     let _ : &(Send,) = &((),);\n    |                        ^^^^^^\n    |\n-   = note: for more information, see tracking issue #42877\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/42877\n    = help: add #![feature(unsized_tuple_coercion)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "5df3a1d699fe5bf0f863f9b8f90e88972da76ed1", "filename": "src/test/ui/feature-gates/feature-gate-untagged_unions.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-untagged_unions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-untagged_unions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-untagged_unions.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -6,7 +6,7 @@ LL | |     a: String,\n LL | | }\n    | |_^\n    |\n-   = note: for more information, see tracking issue #32836\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32836\n    = help: add #![feature(untagged_unions)] to the crate attributes to enable\n \n error[E0658]: unions with non-`Copy` fields are unstable\n@@ -17,7 +17,7 @@ LL | |     a: T,\n LL | | }\n    | |_^\n    |\n-   = note: for more information, see tracking issue #32836\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32836\n    = help: add #![feature(untagged_unions)] to the crate attributes to enable\n \n error[E0658]: unions with `Drop` implementations are unstable\n@@ -28,7 +28,7 @@ LL | |     a: u8,\n LL | | }\n    | |_^\n    |\n-   = note: for more information, see tracking issue #32836\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32836\n    = help: add #![feature(untagged_unions)] to the crate attributes to enable\n \n error: aborting due to 3 previous errors"}, {"sha": "bb55013d638cd8129a98b32003cd6e9cdb4e209b", "filename": "src/test/ui/feature-gates/feature-gate-unwind-attributes.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unwind-attributes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unwind-attributes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unwind-attributes.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: #[unwind] is experimental\n LL |     #[unwind(allowed)]\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #58760\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/58760\n    = help: add #![feature(unwind_attributes)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "0931145a6e26bad1c105883e1c4265129d0c1ccc", "filename": "src/test/ui/feature-gates/underscore_const_names_feature_gate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Funderscore_const_names_feature_gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ffeature-gates%2Funderscore_const_names_feature_gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Funderscore_const_names_feature_gate.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: naming constants with `_` is unstable\n LL | const _: () = ();\n    | ^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #54912\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54912\n    = help: add #![feature(underscore_const_names)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "70d197994f3119739fc554f6a03a7da872b5305c", "filename": "src/test/ui/imports/local-modularized-tricky-fail-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-2.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -7,7 +7,7 @@ LL | exported!();\n LL |                 () => ( struct \u0411; )\n    |                                ^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n@@ -19,7 +19,7 @@ LL |     panic!();\n LL |         () => ( struct \u0413; )\n    |                        ^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n@@ -31,7 +31,7 @@ LL | include!();\n LL |         () => ( struct \u0414; )\n    |                        ^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n error: aborting due to 3 previous errors"}, {"sha": "83e27aaf2f855dcfec192d13641925b466efcff7", "filename": "src/test/ui/inference/inference_unstable_forced.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Finference%2Finference_unstable_forced.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Finference%2Finference_unstable_forced.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Finference_unstable_forced.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: use of unstable library feature 'ipu_flatten'\n LL |     assert_eq!('x'.ipu_flatten(), 0);\n    |                    ^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #99999\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/99999\n    = help: add #![feature(ipu_flatten)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "69b6ab71e5077b2bf58d6a1cbe30089606d82222", "filename": "src/test/ui/issues/issue-17458.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-17458.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-17458.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17458.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: casting pointers to integers in statics is unstable\n LL | static X: usize = unsafe { 0 as *const usize as usize };\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51910\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51910\n    = help: add #![feature(const_raw_ptr_to_usize_cast)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "d10242434b094225ac764046ebe9de910294d158", "filename": "src/test/ui/issues/issue-18294.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-18294.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-18294.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-18294.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: casting pointers to integers in constants is unstable\n LL |     const Y: usize = unsafe { &X as *const u32 as usize };\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51910\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51910\n    = help: add #![feature(const_raw_ptr_to_usize_cast)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "405e717c358e6bc355d69132e6b581d7669f88d5", "filename": "src/test/ui/issues/issue-20313.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-20313.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-20313.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20313.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: linking to LLVM intrinsics is experimental\n LL |     fn sqrt(x: f32) -> f32;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29602\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29602\n    = help: add #![feature(link_llvm_intrinsics)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "0567dcbec6da4078d1419c6eee4d60ae8e4cf599", "filename": "src/test/ui/issues/issue-23024.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-23024.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-23024.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-23024.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the precise format of `Fn`-family traits' type parameters is subje\n LL |     println!(\"{:?}\",(vfnfer[0] as Fn)(3));\n    |                                   ^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error[E0107]: wrong number of type arguments: expected 1, found 0"}, {"sha": "a800f787e38da5bbe94b889e35217614ed202b72", "filename": "src/test/ui/issues/issue-25826.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-25826.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-25826.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-25826.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: comparing raw pointers inside constant\n LL |     const A: bool = unsafe { id::<u8> as *const () < id::<u16> as *const () };\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #53020\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/53020\n    = help: add #![feature(const_compare_raw_pointers)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "3ab934f6ca58f889a93a4c30db2a6338ee704251", "filename": "src/test/ui/issues/issue-32655.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-32655.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-32655.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32655.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -7,7 +7,7 @@ LL |         #[derive_Clone]\n LL | foo!();\n    | ------- in this macro invocation\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `derive_Clone` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -16,7 +16,7 @@ error[E0658]: The attribute `derive_Clone` is currently unknown to the compiler\n LL |     #[derive_Clone]\n    |       ^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error: aborting due to 2 previous errors"}, {"sha": "157c8c85af0c858587add4656999814fdfcf137f", "filename": "src/test/ui/issues/issue-32829.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-32829.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-32829.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32829.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: panicking in statics is unstable\n LL | static S : u64 = { { panic!(\"foo\"); 0 } };\n    |                      ^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51999\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51999\n    = help: add #![feature(const_panic)] to the crate attributes to enable\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n "}, {"sha": "9cac105bab505efda952fd5bfc59cb9c9a6ff6eb", "filename": "src/test/ui/issues/issue-37887.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-37887.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-37887.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-37887.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -10,7 +10,7 @@ error[E0658]: use of unstable library feature 'rustc_private': this crate is bei\n LL |     extern crate libc;\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #27812\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/27812\n    = help: add #![feature(rustc_private)] to the crate attributes to enable\n \n error: aborting due to 2 previous errors"}, {"sha": "29e10f1bf41c7f76075c3ac4af63ddcaba972fb9", "filename": "src/test/ui/issues/issue-49074.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-49074.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-49074.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-49074.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: The attribute `marco_use` is currently unknown to the compiler and\n LL | #[marco_use] // typo\n    |   ^^^^^^^^^ help: a built-in attribute with a similar name exists: `macro_use`\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error: cannot find macro `bar!` in this scope"}, {"sha": "9dd4a9f23814cb9b10fac4c4a2e527d136524caf", "filename": "src/test/ui/issues/issue-51279.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-51279.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-51279.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51279.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -52,7 +52,7 @@ error[E0658]: The attribute `ignored` is currently unknown to the compiler and m\n LL | type Z<#[ignored] 'a, #[cfg(none)] T> = X<'a, T>;\n    |        ^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error: aborting due to 9 previous errors"}, {"sha": "f57697e5892c23600756e9933e5fe63be3f7e895", "filename": "src/test/ui/issues/issue-52023-array-size-pointer-cast.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-52023-array-size-pointer-cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fissues%2Fissue-52023-array-size-pointer-cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52023-array-size-pointer-cast.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: casting pointers to integers in constants is unstable\n LL |     let _ = [0; (&0 as *const i32) as usize];\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #51910\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51910\n    = help: add #![feature(const_raw_ptr_to_usize_cast)] to the crate attributes to enable\n \n error[E0080]: it is undefined behavior to use this value"}, {"sha": "f2aab164bd7fa3fe23ef80114a8efc6054640a15", "filename": "src/test/ui/linkage4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Flinkage4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Flinkage4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage4.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the `linkage` attribute is experimental and not portable across pl\n LL | #[linkage = \"external\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29603\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29603\n    = help: add #![feature(linkage)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "600d5d4cc9a6dd8c4e28a49c690f1db5b4d335bc", "filename": "src/test/ui/macros/macro-reexport-removed.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fmacros%2Fmacro-reexport-removed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fmacros%2Fmacro-reexport-removed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-reexport-removed.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -16,7 +16,7 @@ error[E0658]: The attribute `macro_reexport` is currently unknown to the compile\n LL | #[macro_reexport(macro_one)]\n    |   ^^^^^^^^^^^^^^ help: a built-in attribute with a similar name exists: `macro_export`\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error: aborting due to 2 previous errors"}, {"sha": "ec7c37402d4950c0b331eebc1a2e1cecd63bc639", "filename": "src/test/ui/macros/macros-in-extern.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fmacros%2Fmacros-in-extern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fmacros%2Fmacros-in-extern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacros-in-extern.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: macro invocations in `extern {}` blocks are experimental\n LL |     returns_isize!(rust_get_test_int);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #49476\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49476\n    = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n \n error[E0658]: macro invocations in `extern {}` blocks are experimental\n@@ -13,7 +13,7 @@ error[E0658]: macro invocations in `extern {}` blocks are experimental\n LL |     takes_u32_returns_u32!(rust_dbg_extern_identity_u32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #49476\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49476\n    = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n \n error[E0658]: macro invocations in `extern {}` blocks are experimental\n@@ -22,7 +22,7 @@ error[E0658]: macro invocations in `extern {}` blocks are experimental\n LL |     emits_nothing!();\n    |     ^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #49476\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49476\n    = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n \n error: aborting due to 3 previous errors"}, {"sha": "72999a0de89ebeedb0ef31e292b9c2e2d02b5cc9", "filename": "src/test/ui/panic-runtime/needs-gate.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fpanic-runtime%2Fneeds-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fpanic-runtime%2Fneeds-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-runtime%2Fneeds-gate.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the `#[panic_runtime]` attribute is an experimental feature\n LL | #![panic_runtime]\n    | ^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32837\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32837\n    = help: add #![feature(panic_runtime)] to the crate attributes to enable\n \n error[E0658]: the `#[needs_panic_runtime]` attribute is an experimental feature\n@@ -13,7 +13,7 @@ error[E0658]: the `#[needs_panic_runtime]` attribute is an experimental feature\n LL | #![needs_panic_runtime]\n    | ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #32837\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/32837\n    = help: add #![feature(needs_panic_runtime)] to the crate attributes to enable\n \n error: aborting due to 2 previous errors"}, {"sha": "3928a973eab57d52f124c61c2aad416ff6cd4f87", "filename": "src/test/ui/proc-macro/attr-stmt-expr.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: attributes on expressions are experimental\n LL |     #[expect_print_expr]\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #15701\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n    = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n@@ -13,7 +13,7 @@ error[E0658]: attributes on expressions are experimental\n LL |     #[expect_expr]\n    |     ^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #15701\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n    = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n \n error: aborting due to 2 previous errors"}, {"sha": "581393534928a6ca9ca3e7dda647191261b0cf3d", "filename": "src/test/ui/proc-macro/derive-helper-shadowing.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: The attribute `my_attr` is currently unknown to the compiler and m\n LL |             #[my_attr]\n    |               ^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0659]: `my_attr` is ambiguous (derive helper attribute vs any other name)"}, {"sha": "d235343ff16188e1c2e7138ece81d56dc5cf96de", "filename": "src/test/ui/proc-macro/derive-still-gated.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fderive-still-gated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fderive-still-gated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fderive-still-gated.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: The attribute `derive_A` is currently unknown to the compiler and\n LL | #[derive_A]\n    |   ^^^^^^^^ help: a built-in attribute with a similar name exists: `derive`\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "e2f51dd3d5dd2383d1370391346591044321e75e", "filename": "src/test/ui/proc-macro/expand-to-unstable-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: unless otherwise specified, attributes with the prefix `rustc_` ar\n LL | #[derive(Unstable)]\n    |          ^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "dfb2f6f63d84706d56c6d65ac3c066b1847ee3e6", "filename": "src/test/ui/proc-macro/issue-41211.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: The attribute `emit_unchanged` is currently unknown to the compile\n LL | #![emit_unchanged]\n    |    ^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error: inconsistent resolution for a macro: first custom attribute, then attribute macro"}, {"sha": "61571650f2f048733207c45929510d0a8d73a5c8", "filename": "src/test/ui/proc-macro/macros-in-extern.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fmacros-in-extern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fmacros-in-extern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmacros-in-extern.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: macro invocations in `extern {}` blocks are experimental\n LL |     #[no_output]\n    |     ^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #49476\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49476\n    = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n \n error[E0658]: macro invocations in `extern {}` blocks are experimental\n@@ -13,7 +13,7 @@ error[E0658]: macro invocations in `extern {}` blocks are experimental\n LL |     #[nop_attr]\n    |     ^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #49476\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49476\n    = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n \n error[E0658]: macro invocations in `extern {}` blocks are experimental\n@@ -22,7 +22,7 @@ error[E0658]: macro invocations in `extern {}` blocks are experimental\n LL |     emit_input!(fn rust_dbg_extern_identity_u32(arg: u32) -> u32;);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #49476\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49476\n    = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n \n error: aborting due to 3 previous errors"}, {"sha": "80985ce7523533507652c6680165fa4d399bf560", "filename": "src/test/ui/proc-macro/more-gates.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fmore-gates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fmore-gates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmore-gates.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: procedural macros cannot expand to macro definitions\n LL | #[attr2mac1]\n    | ^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #54727\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: procedural macros cannot expand to macro definitions\n@@ -13,7 +13,7 @@ error[E0658]: procedural macros cannot expand to macro definitions\n LL | #[attr2mac2]\n    | ^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #54727\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: procedural macros cannot expand to macro definitions\n@@ -22,7 +22,7 @@ error[E0658]: procedural macros cannot expand to macro definitions\n LL | mac2mac1!();\n    | ^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #54727\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: procedural macros cannot expand to macro definitions\n@@ -31,7 +31,7 @@ error[E0658]: procedural macros cannot expand to macro definitions\n LL | mac2mac2!();\n    | ^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #54727\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: procedural macros cannot expand to macro definitions\n@@ -40,7 +40,7 @@ error[E0658]: procedural macros cannot expand to macro definitions\n LL | tricky!();\n    | ^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #54727\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error: aborting due to 5 previous errors"}, {"sha": "084c7289d044e09580c362eb8db771f0dda457f4", "filename": "src/test/ui/proc-macro/proc-macro-attributes.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-attributes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-attributes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-attributes.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: The attribute `C` is currently unknown to the compiler and may hav\n LL | #[C]\n    |   ^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0659]: `B` is ambiguous (derive helper attribute vs any other name)"}, {"sha": "1bb864b52ea7d32a67f380e2d24471f59d24bdd5", "filename": "src/test/ui/proc-macro/proc-macro-gates.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: non-builtin inner attributes are unstable\n LL |     #![a]\n    |     ^^^^^\n    |\n-   = note: for more information, see tracking issue #54726\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54726\n    = help: add #![feature(custom_inner_attributes)] to the crate attributes to enable\n \n error[E0658]: non-builtin inner attributes are unstable\n@@ -13,7 +13,7 @@ error[E0658]: non-builtin inner attributes are unstable\n LL |     #![a]\n    |     ^^^^^\n    |\n-   = note: for more information, see tracking issue #54726\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54726\n    = help: add #![feature(custom_inner_attributes)] to the crate attributes to enable\n \n error[E0658]: custom attributes cannot be applied to modules\n@@ -22,7 +22,7 @@ error[E0658]: custom attributes cannot be applied to modules\n LL | #[a]\n    | ^^^^\n    |\n-   = note: for more information, see tracking issue #54727\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: custom attributes cannot be applied to modules\n@@ -31,7 +31,7 @@ error[E0658]: custom attributes cannot be applied to modules\n LL |     #![a]\n    |     ^^^^^\n    |\n-   = note: for more information, see tracking issue #54727\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error: custom attribute invocations must be of the form #[foo] or #[foo(..)], the macro name must only be followed by a delimiter token\n@@ -46,7 +46,7 @@ error[E0658]: custom attributes cannot be applied to statements\n LL |     #[a]\n    |     ^^^^\n    |\n-   = note: for more information, see tracking issue #54727\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: custom attributes cannot be applied to statements\n@@ -55,7 +55,7 @@ error[E0658]: custom attributes cannot be applied to statements\n LL |     #[a]\n    |     ^^^^\n    |\n-   = note: for more information, see tracking issue #54727\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: custom attributes cannot be applied to statements\n@@ -64,7 +64,7 @@ error[E0658]: custom attributes cannot be applied to statements\n LL |     #[a]\n    |     ^^^^\n    |\n-   = note: for more information, see tracking issue #54727\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: custom attributes cannot be applied to expressions\n@@ -73,7 +73,7 @@ error[E0658]: custom attributes cannot be applied to expressions\n LL |     let _x = #[a] 2;\n    |              ^^^^\n    |\n-   = note: for more information, see tracking issue #54727\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: custom attributes cannot be applied to expressions\n@@ -82,7 +82,7 @@ error[E0658]: custom attributes cannot be applied to expressions\n LL |     let _x = [#[a] 2];\n    |               ^^^^\n    |\n-   = note: for more information, see tracking issue #54727\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: custom attributes cannot be applied to expressions\n@@ -91,7 +91,7 @@ error[E0658]: custom attributes cannot be applied to expressions\n LL |     let _x = #[a] println!();\n    |              ^^^^\n    |\n-   = note: for more information, see tracking issue #54727\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: procedural macros cannot be expanded to types\n@@ -100,7 +100,7 @@ error[E0658]: procedural macros cannot be expanded to types\n LL |     let _x: m!(u32) = 3;\n    |             ^^^^^^^\n    |\n-   = note: for more information, see tracking issue #54727\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: procedural macros cannot be expanded to patterns\n@@ -109,7 +109,7 @@ error[E0658]: procedural macros cannot be expanded to patterns\n LL |     if let m!(Some(_x)) = Some(3) {}\n    |            ^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #54727\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: procedural macros cannot be expanded to statements\n@@ -118,7 +118,7 @@ error[E0658]: procedural macros cannot be expanded to statements\n LL |     m!(struct S;);\n    |     ^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #54727\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: procedural macros cannot be expanded to statements\n@@ -127,7 +127,7 @@ error[E0658]: procedural macros cannot be expanded to statements\n LL |     m!(let _x = 3;);\n    |     ^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #54727\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: procedural macros cannot be expanded to expressions\n@@ -136,7 +136,7 @@ error[E0658]: procedural macros cannot be expanded to expressions\n LL |     let _x = m!(3);\n    |              ^^^^^\n    |\n-   = note: for more information, see tracking issue #54727\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: procedural macros cannot be expanded to expressions\n@@ -145,7 +145,7 @@ error[E0658]: procedural macros cannot be expanded to expressions\n LL |     let _x = [m!(3)];\n    |               ^^^^^\n    |\n-   = note: for more information, see tracking issue #54727\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error: aborting due to 17 previous errors"}, {"sha": "0e8236f460f8ca2b5ae32d9baff86d1af8834857", "filename": "src/test/ui/proc-macro/proc-macro-gates2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates2.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: The attribute `a` is currently unknown to the compiler and may hav\n LL | fn _test6<#[a] T>() {}\n    |           ^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `a` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -13,7 +13,7 @@ error[E0658]: The attribute `a` is currently unknown to the compiler and may hav\n LL |         #[a]\n    |         ^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error: aborting due to 2 previous errors"}, {"sha": "c8738d1ed3429a15b9b03778dbf18df89b5dd9e2", "filename": "src/test/ui/reserved/reserved-attr-on-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Freserved%2Freserved-attr-on-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Freserved%2Freserved-attr-on-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freserved%2Freserved-attr-on-macro.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: unless otherwise specified, attributes with the prefix `rustc_` ar\n LL | #[rustc_attribute_should_be_reserved]\n    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n \n error: cannot determine resolution for the macro `foo`"}, {"sha": "3a2014fab090bf4130792b7206acb69ad5f4a3aa", "filename": "src/test/ui/rfc1445/feature-gate.no_gate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Frfc1445%2Ffeature-gate.no_gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Frfc1445%2Ffeature-gate.no_gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Ffeature-gate.no_gate.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the semantics of constant patterns is not yet settled\n LL | #[structural_match]\n    | ^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #31434\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/31434\n    = help: add #![feature(structural_match)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "938edbe463fc65812203ef694f589fcdff667e20", "filename": "src/test/ui/span/gated-features-attr-spans.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fspan%2Fgated-features-attr-spans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fspan%2Fgated-features-attr-spans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fgated-features-attr-spans.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: SIMD types are experimental and possibly buggy\n LL | #[repr(simd)]\n    | ^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #27731\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n    = help: add #![feature(repr_simd)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "ee479d6c7918513518bdffa0400498f3da1e9446", "filename": "src/test/ui/span/issue-36530.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fspan%2Fissue-36530.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fspan%2Fissue-36530.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-36530.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: The attribute `foo` is currently unknown to the compiler and may h\n LL | #[foo]\n    |   ^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: non-builtin inner attributes are unstable\n@@ -13,7 +13,7 @@ error[E0658]: non-builtin inner attributes are unstable\n LL |     #![foo]\n    |     ^^^^^^^\n    |\n-   = note: for more information, see tracking issue #54726\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54726\n    = help: add #![feature(custom_inner_attributes)] to the crate attributes to enable\n \n error[E0658]: The attribute `foo` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -22,7 +22,7 @@ error[E0658]: The attribute `foo` is currently unknown to the compiler and may h\n LL |     #![foo]\n    |        ^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error: aborting due to 3 previous errors"}, {"sha": "b95e62edaaa76dcb38729ee4507558d2356c9065", "filename": "src/test/ui/specialization/defaultimpl/specialization-feature-gate-default.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-feature-gate-default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-feature-gate-default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-feature-gate-default.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -6,7 +6,7 @@ LL | |     fn foo(&self) {}\n LL | | }\n    | |_^\n    |\n-   = note: for more information, see tracking issue #31844\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/31844\n    = help: add #![feature(specialization)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "e649f2aa47a6c58b087116e583b8b8e321908a4e", "filename": "src/test/ui/specialization/specialization-feature-gate-default.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-feature-gate-default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-feature-gate-default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-feature-gate-default.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: specialization is unstable\n LL |     default fn foo(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #31844\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/31844\n    = help: add #![feature(specialization)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "36e192e583e6286dc4ddd46baa5b86733e4a9da0", "filename": "src/test/ui/stability-attribute/stability-attribute-issue.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-issue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-issue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-issue.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: use of unstable library feature 'unstable_test_feature'\n LL |     unstable();\n    |     ^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #1\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/1\n    = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature': message\n@@ -13,7 +13,7 @@ error[E0658]: use of unstable library feature 'unstable_test_feature': message\n LL |     unstable_msg();\n    |     ^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #2\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/2\n    = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n \n error: aborting due to 2 previous errors"}, {"sha": "1b5e989af7b19140f4782af58b8a0b14f7a5b08b", "filename": "src/test/ui/stmt_expr_attrs_no_feature.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fstmt_expr_attrs_no_feature.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fstmt_expr_attrs_no_feature.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstmt_expr_attrs_no_feature.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: attributes on expressions are experimental\n LL |     #[attr]\n    |     ^^^^^^^\n    |\n-   = note: for more information, see tracking issue #15701\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n    = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n@@ -13,7 +13,7 @@ error[E0658]: attributes on expressions are experimental\n LL |     fn y(a: [u8; #[attr] 5]);\n    |                  ^^^^^^^\n    |\n-   = note: for more information, see tracking issue #15701\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n    = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n@@ -22,7 +22,7 @@ error[E0658]: attributes on expressions are experimental\n LL |     const Y: u8 = #[attr] 5;\n    |                   ^^^^^^^\n    |\n-   = note: for more information, see tracking issue #15701\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n    = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n@@ -31,7 +31,7 @@ error[E0658]: attributes on expressions are experimental\n LL |     const Y: [u8; #[attr] 5];\n    |                   ^^^^^^^\n    |\n-   = note: for more information, see tracking issue #15701\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n    = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n@@ -40,7 +40,7 @@ error[E0658]: attributes on expressions are experimental\n LL |     field2: [u8; #[attr] 5]\n    |                  ^^^^^^^\n    |\n-   = note: for more information, see tracking issue #15701\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n    = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n@@ -49,7 +49,7 @@ error[E0658]: attributes on expressions are experimental\n LL |     [u8; #[attr] 5]\n    |          ^^^^^^^\n    |\n-   = note: for more information, see tracking issue #15701\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n    = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n@@ -58,7 +58,7 @@ error[E0658]: attributes on expressions are experimental\n LL |         [u8; #[attr] 5]\n    |              ^^^^^^^\n    |\n-   = note: for more information, see tracking issue #15701\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n    = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n@@ -67,7 +67,7 @@ error[E0658]: attributes on expressions are experimental\n LL |         field2: [u8; #[attr] 5]\n    |                      ^^^^^^^\n    |\n-   = note: for more information, see tracking issue #15701\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n    = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n@@ -76,7 +76,7 @@ error[E0658]: attributes on expressions are experimental\n LL |         6 => #[attr] (),\n    |              ^^^^^^^\n    |\n-   = note: for more information, see tracking issue #15701\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n    = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n \n error: aborting due to 9 previous errors"}, {"sha": "8367ff20aa408bd3a6518ab6d2be8aad66834b68", "filename": "src/test/ui/suggestions/attribute-typos.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: unless otherwise specified, attributes with the prefix `rustc_` ar\n LL | #[rustc_err]\n    |   ^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n \n error[E0658]: The attribute `tests` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -13,7 +13,7 @@ error[E0658]: The attribute `tests` is currently unknown to the compiler and may\n LL | #[tests]\n    |   ^^^^^ help: a built-in attribute with a similar name exists: `test`\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0658]: The attribute `deprcated` is currently unknown to the compiler and may have meaning added to it in the future\n@@ -22,7 +22,7 @@ error[E0658]: The attribute `deprcated` is currently unknown to the compiler and\n LL | #[deprcated]\n    |   ^^^^^^^^^ help: a built-in attribute with a similar name exists: `deprecated`\n    |\n-   = note: for more information, see tracking issue #29642\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error: aborting due to 3 previous errors"}, {"sha": "86b4bc1157b7282b00223e0a4a32e0b3da904026", "filename": "src/test/ui/syntax-trait-polarity-feature-gate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fsyntax-trait-polarity-feature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Fsyntax-trait-polarity-feature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsyntax-trait-polarity-feature-gate.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: negative trait bounds are not yet fully implemented; use marker ty\n LL | impl !Send for TestType {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #13231\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/13231\n    = help: add #![feature(optin_builtin_traits)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "155298e5062b50f499df181533e6f6c250754d7c", "filename": "src/test/ui/target-feature-gate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ftarget-feature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ftarget-feature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftarget-feature-gate.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the target feature `avx512bw` is currently unstable\n LL | #[target_feature(enable = \"avx512bw\")]\n    |                  ^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #44839\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44839\n    = help: add #![feature(avx512_target_feature)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "e0ffcfe295fdfdbc100b43d9d1ae7603ca14ae9c", "filename": "src/test/ui/trace_macros-gate.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ftrace_macros-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Ftrace_macros-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrace_macros-gate.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: `trace_macros` is not stable enough for use and is subject to chan\n LL |     trace_macros!();\n    |     ^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29598\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29598\n    = help: add #![feature(trace_macros)] to the crate attributes to enable\n \n error: trace_macros! accepts only `true` or `false`\n@@ -19,7 +19,7 @@ error[E0658]: `trace_macros` is not stable enough for use and is subject to chan\n LL |     trace_macros!(true);\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29598\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29598\n    = help: add #![feature(trace_macros)] to the crate attributes to enable\n \n error[E0658]: `trace_macros` is not stable enough for use and is subject to change\n@@ -28,7 +28,7 @@ error[E0658]: `trace_macros` is not stable enough for use and is subject to chan\n LL |     trace_macros!(false);\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29598\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29598\n    = help: add #![feature(trace_macros)] to the crate attributes to enable\n \n error[E0658]: `trace_macros` is not stable enough for use and is subject to change\n@@ -40,7 +40,7 @@ LL |         ($x: ident) => { trace_macros!($x) }\n LL |     expando!(true);\n    |     --------------- in this macro invocation\n    |\n-   = note: for more information, see tracking issue #29598\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29598\n    = help: add #![feature(trace_macros)] to the crate attributes to enable\n \n error: aborting due to 5 previous errors"}, {"sha": "1604aa4a0f7006973fa5695d2ddb590e915978bb", "filename": "src/test/ui/unboxed-closures/unboxed-closure-feature-gate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-feature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-feature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-feature-gate.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: parenthetical notation is only stable when used with `Fn`-family t\n LL |     let x: Box<Foo(isize)>;\n    |                ^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error: aborting due to previous error"}, {"sha": "0901126a3fec366d83617eb105795cd1c8a95ba1", "filename": "src/test/ui/unboxed-closures/unboxed-closure-sugar-not-used-on-fn.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-not-used-on-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-not-used-on-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-not-used-on-fn.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the precise format of `Fn`-family traits' type parameters is subje\n LL | fn bar1(x: &Fn<(), Output=()>) {\n    |             ^^^^^^^^^^^^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error[E0658]: the precise format of `Fn`-family traits' type parameters is subject to change. Use parenthetical notation (Fn(Foo, Bar) -> Baz) instead\n@@ -13,7 +13,7 @@ error[E0658]: the precise format of `Fn`-family traits' type parameters is subje\n LL | fn bar2<T>(x: &T) where T: Fn<()> {\n    |                            ^^^^^^\n    |\n-   = note: for more information, see tracking issue #29625\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n \n error: aborting due to 2 previous errors"}, {"sha": "b65848cc58f6e78d3c1af9ffed8ebdfd9f1f33bc", "filename": "src/test/ui/utf8_idents.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Futf8_idents.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146d040f0b187876ac85993ae15427ebb7438eb7/src%2Ftest%2Fui%2Futf8_idents.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Futf8_idents.stderr?ref=146d040f0b187876ac85993ae15427ebb7438eb7", "patch": "@@ -4,7 +4,7 @@ error[E0658]: non-ascii idents are not fully supported\n LL |     '\u03b2,\n    |     ^^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n@@ -13,7 +13,7 @@ error[E0658]: non-ascii idents are not fully supported\n LL |     \u03b3\n    |     ^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n@@ -22,7 +22,7 @@ error[E0658]: non-ascii idents are not fully supported\n LL |     \u03b4: usize\n    |     ^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n@@ -31,7 +31,7 @@ error[E0658]: non-ascii idents are not fully supported\n LL |     let \u03b1 = 0.00001f64;\n    |         ^\n    |\n-   = note: for more information, see tracking issue #55467\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n    = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n \n warning: type parameter `\u03b3` should have an upper camel case name"}]}