{"sha": "2d1cd9ae80f1c6f5c1925f52bd69344bf63610c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkMWNkOWFlODBmMWM2ZjVjMTkyNWY1MmJkNjkzNDRiZjYzNjEwYzc=", "commit": {"author": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2018-11-05T17:23:34Z"}, "committer": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2018-11-05T17:23:34Z"}, "message": "Make `ParseIntError` and `IntErrorKind` fully public", "tree": {"sha": "26532552016e6aec1adc429ec84d8d0c50ef6c6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26532552016e6aec1adc429ec84d8d0c50ef6c6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d1cd9ae80f1c6f5c1925f52bd69344bf63610c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d1cd9ae80f1c6f5c1925f52bd69344bf63610c7", "html_url": "https://github.com/rust-lang/rust/commit/2d1cd9ae80f1c6f5c1925f52bd69344bf63610c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d1cd9ae80f1c6f5c1925f52bd69344bf63610c7/comments", "author": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cfc6033955dd2685dfa7baeec6f6bc3bfdfe2f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cfc6033955dd2685dfa7baeec6f6bc3bfdfe2f1", "html_url": "https://github.com/rust-lang/rust/commit/6cfc6033955dd2685dfa7baeec6f6bc3bfdfe2f1"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "fada8efbd218dfecf2b0cf0b5090761e24efdad6", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2d1cd9ae80f1c6f5c1925f52bd69344bf63610c7/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d1cd9ae80f1c6f5c1925f52bd69344bf63610c7/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=2d1cd9ae80f1c6f5c1925f52bd69344bf63610c7", "patch": "@@ -4768,11 +4768,11 @@ fn from_str_radix<T: FromStrRadixHelper>(src: &str, radix: u32) -> Result<T, Par\n #[derive(Debug, Clone, PartialEq, Eq)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct ParseIntError {\n-    kind: IntErrorKind,\n+    pub kind: IntErrorKind,\n }\n \n #[derive(Debug, Clone, PartialEq, Eq)]\n-enum IntErrorKind {\n+pub enum IntErrorKind {\n     Empty,\n     InvalidDigit,\n     Overflow,"}]}