{"sha": "8a42e3da0bae5b25d42c0eea29884b31a41215e1", "node_id": "C_kwDOAAsO6NoAKDhhNDJlM2RhMGJhZTViMjVkNDJjMGVlYTI5ODg0YjMxYTQxMjE1ZTE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-24T06:48:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-24T06:48:05Z"}, "message": "Rollup merge of #94267 - pierwill:fast-reject-bound, r=michaelwoerister\n\nRemove unused ordering derivations and bounds for `SimplifiedTypeGen`\n\nThis is another small PR clearing the way for work on #90317.", "tree": {"sha": "ea671745888b547c42c2936866d86ca85179cbea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea671745888b547c42c2936866d86ca85179cbea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a42e3da0bae5b25d42c0eea29884b31a41215e1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiFyolCRBK7hj4Ov3rIwAANiwIAHAokemMxuu/jQ9hdH/PD/Ux\n6TiGUxL3+zgT1TcL3LoOALoTWYqjqogAIwZ4fzFTNpZKVE6qH7ParXpcrwl6W0/i\ngH2owiHtAITGB7yncu+cGkxd+u4J4hSx2mK7q68Vvj17jIlMVDEC+o72fl6/unRV\nvbtGgKZuKoF0gqONCkKtXKy5TGtcT0wYj75N8+wYEu1tnkIxiIrdu2TVrr8d9nzB\nwSWcdgZatpjdMBYbmsEctgcb9BQ0tSBCdoIImORGUCcmZuEhw8lWsydwGGFxk1Xk\n13KI+sCnbRbY7Yi30VMJW02T06SXFaiMs6pS8iPw0Uoq07n3jGoTB7yWx6pw8Do=\n=ee+p\n-----END PGP SIGNATURE-----\n", "payload": "tree ea671745888b547c42c2936866d86ca85179cbea\nparent 77a8e60dd7285423815002a747ce24602936f59b\nparent 516e965bfd6aabbbeeb82b540d595ef03ca891d9\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1645685285 +0100\ncommitter GitHub <noreply@github.com> 1645685285 +0100\n\nRollup merge of #94267 - pierwill:fast-reject-bound, r=michaelwoerister\n\nRemove unused ordering derivations and bounds for `SimplifiedTypeGen`\n\nThis is another small PR clearing the way for work on #90317.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a42e3da0bae5b25d42c0eea29884b31a41215e1", "html_url": "https://github.com/rust-lang/rust/commit/8a42e3da0bae5b25d42c0eea29884b31a41215e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a42e3da0bae5b25d42c0eea29884b31a41215e1/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77a8e60dd7285423815002a747ce24602936f59b", "url": "https://api.github.com/repos/rust-lang/rust/commits/77a8e60dd7285423815002a747ce24602936f59b", "html_url": "https://github.com/rust-lang/rust/commit/77a8e60dd7285423815002a747ce24602936f59b"}, {"sha": "516e965bfd6aabbbeeb82b540d595ef03ca891d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/516e965bfd6aabbbeeb82b540d595ef03ca891d9", "html_url": "https://github.com/rust-lang/rust/commit/516e965bfd6aabbbeeb82b540d595ef03ca891d9"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "3c1ac66e2d136c7287a6130915042c225572315d", "filename": "compiler/rustc_middle/src/ty/fast_reject.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8a42e3da0bae5b25d42c0eea29884b31a41215e1/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffast_reject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a42e3da0bae5b25d42c0eea29884b31a41215e1/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffast_reject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffast_reject.rs?ref=8a42e3da0bae5b25d42c0eea29884b31a41215e1", "patch": "@@ -17,7 +17,7 @@ pub type SimplifiedType = SimplifiedTypeGen<DefId>;\n /// because we sometimes need to use SimplifiedTypeGen values as stable sorting\n /// keys (in which case we use a DefPathHash as id-type) but in the general case\n /// the non-stable but fast to construct DefId-version is the better choice.\n-#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, TyEncodable, TyDecodable)]\n+#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, TyEncodable, TyDecodable)]\n pub enum SimplifiedTypeGen<D>\n where\n     D: Copy + Debug + Eq,\n@@ -124,7 +124,7 @@ pub fn simplify_type(\n     }\n }\n \n-impl<D: Copy + Debug + Ord + Eq> SimplifiedTypeGen<D> {\n+impl<D: Copy + Debug + Eq> SimplifiedTypeGen<D> {\n     pub fn def(self) -> Option<D> {\n         match self {\n             AdtSimplifiedType(d)\n@@ -140,7 +140,7 @@ impl<D: Copy + Debug + Ord + Eq> SimplifiedTypeGen<D> {\n     pub fn map_def<U, F>(self, map: F) -> SimplifiedTypeGen<U>\n     where\n         F: Fn(D) -> U,\n-        U: Copy + Debug + Ord + Eq,\n+        U: Copy + Debug + Eq,\n     {\n         match self {\n             BoolSimplifiedType => BoolSimplifiedType,\n@@ -171,7 +171,7 @@ impl<D: Copy + Debug + Ord + Eq> SimplifiedTypeGen<D> {\n \n impl<'a, D> HashStable<StableHashingContext<'a>> for SimplifiedTypeGen<D>\n where\n-    D: Copy + Debug + Ord + Eq + HashStable<StableHashingContext<'a>>,\n+    D: Copy + Debug + Eq + HashStable<StableHashingContext<'a>>,\n {\n     fn hash_stable(&self, hcx: &mut StableHashingContext<'a>, hasher: &mut StableHasher) {\n         mem::discriminant(self).hash_stable(hcx, hasher);"}]}