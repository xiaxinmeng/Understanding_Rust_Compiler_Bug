{"sha": "baa52caf83ef82c301e1264f370de5c22fc3c48d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhYTUyY2FmODNlZjgyYzMwMWUxMjY0ZjM3MGRlNWMyMmZjM2M0OGQ=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-02-27T12:18:39Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-04-03T12:46:09Z"}, "message": "Abort creating wrapper fn for multiple inner fns\n\nThis discovers another class of mis-trans where we wrap multiple native functions into a single\nwrapper, which is wrong.", "tree": {"sha": "06eed3ffd776e8ef6b50b11a392ef9bafb35ce16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06eed3ffd776e8ef6b50b11a392ef9bafb35ce16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/baa52caf83ef82c301e1264f370de5c22fc3c48d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/baa52caf83ef82c301e1264f370de5c22fc3c48d", "html_url": "https://github.com/rust-lang/rust/commit/baa52caf83ef82c301e1264f370de5c22fc3c48d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/baa52caf83ef82c301e1264f370de5c22fc3c48d/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2198969f89e0b646794bb4259cefacf50d98fc16", "url": "https://api.github.com/repos/rust-lang/rust/commits/2198969f89e0b646794bb4259cefacf50d98fc16", "html_url": "https://github.com/rust-lang/rust/commit/2198969f89e0b646794bb4259cefacf50d98fc16"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "e154bc1d579ff6d3aded8695a2b4dacd12adfb3d", "filename": "src/librustc_trans/trans/foreign.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/baa52caf83ef82c301e1264f370de5c22fc3c48d/src%2Flibrustc_trans%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/baa52caf83ef82c301e1264f370de5c22fc3c48d/src%2Flibrustc_trans%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fforeign.rs?ref=baa52caf83ef82c301e1264f370de5c22fc3c48d", "patch": "@@ -642,6 +642,11 @@ pub fn trans_rust_fn_with_foreign_abi<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,\n         //         return r;\n         //     }\n \n+        if llvm::LLVMCountBasicBlocks(llwrapfn) != 0 {\n+            ccx.sess().bug(\"wrapping a function inside non-empty wrapper, most likely cause is \\\n+                           multiple functions being wrapped\");\n+        }\n+\n         let ptr = \"the block\\0\".as_ptr();\n         let the_block = llvm::LLVMAppendBasicBlockInContext(ccx.llcx(), llwrapfn,\n                                                             ptr as *const _);"}]}