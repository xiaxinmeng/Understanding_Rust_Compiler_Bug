{"sha": "86f5b8a52dedf0cf318757113696622384ca55d9", "node_id": "C_kwDOAAsO6NoAKDg2ZjViOGE1MmRlZGYwY2YzMTg3NTcxMTM2OTY2MjIzODRjYTU1ZDk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-01T02:33:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-01T02:33:10Z"}, "message": "Rollup merge of #90450 - pierwill:rm-hiridvec, r=cjgillot\n\nRemove `rustc_hir::hir_id::HirIdVec`\n\nSee https://github.com/rust-lang/rust/pull/90408#discussion_r739627519:\n\n> IIRC, `HirIdVec` is never used, you can delete it. PR #72015 has been abandoned.\n\nr? `@cjgillot`", "tree": {"sha": "67a59375125e9de5a0d5efe50c5022151707100e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67a59375125e9de5a0d5efe50c5022151707100e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86f5b8a52dedf0cf318757113696622384ca55d9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhf1HmCRBK7hj4Ov3rIwAAd+QIAINW+DfS++guEGo21a1d+IT3\n3s9MT3tRgpAL6R/GXLu+6jEtAexazFTSRAstsui+ov2Y8kAOhtySu73bxMGTADD+\n4NbMHfbR0ZLDuWQcYBOLiG4O3LOSnczGoBmynf6M5JXUo1cndOSIh8CFEZLpmlN/\nRnpP0NLUP8DsnAUxgfEo25G5/dc9jA/3RXVAA50C1nVnZUKzQtF3GRfO3vK8pRwF\nimGJJDb5yTNwXXAQZVykR34fLMAv7EoO/ytqaclCg63auGScPk8K2CvpAHUUC3jE\nfui+yLdTA/57k15BMJkcbqhVTr3TW4GzBiXWgJcnaFR5fo/VIYMGXgoAodNzu9o=\n=BwTa\n-----END PGP SIGNATURE-----\n", "payload": "tree 67a59375125e9de5a0d5efe50c5022151707100e\nparent 365483a35b758fc233a3dc57155cfb63cdaa4bd2\nparent 9137960c899b7d8893c79df2cef9c8effbe4280a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1635733990 +0100\ncommitter GitHub <noreply@github.com> 1635733990 +0100\n\nRollup merge of #90450 - pierwill:rm-hiridvec, r=cjgillot\n\nRemove `rustc_hir::hir_id::HirIdVec`\n\nSee https://github.com/rust-lang/rust/pull/90408#discussion_r739627519:\n\n> IIRC, `HirIdVec` is never used, you can delete it. PR #72015 has been abandoned.\n\nr? `@cjgillot`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86f5b8a52dedf0cf318757113696622384ca55d9", "html_url": "https://github.com/rust-lang/rust/commit/86f5b8a52dedf0cf318757113696622384ca55d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86f5b8a52dedf0cf318757113696622384ca55d9/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "365483a35b758fc233a3dc57155cfb63cdaa4bd2", "url": "https://api.github.com/repos/rust-lang/rust/commits/365483a35b758fc233a3dc57155cfb63cdaa4bd2", "html_url": "https://github.com/rust-lang/rust/commit/365483a35b758fc233a3dc57155cfb63cdaa4bd2"}, {"sha": "9137960c899b7d8893c79df2cef9c8effbe4280a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9137960c899b7d8893c79df2cef9c8effbe4280a", "html_url": "https://github.com/rust-lang/rust/commit/9137960c899b7d8893c79df2cef9c8effbe4280a"}], "stats": {"total": 68, "additions": 0, "deletions": 68}, "files": [{"sha": "39552eb9f3102afa193135fcad0722cfd7a5dfe9", "filename": "compiler/rustc_hir/src/hir_id.rs", "status": "modified", "additions": 0, "deletions": 68, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/86f5b8a52dedf0cf318757113696622384ca55d9/compiler%2Frustc_hir%2Fsrc%2Fhir_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86f5b8a52dedf0cf318757113696622384ca55d9/compiler%2Frustc_hir%2Fsrc%2Fhir_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir_id.rs?ref=86f5b8a52dedf0cf318757113696622384ca55d9", "patch": "@@ -1,5 +1,4 @@\n use crate::def_id::{LocalDefId, CRATE_DEF_INDEX};\n-use rustc_index::vec::IndexVec;\n use std::fmt;\n \n /// Uniquely identifies a node in the HIR of the current crate. It is\n@@ -66,70 +65,3 @@ pub const CRATE_HIR_ID: HirId = HirId {\n     owner: LocalDefId { local_def_index: CRATE_DEF_INDEX },\n     local_id: ItemLocalId::from_u32(0),\n };\n-\n-/// N.B. This collection is currently unused, but will be used by #72015 and future PRs.\n-#[derive(Clone, Default, Debug, Encodable, Decodable)]\n-pub struct HirIdVec<T> {\n-    map: IndexVec<LocalDefId, IndexVec<ItemLocalId, T>>,\n-}\n-\n-impl<T> HirIdVec<T> {\n-    pub fn push_owner(&mut self, id: LocalDefId) {\n-        self.map.ensure_contains_elem(id, IndexVec::new);\n-    }\n-\n-    pub fn push(&mut self, id: HirId, value: T) {\n-        if id.local_id == ItemLocalId::from_u32(0) {\n-            self.push_owner(id.owner);\n-        }\n-        let submap = &mut self.map[id.owner];\n-        let _ret_id = submap.push(value);\n-        debug_assert_eq!(_ret_id, id.local_id);\n-    }\n-\n-    pub fn push_sparse(&mut self, id: HirId, value: T)\n-    where\n-        T: Default,\n-    {\n-        self.map.ensure_contains_elem(id.owner, IndexVec::new);\n-        let submap = &mut self.map[id.owner];\n-        let i = id.local_id.index();\n-        let len = submap.len();\n-        if i >= len {\n-            submap.extend(std::iter::repeat_with(T::default).take(i - len + 1));\n-        }\n-        submap[id.local_id] = value;\n-    }\n-\n-    pub fn get(&self, id: HirId) -> Option<&T> {\n-        self.map.get(id.owner)?.get(id.local_id)\n-    }\n-\n-    pub fn get_owner(&self, id: LocalDefId) -> &IndexVec<ItemLocalId, T> {\n-        &self.map[id]\n-    }\n-\n-    pub fn iter(&self) -> impl Iterator<Item = &T> {\n-        self.map.iter().flat_map(|la| la.iter())\n-    }\n-\n-    pub fn iter_enumerated(&self) -> impl Iterator<Item = (HirId, &T)> {\n-        self.map.iter_enumerated().flat_map(|(owner, la)| {\n-            la.iter_enumerated().map(move |(local_id, attr)| (HirId { owner, local_id }, attr))\n-        })\n-    }\n-}\n-\n-impl<T> std::ops::Index<HirId> for HirIdVec<T> {\n-    type Output = T;\n-\n-    fn index(&self, id: HirId) -> &T {\n-        &self.map[id.owner][id.local_id]\n-    }\n-}\n-\n-impl<T> std::ops::IndexMut<HirId> for HirIdVec<T> {\n-    fn index_mut(&mut self, id: HirId) -> &mut T {\n-        &mut self.map[id.owner][id.local_id]\n-    }\n-}"}]}