{"sha": "362eb7ea0705b02164f93b0a90f292b5eee210c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2MmViN2VhMDcwNWIwMjE2NGY5M2IwYTkwZjI5MmI1ZWVlMjEwYzU=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-02-02T22:07:31Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-02-10T17:44:00Z"}, "message": "Inspect now does not force on-stack Lvalue", "tree": {"sha": "00c36ec8703b88a33bf565955db72a285a258062", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00c36ec8703b88a33bf565955db72a285a258062"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/362eb7ea0705b02164f93b0a90f292b5eee210c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/362eb7ea0705b02164f93b0a90f292b5eee210c5", "html_url": "https://github.com/rust-lang/rust/commit/362eb7ea0705b02164f93b0a90f292b5eee210c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/362eb7ea0705b02164f93b0a90f292b5eee210c5/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76d9a4e646ee7511fd4b2086e67626e9db1bc270", "url": "https://api.github.com/repos/rust-lang/rust/commits/76d9a4e646ee7511fd4b2086e67626e9db1bc270", "html_url": "https://github.com/rust-lang/rust/commit/76d9a4e646ee7511fd4b2086e67626e9db1bc270"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2c3b479c7dd0f6fb218b873bf05788eb1553c67f", "filename": "src/librustc_trans/mir/analyze.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/362eb7ea0705b02164f93b0a90f292b5eee210c5/src%2Flibrustc_trans%2Fmir%2Fanalyze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/362eb7ea0705b02164f93b0a90f292b5eee210c5/src%2Flibrustc_trans%2Fmir%2Fanalyze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fanalyze.rs?ref=362eb7ea0705b02164f93b0a90f292b5eee210c5", "patch": "@@ -156,10 +156,10 @@ impl<'mir, 'a, 'tcx> Visitor<'tcx> for LocalAnalyzer<'mir, 'a, 'tcx> {\n \n                 LvalueContext::StorageLive |\n                 LvalueContext::StorageDead |\n+                LvalueContext::Inspect |\n                 LvalueContext::Consume => {}\n \n                 LvalueContext::Store |\n-                LvalueContext::Inspect |\n                 LvalueContext::Borrow { .. } |\n                 LvalueContext::Projection(..) => {\n                     self.mark_as_lvalue(index);"}]}