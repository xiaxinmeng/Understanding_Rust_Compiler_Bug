{"sha": "697de42f69c6c437b7bd7a3298e991d1a5fc9adc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5N2RlNDJmNjljNmM0MzdiN2JkN2EzMjk4ZTk5MWQxYTVmYzlhZGM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-06T23:37:47Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-06T23:37:47Z"}, "message": "rollup merge of #23087: nagisa/std-undeadlock\n\nBeing a person who somehow has taken a liking to premature optimisation, my knee-jerk reaction to\nlocking in std handles was preamble resembling following snippet:\n\n    let stdout = stdout();\n    let lstdout = stdout.lock();\n    let stdin = stdin();\n    let lstdin = stdin.lock();\n\nand then reading from the locked handle like this:\n\n    let mut letter = [0; 1];\n    lstdin.read(&mut letter).unwrap();\n\nAs it is now this code will deadlock because the `read` method attempts to lock stdout as well!\n\nr? @alexcrichton\n\n---\n\nEither way, I find flushing stdout when stdin is used debatable. I believe people who write prompts should take care to flush stdout when necessary themselves.\n\nAnother idea: Would be cool if locks on std handles would be taken for a thread, rather than a handle, so given preamble (first code snippet)\n\n    stdin.lock()\n\nor more generally\n\n    stdin.read(\u2026)\n\nworked fine. I.e. if more than a single lock are all taken inside the same thread, it would work, though not sure if our synchronisation primitives are expressive enough to make it possible.", "tree": {"sha": "8392a9ff4cdd4eeff55eeeb881f99a9f59bfe440", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8392a9ff4cdd4eeff55eeeb881f99a9f59bfe440"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/697de42f69c6c437b7bd7a3298e991d1a5fc9adc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/697de42f69c6c437b7bd7a3298e991d1a5fc9adc", "html_url": "https://github.com/rust-lang/rust/commit/697de42f69c6c437b7bd7a3298e991d1a5fc9adc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/697de42f69c6c437b7bd7a3298e991d1a5fc9adc/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bd02ca83737e66ef004673373709fdc9ad9255d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bd02ca83737e66ef004673373709fdc9ad9255d", "html_url": "https://github.com/rust-lang/rust/commit/2bd02ca83737e66ef004673373709fdc9ad9255d"}, {"sha": "3f94260b0fb2639ba81a5458ec54329e4b860afd", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f94260b0fb2639ba81a5458ec54329e4b860afd", "html_url": "https://github.com/rust-lang/rust/commit/3f94260b0fb2639ba81a5458ec54329e4b860afd"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "4027f741654b66bbbf57c9644f06e66bb7866b30", "filename": "src/libstd/io/stdio.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/697de42f69c6c437b7bd7a3298e991d1a5fc9adc/src%2Flibstd%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/697de42f69c6c437b7bd7a3298e991d1a5fc9adc/src%2Flibstd%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fstdio.rs?ref=697de42f69c6c437b7bd7a3298e991d1a5fc9adc", "patch": "@@ -157,9 +157,6 @@ impl Read for Stdin {\n \n impl<'a> Read for StdinLock<'a> {\n     fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {\n-        // Flush stdout so that weird issues like a print!'d prompt not being\n-        // shown until after the user hits enter.\n-        drop(stdout().flush());\n         self.inner.read(buf)\n     }\n }"}]}