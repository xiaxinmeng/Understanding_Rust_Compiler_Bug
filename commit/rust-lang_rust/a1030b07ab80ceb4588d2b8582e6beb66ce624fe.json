{"sha": "a1030b07ab80ceb4588d2b8582e6beb66ce624fe", "node_id": "C_kwDOAAsO6NoAKGExMDMwYjA3YWI4MGNlYjQ1ODhkMmI4NTgyZTZiZWI2NmNlNjI0ZmU", "commit": {"author": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2021-11-27T11:55:03Z"}, "committer": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2021-11-27T11:55:03Z"}, "message": "use Semantics::parse_or_expand in another place", "tree": {"sha": "d43002740b24f3d6df3a3e1bd25c4d58c2917247", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d43002740b24f3d6df3a3e1bd25c4d58c2917247"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1030b07ab80ceb4588d2b8582e6beb66ce624fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1030b07ab80ceb4588d2b8582e6beb66ce624fe", "html_url": "https://github.com/rust-lang/rust/commit/a1030b07ab80ceb4588d2b8582e6beb66ce624fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1030b07ab80ceb4588d2b8582e6beb66ce624fe/comments", "author": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a69af9daa3e9b3f61ce83d904b0b27022d759869", "url": "https://api.github.com/repos/rust-lang/rust/commits/a69af9daa3e9b3f61ce83d904b0b27022d759869", "html_url": "https://github.com/rust-lang/rust/commit/a69af9daa3e9b3f61ce83d904b0b27022d759869"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "c115f57364f9d813a910d3b3faeac63d70cc4a73", "filename": "crates/ide/src/navigation_target.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a1030b07ab80ceb4588d2b8582e6beb66ce624fe/crates%2Fide%2Fsrc%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1030b07ab80ceb4588d2b8582e6beb66ce624fe/crates%2Fide%2Fsrc%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fnavigation_target.rs?ref=a1030b07ab80ceb4588d2b8582e6beb66ce624fe", "patch": "@@ -4,8 +4,8 @@ use std::fmt;\n \n use either::Either;\n use hir::{\n-    db::AstDatabase, AssocItem, Documentation, FieldSource, HasAttrs, HasSource, HirDisplay,\n-    InFile, ModuleSource, Semantics,\n+    AssocItem, Documentation, FieldSource, HasAttrs, HasSource, HirDisplay, InFile, ModuleSource,\n+    Semantics,\n };\n use ide_db::{\n     base_db::{FileId, FileRange},\n@@ -517,7 +517,7 @@ impl TryToNav for hir::ConstParam {\n /// e.g. `struct Name`, `enum Name`, `fn Name`\n pub(crate) fn description_from_symbol(db: &RootDatabase, symbol: &FileSymbol) -> Option<String> {\n     let sema = Semantics::new(db);\n-    let syntax = sema.db.parse_or_expand(symbol.file_id)?;\n+    let syntax = sema.parse_or_expand(symbol.file_id)?;\n     let node = symbol.ptr.to_node(&syntax);\n \n     match_ast! {"}]}