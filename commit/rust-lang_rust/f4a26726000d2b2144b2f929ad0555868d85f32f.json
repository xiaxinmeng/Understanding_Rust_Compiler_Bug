{"sha": "f4a26726000d2b2144b2f929ad0555868d85f32f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0YTI2NzI2MDAwZDJiMjE0NGIyZjkyOWFkMDU1NTg2OGQ4NWYzMmY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2014-12-20T02:39:43Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-01-08T09:17:27Z"}, "message": "Add test for -Z extra-plugins", "tree": {"sha": "8c7387f6c6822b650e6cc7f3bb1d6bb4994caf59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c7387f6c6822b650e6cc7f3bb1d6bb4994caf59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4a26726000d2b2144b2f929ad0555868d85f32f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4a26726000d2b2144b2f929ad0555868d85f32f", "html_url": "https://github.com/rust-lang/rust/commit/f4a26726000d2b2144b2f929ad0555868d85f32f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4a26726000d2b2144b2f929ad0555868d85f32f/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bd022c893b00e0bb76d84bbbf8ccf7f685aad9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bd022c893b00e0bb76d84bbbf8ccf7f685aad9c", "html_url": "https://github.com/rust-lang/rust/commit/0bd022c893b00e0bb76d84bbbf8ccf7f685aad9c"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "4a2981b8cdfe51161b17faeeaa4548b81a61a050", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f4a26726000d2b2144b2f929ad0555868d85f32f/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a26726000d2b2144b2f929ad0555868d85f32f/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=f4a26726000d2b2144b2f929ad0555868d85f32f", "patch": "@@ -497,8 +497,8 @@ impl<'a> CrateReader<'a> {\n         let register = should_link && self.existing_match(info.name.as_slice(), None).is_none();\n         let metadata = if register {\n             // Register crate now to avoid double-reading metadata\n-            let (_, cmd, _) = self.register_crate(&None, info.ident[],\n-                                info.name[], span, library);\n+            let (_, cmd, _) = self.register_crate(&None, &info.ident[],\n+                                &info.name[], span, library);\n             PMDSource::Registered(cmd)\n         } else {\n             // Not registering the crate; just hold on to the metadata"}, {"sha": "d9bb1d769bfbe7b280e5f7855179eeed1068be47", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f4a26726000d2b2144b2f929ad0555868d85f32f/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a26726000d2b2144b2f929ad0555868d85f32f/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=f4a26726000d2b2144b2f929ad0555868d85f32f", "patch": "@@ -311,18 +311,20 @@ macro_rules! options {\n                 if !setter(&mut op, value) {\n                     match (value, opt_type_desc) {\n                         (Some(..), None) => {\n-                            early_error(format!(\"{} option `{}` takes no \\\n+                            early_error(&format!(\"{} option `{}` takes no \\\n                                                  value\", $outputname, key)[])\n                         }\n                         (None, Some(type_desc)) => {\n-                            early_error(format!(\"{0} option `{1}` requires \\\n+                            early_error(&format!(\"{0} option `{1}` requires \\\n                                                  {2} ({3} {1}=<value>)\",\n-                                                $outputname, key, type_desc, $prefix)[])\n+                                                $outputname, key,\n+                                                type_desc, $prefix)[])\n                         }\n                         (Some(value), Some(type_desc)) => {\n-                            early_error(format!(\"incorrect value `{}` for {} \\\n+                            early_error(&format!(\"incorrect value `{}` for {} \\\n                                                  option `{}` - {} was expected\",\n-                                                 value, $outputname, key, type_desc)[])\n+                                                 value, $outputname,\n+                                                 key, type_desc)[])\n                         }\n                         (None, None) => unreachable!()\n                     }\n@@ -331,7 +333,7 @@ macro_rules! options {\n                 break;\n             }\n             if !found {\n-                early_error(format!(\"unknown codegen option: `{}`\",\n+                early_error(&format!(\"unknown codegen option: `{}`\",\n                                     key)[]);\n             }\n         }"}, {"sha": "7144d2b0f1e7162ac22652f586b82f78ad6bcba0", "filename": "src/test/run-pass-fulldeps/lint-plugin-cmdline-allow.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f4a26726000d2b2144b2f929ad0555868d85f32f/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin-cmdline-allow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a26726000d2b2144b2f929ad0555868d85f32f/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin-cmdline-allow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin-cmdline-allow.rs?ref=f4a26726000d2b2144b2f929ad0555868d85f32f", "previous_filename": "src/test/run-pass-fulldeps/lint-plugin-cmdline.rs"}, {"sha": "1af26094f231541f22054351f891398b6b31a633", "filename": "src/test/run-pass-fulldeps/lint-plugin-cmdline-load.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f4a26726000d2b2144b2f929ad0555868d85f32f/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin-cmdline-load.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4a26726000d2b2144b2f929ad0555868d85f32f/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin-cmdline-load.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin-cmdline-load.rs?ref=f4a26726000d2b2144b2f929ad0555868d85f32f", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:lint_plugin_test.rs\n+// ignore-stage1\n+// ignore-pretty: Random space appears with the pretty test\n+// compile-flags: -Z extra-plugins=lint_plugin_test\n+\n+fn lintme() { } //~ WARNING item is named 'lintme'\n+\n+#[allow(test_lint)]\n+pub fn main() {\n+    fn lintme() { }\n+}"}]}