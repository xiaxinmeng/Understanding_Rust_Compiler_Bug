{"sha": "13c86f289ba0d2944da320fd6c0359a591ce4374", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzYzg2ZjI4OWJhMGQyOTQ0ZGEzMjBmZDZjMDM1OWE1OTFjZTQzNzQ=", "commit": {"author": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2020-05-20T22:01:48Z"}, "committer": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2020-05-21T16:07:47Z"}, "message": "Use `LocalDefId` in `ResolverOutputs::maybe_unused_trait_imports` instead of `NodeId`", "tree": {"sha": "30c7e1301784542bf3e00a73b3eaab1bb35d3ca3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30c7e1301784542bf3e00a73b3eaab1bb35d3ca3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13c86f289ba0d2944da320fd6c0359a591ce4374", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13c86f289ba0d2944da320fd6c0359a591ce4374", "html_url": "https://github.com/rust-lang/rust/commit/13c86f289ba0d2944da320fd6c0359a591ce4374", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13c86f289ba0d2944da320fd6c0359a591ce4374/comments", "author": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52359f7c609ef3908c9fc6faf3d0e36f02c6d207", "url": "https://api.github.com/repos/rust-lang/rust/commits/52359f7c609ef3908c9fc6faf3d0e36f02c6d207", "html_url": "https://github.com/rust-lang/rust/commit/52359f7c609ef3908c9fc6faf3d0e36f02c6d207"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "d090f9235ce33d7bb6fd9e217f76ef30abbc4603", "filename": "src/librustc_middle/ty/context.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/13c86f289ba0d2944da320fd6c0359a591ce4374/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13c86f289ba0d2944da320fd6c0359a591ce4374/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=13c86f289ba0d2944da320fd6c0359a591ce4374", "patch": "@@ -1132,11 +1132,7 @@ impl<'tcx> TyCtxt<'tcx> {\n             extern_crate_map: resolutions.extern_crate_map,\n             trait_map,\n             export_map: resolutions.export_map,\n-            maybe_unused_trait_imports: resolutions\n-                .maybe_unused_trait_imports\n-                .into_iter()\n-                .map(|id| definitions.local_def_id(id))\n-                .collect(),\n+            maybe_unused_trait_imports: resolutions.maybe_unused_trait_imports,\n             maybe_unused_extern_crates: resolutions\n                 .maybe_unused_extern_crates\n                 .into_iter()"}, {"sha": "4dc815fa7bcd03452eda2a05c78f3e22caefb99d", "filename": "src/librustc_middle/ty/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/13c86f289ba0d2944da320fd6c0359a591ce4374/src%2Flibrustc_middle%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13c86f289ba0d2944da320fd6c0359a591ce4374/src%2Flibrustc_middle%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fmod.rs?ref=13c86f289ba0d2944da320fd6c0359a591ce4374", "patch": "@@ -17,11 +17,12 @@ use crate::ty;\n use crate::ty::subst::{InternalSubsts, Subst, SubstsRef};\n use crate::ty::util::{Discr, IntTypeExt};\n use rustc_ast::ast;\n-use rustc_ast::node_id::{NodeId, NodeMap, NodeSet};\n+use rustc_ast::node_id::{NodeId, NodeMap};\n use rustc_attr as attr;\n use rustc_data_structures::captures::Captures;\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::FxHashMap;\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::fx::FxIndexMap;\n use rustc_data_structures::sorted_map::SortedIndexMultiMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n@@ -122,7 +123,7 @@ pub struct ResolverOutputs {\n     pub cstore: Box<CrateStoreDyn>,\n     pub extern_crate_map: NodeMap<CrateNum>,\n     pub trait_map: FxHashMap<hir::HirId, Vec<hir::TraitCandidate<hir::HirId>>>,\n-    pub maybe_unused_trait_imports: NodeSet,\n+    pub maybe_unused_trait_imports: FxHashSet<LocalDefId>,\n     pub maybe_unused_extern_crates: Vec<(NodeId, Span)>,\n     pub export_map: ExportMap<hir::HirId>,\n     pub glob_map: GlobMap,"}, {"sha": "21a535b85aac7bdabcd12546355c2a7bf79f3b75", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/13c86f289ba0d2944da320fd6c0359a591ce4374/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13c86f289ba0d2944da320fd6c0359a591ce4374/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=13c86f289ba0d2944da320fd6c0359a591ce4374", "patch": "@@ -1298,14 +1298,19 @@ impl<'a> Resolver<'a> {\n             }\n             map\n         };\n+        let maybe_unused_trait_imports = self\n+            .maybe_unused_trait_imports\n+            .into_iter()\n+            .map(|id| definitions.local_def_id(id))\n+            .collect();\n         ResolverOutputs {\n             definitions: definitions,\n             cstore: Box::new(self.crate_loader.into_cstore()),\n             extern_crate_map: self.extern_crate_map,\n             export_map,\n             trait_map,\n             glob_map: self.glob_map,\n-            maybe_unused_trait_imports: self.maybe_unused_trait_imports,\n+            maybe_unused_trait_imports,\n             maybe_unused_extern_crates: self.maybe_unused_extern_crates,\n             extern_prelude: self\n                 .extern_prelude\n@@ -1348,7 +1353,11 @@ impl<'a> Resolver<'a> {\n                 map\n             },\n             glob_map: self.glob_map.clone(),\n-            maybe_unused_trait_imports: self.maybe_unused_trait_imports.clone(),\n+            maybe_unused_trait_imports: self\n+                .maybe_unused_trait_imports\n+                .iter()\n+                .map(|id| self.definitions.local_def_id(id.clone()))\n+                .collect(),\n             maybe_unused_extern_crates: self.maybe_unused_extern_crates.clone(),\n             extern_prelude: self\n                 .extern_prelude"}]}