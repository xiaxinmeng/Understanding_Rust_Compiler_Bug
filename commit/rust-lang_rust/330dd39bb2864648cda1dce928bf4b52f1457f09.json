{"sha": "330dd39bb2864648cda1dce928bf4b52f1457f09", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzMGRkMzliYjI4NjQ2NDhjZGExZGNlOTI4YmY0YjUyZjE0NTdmMDk=", "commit": {"author": {"name": "Vladimir Vukicevic", "email": "vladimir@pobox.com", "date": "2016-07-07T12:15:10Z"}, "committer": {"name": "Jan-Erik Rediger", "email": "janerik@fnordig.de", "date": "2016-07-29T08:29:59Z"}, "message": "Remove NO_FILE_METADATA; always use unknown_file_metadata instead of passing 0", "tree": {"sha": "6f57015df186f2dc89ca3efc2d3e5c142d95e21c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f57015df186f2dc89ca3efc2d3e5c142d95e21c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/330dd39bb2864648cda1dce928bf4b52f1457f09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/330dd39bb2864648cda1dce928bf4b52f1457f09", "html_url": "https://github.com/rust-lang/rust/commit/330dd39bb2864648cda1dce928bf4b52f1457f09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/330dd39bb2864648cda1dce928bf4b52f1457f09/comments", "author": {"login": "vvuk", "id": 194965, "node_id": "MDQ6VXNlcjE5NDk2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/194965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vvuk", "html_url": "https://github.com/vvuk", "followers_url": "https://api.github.com/users/vvuk/followers", "following_url": "https://api.github.com/users/vvuk/following{/other_user}", "gists_url": "https://api.github.com/users/vvuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/vvuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vvuk/subscriptions", "organizations_url": "https://api.github.com/users/vvuk/orgs", "repos_url": "https://api.github.com/users/vvuk/repos", "events_url": "https://api.github.com/users/vvuk/events{/privacy}", "received_events_url": "https://api.github.com/users/vvuk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "badboy", "id": 2129, "node_id": "MDQ6VXNlcjIxMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/2129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/badboy", "html_url": "https://github.com/badboy", "followers_url": "https://api.github.com/users/badboy/followers", "following_url": "https://api.github.com/users/badboy/following{/other_user}", "gists_url": "https://api.github.com/users/badboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/badboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/badboy/subscriptions", "organizations_url": "https://api.github.com/users/badboy/orgs", "repos_url": "https://api.github.com/users/badboy/repos", "events_url": "https://api.github.com/users/badboy/events{/privacy}", "received_events_url": "https://api.github.com/users/badboy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2492d24baa57ab0364e7d94ce833e57e503434e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2492d24baa57ab0364e7d94ce833e57e503434e5", "html_url": "https://github.com/rust-lang/rust/commit/2492d24baa57ab0364e7d94ce833e57e503434e5"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "387f24378ce0b269611d86133296aeb1c313b66b", "filename": "src/librustc_trans/debuginfo/metadata.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/330dd39bb2864648cda1dce928bf4b52f1457f09/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/330dd39bb2864648cda1dce928bf4b52f1457f09/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs?ref=330dd39bb2864648cda1dce928bf4b52f1457f09", "patch": "@@ -68,7 +68,6 @@ pub const UNKNOWN_LINE_NUMBER: c_uint = 0;\n pub const UNKNOWN_COLUMN_NUMBER: c_uint = 0;\n \n // ptr::null() doesn't work :(\n-pub const NO_FILE_METADATA: DIFile = (0 as DIFile);\n pub const NO_SCOPE_METADATA: DIScope = (0 as DIScope);\n \n const FLAGS_NONE: c_uint = 0;\n@@ -616,7 +615,7 @@ fn subroutine_type_metadata<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n         unsafe {\n             llvm::LLVMDIBuilderCreateSubroutineType(\n                 DIB(cx),\n-                NO_FILE_METADATA,\n+                unknown_file_metadata(cx),\n                 create_DIArray(DIB(cx), &signature_metadata[..]))\n         },\n         false);\n@@ -653,14 +652,15 @@ fn trait_pointer_metadata<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n     let (containing_scope, _) = get_namespace_and_span_for_item(cx, def_id);\n \n     let trait_llvm_type = type_of::type_of(cx, trait_object_type);\n+    let file_metadata = unknown_file_metadata(cx);\n \n     composite_type_metadata(cx,\n                             trait_llvm_type,\n                             &trait_type_name[..],\n                             unique_type_id,\n                             &[],\n                             containing_scope,\n-                            NO_FILE_METADATA,\n+                            file_metadata,\n                             syntax_pos::DUMMY_SP)\n }\n \n@@ -1628,7 +1628,7 @@ fn prepare_enum_metadata<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n                         DIB(cx),\n                         containing_scope,\n                         name.as_ptr(),\n-                        NO_FILE_METADATA,\n+                        file_metadata,\n                         UNKNOWN_LINE_NUMBER,\n                         bytes_to_bits(discriminant_size),\n                         bytes_to_bits(discriminant_align),\n@@ -1774,7 +1774,7 @@ fn set_members_of_composite_type(cx: &CrateContext,\n                     DIB(cx),\n                     composite_type_metadata,\n                     member_name.as_ptr(),\n-                    NO_FILE_METADATA,\n+                    unknown_file_metadata(cx),\n                     UNKNOWN_LINE_NUMBER,\n                     bytes_to_bits(member_size),\n                     bytes_to_bits(member_align),\n@@ -1817,7 +1817,7 @@ fn create_struct_stub(cx: &CrateContext,\n             DIB(cx),\n             containing_scope,\n             name.as_ptr(),\n-            NO_FILE_METADATA,\n+            unknown_file_metadata(cx),\n             UNKNOWN_LINE_NUMBER,\n             bytes_to_bits(struct_size),\n             bytes_to_bits(struct_align),\n@@ -1857,7 +1857,7 @@ pub fn create_global_var_metadata(cx: &CrateContext,\n         let loc = span_start(cx, span);\n         (file_metadata(cx, &loc.file.name, &loc.file.abs_path), loc.line as c_uint)\n     } else {\n-        (NO_FILE_METADATA, UNKNOWN_LINE_NUMBER)\n+        (unknown_file_metadata(cx), UNKNOWN_LINE_NUMBER)\n     };\n \n     let is_local_to_unit = is_node_local_to_unit(cx, node_id);"}, {"sha": "736a8c1c7d70c3561a541435cb09920a063837e9", "filename": "src/librustc_trans/debuginfo/namespace.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/330dd39bb2864648cda1dce928bf4b52f1457f09/src%2Flibrustc_trans%2Fdebuginfo%2Fnamespace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/330dd39bb2864648cda1dce928bf4b52f1457f09/src%2Flibrustc_trans%2Fdebuginfo%2Fnamespace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fnamespace.rs?ref=330dd39bb2864648cda1dce928bf4b52f1457f09", "patch": "@@ -10,7 +10,7 @@\n \n // Namespace Handling.\n \n-use super::metadata::{file_metadata, NO_FILE_METADATA, UNKNOWN_LINE_NUMBER};\n+use super::metadata::{file_metadata, unknown_file_metadata, UNKNOWN_LINE_NUMBER};\n use super::utils::{DIB, debug_context, span_start};\n \n use llvm;\n@@ -74,7 +74,7 @@ pub fn item_namespace(ccx: &CrateContext, def_id: DefId) -> DIScope {\n         let loc = span_start(ccx, span);\n         (file_metadata(ccx, &loc.file.name, &loc.file.abs_path), loc.line as c_uint)\n     } else {\n-        (NO_FILE_METADATA, UNKNOWN_LINE_NUMBER)\n+        (unknown_file_metadata(ccx), UNKNOWN_LINE_NUMBER)\n     };\n \n     let scope = unsafe {"}]}