{"sha": "2d4dc22af8db8f9ebb5f2e95cd25c473494a4b70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkNGRjMjJhZjhkYjhmOWViYjVmMmU5NWNkMjVjNDczNDk0YTRiNzA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-08T12:22:57Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-08T12:22:57Z"}, "message": "move enum to code_model_api", "tree": {"sha": "963dfadfe92595982ba0c374e467bdbb41d04c3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/963dfadfe92595982ba0c374e467bdbb41d04c3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d4dc22af8db8f9ebb5f2e95cd25c473494a4b70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d4dc22af8db8f9ebb5f2e95cd25c473494a4b70", "html_url": "https://github.com/rust-lang/rust/commit/2d4dc22af8db8f9ebb5f2e95cd25c473494a4b70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d4dc22af8db8f9ebb5f2e95cd25c473494a4b70/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e30c533eb67ba8a24708a94385849854c17e67f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e30c533eb67ba8a24708a94385849854c17e67f9", "html_url": "https://github.com/rust-lang/rust/commit/e30c533eb67ba8a24708a94385849854c17e67f9"}], "stats": {"total": 55, "additions": 26, "deletions": 29}, "files": [{"sha": "935f39959ba37710ca887919792febad0c03feeb", "filename": "crates/ra_hir/src/adt.rs", "status": "modified", "additions": 3, "deletions": 25, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2d4dc22af8db8f9ebb5f2e95cd25c473494a4b70/crates%2Fra_hir%2Fsrc%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d4dc22af8db8f9ebb5f2e95cd25c473494a4b70/crates%2Fra_hir%2Fsrc%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fadt.rs?ref=2d4dc22af8db8f9ebb5f2e95cd25c473494a4b70", "patch": "@@ -1,22 +1,16 @@\n use std::sync::Arc;\n \n-use ra_db::Cancelable;\n use ra_syntax::ast::{self, NameOwner, StructFlavor};\n \n use crate::{\n-    DefId, Name, AsName, Struct,\n-    db::HirDatabase,\n+    DefId, Name, AsName, Struct, Enum,\n     type_ref::TypeRef,\n };\n \n impl Struct {\n     pub(crate) fn new(def_id: DefId) -> Self {\n         Struct { def_id }\n     }\n-\n-    pub(crate) fn struct_data(&self, db: &impl HirDatabase) -> Cancelable<Arc<StructData>> {\n-        Ok(db.struct_data(self.def_id)?)\n-    }\n }\n \n #[derive(Debug, Clone, PartialEq, Eq)]\n@@ -42,32 +36,16 @@ impl StructData {\n     }\n }\n \n-pub struct Enum {\n-    def_id: DefId,\n-}\n-\n impl Enum {\n     pub(crate) fn new(def_id: DefId) -> Self {\n         Enum { def_id }\n     }\n-\n-    pub fn def_id(&self) -> DefId {\n-        self.def_id\n-    }\n-\n-    pub fn name(&self, db: &impl HirDatabase) -> Cancelable<Option<Name>> {\n-        Ok(db.enum_data(self.def_id)?.name.clone())\n-    }\n-\n-    pub fn variants(&self, db: &impl HirDatabase) -> Cancelable<Vec<(Name, Arc<VariantData>)>> {\n-        Ok(db.enum_data(self.def_id)?.variants.clone())\n-    }\n }\n \n #[derive(Debug, Clone, PartialEq, Eq)]\n pub struct EnumData {\n-    name: Option<Name>,\n-    variants: Vec<(Name, Arc<VariantData>)>,\n+    pub(crate) name: Option<Name>,\n+    pub(crate) variants: Vec<(Name, Arc<VariantData>)>,\n }\n \n impl EnumData {"}, {"sha": "43bd2003c00e9c3464397d379469e904d62df28a", "filename": "crates/ra_hir/src/code_model_api.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2d4dc22af8db8f9ebb5f2e95cd25c473494a4b70/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d4dc22af8db8f9ebb5f2e95cd25c473494a4b70/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs?ref=2d4dc22af8db8f9ebb5f2e95cd25c473494a4b70", "patch": "@@ -114,6 +114,7 @@ impl Module {\n     }\n }\n \n+#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct Struct {\n     pub(crate) def_id: DefId,\n }\n@@ -124,10 +125,29 @@ impl Struct {\n     }\n \n     pub fn variant_data(&self, db: &impl HirDatabase) -> Cancelable<Arc<VariantData>> {\n-        Ok(self.struct_data(db)?.variant_data.clone())\n+        Ok(db.struct_data(self.def_id)?.variant_data.clone())\n     }\n \n     pub fn name(&self, db: &impl HirDatabase) -> Cancelable<Option<Name>> {\n-        Ok(self.struct_data(db)?.name.clone())\n+        Ok(db.struct_data(self.def_id)?.name.clone())\n+    }\n+}\n+\n+#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n+pub struct Enum {\n+    pub(crate) def_id: DefId,\n+}\n+\n+impl Enum {\n+    pub fn def_id(&self) -> DefId {\n+        self.def_id\n+    }\n+\n+    pub fn name(&self, db: &impl HirDatabase) -> Cancelable<Option<Name>> {\n+        Ok(db.enum_data(self.def_id)?.name.clone())\n+    }\n+\n+    pub fn variants(&self, db: &impl HirDatabase) -> Cancelable<Vec<(Name, Arc<VariantData>)>> {\n+        Ok(db.enum_data(self.def_id)?.variants.clone())\n     }\n }"}, {"sha": "8eff2aea51640ffe8ebbd86df64c61b8b67c8242", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2d4dc22af8db8f9ebb5f2e95cd25c473494a4b70/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d4dc22af8db8f9ebb5f2e95cd25c473494a4b70/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=2d4dc22af8db8f9ebb5f2e95cd25c473494a4b70", "patch": "@@ -50,7 +50,6 @@ pub use self::{\n     module_tree::ModuleId,\n     nameres::{ItemMap, PerNs, Namespace, Resolution},\n     function::{Function, FnSignature, FnScopes, ScopesWithSyntaxMapping},\n-    adt::Enum,\n     ty::Ty,\n     impl_block::{ImplBlock, ImplItem},\n };\n@@ -60,7 +59,7 @@ pub use self::function::FnSignatureInfo;\n pub use self::code_model_api::{\n     Crate, CrateDependency,\n     Module, ModuleSource, Problem,\n-    Struct,\n+    Struct, Enum,\n };\n \n pub enum Def {"}]}