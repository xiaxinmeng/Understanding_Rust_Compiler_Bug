{"sha": "bb1ed97ca2bbd8efa1555462de3f842d702e8408", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiMWVkOTdjYTJiYmQ4ZWZhMTU1NTQ2MmRlM2Y4NDJkNzAyZTg0MDg=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-10-08T15:06:25Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-10-08T15:08:06Z"}, "message": "libcore: str trim functions can be applied to &strs", "tree": {"sha": "fb77c8a790145b14c550718f23e42d24b6271d61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb77c8a790145b14c550718f23e42d24b6271d61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb1ed97ca2bbd8efa1555462de3f842d702e8408", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb1ed97ca2bbd8efa1555462de3f842d702e8408", "html_url": "https://github.com/rust-lang/rust/commit/bb1ed97ca2bbd8efa1555462de3f842d702e8408", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb1ed97ca2bbd8efa1555462de3f842d702e8408/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed3689d57c988e1dd477930d957c4308c37d1a64", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed3689d57c988e1dd477930d957c4308c37d1a64", "html_url": "https://github.com/rust-lang/rust/commit/ed3689d57c988e1dd477930d957c4308c37d1a64"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "d7d33b5528b55f3f18b5518977fb7098b15620b3", "filename": "src/libcore/str.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bb1ed97ca2bbd8efa1555462de3f842d702e8408/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb1ed97ca2bbd8efa1555462de3f842d702e8408/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=bb1ed97ca2bbd8efa1555462de3f842d702e8408", "patch": "@@ -2195,6 +2195,16 @@ impl &str: StrSlice {\n     #[inline]\n     fn escape_unicode() -> ~str { escape_unicode(self) }\n \n+    /// Returns a string with leading and trailing whitespace removed\n+    #[inline]\n+    fn trim() -> ~str { trim(self) }\n+    /// Returns a string with leading whitespace removed\n+    #[inline]\n+    fn trim_left() -> ~str { trim_left(self) }\n+    /// Returns a string with trailing whitespace removed\n+    #[inline]\n+    fn trim_right() -> ~str { trim_right(self) }\n+\n     #[inline]\n     pure fn to_unique() -> ~str { self.slice(0, self.len()) }\n "}]}