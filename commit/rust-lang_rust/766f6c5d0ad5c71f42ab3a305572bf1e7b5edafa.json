{"sha": "766f6c5d0ad5c71f42ab3a305572bf1e7b5edafa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NmY2YzVkMGFkNWM3MWY0MmFiM2EzMDU1NzJiZjFlN2I1ZWRhZmE=", "commit": {"author": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2020-01-18T00:11:52Z"}, "committer": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2020-01-18T00:11:52Z"}, "message": "Actually pass target LLVM args to LLVM", "tree": {"sha": "6a4499498d3138733bb23aca71a346b086afa225", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a4499498d3138733bb23aca71a346b086afa225"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/766f6c5d0ad5c71f42ab3a305572bf1e7b5edafa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/766f6c5d0ad5c71f42ab3a305572bf1e7b5edafa", "html_url": "https://github.com/rust-lang/rust/commit/766f6c5d0ad5c71f42ab3a305572bf1e7b5edafa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/766f6c5d0ad5c71f42ab3a305572bf1e7b5edafa/comments", "author": null, "committer": null, "parents": [{"sha": "689fca01c5a1eac2d240bf08aa728171a28f2285", "url": "https://api.github.com/repos/rust-lang/rust/commits/689fca01c5a1eac2d240bf08aa728171a28f2285", "html_url": "https://github.com/rust-lang/rust/commit/689fca01c5a1eac2d240bf08aa728171a28f2285"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "4823fe10c463fee932a7b86b3a1acd4b1497f935", "filename": "src/librustc_codegen_llvm/llvm_util.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/766f6c5d0ad5c71f42ab3a305572bf1e7b5edafa/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766f6c5d0ad5c71f42ab3a305572bf1e7b5edafa/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs?ref=766f6c5d0ad5c71f42ab3a305572bf1e7b5edafa", "patch": "@@ -58,9 +58,10 @@ unsafe fn configure_llvm(sess: &Session) {\n \n     let cg_opts = sess.opts.cg.llvm_args.iter();\n     let tg_opts = sess.target.target.options.llvm_args.iter();\n+    let sess_args = cg_opts.chain(tg_opts);\n \n     let user_specified_args: FxHashSet<_> =\n-        cg_opts.chain(tg_opts).map(|s| llvm_arg_to_arg_name(s)).filter(|s| s.len() > 0).collect();\n+        sess_args.clone().map(|s| llvm_arg_to_arg_name(s)).filter(|s| s.len() > 0).collect();\n \n     {\n         // This adds the given argument to LLVM. Unless `force` is true\n@@ -107,7 +108,7 @@ unsafe fn configure_llvm(sess: &Session) {\n         // during inlining. Unfortunately these may block other optimizations.\n         add(\"-preserve-alignment-assumptions-during-inlining=false\", false);\n \n-        for arg in &sess.opts.cg.llvm_args {\n+        for arg in sess_args {\n             add(&(*arg), true);\n         }\n     }"}]}