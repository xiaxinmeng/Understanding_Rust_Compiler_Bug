{"sha": "7744cd41e2ad79c1b36d3d9fccd3bc0dbfd9e2d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3NDRjZDQxZTJhZDc5YzFiMzZkM2Q5ZmNjZDNiYzBkYmZkOWUyZDk=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-05-07T15:35:45Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-05-11T14:21:20Z"}, "message": "Reduce Chalk max_size parameter, add test for slow case", "tree": {"sha": "0943a0bfd0ce6d61d28730a37130907507fdc9d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0943a0bfd0ce6d61d28730a37130907507fdc9d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7744cd41e2ad79c1b36d3d9fccd3bc0dbfd9e2d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7744cd41e2ad79c1b36d3d9fccd3bc0dbfd9e2d9", "html_url": "https://github.com/rust-lang/rust/commit/7744cd41e2ad79c1b36d3d9fccd3bc0dbfd9e2d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7744cd41e2ad79c1b36d3d9fccd3bc0dbfd9e2d9/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8cd0e36f5288dd4c14fb5a07b73533d88f29788", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8cd0e36f5288dd4c14fb5a07b73533d88f29788", "html_url": "https://github.com/rust-lang/rust/commit/d8cd0e36f5288dd4c14fb5a07b73533d88f29788"}], "stats": {"total": 45, "additions": 42, "deletions": 3}, "files": [{"sha": "6f8d8fa49277746762677a0add09720710a7ac6a", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/7744cd41e2ad79c1b36d3d9fccd3bc0dbfd9e2d9/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7744cd41e2ad79c1b36d3d9fccd3bc0dbfd9e2d9/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=7744cd41e2ad79c1b36d3d9fccd3bc0dbfd9e2d9", "patch": "@@ -2581,6 +2581,35 @@ fn test() { foo.call()<|>; }\n     );\n }\n \n+#[test]\n+fn method_resolution_slow() {\n+    // this can get quite slow if we set the solver size limit too high\n+    let t = type_at(\n+        r#\"\n+//- /main.rs\n+trait Send {}\n+\n+struct S1; impl Send for S1;\n+struct S2; impl Send for S2;\n+struct U1;\n+\n+trait Trait { fn method(self); }\n+\n+struct X1<A, B> {}\n+impl<A, B> Send for X1<A, B> where A: Send, B: Send {}\n+\n+struct S<B, C> {}\n+\n+trait Fn {}\n+\n+impl<B, C> Trait for S<B, C> where C: Fn, B: Send {}\n+\n+fn test() { (S {}).method()<|>; }\n+\"#,\n+    );\n+    assert_eq!(t, \"{unknown}\");\n+}\n+\n fn type_at_pos(db: &MockDatabase, pos: FilePosition) -> String {\n     let file = db.parse(pos.file_id);\n     let expr = algo::find_node_at_offset::<ast::Expr>(file.syntax(), pos.offset).unwrap();"}, {"sha": "4260f7ef7477890b48523671867b2bdd2c85e0c7", "filename": "crates/ra_hir/src/ty/traits.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7744cd41e2ad79c1b36d3d9fccd3bc0dbfd9e2d9/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7744cd41e2ad79c1b36d3d9fccd3bc0dbfd9e2d9/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs?ref=7744cd41e2ad79c1b36d3d9fccd3bc0dbfd9e2d9", "patch": "@@ -14,6 +14,11 @@ mod chalk;\n \n pub(crate) type Solver = chalk_solve::Solver;\n \n+/// This controls the maximum size of types Chalk considers. If we set this too\n+/// high, we can run into slow edge cases; if we set it too low, Chalk won't\n+/// find some solutions.\n+const CHALK_SOLVER_MAX_SIZE: usize = 2;\n+\n #[derive(Debug, Copy, Clone)]\n struct ChalkContext<'a, DB> {\n     db: &'a DB,\n@@ -22,7 +27,8 @@ struct ChalkContext<'a, DB> {\n \n pub(crate) fn solver(_db: &impl HirDatabase, _krate: Crate) -> Arc<Mutex<Solver>> {\n     // krate parameter is just so we cache a unique solver per crate\n-    let solver_choice = chalk_solve::SolverChoice::SLG { max_size: 10 };\n+    let solver_choice = chalk_solve::SolverChoice::SLG { max_size: CHALK_SOLVER_MAX_SIZE };\n+    debug!(\"Creating new solver for crate {:?}\", _krate);\n     Arc::new(Mutex::new(solver_choice.into_solver()))\n }\n \n@@ -53,6 +59,7 @@ fn solve(\n ) -> Option<chalk_solve::Solution> {\n     let context = ChalkContext { db, krate };\n     let solver = db.solver(krate);\n+    debug!(\"solve goal: {:?}\", goal);\n     let solution = solver.lock().unwrap().solve(&context, goal);\n     debug!(\"solve({:?}) => {:?}\", goal, solution);\n     solution"}, {"sha": "8fa0ba7a5112158462445de36f42dd77f1d1a18b", "filename": "crates/ra_hir/src/ty/traits/chalk.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7744cd41e2ad79c1b36d3d9fccd3bc0dbfd9e2d9/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits%2Fchalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7744cd41e2ad79c1b36d3d9fccd3bc0dbfd9e2d9/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits%2Fchalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits%2Fchalk.rs?ref=7744cd41e2ad79c1b36d3d9fccd3bc0dbfd9e2d9", "patch": "@@ -345,11 +345,14 @@ where\n             return Vec::new();\n         }\n         let trait_ = from_chalk(self.db, trait_id);\n-        self.db\n+        let result: Vec<_> = self\n+            .db\n             .impls_for_trait(self.krate, trait_)\n             .iter()\n             .map(|impl_block| impl_block.to_chalk(self.db))\n-            .collect()\n+            .collect();\n+        debug!(\"impls_for_trait returned {} impls\", result.len());\n+        result\n     }\n     fn impl_provided_for(\n         &self,"}]}