{"sha": "c38456a92f81442093be2a7658742ecca96d0f84", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzODQ1NmE5MmY4MTQ0MjA5M2JlMmE3NjU4NzQyZWNjYTk2ZDBmODQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-31T01:17:45Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-03T22:02:00Z"}, "message": "librustdoc: De-`@mut` `librustdoc`", "tree": {"sha": "91cbea425851ec7551e698d765cfd4917b29b803", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91cbea425851ec7551e698d765cfd4917b29b803"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c38456a92f81442093be2a7658742ecca96d0f84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c38456a92f81442093be2a7658742ecca96d0f84", "html_url": "https://github.com/rust-lang/rust/commit/c38456a92f81442093be2a7658742ecca96d0f84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c38456a92f81442093be2a7658742ecca96d0f84/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af0439b1e337915f59af568ec422caf3a0e452c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/af0439b1e337915f59af568ec422caf3a0e452c9", "html_url": "https://github.com/rust-lang/rust/commit/af0439b1e337915f59af568ec422caf3a0e452c9"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "42d888dbbe85b442f4c88ea8da47ef0a7d9b7851", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c38456a92f81442093be2a7658742ecca96d0f84/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c38456a92f81442093be2a7658742ecca96d0f84/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=c38456a92f81442093be2a7658742ecca96d0f84", "patch": "@@ -88,7 +88,7 @@ pub fn run_core (libs: HashSet<Path>, cfgs: ~[~str], path: &Path) -> (clean::Cra\n     let ctxt = @ctxt;\n     local_data::set(super::ctxtkey, ctxt);\n \n-    let v = @mut RustdocVisitor::new();\n+    let mut v = RustdocVisitor::new();\n     v.visit(&ctxt.crate);\n \n     (v.clean(), analysis)"}, {"sha": "36caed437f511e07cdab913954f7c8af5594bcaf", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c38456a92f81442093be2a7658742ecca96d0f84/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c38456a92f81442093be2a7658742ecca96d0f84/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=c38456a92f81442093be2a7658742ecca96d0f84", "patch": "@@ -267,11 +267,11 @@ fn rust_input(cratefile: &str, matches: &getopts::Matches) -> Output {\n /// This input format purely deserializes the json output file. No passes are\n /// run over the deserialized output.\n fn json_input(input: &str) -> Result<Output, ~str> {\n-    let input = match File::open(&Path::new(input)) {\n+    let mut input = match File::open(&Path::new(input)) {\n         Some(f) => f,\n         None => return Err(format!(\"couldn't open {} for reading\", input)),\n     };\n-    match json::from_reader(@mut input as @mut io::Reader) {\n+    match json::from_reader(&mut input) {\n         Err(s) => Err(s.to_str()),\n         Ok(json::Object(obj)) => {\n             let mut obj = obj;\n@@ -332,6 +332,6 @@ fn json_output(crate: clean::Crate, res: ~[plugins::PluginJson], dst: Path) {\n     json.insert(~\"crate\", crate_json);\n     json.insert(~\"plugins\", json::Object(plugins_json));\n \n-    let file = @mut File::create(&dst).unwrap();\n-    json::Object(json).to_writer(file as @mut io::Writer);\n+    let mut file = File::create(&dst).unwrap();\n+    json::Object(json).to_writer(&mut file);\n }"}, {"sha": "0fbe585b9bf4513c4b8afe3b2b313bf397fe1fdf", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c38456a92f81442093be2a7658742ecca96d0f84/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c38456a92f81442093be2a7658742ecca96d0f84/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=c38456a92f81442093be2a7658742ecca96d0f84", "patch": "@@ -67,7 +67,7 @@ pub fn run(input: &str, matches: &getopts::Matches) -> int {\n     };\n     local_data::set(super::ctxtkey, ctx);\n \n-    let v = @mut RustdocVisitor::new();\n+    let mut v = RustdocVisitor::new();\n     v.visit(&ctx.crate);\n     let crate = v.clean();\n     let (crate, _) = passes::unindent_comments(crate);"}, {"sha": "9b6e809f8351f936592d949fa8ac9b58c830d16d", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c38456a92f81442093be2a7658742ecca96d0f84/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c38456a92f81442093be2a7658742ecca96d0f84/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=c38456a92f81442093be2a7658742ecca96d0f84", "patch": "@@ -32,7 +32,7 @@ impl RustdocVisitor {\n }\n \n impl RustdocVisitor {\n-    pub fn visit(@mut self, crate: &ast::Crate) {\n+    pub fn visit(&mut self, crate: &ast::Crate) {\n         self.attrs = crate.attrs.clone();\n         fn visit_struct_def(item: &ast::item, sd: @ast::struct_def, generics:\n                             &ast::Generics) -> Struct {"}]}