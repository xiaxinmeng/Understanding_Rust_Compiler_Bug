{"sha": "4e6356188f14b2c05957a4671e7a8e857fa5f429", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlNjM1NjE4OGYxNGIyYzA1OTU3YTQ2NzFlN2E4ZTg1N2ZhNWY0Mjk=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-07-10T16:32:27Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-07-28T14:18:38Z"}, "message": "Check that const_panic_fmt is const too.", "tree": {"sha": "97343592f0fc943be37b498e1b23fffc2848f2b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97343592f0fc943be37b498e1b23fffc2848f2b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e6356188f14b2c05957a4671e7a8e857fa5f429", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e6356188f14b2c05957a4671e7a8e857fa5f429", "html_url": "https://github.com/rust-lang/rust/commit/4e6356188f14b2c05957a4671e7a8e857fa5f429", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e6356188f14b2c05957a4671e7a8e857fa5f429/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38bf5b0412fc38313d8db931febb306093c1bcae", "url": "https://api.github.com/repos/rust-lang/rust/commits/38bf5b0412fc38313d8db931febb306093c1bcae", "html_url": "https://github.com/rust-lang/rust/commit/38bf5b0412fc38313d8db931febb306093c1bcae"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "dae2fe91294cba1a1d197466cfd5d3a4a25aa351", "filename": "compiler/rustc_mir/src/const_eval/machine.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4e6356188f14b2c05957a4671e7a8e857fa5f429/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e6356188f14b2c05957a4671e7a8e857fa5f429/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs?ref=4e6356188f14b2c05957a4671e7a8e857fa5f429", "patch": "@@ -238,7 +238,7 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter<'mir,\n \n     fn find_mir_or_eval_fn(\n         ecx: &mut InterpCx<'mir, 'tcx, Self>,\n-        mut instance: ty::Instance<'tcx>,\n+        instance: ty::Instance<'tcx>,\n         _abi: Abi,\n         args: &[OpTy<'tcx>],\n         _ret: Option<(&PlaceTy<'tcx>, mir::BasicBlock)>,\n@@ -258,7 +258,14 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter<'mir,\n                     // that for const fn!\n                     if let Some(new_instance) = ecx.hook_panic_fn(instance, args)? {\n                         // We call another const fn instead.\n-                        instance = new_instance;\n+                        return Self::find_mir_or_eval_fn(\n+                            ecx,\n+                            new_instance,\n+                            _abi,\n+                            args,\n+                            _ret,\n+                            _unwind,\n+                        );\n                     } else {\n                         // We certainly do *not* want to actually call the fn\n                         // though, so be sure we return here."}]}