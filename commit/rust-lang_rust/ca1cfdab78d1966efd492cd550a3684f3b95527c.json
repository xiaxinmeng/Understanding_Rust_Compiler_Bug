{"sha": "ca1cfdab78d1966efd492cd550a3684f3b95527c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhMWNmZGFiNzhkMTk2NmVmZDQ5MmNkNTUwYTM2ODRmM2I5NTUyN2M=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-10-16T18:32:58Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-10-16T18:32:58Z"}, "message": "Uninitialized boxes: check for zero-size allocation based on Layout::size", "tree": {"sha": "5ebfb66f91a01543d3e24eb8d2f1598decaf054b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ebfb66f91a01543d3e24eb8d2f1598decaf054b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca1cfdab78d1966efd492cd550a3684f3b95527c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca1cfdab78d1966efd492cd550a3684f3b95527c", "html_url": "https://github.com/rust-lang/rust/commit/ca1cfdab78d1966efd492cd550a3684f3b95527c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca1cfdab78d1966efd492cd550a3684f3b95527c/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23d3ff1b9756c768c4412dcd1d80cff0617fd5c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/23d3ff1b9756c768c4412dcd1d80cff0617fd5c5", "html_url": "https://github.com/rust-lang/rust/commit/23d3ff1b9756c768c4412dcd1d80cff0617fd5c5"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "567b8ea722491edbe2c9bfe9218b1632038dbc92", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ca1cfdab78d1966efd492cd550a3684f3b95527c/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca1cfdab78d1966efd492cd550a3684f3b95527c/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=ca1cfdab78d1966efd492cd550a3684f3b95527c", "patch": "@@ -141,10 +141,10 @@ impl<T> Box<T> {\n     /// ```\n     #[unstable(feature = \"new_uninit\", issue = \"63291\")]\n     pub fn new_uninit() -> Box<mem::MaybeUninit<T>> {\n-        if mem::size_of::<T>() == 0 {\n+        let layout = alloc::Layout::new::<mem::MaybeUninit<T>>();\n+        if layout.size() == 0 {\n             return Box(NonNull::dangling().into())\n         }\n-        let layout = alloc::Layout::new::<mem::MaybeUninit<T>>();\n         let ptr = unsafe {\n             Global.alloc(layout)\n                 .unwrap_or_else(|_| alloc::handle_alloc_error(layout))\n@@ -184,10 +184,10 @@ impl<T> Box<[T]> {\n     /// ```\n     #[unstable(feature = \"new_uninit\", issue = \"63291\")]\n     pub fn new_uninit_slice(len: usize) -> Box<[mem::MaybeUninit<T>]> {\n-        let ptr = if mem::size_of::<T>() == 0 || len == 0 {\n+        let layout = alloc::Layout::array::<mem::MaybeUninit<T>>(len).unwrap();\n+        let ptr = if layout.size() == 0 {\n             NonNull::dangling()\n         } else {\n-            let layout = alloc::Layout::array::<mem::MaybeUninit<T>>(len).unwrap();\n             unsafe {\n                 Global.alloc(layout)\n                     .unwrap_or_else(|_| alloc::handle_alloc_error(layout))"}]}