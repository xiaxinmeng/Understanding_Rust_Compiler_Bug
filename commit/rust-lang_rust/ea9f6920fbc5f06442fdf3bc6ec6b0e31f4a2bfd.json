{"sha": "ea9f6920fbc5f06442fdf3bc6ec6b0e31f4a2bfd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhOWY2OTIwZmJjNWYwNjQ0MmZkZjNiYzZlYzZiMGUzMWY0YTJiZmQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-07-28T09:25:14Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-07-28T09:35:21Z"}, "message": "minor: simplify", "tree": {"sha": "400a9707ce85ccd19878f8051841d100c8ac0bb0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/400a9707ce85ccd19878f8051841d100c8ac0bb0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea9f6920fbc5f06442fdf3bc6ec6b0e31f4a2bfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea9f6920fbc5f06442fdf3bc6ec6b0e31f4a2bfd", "html_url": "https://github.com/rust-lang/rust/commit/ea9f6920fbc5f06442fdf3bc6ec6b0e31f4a2bfd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea9f6920fbc5f06442fdf3bc6ec6b0e31f4a2bfd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a2a0b7abb5f7de9675cd2b84287dc1e4156001b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a2a0b7abb5f7de9675cd2b84287dc1e4156001b", "html_url": "https://github.com/rust-lang/rust/commit/6a2a0b7abb5f7de9675cd2b84287dc1e4156001b"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "99a29b43d20419189d4eeb0a604d8adcc0970606", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ea9f6920fbc5f06442fdf3bc6ec6b0e31f4a2bfd/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea9f6920fbc5f06442fdf3bc6ec6b0e31f4a2bfd/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=ea9f6920fbc5f06442fdf3bc6ec6b0e31f4a2bfd", "patch": "@@ -582,9 +582,6 @@ impl Config {\n     pub fn code_action_group(&self) -> bool {\n         self.experimental(\"codeActionGroup\")\n     }\n-    pub fn experimental_hover_actions(&self) -> bool {\n-        self.experimental(\"hoverActions\")\n-    }\n     pub fn server_status_notification(&self) -> bool {\n         self.experimental(\"serverStatusNotification\")\n     }\n@@ -790,13 +787,13 @@ impl Config {\n         }\n     }\n     pub fn hover_actions(&self) -> HoverActionsConfig {\n+        let enable = self.experimental(\"hoverActions\") && self.data.hoverActions_enable;\n         HoverActionsConfig {\n-            implementations: self.data.hoverActions_enable\n-                && self.data.hoverActions_implementations,\n-            references: self.data.hoverActions_enable && self.data.hoverActions_references,\n-            run: self.data.hoverActions_enable && self.data.hoverActions_run,\n-            debug: self.data.hoverActions_enable && self.data.hoverActions_debug,\n-            goto_type_def: self.data.hoverActions_enable && self.data.hoverActions_gotoTypeDef,\n+            implementations: enable && self.data.hoverActions_implementations,\n+            references: enable && self.data.hoverActions_references,\n+            run: enable && self.data.hoverActions_run,\n+            debug: enable && self.data.hoverActions_debug,\n+            goto_type_def: enable && self.data.hoverActions_gotoTypeDef,\n         }\n     }\n     pub fn highlighting_strings(&self) -> bool {"}, {"sha": "129b35999d0d3661c5a6cf441bdb7d9c542a9cdd", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ea9f6920fbc5f06442fdf3bc6ec6b0e31f4a2bfd/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea9f6920fbc5f06442fdf3bc6ec6b0e31f4a2bfd/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=ea9f6920fbc5f06442fdf3bc6ec6b0e31f4a2bfd", "patch": "@@ -882,7 +882,11 @@ pub(crate) fn handle_hover(\n             contents: HoverContents::Markup(to_proto::markup_content(info.info.markup)),\n             range: Some(range),\n         },\n-        actions: prepare_hover_actions(&snap, &info.info.actions),\n+        actions: if snap.config.hover_actions().none() {\n+            Vec::new()\n+        } else {\n+            prepare_hover_actions(&snap, &info.info.actions)\n+        },\n     };\n \n     Ok(Some(hover))\n@@ -1594,10 +1598,6 @@ fn prepare_hover_actions(\n     snap: &GlobalStateSnapshot,\n     actions: &[HoverAction],\n ) -> Vec<lsp_ext::CommandLinkGroup> {\n-    if snap.config.hover_actions().none() || !snap.config.experimental_hover_actions() {\n-        return Vec::new();\n-    }\n-\n     actions\n         .iter()\n         .filter_map(|it| match it {"}]}