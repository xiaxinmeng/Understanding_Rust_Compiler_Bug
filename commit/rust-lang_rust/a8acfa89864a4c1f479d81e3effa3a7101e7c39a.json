{"sha": "a8acfa89864a4c1f479d81e3effa3a7101e7c39a", "node_id": "C_kwDOAAsO6NoAKGE4YWNmYTg5ODY0YTRjMWY0NzlkODFlM2VmZmEzYTcxMDFlN2MzOWE", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-03-02T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-03-04T22:06:31Z"}, "message": "Implement Copy, Clone, PartialEq and Eq for core::fmt::Alignment\n\nAlignment is a fieldless exhaustive enum, so it is already possible to\nclone and compare it by matching, but it is inconvenient to do so. For\nexample, if one would like to create a struct describing a formatter\nconfiguration and provide a clone implementation:\n\n```rust\npub struct Format {\n    fill: char,\n    width: Option<usize>,\n    align: fmt::Alignment,\n}\n\nimpl Clone for Format {\n    fn clone(&self) -> Self {\n        Format {\n            align: match self.align {\n                fmt::Alignment::Left => fmt::Alignment::Left,\n                fmt::Alignment::Right => fmt::Alignment::Right,\n                fmt::Alignment::Center => fmt::Alignment::Center,\n            },\n            .. *self\n        }\n    }\n}\n```\n\nDerive Copy, Clone, PartialEq, and Eq for Alignment for convenience.", "tree": {"sha": "fe69d05e5e754f9a39e8fb9c6a3ae551aa4a740a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe69d05e5e754f9a39e8fb9c6a3ae551aa4a740a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8acfa89864a4c1f479d81e3effa3a7101e7c39a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8acfa89864a4c1f479d81e3effa3a7101e7c39a", "html_url": "https://github.com/rust-lang/rust/commit/a8acfa89864a4c1f479d81e3effa3a7101e7c39a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8acfa89864a4c1f479d81e3effa3a7101e7c39a/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fcbc32053d5084d1de79bd484de82474cdae427", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fcbc32053d5084d1de79bd484de82474cdae427", "html_url": "https://github.com/rust-lang/rust/commit/9fcbc32053d5084d1de79bd484de82474cdae427"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8df415f80c4f6bcd6051b7450c557b446ee50250", "filename": "library/core/src/fmt/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8acfa89864a4c1f479d81e3effa3a7101e7c39a/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8acfa89864a4c1f479d81e3effa3a7101e7c39a/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs?ref=a8acfa89864a4c1f479d81e3effa3a7101e7c39a", "patch": "@@ -20,7 +20,7 @@ mod num;\n \n #[stable(feature = \"fmt_flags_align\", since = \"1.28.0\")]\n /// Possible alignments returned by `Formatter::align`\n-#[derive(Debug)]\n+#[derive(Copy, Clone, Debug, PartialEq, Eq)]\n pub enum Alignment {\n     #[stable(feature = \"fmt_flags_align\", since = \"1.28.0\")]\n     /// Indication that contents should be left-aligned."}]}