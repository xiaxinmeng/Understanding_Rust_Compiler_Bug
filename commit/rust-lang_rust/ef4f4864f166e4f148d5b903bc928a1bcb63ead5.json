{"sha": "ef4f4864f166e4f148d5b903bc928a1bcb63ead5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmNGY0ODY0ZjE2NmU0ZjE0OGQ1YjkwM2JjOTI4YTFiY2I2M2VhZDU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-01-30T11:54:56Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-01-30T15:39:19Z"}, "message": "Use dest,src ordering for make_clone_call", "tree": {"sha": "5f0df6373cf1bc8df2c08f42148ed6b0921d430c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f0df6373cf1bc8df2c08f42148ed6b0921d430c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef4f4864f166e4f148d5b903bc928a1bcb63ead5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef4f4864f166e4f148d5b903bc928a1bcb63ead5", "html_url": "https://github.com/rust-lang/rust/commit/ef4f4864f166e4f148d5b903bc928a1bcb63ead5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef4f4864f166e4f148d5b903bc928a1bcb63ead5/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48a7a1f5e954c1fc6693e0fddc793bf6b3e2bb25", "url": "https://api.github.com/repos/rust-lang/rust/commits/48a7a1f5e954c1fc6693e0fddc793bf6b3e2bb25", "html_url": "https://github.com/rust-lang/rust/commit/48a7a1f5e954c1fc6693e0fddc793bf6b3e2bb25"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "36dd359b20c86f09076d4d6b13a43c7c73162333", "filename": "src/librustc_mir/shim.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ef4f4864f166e4f148d5b903bc928a1bcb63ead5/src%2Flibrustc_mir%2Fshim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef4f4864f166e4f148d5b903bc928a1bcb63ead5/src%2Flibrustc_mir%2Fshim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fshim.rs?ref=ef4f4864f166e4f148d5b903bc928a1bcb63ead5", "patch": "@@ -403,11 +403,11 @@ impl<'a, 'tcx> CloneShimBuilder<'a, 'tcx> {\n \n     fn make_clone_call(\n         &mut self,\n+        dest: Place<'tcx>,\n+        src: Place<'tcx>,\n         ty: Ty<'tcx>,\n-        rcvr_field: Place<'tcx>,\n         next: BasicBlock,\n-        cleanup: BasicBlock,\n-        dest: Place<'tcx>\n+        cleanup: BasicBlock\n     ) {\n         let tcx = self.tcx;\n \n@@ -439,11 +439,11 @@ impl<'a, 'tcx> CloneShimBuilder<'a, 'tcx> {\n             })\n         );\n \n-        // `let ref_loc: &ty = &rcvr_field;`\n+        // `let ref_loc: &ty = &src;`\n         let statement = self.make_statement(\n             StatementKind::Assign(\n                 ref_loc.clone(),\n-                Rvalue::Ref(tcx.types.re_erased, BorrowKind::Shared, rcvr_field)\n+                Rvalue::Ref(tcx.types.re_erased, BorrowKind::Shared, src)\n             )\n         );\n \n@@ -537,8 +537,8 @@ impl<'a, 'tcx> CloneShimBuilder<'a, 'tcx> {\n         // Goto #3 if ok, #5 if unwinding happens.\n         let rcvr_field = rcvr.clone().index(beg);\n         let cloned = self.make_place(Mutability::Not, ty);\n-        self.make_clone_call(ty, rcvr_field, BasicBlock::new(3),\n-                             BasicBlock::new(5), cloned.clone());\n+        self.make_clone_call(cloned.clone(), rcvr_field, ty, BasicBlock::new(3),\n+                             BasicBlock::new(5));\n \n         // BB #3\n         // `ret[beg] = cloned;`\n@@ -639,11 +639,11 @@ impl<'a, 'tcx> CloneShimBuilder<'a, 'tcx> {\n             // `returns[i] = Clone::clone(&rcvr.i);`\n             // Goto #(2i + 2) if ok, #(2i + 1) if unwinding happens.\n             self.make_clone_call(\n-                *ity,\n+                place.clone(),\n                 rcvr_field,\n+                *ity,\n                 BasicBlock::new(2 * i + 2),\n                 BasicBlock::new(2 * i + 1),\n-                place.clone()\n             );\n \n             // BB #(2i + 1) (cleanup)"}]}