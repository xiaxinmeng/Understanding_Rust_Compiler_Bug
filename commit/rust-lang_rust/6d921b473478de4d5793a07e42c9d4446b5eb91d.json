{"sha": "6d921b473478de4d5793a07e42c9d4446b5eb91d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkOTIxYjQ3MzQ3OGRlNGQ1NzkzYTA3ZTQyYzlkNDQ0NmI1ZWI5MWQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2017-04-06T14:48:48Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2017-04-06T14:48:48Z"}, "message": "fix various rustup failures", "tree": {"sha": "b5a63750264dbe9b284a8b82eaa5112290ed5197", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5a63750264dbe9b284a8b82eaa5112290ed5197"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d921b473478de4d5793a07e42c9d4446b5eb91d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d921b473478de4d5793a07e42c9d4446b5eb91d", "html_url": "https://github.com/rust-lang/rust/commit/6d921b473478de4d5793a07e42c9d4446b5eb91d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d921b473478de4d5793a07e42c9d4446b5eb91d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c94a620483ad27175930718eb88d7e13897dade", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c94a620483ad27175930718eb88d7e13897dade", "html_url": "https://github.com/rust-lang/rust/commit/7c94a620483ad27175930718eb88d7e13897dade"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "6fbe47c9e65f64e9fa62d667d98c65ea771b05ba", "filename": "clippy_lints/src/let_if_seq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d921b473478de4d5793a07e42c9d4446b5eb91d/clippy_lints%2Fsrc%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d921b473478de4d5793a07e42c9d4446b5eb91d/clippy_lints%2Fsrc%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_if_seq.rs?ref=6d921b473478de4d5793a07e42c9d4446b5eb91d", "patch": "@@ -108,7 +108,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LetIfSeq {\n                     cond=snippet(cx, cond.span, \"_\"),\n                     then=if then.stmts.len() > 1 { \" ..;\" } else { \"\" },\n                     else=if default_multi_stmts { \" ..;\" } else { \"\" },\n-                    value=snippet(cx, then.span, \"<value>\"),\n+                    value=snippet(cx, value.span, \"<value>\"),\n                     default=snippet(cx, default.span, \"<default>\"),\n                 );\n                 span_lint_and_then(cx,"}, {"sha": "ce5065a916b83469989112bd30c97b32450fc518", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6d921b473478de4d5793a07e42c9d4446b5eb91d/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d921b473478de4d5793a07e42c9d4446b5eb91d/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=6d921b473478de4d5793a07e42c9d4446b5eb91d", "patch": "@@ -357,6 +357,9 @@ pub fn method_chain_args<'a>(expr: &'a Expr, methods: &[&str]) -> Option<Vec<&'a\n         // method chains are stored last -> first\n         if let ExprMethodCall(ref name, _, ref args) = current.node {\n             if name.node == *method_name {\n+                if args.iter().any(|e| in_macro(e.span)) {\n+                    return None;\n+                }\n                 matched.push(&**args); // build up `matched` backwards\n                 current = &args[0] // go to parent expression\n             } else {"}, {"sha": "a6473b0f909e1261658f1f7a9ec658a666f7126b", "filename": "tests/run-pass/mut_mut_macro.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6d921b473478de4d5793a07e42c9d4446b5eb91d/tests%2Frun-pass%2Fmut_mut_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d921b473478de4d5793a07e42c9d4446b5eb91d/tests%2Frun-pass%2Fmut_mut_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fmut_mut_macro.rs?ref=6d921b473478de4d5793a07e42c9d4446b5eb91d", "patch": "@@ -20,13 +20,12 @@ fn main() {\n     lazy_static! {\n         static ref MUT_MAP : HashMap<usize, &'static str> = {\n             let mut m = HashMap::new();\n-            let mut zero = &mut &mut \"zero\";\n             m.insert(0, \"zero\");\n             m\n         };\n         static ref MUT_COUNT : usize = MUT_MAP.len();\n     }\n-    assert!(*MUT_COUNT == 1);\n+    assert_eq!(*MUT_COUNT, 1);\n     // FIXME: don't lint in array length, requires `check_body`\n     //let _ = [\"\"; (42.0 < std::f32::NAN) as usize];\n }"}]}