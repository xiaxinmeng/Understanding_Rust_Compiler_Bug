{"sha": "c53d58f92395b2168dbc94b45bc472430a20ee26", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1M2Q1OGY5MjM5NWIyMTY4ZGJjOTRiNDViYzQ3MjQzMGEyMGVlMjY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-06-24T12:25:29Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-06-24T12:25:29Z"}, "message": "Implement some traits for FunctionCx", "tree": {"sha": "2ace985ea9274949a3a8a21fb8887e41aa56053c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ace985ea9274949a3a8a21fb8887e41aa56053c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c53d58f92395b2168dbc94b45bc472430a20ee26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c53d58f92395b2168dbc94b45bc472430a20ee26", "html_url": "https://github.com/rust-lang/rust/commit/c53d58f92395b2168dbc94b45bc472430a20ee26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c53d58f92395b2168dbc94b45bc472430a20ee26/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f62381865f3b05fcc53e064ecebae29c714eeac1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f62381865f3b05fcc53e064ecebae29c714eeac1", "html_url": "https://github.com/rust-lang/rust/commit/f62381865f3b05fcc53e064ecebae29c714eeac1"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "8a8e29bbda5f07ac472fac95fd14713301e620bc", "filename": "src/common.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c53d58f92395b2168dbc94b45bc472430a20ee26/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53d58f92395b2168dbc94b45bc472430a20ee26/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=c53d58f92395b2168dbc94b45bc472430a20ee26", "patch": "@@ -1,4 +1,7 @@\n+extern crate rustc_target;\n+\n use syntax::ast::{IntTy, UintTy};\n+use self::rustc_target::spec::{HasTargetSpec, Target};\n \n use cretonne_module::{Module, Linkage, FuncId};\n \n@@ -277,6 +280,24 @@ impl<'a, 'tcx: 'a> LayoutOf for &'a FunctionCx<'a, 'tcx> {\n     }\n }\n \n+impl<'a, 'tcx> layout::HasTyCtxt<'tcx> for &'a FunctionCx<'a, 'tcx> {\n+    fn tcx<'b>(&'b self) -> TyCtxt<'b, 'tcx, 'tcx> {\n+        self.tcx\n+    }\n+}\n+\n+impl<'a, 'tcx> layout::HasDataLayout for &'a FunctionCx<'a, 'tcx> {\n+    fn data_layout(&self) -> &layout::TargetDataLayout {\n+        &self.tcx.data_layout\n+    }\n+}\n+\n+impl<'a, 'tcx> HasTargetSpec for &'a FunctionCx<'a, 'tcx> {\n+    fn target_spec(&self) -> &Target {\n+        &self.tcx.sess.target.target\n+    }\n+}\n+\n impl<'f, 'tcx> FunctionCx<'f, 'tcx> {\n     pub fn monomorphize<T>(&self, value: &T) -> T\n         where T: TypeFoldable<'tcx>"}]}