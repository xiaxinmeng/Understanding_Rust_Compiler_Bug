{"sha": "2e8b00a33150eebf2d1a5aa500466c20cac0c0c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlOGIwMGEzMzE1MGVlYmYyZDFhNWFhNTAwNDY2YzIwY2FjMGMwYzM=", "commit": {"author": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-12-09T16:20:38Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2020-12-10T08:57:29Z"}, "message": "Apply suggestions from PR review\n\nAlso:\n  - Update to latest nightly", "tree": {"sha": "27454f9168ad1348b4e8de419ccb8a9cc8b5f695", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27454f9168ad1348b4e8de419ccb8a9cc8b5f695"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e8b00a33150eebf2d1a5aa500466c20cac0c0c3", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAl/R4vkACgkQHKDfKvWd\naKWZ1hAAwjejqnQzhB7KjZeyR5g86fAic74qL5pNUo0BgXukyg6//pM8vLLVwgl1\npvdLxZagJMO4TsAi5t3zRrolNcP8m7NTO3ys+YOwdHpLJNyU7hMJb9rP0pQHtX6Z\ncYeqXXHqlM0NiB/mmzmfT+0s27xjMNIwVEQqDvZQ09QAI5K0LgIMraeUHwviHS/3\ndW9JASa+puRKdVl2mkgTxSyHGqkvW5xJqMWLZDZNYHIKhdqlDoVD/nIygJg/ZdO8\nAJfXZq3mimQzW+NgT8/WZ8hJMauhLRlwj9YOXPn3bsu0q6sWraWWh1zTKJj4IngS\nbHpHfoGdLabA+TzmnR4vyaPJJv3SBXzA7UN6jC1ejYvwhr298rcNbHPtUB80p0Yd\nIkiok8FgE/QmW4oOhyy+0Uff8fkMjFr2fug1TPno6FBH6K3PeYjBQF7KvJstjJDy\n66hYmozDMU1cLakJwjrziFChwDEwOZoPiHZZXe5kCu22xuJX+s8JqSSwgLIclUoQ\nO/lYYOE9EC5wxf5fWc7xOvAKmz1F0bqKjaLPg2G/m6qeTRqC0+YO6CpmOqwpK9br\nCBBdxIORZkgjQpafX5+AFYWl5xTSvAq6CMvXQjjPWXwd0+oBitoxBdTdsjiXnNdN\n0aw7gp3Ene6l5OLJ/uvMG0tes/nv1zUqNzlznllUoP1LUjX5Ihc=\n=+V8I\n-----END PGP SIGNATURE-----", "payload": "tree 27454f9168ad1348b4e8de419ccb8a9cc8b5f695\nparent 613333acd537dff5844cd1ed72d4e6f56752ee6a\nauthor Eduardo Broto <ebroto@tutanota.com> 1607530838 +0100\ncommitter flip1995 <philipp.krones@embecosm.com> 1607590649 +0100\n\nApply suggestions from PR review\n\nAlso:\n  - Update to latest nightly\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e8b00a33150eebf2d1a5aa500466c20cac0c0c3", "html_url": "https://github.com/rust-lang/rust/commit/2e8b00a33150eebf2d1a5aa500466c20cac0c0c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e8b00a33150eebf2d1a5aa500466c20cac0c0c3/comments", "author": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "613333acd537dff5844cd1ed72d4e6f56752ee6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/613333acd537dff5844cd1ed72d4e6f56752ee6a", "html_url": "https://github.com/rust-lang/rust/commit/613333acd537dff5844cd1ed72d4e6f56752ee6a"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "0a3c602b9e261797ae53fd754a89a0090eb27edd", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/2e8b00a33150eebf2d1a5aa500466c20cac0c0c3/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/2e8b00a33150eebf2d1a5aa500466c20cac0c0c3/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=2e8b00a33150eebf2d1a5aa500466c20cac0c0c3", "patch": "@@ -70,8 +70,8 @@ But we can make it nest-less by using [if_chain] macro, [like this][nest-less].\n \n [`E-medium`] issues are generally pretty easy too, though it's recommended you work on an [`good first issue`]\n first. Sometimes they are only somewhat involved code wise, but not difficult per-se.\n-Note that [`E-medium`] issues may require some knowledge of Clippy internals or some \n-debugging to find the actual problem behind the issue. \n+Note that [`E-medium`] issues may require some knowledge of Clippy internals or some\n+debugging to find the actual problem behind the issue.\n \n [`T-middle`] issues can be more involved and require verifying types. The [`ty`] module contains a\n lot of methods that are useful, though one of the most useful would be `expr_ty` (gives the type of\n@@ -182,21 +182,26 @@ That's why the `else_if_without_else` example uses the `register_early_pass` fun\n [early_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/trait.EarlyLintPass.html\n [late_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/trait.LateLintPass.html\n \n-## Syncing changes from [`rust-lang/rust`] to Clippy\n+## Syncing changes between Clippy and [`rust-lang/rust`]\n \n Clippy currently gets built with a pinned nightly version.\n \n In the `rust-lang/rust` repository, where rustc resides, there's a copy of Clippy\n that compiler hackers modify from time to time to adapt to changes in the unstable\n API of the compiler.\n \n-We need to sync these changes back to this repository periodically. If you want\n-to help with that, you have to sync the `rust-lang/rust-clippy` repository with \n-the `subtree` copy of Clippy in the `rust-lang/rust` repository, and update\n-the `rustc-toolchain` file accordingly.\n+We need to sync these changes back to this repository periodically, and the changes\n+made to this repository in the meantime also need to be synced to the `rust-lang/rust` repository.\n \n-For general information about `subtree`s in the Rust repository\n-see [Rust's `CONTRIBUTING.md`][subtree].\n+To avoid flooding the `rust-lang/rust` PR queue, this two-way sync process is done\n+in a bi-weekly basis if there's no urgent changes. This is done starting on the day of\n+the Rust stable release and then every other week. That way we guarantee that we keep\n+this repo up to date with the latest compiler API, and every feature in Clippy is available\n+for 2 weeks in nightly, before it can get to beta. For reference, the first sync\n+following this cadence was performed the 2020-08-27.\n+\n+This process is described in detail in the following sections. For general information\n+about `subtree`s in the Rust repository see [Rust's `CONTRIBUTING.md`][subtree].\n \n ### Patching git-subtree to work with big repos\n \n@@ -225,13 +230,14 @@ This shell has a hardcoded recursion limit set to 1000. In order to make this pr\n you need to force the script to run `bash` instead. You can do this by editing the first\n line of the `git-subtree` script and changing `sh` to `bash`.\n \n-### Performing the sync\n+### Performing the sync from [`rust-lang/rust`] to Clippy\n \n Here is a TL;DR version of the sync process (all of the following commands have\n to be run inside the `rust` directory):\n \n-1. Clone the [`rust-lang/rust`] repository\n-2. Sync the changes to the rust-copy of Clippy to your Clippy fork:\n+1. Clone the [`rust-lang/rust`] repository or make sure it is up to date.\n+2. Checkout the commit from the latest available nightly. You can get it using `rustup check`.\n+3. Sync the changes to the rust-copy of Clippy to your Clippy fork:\n     ```bash\n     # Make sure to change `your-github-name` to your github name in the following command\n     git subtree push -P src/tools/clippy git@github.com:your-github-name/rust-clippy sync-from-rust\n@@ -249,17 +255,11 @@ to be run inside the `rust` directory):\n     git checkout sync-from-rust\n     git merge upstream/master\n     ```\n-3. Open a PR to `rust-lang/rust-clippy` and wait for it to get merged (to\n+4. Open a PR to `rust-lang/rust-clippy` and wait for it to get merged (to\n    accelerate the process ping the `@rust-lang/clippy` team in your PR and/or\n    ~~annoy~~ ask them in the [Zulip] stream.)\n-   \n-### Syncing back changes in Clippy to [`rust-lang/rust`]\n \n-To avoid flooding the [`rust-lang/rust`] PR queue, changes in Clippy's repo are synced back\n-in a bi-weekly basis if there's no urgent changes. This is done starting on the day of\n-the Rust stable release and then every other week. That way we guarantee that\n-every feature in Clippy is available for 2 weeks in nightly, before it can get to beta.\n-For reference, the first sync following this cadence was performed the 2020-08-27.\n+### Performing the sync from Clippy to [`rust-lang/rust`]\n \n All of the following commands have to be run inside the `rust` directory.\n "}, {"sha": "dfa7dea449a67b742c7e54c04e7289a14b9a18b6", "filename": "rust-toolchain", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2e8b00a33150eebf2d1a5aa500466c20cac0c0c3/rust-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/2e8b00a33150eebf2d1a5aa500466c20cac0c0c3/rust-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-toolchain?ref=2e8b00a33150eebf2d1a5aa500466c20cac0c0c3", "patch": "@@ -1,3 +1,3 @@\n [toolchain]\n-channel = \"nightly-2020-11-29\"\n+channel = \"nightly-2020-12-09\"\n components = [\"llvm-tools-preview\", \"rustc-dev\", \"rust-src\", \"rustfmt\"]"}]}