{"sha": "cefc5cbb4a95d2a473ea656efe603bef979b5c49", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlZmM1Y2JiNGE5NWQyYTQ3M2VhNjU2ZWZlNjAzYmVmOTc5YjVjNDk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-24T14:56:00Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-24T14:56:00Z"}, "message": "introduce EnumId", "tree": {"sha": "45f91a3398eeeca19a2e4c14dca737dc0a5b38a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45f91a3398eeeca19a2e4c14dca737dc0a5b38a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cefc5cbb4a95d2a473ea656efe603bef979b5c49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cefc5cbb4a95d2a473ea656efe603bef979b5c49", "html_url": "https://github.com/rust-lang/rust/commit/cefc5cbb4a95d2a473ea656efe603bef979b5c49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cefc5cbb4a95d2a473ea656efe603bef979b5c49/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60a607d33f1c50acd0a4218da32abe35b2941e38", "url": "https://api.github.com/repos/rust-lang/rust/commits/60a607d33f1c50acd0a4218da32abe35b2941e38", "html_url": "https://github.com/rust-lang/rust/commit/60a607d33f1c50acd0a4218da32abe35b2941e38"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "530fdf5cd870fdfad10cba754839b5681b70b679", "filename": "crates/ra_hir/src/ids.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/cefc5cbb4a95d2a473ea656efe603bef979b5c49/crates%2Fra_hir%2Fsrc%2Fids.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cefc5cbb4a95d2a473ea656efe603bef979b5c49/crates%2Fra_hir%2Fsrc%2Fids.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fids.rs?ref=cefc5cbb4a95d2a473ea656efe603bef979b5c49", "patch": "@@ -15,6 +15,7 @@ pub struct HirInterner {\n     macros: LocationIntener<MacroCallLoc, MacroCallId>,\n     fns: LocationIntener<FunctionLoc, FunctionId>,\n     structs: LocationIntener<StructLoc, StructId>,\n+    enums: LocationIntener<EnumLoc, EnumId>,\n }\n \n impl HirInterner {\n@@ -213,6 +214,24 @@ impl StructLoc {\n     }\n }\n \n+#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n+pub struct EnumId(RawId);\n+impl_arena_id!(EnumId);\n+\n+pub(crate) type EnumLoc = ItemLoc<ast::EnumDef>;\n+\n+impl EnumId {\n+    pub(crate) fn loc(self, db: &impl AsRef<HirInterner>) -> EnumLoc {\n+        db.as_ref().enums.id2loc(self)\n+    }\n+}\n+\n+impl EnumLoc {\n+    pub(crate) fn id(&self, db: &impl AsRef<HirInterner>) -> EnumId {\n+        db.as_ref().enums.loc2id(&self)\n+    }\n+}\n+\n /// Def's are a core concept of hir. A `Def` is an Item (function, module, etc)\n /// in a specific module.\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]"}]}