{"sha": "7b453b9f5a3b921291fd723067d48fee28e7475b", "node_id": "C_kwDOAAsO6NoAKDdiNDUzYjlmNWEzYjkyMTI5MWZkNzIzMDY3ZDQ4ZmVlMjhlNzQ3NWI", "commit": {"author": {"name": "Julia Tatz", "email": "tatz.j@northeastern.edu", "date": "2021-09-03T17:00:39Z"}, "committer": {"name": "Jynn Nelson", "email": "jyn.nelson@redjack.com", "date": "2023-03-31T11:28:39Z"}, "message": "More in-depth documentation for the new debuginfo options", "tree": {"sha": "5e13382057841d009957ecde9bc688b117669b79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e13382057841d009957ecde9bc688b117669b79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b453b9f5a3b921291fd723067d48fee28e7475b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b453b9f5a3b921291fd723067d48fee28e7475b", "html_url": "https://github.com/rust-lang/rust/commit/7b453b9f5a3b921291fd723067d48fee28e7475b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b453b9f5a3b921291fd723067d48fee28e7475b/comments", "author": {"login": "jdtatz", "id": 7038393, "node_id": "MDQ6VXNlcjcwMzgzOTM=", "avatar_url": "https://avatars.githubusercontent.com/u/7038393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdtatz", "html_url": "https://github.com/jdtatz", "followers_url": "https://api.github.com/users/jdtatz/followers", "following_url": "https://api.github.com/users/jdtatz/following{/other_user}", "gists_url": "https://api.github.com/users/jdtatz/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdtatz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdtatz/subscriptions", "organizations_url": "https://api.github.com/users/jdtatz/orgs", "repos_url": "https://api.github.com/users/jdtatz/repos", "events_url": "https://api.github.com/users/jdtatz/events{/privacy}", "received_events_url": "https://api.github.com/users/jdtatz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0504a333837e10f19454901fd060c0f99bf8f5b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0504a333837e10f19454901fd060c0f99bf8f5b7", "html_url": "https://github.com/rust-lang/rust/commit/0504a333837e10f19454901fd060c0f99bf8f5b7"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "556c6602ff430e84caa7a79fe65ebdc5542a37a5", "filename": "compiler/rustc_codegen_llvm/src/llvm/ffi.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7b453b9f5a3b921291fd723067d48fee28e7475b/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b453b9f5a3b921291fd723067d48fee28e7475b/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs?ref=7b453b9f5a3b921291fd723067d48fee28e7475b", "patch": "@@ -951,6 +951,16 @@ pub mod debuginfo {\n \n     impl DebugEmissionKind {\n         pub fn from_generic(kind: rustc_session::config::DebugInfo) -> Self {\n+            // We should be setting LLVM's emission kind to `LineTablesOnly` if\n+            // we are compiling with \"limited\" debuginfo. However, some of the\n+            // existing tools relied on slightly more debuginfo being generated than\n+            // would be the case with `LineTablesOnly`, and we did not want to break\n+            // these tools in a \"drive-by fix\", without a good idea or plan about\n+            // what limited debuginfo should exactly look like. So for now we are\n+            // instead adding a new debuginfo option \"line-tables-only\" so as to\n+            // not break anything and to allow users to have 'limited' debug info.\n+            //\n+            // See https://github.com/rust-lang/rust/issues/60020 for details.\n             use rustc_session::config::DebugInfo;\n             match kind {\n                 DebugInfo::None => DebugEmissionKind::NoDebug,"}, {"sha": "4d418f9c9b746ec28d5d9d3f2e459b9647eb6e66", "filename": "src/doc/rustc/src/codegen-options/index.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7b453b9f5a3b921291fd723067d48fee28e7475b/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md", "raw_url": "https://github.com/rust-lang/rust/raw/7b453b9f5a3b921291fd723067d48fee28e7475b/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md?ref=7b453b9f5a3b921291fd723067d48fee28e7475b", "patch": "@@ -72,8 +72,8 @@ This flag controls the generation of debug information. It takes one of the\n following values:\n \n * `0` or `none`: no debug info at all (the default).\n-* `line-directives-only`: line info directives only.\n-* `line-tables-only`: line tables only.\n+* `line-directives-only`: line info directives only, (For the nvptx* targets this enables [profiling](https://reviews.llvm.org/D46061), but on other targets the behavior is unspecified).\n+* `line-tables-only`: line tables only, (Generates the minimal amount of debug info for backtraces with filename/line number info, but not anything else, i.e. variable or function parameter info).\n * `1` or `limited`: debug info without type information.\n * `2` or `full`: full debug info.\n "}, {"sha": "48d676887fdd55850ef4fcc73ea01bba09eedec5", "filename": "tests/codegen/debug-limited.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7b453b9f5a3b921291fd723067d48fee28e7475b/tests%2Fcodegen%2Fdebug-limited.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b453b9f5a3b921291fd723067d48fee28e7475b/tests%2Fcodegen%2Fdebug-limited.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdebug-limited.rs?ref=7b453b9f5a3b921291fd723067d48fee28e7475b", "patch": "@@ -1,12 +1,11 @@\n // Verify that the limited debuginfo option emits llvm's FullDebugInfo, but no type info.\n //\n-// ignore-windows\n // compile-flags: -C debuginfo=limited\n \n #[repr(C)]\n struct StructType {\n     a: i64,\n-    b: i32\n+    b: i32,\n }\n \n extern \"C\" {\n@@ -16,7 +15,7 @@ extern \"C\" {\n \n fn main() {\n     unsafe {\n-        let value: &mut StructType = &mut* creator();\n+        let value: &mut StructType = &mut *creator();\n         value.a = 7;\n         save(value as *const StructType)\n     }"}, {"sha": "750bdd49de0751ff0464be17635cfb6f47302d3a", "filename": "tests/codegen/debug-line-directives-only.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7b453b9f5a3b921291fd723067d48fee28e7475b/tests%2Fcodegen%2Fdebug-line-directives-only.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b453b9f5a3b921291fd723067d48fee28e7475b/tests%2Fcodegen%2Fdebug-line-directives-only.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdebug-line-directives-only.rs?ref=7b453b9f5a3b921291fd723067d48fee28e7475b", "patch": "@@ -1,12 +1,11 @@\n // Verify that the only debuginfo generated are the line directives.\n //\n-// ignore-windows\n // compile-flags: -C debuginfo=line-directives-only\n \n #[repr(C)]\n struct StructType {\n     a: i64,\n-    b: i32\n+    b: i32,\n }\n \n extern \"C\" {\n@@ -16,7 +15,7 @@ extern \"C\" {\n \n fn main() {\n     unsafe {\n-        let value: &mut StructType = &mut* creator();\n+        let value: &mut StructType = &mut *creator();\n         value.a = 7;\n         save(value as *const StructType)\n     }"}, {"sha": "3ed165a6f69672820cabfd2778102e234bf38cbe", "filename": "tests/codegen/debug-line-tables-only.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7b453b9f5a3b921291fd723067d48fee28e7475b/tests%2Fcodegen%2Fdebug-line-tables-only.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b453b9f5a3b921291fd723067d48fee28e7475b/tests%2Fcodegen%2Fdebug-line-tables-only.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdebug-line-tables-only.rs?ref=7b453b9f5a3b921291fd723067d48fee28e7475b", "patch": "@@ -1,12 +1,11 @@\n // Verify that the only debuginfo generated are the line tables.\n //\n-// ignore-windows\n // compile-flags: -C debuginfo=line-tables-only\n \n #[repr(C)]\n struct StructType {\n     a: i64,\n-    b: i32\n+    b: i32,\n }\n \n extern \"C\" {\n@@ -16,7 +15,7 @@ extern \"C\" {\n \n fn main() {\n     unsafe {\n-        let value: &mut StructType = &mut* creator();\n+        let value: &mut StructType = &mut *creator();\n         value.a = 7;\n         save(value as *const StructType)\n     }"}]}