{"sha": "4101c15ddbae860b86cd2ed17b09b7526ef17de8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxMDFjMTVkZGJhZTg2MGI4NmNkMmVkMTdiMDliNzUyNmVmMTdkZTg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-09-20T08:02:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-20T08:02:51Z"}, "message": "Merge #1879\n\n1879: A few doc comments r=matklad a=kjeremy\n\n\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>", "tree": {"sha": "2a5096fd6c61fbf9e7561ba59ac732d93c442fcf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a5096fd6c61fbf9e7561ba59ac732d93c442fcf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4101c15ddbae860b86cd2ed17b09b7526ef17de8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdhIerCRBK7hj4Ov3rIwAAdHIIACMsIobp3YRzuYtoFAahyPY4\nnE4Fu/UWXb3ljspp5wXyK3Bf2vALrW7i7YgOsS076i2nTf3Cq+nG5D4i8e94waSt\nmZT13W3xbk/IfVDY2mnN6kr7BbU1c4uA3cuvDNEFu1gtbQXfjVun4SLGzjmW2yO/\naoO7SDKEk7oXx1oadHiBgB3TN3PlJJFfncjq6+tLkfl9chU9qbJ7izWlAy7ul2Ia\npsCofSrBhRR12XmbiRncLdUsyvfT0hhaariE1eA2WDJmPMdZBINKZiNGUTtkfEqJ\n/Ao6BoVyHDvOCTV9Q6MWI21WSVjgu7Mm4vzVONUrPIi5qbMRX7OD9MCuD3w/X+U=\n=KfdK\n-----END PGP SIGNATURE-----\n", "payload": "tree 2a5096fd6c61fbf9e7561ba59ac732d93c442fcf\nparent 58dc3b16496cbcce14101605aa1214e263b91c87\nparent e26c41d611738d70a26001141841283c9463a80d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1568966571 +0000\ncommitter GitHub <noreply@github.com> 1568966571 +0000\n\nMerge #1879\n\n1879: A few doc comments r=matklad a=kjeremy\n\n\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4101c15ddbae860b86cd2ed17b09b7526ef17de8", "html_url": "https://github.com/rust-lang/rust/commit/4101c15ddbae860b86cd2ed17b09b7526ef17de8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4101c15ddbae860b86cd2ed17b09b7526ef17de8/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58dc3b16496cbcce14101605aa1214e263b91c87", "url": "https://api.github.com/repos/rust-lang/rust/commits/58dc3b16496cbcce14101605aa1214e263b91c87", "html_url": "https://github.com/rust-lang/rust/commit/58dc3b16496cbcce14101605aa1214e263b91c87"}, {"sha": "e26c41d611738d70a26001141841283c9463a80d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e26c41d611738d70a26001141841283c9463a80d", "html_url": "https://github.com/rust-lang/rust/commit/e26c41d611738d70a26001141841283c9463a80d"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "412dc4d719de09c686be91d8a0ac0fac827d53ce", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4101c15ddbae860b86cd2ed17b09b7526ef17de8/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4101c15ddbae860b86cd2ed17b09b7526ef17de8/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=4101c15ddbae860b86cd2ed17b09b7526ef17de8", "patch": "@@ -223,6 +223,7 @@ impl Query {\n     }\n }\n \n+/// Info associated with a text range.\n #[derive(Debug)]\n pub struct RangeInfo<T> {\n     pub range: TextRange,\n@@ -235,6 +236,8 @@ impl<T> RangeInfo<T> {\n     }\n }\n \n+/// Contains information about a call site. Specifically the\n+/// `FunctionSignature`and current parameter.\n #[derive(Debug)]\n pub struct CallInfo {\n     pub signature: FunctionSignature,\n@@ -325,11 +328,12 @@ impl Analysis {\n         (host.analysis(), file_id)\n     }\n \n+    /// Features for Analysis.\n     pub fn feature_flags(&self) -> &FeatureFlags {\n         &self.db.feature_flags\n     }\n \n-    /// Debug info about the current state of the analysis\n+    /// Debug info about the current state of the analysis.\n     pub fn status(&self) -> Cancelable<String> {\n         self.with_db(|db| status::status(&*db))\n     }\n@@ -440,20 +444,23 @@ impl Analysis {\n         })\n     }\n \n+    /// Returns the definitions from the symbol at `position`.\n     pub fn goto_definition(\n         &self,\n         position: FilePosition,\n     ) -> Cancelable<Option<RangeInfo<Vec<NavigationTarget>>>> {\n         self.with_db(|db| goto_definition::goto_definition(db, position))\n     }\n \n+    /// Returns the impls from the symbol at `position`.\n     pub fn goto_implementation(\n         &self,\n         position: FilePosition,\n     ) -> Cancelable<Option<RangeInfo<Vec<NavigationTarget>>>> {\n         self.with_db(|db| impls::goto_implementation(db, position))\n     }\n \n+    /// Returns the type definitions for the symbol at `position`.\n     pub fn goto_type_definition(\n         &self,\n         position: FilePosition,\n@@ -540,6 +547,7 @@ impl Analysis {\n         self.with_db(|db| references::rename(db, position, new_name))\n     }\n \n+    /// Performs an operation on that may be Canceled.\n     fn with_db<F: FnOnce(&db::RootDatabase) -> T + std::panic::UnwindSafe, T>(\n         &self,\n         f: F,"}]}