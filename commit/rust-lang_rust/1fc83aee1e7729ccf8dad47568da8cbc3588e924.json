{"sha": "1fc83aee1e7729ccf8dad47568da8cbc3588e924", "node_id": "C_kwDOAAsO6NoAKDFmYzgzYWVlMWU3NzI5Y2NmOGRhZDQ3NTY4ZGE4Y2JjMzU4OGU5MjQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-26T09:39:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-26T09:39:11Z"}, "message": "Rollup merge of #104839 - HintringerFabian:docs_array_from_fn, r=scottmcm\n\nimprove array_from_fn documenation\n\nImproves array::from_fn documentation\nFixes #102609\n\nThere were also unresolved comments from [this PR #100462](https://github.com/rust-lang/rust/pull/100462), which have been added to my PR", "tree": {"sha": "ac61bac86df2551841ff1ba88f7e1c7ab560c309", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac61bac86df2551841ff1ba88f7e1c7ab560c309"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fc83aee1e7729ccf8dad47568da8cbc3588e924", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjgd6/CRBK7hj4Ov3rIwAARowIAAjK7UgtScLo1uhQvQXo80yt\npshxomZA0jFrxRllep+D5CnA68YgSRatY4tpmdWoPt8MEzYGzBQwd6UyWzeUuiv7\nYkR20MP8aLgBFkG3qNqO8bGkrecVMfodF/zC1TX80eNCs1nyBl5EB6b+bAHdJF3w\n8nsGFMyfgKbNq6yH1AOoCkng50FQI9ZkyvomDoE0NIR6jOrvce102HtJs/QxH4Vw\n++ZKBzDvslWMxrzyIF7CCIQ6t7u4Vu+zyyv3moZJIQ0PMWRoBRuZ6Dh+a929r9Tv\nFJ5d6WR19cITftAqzJGkV+Svi2/BWlrg9bgdSlmUt0D/B/2YWojByscwPShZ9GM=\n=coUT\n-----END PGP SIGNATURE-----\n", "payload": "tree ac61bac86df2551841ff1ba88f7e1c7ab560c309\nparent 42010a23f54c8486b77f97862dff02288cc10800\nparent 69d562d68493453c696ba6d2c10342df13d5fd95\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1669455551 +0100\ncommitter GitHub <noreply@github.com> 1669455551 +0100\n\nRollup merge of #104839 - HintringerFabian:docs_array_from_fn, r=scottmcm\n\nimprove array_from_fn documenation\n\nImproves array::from_fn documentation\nFixes #102609\n\nThere were also unresolved comments from [this PR #100462](https://github.com/rust-lang/rust/pull/100462), which have been added to my PR\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fc83aee1e7729ccf8dad47568da8cbc3588e924", "html_url": "https://github.com/rust-lang/rust/commit/1fc83aee1e7729ccf8dad47568da8cbc3588e924", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fc83aee1e7729ccf8dad47568da8cbc3588e924/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42010a23f54c8486b77f97862dff02288cc10800", "url": "https://api.github.com/repos/rust-lang/rust/commits/42010a23f54c8486b77f97862dff02288cc10800", "html_url": "https://github.com/rust-lang/rust/commit/42010a23f54c8486b77f97862dff02288cc10800"}, {"sha": "69d562d68493453c696ba6d2c10342df13d5fd95", "url": "https://api.github.com/repos/rust-lang/rust/commits/69d562d68493453c696ba6d2c10342df13d5fd95", "html_url": "https://github.com/rust-lang/rust/commit/69d562d68493453c696ba6d2c10342df13d5fd95"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "94a1a1d32bcd66d7327c2a2a1142774cdcd33973", "filename": "library/core/src/array/mod.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1fc83aee1e7729ccf8dad47568da8cbc3588e924/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fc83aee1e7729ccf8dad47568da8cbc3588e924/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fmod.rs?ref=1fc83aee1e7729ccf8dad47568da8cbc3588e924", "patch": "@@ -23,7 +23,8 @@ mod iter;\n #[stable(feature = \"array_value_iter\", since = \"1.51.0\")]\n pub use iter::IntoIter;\n \n-/// Creates an array `[T; N]` where each array element `T` is returned by the `cb` call.\n+/// Creates an array of type [T; N], where each element `T` is the returned value from `cb`\n+/// using that element's index.\n ///\n /// # Arguments\n ///\n@@ -36,8 +37,18 @@ pub use iter::IntoIter;\n /// // elements to produce is the length of array down there: only arrays of\n /// // equal lengths can be compared, so the const generic parameter `N` is\n /// // inferred to be 5, thus creating array of 5 elements.\n+///\n /// let array = core::array::from_fn(|i| i);\n+/// // indexes are:    0  1  2  3  4\n /// assert_eq!(array, [0, 1, 2, 3, 4]);\n+///\n+/// let array2: [usize; 8] = core::array::from_fn(|i| i * 2);\n+/// // indexes are:     0  1  2  3  4  5   6   7\n+/// assert_eq!(array2, [0, 2, 4, 6, 8, 10, 12, 14]);\n+///\n+/// let bool_arr = core::array::from_fn::<_, 5, _>(|i| i % 2 == 0);\n+/// // indexes are:       0     1      2     3      4\n+/// assert_eq!(bool_arr, [true, false, true, false, true]);\n /// ```\n #[inline]\n #[stable(feature = \"array_from_fn\", since = \"1.63.0\")]"}]}