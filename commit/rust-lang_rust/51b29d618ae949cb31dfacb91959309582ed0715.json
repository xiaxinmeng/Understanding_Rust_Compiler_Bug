{"sha": "51b29d618ae949cb31dfacb91959309582ed0715", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxYjI5ZDYxOGFlOTQ5Y2IzMWRmYWNiOTE5NTkzMDk1ODJlZDA3MTU=", "commit": {"author": {"name": "panicbit", "email": "panicbit.dev@gmail.com", "date": "2017-08-06T23:25:43Z"}, "committer": {"name": "panicbit", "email": "panicbit.dev@gmail.com", "date": "2017-08-07T00:24:35Z"}, "message": "libcore: Implement cloned() for Option<&mut T>", "tree": {"sha": "257f2725256e83dec340e819278ecd4cd72ea73a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/257f2725256e83dec340e819278ecd4cd72ea73a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51b29d618ae949cb31dfacb91959309582ed0715", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51b29d618ae949cb31dfacb91959309582ed0715", "html_url": "https://github.com/rust-lang/rust/commit/51b29d618ae949cb31dfacb91959309582ed0715", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51b29d618ae949cb31dfacb91959309582ed0715/comments", "author": {"login": "panicbit", "id": 628445, "node_id": "MDQ6VXNlcjYyODQ0NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/628445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/panicbit", "html_url": "https://github.com/panicbit", "followers_url": "https://api.github.com/users/panicbit/followers", "following_url": "https://api.github.com/users/panicbit/following{/other_user}", "gists_url": "https://api.github.com/users/panicbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/panicbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/panicbit/subscriptions", "organizations_url": "https://api.github.com/users/panicbit/orgs", "repos_url": "https://api.github.com/users/panicbit/repos", "events_url": "https://api.github.com/users/panicbit/events{/privacy}", "received_events_url": "https://api.github.com/users/panicbit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "panicbit", "id": 628445, "node_id": "MDQ6VXNlcjYyODQ0NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/628445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/panicbit", "html_url": "https://github.com/panicbit", "followers_url": "https://api.github.com/users/panicbit/followers", "following_url": "https://api.github.com/users/panicbit/following{/other_user}", "gists_url": "https://api.github.com/users/panicbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/panicbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/panicbit/subscriptions", "organizations_url": "https://api.github.com/users/panicbit/orgs", "repos_url": "https://api.github.com/users/panicbit/repos", "events_url": "https://api.github.com/users/panicbit/events{/privacy}", "received_events_url": "https://api.github.com/users/panicbit/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba1d065ffa3606b61201ef69fec3ad0bfc5b2f7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba1d065ffa3606b61201ef69fec3ad0bfc5b2f7b", "html_url": "https://github.com/rust-lang/rust/commit/ba1d065ffa3606b61201ef69fec3ad0bfc5b2f7b"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "5328877a64b7c61d593973af6958d08015e2a213", "filename": "src/libcore/option.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/51b29d618ae949cb31dfacb91959309582ed0715/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51b29d618ae949cb31dfacb91959309582ed0715/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=51b29d618ae949cb31dfacb91959309582ed0715", "patch": "@@ -774,6 +774,25 @@ impl<'a, T: Clone> Option<&'a T> {\n     }\n }\n \n+impl<'a, T: Clone> Option<&'a mut T> {\n+    /// Maps an `Option<&mut T>` to an `Option<T>` by cloning the contents of the\n+    /// option.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// let mut x = 12;\n+    /// let opt_x = Some(&mut x);\n+    /// assert_eq!(opt_x, Some(&mut 12));\n+    /// let cloned = opt_x.cloned();\n+    /// assert_eq!(cloned, Some(12));\n+    /// ```\n+    #[unstable(feature = \"option_ref_mut_cloned\", issue = \"0\")]\n+    pub fn cloned(self) -> Option<T> {\n+        self.map(|t| t.clone())\n+    }\n+}\n+\n impl<T: Default> Option<T> {\n     /// Returns the contained value or a default\n     ///"}]}