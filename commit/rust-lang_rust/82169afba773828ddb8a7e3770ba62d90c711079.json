{"sha": "82169afba773828ddb8a7e3770ba62d90c711079", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyMTY5YWZiYTc3MzgyOGRkYjhhN2UzNzcwYmE2MmQ5MGM3MTEwNzk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-12T22:42:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-12T22:42:12Z"}, "message": "Auto merge of #27698 - arielb1:foreign-type-import, r=alexcrichton\n\nFixes #22968\r\nProbably fixes #27602 (the issue needs a reproduction)\r\n\r\nr? @alexcrichton", "tree": {"sha": "25a6f73c06816e635a6d05de1ee7940c96966ce1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25a6f73c06816e635a6d05de1ee7940c96966ce1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82169afba773828ddb8a7e3770ba62d90c711079", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82169afba773828ddb8a7e3770ba62d90c711079", "html_url": "https://github.com/rust-lang/rust/commit/82169afba773828ddb8a7e3770ba62d90c711079", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82169afba773828ddb8a7e3770ba62d90c711079/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a5c4e77a841754656b9942624edf916defc005c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a5c4e77a841754656b9942624edf916defc005c", "html_url": "https://github.com/rust-lang/rust/commit/6a5c4e77a841754656b9942624edf916defc005c"}, {"sha": "1dd0c058cf1a31e2c25d5bedeaa2bab6eaa73dbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dd0c058cf1a31e2c25d5bedeaa2bab6eaa73dbc", "html_url": "https://github.com/rust-lang/rust/commit/1dd0c058cf1a31e2c25d5bedeaa2bab6eaa73dbc"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "aa2eaa866ff74f4a55e41683108768e9acf59960", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/82169afba773828ddb8a7e3770ba62d90c711079/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82169afba773828ddb8a7e3770ba62d90c711079/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=82169afba773828ddb8a7e3770ba62d90c711079", "patch": "@@ -785,6 +785,11 @@ impl<'a, 'b:'a, 'tcx:'b> GraphBuilder<'a, 'b, 'tcx> {\n               debug!(\"(building reduced graph for external \\\n                       crate) building type {}\", final_ident);\n \n+              let modifiers = match new_parent.kind.get() {\n+                  NormalModuleKind => modifiers,\n+                  _ => modifiers & !DefModifiers::IMPORTABLE\n+              };\n+\n               child_name_bindings.define_type(def, DUMMY_SP, modifiers);\n           }\n           DefStruct(def_id) => {"}, {"sha": "7024c9dad7c11acb37fe157e021eaf19732eb4b5", "filename": "src/test/auxiliary/use_from_trait_xc.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/82169afba773828ddb8a7e3770ba62d90c711079/src%2Ftest%2Fauxiliary%2Fuse_from_trait_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82169afba773828ddb8a7e3770ba62d90c711079/src%2Ftest%2Fauxiliary%2Fuse_from_trait_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fuse_from_trait_xc.rs?ref=82169afba773828ddb8a7e3770ba62d90c711079", "patch": "@@ -8,16 +8,22 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(associated_consts)]\n+\n pub use self::sub::{Bar, Baz};\n \n pub trait Trait {\n     fn foo(&self);\n+    type Assoc;\n+    const CONST: u32;\n }\n \n struct Foo;\n \n impl Foo {\n     pub fn new() {}\n+\n+    pub const C: u32 = 0;\n }\n \n mod sub {"}, {"sha": "4f7e38bd26b0a6e877e4e36e1a824741807e3961", "filename": "src/test/compile-fail/use-from-trait-xc.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/82169afba773828ddb8a7e3770ba62d90c711079/src%2Ftest%2Fcompile-fail%2Fuse-from-trait-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82169afba773828ddb8a7e3770ba62d90c711079/src%2Ftest%2Fcompile-fail%2Fuse-from-trait-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-from-trait-xc.rs?ref=82169afba773828ddb8a7e3770ba62d90c711079", "patch": "@@ -15,9 +15,18 @@ extern crate use_from_trait_xc;\n use use_from_trait_xc::Trait::foo;\n //~^ ERROR `foo` is not directly importable\n \n+use use_from_trait_xc::Trait::Assoc;\n+//~^ ERROR `Assoc` is not directly importable\n+\n+use use_from_trait_xc::Trait::CONST;\n+//~^ ERROR `CONST` is not directly importable\n+\n use use_from_trait_xc::Foo::new;\n //~^ ERROR `new` is not directly importable\n \n+use use_from_trait_xc::Foo::C;\n+//~^ ERROR unresolved import `use_from_trait_xc::Foo::C`\n+\n use use_from_trait_xc::Bar::new as bnew;\n //~^ ERROR `bnew` is not directly importable\n "}, {"sha": "28e933bc7aa0a2d180e874f4e25c173214acfeff", "filename": "src/test/compile-fail/use-from-trait.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/82169afba773828ddb8a7e3770ba62d90c711079/src%2Ftest%2Fcompile-fail%2Fuse-from-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82169afba773828ddb8a7e3770ba62d90c711079/src%2Ftest%2Fcompile-fail%2Fuse-from-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-from-trait.rs?ref=82169afba773828ddb8a7e3770ba62d90c711079", "patch": "@@ -8,19 +8,32 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(associated_consts)]\n+\n use Trait::foo;\n //~^ ERROR `foo` is not directly importable\n+use Trait::Assoc;\n+//~^ ERROR `Assoc` is not directly importable\n+use Trait::C;\n+//~^ ERROR `C` is not directly importable\n+\n use Foo::new;\n //~^ ERROR unresolved import `Foo::new`. Not a module `Foo`\n \n+use Foo::C2;\n+//~^ ERROR unresolved import `Foo::C2`. Not a module `Foo`\n+\n pub trait Trait {\n     fn foo();\n+    type Assoc;\n+    const C: u32;\n }\n \n struct Foo;\n \n impl Foo {\n     fn new() {}\n+    const C2: u32 = 0;\n }\n \n fn main() {}"}]}