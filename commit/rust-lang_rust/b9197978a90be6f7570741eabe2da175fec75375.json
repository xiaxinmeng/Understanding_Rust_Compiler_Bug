{"sha": "b9197978a90be6f7570741eabe2da175fec75375", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5MTk3OTc4YTkwYmU2Zjc1NzA3NDFlYWJlMmRhMTc1ZmVjNzUzNzU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-15T02:39:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-15T02:39:38Z"}, "message": "Auto merge of #86876 - jyn514:56935-target-crate-num, r=petrochenkov\n\nReuse CrateNum for proc-macro crates even when cross-compiling\n\nProc-macros are always compiled for the host, so this should be the same\nin every way as recompiling the crate.\n\nI am not sure why the previous code special-cased the target, since the\ncompiler properly gives an error when trying to load a crate for a\ndifferent host:\n\n```\nerror[E0461]: couldn't find crate `dependency` with expected target triple x86_64-unknown-linux-gnu\n  --> /home/joshua/rustc4/src/test/ui/cfg-dependent.rs:8:2\n   |\nLL |     dependency::is_64();\n   |     ^^^^^^^^^^\n   |\n   = note: the following crate versions were found:\n           crate `dependency`, target triple i686-unknown-linux-gnu: /home/joshua/rustc4/build/x86_64-unknown-linux-gnu/test/ui/cfg-dependent/auxiliary/libdependency.so\n```\n\nI think another possible fix is to remove the check altogether. But I'm\nnot sure, and this fix works, so I'm not making the larger change here.\n\nFixes https://github.com/rust-lang/rust/issues/56935.\n\nr? `@petrochenkov` cc `@alexcrichton`", "tree": {"sha": "9e9466a496a1b5f38bf38b0201ded9ec9d586b07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e9466a496a1b5f38bf38b0201ded9ec9d586b07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9197978a90be6f7570741eabe2da175fec75375", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9197978a90be6f7570741eabe2da175fec75375", "html_url": "https://github.com/rust-lang/rust/commit/b9197978a90be6f7570741eabe2da175fec75375", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9197978a90be6f7570741eabe2da175fec75375/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c107816f7b351ea5b5043cdbec52901a77526de", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c107816f7b351ea5b5043cdbec52901a77526de", "html_url": "https://github.com/rust-lang/rust/commit/9c107816f7b351ea5b5043cdbec52901a77526de"}, {"sha": "68b959827bfba1dd942c84d6ccbcc32e7b6d98a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/68b959827bfba1dd942c84d6ccbcc32e7b6d98a1", "html_url": "https://github.com/rust-lang/rust/commit/68b959827bfba1dd942c84d6ccbcc32e7b6d98a1"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "70b3efa1d169092652bc126815595d8e3c7a9733", "filename": "compiler/rustc_metadata/src/creader.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b9197978a90be6f7570741eabe2da175fec75375/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9197978a90be6f7570741eabe2da175fec75375/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs?ref=b9197978a90be6f7570741eabe2da175fec75375", "patch": "@@ -599,7 +599,11 @@ impl<'a> CrateLoader<'a> {\n         // don't want to match a host crate against an equivalent target one\n         // already loaded.\n         let root = library.metadata.get_root();\n-        Ok(Some(if locator.triple == self.sess.opts.target_triple {\n+        // FIXME: why is this condition necessary? It was adding in #33625 but I\n+        // don't know why and the original author doesn't remember ...\n+        let can_reuse_cratenum =\n+            locator.triple == self.sess.opts.target_triple || locator.is_proc_macro == Some(true);\n+        Ok(Some(if can_reuse_cratenum {\n             let mut result = LoadResult::Loaded(library);\n             self.cstore.iter_crate_data(|cnum, data| {\n                 if data.name() == root.name() && root.hash() == data.hash() {"}, {"sha": "52631de575761e4a636f6f7d607e8cefa5e6a643", "filename": "src/test/ui/crate-loading/auxiliary/proc-macro.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b9197978a90be6f7570741eabe2da175fec75375/src%2Ftest%2Fui%2Fcrate-loading%2Fauxiliary%2Fproc-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9197978a90be6f7570741eabe2da175fec75375/src%2Ftest%2Fui%2Fcrate-loading%2Fauxiliary%2Fproc-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcrate-loading%2Fauxiliary%2Fproc-macro.rs?ref=b9197978a90be6f7570741eabe2da175fec75375", "patch": "@@ -0,0 +1,12 @@\n+// force-host\n+// no-prefer-dynamic\n+#![crate_name = \"reproduction\"]\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+use proc_macro::TokenStream;\n+\n+#[proc_macro]\n+pub fn mac(input: TokenStream) -> TokenStream {\n+    input\n+}"}, {"sha": "c1f4331438e5762dcdf84d17481ab2a9b979d8da", "filename": "src/test/ui/crate-loading/cross-compiled-proc-macro.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b9197978a90be6f7570741eabe2da175fec75375/src%2Ftest%2Fui%2Fcrate-loading%2Fcross-compiled-proc-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9197978a90be6f7570741eabe2da175fec75375/src%2Ftest%2Fui%2Fcrate-loading%2Fcross-compiled-proc-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcrate-loading%2Fcross-compiled-proc-macro.rs?ref=b9197978a90be6f7570741eabe2da175fec75375", "patch": "@@ -0,0 +1,8 @@\n+// edition:2018\n+// compile-flags:--extern reproduction\n+// aux-build:proc-macro.rs\n+// check-pass\n+\n+reproduction::mac!();\n+\n+fn main() {}"}]}