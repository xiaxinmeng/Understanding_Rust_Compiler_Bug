{"sha": "1055cf5b9f0737a42bb9a58d9f6064c5bdf4926a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwNTVjZjViOWYwNzM3YTQyYmI5YTU4ZDlmNjA2NGM1YmRmNDkyNmE=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-08-20T05:28:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-20T05:28:59Z"}, "message": "Merge pull request #4416 from SimonSapin/plugin\n\nImport rustc_plugin from its new location", "tree": {"sha": "a8638938cad0153bad1ea687e427a0547619ddb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8638938cad0153bad1ea687e427a0547619ddb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1055cf5b9f0737a42bb9a58d9f6064c5bdf4926a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdW4UbCRBK7hj4Ov3rIwAAdHIIAGUDYRBgF4OH+B7D/cEyOj4J\n4cxgi2VQnVbZPYGSlyTr2mtcor7nVbxQcdyEGB40ogyUeSb3vHQfjByeMPOxL/ro\nZwRcYfJqnC+ppt/ad6os7wFhr5/s9cwTtZBGMB3rgM3bmrv1Z9FawRm6WEj/KhDj\nyithbvClQ8kU4kVReCrnEADL85g2FfCyOPCju4GHeLvRmiUEosigXz04DIyeSOwf\n/vmbqeEMuTl15pS8oNbOvdzlJfInmpq/qfRJnR5j87peHeqNPZM/2W5DV/C7OuYc\n8v09UHFGVWpN7u2kr9mD8rTKPpA0GVxWdgo1xORbXJnMVi7wA54FgnCVOBaEV+k=\n=pXBK\n-----END PGP SIGNATURE-----\n", "payload": "tree a8638938cad0153bad1ea687e427a0547619ddb4\nparent 7810652310a1e8d6cea6098b1b92e793e577d587\nparent 08d8ffc6a970a4e0886b36b332cdc4f6622e81f1\nauthor Philipp Hansch <dev@phansch.net> 1566278939 +0200\ncommitter GitHub <noreply@github.com> 1566278939 +0200\n\nMerge pull request #4416 from SimonSapin/plugin\n\nImport rustc_plugin from its new location"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1055cf5b9f0737a42bb9a58d9f6064c5bdf4926a", "html_url": "https://github.com/rust-lang/rust/commit/1055cf5b9f0737a42bb9a58d9f6064c5bdf4926a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1055cf5b9f0737a42bb9a58d9f6064c5bdf4926a/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7810652310a1e8d6cea6098b1b92e793e577d587", "url": "https://api.github.com/repos/rust-lang/rust/commits/7810652310a1e8d6cea6098b1b92e793e577d587", "html_url": "https://github.com/rust-lang/rust/commit/7810652310a1e8d6cea6098b1b92e793e577d587"}, {"sha": "08d8ffc6a970a4e0886b36b332cdc4f6622e81f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/08d8ffc6a970a4e0886b36b332cdc4f6622e81f1", "html_url": "https://github.com/rust-lang/rust/commit/08d8ffc6a970a4e0886b36b332cdc4f6622e81f1"}], "stats": {"total": 28, "additions": 12, "deletions": 16}, "files": [{"sha": "2a85197068f5083d7d7aa5fb8187d360a58867c7", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1055cf5b9f0737a42bb9a58d9f6064c5bdf4926a/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/1055cf5b9f0737a42bb9a58d9f6064c5bdf4926a/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=1055cf5b9f0737a42bb9a58d9f6064c5bdf4926a", "patch": "@@ -90,7 +90,7 @@ Clippy is a [rustc compiler plugin][compiler_plugin]. The main entry point is at\n pub mod else_if_without_else;\n // ...\n \n-pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n+pub fn register_plugins(reg: &mut rustc_driver::plugin::Registry) {\n     // ...\n     reg.register_early_lint_pass(box else_if_without_else::ElseIfWithoutElse);\n     // ...\n@@ -103,7 +103,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n }\n ```\n \n-The [`rustc_plugin::PluginRegistry`][plugin_registry] provides two methods to register lints: [register_early_lint_pass][reg_early_lint_pass] and [register_late_lint_pass][reg_late_lint_pass].\n+The [`plugin::PluginRegistry`][plugin_registry] provides two methods to register lints: [register_early_lint_pass][reg_early_lint_pass] and [register_late_lint_pass][reg_late_lint_pass].\n Both take an object that implements an [`EarlyLintPass`][early_lint_pass] or [`LateLintPass`][late_lint_pass] respectively. This is done in every single lint.\n It's worth noting that the majority of `clippy_lints/src/lib.rs` is autogenerated by `util/dev update_lints` and you don't have to add anything by hand. When you are writing your own lint, you can use that script to save you some time.\n \n@@ -193,9 +193,9 @@ or the [MIT](http://opensource.org/licenses/MIT) license.\n [lint_crate_entry]: https://github.com/rust-lang/rust-clippy/blob/c5b39a5917ffc0f1349b6e414fa3b874fdcf8429/clippy_lints/src/lib.rs\n [else_if_without_else]: https://github.com/rust-lang/rust-clippy/blob/c5b39a5917ffc0f1349b6e414fa3b874fdcf8429/clippy_lints/src/else_if_without_else.rs\n [compiler_plugin]: https://doc.rust-lang.org/unstable-book/language-features/plugin.html#lint-plugins\n-[plugin_registry]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_plugin/registry/struct.Registry.html\n-[reg_early_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_plugin/registry/struct.Registry.html#method.register_early_lint_pass\n-[reg_late_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_plugin/registry/struct.Registry.html#method.register_late_lint_pass\n+[plugin_registry]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_plugin_impl/registry/struct.Registry.html\n+[reg_early_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_plugin_impl/registry/struct.Registry.html#method.register_early_lint_pass\n+[reg_late_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_plugin_impl/registry/struct.Registry.html#method.register_late_lint_pass\n [early_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc/lint/trait.EarlyLintPass.html\n [late_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc/lint/trait.LateLintPass.html\n [toolstate_commit_history]: https://github.com/rust-lang-nursery/rust-toolstate/commits/master"}, {"sha": "0ae93c6147ab78d7b2d9caf4dd1ea8326a1268f8", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1055cf5b9f0737a42bb9a58d9f6064c5bdf4926a/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1055cf5b9f0737a42bb9a58d9f6064c5bdf4926a/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=1055cf5b9f0737a42bb9a58d9f6064c5bdf4926a", "patch": "@@ -23,12 +23,12 @@ extern crate rustc;\n #[allow(unused_extern_crates)]\n extern crate rustc_data_structures;\n #[allow(unused_extern_crates)]\n+extern crate rustc_driver;\n+#[allow(unused_extern_crates)]\n extern crate rustc_errors;\n #[allow(unused_extern_crates)]\n extern crate rustc_mir;\n #[allow(unused_extern_crates)]\n-extern crate rustc_plugin;\n-#[allow(unused_extern_crates)]\n extern crate rustc_target;\n #[allow(unused_extern_crates)]\n extern crate rustc_typeck;\n@@ -320,7 +320,7 @@ pub fn register_pre_expansion_lints(\n }\n \n #[doc(hidden)]\n-pub fn read_conf(reg: &rustc_plugin::Registry<'_>) -> Conf {\n+pub fn read_conf(reg: &rustc_driver::plugin::Registry<'_>) -> Conf {\n     match utils::conf::file_from_args(reg.args()) {\n         Ok(file_name) => {\n             // if the user specified a file, it must exist, otherwise default to `clippy.toml` but\n@@ -382,7 +382,7 @@ pub fn read_conf(reg: &rustc_plugin::Registry<'_>) -> Conf {\n /// Used in `./src/driver.rs`.\n #[allow(clippy::too_many_lines)]\n #[rustfmt::skip]\n-pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n+pub fn register_plugins(reg: &mut rustc_driver::plugin::Registry<'_>, conf: &Conf) {\n     let mut store = reg.sess.lint_store.borrow_mut();\n     register_removed_non_tool_lints(&mut store);\n "}, {"sha": "92f83f1a29e316e02992984cde1b0e71ee04e8be", "filename": "src/driver.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1055cf5b9f0737a42bb9a58d9f6064c5bdf4926a/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1055cf5b9f0737a42bb9a58d9f6064c5bdf4926a/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=1055cf5b9f0737a42bb9a58d9f6064c5bdf4926a", "patch": "@@ -7,8 +7,6 @@\n extern crate rustc_driver;\n #[allow(unused_extern_crates)]\n extern crate rustc_interface;\n-#[allow(unused_extern_crates)]\n-extern crate rustc_plugin;\n \n use rustc_interface::interface;\n use rustc_tools_util::*;\n@@ -65,7 +63,7 @@ struct ClippyCallbacks;\n impl rustc_driver::Callbacks for ClippyCallbacks {\n     fn after_parsing(&mut self, compiler: &interface::Compiler) -> rustc_driver::Compilation {\n         let sess = compiler.session();\n-        let mut registry = rustc_plugin::registry::Registry::new(\n+        let mut registry = rustc_driver::plugin::registry::Registry::new(\n             sess,\n             compiler\n                 .parse()\n@@ -81,7 +79,7 @@ impl rustc_driver::Callbacks for ClippyCallbacks {\n         let conf = clippy_lints::read_conf(&registry);\n         clippy_lints::register_plugins(&mut registry, &conf);\n \n-        let rustc_plugin::registry::Registry {\n+        let rustc_driver::plugin::registry::Registry {\n             early_lint_passes,\n             late_lint_passes,\n             lint_groups,"}, {"sha": "76e1c711656bba447e8bcaa4a15ca35fc6defee1", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1055cf5b9f0737a42bb9a58d9f6064c5bdf4926a/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1055cf5b9f0737a42bb9a58d9f6064c5bdf4926a/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=1055cf5b9f0737a42bb9a58d9f6064c5bdf4926a", "patch": "@@ -7,9 +7,7 @@\n // (Currently there is no way to opt into sysroot crates without `extern crate`.)\n #[allow(unused_extern_crates)]\n extern crate rustc_driver;\n-#[allow(unused_extern_crates)]\n-extern crate rustc_plugin;\n-use self::rustc_plugin::Registry;\n+use self::rustc_driver::plugin::Registry;\n \n #[plugin_registrar]\n pub fn plugin_registrar(reg: &mut Registry<'_>) {"}]}