{"sha": "048f37254c1bb029f23ffee5658987ba5126528f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0OGYzNzI1NGMxYmIwMjlmMjNmZmVlNTY1ODk4N2JhNTEyNjUyOGY=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2016-05-30T09:12:01Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2016-05-30T09:12:01Z"}, "message": "Use Path::is_dir() in fs::read_dir()'s example.\n\nBasically reverts #25508. The `is_dir()` function has been stable since 1.5.0.", "tree": {"sha": "7fee4cf7b6aedcf376b41dd0caaeb66e399660e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fee4cf7b6aedcf376b41dd0caaeb66e399660e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/048f37254c1bb029f23ffee5658987ba5126528f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/048f37254c1bb029f23ffee5658987ba5126528f", "html_url": "https://github.com/rust-lang/rust/commit/048f37254c1bb029f23ffee5658987ba5126528f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/048f37254c1bb029f23ffee5658987ba5126528f/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf9c60c9a6d27762594c1c5c067194f4c9109f67", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf9c60c9a6d27762594c1c5c067194f4c9109f67", "html_url": "https://github.com/rust-lang/rust/commit/bf9c60c9a6d27762594c1c5c067194f4c9109f67"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "734f774043d6dd4bdcc194424adb9b42049a1b46", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/048f37254c1bb029f23ffee5658987ba5126528f/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/048f37254c1bb029f23ffee5658987ba5126528f/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=048f37254c1bb029f23ffee5658987ba5126528f", "patch": "@@ -1338,10 +1338,10 @@ pub fn remove_dir_all<P: AsRef<Path>>(path: P) -> io::Result<()> {\n ///\n /// // one possible implementation of walking a directory only visiting files\n /// fn visit_dirs(dir: &Path, cb: &Fn(&DirEntry)) -> io::Result<()> {\n-///     if try!(fs::metadata(dir)).is_dir() {\n+///     if dir.is_dir() {\n ///         for entry in try!(fs::read_dir(dir)) {\n ///             let entry = try!(entry);\n-///             if try!(fs::metadata(entry.path())).is_dir() {\n+///             if try!(entry.file_type()).is_dir() {\n ///                 try!(visit_dirs(&entry.path(), cb));\n ///             } else {\n ///                 cb(&entry);"}]}