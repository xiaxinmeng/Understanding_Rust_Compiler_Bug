{"sha": "d2d62de841404e598c77dd46bdff79a0545e619f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyZDYyZGU4NDE0MDRlNTk4Yzc3ZGQ0NmJkZmY3OWEwNTQ1ZTYxOWY=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-11-25T12:56:24Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-11-25T12:56:24Z"}, "message": "Rustup to rust-lang/rust#64856", "tree": {"sha": "44fd330931f10d1b52533bb3f35c2af280cd9c51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44fd330931f10d1b52533bb3f35c2af280cd9c51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2d62de841404e598c77dd46bdff79a0545e619f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl3bz3gACgkQaTCGhp1Q\nZjcRRQ//f+z3ZvC/pmHIyYPFM9aiIvKdS7+y5QCwl6WwfrNqoRbcUmgn00Wogs6K\nyaF86ah+gRDEtBUXJEFkgCZUJA4kpIWhErYIbVu7Ar3hr0vFGlNOu8bjiyyyYS37\nzJOtrRGRqb++oSZufgF8o79KMGo29n1ea4ubLIWc5AX0DCE3SJGbgdkql428C62O\nARSGarSM+A060OejdNTFafwu/PVaHw41S0oeGlnI5iPgFFqxdnvfvAXxlpLgbi5g\njl8bwa1WamFS64uo7WhH11P0hFpmdueKgmR7m/2GMpkqaAs5wrceNlxKJi/Fbrp5\ns5qpZTp74L105YQay2zSgz39Ng8pYRoCKxWs9vY5QQUuXupA1oe11dvgyhFJC/FZ\ncfzxDs02Mpimbx9aqgY3pB6rieqFkYk0Oxmt6QYs+EdmaEXoeEHRTJJ5vzLdTTkJ\ncI8nx6x1BW0XmZCW5HgEhewDqYEqnW1Z0EwWeXsrzFJCzjp2iiXj/Yi3/8Pf8rv1\nW5DsyORONgcrfFGGE512oVXk3OOivtHR1wLC2PiyUNej3c710yQP5MaEVl4vQ9Rr\nPf1Nh6xu1SfEnTnsA0PogDnbkBAAIKXM5K95E5Io3dx7CBwxTGscpAQ/tazaEFZs\nXhE2ycSCJsN1D6vgR/mX7Oq3k1vYcTdv63YEnZZoL8JHm2dgigg=\n=+YVO\n-----END PGP SIGNATURE-----", "payload": "tree 44fd330931f10d1b52533bb3f35c2af280cd9c51\nparent d43c424145c6e2480b224da03f5df3e776a3079a\nauthor flip1995 <hello@philkrones.com> 1574686584 +0100\ncommitter flip1995 <hello@philkrones.com> 1574686584 +0100\n\nRustup to rust-lang/rust#64856\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2d62de841404e598c77dd46bdff79a0545e619f", "html_url": "https://github.com/rust-lang/rust/commit/d2d62de841404e598c77dd46bdff79a0545e619f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2d62de841404e598c77dd46bdff79a0545e619f/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d43c424145c6e2480b224da03f5df3e776a3079a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d43c424145c6e2480b224da03f5df3e776a3079a", "html_url": "https://github.com/rust-lang/rust/commit/d43c424145c6e2480b224da03f5df3e776a3079a"}], "stats": {"total": 53, "additions": 26, "deletions": 27}, "files": [{"sha": "d1d5b962bdd9f01bbb672f79bf6f6ac097a5c7a8", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 24, "deletions": 19, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/d2d62de841404e598c77dd46bdff79a0545e619f/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2d62de841404e598c77dd46bdff79a0545e619f/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=d2d62de841404e598c77dd46bdff79a0545e619f", "patch": "@@ -1610,30 +1610,35 @@ fn lint_expect_fun_call(cx: &LateContext<'_, '_>, expr: &hir::Expr, method_span:\n     let mut applicability = Applicability::MachineApplicable;\n \n     //Special handling for `format!` as arg_root\n-    if let hir::ExprKind::Call(ref inner_fun, ref inner_args) = arg_root.kind {\n-        if is_expn_of(inner_fun.span, \"format\").is_some() && inner_args.len() == 1 {\n-            if let hir::ExprKind::Call(_, format_args) = &inner_args[0].kind {\n-                let fmt_spec = &format_args[0];\n-                let fmt_args = &format_args[1];\n+    if_chain! {\n+        if let hir::ExprKind::Block(block, None) = &arg_root.kind;\n+        if block.stmts.len() == 1;\n+        if let hir::StmtKind::Local(local) = &block.stmts[0].kind;\n+        if let Some(arg_root) = &local.init;\n+        if let hir::ExprKind::Call(ref inner_fun, ref inner_args) = arg_root.kind;\n+        if is_expn_of(inner_fun.span, \"format\").is_some() && inner_args.len() == 1;\n+        if let hir::ExprKind::Call(_, format_args) = &inner_args[0].kind;\n+        then {\n+            let fmt_spec = &format_args[0];\n+            let fmt_args = &format_args[1];\n \n-                let mut args = vec![snippet(cx, fmt_spec.span, \"..\").into_owned()];\n+            let mut args = vec![snippet(cx, fmt_spec.span, \"..\").into_owned()];\n \n-                args.extend(generate_format_arg_snippet(cx, fmt_args, &mut applicability));\n+            args.extend(generate_format_arg_snippet(cx, fmt_args, &mut applicability));\n \n-                let sugg = args.join(\", \");\n+            let sugg = args.join(\", \");\n \n-                span_lint_and_sugg(\n-                    cx,\n-                    EXPECT_FUN_CALL,\n-                    span_replace_word,\n-                    &format!(\"use of `{}` followed by a function call\", name),\n-                    \"try this\",\n-                    format!(\"unwrap_or_else({} panic!({}))\", closure_args, sugg),\n-                    applicability,\n-                );\n+            span_lint_and_sugg(\n+                cx,\n+                EXPECT_FUN_CALL,\n+                span_replace_word,\n+                &format!(\"use of `{}` followed by a function call\", name),\n+                \"try this\",\n+                format!(\"unwrap_or_else({} panic!({}))\", closure_args, sugg),\n+                applicability,\n+            );\n \n-                return;\n-            }\n+            return;\n         }\n     }\n "}, {"sha": "cf2a42fa485d2670cd59b8b9e84aa2a8fcd7f2f7", "filename": "tests/ui/or_fun_call.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2d62de841404e598c77dd46bdff79a0545e619f/tests%2Fui%2For_fun_call.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/d2d62de841404e598c77dd46bdff79a0545e619f/tests%2Fui%2For_fun_call.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For_fun_call.fixed?ref=d2d62de841404e598c77dd46bdff79a0545e619f", "patch": "@@ -71,7 +71,7 @@ fn or_fun_call() {\n \n     let opt = Some(1);\n     let hello = \"Hello\";\n-    let _ = opt.ok_or_else(|| format!(\"{} world.\", hello));\n+    let _ = opt.ok_or(format!(\"{} world.\", hello));\n }\n \n struct Foo(u8);"}, {"sha": "cb92892b8e10867143120b3648adc89323f14af5", "filename": "tests/ui/or_fun_call.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d2d62de841404e598c77dd46bdff79a0545e619f/tests%2Fui%2For_fun_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d2d62de841404e598c77dd46bdff79a0545e619f/tests%2Fui%2For_fun_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For_fun_call.stderr?ref=d2d62de841404e598c77dd46bdff79a0545e619f", "patch": "@@ -72,17 +72,11 @@ error: use of `unwrap_or` followed by a function call\n LL |     let _ = stringy.unwrap_or(\"\".to_owned());\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| \"\".to_owned())`\n \n-error: use of `ok_or` followed by a function call\n-  --> $DIR/or_fun_call.rs:74:17\n-   |\n-LL |     let _ = opt.ok_or(format!(\"{} world.\", hello));\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `ok_or_else(|| format!(\"{} world.\", hello))`\n-\n error: use of `or` followed by a function call\n   --> $DIR/or_fun_call.rs:95:35\n    |\n LL |     let _ = Some(\"a\".to_string()).or(Some(\"b\".to_string()));\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `or_else(|| Some(\"b\".to_string()))`\n \n-error: aborting due to 14 previous errors\n+error: aborting due to 13 previous errors\n "}]}