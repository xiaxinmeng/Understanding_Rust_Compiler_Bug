{"sha": "0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhM2QwOGUyZTNmYTQ0N2RlNzBlNmE3ZDhjMDdiYzExY2YyM2Y1YzQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-31T15:11:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-31T15:11:14Z"}, "message": "Merge #7106\n\n7106: Split textDocument/formatting TextEdit with diff r=matklad a=Jesse-Bakker\n\n#7044 \n\nCo-authored-by: Jesse Bakker <github@jessebakker.com>", "tree": {"sha": "dc3d5dfc6884f8cbbc395de996b0fb5152c56335", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc3d5dfc6884f8cbbc395de996b0fb5152c56335"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf7eoSCRBK7hj4Ov3rIwAAdHIIAK/19u69DYgbCM1vwUjhXFSf\nIlsJVVRwn6nExJMT2o3xm0LmIXWIMrRs59N2xf+3COJSmQRB1AJl//dv/jBZu+lK\npOaxJTYSGN4h+td+wXZ5q60AvQBXyLp+bJK/VQPlKIYZCrsBQ3J4atsPpiKN1ICJ\nyPPdxgVi1+f9cZXpXXg0cqWEBWfAEbN0lPB0t8TmY+0qp85+sfH71jZ2slIRCQwN\n9Ury8UAR/JfPnpXQ6QG7Z5K4dS5CkaJadAdPOZHkR8kaTHRgA6DoX50lPtCNGzma\n53Uz1a1QodW+HEFwDtDCInXlXuHLUSn9MQR9Yqc6CHNB1G6Yiwqv0SDzl8YZBZQ=\n=0xbG\n-----END PGP SIGNATURE-----\n", "payload": "tree dc3d5dfc6884f8cbbc395de996b0fb5152c56335\nparent fda022592ba9c773039037af12294821d772f2b1\nparent f355a6d8319408a3cc349be399d9e69985737c42\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1609427474 +0000\ncommitter GitHub <noreply@github.com> 1609427474 +0000\n\nMerge #7106\n\n7106: Split textDocument/formatting TextEdit with diff r=matklad a=Jesse-Bakker\n\n#7044 \n\nCo-authored-by: Jesse Bakker <github@jessebakker.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4", "html_url": "https://github.com/rust-lang/rust/commit/0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fda022592ba9c773039037af12294821d772f2b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/fda022592ba9c773039037af12294821d772f2b1", "html_url": "https://github.com/rust-lang/rust/commit/fda022592ba9c773039037af12294821d772f2b1"}, {"sha": "f355a6d8319408a3cc349be399d9e69985737c42", "url": "https://api.github.com/repos/rust-lang/rust/commits/f355a6d8319408a3cc349be399d9e69985737c42", "html_url": "https://github.com/rust-lang/rust/commit/f355a6d8319408a3cc349be399d9e69985737c42"}], "stats": {"total": 105, "additions": 82, "deletions": 23}, "files": [{"sha": "1aa0c072d4547b2aa1d305087a3fec2842595b03", "filename": "Cargo.lock", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4", "patch": "@@ -348,6 +348,12 @@ version = \"2.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"524cbf6897b527295dff137cec09ecf3a05f4fddffd7dfcd1585403449e74198\"\n \n+[[package]]\n+name = \"dissimilar\"\n+version = \"1.0.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"fc4b29f4b9bb94bf267d57269fd0706d343a160937108e9619fe380645428abb\"\n+\n [[package]]\n name = \"drop_bomb\"\n version = \"0.1.5\"\n@@ -1343,6 +1349,7 @@ dependencies = [\n  \"anyhow\",\n  \"cfg\",\n  \"crossbeam-channel 0.5.0\",\n+ \"dissimilar\",\n  \"env_logger\",\n  \"expect-test\",\n  \"flycheck\","}, {"sha": "0a63593fb471603534c060cfb5752de45fe4a0cb", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4", "patch": "@@ -17,6 +17,7 @@ path = \"src/bin/main.rs\"\n [dependencies]\n anyhow = \"1.0.26\"\n crossbeam-channel = \"0.5.0\"\n+dissimilar = \"1.0.2\"\n env_logger = { version = \"0.8.1\", default-features = false }\n itertools = \"0.10.0\"\n jod-thread = \"0.1.0\""}, {"sha": "231be58077834b53d44f7fcfd87d19f01c26edeb", "filename": "crates/rust-analyzer/src/diff.rs", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4/crates%2Frust-analyzer%2Fsrc%2Fdiff.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4/crates%2Frust-analyzer%2Fsrc%2Fdiff.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiff.rs?ref=0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4", "patch": "@@ -0,0 +1,53 @@\n+//! Generate minimal `TextEdit`s from different text versions\n+use dissimilar::Chunk;\n+use ide::{TextEdit, TextRange, TextSize};\n+\n+pub(crate) fn diff(left: &str, right: &str) -> TextEdit {\n+    let chunks = dissimilar::diff(left, right);\n+    textedit_from_chunks(chunks)\n+}\n+\n+fn textedit_from_chunks(chunks: Vec<dissimilar::Chunk>) -> TextEdit {\n+    let mut builder = TextEdit::builder();\n+    let mut pos = TextSize::default();\n+\n+    let mut chunks = chunks.into_iter().peekable();\n+    while let Some(chunk) = chunks.next() {\n+        if let (Chunk::Delete(deleted), Some(&Chunk::Insert(inserted))) = (chunk, chunks.peek()) {\n+            chunks.next().unwrap();\n+            let deleted_len = TextSize::of(deleted);\n+            builder.replace(TextRange::at(pos, deleted_len), inserted.into());\n+            pos += deleted_len;\n+            continue;\n+        }\n+\n+        match chunk {\n+            Chunk::Equal(text) => {\n+                pos += TextSize::of(text);\n+            }\n+            Chunk::Delete(deleted) => {\n+                let deleted_len = TextSize::of(deleted);\n+                builder.delete(TextRange::at(pos, deleted_len));\n+                pos += deleted_len;\n+            }\n+            Chunk::Insert(inserted) => {\n+                builder.insert(pos, inserted.into());\n+            }\n+        }\n+    }\n+    builder.finish()\n+}\n+\n+#[cfg(test)]\n+mod tests {\n+    use super::*;\n+\n+    #[test]\n+    fn diff_applies() {\n+        let mut original = String::from(\"fn foo(a:u32){\\n}\");\n+        let result = \"fn foo(a: u32) {}\";\n+        let edit = diff(&original, result);\n+        edit.apply(&mut original);\n+        assert_eq!(original, result);\n+    }\n+}"}, {"sha": "948cfc17ce94f62b2cc626a8f8f6df3b5df40741", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4", "patch": "@@ -31,6 +31,7 @@ use serde_json::to_value;\n use stdx::{format_to, split_once};\n use syntax::{algo, ast, AstNode, TextRange, TextSize};\n \n+use crate::diff::diff;\n use crate::{\n     cargo_target_spec::CargoTargetSpec,\n     config::RustfmtConfig,\n@@ -840,7 +841,7 @@ pub(crate) fn handle_formatting(\n     let crate_ids = snap.analysis.crate_for(file_id)?;\n \n     let file_line_index = snap.analysis.file_line_index(file_id)?;\n-    let end_position = to_proto::position(&file_line_index, TextSize::of(file.as_str()));\n+    let file_line_endings = snap.file_line_endings(file_id);\n \n     let mut rustfmt = match &snap.config.rustfmt {\n         RustfmtConfig::Rustfmt { extra_args } => {\n@@ -902,10 +903,11 @@ pub(crate) fn handle_formatting(\n         // The document is already formatted correctly -- no edits needed.\n         Ok(None)\n     } else {\n-        Ok(Some(vec![lsp_types::TextEdit {\n-            range: Range::new(Position::new(0, 0), end_position),\n-            new_text: captured_stdout,\n-        }]))\n+        Ok(Some(to_proto::text_edit_vec(\n+            &file_line_index,\n+            file_line_endings,\n+            diff(&file, &captured_stdout),\n+        )))\n     }\n }\n "}, {"sha": "c9494e3005bac9d7ab7fbe16c80b0653bd6abc28", "filename": "crates/rust-analyzer/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4/crates%2Frust-analyzer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4/crates%2Frust-analyzer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flib.rs?ref=0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4", "patch": "@@ -34,6 +34,7 @@ mod request_metrics;\n mod lsp_utils;\n mod thread_pool;\n mod document;\n+mod diff;\n pub mod lsp_ext;\n pub mod config;\n "}, {"sha": "84db0856d48ce4218c5bc120801182ed8020f42b", "filename": "crates/rust-analyzer/tests/rust-analyzer/main.rs", "status": "modified", "additions": 13, "deletions": 18, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fmain.rs?ref=0a3d08e2e3fa447de70e6a7d8c07bc11cf23f5c4", "patch": "@@ -190,15 +190,10 @@ pub use std::collections::HashMap;\n         },\n         json!([\n             {\n-                \"newText\": r#\"mod bar;\n-\n-fn main() {}\n-\n-pub use std::collections::HashMap;\n-\"#,\n+                \"newText\": \"\",\n                 \"range\": {\n-                    \"end\": { \"character\": 0, \"line\": 6 },\n-                    \"start\": { \"character\": 0, \"line\": 0 }\n+                    \"end\": { \"character\": 0, \"line\": 3 },\n+                    \"start\": { \"character\": 11, \"line\": 2 }\n                 }\n             }\n         ]),\n@@ -248,17 +243,17 @@ pub use std::collections::HashMap;\n         },\n         json!([\n             {\n-                \"newText\": r#\"mod bar;\n-\n-async fn test() {}\n-\n-fn main() {}\n-\n-pub use std::collections::HashMap;\n-\"#,\n+                \"newText\": \"\",\n+                \"range\": {\n+                    \"end\": { \"character\": 0, \"line\": 3 },\n+                    \"start\": { \"character\": 17, \"line\": 2 }\n+                }\n+            },\n+            {\n+                \"newText\": \"\",\n                 \"range\": {\n-                    \"end\": { \"character\": 0, \"line\": 9 },\n-                    \"start\": { \"character\": 0, \"line\": 0 }\n+                    \"end\": { \"character\": 0, \"line\": 6 },\n+                    \"start\": { \"character\": 11, \"line\": 5 }\n                 }\n             }\n         ]),"}]}