{"sha": "c36b9ddcb40b81642cef2d1dd17bcd45f54c70da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzNmI5ZGRjYjQwYjgxNjQyY2VmMmQxZGQxN2JjZDQ1ZjU0YzcwZGE=", "commit": {"author": {"name": "Lukas Kalbertodt", "email": "lukas.kalbertodt@gmail.com", "date": "2019-10-21T11:47:02Z"}, "committer": {"name": "Lukas Kalbertodt", "email": "lukas.kalbertodt@gmail.com", "date": "2019-10-24T13:46:44Z"}, "message": "Add UI tests for `array::IntoIter` impls\n\nThis it to make sure traits are implemented for arrays with length 32\nand below, while they are not implemented for >= 33.", "tree": {"sha": "ab722d8ac03058358448630831b3b7c1a39d542e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab722d8ac03058358448630831b3b7c1a39d542e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c36b9ddcb40b81642cef2d1dd17bcd45f54c70da", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENwctvZ5TgcKYXim8PLr0FT+BhicFAl2xq0UACgkQPLr0FT+B\nhiebtBAAm6b923qvmAtq2cnmQjhi9yCTq6M+CByEZr4b1HJ9BTZ4+/uf0hGHsBmZ\nfNDFsyTtqJoK94/TZ8xV5HchnF7qqXC5qNCv8mP1kWBocWazLHLrEVQXav2skqtu\nCbq8d17uAMNamZ8SED8exl1DWdHaU74N2kskN9JsAolEoYIH3DO2bEhx5B0X20ng\neI69wIzCrfbV0IMeh59FCChRqJ7LyWJg1ObdYWLdbQ1RKeh8uW9StKDk3Ti1twH3\neCgEXn3z6lhwc7MimRmyDXFSQJhsjtKSYtSBpeHoxW6qihyjc23WvblBdOQp26cx\ndxi24P+tsgm3u0Lar9aNf39o2HBPP8fgzMYk2HQ3bJzehrrtYILE56Q+MaDBnbyY\nEWiJ+BVz7FmbWm6G70SjvgV6o4JtZw1vYMRdyNaRb/EOAEaA5ffed/Is8+4VohgL\nds7WW/92h6b1BXi+kJhT7Kj55pfbJu9GtMz0O/vEr/n6N5FyRfQiYrJszDKSjCeT\narP4/cOWofVMqp/5IwLZwPhb8gD4GL7C1pNHNh5m7aR817XRAt2NDKpEuvY7XcB7\niRd/27knI457b9t7kZGs+ba1Cq2nQgIT2wGsx7wrW9DeHf4+mbZfIqqb6vcIE4Ya\nnHEINMwqpvYWU8rVtqdT3miVi7gw8eNWs6xrARVQga0gLCMPpVI=\n=l0ua\n-----END PGP SIGNATURE-----", "payload": "tree ab722d8ac03058358448630831b3b7c1a39d542e\nparent 5334a307d551e5affaef253f1c83141495db46f0\nauthor Lukas Kalbertodt <lukas.kalbertodt@gmail.com> 1571658422 +0200\ncommitter Lukas Kalbertodt <lukas.kalbertodt@gmail.com> 1571924804 +0200\n\nAdd UI tests for `array::IntoIter` impls\n\nThis it to make sure traits are implemented for arrays with length 32\nand below, while they are not implemented for >= 33.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c36b9ddcb40b81642cef2d1dd17bcd45f54c70da", "html_url": "https://github.com/rust-lang/rust/commit/c36b9ddcb40b81642cef2d1dd17bcd45f54c70da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c36b9ddcb40b81642cef2d1dd17bcd45f54c70da/comments", "author": {"login": "LukasKalbertodt", "id": 7419664, "node_id": "MDQ6VXNlcjc0MTk2NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7419664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKalbertodt", "html_url": "https://github.com/LukasKalbertodt", "followers_url": "https://api.github.com/users/LukasKalbertodt/followers", "following_url": "https://api.github.com/users/LukasKalbertodt/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKalbertodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKalbertodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKalbertodt/subscriptions", "organizations_url": "https://api.github.com/users/LukasKalbertodt/orgs", "repos_url": "https://api.github.com/users/LukasKalbertodt/repos", "events_url": "https://api.github.com/users/LukasKalbertodt/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKalbertodt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LukasKalbertodt", "id": 7419664, "node_id": "MDQ6VXNlcjc0MTk2NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7419664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKalbertodt", "html_url": "https://github.com/LukasKalbertodt", "followers_url": "https://api.github.com/users/LukasKalbertodt/followers", "following_url": "https://api.github.com/users/LukasKalbertodt/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKalbertodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKalbertodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKalbertodt/subscriptions", "organizations_url": "https://api.github.com/users/LukasKalbertodt/orgs", "repos_url": "https://api.github.com/users/LukasKalbertodt/repos", "events_url": "https://api.github.com/users/LukasKalbertodt/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKalbertodt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5334a307d551e5affaef253f1c83141495db46f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/5334a307d551e5affaef253f1c83141495db46f0", "html_url": "https://github.com/rust-lang/rust/commit/5334a307d551e5affaef253f1c83141495db46f0"}], "stats": {"total": 216, "additions": 216, "deletions": 0}, "files": [{"sha": "0aeba8607e818b774b82c596ffbc57f084f1ac0f", "filename": "src/test/ui/const-generics/array-impls/into-iter-impls-length-32.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/c36b9ddcb40b81642cef2d1dd17bcd45f54c70da/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-impls-length-32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c36b9ddcb40b81642cef2d1dd17bcd45f54c70da/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-impls-length-32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-impls-length-32.rs?ref=c36b9ddcb40b81642cef2d1dd17bcd45f54c70da", "patch": "@@ -0,0 +1,41 @@\n+// check-pass\n+\n+#![feature(array_value_iter)]\n+#![feature(trusted_len)]\n+\n+use std::{\n+    array::IntoIter,\n+    fmt::Debug,\n+    iter::{ExactSizeIterator, FusedIterator, TrustedLen},\n+};\n+\n+pub fn yes_iterator() -> impl Iterator<Item = i32> {\n+    IntoIter::new([0i32; 32])\n+}\n+\n+pub fn yes_double_ended_iterator() -> impl DoubleEndedIterator {\n+    IntoIter::new([0i32; 32])\n+}\n+\n+pub fn yes_exact_size_iterator() -> impl ExactSizeIterator {\n+    IntoIter::new([0i32; 32])\n+}\n+\n+pub fn yes_fused_iterator() -> impl FusedIterator {\n+    IntoIter::new([0i32; 32])\n+}\n+\n+pub fn yes_trusted_len() -> impl TrustedLen {\n+    IntoIter::new([0i32; 32])\n+}\n+\n+pub fn yes_clone() -> impl Clone {\n+    IntoIter::new([0i32; 32])\n+}\n+\n+pub fn yes_debug() -> impl Debug {\n+    IntoIter::new([0i32; 32])\n+}\n+\n+\n+fn main() {}"}, {"sha": "a0bbd2ce64add0adfe8ba440d30b47fade1407c8", "filename": "src/test/ui/const-generics/array-impls/into-iter-no-impls-length-33.rs", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/c36b9ddcb40b81642cef2d1dd17bcd45f54c70da/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-no-impls-length-33.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c36b9ddcb40b81642cef2d1dd17bcd45f54c70da/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-no-impls-length-33.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-no-impls-length-33.rs?ref=c36b9ddcb40b81642cef2d1dd17bcd45f54c70da", "patch": "@@ -0,0 +1,53 @@\n+#![feature(array_value_iter)]\n+#![feature(trusted_len)]\n+\n+use std::{\n+    array::IntoIter,\n+    fmt::Debug,\n+    iter::{ExactSizeIterator, FusedIterator, TrustedLen},\n+};\n+\n+pub fn no_iterator() -> impl Iterator<Item = i32> {\n+    //~^ ERROR arrays only have std trait implementations for lengths 0..=32\n+    IntoIter::new([0i32; 33])\n+    //~^ ERROR arrays only have std trait implementations for lengths 0..=32\n+}\n+\n+pub fn no_double_ended_iterator() -> impl DoubleEndedIterator {\n+    //~^ ERROR arrays only have std trait implementations for lengths 0..=32\n+    IntoIter::new([0i32; 33])\n+    //~^ ERROR arrays only have std trait implementations for lengths 0..=32\n+}\n+\n+pub fn no_exact_size_iterator() -> impl ExactSizeIterator {\n+    //~^ ERROR arrays only have std trait implementations for lengths 0..=32\n+    IntoIter::new([0i32; 33])\n+    //~^ ERROR arrays only have std trait implementations for lengths 0..=32\n+}\n+\n+pub fn no_fused_iterator() -> impl FusedIterator {\n+    //~^ ERROR arrays only have std trait implementations for lengths 0..=32\n+    IntoIter::new([0i32; 33])\n+    //~^ ERROR arrays only have std trait implementations for lengths 0..=32\n+}\n+\n+pub fn no_trusted_len() -> impl TrustedLen {\n+    //~^ ERROR arrays only have std trait implementations for lengths 0..=32\n+    IntoIter::new([0i32; 33])\n+    //~^ ERROR arrays only have std trait implementations for lengths 0..=32\n+}\n+\n+pub fn no_clone() -> impl Clone {\n+    //~^ ERROR arrays only have std trait implementations for lengths 0..=32\n+    IntoIter::new([0i32; 33])\n+    //~^ ERROR arrays only have std trait implementations for lengths 0..=32\n+}\n+\n+pub fn no_debug() -> impl Debug {\n+    //~^ ERROR arrays only have std trait implementations for lengths 0..=32\n+    IntoIter::new([0i32; 33])\n+    //~^ ERROR arrays only have std trait implementations for lengths 0..=32\n+}\n+\n+\n+fn main() {}"}, {"sha": "bfdff8e3bbe61599026772b8321c1bff56deab25", "filename": "src/test/ui/const-generics/array-impls/into-iter-no-impls-length-33.stderr", "status": "added", "additions": 122, "deletions": 0, "changes": 122, "blob_url": "https://github.com/rust-lang/rust/blob/c36b9ddcb40b81642cef2d1dd17bcd45f54c70da/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-no-impls-length-33.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c36b9ddcb40b81642cef2d1dd17bcd45f54c70da/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-no-impls-length-33.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-no-impls-length-33.stderr?ref=c36b9ddcb40b81642cef2d1dd17bcd45f54c70da", "patch": "@@ -0,0 +1,122 @@\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/into-iter-no-impls-length-33.rs:12:5\n+   |\n+LL |     IntoIter::new([0i32; 33])\n+   |     ^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[i32; 33]`\n+   |\n+   = note: required by `std::array::IntoIter::<T, N>::new`\n+\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/into-iter-no-impls-length-33.rs:10:25\n+   |\n+LL | pub fn no_iterator() -> impl Iterator<Item = i32> {\n+   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[i32; 33]`\n+   |\n+   = note: required because of the requirements on the impl of `std::iter::Iterator` for `std::array::IntoIter<i32, 33usize>`\n+   = note: the return type of a function must have a statically known size\n+\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/into-iter-no-impls-length-33.rs:18:5\n+   |\n+LL |     IntoIter::new([0i32; 33])\n+   |     ^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[i32; 33]`\n+   |\n+   = note: required by `std::array::IntoIter::<T, N>::new`\n+\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/into-iter-no-impls-length-33.rs:16:38\n+   |\n+LL | pub fn no_double_ended_iterator() -> impl DoubleEndedIterator {\n+   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[i32; 33]`\n+   |\n+   = note: required because of the requirements on the impl of `std::iter::DoubleEndedIterator` for `std::array::IntoIter<i32, 33usize>`\n+   = note: the return type of a function must have a statically known size\n+\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/into-iter-no-impls-length-33.rs:24:5\n+   |\n+LL |     IntoIter::new([0i32; 33])\n+   |     ^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[i32; 33]`\n+   |\n+   = note: required by `std::array::IntoIter::<T, N>::new`\n+\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/into-iter-no-impls-length-33.rs:22:36\n+   |\n+LL | pub fn no_exact_size_iterator() -> impl ExactSizeIterator {\n+   |                                    ^^^^^^^^^^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[i32; 33]`\n+   |\n+   = note: required because of the requirements on the impl of `std::iter::ExactSizeIterator` for `std::array::IntoIter<i32, 33usize>`\n+   = note: the return type of a function must have a statically known size\n+\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/into-iter-no-impls-length-33.rs:30:5\n+   |\n+LL |     IntoIter::new([0i32; 33])\n+   |     ^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[i32; 33]`\n+   |\n+   = note: required by `std::array::IntoIter::<T, N>::new`\n+\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/into-iter-no-impls-length-33.rs:28:31\n+   |\n+LL | pub fn no_fused_iterator() -> impl FusedIterator {\n+   |                               ^^^^^^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[i32; 33]`\n+   |\n+   = note: required because of the requirements on the impl of `std::iter::FusedIterator` for `std::array::IntoIter<i32, 33usize>`\n+   = note: the return type of a function must have a statically known size\n+\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/into-iter-no-impls-length-33.rs:36:5\n+   |\n+LL |     IntoIter::new([0i32; 33])\n+   |     ^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[i32; 33]`\n+   |\n+   = note: required by `std::array::IntoIter::<T, N>::new`\n+\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/into-iter-no-impls-length-33.rs:34:28\n+   |\n+LL | pub fn no_trusted_len() -> impl TrustedLen {\n+   |                            ^^^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[i32; 33]`\n+   |\n+   = note: required because of the requirements on the impl of `std::iter::TrustedLen` for `std::array::IntoIter<i32, 33usize>`\n+   = note: the return type of a function must have a statically known size\n+\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/into-iter-no-impls-length-33.rs:42:5\n+   |\n+LL |     IntoIter::new([0i32; 33])\n+   |     ^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[i32; 33]`\n+   |\n+   = note: required by `std::array::IntoIter::<T, N>::new`\n+\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/into-iter-no-impls-length-33.rs:40:22\n+   |\n+LL | pub fn no_clone() -> impl Clone {\n+   |                      ^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[i32; 33]`\n+   |\n+   = note: required because of the requirements on the impl of `std::clone::Clone` for `std::array::IntoIter<i32, 33usize>`\n+   = note: the return type of a function must have a statically known size\n+\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/into-iter-no-impls-length-33.rs:48:5\n+   |\n+LL |     IntoIter::new([0i32; 33])\n+   |     ^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[i32; 33]`\n+   |\n+   = note: required by `std::array::IntoIter::<T, N>::new`\n+\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/into-iter-no-impls-length-33.rs:46:22\n+   |\n+LL | pub fn no_debug() -> impl Debug {\n+   |                      ^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[i32; 33]`\n+   |\n+   = note: required because of the requirements on the impl of `std::fmt::Debug` for `std::array::IntoIter<i32, 33usize>`\n+   = note: the return type of a function must have a statically known size\n+\n+error: aborting due to 14 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}]}