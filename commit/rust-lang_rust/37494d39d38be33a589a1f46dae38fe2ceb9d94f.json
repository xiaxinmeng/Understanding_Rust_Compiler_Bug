{"sha": "37494d39d38be33a589a1f46dae38fe2ceb9d94f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3NDk0ZDM5ZDM4YmUzM2E1ODlhMWY0NmRhZTM4ZmUyY2ViOWQ5NGY=", "commit": {"author": {"name": "Gary Linscott", "email": "glinscott@gmail.com", "date": "2013-07-05T23:01:57Z"}, "committer": {"name": "Gary Linscott", "email": "glinscott@gmail.com", "date": "2013-07-05T23:40:01Z"}, "message": "Switch json parsing to read_chars for performance\n\nAvoids the overhead of read_char for every character.\n\nBenchmark reading example.json 10 times from\nhttps://code.google.com/p/rapidjson/wiki/Performance\n\nBefore: 2.55s\nAfter:  0.16s\n\nRegression testing is already done by isrustfastyet.", "tree": {"sha": "d77211e7042fbf860b3cc7a461b76dd81590d980", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d77211e7042fbf860b3cc7a461b76dd81590d980"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37494d39d38be33a589a1f46dae38fe2ceb9d94f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37494d39d38be33a589a1f46dae38fe2ceb9d94f", "html_url": "https://github.com/rust-lang/rust/commit/37494d39d38be33a589a1f46dae38fe2ceb9d94f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37494d39d38be33a589a1f46dae38fe2ceb9d94f/comments", "author": {"login": "glinscott", "id": 554932, "node_id": "MDQ6VXNlcjU1NDkzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/554932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glinscott", "html_url": "https://github.com/glinscott", "followers_url": "https://api.github.com/users/glinscott/followers", "following_url": "https://api.github.com/users/glinscott/following{/other_user}", "gists_url": "https://api.github.com/users/glinscott/gists{/gist_id}", "starred_url": "https://api.github.com/users/glinscott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glinscott/subscriptions", "organizations_url": "https://api.github.com/users/glinscott/orgs", "repos_url": "https://api.github.com/users/glinscott/repos", "events_url": "https://api.github.com/users/glinscott/events{/privacy}", "received_events_url": "https://api.github.com/users/glinscott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "glinscott", "id": 554932, "node_id": "MDQ6VXNlcjU1NDkzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/554932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glinscott", "html_url": "https://github.com/glinscott", "followers_url": "https://api.github.com/users/glinscott/followers", "following_url": "https://api.github.com/users/glinscott/following{/other_user}", "gists_url": "https://api.github.com/users/glinscott/gists{/gist_id}", "starred_url": "https://api.github.com/users/glinscott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glinscott/subscriptions", "organizations_url": "https://api.github.com/users/glinscott/orgs", "repos_url": "https://api.github.com/users/glinscott/repos", "events_url": "https://api.github.com/users/glinscott/events{/privacy}", "received_events_url": "https://api.github.com/users/glinscott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58eb70a5e2ce6602e5685f5cc18ab2fe0c327020", "url": "https://api.github.com/repos/rust-lang/rust/commits/58eb70a5e2ce6602e5685f5cc18ab2fe0c327020", "html_url": "https://github.com/rust-lang/rust/commit/58eb70a5e2ce6602e5685f5cc18ab2fe0c327020"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "5b9cc338b37bca46d8f1859a182336714ce1abbe", "filename": "src/libextra/json.rs", "status": "modified", "additions": 28, "deletions": 7, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/37494d39d38be33a589a1f46dae38fe2ceb9d94f/src%2Flibextra%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37494d39d38be33a589a1f46dae38fe2ceb9d94f/src%2Flibextra%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fjson.rs?ref=37494d39d38be33a589a1f46dae38fe2ceb9d94f", "patch": "@@ -481,22 +481,30 @@ pub fn to_pretty_str(json: &Json) -> ~str {\n     io::with_str_writer(|wr| to_pretty_writer(wr, json))\n }\n \n+static BUF_SIZE : uint = 64000;\n+\n #[allow(missing_doc)]\n pub struct Parser {\n     priv rdr: @io::Reader,\n+    priv buf: ~[char],\n+    priv buf_idx: uint,\n     priv ch: char,\n     priv line: uint,\n     priv col: uint,\n }\n \n /// Decode a json value from an io::reader\n pub fn Parser(rdr: @io::Reader) -> Parser {\n-    Parser {\n+    let mut p = Parser {\n         rdr: rdr,\n-        ch: rdr.read_char(),\n+        buf: rdr.read_chars(BUF_SIZE),\n+        buf_idx: 0,\n+        ch: 0 as char,\n         line: 1,\n-        col: 1,\n-    }\n+        col: 0,\n+    };\n+    p.bump();\n+    p\n }\n \n impl Parser {\n@@ -521,13 +529,26 @@ impl Parser {\n     fn eof(&self) -> bool { self.ch == -1 as char }\n \n     fn bump(&mut self) {\n-        self.ch = self.rdr.read_char();\n+        if self.eof() {\n+            return;\n+        }\n+\n+        self.col += 1u;\n+\n+        if self.buf_idx >= self.buf.len() {\n+            self.buf = self.rdr.read_chars(BUF_SIZE);\n+            if self.buf.len() == 0 {\n+                self.ch = -1 as char;\n+                return;\n+            }\n+            self.buf_idx = 0;\n+        }\n+        self.ch = self.buf[self.buf_idx];\n+        self.buf_idx += 1;\n \n         if self.ch == '\\n' {\n             self.line += 1u;\n             self.col = 1u;\n-        } else {\n-            self.col += 1u;\n         }\n     }\n "}]}