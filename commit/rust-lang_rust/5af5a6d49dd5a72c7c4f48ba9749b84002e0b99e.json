{"sha": "5af5a6d49dd5a72c7c4f48ba9749b84002e0b99e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhZjVhNmQ0OWRkNWE3MmM3YzRmNDhiYTk3NDliODQwMDJlMGI5OWU=", "commit": {"author": {"name": "Ryan Levick", "email": "me@ryanlevick.com", "date": "2021-07-06T11:47:03Z"}, "committer": {"name": "Ryan Levick", "email": "me@ryanlevick.com", "date": "2021-07-06T11:47:03Z"}, "message": "Add missing docs and remove dead code", "tree": {"sha": "fdd5d5349f85ffcb27d1e9d5924ed02b41d5729f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fdd5d5349f85ffcb27d1e9d5924ed02b41d5729f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5af5a6d49dd5a72c7c4f48ba9749b84002e0b99e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5af5a6d49dd5a72c7c4f48ba9749b84002e0b99e", "html_url": "https://github.com/rust-lang/rust/commit/5af5a6d49dd5a72c7c4f48ba9749b84002e0b99e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5af5a6d49dd5a72c7c4f48ba9749b84002e0b99e/comments", "author": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33cc7b1fe21c82d31204e549cd2471ac8ec22aa3", "url": "https://api.github.com/repos/rust-lang/rust/commits/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3", "html_url": "https://github.com/rust-lang/rust/commit/33cc7b1fe21c82d31204e549cd2471ac8ec22aa3"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "323415f3300b28beacdee56d9c2d94976dc19819", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5af5a6d49dd5a72c7c4f48ba9749b84002e0b99e/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5af5a6d49dd5a72c7c4f48ba9749b84002e0b99e/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=5af5a6d49dd5a72c7c4f48ba9749b84002e0b99e", "patch": "@@ -521,14 +521,18 @@ impl Handler {\n     }\n \n     /// Construct a builder at the `Warning` level at the given `span` and with the `msg`.\n-    /// Cancel the builder if warnings cannot be emitted\n+    ///\n+    /// The builder will be canceled if warnings cannot be emitted.\n     pub fn struct_span_warn(&self, span: impl Into<MultiSpan>, msg: &str) -> DiagnosticBuilder<'_> {\n         let mut result = self.struct_warn(msg);\n         result.set_span(span);\n         result\n     }\n \n     /// Construct a builder at the `Warning` level at the given `span` and with the `msg`.\n+    ///\n+    /// This will \"force\" the warning meaning it will not be canceled even\n+    /// if warnings cannot be emitted.\n     pub fn struct_span_force_warn(\n         &self,\n         span: impl Into<MultiSpan>,\n@@ -564,7 +568,8 @@ impl Handler {\n     }\n \n     /// Construct a builder at the `Warning` level with the `msg`.\n-    /// Cancel the builder if warnings cannot be emitted\n+    ///\n+    /// The builder will be canceled if warnings cannot be emitted.\n     pub fn struct_warn(&self, msg: &str) -> DiagnosticBuilder<'_> {\n         let mut result = DiagnosticBuilder::new(self, Level::Warning, msg);\n         if !self.flags.can_emit_warnings {\n@@ -574,6 +579,9 @@ impl Handler {\n     }\n \n     /// Construct a builder at the `Warning` level with the `msg`.\n+    ///\n+    /// This will \"force\" a warning meaning it will not be canceled even\n+    /// if warnings cannot be emitted.\n     pub fn struct_force_warn(&self, msg: &str) -> DiagnosticBuilder<'_> {\n         DiagnosticBuilder::new(self, Level::Warning, msg)\n     }"}, {"sha": "efd8d56fd6fdd6d7fa6aac312fb12210cecbebef", "filename": "compiler/rustc_middle/src/lint.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5af5a6d49dd5a72c7c4f48ba9749b84002e0b99e/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5af5a6d49dd5a72c7c4f48ba9749b84002e0b99e/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flint.rs?ref=5af5a6d49dd5a72c7c4f48ba9749b84002e0b99e", "patch": "@@ -251,9 +251,6 @@ pub fn struct_lint_level<'s, 'd>(\n         let has_future_breakage =\n             future_incompatible.map_or(false, |incompat| incompat.future_breakage.is_some());\n \n-        let is_force_warn = matches!(level, Level::ForceWarn)\n-            || matches!(src, LintLevelSource::CommandLine(_, Level::ForceWarn));\n-\n         let mut err = match (level, span) {\n             (Level::Allow, span) => {\n                 if has_future_breakage {\n@@ -359,6 +356,7 @@ pub fn struct_lint_level<'s, 'd>(\n             }\n         }\n \n+        let is_force_warn = matches!(level, Level::ForceWarn);\n         err.code(DiagnosticId::Lint { name, has_future_breakage, is_force_warn });\n \n         if let Some(future_incompatible) = future_incompatible {"}]}