{"sha": "376b0bce363aca8daf246bbc83c1b85d395d8e1e", "node_id": "C_kwDOAAsO6NoAKDM3NmIwYmNlMzYzYWNhOGRhZjI0NmJiYzgzYzFiODVkMzk1ZDhlMWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-09T21:31:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-09T21:31:59Z"}, "message": "Rollup merge of #105506 - estebank:rustc_must_implement_one_of, r=compiler-errors\n\nTweak `rustc_must_implement_one_of` diagnostic output", "tree": {"sha": "f03fe16a98da49d8b6fc6303ba962dc9676af0f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f03fe16a98da49d8b6fc6303ba962dc9676af0f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/376b0bce363aca8daf246bbc83c1b85d395d8e1e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjk6lPCRBK7hj4Ov3rIwAAWLQIAIeKNGlsnYQKMD335mKYj/+S\nH1Kdm3y4M72t/79bLCUJW+GA9jErQsqnfn4mgiEjS+Dq8Xgxgguw0IHN/vb4W0Jb\nVS1xHUsbnAvGMeDrCWHsYnqpgDEuxA54SnPwyfDvhdYHRpPr2gd0wDdE48bABtC+\n23bziu+fT9kkIrtByGm0BvhgxHKhkokH2qVWCvCTaxI16A224vI9DK4/6ZwK24sP\nU1YW5+8r1RA3HQbuwZCqK1UV/fZhdxTXzq4hidVrjOQMTrv7L8Lu+ljmjjc1BMLb\n/XnYPD2AwZrSfKms4wY24N93ff0Uqew9WWhDu/7c+x09g2RAVIylURIV9NBQGAo=\n=HRCy\n-----END PGP SIGNATURE-----\n", "payload": "tree f03fe16a98da49d8b6fc6303ba962dc9676af0f2\nparent d0563c64b8264e55b130c2fe7044b37daf6d91b0\nparent b3b17bde31103fbf98f17cc7107e167f2c28172c\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670621519 +0100\ncommitter GitHub <noreply@github.com> 1670621519 +0100\n\nRollup merge of #105506 - estebank:rustc_must_implement_one_of, r=compiler-errors\n\nTweak `rustc_must_implement_one_of` diagnostic output\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/376b0bce363aca8daf246bbc83c1b85d395d8e1e", "html_url": "https://github.com/rust-lang/rust/commit/376b0bce363aca8daf246bbc83c1b85d395d8e1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/376b0bce363aca8daf246bbc83c1b85d395d8e1e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0563c64b8264e55b130c2fe7044b37daf6d91b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0563c64b8264e55b130c2fe7044b37daf6d91b0", "html_url": "https://github.com/rust-lang/rust/commit/d0563c64b8264e55b130c2fe7044b37daf6d91b0"}, {"sha": "b3b17bde31103fbf98f17cc7107e167f2c28172c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3b17bde31103fbf98f17cc7107e167f2c28172c", "html_url": "https://github.com/rust-lang/rust/commit/b3b17bde31103fbf98f17cc7107e167f2c28172c"}], "stats": {"total": 75, "additions": 36, "deletions": 39}, "files": [{"sha": "18f08ff6677cddfb098ccf71c87f77b52ac1ebc6", "filename": "compiler/rustc_hir_analysis/src/collect.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/376b0bce363aca8daf246bbc83c1b85d395d8e1e/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/376b0bce363aca8daf246bbc83c1b85d395d8e1e/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect.rs?ref=376b0bce363aca8daf246bbc83c1b85d395d8e1e", "patch": "@@ -955,7 +955,7 @@ fn trait_def(tcx: TyCtxt<'_>, def_id: DefId) -> ty::TraitDef {\n                     .struct_span_err(\n                         attr.span,\n                         \"the `#[rustc_must_implement_one_of]` attribute must be \\\n-                        used with at least 2 args\",\n+                         used with at least 2 args\",\n                     )\n                     .emit();\n \n@@ -987,7 +987,7 @@ fn trait_def(tcx: TyCtxt<'_>, def_id: DefId) -> ty::TraitDef {\n                             tcx.sess\n                                 .struct_span_err(\n                                     item.span,\n-                                    \"This function doesn't have a default implementation\",\n+                                    \"function doesn't have a default implementation\",\n                                 )\n                                 .span_note(attr_span, \"required by this annotation\")\n                                 .emit();\n@@ -999,17 +999,17 @@ fn trait_def(tcx: TyCtxt<'_>, def_id: DefId) -> ty::TraitDef {\n                     }\n                     Some(item) => {\n                         tcx.sess\n-                            .struct_span_err(item.span, \"Not a function\")\n+                            .struct_span_err(item.span, \"not a function\")\n                             .span_note(attr_span, \"required by this annotation\")\n                             .note(\n-                                \"All `#[rustc_must_implement_one_of]` arguments \\\n-                            must be associated function names\",\n+                                \"all `#[rustc_must_implement_one_of]` arguments must be associated \\\n+                                 function names\",\n                             )\n                             .emit();\n                     }\n                     None => {\n                         tcx.sess\n-                            .struct_span_err(ident.span, \"Function not found in this trait\")\n+                            .struct_span_err(ident.span, \"function not found in this trait\")\n                             .emit();\n                     }\n                 }\n@@ -1027,11 +1027,8 @@ fn trait_def(tcx: TyCtxt<'_>, def_id: DefId) -> ty::TraitDef {\n             for ident in &*list {\n                 if let Some(dup) = set.insert(ident.name, ident.span) {\n                     tcx.sess\n-                        .struct_span_err(vec![dup, ident.span], \"Functions names are duplicated\")\n-                        .note(\n-                            \"All `#[rustc_must_implement_one_of]` arguments \\\n-                            must be unique\",\n-                        )\n+                        .struct_span_err(vec![dup, ident.span], \"functions names are duplicated\")\n+                        .note(\"all `#[rustc_must_implement_one_of]` arguments must be unique\")\n                         .emit();\n \n                     no_dups = false;"}, {"sha": "8db5fa615c08d30a107a5251399fa58d825f2752", "filename": "src/test/ui/traits/default-method/rustc_must_implement_one_of_duplicates.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/376b0bce363aca8daf246bbc83c1b85d395d8e1e/src%2Ftest%2Fui%2Ftraits%2Fdefault-method%2Frustc_must_implement_one_of_duplicates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/376b0bce363aca8daf246bbc83c1b85d395d8e1e/src%2Ftest%2Fui%2Ftraits%2Fdefault-method%2Frustc_must_implement_one_of_duplicates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fdefault-method%2Frustc_must_implement_one_of_duplicates.rs?ref=376b0bce363aca8daf246bbc83c1b85d395d8e1e", "patch": "@@ -1,15 +1,15 @@\n #![feature(rustc_attrs)]\n \n #[rustc_must_implement_one_of(a, a)]\n-//~^ Functions names are duplicated\n+//~^ functions names are duplicated\n trait Trait {\n     fn a() {}\n }\n \n #[rustc_must_implement_one_of(b, a, a, c, b, c)]\n-//~^ Functions names are duplicated\n-//~| Functions names are duplicated\n-//~| Functions names are duplicated\n+//~^ functions names are duplicated\n+//~| functions names are duplicated\n+//~| functions names are duplicated\n trait Trait1 {\n     fn a() {}\n     fn b() {}"}, {"sha": "cd1476a6eb81b4e039bafe293c1cba61d7647cb0", "filename": "src/test/ui/traits/default-method/rustc_must_implement_one_of_duplicates.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/376b0bce363aca8daf246bbc83c1b85d395d8e1e/src%2Ftest%2Fui%2Ftraits%2Fdefault-method%2Frustc_must_implement_one_of_duplicates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/376b0bce363aca8daf246bbc83c1b85d395d8e1e/src%2Ftest%2Fui%2Ftraits%2Fdefault-method%2Frustc_must_implement_one_of_duplicates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fdefault-method%2Frustc_must_implement_one_of_duplicates.stderr?ref=376b0bce363aca8daf246bbc83c1b85d395d8e1e", "patch": "@@ -1,34 +1,34 @@\n-error: Functions names are duplicated\n+error: functions names are duplicated\n   --> $DIR/rustc_must_implement_one_of_duplicates.rs:3:31\n    |\n LL | #[rustc_must_implement_one_of(a, a)]\n    |                               ^  ^\n    |\n-   = note: All `#[rustc_must_implement_one_of]` arguments must be unique\n+   = note: all `#[rustc_must_implement_one_of]` arguments must be unique\n \n-error: Functions names are duplicated\n+error: functions names are duplicated\n   --> $DIR/rustc_must_implement_one_of_duplicates.rs:9:34\n    |\n LL | #[rustc_must_implement_one_of(b, a, a, c, b, c)]\n    |                                  ^  ^\n    |\n-   = note: All `#[rustc_must_implement_one_of]` arguments must be unique\n+   = note: all `#[rustc_must_implement_one_of]` arguments must be unique\n \n-error: Functions names are duplicated\n+error: functions names are duplicated\n   --> $DIR/rustc_must_implement_one_of_duplicates.rs:9:31\n    |\n LL | #[rustc_must_implement_one_of(b, a, a, c, b, c)]\n    |                               ^           ^\n    |\n-   = note: All `#[rustc_must_implement_one_of]` arguments must be unique\n+   = note: all `#[rustc_must_implement_one_of]` arguments must be unique\n \n-error: Functions names are duplicated\n+error: functions names are duplicated\n   --> $DIR/rustc_must_implement_one_of_duplicates.rs:9:40\n    |\n LL | #[rustc_must_implement_one_of(b, a, a, c, b, c)]\n    |                                        ^     ^\n    |\n-   = note: All `#[rustc_must_implement_one_of]` arguments must be unique\n+   = note: all `#[rustc_must_implement_one_of]` arguments must be unique\n \n error: aborting due to 4 previous errors\n "}, {"sha": "b1b91966c8d8883ab6cfc2aaa95a652f79648136", "filename": "src/test/ui/traits/default-method/rustc_must_implement_one_of_misuse.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/376b0bce363aca8daf246bbc83c1b85d395d8e1e/src%2Ftest%2Fui%2Ftraits%2Fdefault-method%2Frustc_must_implement_one_of_misuse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/376b0bce363aca8daf246bbc83c1b85d395d8e1e/src%2Ftest%2Fui%2Ftraits%2Fdefault-method%2Frustc_must_implement_one_of_misuse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fdefault-method%2Frustc_must_implement_one_of_misuse.rs?ref=376b0bce363aca8daf246bbc83c1b85d395d8e1e", "patch": "@@ -1,12 +1,12 @@\n #![feature(rustc_attrs)]\n \n #[rustc_must_implement_one_of(a, b)]\n-//~^ Function not found in this trait\n-//~| Function not found in this trait\n+//~^ function not found in this trait\n+//~| function not found in this trait\n trait Tr0 {}\n \n #[rustc_must_implement_one_of(a, b)]\n-//~^ Function not found in this trait\n+//~^ function not found in this trait\n trait Tr1 {\n     fn a() {}\n }\n@@ -23,16 +23,16 @@ trait Tr3 {}\n \n #[rustc_must_implement_one_of(A, B)]\n trait Tr4 {\n-    const A: u8 = 1; //~ Not a function\n+    const A: u8 = 1; //~ not a function\n \n-    type B; //~ Not a function\n+    type B; //~ not a function\n }\n \n #[rustc_must_implement_one_of(a, b)]\n trait Tr5 {\n-    fn a(); //~ This function doesn't have a default implementation\n+    fn a(); //~ function doesn't have a default implementation\n \n-    fn b(); //~ This function doesn't have a default implementation\n+    fn b(); //~ function doesn't have a default implementation\n }\n \n #[rustc_must_implement_one_of(abc, xyz)]"}, {"sha": "38e692521ca23508dd310e2935de0a393bb061a3", "filename": "src/test/ui/traits/default-method/rustc_must_implement_one_of_misuse.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/376b0bce363aca8daf246bbc83c1b85d395d8e1e/src%2Ftest%2Fui%2Ftraits%2Fdefault-method%2Frustc_must_implement_one_of_misuse.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/376b0bce363aca8daf246bbc83c1b85d395d8e1e/src%2Ftest%2Fui%2Ftraits%2Fdefault-method%2Frustc_must_implement_one_of_misuse.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fdefault-method%2Frustc_must_implement_one_of_misuse.stderr?ref=376b0bce363aca8daf246bbc83c1b85d395d8e1e", "patch": "@@ -22,19 +22,19 @@ LL |\n LL | struct Struct {}\n    | ---------------- not a trait\n \n-error: Function not found in this trait\n+error: function not found in this trait\n   --> $DIR/rustc_must_implement_one_of_misuse.rs:3:31\n    |\n LL | #[rustc_must_implement_one_of(a, b)]\n    |                               ^\n \n-error: Function not found in this trait\n+error: function not found in this trait\n   --> $DIR/rustc_must_implement_one_of_misuse.rs:3:34\n    |\n LL | #[rustc_must_implement_one_of(a, b)]\n    |                                  ^\n \n-error: Function not found in this trait\n+error: function not found in this trait\n   --> $DIR/rustc_must_implement_one_of_misuse.rs:8:34\n    |\n LL | #[rustc_must_implement_one_of(a, b)]\n@@ -46,7 +46,7 @@ error: the `#[rustc_must_implement_one_of]` attribute must be used with at least\n LL | #[rustc_must_implement_one_of(a)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: Not a function\n+error: not a function\n   --> $DIR/rustc_must_implement_one_of_misuse.rs:26:5\n    |\n LL |     const A: u8 = 1;\n@@ -57,9 +57,9 @@ note: required by this annotation\n    |\n LL | #[rustc_must_implement_one_of(A, B)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: All `#[rustc_must_implement_one_of]` arguments must be associated function names\n+   = note: all `#[rustc_must_implement_one_of]` arguments must be associated function names\n \n-error: Not a function\n+error: not a function\n   --> $DIR/rustc_must_implement_one_of_misuse.rs:28:5\n    |\n LL |     type B;\n@@ -70,9 +70,9 @@ note: required by this annotation\n    |\n LL | #[rustc_must_implement_one_of(A, B)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: All `#[rustc_must_implement_one_of]` arguments must be associated function names\n+   = note: all `#[rustc_must_implement_one_of]` arguments must be associated function names\n \n-error: This function doesn't have a default implementation\n+error: function doesn't have a default implementation\n   --> $DIR/rustc_must_implement_one_of_misuse.rs:33:5\n    |\n LL |     fn a();\n@@ -84,7 +84,7 @@ note: required by this annotation\n LL | #[rustc_must_implement_one_of(a, b)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: This function doesn't have a default implementation\n+error: function doesn't have a default implementation\n   --> $DIR/rustc_must_implement_one_of_misuse.rs:35:5\n    |\n LL |     fn b();"}]}