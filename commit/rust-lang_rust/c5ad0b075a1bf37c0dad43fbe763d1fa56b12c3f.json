{"sha": "c5ad0b075a1bf37c0dad43fbe763d1fa56b12c3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1YWQwYjA3NWExYmYzN2MwZGFkNDNmYmU3NjNkMWZhNTZiMTJjM2Y=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-08-05T07:29:39Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-08-05T07:31:08Z"}, "message": "Make let_unit lint suggestion auto applicable", "tree": {"sha": "91eafbdc85e002d87eeb18cb5fdab2c29bd1f598", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91eafbdc85e002d87eeb18cb5fdab2c29bd1f598"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5ad0b075a1bf37c0dad43fbe763d1fa56b12c3f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl1H2zwACgkQaTCGhp1Q\nZjdXnQ/5AXysJ0HDwLZ8LNHFAoHOBuojOkzaeiTgXpet5IB7fMbiW8Dyp6Fpzann\ns73K8QwaIsPJucWah2K+DkLdjxGCtd0YUx7FUTdLSuHm3vOGA23CpiuQjq0r5hGK\n0kz6G9Z5aeJoSrhZp3K5qdyF2dfNpmTbytSNLtMMaTg+KnWXlF7vzivdwywsf3yj\nQEjv98dRDnS4+xWJoF2evRIayur9SAejOWxxVb4L8ehW06Za9k/A8mZ1DN+OGzHu\ni8l82XpezwTex+p19pWj7ySJzvBdYP/rvTv5JfyPEQIBB4EyFBlajKXR86uTz5D0\n7k4kn2aZ4EPCBnZhUjcu3t8v4Uu5Rq/V8Y7GEqk8DkF6yUL2ddztC9CMUKisiqF0\ngMV/v3rnj6tiiH/gZfBoQaNegfktKBSctkoXa5FgNEDwJBN5sbAVcGzl8KjCTq12\nF/4Kb2OrcxXdpJwWZZ5+tykgIKb23tKC5SLfSVsPZ3L8G8NeiO++9gAA2OOOj/rs\nHgXxmsnqK6x1L1BQArxFWq6vLHOqgBXsK4YjIWemjs4kBksXF/mhmy3M8/odEGe8\nGYe7dh/+A4u237Uklfjbk8Woff+Mx/uBs5RQqn+hxTlG5AKg10CHeFOtXASuNUCf\nQIfzmpvfU2lMJumvhEAMxKZpsigbNfSfW7iJK3pV6HOj52N4DdE=\n=PoIf\n-----END PGP SIGNATURE-----", "payload": "tree 91eafbdc85e002d87eeb18cb5fdab2c29bd1f598\nparent 5c1e30ab05841af32e206c8111f5343be3475a90\nauthor flip1995 <hello@philkrones.com> 1564990179 +0200\ncommitter flip1995 <hello@philkrones.com> 1564990268 +0200\n\nMake let_unit lint suggestion auto applicable\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5ad0b075a1bf37c0dad43fbe763d1fa56b12c3f", "html_url": "https://github.com/rust-lang/rust/commit/c5ad0b075a1bf37c0dad43fbe763d1fa56b12c3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5ad0b075a1bf37c0dad43fbe763d1fa56b12c3f/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c1e30ab05841af32e206c8111f5343be3475a90", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c1e30ab05841af32e206c8111f5343be3475a90", "html_url": "https://github.com/rust-lang/rust/commit/5c1e30ab05841af32e206c8111f5343be3475a90"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "ec20910629b2daf352e0a54979645effce2f644b", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c5ad0b075a1bf37c0dad43fbe763d1fa56b12c3f/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5ad0b075a1bf37c0dad43fbe763d1fa56b12c3f/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=c5ad0b075a1bf37c0dad43fbe763d1fa56b12c3f", "patch": "@@ -25,7 +25,7 @@ use crate::utils::paths;\n use crate::utils::{\n     clip, comparisons, differing_macro_contexts, higher, in_constant, in_macro_or_desugar, int_bits, last_path_segment,\n     match_def_path, match_path, multispan_sugg, same_tys, sext, snippet, snippet_opt, snippet_with_applicability,\n-    span_help_and_lint, span_lint, span_lint_and_sugg, span_lint_and_then, unsext,\n+    snippet_with_macro_callsite, span_help_and_lint, span_lint, span_lint_and_sugg, span_lint_and_then, unsext,\n };\n \n declare_clippy_lint! {\n@@ -467,15 +467,17 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LetUnitValue {\n                 if higher::is_from_for_desugar(local) {\n                     return;\n                 }\n-                span_lint(\n-                    cx,\n-                    LET_UNIT_VALUE,\n-                    stmt.span,\n-                    &format!(\n-                        \"this let-binding has unit value. Consider omitting `let {} =`\",\n-                        snippet(cx, local.pat.span, \"..\")\n-                    ),\n-                );\n+                span_lint_and_then(cx, LET_UNIT_VALUE, stmt.span, \"this let-binding has unit value\", |db| {\n+                    if let Some(expr) = &local.init {\n+                        let snip = snippet_with_macro_callsite(cx, expr.span, \"()\");\n+                        db.span_suggestion(\n+                            stmt.span,\n+                            \"omit the `let` binding\",\n+                            format!(\"{};\", snip),\n+                            Applicability::MachineApplicable, // snippet\n+                        );\n+                    }\n+                });\n             }\n         }\n     }"}]}