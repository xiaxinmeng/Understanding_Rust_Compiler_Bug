{"sha": "90c80e0c4d64e501acc0a40cdd558ad400820348", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwYzgwZTBjNGQ2NGU1MDFhY2MwYTQwY2RkNTU4YWQ0MDA4MjAzNDg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-31T22:08:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-31T22:08:32Z"}, "message": "Auto merge of #38708 - alexcrichton:add-distcheck, r=brson\n\nGate on distcheck on Travis\n\nThis commit adds a new entry to the Travis matrix to gate on distcheck, the illustrious test process that has historically taken *8 hours* to complete and also breaks all the time on nightly. By adding it to Travis we should hope to never see nightly breakage (like https://github.com/rust-lang/rust/issues/38690) because of this ever again!\n\n\"But wait, surely we can't wait 8 hours for all PRs!\" you might be thinking, and you are indeed correct. The distcheck added here is much more optimized for speed than the old buildbot instances for a number of reasons:\n\n* We're not building *two host compilers* beforehand. The current distcheck bot does a cross for i686 Linux and x86_64 Linux before it actually runs distcheck, building 6 compilers and LLVM twice. None of this is done in parallel as well (e.g. `-j1`). Not doing any of this work will be a huge win!\n* We're using sccache to compile LLVM, so it should be much faster. Distcheck on the bots didn't cache LLVM well and rebuilt it every time.\n\nAll in all, this version of \"distcheck\" should be exactly like other matrix entries that run tests except that it's a *little* slower to start as it has to create the source tarball then rebuild the build system in the distcheck dir. Overall this should be well under the 2 hours that Android is currently taking anyway.\n\nCloses https://github.com/rust-lang/rust/issues/38691", "tree": {"sha": "e1ff2b7e9232730e61b11d0649f558f8a0ced494", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1ff2b7e9232730e61b11d0649f558f8a0ced494"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90c80e0c4d64e501acc0a40cdd558ad400820348", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90c80e0c4d64e501acc0a40cdd558ad400820348", "html_url": "https://github.com/rust-lang/rust/commit/90c80e0c4d64e501acc0a40cdd558ad400820348", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90c80e0c4d64e501acc0a40cdd558ad400820348/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38bd207626fa46445d58404099b0a2f0bf8e0934", "url": "https://api.github.com/repos/rust-lang/rust/commits/38bd207626fa46445d58404099b0a2f0bf8e0934", "html_url": "https://github.com/rust-lang/rust/commit/38bd207626fa46445d58404099b0a2f0bf8e0934"}, {"sha": "4781eb315b7bcf11682d68aafac2ce4739bfe166", "url": "https://api.github.com/repos/rust-lang/rust/commits/4781eb315b7bcf11682d68aafac2ce4739bfe166", "html_url": "https://github.com/rust-lang/rust/commit/4781eb315b7bcf11682d68aafac2ce4739bfe166"}], "stats": {"total": 59, "additions": 52, "deletions": 7}, "files": [{"sha": "26cabf92bdac81d98ced0ba6cee456f199092458", "filename": ".travis.yml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/90c80e0c4d64e501acc0a40cdd558ad400820348/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/90c80e0c4d64e501acc0a40cdd558ad400820348/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=90c80e0c4d64e501acc0a40cdd558ad400820348", "patch": "@@ -26,6 +26,7 @@ matrix:\n     - env: IMAGE=x86_64-gnu-make\n     - env: IMAGE=x86_64-gnu-llvm-3.7 ALLOW_PR=1 RUST_BACKTRACE=1\n     - env: IMAGE=x86_64-musl\n+    - env: IMAGE=x86_64-gnu-distcheck\n \n     # OSX builders\n     - env: >"}, {"sha": "6db1afa54a625493c868ca3c419744c5ccc1124c", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/90c80e0c4d64e501acc0a40cdd558ad400820348/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90c80e0c4d64e501acc0a40cdd558ad400820348/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=90c80e0c4d64e501acc0a40cdd558ad400820348", "patch": "@@ -562,6 +562,7 @@ pub fn distcheck(build: &Build) {\n        .current_dir(&dir);\n     build.run(&mut cmd);\n     build.run(Command::new(\"./configure\")\n+                     .args(&build.config.configure_args)\n                      .current_dir(&dir));\n     build.run(Command::new(build_helper::make(&build.config.build))\n                      .arg(\"check\")"}, {"sha": "11c5b374ed9654d821f3e908387b32637bc24d47", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/90c80e0c4d64e501acc0a40cdd558ad400820348/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90c80e0c4d64e501acc0a40cdd558ad400820348/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=90c80e0c4d64e501acc0a40cdd558ad400820348", "patch": "@@ -94,6 +94,7 @@ pub struct Config {\n     pub nodejs: Option<PathBuf>,\n     pub gdb: Option<PathBuf>,\n     pub python: Option<PathBuf>,\n+    pub configure_args: Vec<String>,\n }\n \n /// Per-target configuration stored in the global configuration structure.\n@@ -519,6 +520,11 @@ impl Config {\n                 \"CFG_ENABLE_SCCACHE\" if value == \"1\" => {\n                     self.ccache = Some(\"sccache\".to_string());\n                 }\n+                \"CFG_CONFIGURE_ARGS\" if value.len() > 0 => {\n+                    self.configure_args = value.split_whitespace()\n+                                               .map(|s| s.to_string())\n+                                               .collect();\n+                }\n                 _ => {}\n             }\n         }"}, {"sha": "428c3da77648ca762df9690121b36afaddd8cd8a", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/90c80e0c4d64e501acc0a40cdd558ad400820348/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90c80e0c4d64e501acc0a40cdd558ad400820348/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=90c80e0c4d64e501acc0a40cdd558ad400820348", "patch": "@@ -397,6 +397,13 @@ pub fn rust_src(build: &Build, host: &str) {\n             }\n         }\n \n+        // If we're inside the vendor directory then we need to preserve\n+        // everything as Cargo's vendoring support tracks all checksums and we\n+        // want to be sure we don't accidentally leave out a file.\n+        if spath.contains(\"vendor\") {\n+            return true\n+        }\n+\n         let excludes = [\n             \"CVS\", \"RCS\", \"SCCS\", \".git\", \".gitignore\", \".gitmodules\",\n             \".gitattributes\", \".cvsignore\", \".svn\", \".arch-ids\", \"{arch}\","}, {"sha": "2ab3776ada0966061561d00ba983b30011863a08", "filename": "src/bootstrap/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90c80e0c4d64e501acc0a40cdd558ad400820348/src%2Fbootstrap%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90c80e0c4d64e501acc0a40cdd558ad400820348/src%2Fbootstrap%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Futil.rs?ref=90c80e0c4d64e501acc0a40cdd558ad400820348", "patch": "@@ -76,9 +76,9 @@ pub fn cp_r(src: &Path, dst: &Path) {\n /// Copies the `src` directory recursively to `dst`. Both are assumed to exist\n /// when this function is called. Unwanted files or directories can be skipped\n /// by returning `false` from the filter function.\n-pub fn cp_filtered<F: Fn(&Path) -> bool>(src: &Path, dst: &Path, filter: &F) {\n+pub fn cp_filtered(src: &Path, dst: &Path, filter: &Fn(&Path) -> bool) {\n     // Inner function does the actual work\n-    fn recurse<F: Fn(&Path) -> bool>(src: &Path, dst: &Path, relative: &Path, filter: &F) {\n+    fn recurse(src: &Path, dst: &Path, relative: &Path, filter: &Fn(&Path) -> bool) {\n         for f in t!(fs::read_dir(src)) {\n             let f = t!(f);\n             let path = f.path();"}, {"sha": "880c70866b0f46148aefd4b6e7989054cc66fd4d", "filename": "src/ci/docker/x86_64-gnu-distcheck/Dockerfile", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/90c80e0c4d64e501acc0a40cdd558ad400820348/src%2Fci%2Fdocker%2Fx86_64-gnu-distcheck%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/90c80e0c4d64e501acc0a40cdd558ad400820348/src%2Fci%2Fdocker%2Fx86_64-gnu-distcheck%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-distcheck%2FDockerfile?ref=90c80e0c4d64e501acc0a40cdd558ad400820348", "patch": "@@ -0,0 +1,26 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  git \\\n+  cmake \\\n+  sudo \\\n+  gdb \\\n+  xz-utils\n+\n+ENV SCCACHE_DIGEST=7237e38e029342fa27b7ac25412cb9d52554008b12389727320bd533fd7f05b6a96d55485f305caf95e5c8f5f97c3313e10012ccad3e752aba2518f3522ba783\n+RUN curl -L https://api.pub.build.mozilla.org/tooltool/sha512/$SCCACHE_DIGEST | \\\n+      tar xJf - -C /usr/local/bin --strip-components=1\n+\n+RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n+    dpkg -i dumb-init_*.deb && \\\n+    rm dumb-init_*.deb\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n+\n+ENV RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu\n+ENV XPY_RUN test distcheck"}, {"sha": "3dc3cf915019341036f8dcf910a54d1f355e13e3", "filename": "src/ci/run.sh", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/90c80e0c4d64e501acc0a40cdd558ad400820348/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/90c80e0c4d64e501acc0a40cdd558ad400820348/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=90c80e0c4d64e501acc0a40cdd558ad400820348", "patch": "@@ -43,10 +43,14 @@ else\n     ncpus=$(nproc)\n fi\n \n-make -j $ncpus tidy\n-make -j $ncpus\n-if [ ! -z \"$XPY_CHECK\" ]; then\n-  exec python2.7 $SRC/x.py $XPY_CHECK\n+if [ ! -z \"$XPY_RUN\" ]; then\n+  exec python2.7 $SRC/x.py $XPY_RUN\n else\n-  exec make $RUST_CHECK_TARGET -j $ncpus\n+  make -j $ncpus tidy\n+  make -j $ncpus\n+  if [ ! -z \"$XPY_CHECK\" ]; then\n+    exec python2.7 $SRC/x.py $XPY_CHECK\n+  else\n+    exec make $RUST_CHECK_TARGET -j $ncpus\n+  fi\n fi"}]}