{"sha": "d30bbfda74346c5007174d8bda93e9583c166a4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzMGJiZmRhNzQzNDZjNTAwNzE3NGQ4YmRhOTNlOTU4M2MxNjZhNGM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-28T13:24:06Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-28T13:24:06Z"}, "message": "make a bunch of stuff private", "tree": {"sha": "939ad7d280946d7547424fc273c356f5fdf9bb72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/939ad7d280946d7547424fc273c356f5fdf9bb72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d30bbfda74346c5007174d8bda93e9583c166a4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d30bbfda74346c5007174d8bda93e9583c166a4c", "html_url": "https://github.com/rust-lang/rust/commit/d30bbfda74346c5007174d8bda93e9583c166a4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d30bbfda74346c5007174d8bda93e9583c166a4c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e89700f9678d3797c09f0a397b7b67fe9c6f5e9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e89700f9678d3797c09f0a397b7b67fe9c6f5e9f", "html_url": "https://github.com/rust-lang/rust/commit/e89700f9678d3797c09f0a397b7b67fe9c6f5e9f"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "3ae83d8cbe971b214309af6125654990af07b8ea", "filename": "crates/ra_hir/src/module/mod.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d30bbfda74346c5007174d8bda93e9583c166a4c/crates%2Fra_hir%2Fsrc%2Fmodule%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d30bbfda74346c5007174d8bda93e9583c166a4c/crates%2Fra_hir%2Fsrc%2Fmodule%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmodule%2Fmod.rs?ref=d30bbfda74346c5007174d8bda93e9583c166a4c", "patch": "@@ -26,8 +26,7 @@ pub use self::nameres::ModuleScope;\n pub struct Module {\n     tree: Arc<ModuleTree>,\n     source_root_id: SourceRootId,\n-    //TODO: make private\n-    pub module_id: ModuleId,\n+    module_id: ModuleId,\n }\n \n impl Module {\n@@ -122,7 +121,6 @@ impl Module {\n     }\n \n     /// `name` is `None` for the crate's root module\n-    #[allow(unused)]\n     pub fn name(&self) -> Option<SmolStr> {\n         let link = self.module_id.parent_link(&self.tree)?;\n         Some(link.name(&self.tree))\n@@ -218,7 +216,7 @@ pub enum ModuleSource {\n \n /// An owned syntax node for a module. Unlike `ModuleSource`,\n /// this holds onto the AST for the whole file.\n-pub enum ModuleSourceNode {\n+pub(crate) enum ModuleSourceNode {\n     SourceFile(ast::SourceFileNode),\n     Module(ast::ModuleNode),\n }\n@@ -338,7 +336,7 @@ impl ModuleSource {\n         }\n     }\n \n-    pub fn resolve(self, db: &impl HirDatabase) -> ModuleSourceNode {\n+    pub(crate) fn resolve(self, db: &impl HirDatabase) -> ModuleSourceNode {\n         match self {\n             ModuleSource::SourceFile(file_id) => {\n                 let syntax = db.source_file(file_id);"}, {"sha": "6445d53492e7506bbb8e317423155869f80cb492", "filename": "crates/ra_hir/src/module/nameres.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d30bbfda74346c5007174d8bda93e9583c166a4c/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d30bbfda74346c5007174d8bda93e9583c166a4c/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs?ref=d30bbfda74346c5007174d8bda93e9583c166a4c", "patch": "@@ -44,7 +44,7 @@ pub struct ItemMap {\n \n #[derive(Debug, Default, PartialEq, Eq, Clone)]\n pub struct ModuleScope {\n-    pub items: FxHashMap<SmolStr, Resolution>,\n+    items: FxHashMap<SmolStr, Resolution>,\n }\n \n impl ModuleScope {\n@@ -200,11 +200,11 @@ impl ModuleItem {\n }\n \n pub(crate) struct Resolver<'a, DB> {\n-    pub db: &'a DB,\n-    pub input: &'a FxHashMap<ModuleId, Arc<InputModuleItems>>,\n-    pub source_root: SourceRootId,\n-    pub module_tree: Arc<ModuleTree>,\n-    pub result: ItemMap,\n+    pub(crate) db: &'a DB,\n+    pub(crate) input: &'a FxHashMap<ModuleId, Arc<InputModuleItems>>,\n+    pub(crate) source_root: SourceRootId,\n+    pub(crate) module_tree: Arc<ModuleTree>,\n+    pub(crate) result: ItemMap,\n }\n \n impl<'a, DB> Resolver<'a, DB>"}]}