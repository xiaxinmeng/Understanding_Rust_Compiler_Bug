{"sha": "2436d7374caf1e25bfa8bacfb94c85d6d142332c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0MzZkNzM3NGNhZjFlMjViZmE4YmFjZmI5NGM4NWQ2ZDE0MjMzMmM=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-02-19T18:00:25Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-02-20T16:40:03Z"}, "message": "Extract out error message generation.", "tree": {"sha": "431992e52cfe54dca9f31ee6a44f05e17705ac18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/431992e52cfe54dca9f31ee6a44f05e17705ac18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2436d7374caf1e25bfa8bacfb94c85d6d142332c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2436d7374caf1e25bfa8bacfb94c85d6d142332c", "html_url": "https://github.com/rust-lang/rust/commit/2436d7374caf1e25bfa8bacfb94c85d6d142332c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2436d7374caf1e25bfa8bacfb94c85d6d142332c/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a97aed739b84df8d3bdd24e223dcd504e7e92615", "url": "https://api.github.com/repos/rust-lang/rust/commits/a97aed739b84df8d3bdd24e223dcd504e7e92615", "html_url": "https://github.com/rust-lang/rust/commit/a97aed739b84df8d3bdd24e223dcd504e7e92615"}], "stats": {"total": 54, "additions": 21, "deletions": 33}, "files": [{"sha": "11a777d5fe444cb2c5a0f1a4187b7cd4fcdb4c2e", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 33, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/2436d7374caf1e25bfa8bacfb94c85d6d142332c/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2436d7374caf1e25bfa8bacfb94c85d6d142332c/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=2436d7374caf1e25bfa8bacfb94c85d6d142332c", "patch": "@@ -21,7 +21,6 @@ use super::{\n     SelectionContext,\n     SelectionError,\n     ObjectSafetyViolation,\n-    MethodViolationCode,\n };\n \n use fmt_macros::{Parser, Piece, Position};\n@@ -679,38 +678,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n             if !reported_violations.insert(violation.clone()) {\n                 continue;\n             }\n-            let buf;\n-            let note = match violation {\n-                ObjectSafetyViolation::SizedSelf => {\n-                    \"the trait cannot require that `Self : Sized`\"\n-                }\n-\n-                ObjectSafetyViolation::SupertraitSelf => {\n-                    \"the trait cannot use `Self` as a type parameter \\\n-                         in the supertrait listing\"\n-                }\n-\n-                ObjectSafetyViolation::Method(name,\n-                                              MethodViolationCode::StaticMethod) => {\n-                    buf = format!(\"method `{}` has no receiver\", name);\n-                    &buf\n-                }\n-\n-                ObjectSafetyViolation::Method(name,\n-                                              MethodViolationCode::ReferencesSelf) => {\n-                    buf = format!(\"method `{}` references the `Self` type \\\n-                                       in its arguments or return type\",\n-                                  name);\n-                    &buf\n-                }\n-\n-                ObjectSafetyViolation::Method(name,\n-                                              MethodViolationCode::Generic) => {\n-                    buf = format!(\"method `{}` has generic type parameters\", name);\n-                    &buf\n-                }\n-            };\n-            err.note(note);\n+            err.note(&violation.error_msg());\n         }\n         err\n     }"}, {"sha": "2ebe0d459fab1453451b02f4bc7fd208224ac76b", "filename": "src/librustc/traits/object_safety.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2436d7374caf1e25bfa8bacfb94c85d6d142332c/src%2Flibrustc%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2436d7374caf1e25bfa8bacfb94c85d6d142332c/src%2Flibrustc%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fobject_safety.rs?ref=2436d7374caf1e25bfa8bacfb94c85d6d142332c", "patch": "@@ -23,6 +23,7 @@ use hir::def_id::DefId;\n use traits;\n use ty::{self, Ty, TyCtxt, TypeFoldable};\n use ty::subst::Substs;\n+use std::borrow::Cow;\n use syntax::ast;\n \n #[derive(Clone, Debug, PartialEq, Eq, Hash)]\n@@ -38,6 +39,25 @@ pub enum ObjectSafetyViolation {\n     Method(ast::Name, MethodViolationCode),\n }\n \n+impl ObjectSafetyViolation {\n+    pub fn error_msg(&self) -> Cow<'static, str> {\n+        match *self {\n+            ObjectSafetyViolation::SizedSelf =>\n+                \"the trait cannot require that `Self : Sized`\".into(),\n+            ObjectSafetyViolation::SupertraitSelf =>\n+                \"the trait cannot use `Self` as a type parameter \\\n+                 in the supertrait listing\".into(),\n+            ObjectSafetyViolation::Method(name, MethodViolationCode::StaticMethod) =>\n+                format!(\"method `{}` has no receiver\", name).into(),\n+            ObjectSafetyViolation::Method(name, MethodViolationCode::ReferencesSelf) =>\n+                format!(\"method `{}` references the `Self` type \\\n+                         in its arguments or return type\", name).into(),\n+            ObjectSafetyViolation::Method(name, MethodViolationCode::Generic) =>\n+                format!(\"method `{}` has generic type parameters\", name).into(),\n+        }\n+    }\n+}\n+\n /// Reasons a method might not be object-safe.\n #[derive(Copy, Clone, Debug, PartialEq, Eq, Hash)]\n pub enum MethodViolationCode {"}]}