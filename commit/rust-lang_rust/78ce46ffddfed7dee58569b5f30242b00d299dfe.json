{"sha": "78ce46ffddfed7dee58569b5f30242b00d299dfe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4Y2U0NmZmZGRmZWQ3ZGVlNTg1NjliNWYzMDI0MmIwMGQyOTlkZmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-26T00:14:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-26T00:14:39Z"}, "message": "Auto merge of #28612 - gandro:targetvendor, r=alexcrichton\n\nThis adds a new target property, `target_vendor`. It is to be be used as a matcher for conditional compilation. The vendor is part of the [autoconf target triple](http://llvm.org/docs/doxygen/html/classllvm_1_1Triple.html#details): `<arch><sub>-<vendor>-<os>-<env>`. `arch`, `target_os` and `target_env` are already supported by Rust.\r\n\r\nThis change was suggested in PR #28593. It enables conditional compilation based on the vendor. This is needed for the rumprun target, which needs to match against both, target_os and target_vendor.\r\n\r\nThe default value for `target_vendor` is \"unknown\", \"apple\" and \"pc\" are other common values.\r\n\r\nMatching against the `target_vendor` is introduced behind the feature gate `#![feature(cfg_target_vendor)]`.\r\n\r\nThis is the first time I messed around with rustc internals. I just added the my code where I found the existing `target_*` variables, hopefully I haven't missed anything. Please review with care. :)\r\n\r\nr? @alexcrichton", "tree": {"sha": "ae80a901ab56af79be5338bdb61cf2bdffc6a66b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae80a901ab56af79be5338bdb61cf2bdffc6a66b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78ce46ffddfed7dee58569b5f30242b00d299dfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78ce46ffddfed7dee58569b5f30242b00d299dfe", "html_url": "https://github.com/rust-lang/rust/commit/78ce46ffddfed7dee58569b5f30242b00d299dfe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78ce46ffddfed7dee58569b5f30242b00d299dfe/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69f27c856b3e18e54b9a48412a918c91fe8b08e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/69f27c856b3e18e54b9a48412a918c91fe8b08e7", "html_url": "https://github.com/rust-lang/rust/commit/69f27c856b3e18e54b9a48412a918c91fe8b08e7"}, {"sha": "abfedb7d16fc536e85e271f945195335ca0ba9e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/abfedb7d16fc536e85e271f945195335ca0ba9e0", "html_url": "https://github.com/rust-lang/rust/commit/abfedb7d16fc536e85e271f945195335ca0ba9e0"}], "stats": {"total": 98, "additions": 95, "deletions": 3}, "files": [{"sha": "eeae2de827ae655f01488833ade41e49c27f190e", "filename": "src/doc/reference.md", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -2093,6 +2093,8 @@ The following configurations must be defined by the implementation:\n * `target_pointer_width = \"...\"` - Target pointer width in bits. This is set\n   to `\"32\"` for targets with 32-bit pointers, and likewise set to `\"64\"` for\n   64-bit pointers.\n+* `target_vendor = \"...\"` - Vendor of the target, for example `apple`, `pc`, or\n+  simply `\"unknown\"`.\n * `test` - Enabled when compiling the test harness (using the `--test` flag).\n * `unix` - See `target_family`.\n * `windows` - See `target_family`.\n@@ -2269,7 +2271,7 @@ The currently implemented features of the reference compiler are:\n * `advanced_slice_patterns` - See the [match expressions](#match-expressions)\n                               section for discussion; the exact semantics of\n                               slice patterns are subject to change, so some types\n-\t\t\t      are still unstable.\n+                              are still unstable.\n \n * `slice_patterns` - OK, actually, slice patterns are just scary and\n                      completely unstable.\n@@ -2290,6 +2292,9 @@ The currently implemented features of the reference compiler are:\n * `box_syntax` - Allows use of `box` expressions, the exact semantics of which\n                  is subject to change.\n \n+* `cfg_target_vendor` - Allows conditional compilation using the `target_vendor`\n+                        matcher which is subject to change.\n+\n * `concat_idents` - Allows use of the `concat_idents` macro, which is in many\n                     ways insufficient for concatenating identifiers, and may be\n                     removed entirely for something more wholesome."}, {"sha": "dcc4ca137ead99fd72bc3e09088e63cc9408af90", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -617,6 +617,7 @@ pub fn default_configuration(sess: &Session) -> ast::CrateConfig {\n     let wordsz = &sess.target.target.target_pointer_width;\n     let os = &sess.target.target.target_os;\n     let env = &sess.target.target.target_env;\n+    let vendor = &sess.target.target.target_vendor;\n \n     let fam = match sess.target.target.options.is_like_windows {\n         true  => InternedString::new(\"windows\"),\n@@ -632,6 +633,7 @@ pub fn default_configuration(sess: &Session) -> ast::CrateConfig {\n          mk(InternedString::new(\"target_endian\"), intern(end)),\n          mk(InternedString::new(\"target_pointer_width\"), intern(wordsz)),\n          mk(InternedString::new(\"target_env\"), intern(env)),\n+         mk(InternedString::new(\"target_vendor\"), intern(vendor)),\n     ];\n     if sess.opts.debug_assertions {\n         ret.push(attr::mk_word_item(InternedString::new(\"debug_assertions\")));"}, {"sha": "e1242560e62c76b167568aaf797b7a45bd3d6500", "filename": "src/librustc_back/target/aarch64_apple_ios.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Faarch64_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Faarch64_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Faarch64_apple_ios.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -19,6 +19,7 @@ pub fn target() -> Target {\n         arch: \"aarch64\".to_string(),\n         target_os: \"ios\".to_string(),\n         target_env: \"\".to_string(),\n+        target_vendor: \"apple\".to_string(),\n         options: TargetOptions {\n             features: \"+neon,+fp-armv8,+cyclone\".to_string(),\n             eliminate_frame_pointer: false,"}, {"sha": "c6901a4cc4270942b16a7a194241732389cac70e", "filename": "src/librustc_back/target/aarch64_linux_android.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Faarch64_linux_android.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Faarch64_linux_android.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Faarch64_linux_android.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -18,6 +18,7 @@ pub fn target() -> Target {\n         arch: \"aarch64\".to_string(),\n         target_os: \"android\".to_string(),\n         target_env: \"\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n         options: super::android_base::opts(),\n     }\n }"}, {"sha": "51abab6609a86c52997e73b576723a21a4204833", "filename": "src/librustc_back/target/aarch64_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_linux_gnu.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -19,6 +19,7 @@ pub fn target() -> Target {\n         target_env: \"gnu\".to_string(),\n         arch: \"aarch64\".to_string(),\n         target_os: \"linux\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n         options: base,\n     }\n }"}, {"sha": "732f1a353a8bd719c1f363e5fec3c02c9837765d", "filename": "src/librustc_back/target/arm_linux_androideabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Farm_linux_androideabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Farm_linux_androideabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_linux_androideabi.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -21,6 +21,7 @@ pub fn target() -> Target {\n         arch: \"arm\".to_string(),\n         target_os: \"android\".to_string(),\n         target_env: \"gnu\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n         options: base,\n     }\n }"}, {"sha": "7c35b43fd4b7544ea442bbed0273daffb491af97", "filename": "src/librustc_back/target/arm_unknown_linux_gnueabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_gnueabi.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -19,6 +19,7 @@ pub fn target() -> Target {\n         arch: \"arm\".to_string(),\n         target_os: \"linux\".to_string(),\n         target_env: \"gnueabi\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n \n         options: TargetOptions {\n             features: \"+v6\".to_string(),"}, {"sha": "a99ec45996c2e833c2b14505f4471581aa7b2532", "filename": "src/librustc_back/target/arm_unknown_linux_gnueabihf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_gnueabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_gnueabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_gnueabihf.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -19,6 +19,7 @@ pub fn target() -> Target {\n         arch: \"arm\".to_string(),\n         target_os: \"linux\".to_string(),\n         target_env: \"gnueabihf\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n \n         options: TargetOptions {\n             features: \"+v6,+vfp2\".to_string(),"}, {"sha": "d30648002912e6831cf8bd4ff36f7e8bc33e8b95", "filename": "src/librustc_back/target/armv7_apple_ios.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Farmv7_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Farmv7_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farmv7_apple_ios.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -19,6 +19,7 @@ pub fn target() -> Target {\n         arch: \"arm\".to_string(),\n         target_os: \"ios\".to_string(),\n         target_env: \"\".to_string(),\n+        target_vendor: \"apple\".to_string(),\n         options: TargetOptions {\n             features: \"+v7,+vfp3,+neon\".to_string(),\n             .. opts(Arch::Armv7)"}, {"sha": "66ec6efca0e6700a925f60a830b0631eab6cb549", "filename": "src/librustc_back/target/armv7s_apple_ios.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Farmv7s_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Farmv7s_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farmv7s_apple_ios.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -19,6 +19,7 @@ pub fn target() -> Target {\n         arch: \"arm\".to_string(),\n         target_os: \"ios\".to_string(),\n         target_env: \"\".to_string(),\n+        target_vendor: \"apple\".to_string(),\n         options: TargetOptions {\n             features: \"+v7,+vfp4,+neon\".to_string(),\n             .. opts(Arch::Armv7s)"}, {"sha": "52b5901192c657ae436d6bd9d46a2d86c1b9645d", "filename": "src/librustc_back/target/i386_apple_ios.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fi386_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fi386_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi386_apple_ios.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -19,6 +19,7 @@ pub fn target() -> Target {\n         arch: \"x86\".to_string(),\n         target_os: \"ios\".to_string(),\n         target_env: \"\".to_string(),\n+        target_vendor: \"apple\".to_string(),\n         options: opts(Arch::I386)\n     }\n }"}, {"sha": "98f4654ecab41ab9390d71e2443ed6b8dcf2e6c7", "filename": "src/librustc_back/target/i686_apple_darwin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fi686_apple_darwin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fi686_apple_darwin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_apple_darwin.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -22,6 +22,7 @@ pub fn target() -> Target {\n         arch: \"x86\".to_string(),\n         target_os: \"macos\".to_string(),\n         target_env: \"\".to_string(),\n+        target_vendor: \"apple\".to_string(),\n         options: base,\n     }\n }"}, {"sha": "f548fdad3cbed9d81fd6f6a76007ea3d838ccccb", "filename": "src/librustc_back/target/i686_linux_android.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fi686_linux_android.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fi686_linux_android.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_linux_android.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -21,6 +21,7 @@ pub fn target() -> Target {\n         arch: \"x86\".to_string(),\n         target_os: \"android\".to_string(),\n         target_env: \"gnu\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n         options: base,\n     }\n }"}, {"sha": "c825f6043d27b3adf4fa7c40088eb283ec7acb3e", "filename": "src/librustc_back/target/i686_pc_windows_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fi686_pc_windows_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fi686_pc_windows_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_pc_windows_gnu.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -30,6 +30,7 @@ pub fn target() -> Target {\n         arch: \"x86\".to_string(),\n         target_os: \"windows\".to_string(),\n         target_env: \"gnu\".to_string(),\n+        target_vendor: \"pc\".to_string(),\n         options: options,\n     }\n }"}, {"sha": "96b2d37ab2088135a374386130487e12905b1533", "filename": "src/librustc_back/target/i686_pc_windows_msvc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fi686_pc_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fi686_pc_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_pc_windows_msvc.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -21,6 +21,7 @@ pub fn target() -> Target {\n         arch: \"x86\".to_string(),\n         target_os: \"windows\".to_string(),\n         target_env: \"msvc\".to_string(),\n+        target_vendor: \"pc\".to_string(),\n         options: base,\n     }\n }"}, {"sha": "32a15b9f2d4d10c0ce3ab290a98ce1543197f17f", "filename": "src/librustc_back/target/i686_unknown_dragonfly.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_dragonfly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_dragonfly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_dragonfly.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -22,6 +22,7 @@ pub fn target() -> Target {\n         arch: \"x86\".to_string(),\n         target_os: \"dragonfly\".to_string(),\n         target_env: \"\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n         options: base,\n     }\n }"}, {"sha": "812ba11cd796b3ae39a7c8511c7f64f1aaaef2fc", "filename": "src/librustc_back/target/i686_unknown_freebsd.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_freebsd.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -22,6 +22,7 @@ pub fn target() -> Target {\n         arch: \"x86\".to_string(),\n         target_os: \"freebsd\".to_string(),\n         target_env: \"\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n         options: base,\n     }\n }"}, {"sha": "ac2af0c64fd6ad2b1239860af8803b38f277022c", "filename": "src/librustc_back/target/i686_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_linux_gnu.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -22,6 +22,7 @@ pub fn target() -> Target {\n         arch: \"x86\".to_string(),\n         target_os: \"linux\".to_string(),\n         target_env: \"gnu\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n         options: base,\n     }\n }"}, {"sha": "357499c48ec7a5d9ae56c7b698b99aee5b4b3086", "filename": "src/librustc_back/target/mips_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fmips_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fmips_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmips_unknown_linux_gnu.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -18,6 +18,7 @@ pub fn target() -> Target {\n         arch: \"mips\".to_string(),\n         target_os: \"linux\".to_string(),\n         target_env: \"gnu\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n         options: super::linux_base::opts()\n     }\n }"}, {"sha": "3d0088add0d537d5d6703a7f920206e493bedf66", "filename": "src/librustc_back/target/mipsel_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_gnu.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -18,6 +18,7 @@ pub fn target() -> Target {\n         arch: \"mips\".to_string(),\n         target_os: \"linux\".to_string(),\n         target_env: \"gnu\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n \n         options: super::linux_base::opts()\n     }"}, {"sha": "b5847b98af1f6cff00b2934586ed6d284a53f94c", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -77,6 +77,8 @@ pub struct Target {\n     pub target_os: String,\n     /// Environment name to use for conditional compilation.\n     pub target_env: String,\n+    /// Vendor name to use for conditional compilation.\n+    pub target_vendor: String,\n     /// Architecture to use for ABI considerations. Valid options: \"x86\", \"x86_64\", \"arm\",\n     /// \"aarch64\", \"mips\", and \"powerpc\". \"mips\" includes \"mipsel\".\n     pub arch: String,\n@@ -260,14 +262,20 @@ impl Target {\n             }\n         };\n \n+        let get_opt_field = |name: &str, default: &str| {\n+            obj.find(name).and_then(|s| s.as_string())\n+               .map(|s| s.to_string())\n+               .unwrap_or(default.to_string())\n+        };\n+\n         let mut base = Target {\n             llvm_target: get_req_field(\"llvm-target\"),\n             target_endian: get_req_field(\"target-endian\"),\n             target_pointer_width: get_req_field(\"target-pointer-width\"),\n             arch: get_req_field(\"arch\"),\n             target_os: get_req_field(\"os\"),\n-            target_env: obj.find(\"env\").and_then(|s| s.as_string())\n-                           .map(|s| s.to_string()).unwrap_or(String::new()),\n+            target_env: get_opt_field(\"env\", \"\"),\n+            target_vendor: get_opt_field(\"vendor\", \"unknown\"),\n             options: Default::default(),\n         };\n "}, {"sha": "6664abf5458b715253ba2177079de42e9bcd6358", "filename": "src/librustc_back/target/powerpc_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fpowerpc_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fpowerpc_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fpowerpc_unknown_linux_gnu.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -21,6 +21,7 @@ pub fn target() -> Target {\n         arch: \"powerpc\".to_string(),\n         target_os: \"linux\".to_string(),\n         target_env: \"gnu\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n         options: base,\n     }\n }"}, {"sha": "3e19e1482909e2b85e317755c2b5f5e70e71f2f5", "filename": "src/librustc_back/target/x86_64_apple_darwin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_apple_darwin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_apple_darwin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_apple_darwin.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -23,6 +23,7 @@ pub fn target() -> Target {\n         arch: \"x86_64\".to_string(),\n         target_os: \"macos\".to_string(),\n         target_env: \"\".to_string(),\n+        target_vendor: \"apple\".to_string(),\n         options: base,\n     }\n }"}, {"sha": "63234c0baee8cf14055b360dee9a57b81d1e0afb", "filename": "src/librustc_back/target/x86_64_apple_ios.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_apple_ios.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -19,6 +19,7 @@ pub fn target() -> Target {\n         arch: \"x86_64\".to_string(),\n         target_os: \"ios\".to_string(),\n         target_env: \"\".to_string(),\n+        target_vendor: \"apple\".to_string(),\n         options: opts(Arch::X86_64)\n     }\n }"}, {"sha": "2bd363e46bb1cf7c711880ced70b8e8b44c514e2", "filename": "src/librustc_back/target/x86_64_pc_windows_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_pc_windows_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_pc_windows_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_pc_windows_gnu.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -25,6 +25,7 @@ pub fn target() -> Target {\n         arch: \"x86_64\".to_string(),\n         target_os: \"windows\".to_string(),\n         target_env: \"gnu\".to_string(),\n+        target_vendor: \"pc\".to_string(),\n         options: base,\n     }\n }"}, {"sha": "5030a1ff4483baaf84ccbb7c6b8af9c0ab8f505f", "filename": "src/librustc_back/target/x86_64_pc_windows_msvc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_pc_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_pc_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_pc_windows_msvc.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -22,6 +22,7 @@ pub fn target() -> Target {\n         arch: \"x86_64\".to_string(),\n         target_os: \"windows\".to_string(),\n         target_env: \"msvc\".to_string(),\n+        target_vendor: \"pc\".to_string(),\n         options: base,\n     }\n }"}, {"sha": "04456b1b2714a495a786a7d3ac3270425cad6e7a", "filename": "src/librustc_back/target/x86_64_unknown_bitrig.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_bitrig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_bitrig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_bitrig.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -21,6 +21,7 @@ pub fn target() -> Target {\n         arch: \"x86_64\".to_string(),\n         target_os: \"bitrig\".to_string(),\n         target_env: \"\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n         options: base,\n     }\n }"}, {"sha": "62654176aa486738201c7b3b7fab3d0e62307d87", "filename": "src/librustc_back/target/x86_64_unknown_dragonfly.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_dragonfly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_dragonfly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_dragonfly.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -22,6 +22,7 @@ pub fn target() -> Target {\n         arch: \"x86_64\".to_string(),\n         target_os: \"dragonfly\".to_string(),\n         target_env: \"\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n         options: base,\n     }\n }"}, {"sha": "888b7f58bffca9264418b961cfb6dcd5d56ab1c0", "filename": "src/librustc_back/target/x86_64_unknown_freebsd.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_freebsd.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -22,6 +22,7 @@ pub fn target() -> Target {\n         arch: \"x86_64\".to_string(),\n         target_os: \"freebsd\".to_string(),\n         target_env: \"\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n         options: base,\n     }\n }"}, {"sha": "e3ccd9c4c7e7dd8ae7c9e68e316b64c3de6bdee9", "filename": "src/librustc_back/target/x86_64_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_linux_gnu.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -22,6 +22,7 @@ pub fn target() -> Target {\n         arch: \"x86_64\".to_string(),\n         target_os: \"linux\".to_string(),\n         target_env: \"gnu\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n         options: base,\n     }\n }"}, {"sha": "a5ac78cd5b6081850a008bb98acbd5dd5cb4ad0b", "filename": "src/librustc_back/target/x86_64_unknown_linux_musl.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_linux_musl.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -76,6 +76,7 @@ pub fn target() -> Target {\n         arch: \"x86_64\".to_string(),\n         target_os: \"linux\".to_string(),\n         target_env: \"musl\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n         options: base,\n     }\n }"}, {"sha": "4101fabe73480eb518ed67387a298a7592105a5e", "filename": "src/librustc_back/target/x86_64_unknown_netbsd.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_netbsd.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -21,6 +21,7 @@ pub fn target() -> Target {\n         arch: \"x86_64\".to_string(),\n         target_os: \"netbsd\".to_string(),\n         target_env: \"\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n         options: base,\n     }\n }"}, {"sha": "07a1e137b4196b798c8fd50dd16ced5a3529e460", "filename": "src/librustc_back/target/x86_64_unknown_openbsd.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_openbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_openbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_openbsd.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -21,6 +21,7 @@ pub fn target() -> Target {\n         arch: \"x86_64\".to_string(),\n         target_os: \"openbsd\".to_string(),\n         target_env: \"\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n         options: base,\n     }\n }"}, {"sha": "6643dad6a68e6e72436cf766bd37327d643f858b", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -203,6 +203,9 @@ const KNOWN_FEATURES: &'static [(&'static str, &'static str, Option<u32>, Status\n \n     // allow `#[omit_gdb_pretty_printer_section]`\n     (\"omit_gdb_pretty_printer_section\", \"1.5.0\", None, Active),\n+\n+    // Allows cfg(target_vendor = \"...\").\n+    (\"cfg_target_vendor\", \"1.5.0\", None, Active),\n ];\n // (changing above list without updating src/doc/reference.md makes @cmr sad)\n \n@@ -377,6 +380,7 @@ macro_rules! cfg_fn {\n const GATED_CFGS: &'static [(&'static str, &'static str, fn(&Features) -> bool)] = &[\n     // (name in cfg, feature, function to check if the feature is enabled)\n     (\"target_feature\", \"cfg_target_feature\", cfg_fn!(|x| x.cfg_target_feature)),\n+    (\"target_vendor\", \"cfg_target_vendor\", cfg_fn!(|x| x.cfg_target_vendor)),\n ];\n \n #[derive(Debug, Eq, PartialEq)]\n@@ -471,6 +475,7 @@ pub struct Features {\n     pub default_type_parameter_fallback: bool,\n     pub type_macros: bool,\n     pub cfg_target_feature: bool,\n+    pub cfg_target_vendor: bool,\n     pub augmented_assignments: bool,\n }\n \n@@ -500,6 +505,7 @@ impl Features {\n             default_type_parameter_fallback: false,\n             type_macros: false,\n             cfg_target_feature: false,\n+            cfg_target_vendor: false,\n             augmented_assignments: false,\n         }\n     }\n@@ -1069,6 +1075,7 @@ fn check_crate_inner<F>(cm: &CodeMap, span_handler: &SpanHandler,\n         default_type_parameter_fallback: cx.has_feature(\"default_type_parameter_fallback\"),\n         type_macros: cx.has_feature(\"type_macros\"),\n         cfg_target_feature: cx.has_feature(\"cfg_target_feature\"),\n+        cfg_target_vendor: cx.has_feature(\"cfg_target_vendor\"),\n         augmented_assignments: cx.has_feature(\"augmented_assignments\"),\n     }\n }"}, {"sha": "e68a84d35534f4d46112c2df65b716e1db532fcf", "filename": "src/test/compile-fail/feature-gate-cfg-target-vendor.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Ftest%2Fcompile-fail%2Ffeature-gate-cfg-target-vendor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Ftest%2Fcompile-fail%2Ffeature-gate-cfg-target-vendor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-cfg-target-vendor.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[cfg(target_vendor = \"x\")] //~ ERROR `cfg(target_vendor)` is experimental\n+#[cfg_attr(target_vendor = \"x\", x)] //~ ERROR `cfg(target_vendor)` is experimental\n+struct Foo(u64, u64);\n+\n+#[cfg(not(any(all(target_vendor = \"x\"))))] //~ ERROR `cfg(target_vendor)` is experimental\n+fn foo() {}\n+\n+fn main() {\n+    cfg!(target_vendor = \"x\");\n+    //~^ ERROR `cfg(target_vendor)` is experimental and subject to change\n+}"}, {"sha": "787ae5289dd582510902405952f9308456b52fa0", "filename": "src/test/run-pass/cfg-target-vendor.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Ftest%2Frun-pass%2Fcfg-target-vendor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ce46ffddfed7dee58569b5f30242b00d299dfe/src%2Ftest%2Frun-pass%2Fcfg-target-vendor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcfg-target-vendor.rs?ref=78ce46ffddfed7dee58569b5f30242b00d299dfe", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(cfg_target_vendor)]\n+\n+#[cfg(target_vendor = \"unknown\")]\n+pub fn main() {\n+}\n+\n+#[cfg(not(target_vendor = \"unknown\"))]\n+pub fn main() {\n+}"}]}