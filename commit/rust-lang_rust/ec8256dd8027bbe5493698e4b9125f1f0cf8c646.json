{"sha": "ec8256dd8027bbe5493698e4b9125f1f0cf8c646", "node_id": "C_kwDOAAsO6NoAKGVjODI1NmRkODAyN2JiZTU0OTM2OThlNGI5MTI1ZjFmMGNmOGM2NDY", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-08-13T18:18:21Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-08-13T18:30:30Z"}, "message": "Move VSCode diagnostics workaroudn into client code", "tree": {"sha": "d7f8b9afff8ee7407c3d7ac417d1ca3d58707cc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7f8b9afff8ee7407c3d7ac417d1ca3d58707cc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec8256dd8027bbe5493698e4b9125f1f0cf8c646", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec8256dd8027bbe5493698e4b9125f1f0cf8c646", "html_url": "https://github.com/rust-lang/rust/commit/ec8256dd8027bbe5493698e4b9125f1f0cf8c646", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec8256dd8027bbe5493698e4b9125f1f0cf8c646/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "038c36a1f5195d96d9247529d9cc1e14f00c8c17", "url": "https://api.github.com/repos/rust-lang/rust/commits/038c36a1f5195d96d9247529d9cc1e14f00c8c17", "html_url": "https://github.com/rust-lang/rust/commit/038c36a1f5195d96d9247529d9cc1e14f00c8c17"}], "stats": {"total": 34, "additions": 14, "deletions": 20}, "files": [{"sha": "943d043bc1995dbfc3eb49bde756cf4fdd0c1e8f", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ec8256dd8027bbe5493698e4b9125f1f0cf8c646/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec8256dd8027bbe5493698e4b9125f1f0cf8c646/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=ec8256dd8027bbe5493698e4b9125f1f0cf8c646", "patch": "@@ -1320,8 +1320,7 @@ pub(crate) fn publish_diagnostics(\n                 .unwrap(),\n             }),\n             source: Some(\"rust-analyzer\".to_string()),\n-            // https://github.com/rust-lang/rust-analyzer/issues/11404\n-            message: if !d.message.is_empty() { d.message } else { \" \".to_string() },\n+            message: d.message,\n             related_information: None,\n             tags: if d.unused { Some(vec![DiagnosticTag::UNNECESSARY]) } else { None },\n             data: None,"}, {"sha": "77419998249f41fc49f2d66e1fc3f43a83ff6765", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 4, "deletions": 18, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ec8256dd8027bbe5493698e4b9125f1f0cf8c646/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec8256dd8027bbe5493698e4b9125f1f0cf8c646/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=ec8256dd8027bbe5493698e4b9125f1f0cf8c646", "patch": "@@ -327,29 +327,15 @@ impl GlobalState {\n                     continue;\n                 }\n \n-                let url = file_id_to_url(&self.vfs.read().0, file_id);\n-                let mut diagnostics =\n+                let uri = file_id_to_url(&self.vfs.read().0, file_id);\n+                let diagnostics =\n                     self.diagnostics.diagnostics_for(file_id).cloned().collect::<Vec<_>>();\n-                for d in &mut diagnostics {\n-                    // https://github.com/rust-lang/rust-analyzer/issues/11404\n-                    // FIXME: We should move this workaround into the client code\n-                    if d.message.is_empty() {\n-                        d.message = \" \".to_string();\n-                    }\n-                    if let Some(rds) = d.related_information.as_mut() {\n-                        for rd in rds {\n-                            if rd.message.is_empty() {\n-                                rd.message = \" \".to_string();\n-                            }\n-                        }\n-                    }\n-                }\n-                let version = from_proto::vfs_path(&url)\n+                let version = from_proto::vfs_path(&uri)\n                     .map(|path| self.mem_docs.get(&path).map(|it| it.version))\n                     .unwrap_or_default();\n \n                 self.send_notification::<lsp_types::notification::PublishDiagnostics>(\n-                    lsp_types::PublishDiagnosticsParams { uri: url, diagnostics, version },\n+                    lsp_types::PublishDiagnosticsParams { uri, diagnostics, version },\n                 );\n             }\n         }"}, {"sha": "40ba17844bee0675fb2a3ed17b557de58592318d", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ec8256dd8027bbe5493698e4b9125f1f0cf8c646/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/ec8256dd8027bbe5493698e4b9125f1f0cf8c646/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=ec8256dd8027bbe5493698e4b9125f1f0cf8c646", "patch": "@@ -105,6 +105,15 @@ export async function createClient(\n         traceOutputChannel: traceOutputChannel(),\n         outputChannel: outputChannel(),\n         middleware: {\n+            async handleDiagnostics(uri, diagnostics, next) {\n+                // Workaround for https://github.com/microsoft/vscode/issues/155531\n+                for (const diagnostic of diagnostics) {\n+                    if (!diagnostic.message) {\n+                        diagnostic.message = \" \";\n+                    }\n+                }\n+                next(uri, diagnostics);\n+            },\n             async provideHover(\n                 document: vscode.TextDocument,\n                 position: vscode.Position,"}]}