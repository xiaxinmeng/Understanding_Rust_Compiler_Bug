{"sha": "aaca5a38ee1a2144ba84bf863e59bafb89c37346", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhY2E1YTM4ZWUxYTIxNDRiYTg0YmY4NjNlNTliYWZiODljMzczNDY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-24T16:23:22Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-29T17:19:43Z"}, "message": "Rename StaticMethods::static_ptrcast to ConstMethods::const_ptrcast", "tree": {"sha": "a6cf6b4467dcbf712fdde2250314ad9d4b4e5d07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6cf6b4467dcbf712fdde2250314ad9d4b4e5d07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aaca5a38ee1a2144ba84bf863e59bafb89c37346", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aaca5a38ee1a2144ba84bf863e59bafb89c37346", "html_url": "https://github.com/rust-lang/rust/commit/aaca5a38ee1a2144ba84bf863e59bafb89c37346", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aaca5a38ee1a2144ba84bf863e59bafb89c37346/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59682d3e2ae1b173a29aff25d30afe49349379de", "url": "https://api.github.com/repos/rust-lang/rust/commits/59682d3e2ae1b173a29aff25d30afe49349379de", "html_url": "https://github.com/rust-lang/rust/commit/59682d3e2ae1b173a29aff25d30afe49349379de"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "f13eeb6692c351de940c9127d998d99b69bcc3b9", "filename": "src/librustc_codegen_llvm/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aaca5a38ee1a2144ba84bf863e59bafb89c37346/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaca5a38ee1a2144ba84bf863e59bafb89c37346/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcallee.rs?ref=aaca5a38ee1a2144ba84bf863e59bafb89c37346", "patch": "@@ -81,7 +81,7 @@ pub fn get_fn(\n         // other weird situations. Annoying.\n         if cx.val_ty(llfn) != llptrty {\n             debug!(\"get_fn: casting {:?} to {:?}\", llfn, llptrty);\n-            cx.static_ptrcast(llfn, llptrty)\n+            cx.const_ptrcast(llfn, llptrty)\n         } else {\n             debug!(\"get_fn: not casting pointer!\");\n             llfn"}, {"sha": "f9850a08afecb535d2047ff3c59ce5efdb69896a", "filename": "src/librustc_codegen_llvm/common.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aaca5a38ee1a2144ba84bf863e59bafb89c37346/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaca5a38ee1a2144ba84bf863e59bafb89c37346/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcommon.rs?ref=aaca5a38ee1a2144ba84bf863e59bafb89c37346", "patch": "@@ -366,6 +366,10 @@ impl ConstMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n         let llval = self.static_bitcast(llval, self.type_ptr_to(layout.llvm_type(self)));\n         PlaceRef::new_sized(llval, layout, alloc.align)\n     }\n+\n+    fn const_ptrcast(&self, val: &'ll Value, ty: &'ll Type) -> &'ll Value {\n+        consts::ptrcast(val, ty)\n+    }\n }\n \n pub fn val_ty(v: &'ll Value) -> &'ll Type {"}, {"sha": "4c2d73282cb0923eff2aa9745495f67ec2f06cc4", "filename": "src/librustc_codegen_llvm/consts.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aaca5a38ee1a2144ba84bf863e59bafb89c37346/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaca5a38ee1a2144ba84bf863e59bafb89c37346/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fconsts.rs?ref=aaca5a38ee1a2144ba84bf863e59bafb89c37346", "patch": "@@ -180,10 +180,6 @@ impl CodegenCx<'ll, 'tcx> {\n }\n \n impl StaticMethods for CodegenCx<'ll, 'tcx> {\n-    fn static_ptrcast(&self, val: &'ll Value, ty: &'ll Type) -> &'ll Value {\n-        ptrcast(val, ty)\n-    }\n-\n     fn static_addr_of_mut(\n         &self,\n         cv: &'ll Value,"}, {"sha": "266f78996b32bba9907fe256dbfef4cdc998a021", "filename": "src/librustc_codegen_ssa/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aaca5a38ee1a2144ba84bf863e59bafb89c37346/src%2Flibrustc_codegen_ssa%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaca5a38ee1a2144ba84bf863e59bafb89c37346/src%2Flibrustc_codegen_ssa%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fbase.rs?ref=aaca5a38ee1a2144ba84bf863e59bafb89c37346", "patch": "@@ -192,7 +192,7 @@ pub fn unsized_info<'tcx, Cx: CodegenMethods<'tcx>>(\n         (_, &ty::Dynamic(ref data, ..)) => {\n             let vtable_ptr = cx.layout_of(cx.tcx().mk_mut_ptr(target))\n                 .field(cx, FAT_PTR_EXTRA);\n-            cx.static_ptrcast(meth::get_vtable(cx, source, data.principal()),\n+            cx.const_ptrcast(meth::get_vtable(cx, source, data.principal()),\n                             cx.backend_type(vtable_ptr))\n         }\n         _ => bug!(\"unsized_info: invalid unsizing {:?} -> {:?}\","}, {"sha": "af49410794efbe2728124a86d0fe738eb1c4940e", "filename": "src/librustc_codegen_ssa/traits/consts.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aaca5a38ee1a2144ba84bf863e59bafb89c37346/src%2Flibrustc_codegen_ssa%2Ftraits%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaca5a38ee1a2144ba84bf863e59bafb89c37346/src%2Flibrustc_codegen_ssa%2Ftraits%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fconsts.rs?ref=aaca5a38ee1a2144ba84bf863e59bafb89c37346", "patch": "@@ -17,7 +17,6 @@ use syntax::symbol::LocalInternedString;\n \n pub trait ConstMethods<'tcx>: BackendTypes {\n     // Constant constructors\n-\n     fn const_null(&self, t: Self::Type) -> Self::Value;\n     fn const_undef(&self, t: Self::Type) -> Self::Value;\n     fn const_int(&self, t: Self::Type, i: i64) -> Self::Value;\n@@ -61,4 +60,6 @@ pub trait ConstMethods<'tcx>: BackendTypes {\n         alloc: &Allocation,\n         offset: layout::Size,\n     ) -> PlaceRef<'tcx, Self::Value>;\n+\n+    fn const_ptrcast(&self, val: Self::Value, ty: Self::Type) -> Self::Value;\n }"}, {"sha": "0eeddd9a29e3b972e5becfb7682ed38022781c8c", "filename": "src/librustc_codegen_ssa/traits/statics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aaca5a38ee1a2144ba84bf863e59bafb89c37346/src%2Flibrustc_codegen_ssa%2Ftraits%2Fstatics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaca5a38ee1a2144ba84bf863e59bafb89c37346/src%2Flibrustc_codegen_ssa%2Ftraits%2Fstatics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fstatics.rs?ref=aaca5a38ee1a2144ba84bf863e59bafb89c37346", "patch": "@@ -13,7 +13,6 @@ use rustc::hir::def_id::DefId;\n use rustc::ty::layout::Align;\n \n pub trait StaticMethods: BackendTypes {\n-    fn static_ptrcast(&self, val: Self::Value, ty: Self::Type) -> Self::Value;\n     fn static_addr_of_mut(&self, cv: Self::Value, align: Align, kind: Option<&str>) -> Self::Value;\n     fn static_addr_of(&self, cv: Self::Value, align: Align, kind: Option<&str>) -> Self::Value;\n     fn get_static(&self, def_id: DefId) -> Self::Value;"}]}