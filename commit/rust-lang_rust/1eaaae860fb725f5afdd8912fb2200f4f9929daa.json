{"sha": "1eaaae860fb725f5afdd8912fb2200f4f9929daa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlYWFhZTg2MGZiNzI1ZjVhZmRkODkxMmZiMjIwMGY0Zjk5MjlkYWE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-28T18:31:44Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-28T18:31:44Z"}, "message": "rt: Add an upcall to allocate space on the C stack. This will be used for native calls on the C stack.", "tree": {"sha": "2e92a5f6a4ec86fe349b9e5db748f64ec3e68870", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e92a5f6a4ec86fe349b9e5db748f64ec3e68870"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1eaaae860fb725f5afdd8912fb2200f4f9929daa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1eaaae860fb725f5afdd8912fb2200f4f9929daa", "html_url": "https://github.com/rust-lang/rust/commit/1eaaae860fb725f5afdd8912fb2200f4f9929daa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1eaaae860fb725f5afdd8912fb2200f4f9929daa/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8757ea01f39826911a4c05ddf4b7e6990a56f27", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8757ea01f39826911a4c05ddf4b7e6990a56f27", "html_url": "https://github.com/rust-lang/rust/commit/e8757ea01f39826911a4c05ddf4b7e6990a56f27"}], "stats": {"total": 40, "additions": 31, "deletions": 9}, "files": [{"sha": "a31b4c48d145ebae4eac48c35a2f60006b2d5fcd", "filename": "src/rt/arch/i386/context.h", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/1eaaae860fb725f5afdd8912fb2200f4f9929daa/src%2Frt%2Farch%2Fi386%2Fcontext.h", "raw_url": "https://github.com/rust-lang/rust/raw/1eaaae860fb725f5afdd8912fb2200f4f9929daa/src%2Frt%2Farch%2Fi386%2Fcontext.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Fcontext.h?ref=1eaaae860fb725f5afdd8912fb2200f4f9929daa", "patch": "@@ -3,7 +3,17 @@\n #ifndef CONTEXT_H\n #define CONTEXT_H\n \n+#include <cstdlib>\n #include <inttypes.h>\n+#include <stdint.h>\n+\n+template<typename T>\n+T align_down(T sp)\n+{\n+    // There is no platform we care about that needs more than a\n+    // 16-byte alignment.\n+    return (T)((uint32_t)sp & ~(16 - 1));\n+}\n \n struct registers_t {\n   // general purpose registers\n@@ -26,16 +36,15 @@ class context {\n   context *next;\n \n   void swap(context &out);\n-\n   void call(void *f, void *arg, void *sp);\n-};\n \n-template<typename T>\n-T align_down(T sp)\n-{\n-    // There is no platform we care about that needs more than a\n-    // 16-byte alignment.\n-    return (T)((int)sp & ~(16 - 1));\n-}\n+  // Note that this doesn't actually adjust esp. Instead, we adjust esp when\n+  // we actually do the call. This is needed for exception safety -- if the\n+  // function being called causes the task to fail, then we have to avoid\n+  // leaking space on the C stack.\n+  inline void *alloc_stack(size_t nbytes) {\n+    return (void *)(align_down(regs.esp - nbytes));\n+  }\n+};\n \n #endif"}, {"sha": "2cd4198e3a0766d5f47b79f9a76bf9f953d03514", "filename": "src/rt/intrinsics/intrinsics.cpp", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1eaaae860fb725f5afdd8912fb2200f4f9929daa/src%2Frt%2Fintrinsics%2Fintrinsics.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1eaaae860fb725f5afdd8912fb2200f4f9929daa/src%2Frt%2Fintrinsics%2Fintrinsics.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fintrinsics%2Fintrinsics.cpp?ref=1eaaae860fb725f5afdd8912fb2200f4f9929daa", "patch": "@@ -2,6 +2,7 @@\n //      -I../arch/i386 -fno-stack-protector -o intrinsics.ll intrinsics.cpp`\n \n #include \"../rust_internal.h\"\n+#include \"../rust_scheduler.h\"\n #include <cstdlib>\n #include <cstring>\n \n@@ -46,3 +47,4 @@ rust_intrinsic_recv(rust_task *task, void **retptr, type_desc *ty,\n                     rust_port *port) {\n     port_recv(task, (uintptr_t*)retptr, port);\n }\n+"}, {"sha": "e196adf70f0ac4e245a24e719b4913fdb5a851c8", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1eaaae860fb725f5afdd8912fb2200f4f9929daa/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1eaaae860fb725f5afdd8912fb2200f4f9929daa/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=1eaaae860fb725f5afdd8912fb2200f4f9929daa", "patch": "@@ -202,6 +202,16 @@ upcall_dynastack_free(rust_task *task, void *ptr) {\n     return task->dynastack.free(ptr);\n }\n \n+/**\n+ * Allocates |nbytes| bytes in the C stack and returns a pointer to the start\n+ * of the allocated space.\n+ */\n+extern \"C\" CDECL void *\n+upcall_alloc_c_stack(size_t nbytes) {\n+    rust_scheduler *sched = rust_scheduler::get_task()->sched;\n+    return sched->c_context.alloc_stack(nbytes);\n+}\n+\n extern \"C\" _Unwind_Reason_Code\n __gxx_personality_v0(int version,\n                      _Unwind_Action actions,"}, {"sha": "f5f75d61c94b9704538caeee32d5a6eb118c2a2c", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1eaaae860fb725f5afdd8912fb2200f4f9929daa/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/1eaaae860fb725f5afdd8912fb2200f4f9929daa/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=1eaaae860fb725f5afdd8912fb2200f4f9929daa", "patch": "@@ -65,6 +65,7 @@ task_sleep\n task_yield\n task_join\n unsupervise\n+upcall_alloc_c_stack\n upcall_cmp_type\n upcall_dynastack_alloc\n upcall_dynastack_alloc_2"}]}