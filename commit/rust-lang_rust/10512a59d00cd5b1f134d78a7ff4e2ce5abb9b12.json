{"sha": "10512a59d00cd5b1f134d78a7ff4e2ce5abb9b12", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwNTEyYTU5ZDAwY2Q1YjFmMTM0ZDc4YTdmZjRlMmNlNWFiYjliMTI=", "commit": {"author": {"name": "Maximilian Roos", "email": "5635139+max-sixty@users.noreply.github.com", "date": "2018-08-24T05:39:05Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-08-24T05:39:05Z"}, "message": "Impl only use (#2951)", "tree": {"sha": "18857e37256c5502ede4f89ef55fa34b30f693bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18857e37256c5502ede4f89ef55fa34b30f693bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10512a59d00cd5b1f134d78a7ff4e2ce5abb9b12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10512a59d00cd5b1f134d78a7ff4e2ce5abb9b12", "html_url": "https://github.com/rust-lang/rust/commit/10512a59d00cd5b1f134d78a7ff4e2ce5abb9b12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10512a59d00cd5b1f134d78a7ff4e2ce5abb9b12/comments", "author": {"login": "max-sixty", "id": 5635139, "node_id": "MDQ6VXNlcjU2MzUxMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/5635139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-sixty", "html_url": "https://github.com/max-sixty", "followers_url": "https://api.github.com/users/max-sixty/followers", "following_url": "https://api.github.com/users/max-sixty/following{/other_user}", "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions", "organizations_url": "https://api.github.com/users/max-sixty/orgs", "repos_url": "https://api.github.com/users/max-sixty/repos", "events_url": "https://api.github.com/users/max-sixty/events{/privacy}", "received_events_url": "https://api.github.com/users/max-sixty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f009252a6a89e6e2ff1cc02984c260f61b8d5c16", "url": "https://api.github.com/repos/rust-lang/rust/commits/f009252a6a89e6e2ff1cc02984c260f61b8d5c16", "html_url": "https://github.com/rust-lang/rust/commit/f009252a6a89e6e2ff1cc02984c260f61b8d5c16"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "e113118c64303dd2cf00090da70a3c6ebc301079", "filename": "src/config/file_lines.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/10512a59d00cd5b1f134d78a7ff4e2ce5abb9b12/src%2Fconfig%2Ffile_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10512a59d00cd5b1f134d78a7ff4e2ce5abb9b12/src%2Fconfig%2Ffile_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Ffile_lines.rs?ref=10512a59d00cd5b1f134d78a7ff4e2ce5abb9b12", "patch": "@@ -386,7 +386,7 @@ mod test {\n         );\n     }\n \n-    use super::json::{self, json, json_internal};\n+    use super::json::{self, json};\n     use super::{FileLines, FileName};\n     use std::{collections::HashMap, path::PathBuf};\n "}, {"sha": "b3408bf7bf26a4103c876ccd953d5f0c7e04ad98", "filename": "src/imports.rs", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/10512a59d00cd5b1f134d78a7ff4e2ce5abb9b12/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10512a59d00cd5b1f134d78a7ff4e2ce5abb9b12/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=10512a59d00cd5b1f134d78a7ff4e2ce5abb9b12", "patch": "@@ -149,12 +149,10 @@ impl UseSegment {\n         if name.is_empty() || name == \"{{root}}\" {\n             return None;\n         }\n-        Some(if name == \"self\" {\n-            UseSegment::Slf(None)\n-        } else if name == \"super\" {\n-            UseSegment::Super(None)\n-        } else {\n-            UseSegment::Ident((*name).to_owned(), None)\n+        Some(match name {\n+            \"self\" => UseSegment::Slf(None),\n+            \"super\" => UseSegment::Super(None),\n+            _ => UseSegment::Ident((*name).to_owned(), None),\n         })\n     }\n }\n@@ -350,19 +348,19 @@ impl UseTree {\n             UseTreeKind::Simple(ref rename, ..) => {\n                 let name = rewrite_ident(context, path_to_imported_ident(&a.prefix)).to_owned();\n                 let alias = rename.and_then(|ident| {\n-                    if ident == path_to_imported_ident(&a.prefix) {\n+                    if ident.name == \"_\" {\n+                        // for impl-only-use\n+                        Some(\"_\".to_owned())\n+                    } else if ident == path_to_imported_ident(&a.prefix) {\n                         None\n                     } else {\n                         Some(rewrite_ident(context, ident).to_owned())\n                     }\n                 });\n-\n-                let segment = if &name == \"self\" {\n-                    UseSegment::Slf(alias)\n-                } else if &name == \"super\" {\n-                    UseSegment::Super(alias)\n-                } else {\n-                    UseSegment::Ident(name, alias)\n+                let segment = match name.as_ref() {\n+                    \"self\" => UseSegment::Slf(alias),\n+                    \"super\" => UseSegment::Super(alias),\n+                    _ => UseSegment::Ident(name, alias),\n                 };\n \n                 // `name` is already in result.\n@@ -746,7 +744,7 @@ fn rewrite_nested_use_tree(\n \n impl Rewrite for UseSegment {\n     fn rewrite(&self, context: &RewriteContext, shape: Shape) -> Option<String> {\n-        Some(match *self {\n+        Some(match self {\n             UseSegment::Ident(ref ident, Some(ref rename)) => format!(\"{} as {}\", ident, rename),\n             UseSegment::Ident(ref ident, None) => ident.clone(),\n             UseSegment::Slf(Some(ref rename)) => format!(\"self as {}\", rename),"}, {"sha": "d290d8d91858d9ba7ff970619a5107bca90a61fe", "filename": "tests/source/imports-impl-only-use.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/10512a59d00cd5b1f134d78a7ff4e2ce5abb9b12/tests%2Fsource%2Fimports-impl-only-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10512a59d00cd5b1f134d78a7ff4e2ce5abb9b12/tests%2Fsource%2Fimports-impl-only-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fimports-impl-only-use.rs?ref=10512a59d00cd5b1f134d78a7ff4e2ce5abb9b12", "patch": "@@ -0,0 +1,4 @@\n+#![feature(underscore_imports)]\n+\n+use attr;\n+use std::iter::Iterator as _;"}, {"sha": "d290d8d91858d9ba7ff970619a5107bca90a61fe", "filename": "tests/target/imports-impl-only-use.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/10512a59d00cd5b1f134d78a7ff4e2ce5abb9b12/tests%2Ftarget%2Fimports-impl-only-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10512a59d00cd5b1f134d78a7ff4e2ce5abb9b12/tests%2Ftarget%2Fimports-impl-only-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimports-impl-only-use.rs?ref=10512a59d00cd5b1f134d78a7ff4e2ce5abb9b12", "patch": "@@ -0,0 +1,4 @@\n+#![feature(underscore_imports)]\n+\n+use attr;\n+use std::iter::Iterator as _;"}]}