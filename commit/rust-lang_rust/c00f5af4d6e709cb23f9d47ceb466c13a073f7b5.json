{"sha": "c00f5af4d6e709cb23f9d47ceb466c13a073f7b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwMGY1YWY0ZDZlNzA5Y2IyM2Y5ZDQ3Y2ViNDY2YzEzYTA3M2Y3YjU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-06-23T17:09:11Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-06-23T17:40:25Z"}, "message": "hygiene: Do not reset expansion info for `quote!`", "tree": {"sha": "78b05b5d6bdc3249fcb85f859b8c35b276b634af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78b05b5d6bdc3249fcb85f859b8c35b276b634af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c00f5af4d6e709cb23f9d47ceb466c13a073f7b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c00f5af4d6e709cb23f9d47ceb466c13a073f7b5", "html_url": "https://github.com/rust-lang/rust/commit/c00f5af4d6e709cb23f9d47ceb466c13a073f7b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c00f5af4d6e709cb23f9d47ceb466c13a073f7b5/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fffe9fbb5134da7ce77660dfc4562b5e395853e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/fffe9fbb5134da7ce77660dfc4562b5e395853e8", "html_url": "https://github.com/rust-lang/rust/commit/fffe9fbb5134da7ce77660dfc4562b5e395853e8"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "4cd822aa9d0b969689318d6e08d2e850beea3ac3", "filename": "src/libproc_macro/quote.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c00f5af4d6e709cb23f9d47ceb466c13a073f7b5/src%2Flibproc_macro%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c00f5af4d6e709cb23f9d47ceb466c13a073f7b5/src%2Flibproc_macro%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro%2Fquote.rs?ref=c00f5af4d6e709cb23f9d47ceb466c13a073f7b5", "patch": "@@ -85,9 +85,6 @@ impl ProcMacro for Quoter {\n                    _: ::syntax_pos::Span,\n                    stream: tokenstream::TokenStream)\n                    -> tokenstream::TokenStream {\n-        let mut info = cx.current_expansion.mark.expn_info().unwrap();\n-        info.callee.allow_internal_unstable = true;\n-        cx.current_expansion.mark.set_expn_info(info);\n         ::__internal::set_sess(cx, || TokenStream(stream).quote().0)\n     }\n }"}, {"sha": "1a13335a0e49d34bfc44b62f02b7011ecd4126b1", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c00f5af4d6e709cb23f9d47ceb466c13a073f7b5/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c00f5af4d6e709cb23f9d47ceb466c13a073f7b5/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=c00f5af4d6e709cb23f9d47ceb466c13a073f7b5", "patch": "@@ -570,7 +570,7 @@ impl<'a> CrateLoader<'a> {\n                                         name: &str,\n                                         expand: fn(TokenStream) -> TokenStream) {\n                 let expand = SyntaxExtension::ProcMacro(\n-                    Box::new(BangProcMacro { inner: expand }), self.edition\n+                    Box::new(BangProcMacro { inner: expand }), false, self.edition\n                 );\n                 self.extensions.push((Symbol::intern(name), Lrc::new(expand)));\n             }"}, {"sha": "d0e4e54e63d677f86f615ff5004b4620d3c5b644", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c00f5af4d6e709cb23f9d47ceb466c13a073f7b5/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c00f5af4d6e709cb23f9d47ceb466c13a073f7b5/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=c00f5af4d6e709cb23f9d47ceb466c13a073f7b5", "patch": "@@ -519,7 +519,7 @@ impl CrateStore for cstore::CStore {\n         } else if data.name == \"proc_macro\" &&\n                   self.get_crate_data(id.krate).item_name(id.index) == \"quote\" {\n             let ext = SyntaxExtension::ProcMacro(Box::new(::proc_macro::__internal::Quoter),\n-                                                 data.root.edition);\n+                                                 true, data.root.edition);\n             return LoadedMacro::ProcMacro(Lrc::new(ext));\n         }\n "}, {"sha": "e8fad1a2177717cd411e3ea58bd743ee3d4bb4da", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c00f5af4d6e709cb23f9d47ceb466c13a073f7b5/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c00f5af4d6e709cb23f9d47ceb466c13a073f7b5/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=c00f5af4d6e709cb23f9d47ceb466c13a073f7b5", "patch": "@@ -597,7 +597,11 @@ pub enum SyntaxExtension {\n     MultiModifier(Box<MultiItemModifier + sync::Sync + sync::Send>),\n \n     /// A function-like procedural macro. TokenStream -> TokenStream.\n-    ProcMacro(Box<ProcMacro + sync::Sync + sync::Send>, Edition),\n+    ProcMacro(\n+        /* expander: */ Box<ProcMacro + sync::Sync + sync::Send>,\n+        /* allow_internal_unstable: */ bool,\n+        /* edition: */ Edition,\n+    ),\n \n     /// An attribute-like procedural macro. TokenStream, TokenStream -> TokenStream.\n     /// The first TokenSteam is the attribute, the second is the annotated item."}, {"sha": "8ad6e32f42d9a365d3eafb3cf28bbfb458a90cd7", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c00f5af4d6e709cb23f9d47ceb466c13a073f7b5/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c00f5af4d6e709cb23f9d47ceb466c13a073f7b5/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=c00f5af4d6e709cb23f9d47ceb466c13a073f7b5", "patch": "@@ -804,7 +804,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n                 kind.dummy(span)\n             }\n \n-            ProcMacro(ref expandfun, edition) => {\n+            ProcMacro(ref expandfun, allow_internal_unstable, edition) => {\n                 if ident.name != keywords::Invalid.name() {\n                     let msg =\n                         format!(\"macro {}! expects no ident argument, given '{}'\", path, ident);\n@@ -821,7 +821,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n                             // yet, when they do, we should use it here.\n                             span: None,\n                             // FIXME probably want to follow macro_rules macros here.\n-                            allow_internal_unstable: false,\n+                            allow_internal_unstable,\n                             allow_internal_unsafe: false,\n                             edition,\n                         },"}]}