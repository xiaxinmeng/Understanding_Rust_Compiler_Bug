{"sha": "458a6a2f6e9dfb6ed3d76f14418ff1f2f5e97f86", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1OGE2YTJmNmU5ZGZiNmVkM2Q3NmYxNDQxOGZmMWYyZjVlOTdmODY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-25T21:20:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-25T21:20:37Z"}, "message": "Auto merge of #21561 - edwardw:deref, r=nikomatsakis\n\nAs part of #20432, upvar checking is now moved out of regionck to its\r\nown pass and before regionck. But regionck has some type resolution of\r\nits own. Without them, now separated upvar checking may be tripped over\r\nby residue `ty_infer`.\r\n\r\nCloses #21306", "tree": {"sha": "0f1a54792959c00021147f50bdf561cac134ffcd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f1a54792959c00021147f50bdf561cac134ffcd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/458a6a2f6e9dfb6ed3d76f14418ff1f2f5e97f86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/458a6a2f6e9dfb6ed3d76f14418ff1f2f5e97f86", "html_url": "https://github.com/rust-lang/rust/commit/458a6a2f6e9dfb6ed3d76f14418ff1f2f5e97f86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/458a6a2f6e9dfb6ed3d76f14418ff1f2f5e97f86/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c80e556e159af38f86eea5ee2ba796d7c724c92b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c80e556e159af38f86eea5ee2ba796d7c724c92b", "html_url": "https://github.com/rust-lang/rust/commit/c80e556e159af38f86eea5ee2ba796d7c724c92b"}, {"sha": "296777e50a6e1c3fe2dfaadbd25b01cc3071cf7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/296777e50a6e1c3fe2dfaadbd25b01cc3071cf7c", "html_url": "https://github.com/rust-lang/rust/commit/296777e50a6e1c3fe2dfaadbd25b01cc3071cf7c"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "b26461751b69c776f63ad54927a5e8c09cd4e2f4", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/458a6a2f6e9dfb6ed3d76f14418ff1f2f5e97f86/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/458a6a2f6e9dfb6ed3d76f14418ff1f2f5e97f86/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=458a6a2f6e9dfb6ed3d76f14418ff1f2f5e97f86", "patch": "@@ -1635,14 +1635,15 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     {\n         let raw_ty = self.expr_ty(expr);\n         let raw_ty = self.infcx().shallow_resolve(raw_ty);\n+        let resolve_ty = |&: ty: Ty<'tcx>| self.infcx().resolve_type_vars_if_possible(&ty);\n         ty::adjust_ty(self.tcx(),\n                       expr.span,\n                       expr.id,\n                       raw_ty,\n                       adjustment,\n                       |method_call| self.inh.method_map.borrow()\n                                                        .get(&method_call)\n-                                                       .map(|method| method.ty))\n+                                                       .map(|method| resolve_ty(method.ty)))\n     }\n \n     pub fn node_ty(&self, id: ast::NodeId) -> Ty<'tcx> {"}, {"sha": "7fc0a83e34ac591765e935a6928b33fe4014de88", "filename": "src/librustc_typeck/check/upvar.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/458a6a2f6e9dfb6ed3d76f14418ff1f2f5e97f86/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/458a6a2f6e9dfb6ed3d76f14418ff1f2f5e97f86/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs?ref=458a6a2f6e9dfb6ed3d76f14418ff1f2f5e97f86", "patch": "@@ -121,13 +121,8 @@ impl<'a,'tcx> SeedBorrowKind<'a,'tcx> {\n                      capture_clause: ast::CaptureClause,\n                      _body: &ast::Block)\n     {\n-        let is_old_skool_closure = match self.fcx.expr_ty(expr).sty {\n-            _ => false,\n-        };\n-\n         match capture_clause {\n-            ast::CaptureByValue if !is_old_skool_closure => {\n-            }\n+            ast::CaptureByValue => {}\n             _ => {\n                 ty::with_freevars(self.tcx(), expr.id, |freevars| {\n                     for freevar in freevars.iter() {"}, {"sha": "c75abd88963433dbb92f6901e3d8a738f43cad96", "filename": "src/test/run-pass/issue-21306.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/458a6a2f6e9dfb6ed3d76f14418ff1f2f5e97f86/src%2Ftest%2Frun-pass%2Fissue-21306.rs", "raw_url": "https://github.com/rust-lang/rust/raw/458a6a2f6e9dfb6ed3d76f14418ff1f2f5e97f86/src%2Ftest%2Frun-pass%2Fissue-21306.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-21306.rs?ref=458a6a2f6e9dfb6ed3d76f14418ff1f2f5e97f86", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::sync::Arc;\n+\n+fn main() {\n+    let x = 5us;\n+    let command = Arc::new(Box::new(|&:| { x*2 }));\n+    assert_eq!(command(), 10);\n+}"}]}