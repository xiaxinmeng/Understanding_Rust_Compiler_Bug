{"sha": "f4eeff99b6f2d5a01f7af1eae46e1b84525bf95a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0ZWVmZjk5YjZmMmQ1YTAxZjdhZjFlYWU0NmUxYjg0NTI1YmY5NWE=", "commit": {"author": {"name": "Ryan1729", "email": "Ryan1729@gmail.com", "date": "2020-08-12T15:17:40Z"}, "committer": {"name": "Ryan1729", "email": "Ryan1729@gmail.com", "date": "2020-08-12T16:33:16Z"}, "message": "add tests for Rem, BitAnd, BitOr, BitXor, Shl, and Shr", "tree": {"sha": "f342d3bae8e954915d8cfc5ae19b45cbbf46a820", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f342d3bae8e954915d8cfc5ae19b45cbbf46a820"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4eeff99b6f2d5a01f7af1eae46e1b84525bf95a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4eeff99b6f2d5a01f7af1eae46e1b84525bf95a", "html_url": "https://github.com/rust-lang/rust/commit/f4eeff99b6f2d5a01f7af1eae46e1b84525bf95a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4eeff99b6f2d5a01f7af1eae46e1b84525bf95a/comments", "author": {"login": "Ryan1729", "id": 2133026, "node_id": "MDQ6VXNlcjIxMzMwMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2133026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryan1729", "html_url": "https://github.com/Ryan1729", "followers_url": "https://api.github.com/users/Ryan1729/followers", "following_url": "https://api.github.com/users/Ryan1729/following{/other_user}", "gists_url": "https://api.github.com/users/Ryan1729/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryan1729/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryan1729/subscriptions", "organizations_url": "https://api.github.com/users/Ryan1729/orgs", "repos_url": "https://api.github.com/users/Ryan1729/repos", "events_url": "https://api.github.com/users/Ryan1729/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryan1729/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ryan1729", "id": 2133026, "node_id": "MDQ6VXNlcjIxMzMwMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2133026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryan1729", "html_url": "https://github.com/Ryan1729", "followers_url": "https://api.github.com/users/Ryan1729/followers", "following_url": "https://api.github.com/users/Ryan1729/following{/other_user}", "gists_url": "https://api.github.com/users/Ryan1729/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryan1729/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryan1729/subscriptions", "organizations_url": "https://api.github.com/users/Ryan1729/orgs", "repos_url": "https://api.github.com/users/Ryan1729/repos", "events_url": "https://api.github.com/users/Ryan1729/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryan1729/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c70581732de89a1b4f064818edeca9a18913ded2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c70581732de89a1b4f064818edeca9a18913ded2", "html_url": "https://github.com/rust-lang/rust/commit/c70581732de89a1b4f064818edeca9a18913ded2"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "5c280efac1a876dbb849b7c81940b6d3db1b48ad", "filename": "tests/ui/suspicious_arithmetic_impl.rs", "status": "modified", "additions": 51, "deletions": 1, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/f4eeff99b6f2d5a01f7af1eae46e1b84525bf95a/tests%2Fui%2Fsuspicious_arithmetic_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4eeff99b6f2d5a01f7af1eae46e1b84525bf95a/tests%2Fui%2Fsuspicious_arithmetic_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuspicious_arithmetic_impl.rs?ref=f4eeff99b6f2d5a01f7af1eae46e1b84525bf95a", "patch": "@@ -1,5 +1,7 @@\n #![warn(clippy::suspicious_arithmetic_impl)]\n-use std::ops::{Add, AddAssign, BitOrAssign, Div, DivAssign, Mul, MulAssign, Sub};\n+use std::ops::{\n+    Add, AddAssign, BitAnd, BitOr, BitOrAssign, BitXor, Div, DivAssign, Mul, MulAssign, Rem, Shl, Shr, Sub,\n+};\n \n #[derive(Copy, Clone)]\n struct Foo(u32);\n@@ -61,6 +63,54 @@ impl Div for Foo {\n     }\n }\n \n+impl Rem for Foo {\n+    type Output = Foo;\n+\n+    fn rem(self, other: Self) -> Self {\n+        Foo(self.0 / other.0)\n+    }\n+}\n+\n+impl BitAnd for Foo {\n+    type Output = Foo;\n+\n+    fn bitand(self, other: Self) -> Self {\n+        Foo(self.0 | other.0)\n+    }\n+}\n+\n+impl BitOr for Foo {\n+    type Output = Foo;\n+\n+    fn bitor(self, other: Self) -> Self {\n+        Foo(self.0 ^ other.0)\n+    }\n+}\n+\n+impl BitXor for Foo {\n+    type Output = Foo;\n+\n+    fn bitxor(self, other: Self) -> Self {\n+        Foo(self.0 & other.0)\n+    }\n+}\n+\n+impl Shl for Foo {\n+    type Output = Foo;\n+\n+    fn shl(self, other: Self) -> Self {\n+        Foo(self.0 >> other.0)\n+    }\n+}\n+\n+impl Shr for Foo {\n+    type Output = Foo;\n+\n+    fn shr(self, other: Self) -> Self {\n+        Foo(self.0 << other.0)\n+    }\n+}\n+\n struct Bar(i32);\n \n impl Add for Bar {"}]}