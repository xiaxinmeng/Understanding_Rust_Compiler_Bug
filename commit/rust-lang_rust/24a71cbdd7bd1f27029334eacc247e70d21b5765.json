{"sha": "24a71cbdd7bd1f27029334eacc247e70d21b5765", "node_id": "C_kwDOAAsO6NoAKDI0YTcxY2JkZDdiZDFmMjcwMjkzMzRlYWNjMjQ3ZTcwZDIxYjU3NjU", "commit": {"author": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-10-13T01:26:39Z"}, "committer": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-10-13T01:26:39Z"}, "message": "Fix local crate not being scraped", "tree": {"sha": "d95cf812fc194ef0b8f94d355f589178551129e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d95cf812fc194ef0b8f94d355f589178551129e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24a71cbdd7bd1f27029334eacc247e70d21b5765", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24a71cbdd7bd1f27029334eacc247e70d21b5765", "html_url": "https://github.com/rust-lang/rust/commit/24a71cbdd7bd1f27029334eacc247e70d21b5765", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24a71cbdd7bd1f27029334eacc247e70d21b5765/comments", "author": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1616f34efc5bc0d0328c1bba94176c62be2b3d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1616f34efc5bc0d0328c1bba94176c62be2b3d0", "html_url": "https://github.com/rust-lang/rust/commit/b1616f34efc5bc0d0328c1bba94176c62be2b3d0"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "fc54e55b87655e5cf7baa10961086ce07498532d", "filename": "src/librustdoc/scrape_examples.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/24a71cbdd7bd1f27029334eacc247e70d21b5765/src%2Flibrustdoc%2Fscrape_examples.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24a71cbdd7bd1f27029334eacc247e70d21b5765/src%2Flibrustdoc%2Fscrape_examples.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fscrape_examples.rs?ref=24a71cbdd7bd1f27029334eacc247e70d21b5765", "patch": "@@ -22,7 +22,7 @@ use rustc_serialize::{\n };\n use rustc_session::getopts;\n use rustc_span::{\n-    def_id::{CrateNum, DefPathHash},\n+    def_id::{CrateNum, DefPathHash, LOCAL_CRATE},\n     edition::Edition,\n     BytePos, FileName, SourceFile,\n };\n@@ -202,19 +202,23 @@ crate fn run(\n \n         // Collect CrateIds corresponding to provided target crates\n         // If two different versions of the crate in the dependency tree, then examples will be collcted from both.\n-        let find_crates_with_name = |target_crate: String| {\n-            tcx.crates(())\n-                .iter()\n-                .filter(move |crate_num| tcx.crate_name(**crate_num).as_str() == target_crate)\n-                .copied()\n-        };\n+        let all_crates = tcx\n+            .crates(())\n+            .iter()\n+            .chain([&LOCAL_CRATE])\n+            .map(|crate_num| (crate_num, tcx.crate_name(*crate_num)))\n+            .collect::<Vec<_>>();\n         let target_crates = options\n             .target_crates\n             .into_iter()\n-            .map(find_crates_with_name)\n+            .map(|target| all_crates.iter().filter(move |(_, name)| name.as_str() == target))\n             .flatten()\n+            .map(|(crate_num, _)| **crate_num)\n             .collect::<Vec<_>>();\n \n+        debug!(\"All crates in TyCtxt: {:?}\", all_crates);\n+        debug!(\"Scrape examples target_crates: {:?}\", target_crates);\n+\n         // Run call-finder on all items\n         let mut calls = FxHashMap::default();\n         let mut finder = FindCalls { calls: &mut calls, tcx, map: tcx.hir(), cx, target_crates };"}]}