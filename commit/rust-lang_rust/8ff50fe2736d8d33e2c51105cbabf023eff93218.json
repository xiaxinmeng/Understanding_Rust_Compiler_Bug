{"sha": "8ff50fe2736d8d33e2c51105cbabf023eff93218", "node_id": "C_kwDOAAsO6NoAKDhmZjUwZmUyNzM2ZDhkMzNlMmM1MTEwNWNiYWJmMDIzZWZmOTMyMTg", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2021-12-02T11:43:36Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2021-12-05T11:15:27Z"}, "message": "skip reborrows during AbstractConst building", "tree": {"sha": "df7559ca38485d6810674d89010a4083c1f17fcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df7559ca38485d6810674d89010a4083c1f17fcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ff50fe2736d8d33e2c51105cbabf023eff93218", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ff50fe2736d8d33e2c51105cbabf023eff93218", "html_url": "https://github.com/rust-lang/rust/commit/8ff50fe2736d8d33e2c51105cbabf023eff93218", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ff50fe2736d8d33e2c51105cbabf023eff93218/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95209252f534ccb5bd15766234a992f53737fccf", "url": "https://api.github.com/repos/rust-lang/rust/commits/95209252f534ccb5bd15766234a992f53737fccf", "html_url": "https://github.com/rust-lang/rust/commit/95209252f534ccb5bd15766234a992f53737fccf"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "be094347712355eccac5e7c4261d72552ccd8931", "filename": "compiler/rustc_trait_selection/src/traits/const_evaluatable.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8ff50fe2736d8d33e2c51105cbabf023eff93218/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ff50fe2736d8d33e2c51105cbabf023eff93218/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs?ref=8ff50fe2736d8d33e2c51105cbabf023eff93218", "patch": "@@ -399,13 +399,25 @@ impl<'a, 'tcx> AbstractConstBuilder<'a, 'tcx> {\n                 let arg = self.recurse_build(source)?;\n                 self.nodes.push(Node::Cast(abstract_const::CastKind::As, arg, node.ty))\n             }\n-\n+            ExprKind::Borrow{ arg, ..} => {\n+                let arg_node = &self.body.exprs[*arg];\n+\n+                // Skip reborrows for now until we allow Deref/Borrow/AddressOf\n+                // expressions.\n+                // FIXME(generic_const_exprs): Verify/explain why this is sound\n+                if let ExprKind::Deref {arg} = arg_node.kind {\n+                    self.recurse_build(arg)?\n+                } else {\n+                    self.maybe_supported_error(\n+                        node.span,\n+                        \"borrowing is not supported in generic constants\",\n+                    )?\n+                }\n+            }\n             // FIXME(generic_const_exprs): We may want to support these.\n-            ExprKind::AddressOf { .. }\n-            | ExprKind::Borrow { .. }\n-            | ExprKind::Deref { .. } => self.maybe_supported_error(\n+            ExprKind::AddressOf { .. } | ExprKind::Deref {..}=> self.maybe_supported_error(\n                 node.span,\n-                \"dereferencing is not supported in generic constants\",\n+                \"dereferencing or taking the address is not supported in generic constants\",\n             )?,\n             ExprKind::Repeat { .. } | ExprKind::Array { .. } =>  self.maybe_supported_error(\n                 node.span,"}]}