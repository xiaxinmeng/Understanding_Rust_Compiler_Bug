{"sha": "d21c84abd40a04eb740f51c47c1a2d62384b3e36", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMWM4NGFiZDQwYTA0ZWI3NDBmNTFjNDdjMWEyZDYyMzg0YjNlMzY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-30T10:13:08Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-30T10:13:08Z"}, "message": "Generalize annotations", "tree": {"sha": "67392b9e781c62726c630c7f8aef3c375c95cfd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67392b9e781c62726c630c7f8aef3c375c95cfd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d21c84abd40a04eb740f51c47c1a2d62384b3e36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d21c84abd40a04eb740f51c47c1a2d62384b3e36", "html_url": "https://github.com/rust-lang/rust/commit/d21c84abd40a04eb740f51c47c1a2d62384b3e36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d21c84abd40a04eb740f51c47c1a2d62384b3e36/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e87cba85efe966f51e9ba68401187731319ba7c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/e87cba85efe966f51e9ba68401187731319ba7c7", "html_url": "https://github.com/rust-lang/rust/commit/e87cba85efe966f51e9ba68401187731319ba7c7"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "f9d6c6c96ce280b006cae3045a5894ca16094359", "filename": "crates/test_utils/src/lib.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d21c84abd40a04eb740f51c47c1a2d62384b3e36/crates%2Ftest_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d21c84abd40a04eb740f51c47c1a2d62384b3e36/crates%2Ftest_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2Fsrc%2Flib.rs?ref=d21c84abd40a04eb740f51c47c1a2d62384b3e36", "patch": "@@ -11,6 +11,7 @@ pub mod mark;\n mod fixture;\n \n use std::{\n+    convert::TryInto,\n     env, fs,\n     path::{Path, PathBuf},\n };\n@@ -168,8 +169,10 @@ pub fn extract_annotations(text: &str) -> Vec<(TextRange, String)> {\n     for line in lines_with_ends(text) {\n         if let Some(idx) = line.find(\"//^\") {\n             let offset = prev_line_start.unwrap() + TextSize::of(&line[..idx + \"//\".len()]);\n-            let data = line[idx + \"//^\".len()..].trim().to_string();\n-            res.push((TextRange::at(offset, 1.into()), data))\n+            let marker_and_data = &line[idx + \"//\".len()..];\n+            let len = marker_and_data.chars().take_while(|&it| it == '^').count();\n+            let data = marker_and_data[len..].trim().to_string();\n+            res.push((TextRange::at(offset, len.try_into().unwrap()), data))\n         }\n         prev_line_start = Some(line_start);\n         line_start += TextSize::of(line);\n@@ -184,15 +187,15 @@ fn test_extract_annotations() {\n fn main() {\n     let x = 92;\n       //^ def\n-    z + 1\n-} //^ i32\n+    zoo + 1\n+} //^^^ i32\n     \"#,\n     );\n     let res = extract_annotations(&text)\n         .into_iter()\n         .map(|(range, ann)| (&text[range], ann))\n         .collect::<Vec<_>>();\n-    assert_eq!(res, vec![(\"x\", \"def\".into()), (\"z\", \"i32\".into()),]);\n+    assert_eq!(res, vec![(\"x\", \"def\".into()), (\"zoo\", \"i32\".into()),]);\n }\n \n // Comparison functionality borrowed from cargo:"}]}