{"sha": "3a5b9a707c786bf02ed05d65ca8394d77df601fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhNWI5YTcwN2M3ODZiZjAyZWQwNWQ2NWNhODM5NGQ3N2RmNjAxZmI=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-27T17:05:50Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-27T17:18:58Z"}, "message": "Fix (new?) rustc warnings", "tree": {"sha": "e1752d01e9a45eec78ea0764569ef6df5bba1527", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1752d01e9a45eec78ea0764569ef6df5bba1527"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a5b9a707c786bf02ed05d65ca8394d77df601fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a5b9a707c786bf02ed05d65ca8394d77df601fb", "html_url": "https://github.com/rust-lang/rust/commit/3a5b9a707c786bf02ed05d65ca8394d77df601fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a5b9a707c786bf02ed05d65ca8394d77df601fb/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c3cce8ba586c634d70a304d7e1a0da58b35bbea", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c3cce8ba586c634d70a304d7e1a0da58b35bbea", "html_url": "https://github.com/rust-lang/rust/commit/1c3cce8ba586c634d70a304d7e1a0da58b35bbea"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "64f45d72c12e27b83a114e77c276d7ede433dea7", "filename": "src/consts.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a5b9a707c786bf02ed05d65ca8394d77df601fb/src%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a5b9a707c786bf02ed05d65ca8394d77df601fb/src%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconsts.rs?ref=3a5b9a707c786bf02ed05d65ca8394d77df601fb", "patch": "@@ -206,7 +206,6 @@ fn lit_to_constant(lit: &LitKind) -> Constant {\n }\n \n fn constant_not(o: Constant) -> Option<Constant> {\n-    use syntax::ast::LitIntType::*;\n     use self::Constant::*;\n     match o {\n         Bool(b) => Some(Bool(!b)),\n@@ -232,7 +231,6 @@ fn constant_not(o: Constant) -> Option<Constant> {\n }\n \n fn constant_negate(o: Constant) -> Option<Constant> {\n-    use syntax::ast::LitIntType::*;\n     use self::Constant::*;\n     match o {\n         Int(value, LitIntType::Signed(ity), sign) => Some(Int(value, LitIntType::Signed(ity), neg_sign(sign))),"}]}