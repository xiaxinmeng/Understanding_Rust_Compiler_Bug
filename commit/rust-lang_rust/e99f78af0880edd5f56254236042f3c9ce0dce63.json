{"sha": "e99f78af0880edd5f56254236042f3c9ce0dce63", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5OWY3OGFmMDg4MGVkZDVmNTYyNTQyMzYwNDJmM2M5Y2UwZGNlNjM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-11-23T10:48:53Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-11-23T10:48:53Z"}, "message": "Make simd_extract panic at runtime on non-const index again\n\nThis is necessary to compile packed_simd", "tree": {"sha": "69d9b340c3a93c9c85bab02b4e53c13453bbe1bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69d9b340c3a93c9c85bab02b4e53c13453bbe1bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e99f78af0880edd5f56254236042f3c9ce0dce63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e99f78af0880edd5f56254236042f3c9ce0dce63", "html_url": "https://github.com/rust-lang/rust/commit/e99f78af0880edd5f56254236042f3c9ce0dce63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e99f78af0880edd5f56254236042f3c9ce0dce63/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2eeed4ff577ee35693a32ae95f043f57c267cb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2eeed4ff577ee35693a32ae95f043f57c267cb3", "html_url": "https://github.com/rust-lang/rust/commit/d2eeed4ff577ee35693a32ae95f043f57c267cb3"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "2b32e866e5ef6f088f89d3f3c563f8c3c239c27b", "filename": "src/intrinsics/simd.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e99f78af0880edd5f56254236042f3c9ce0dce63/src%2Fintrinsics%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e99f78af0880edd5f56254236042f3c9ce0dce63/src%2Fintrinsics%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fsimd.rs?ref=e99f78af0880edd5f56254236042f3c9ce0dce63", "patch": "@@ -146,10 +146,17 @@ pub(super) fn codegen_simd_intrinsic_call<'tcx>(\n             let idx_const = if let Some(idx_const) = crate::constant::mir_operand_get_const_val(fx, idx) {\n                 idx_const\n             } else {\n-                fx.tcx.sess.span_fatal(\n+                fx.tcx.sess.span_warn(\n                     span,\n                     \"Index argument for `simd_extract` is not a constant\",\n                 );\n+                let res = crate::trap::trap_unimplemented_ret_value(\n+                    fx,\n+                    ret.layout(),\n+                    \"Index argument for `simd_extract` is not a constant\",\n+                );\n+                ret.write_cvalue(fx, res);\n+                return;\n             };\n \n             let idx = idx_const.val.try_to_bits(Size::from_bytes(4 /* u32*/)).unwrap_or_else(|| panic!(\"kind not scalar: {:?}\", idx_const));"}, {"sha": "67495c7414840dfe620009a58340626f5e0b412d", "filename": "src/trap.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e99f78af0880edd5f56254236042f3c9ce0dce63/src%2Ftrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e99f78af0880edd5f56254236042f3c9ce0dce63/src%2Ftrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftrap.rs?ref=e99f78af0880edd5f56254236042f3c9ce0dce63", "patch": "@@ -67,3 +67,15 @@ pub(crate) fn trap_unimplemented(fx: &mut FunctionCx<'_, '_, impl Module>, msg:\n     let true_ = fx.bcx.ins().iconst(types::I32, 1);\n     fx.bcx.ins().trapnz(true_, TrapCode::User(!0));\n }\n+\n+/// Like `trap_unimplemented` but returns a fake value of the specified type.\n+///\n+/// Trap code: user65535\n+pub(crate) fn trap_unimplemented_ret_value<'tcx>(\n+    fx: &mut FunctionCx<'_, 'tcx, impl Module>,\n+    dest_layout: TyAndLayout<'tcx>,\n+    msg: impl AsRef<str>,\n+) -> CValue<'tcx> {\n+    trap_unimplemented(fx, msg);\n+    CValue::by_ref(Pointer::const_addr(fx, 0), dest_layout)\n+}"}]}