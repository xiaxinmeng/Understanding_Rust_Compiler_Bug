{"sha": "06f89b7924af4657e847742bf0e40eafaaee52f9", "node_id": "C_kwDOAAsO6NoAKDA2Zjg5Yjc5MjRhZjQ2NTdlODQ3NzQyYmYwZTQwZWFmYWFlZTUyZjk", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-29T05:12:17Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-29T05:12:17Z"}, "message": "implement `point_at_index_if_possible`", "tree": {"sha": "9c10a5c6d96a0061adabf443b0f5d7e4e16624ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c10a5c6d96a0061adabf443b0f5d7e4e16624ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06f89b7924af4657e847742bf0e40eafaaee52f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06f89b7924af4657e847742bf0e40eafaaee52f9", "html_url": "https://github.com/rust-lang/rust/commit/06f89b7924af4657e847742bf0e40eafaaee52f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06f89b7924af4657e847742bf0e40eafaaee52f9/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d4ddab1bf5c523bdf6e3b7e9cff3c3224c6ed04", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d4ddab1bf5c523bdf6e3b7e9cff3c3224c6ed04", "html_url": "https://github.com/rust-lang/rust/commit/1d4ddab1bf5c523bdf6e3b7e9cff3c3224c6ed04"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "b2a5c055e462ec5a24ab7b68f242d4bf009f8867", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/06f89b7924af4657e847742bf0e40eafaaee52f9/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06f89b7924af4657e847742bf0e40eafaaee52f9/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=06f89b7924af4657e847742bf0e40eafaaee52f9", "patch": "@@ -2649,17 +2649,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     // two-phase not needed because index_ty is never mutable\n                     self.demand_coerce(idx, idx_t, index_ty, None, AllowTwoPhase::No);\n                     self.select_obligations_where_possible(false, |errors| {\n-                        for error in errors {\n-                            match error.obligation.predicate.kind().skip_binder() {\n-                                ty::PredicateKind::Trait(predicate)\n-                                    if self.tcx.is_diagnostic_item(\n-                                        sym::SliceIndex,\n-                                        predicate.trait_ref.def_id,\n-                                    ) => {}\n-                                _ => continue,\n-                            }\n-                            error.obligation.cause.span = idx.span;\n-                        }\n+                        self.point_at_index_if_possible(errors, idx.span)\n                     });\n                     element_ty\n                 }\n@@ -2704,6 +2694,22 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         }\n     }\n \n+    fn point_at_index_if_possible(\n+        &self,\n+        errors: &mut Vec<traits::FulfillmentError<'tcx>>,\n+        span: Span,\n+    ) {\n+        for error in errors {\n+            match error.obligation.predicate.kind().skip_binder() {\n+                ty::PredicateKind::Trait(predicate)\n+                    if self.tcx.is_diagnostic_item(sym::SliceIndex, predicate.trait_ref.def_id) => {\n+                }\n+                _ => continue,\n+            }\n+            error.obligation.cause.span = span;\n+        }\n+    }\n+\n     fn check_expr_yield(\n         &self,\n         value: &'tcx hir::Expr<'tcx>,"}]}