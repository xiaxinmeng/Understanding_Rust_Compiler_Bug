{"sha": "7e0b1f11154bc5e9af996b821b2c28680c3f46c8", "node_id": "C_kwDOAAsO6NoAKDdlMGIxZjExMTU0YmM1ZTlhZjk5NmI4MjFiMmMyODY4MGMzZjQ2Yzg", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-19T16:09:10Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-19T16:09:10Z"}, "message": "Conditionally encode boolean", "tree": {"sha": "b71f44a0023a39b194e85ecaa016652eaecb3e65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b71f44a0023a39b194e85ecaa016652eaecb3e65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e0b1f11154bc5e9af996b821b2c28680c3f46c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e0b1f11154bc5e9af996b821b2c28680c3f46c8", "html_url": "https://github.com/rust-lang/rust/commit/7e0b1f11154bc5e9af996b821b2c28680c3f46c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e0b1f11154bc5e9af996b821b2c28680c3f46c8/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9793abc2092ab37e406a07b8e35bfaf5a9e26fe6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9793abc2092ab37e406a07b8e35bfaf5a9e26fe6", "html_url": "https://github.com/rust-lang/rust/commit/9793abc2092ab37e406a07b8e35bfaf5a9e26fe6"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "0d924f27c21a6a031d5a52ae92e51b7c5d37ec8c", "filename": "compiler/rustc_metadata/src/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7e0b1f11154bc5e9af996b821b2c28680c3f46c8/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e0b1f11154bc5e9af996b821b2c28680c3f46c8/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=7e0b1f11154bc5e9af996b821b2c28680c3f46c8", "patch": "@@ -223,7 +223,15 @@ provide! { tcx, def_id, other, cdata,\n     generator_kind => { table }\n     trait_def => { table }\n     deduced_param_attrs => { table }\n-    is_type_alias_impl_trait => { table }\n+    is_type_alias_impl_trait => {\n+        debug_assert_eq!(tcx.def_kind(def_id), DefKind::OpaqueTy);\n+        cdata\n+            .root\n+            .tables\n+            .is_type_alias_impl_trait\n+            .get(cdata, def_id.index)\n+            .is_some()\n+    }\n     collect_return_position_impl_trait_in_trait_tys => {\n         Ok(cdata\n             .root"}, {"sha": "ab2ad79b876d44e9848bd768b25d534e4f276d06", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7e0b1f11154bc5e9af996b821b2c28680c3f46c8/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e0b1f11154bc5e9af996b821b2c28680c3f46c8/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=7e0b1f11154bc5e9af996b821b2c28680c3f46c8", "patch": "@@ -1512,9 +1512,11 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n             hir::ItemKind::Mod(ref m) => {\n                 return self.encode_info_for_mod(item.owner_id.def_id, m);\n             }\n-            hir::ItemKind::OpaqueTy(..) => {\n+            hir::ItemKind::OpaqueTy(ref opaque) => {\n                 self.encode_explicit_item_bounds(def_id);\n-                record!(self.tables.is_type_alias_impl_trait[def_id] <- self.tcx.is_type_alias_impl_trait(def_id));\n+                if matches!(opaque.origin, hir::OpaqueTyOrigin::TyAlias) {\n+                    self.tables.is_type_alias_impl_trait.set(def_id.index, ());\n+                }\n             }\n             hir::ItemKind::Enum(..) => {\n                 let adt_def = self.tcx.adt_def(def_id);"}, {"sha": "5066dbbb90f3a60168e3bd1a2829cc70d7bd1b16", "filename": "compiler/rustc_metadata/src/rmeta/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7e0b1f11154bc5e9af996b821b2c28680c3f46c8/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e0b1f11154bc5e9af996b821b2c28680c3f46c8/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs?ref=7e0b1f11154bc5e9af996b821b2c28680c3f46c8", "patch": "@@ -404,7 +404,8 @@ define_tables! {\n     proc_macro: Table<DefIndex, MacroKind>,\n     module_reexports: Table<DefIndex, LazyArray<ModChild>>,\n     deduced_param_attrs: Table<DefIndex, LazyArray<DeducedParamAttrs>>,\n-    is_type_alias_impl_trait: Table<DefIndex, LazyValue<bool>>,\n+    // Slot is full when opaque is TAIT.\n+    is_type_alias_impl_trait: Table<DefIndex, ()>,\n \n     trait_impl_trait_tys: Table<DefIndex, LazyValue<FxHashMap<DefId, Ty<'static>>>>,\n }"}]}