{"sha": "53a633fb445af045493f832fdce4f9d9ce48fbd4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzYTYzM2ZiNDQ1YWYwNDU0OTNmODMyZmRjZTRmOWQ5Y2U0OGZiZDQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-08T08:54:19Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-18T14:08:25Z"}, "message": "decouple push_directory from Parser", "tree": {"sha": "afc7295706bfbbf7419db622e670db13b1b9a8e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afc7295706bfbbf7419db622e670db13b1b9a8e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53a633fb445af045493f832fdce4f9d9ce48fbd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53a633fb445af045493f832fdce4f9d9ce48fbd4", "html_url": "https://github.com/rust-lang/rust/commit/53a633fb445af045493f832fdce4f9d9ce48fbd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53a633fb445af045493f832fdce4f9d9ce48fbd4/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca098b16a4114fd96a4059ba3f807d33dde5ef07", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca098b16a4114fd96a4059ba3f807d33dde5ef07", "html_url": "https://github.com/rust-lang/rust/commit/ca098b16a4114fd96a4059ba3f807d33dde5ef07"}], "stats": {"total": 41, "additions": 23, "deletions": 18}, "files": [{"sha": "53c0c9154bc4a1b8ee6b74f7d6f1dae5059a431c", "filename": "src/librustc_parse/parser/module.rs", "status": "modified", "additions": 23, "deletions": 18, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/53a633fb445af045493f832fdce4f9d9ce48fbd4/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53a633fb445af045493f832fdce4f9d9ce48fbd4/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fmodule.rs?ref=53a633fb445af045493f832fdce4f9d9ce48fbd4", "patch": "@@ -58,7 +58,7 @@ impl<'a> Parser<'a> {\n             }\n         } else {\n             let old_directory = self.directory.clone();\n-            self.push_directory(id, &attrs);\n+            push_directory(id, &attrs, &mut self.directory.ownership, &mut self.directory.path);\n \n             self.expect(&token::OpenDelim(token::Brace))?;\n             let module = self.parse_mod(&token::CloseDelim(token::Brace))?;\n@@ -142,26 +142,31 @@ impl<'a> Parser<'a> {\n         }\n         Ok(())\n     }\n+}\n \n-    fn push_directory(&mut self, id: Ident, attrs: &[Attribute]) {\n-        if let Some(path) = attr::first_attr_value_str_by_name(attrs, sym::path) {\n-            self.directory.path.push(&*path.as_str());\n-            self.directory.ownership = DirectoryOwnership::Owned { relative: None };\n-        } else {\n-            // We have to push on the current module name in the case of relative\n-            // paths in order to ensure that any additional module paths from inline\n-            // `mod x { ... }` come after the relative extension.\n-            //\n-            // For example, a `mod z { ... }` inside `x/y.rs` should set the current\n-            // directory path to `/x/y/z`, not `/x/z` with a relative offset of `y`.\n-            if let DirectoryOwnership::Owned { relative } = &mut self.directory.ownership {\n-                if let Some(ident) = relative.take() {\n-                    // remove the relative offset\n-                    self.directory.path.push(&*ident.as_str());\n-                }\n+fn push_directory(\n+    id: Ident,\n+    attrs: &[Attribute],\n+    dir_ownership: &mut DirectoryOwnership,\n+    dir_path: &mut PathBuf,\n+) {\n+    if let Some(path) = attr::first_attr_value_str_by_name(attrs, sym::path) {\n+        dir_path.push(&*path.as_str());\n+        *dir_ownership = DirectoryOwnership::Owned { relative: None };\n+    } else {\n+        // We have to push on the current module name in the case of relative\n+        // paths in order to ensure that any additional module paths from inline\n+        // `mod x { ... }` come after the relative extension.\n+        //\n+        // For example, a `mod z { ... }` inside `x/y.rs` should set the current\n+        // directory path to `/x/y/z`, not `/x/z` with a relative offset of `y`.\n+        if let DirectoryOwnership::Owned { relative } = dir_ownership {\n+            if let Some(ident) = relative.take() {\n+                // Remove the relative offset.\n+                dir_path.push(&*ident.as_str());\n             }\n-            self.directory.path.push(&*id.as_str());\n         }\n+        dir_path.push(&*id.as_str());\n     }\n }\n "}]}