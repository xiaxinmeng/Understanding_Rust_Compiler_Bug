{"sha": "cae02fff6a36b19d65c4bb2ff993e373dad16032", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhZTAyZmZmNmEzNmIxOWQ2NWM0YmIyZmY5OTNlMzczZGFkMTYwMzI=", "commit": {"author": {"name": "Jonathan Price", "email": "jonmarkprice@users.noreply.github.com", "date": "2016-06-27T21:34:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-27T21:34:35Z"}, "message": "fixed backquotes and awkward borrowing clause", "tree": {"sha": "7a626e65bc0583501a242097f60a2add0d3c7303", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a626e65bc0583501a242097f60a2add0d3c7303"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cae02fff6a36b19d65c4bb2ff993e373dad16032", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cae02fff6a36b19d65c4bb2ff993e373dad16032", "html_url": "https://github.com/rust-lang/rust/commit/cae02fff6a36b19d65c4bb2ff993e373dad16032", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cae02fff6a36b19d65c4bb2ff993e373dad16032/comments", "author": {"login": "jonmarkprice", "id": 6698070, "node_id": "MDQ6VXNlcjY2OTgwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/6698070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonmarkprice", "html_url": "https://github.com/jonmarkprice", "followers_url": "https://api.github.com/users/jonmarkprice/followers", "following_url": "https://api.github.com/users/jonmarkprice/following{/other_user}", "gists_url": "https://api.github.com/users/jonmarkprice/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonmarkprice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonmarkprice/subscriptions", "organizations_url": "https://api.github.com/users/jonmarkprice/orgs", "repos_url": "https://api.github.com/users/jonmarkprice/repos", "events_url": "https://api.github.com/users/jonmarkprice/events{/privacy}", "received_events_url": "https://api.github.com/users/jonmarkprice/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "126af085be2b760b859d073d8aff164572ef7d4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/126af085be2b760b859d073d8aff164572ef7d4a", "html_url": "https://github.com/rust-lang/rust/commit/126af085be2b760b859d073d8aff164572ef7d4a"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "73775956b6ccbfc52bcafbbc7d251b2f66c73e21", "filename": "src/doc/book/ownership.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cae02fff6a36b19d65c4bb2ff993e373dad16032/src%2Fdoc%2Fbook%2Fownership.md", "raw_url": "https://github.com/rust-lang/rust/raw/cae02fff6a36b19d65c4bb2ff993e373dad16032/src%2Fdoc%2Fbook%2Fownership.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fownership.md?ref=cae02fff6a36b19d65c4bb2ff993e373dad16032", "patch": "@@ -212,7 +212,7 @@ But, unlike a move, we can still use `v` afterward. This is because an `i32`\n has no pointers to data somewhere else, copying it is a full copy.\n \n All primitive types implement the `Copy` trait and their ownership is\n-therefore not moved like one would assume, following the \u00b4ownership rules\u00b4.\n+therefore not moved like one would assume, following the 'ownership rules'.\n To give an example, the two following snippets of code only compile because the\n `i32` and `bool` types implement the `Copy` trait.\n \n@@ -288,6 +288,6 @@ let (v1, v2, answer) = foo(v1, v2);\n Ugh! The return type, return line, and calling the function gets way more\n complicated.\n \n-Luckily, Rust offers a feature, borrowing, which helps us solve this problem.\n-It\u2019s the topic of the next section!\n+Luckily, Rust offers a feature which helps us solve this problem.\n+It\u2019s called borrowing and is the topic of the next section!\n "}]}