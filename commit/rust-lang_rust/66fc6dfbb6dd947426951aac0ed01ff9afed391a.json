{"sha": "66fc6dfbb6dd947426951aac0ed01ff9afed391a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ZmM2ZGZiYjZkZDk0NzQyNjk1MWFhYzBlZDAxZmY5YWZlZDM5MWE=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-07-10T18:25:32Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-07-28T13:46:24Z"}, "message": "Update error codes", "tree": {"sha": "daf271092c76a69146e56d093a5966834effd250", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/daf271092c76a69146e56d093a5966834effd250"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66fc6dfbb6dd947426951aac0ed01ff9afed391a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66fc6dfbb6dd947426951aac0ed01ff9afed391a", "html_url": "https://github.com/rust-lang/rust/commit/66fc6dfbb6dd947426951aac0ed01ff9afed391a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66fc6dfbb6dd947426951aac0ed01ff9afed391a/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "057b0adf47f61d9e9dd8c23fff6dac742e001f36", "url": "https://api.github.com/repos/rust-lang/rust/commits/057b0adf47f61d9e9dd8c23fff6dac742e001f36", "html_url": "https://github.com/rust-lang/rust/commit/057b0adf47f61d9e9dd8c23fff6dac742e001f36"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "bcfc9db56fcc789c76fcdef01ab930fcd0947774", "filename": "src/librustc_borrowck/borrowck/gather_loans/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66fc6dfbb6dd947426951aac0ed01ff9afed391a/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66fc6dfbb6dd947426951aac0ed01ff9afed391a/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs?ref=66fc6dfbb6dd947426951aac0ed01ff9afed391a", "patch": "@@ -148,7 +148,7 @@ impl<'a, 'tcx> euv::Delegate<'tcx> for GatherLoanCtxt<'a, 'tcx> {\n          if borrows_impl_arg {\n              span_err!(self.bccx.tcx.sess,\n                 borrow_span,\n-                E0805,\n+                E0623,\n                 \"cannot borrow the implicit argument of a generator\");\n          }\n \n@@ -226,7 +226,7 @@ fn check_yields<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n         if extent_has_yield(bccx.tcx, extent) {\n              span_err!(bccx.tcx.sess,\n                 borrow_span,\n-                E0806,\n+                E0624,\n                 \"cannot borrow this value across the suspend point of a generator\");\n         }\n     }"}, {"sha": "2ae9498d63cfd9e913709036f92c7874826652cf", "filename": "src/librustc_borrowck/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66fc6dfbb6dd947426951aac0ed01ff9afed391a/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66fc6dfbb6dd947426951aac0ed01ff9afed391a/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fdiagnostics.rs?ref=66fc6dfbb6dd947426951aac0ed01ff9afed391a", "patch": "@@ -1191,6 +1191,6 @@ register_diagnostics! {\n     E0594, // cannot assign to {}\n     E0595, // closure cannot assign to {}\n     E0598, // lifetime of {} is too short to guarantee its contents can be...\n-    E0805, // borrow of the implicit argument of a generator\n-    E0806, // borrow across a suspend point\n+    E0623, // borrow of the implicit argument of a generator\n+    E0624, // borrow across a suspend point\n }"}, {"sha": "40693d4d0ea70088b835a13d857dcbd549e7142f", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66fc6dfbb6dd947426951aac0ed01ff9afed391a/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66fc6dfbb6dd947426951aac0ed01ff9afed391a/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=66fc6dfbb6dd947426951aac0ed01ff9afed391a", "patch": "@@ -4002,7 +4002,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     ty\n                 }\n                 None => {\n-                    struct_span_err!(self.tcx.sess, expr.span, E0803,\n+                    struct_span_err!(self.tcx.sess, expr.span, E0626,\n                                  \"gen arg expression outside of generator literal\").emit();\n                     tcx.types.err\n                 }\n@@ -4014,7 +4014,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     self.check_expr_coercable_to_type(&value, ty);\n                 }\n                 None => {\n-                    struct_span_err!(self.tcx.sess, expr.span, E0802,\n+                    struct_span_err!(self.tcx.sess, expr.span, E0625,\n                                  \"yield statement outside of generator literal\").emit();\n                 }\n             }"}, {"sha": "45ae8df387b0f54d6250824cf6b112da618926b3", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/66fc6dfbb6dd947426951aac0ed01ff9afed391a/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66fc6dfbb6dd947426951aac0ed01ff9afed391a/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=66fc6dfbb6dd947426951aac0ed01ff9afed391a", "patch": "@@ -4667,8 +4667,6 @@ register_diagnostics! {\n     E0588, // packed struct cannot transitively contain a `[repr(align)]` struct\n     E0592, // duplicate definitions with name `{}`\n //  E0613, // Removed (merged with E0609)\n-    E0801, // unexpected generator return\n-    E0802, // yield statement outside of generator literal\n-    E0803, // gen arg expression outside of generator literal\n-    E0804, // cannot determine the type for the implicit argument of this generator\n+    E0625, // yield statement outside of generator literal\n+    E0626, // gen arg expression outside of generator literal\n }"}]}