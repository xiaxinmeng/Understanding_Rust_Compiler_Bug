{"sha": "798a419b1c57a388fab026263d3bd256bdb779f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5OGE0MTliMWM1N2EzODhmYWIwMjYyNjNkM2JkMjU2YmRiNzc5ZjY=", "commit": {"author": {"name": "Guillaume Endignoux", "email": "guillaumee@google.com", "date": "2019-01-10T21:48:40Z"}, "committer": {"name": "Guillaume Endignoux", "email": "guillaumee@google.com", "date": "2019-01-10T21:48:44Z"}, "message": "Fix comments in clippy_lints/src/len_zero.rs", "tree": {"sha": "2c9b85ed1bb2f0a2f084a5ba5ecd30cd766a1726", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c9b85ed1bb2f0a2f084a5ba5ecd30cd766a1726"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/798a419b1c57a388fab026263d3bd256bdb779f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/798a419b1c57a388fab026263d3bd256bdb779f6", "html_url": "https://github.com/rust-lang/rust/commit/798a419b1c57a388fab026263d3bd256bdb779f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/798a419b1c57a388fab026263d3bd256bdb779f6/comments", "author": {"login": "gendx", "id": 4346404, "node_id": "MDQ6VXNlcjQzNDY0MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4346404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gendx", "html_url": "https://github.com/gendx", "followers_url": "https://api.github.com/users/gendx/followers", "following_url": "https://api.github.com/users/gendx/following{/other_user}", "gists_url": "https://api.github.com/users/gendx/gists{/gist_id}", "starred_url": "https://api.github.com/users/gendx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gendx/subscriptions", "organizations_url": "https://api.github.com/users/gendx/orgs", "repos_url": "https://api.github.com/users/gendx/repos", "events_url": "https://api.github.com/users/gendx/events{/privacy}", "received_events_url": "https://api.github.com/users/gendx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gendx", "id": 4346404, "node_id": "MDQ6VXNlcjQzNDY0MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4346404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gendx", "html_url": "https://github.com/gendx", "followers_url": "https://api.github.com/users/gendx/followers", "following_url": "https://api.github.com/users/gendx/following{/other_user}", "gists_url": "https://api.github.com/users/gendx/gists{/gist_id}", "starred_url": "https://api.github.com/users/gendx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gendx/subscriptions", "organizations_url": "https://api.github.com/users/gendx/orgs", "repos_url": "https://api.github.com/users/gendx/repos", "events_url": "https://api.github.com/users/gendx/events{/privacy}", "received_events_url": "https://api.github.com/users/gendx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da7aebc342b7dae444912b98dedbab22bf2a224c", "url": "https://api.github.com/repos/rust-lang/rust/commits/da7aebc342b7dae444912b98dedbab22bf2a224c", "html_url": "https://github.com/rust-lang/rust/commit/da7aebc342b7dae444912b98dedbab22bf2a224c"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "b15ba5a478388cf437a0c541c2c63b0e97868646", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/798a419b1c57a388fab026263d3bd256bdb779f6/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/798a419b1c57a388fab026263d3bd256bdb779f6/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=798a419b1c57a388fab026263d3bd256bdb779f6", "patch": "@@ -31,10 +31,10 @@ use syntax::source_map::{Span, Spanned};\n /// ```\n /// instead use\n /// ```rust\n-/// if x.len().is_empty() {\n+/// if x.is_empty() {\n ///     ..\n /// }\n-/// if !y.len().is_empty() {\n+/// if !y.is_empty() {\n ///     ..\n /// }\n /// ```\n@@ -115,8 +115,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LenZero {\n                     check_cmp(cx, expr.span, left, right, \"\", 1); // len < 1\n                     check_cmp(cx, expr.span, right, left, \"!\", 0); // 0 < len\n                 },\n-                BinOpKind::Ge => check_cmp(cx, expr.span, left, right, \"!\", 1), // len <= 1\n-                BinOpKind::Le => check_cmp(cx, expr.span, right, left, \"!\", 1), // 1 >= len\n+                BinOpKind::Ge => check_cmp(cx, expr.span, left, right, \"!\", 1), // len >= 1\n+                BinOpKind::Le => check_cmp(cx, expr.span, right, left, \"!\", 1), // 1 <= len\n                 _ => (),\n             }\n         }"}]}