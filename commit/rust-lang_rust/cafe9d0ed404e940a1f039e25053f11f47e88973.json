{"sha": "cafe9d0ed404e940a1f039e25053f11f47e88973", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhZmU5ZDBlZDQwNGU5NDBhMWYwMzllMjUwNTNmMTFmNDdlODg5NzM=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-06-19T05:04:16Z"}, "committer": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-06-19T05:04:16Z"}, "message": "Do not consume semicolon twice while parsing local statement", "tree": {"sha": "e90189202fa59770789471262857980d2dde21ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e90189202fa59770789471262857980d2dde21ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cafe9d0ed404e940a1f039e25053f11f47e88973", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cafe9d0ed404e940a1f039e25053f11f47e88973", "html_url": "https://github.com/rust-lang/rust/commit/cafe9d0ed404e940a1f039e25053f11f47e88973", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cafe9d0ed404e940a1f039e25053f11f47e88973/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5230979794db209de492b3f7cc688020b72bc7c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/5230979794db209de492b3f7cc688020b72bc7c6", "html_url": "https://github.com/rust-lang/rust/commit/5230979794db209de492b3f7cc688020b72bc7c6"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3500deedde93fa55dcf2e56345ec438de20c8591", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cafe9d0ed404e940a1f039e25053f11f47e88973/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cafe9d0ed404e940a1f039e25053f11f47e88973/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=cafe9d0ed404e940a1f039e25053f11f47e88973", "patch": "@@ -4700,7 +4700,7 @@ impl<'a> Parser<'a> {\n                 if macro_legacy_warnings && self.token != token::Semi {\n                     self.warn_missing_semicolon();\n                 } else {\n-                    self.expect_one_of(&[token::Semi], &[])?;\n+                    self.expect_one_of(&[], &[token::Semi])?;\n                 }\n             }\n             _ => {}"}]}