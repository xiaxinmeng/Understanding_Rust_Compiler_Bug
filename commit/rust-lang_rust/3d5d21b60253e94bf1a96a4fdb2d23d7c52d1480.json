{"sha": "3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkNWQyMWI2MDI1M2U5NGJmMWE5NmE0ZmRiMmQyM2Q3YzUyZDE0ODA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-23T12:55:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-23T12:55:25Z"}, "message": "Merge #7009\n\n7009: Implement workspace/willRenameFiles for single-level file moves r=matklad a=kjeremy\n\nAutomatically rename modules during file rename if they're in the same directory.\r\n\r\nFixes #6780\n\nCo-authored-by: Jeremy Kolb <kjeremy@gmail.com>", "tree": {"sha": "038a06aadfdc5063d3e5b0f47577bab71386d5d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/038a06aadfdc5063d3e5b0f47577bab71386d5d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf4z49CRBK7hj4Ov3rIwAAdHIIALENSmDAFQLDdH4fERgJ8hGN\nALZ3mW3AWNJwgsoXTxF6g4jQe+xJfbIgy+A8E5y8njRQUCi32OOZJRmc3Ixx7c7R\nJOpV7J7xlXWR0NxJNGC4YxZnQYXlZXj/6kkWDnW9l18Wqcv7ek6tCAbmIRpWcdnl\nGGojQKzq+11i4ckcFLxgG6rpJJaQZ8FpvfFtUf9A85FookUzD/hKzVkh04FRLf+t\n6gbwnPEqjlOA3dvktSwSsbkkbyOlVruXdmHK6LoqJWtl7y94XtIjJeTIxbHLpFax\nuBt55Mbjd/lJkEOSXwTcoL973mUGmmzi9qx3ey3xnTkcm/b1m0VI0EbTQ+pBg5s=\n=rWwU\n-----END PGP SIGNATURE-----\n", "payload": "tree 038a06aadfdc5063d3e5b0f47577bab71386d5d3\nparent 27ccde9ce97c2e7d531efa9e8da3c7285efca73d\nparent 4f989cfa08e9a9f4abf8dc6136c9802bc7ad3a4c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1608728125 +0000\ncommitter GitHub <noreply@github.com> 1608728125 +0000\n\nMerge #7009\n\n7009: Implement workspace/willRenameFiles for single-level file moves r=matklad a=kjeremy\n\nAutomatically rename modules during file rename if they're in the same directory.\r\n\r\nFixes #6780\n\nCo-authored-by: Jeremy Kolb <kjeremy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480", "html_url": "https://github.com/rust-lang/rust/commit/3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27ccde9ce97c2e7d531efa9e8da3c7285efca73d", "url": "https://api.github.com/repos/rust-lang/rust/commits/27ccde9ce97c2e7d531efa9e8da3c7285efca73d", "html_url": "https://github.com/rust-lang/rust/commit/27ccde9ce97c2e7d531efa9e8da3c7285efca73d"}, {"sha": "4f989cfa08e9a9f4abf8dc6136c9802bc7ad3a4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f989cfa08e9a9f4abf8dc6136c9802bc7ad3a4c", "html_url": "https://github.com/rust-lang/rust/commit/4f989cfa08e9a9f4abf8dc6136c9802bc7ad3a4c"}], "stats": {"total": 98, "additions": 92, "deletions": 6}, "files": [{"sha": "52c7f97759ffb5a1364106209cd3a6152f3aa716", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480", "patch": "@@ -535,6 +535,14 @@ impl Analysis {\n         self.with_db(|db| references::rename::prepare_rename(db, position))\n     }\n \n+    pub fn will_rename_file(\n+        &self,\n+        file_id: FileId,\n+        new_name_stem: &str,\n+    ) -> Cancelable<Option<SourceChange>> {\n+        self.with_db(|db| references::rename::will_rename_file(db, file_id, new_name_stem))\n+    }\n+\n     pub fn structural_search_replace(\n         &self,\n         query: &str,"}, {"sha": "15c95f2398cd7bb098d6d23437a1d7c2991767a1", "filename": "crates/ide/src/references/rename.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480/crates%2Fide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480/crates%2Fide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences%2Frename.rs?ref=3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480", "patch": "@@ -6,7 +6,7 @@ use std::{\n };\n \n use hir::{Module, ModuleDef, ModuleSource, Semantics};\n-use ide_db::base_db::{AnchoredPathBuf, FileRange, SourceDatabaseExt};\n+use ide_db::base_db::{AnchoredPathBuf, FileId, FileRange, SourceDatabaseExt};\n use ide_db::{\n     defs::{Definition, NameClass, NameRefClass},\n     RootDatabase,\n@@ -110,6 +110,23 @@ pub(crate) fn rename_with_semantics(\n     }\n }\n \n+pub(crate) fn will_rename_file(\n+    db: &RootDatabase,\n+    file_id: FileId,\n+    new_name_stem: &str,\n+) -> Option<SourceChange> {\n+    let sema = Semantics::new(db);\n+    let module = sema.to_module_def(file_id)?;\n+\n+    let decl = module.declaration_source(db)?;\n+    let range = decl.value.name()?.syntax().text_range();\n+\n+    let position = FilePosition { file_id: decl.file_id.original_file(db), offset: range.start() };\n+    let mut change = rename_mod(&sema, position, module, new_name_stem).ok()?.info;\n+    change.file_system_edits.clear();\n+    Some(change)\n+}\n+\n fn find_module_at_offset(\n     sema: &Semantics<RootDatabase>,\n     position: FilePosition,"}, {"sha": "80e46bf7f15edc545cbefd2ff76d0f2987086de3", "filename": "crates/rust-analyzer/src/caps.rs", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs?ref=3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480", "patch": "@@ -5,12 +5,14 @@ use ide::CompletionResolveCapability;\n use lsp_types::{\n     CallHierarchyServerCapability, ClientCapabilities, CodeActionKind, CodeActionOptions,\n     CodeActionProviderCapability, CodeLensOptions, CompletionOptions,\n-    DocumentOnTypeFormattingOptions, FoldingRangeProviderCapability, HoverProviderCapability,\n-    ImplementationProviderCapability, OneOf, RenameOptions, SaveOptions,\n+    DocumentOnTypeFormattingOptions, FileOperationFilter, FileOperationPattern,\n+    FileOperationPatternKind, FileOperationRegistrationOptions, FoldingRangeProviderCapability,\n+    HoverProviderCapability, ImplementationProviderCapability, OneOf, RenameOptions, SaveOptions,\n     SelectionRangeProviderCapability, SemanticTokensFullOptions, SemanticTokensLegend,\n     SemanticTokensOptions, ServerCapabilities, SignatureHelpOptions, TextDocumentSyncCapability,\n     TextDocumentSyncKind, TextDocumentSyncOptions, TypeDefinitionProviderCapability,\n-    WorkDoneProgressOptions,\n+    WorkDoneProgressOptions, WorkspaceFileOperationsServerCapabilities,\n+    WorkspaceServerCapabilities,\n };\n use rustc_hash::FxHashSet;\n use serde_json::json;\n@@ -68,7 +70,26 @@ pub fn server_capabilities(client_caps: &ClientCapabilities) -> ServerCapabiliti\n         document_link_provider: None,\n         color_provider: None,\n         execute_command_provider: None,\n-        workspace: None,\n+        workspace: Some(WorkspaceServerCapabilities {\n+            workspace_folders: None,\n+            file_operations: Some(WorkspaceFileOperationsServerCapabilities {\n+                did_create: None,\n+                will_create: None,\n+                did_rename: None,\n+                will_rename: Some(FileOperationRegistrationOptions {\n+                    filters: vec![FileOperationFilter {\n+                        scheme: Some(String::from(\"file\")),\n+                        pattern: FileOperationPattern {\n+                            glob: String::from(\"**/*.rs\"),\n+                            matches: Some(FileOperationPatternKind::File),\n+                            options: None,\n+                        },\n+                    }],\n+                }),\n+                did_delete: None,\n+                will_delete: None,\n+            }),\n+        }),\n         call_hierarchy_provider: Some(CallHierarchyServerCapability::Simple(true)),\n         semantic_tokens_provider: Some(\n             SemanticTokensOptions {"}, {"sha": "25692793b9764d7f34254f55eb8b5d485ff99ae0", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480", "patch": "@@ -11,7 +11,7 @@ use std::{\n use ide::{\n     AssistConfig, CompletionResolveCapability, FileId, FilePosition, FileRange, HoverAction,\n     HoverGotoTypeData, LineIndex, NavigationTarget, Query, RangeInfo, Runnable, RunnableKind,\n-    SearchScope, SymbolKind, TextEdit,\n+    SearchScope, SourceChange, SymbolKind, TextEdit,\n };\n use itertools::Itertools;\n use lsp_server::ErrorCode;\n@@ -402,6 +402,45 @@ pub(crate) fn handle_workspace_symbol(\n     }\n }\n \n+pub(crate) fn handle_will_rename_files(\n+    snap: GlobalStateSnapshot,\n+    params: lsp_types::RenameFilesParams,\n+) -> Result<Option<lsp_types::WorkspaceEdit>> {\n+    let _p = profile::span(\"handle_will_rename_files\");\n+\n+    let source_changes: Vec<SourceChange> = params\n+        .files\n+        .into_iter()\n+        .filter_map(|file_rename| {\n+            let from = Url::parse(&file_rename.old_uri).ok()?;\n+            let to = Url::parse(&file_rename.new_uri).ok()?;\n+\n+            let from_path = from.to_file_path().ok()?;\n+            let to_path = to.to_file_path().ok()?;\n+\n+            // Limit to single-level moves for now.\n+            match (from_path.parent(), to_path.parent()) {\n+                (Some(p1), Some(p2)) if p1 == p2 => {\n+                    let new_name = to_path.file_stem()?;\n+                    let new_name = new_name.to_str()?;\n+                    Some((snap.url_to_file_id(&from).ok()?, new_name.to_string()))\n+                }\n+                _ => None,\n+            }\n+        })\n+        .filter_map(|(file_id, new_name)| {\n+            snap.analysis.will_rename_file(file_id, &new_name).ok()?\n+        })\n+        .collect();\n+\n+    // Drop file system edits since we're just renaming things on the same level\n+    let edits = source_changes.into_iter().map(|it| it.source_file_edits).flatten().collect();\n+    let source_change = SourceChange::from_edits(edits, Vec::new());\n+\n+    let workspace_edit = to_proto::workspace_edit(&snap, source_change)?;\n+    Ok(Some(workspace_edit))\n+}\n+\n pub(crate) fn handle_goto_definition(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::GotoDefinitionParams,"}, {"sha": "5d55dc96e2a18e687d6144a579595b4e2c7bbfc6", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=3d5d21b60253e94bf1a96a4fdb2d23d7c52d1480", "patch": "@@ -485,6 +485,7 @@ impl GlobalState {\n             .on::<lsp_types::request::SemanticTokensRangeRequest>(\n                 handlers::handle_semantic_tokens_range,\n             )\n+            .on::<lsp_types::request::WillRenameFiles>(handlers::handle_will_rename_files)\n             .on::<lsp_ext::Ssr>(handlers::handle_ssr)\n             .finish();\n         Ok(())"}]}