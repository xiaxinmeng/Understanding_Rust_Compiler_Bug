{"sha": "6f9ee8b9e537b9d29793ff7e4feb3c8ecb527433", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmOWVlOGI5ZTUzN2I5ZDI5NzkzZmY3ZTRmZWIzYzhlY2I1Mjc0MzM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-26T10:52:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-26T10:52:44Z"}, "message": "Merge pull request #536 from RalfJung/self-referential-generator\n\ntest self-referential generator", "tree": {"sha": "8a912e680187710f33959cebef3dc87068615547", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a912e680187710f33959cebef3dc87068615547"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f9ee8b9e537b9d29793ff7e4feb3c8ecb527433", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb+9B8CRBK7hj4Ov3rIwAAdHIIAA8pOD0eXvS2aE20Bk2TS0Bk\nCjt84YfGiZoaFCAJ4diHq5XjpPHSE1nQkxhGdLuwjzTdSS4F+LfqLvaJT2tcmkqO\nBZQvJMzdBZv/gF/eqg0tt6Z65gAWxbCp6nP4CXfa3HNTAtI/GeUJ4plV1dTJA/i9\nQf7Laoa8OBv0ljTGucOSC23q7J7++VTajBLLLGRp/YT86hYtU4kAtPiYa6AuHY3J\n4pgLkSQuty/KFvNKXKdwYg+VCEvUl2eyP5svnmenoiasvfNoLXqpXhf0lOUX/Nke\n0xmLhgIrsNh1TCH/YxDNMx95faGSnSkt2uGMk67dnDFiTYI7Ei/cpNHn5iw12/w=\n=a0Sg\n-----END PGP SIGNATURE-----\n", "payload": "tree 8a912e680187710f33959cebef3dc87068615547\nparent e6948fa6eafbe0cd1a4f48531f8626fc1d312c79\nparent 1edba2337b773e98439aa09acfb9280c548d036d\nauthor Ralf Jung <post@ralfj.de> 1543229564 +0100\ncommitter GitHub <noreply@github.com> 1543229564 +0100\n\nMerge pull request #536 from RalfJung/self-referential-generator\n\ntest self-referential generator"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f9ee8b9e537b9d29793ff7e4feb3c8ecb527433", "html_url": "https://github.com/rust-lang/rust/commit/6f9ee8b9e537b9d29793ff7e4feb3c8ecb527433", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f9ee8b9e537b9d29793ff7e4feb3c8ecb527433/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6948fa6eafbe0cd1a4f48531f8626fc1d312c79", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6948fa6eafbe0cd1a4f48531f8626fc1d312c79", "html_url": "https://github.com/rust-lang/rust/commit/e6948fa6eafbe0cd1a4f48531f8626fc1d312c79"}, {"sha": "1edba2337b773e98439aa09acfb9280c548d036d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1edba2337b773e98439aa09acfb9280c548d036d", "html_url": "https://github.com/rust-lang/rust/commit/1edba2337b773e98439aa09acfb9280c548d036d"}], "stats": {"total": 75, "additions": 61, "deletions": 14}, "files": [{"sha": "7c32b026df67b200871087eb4e6170726b1276fb", "filename": "tests/run-pass-fullmir/async-fn.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/6f9ee8b9e537b9d29793ff7e4feb3c8ecb527433/tests%2Frun-pass-fullmir%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f9ee8b9e537b9d29793ff7e4feb3c8ecb527433/tests%2Frun-pass-fullmir%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fasync-fn.rs?ref=6f9ee8b9e537b9d29793ff7e4feb3c8ecb527433", "patch": "@@ -0,0 +1,35 @@\n+#![feature(\n+    async_await,\n+    await_macro,\n+    futures_api,\n+    pin,\n+)]\n+\n+use std::{future::Future, pin::Pin, task::Poll};\n+\n+// See if we can run a basic `async fn`\n+pub async fn foo(x: &u32, y: u32) -> u32 {\n+    let y = &y;\n+    let z = 9;\n+    let z = &z;\n+    let y = await!(async { *y + *z });\n+    let a = 10;\n+    let a = &a;\n+    *x + y + *a\n+}\n+\n+fn main() {\n+    use std::{sync::Arc, task::{Wake, local_waker}};\n+\n+    struct NoWake;\n+    impl Wake for NoWake {\n+        fn wake(_arc_self: &Arc<Self>) {\n+            panic!();\n+        }\n+    }\n+\n+    let lw = unsafe { local_waker(Arc::new(NoWake)) };\n+    let x = 5;\n+    let mut fut = foo(&x, 7);\n+    assert_eq!(unsafe { Pin::new_unchecked(&mut fut) }.poll(&lw), Poll::Ready(31));\n+}"}, {"sha": "603093a037c73931c23a25131b2db2512df6d1b6", "filename": "tests/run-pass/generator.rs", "status": "renamed", "additions": 26, "deletions": 14, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/6f9ee8b9e537b9d29793ff7e4feb3c8ecb527433/tests%2Frun-pass%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f9ee8b9e537b9d29793ff7e4feb3c8ecb527433/tests%2Frun-pass%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fgenerator.rs?ref=6f9ee8b9e537b9d29793ff7e4feb3c8ecb527433", "patch": "@@ -13,11 +13,11 @@\n use std::ops::{GeneratorState, Generator};\n \n fn finish<T>(mut amt: usize, mut t: T) -> T::Return\n-    where T: Generator<Yield = ()>\n+    where T: Generator<Yield = usize>\n {\n     loop {\n         match unsafe { t.resume() } {\n-            GeneratorState::Yielded(()) => amt -= 1,\n+            GeneratorState::Yielded(y) => amt -= y,\n             GeneratorState::Complete(ret) => {\n                 assert_eq!(amt, 0);\n                 return ret\n@@ -28,38 +28,50 @@ fn finish<T>(mut amt: usize, mut t: T) -> T::Return\n }\n \n fn main() {\n-    finish(1, || yield);\n+    finish(1, || yield 1);\n     finish(3, || {\n         let mut x = 0;\n-        yield;\n+        yield 1;\n         x += 1;\n-        yield;\n+        yield 1;\n         x += 1;\n-        yield;\n+        yield 1;\n         assert_eq!(x, 2);\n     });\n-    finish(8, || {\n-        for _ in 0..8 {\n-            yield;\n+    finish(7*8/2, || {\n+        for i in 0..8 {\n+            yield i;\n         }\n     });\n     finish(1, || {\n         if true {\n-            yield;\n+            yield 1;\n         } else {\n         }\n     });\n     finish(1, || {\n         if false {\n         } else {\n-            yield;\n+            yield 1;\n         }\n     });\n     finish(2, || {\n-        if { yield; false } {\n-            yield;\n+        if { yield 1; false } {\n+            yield 1;\n             panic!()\n         }\n-        yield\n+        yield 1;\n     });\n+    // also test a self-referential generator\n+    assert_eq!(\n+        finish(5, || {\n+            let mut x = Box::new(5);\n+            let y = &mut *x;\n+            *y = 5;\n+            yield *y;\n+            *y = 10;\n+            *x\n+        }),\n+        10\n+    );\n }", "previous_filename": "tests/run-pass/generator_control_flow.rs"}]}