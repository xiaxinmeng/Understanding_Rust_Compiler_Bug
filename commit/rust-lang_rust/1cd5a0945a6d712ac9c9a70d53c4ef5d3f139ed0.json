{"sha": "1cd5a0945a6d712ac9c9a70d53c4ef5d3f139ed0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjZDVhMDk0NWE2ZDcxMmFjOWM5YTcwZDUzYzRlZjVkM2YxMzllZDA=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-02-22T05:48:03Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-02-23T16:00:19Z"}, "message": "(core::str) rename rindex -> rindex_chars", "tree": {"sha": "f5274ed4fbe737205f1b9293fe82149f98d91706", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5274ed4fbe737205f1b9293fe82149f98d91706"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cd5a0945a6d712ac9c9a70d53c4ef5d3f139ed0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cd5a0945a6d712ac9c9a70d53c4ef5d3f139ed0", "html_url": "https://github.com/rust-lang/rust/commit/1cd5a0945a6d712ac9c9a70d53c4ef5d3f139ed0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cd5a0945a6d712ac9c9a70d53c4ef5d3f139ed0/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "969fdf419ca90c38b628de2693d00b3589d7a907", "url": "https://api.github.com/repos/rust-lang/rust/commits/969fdf419ca90c38b628de2693d00b3589d7a907", "html_url": "https://github.com/rust-lang/rust/commit/969fdf419ca90c38b628de2693d00b3589d7a907"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "bc316b6e896684ba6a147db95b729f75c8596b62", "filename": "src/fuzzer/fuzzer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cd5a0945a6d712ac9c9a70d53c4ef5d3f139ed0/src%2Ffuzzer%2Ffuzzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cd5a0945a6d712ac9c9a70d53c4ef5d3f139ed0/src%2Ffuzzer%2Ffuzzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffuzzer%2Ffuzzer.rs?ref=1cd5a0945a6d712ac9c9a70d53c4ef5d3f139ed0", "patch": "@@ -286,7 +286,7 @@ fn check_variants_T<T: copy>(\n }\n \n fn last_part(filename: str) -> str {\n-  let ix = option::get(str::rindex(filename, '/'));\n+  let ix = option::get(str::rindex_chars(filename, '/'));\n   str::slice(filename, ix + 1u, str::len_chars(filename) - 3u)\n }\n "}, {"sha": "30357d8ea643dd95c9cfc09e11082ea08ea9fce0", "filename": "src/libcore/str.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1cd5a0945a6d712ac9c9a70d53c4ef5d3f139ed0/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cd5a0945a6d712ac9c9a70d53c4ef5d3f139ed0/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=1cd5a0945a6d712ac9c9a70d53c4ef5d3f139ed0", "patch": "@@ -72,7 +72,7 @@ export\n    index_chars,\n    byte_index,\n    byte_index_from,\n-   rindex,\n+   rindex_chars,\n    find,\n    find_bytes,\n    find_from_bytes,\n@@ -877,11 +877,11 @@ fn byte_index_from(s: str, b: u8, start: uint, end: uint) -> option<uint> {\n     str::as_bytes(s) { |v| vec::position_from(v, start, end) { |x| x == b } }\n }\n \n-// Function: rindex\n+// Function: rindex_chars\n //\n // Returns the index of the first matching char\n // (as option some/none)\n-fn rindex(ss: str, cc: char) -> option<uint> {\n+fn rindex_chars(ss: str, cc: char) -> option<uint> {\n     let bii = len_bytes(ss);\n     let cii = len_chars(ss);\n     while bii > 0u {\n@@ -1546,11 +1546,11 @@ mod tests {\n     }\n \n     #[test]\n-    fn test_rindex() {\n-        assert (rindex(\"hello\", 'l') == some(3u));\n-        assert (rindex(\"hello\", 'o') == some(4u));\n-        assert (rindex(\"hello\", 'h') == some(0u));\n-        assert (rindex(\"hello\", 'z') == none);\n+    fn test_rindex_chars() {\n+        assert (rindex_chars(\"hello\", 'l') == some(3u));\n+        assert (rindex_chars(\"hello\", 'o') == some(4u));\n+        assert (rindex_chars(\"hello\", 'h') == some(0u));\n+        assert (rindex_chars(\"hello\", 'z') == none);\n     }\n \n     #[test]"}, {"sha": "3652eaf77f9d8e2d9579c4c6e7824042fe6cd4ee", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1cd5a0945a6d712ac9c9a70d53c4ef5d3f139ed0/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cd5a0945a6d712ac9c9a70d53c4ef5d3f139ed0/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=1cd5a0945a6d712ac9c9a70d53c4ef5d3f139ed0", "patch": "@@ -34,10 +34,10 @@ type path = str;\n \n fn splitDirnameBasename (pp: path) -> {dirname: str, basename: str} {\n     let ii;\n-    alt str::rindex(pp, os_fs::path_sep) {\n+    alt str::rindex_chars(pp, os_fs::path_sep) {\n         option::some(xx) { ii = xx; }\n         option::none {\n-            alt str::rindex(pp, os_fs::alt_path_sep) {\n+            alt str::rindex_chars(pp, os_fs::alt_path_sep) {\n                 option::some(xx) { ii = xx; }\n                 option::none { ret {dirname: \".\", basename: pp}; }\n             }"}]}