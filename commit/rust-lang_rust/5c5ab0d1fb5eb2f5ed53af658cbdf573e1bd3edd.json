{"sha": "5c5ab0d1fb5eb2f5ed53af658cbdf573e1bd3edd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNWFiMGQxZmI1ZWIyZjVlZDUzYWY2NThjYmRmNTczZTFiZDNlZGQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-11-11T22:53:37Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-11-12T20:38:24Z"}, "message": "Improve result output", "tree": {"sha": "30810b77a33c160d46bae63af66578f97be0b98f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30810b77a33c160d46bae63af66578f97be0b98f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c5ab0d1fb5eb2f5ed53af658cbdf573e1bd3edd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c5ab0d1fb5eb2f5ed53af658cbdf573e1bd3edd", "html_url": "https://github.com/rust-lang/rust/commit/5c5ab0d1fb5eb2f5ed53af658cbdf573e1bd3edd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c5ab0d1fb5eb2f5ed53af658cbdf573e1bd3edd/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6514f44bd19cb721125659b1c52e041a3fa267fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/6514f44bd19cb721125659b1c52e041a3fa267fc", "html_url": "https://github.com/rust-lang/rust/commit/6514f44bd19cb721125659b1c52e041a3fa267fc"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "7cc06760162681def5a1da53a8438df6bf7cde58", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5c5ab0d1fb5eb2f5ed53af658cbdf573e1bd3edd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/5c5ab0d1fb5eb2f5ed53af658cbdf573e1bd3edd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=5c5ab0d1fb5eb2f5ed53af658cbdf573e1bd3edd", "patch": "@@ -443,7 +443,7 @@\n                 var lev_distance = MAX_LEV_DISTANCE + 1;\n                 if (obj.name === val.name) {\n                     if (literalSearch === true) {\n-                        if (val.generics.length > 0) {\n+                        if (val.generics.length !== 0) {\n                             if (obj.generics && obj.length >= val.generics.length) {\n                                 var elems = obj.generics.slice(0);\n                                 var allFound = true;\n@@ -467,7 +467,8 @@\n                         }\n                         return true;\n                     }\n-                    // No need to check anything else: we found it. Let's just move on.\n+                    // If the type has generics but don't match, then it won't return at this point.\n+                    // Otherwise, `checkGenerics` will return 0 and it'll return.\n                     var tmp_lev = checkGenerics(obj, val);\n                     if (tmp_lev <= MAX_LEV_DISTANCE) {\n                         return tmp_lev;\n@@ -494,7 +495,9 @@\n                         lev_distance = min(levenshtein(obj.generics[x], val.name), lev_distance);\n                     }\n                 }\n-                return lev_distance;\n+                // Now whatever happens, the returned distance is \"less good\" so we should mark it\n+                // as such, and so we add 1 to the distance to make it \"less good\".\n+                return lev_distance + 1;\n             }\n \n             function findArg(obj, val, literalSearch) {\n@@ -503,7 +506,7 @@\n                 if (obj && obj.type && obj.type.inputs.length > 0) {\n                     for (var i = 0; i < obj.type.inputs.length; i++) {\n                         var tmp = checkType(obj.type.inputs[i], val, literalSearch);\n-                        if (literalSearch && tmp === true) {\n+                        if (literalSearch === true && tmp === true) {\n                             return true;\n                         }\n                         lev_distance = min(tmp, lev_distance);\n@@ -520,7 +523,7 @@\n \n                 if (obj && obj.type && obj.type.output) {\n                     var tmp = checkType(obj.type.output, val, literalSearch);\n-                    if (literalSearch && tmp === true) {\n+                    if (literalSearch === true && tmp === true) {\n                         return true;\n                     }\n                     lev_distance = min(tmp, lev_distance);"}]}