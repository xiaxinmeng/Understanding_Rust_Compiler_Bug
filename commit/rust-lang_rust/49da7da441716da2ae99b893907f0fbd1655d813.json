{"sha": "49da7da441716da2ae99b893907f0fbd1655d813", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5ZGE3ZGE0NDE3MTZkYTJhZTk5Yjg5MzkwN2YwZmJkMTY1NWQ4MTM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-07-14T19:55:17Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-07-14T19:55:17Z"}, "message": "Fix long line.", "tree": {"sha": "641107036be8dff944cf509d6228868546fa5e1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/641107036be8dff944cf509d6228868546fa5e1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49da7da441716da2ae99b893907f0fbd1655d813", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49da7da441716da2ae99b893907f0fbd1655d813", "html_url": "https://github.com/rust-lang/rust/commit/49da7da441716da2ae99b893907f0fbd1655d813", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49da7da441716da2ae99b893907f0fbd1655d813/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c124a025bfb421791b0b4bf1350f6203e346781a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c124a025bfb421791b0b4bf1350f6203e346781a", "html_url": "https://github.com/rust-lang/rust/commit/c124a025bfb421791b0b4bf1350f6203e346781a"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "4dc8f0dfdc4ce83f90c4852936191809ff0b183d", "filename": "src/comp/metadata/decoder.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/49da7da441716da2ae99b893907f0fbd1655d813/src%2Fcomp%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49da7da441716da2ae99b893907f0fbd1655d813/src%2Fcomp%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fdecoder.rs?ref=49da7da441716da2ae99b893907f0fbd1655d813", "patch": "@@ -55,7 +55,8 @@ fn lookup_hash(&ebmlivec::doc d, fn(&u8[]) -> bool  eq_fn, uint hash) ->\n     ret result;\n }\n \n-fn maybe_find_item(int item_id, &ebmlivec::doc items) -> option::t[ebmlivec::doc] {\n+fn maybe_find_item(int item_id, &ebmlivec::doc items)\n+    -> option::t[ebmlivec::doc] {\n     fn eq_item(&u8[] bytes, int item_id) -> bool {\n         ret ebmlivec::be_uint_from_bytes(@bytes, 0u, 4u) as int == item_id;\n     }"}]}