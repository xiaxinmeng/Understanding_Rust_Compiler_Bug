{"sha": "a7a011d2fa97530f30ff2e7112c04723ba611152", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3YTAxMWQyZmE5NzUzMGYzMGZmMmU3MTEyYzA0NzIzYmE2MTExNTI=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-20T11:31:52Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-26T21:50:17Z"}, "message": "Immediately evaluate and validate constants when we want them as operands", "tree": {"sha": "a8e97ae3ad57ded920706bfb6def3e90658dee5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8e97ae3ad57ded920706bfb6def3e90658dee5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7a011d2fa97530f30ff2e7112c04723ba611152", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7a011d2fa97530f30ff2e7112c04723ba611152", "html_url": "https://github.com/rust-lang/rust/commit/a7a011d2fa97530f30ff2e7112c04723ba611152", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7a011d2fa97530f30ff2e7112c04723ba611152/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e969b73f6f633187a829111d3e80423e85fd513", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e969b73f6f633187a829111d3e80423e85fd513", "html_url": "https://github.com/rust-lang/rust/commit/0e969b73f6f633187a829111d3e80423e85fd513"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "110dadbfb378fefe732753b2a8f8e97c0b17ad38", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a7a011d2fa97530f30ff2e7112c04723ba611152/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a011d2fa97530f30ff2e7112c04723ba611152/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=a7a011d2fa97530f30ff2e7112c04723ba611152", "patch": "@@ -578,9 +578,16 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             ty::ConstKind::Param(_) => throw_inval!(TooGeneric),\n             ty::ConstKind::Unevaluated(def_id, substs) => {\n                 let instance = self.resolve(def_id, substs)?;\n-                // FIXME: don't use `const_eval_raw` for regular constants, instead use `const_eval`\n-                // which immediately validates the result before we continue with it here.\n-                return Ok(OpTy::from(self.const_eval_raw(GlobalId { instance, promoted: None })?));\n+                let param_env = if self.tcx.is_static(def_id) {\n+                    ty::ParamEnv::reveal_all()\n+                } else {\n+                    self.param_env\n+                };\n+                let val =\n+                    self.tcx.const_eval(param_env.and(GlobalId { instance, promoted: None }))?;\n+                // \"recurse\". This is only ever going into a recusion depth of 1, because after\n+                // `const_eval` we don't have `Unevaluated` anymore.\n+                return self.eval_const_to_op(val, layout);\n             }\n             ty::ConstKind::Value(val_val) => val_val,\n         };"}]}