{"sha": "14f155107591ebbd0a6c3fa71b2eaa3e03fe9419", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZjE1NTEwNzU5MWViYmQwYTZjM2ZhNzFiMmVhYTNlMDNmZTk0MTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-30T06:30:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-30T06:30:38Z"}, "message": "Auto merge of #7118 - TaKO8Ki:fix-false-positive-in-comparison-chain, r=giraffate\n\nFix a false-positive inside const fn in `comparison_chain`\n\ncloses https://github.com/rust-lang/rust-clippy/issues/7082\n\nchangelog: fix a false-positive inside const fn in [`comparison_chain`]", "tree": {"sha": "eb08a0e996f4f22f2685022ee6c1ce63cae603d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb08a0e996f4f22f2685022ee6c1ce63cae603d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14f155107591ebbd0a6c3fa71b2eaa3e03fe9419", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14f155107591ebbd0a6c3fa71b2eaa3e03fe9419", "html_url": "https://github.com/rust-lang/rust/commit/14f155107591ebbd0a6c3fa71b2eaa3e03fe9419", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14f155107591ebbd0a6c3fa71b2eaa3e03fe9419/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a55912c48e4ac08c0ac39a2d562b44699fa20d4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a55912c48e4ac08c0ac39a2d562b44699fa20d4d", "html_url": "https://github.com/rust-lang/rust/commit/a55912c48e4ac08c0ac39a2d562b44699fa20d4d"}, {"sha": "0dff377a62b3ae24ceb88ff0a9070f3a4e3d5552", "url": "https://api.github.com/repos/rust-lang/rust/commits/0dff377a62b3ae24ceb88ff0a9070f3a4e3d5552", "html_url": "https://github.com/rust-lang/rust/commit/0dff377a62b3ae24ceb88ff0a9070f3a4e3d5552"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "2a61d58e6537db119a1053ad4845cdf835fc0c39", "filename": "clippy_lints/src/comparison_chain.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/14f155107591ebbd0a6c3fa71b2eaa3e03fe9419/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f155107591ebbd0a6c3fa71b2eaa3e03fe9419/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcomparison_chain.rs?ref=14f155107591ebbd0a6c3fa71b2eaa3e03fe9419", "patch": "@@ -1,6 +1,6 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n use clippy_utils::ty::implements_trait;\n-use clippy_utils::{get_trait_def_id, if_sequence, is_else_clause, paths, SpanlessEq};\n+use clippy_utils::{get_trait_def_id, if_sequence, in_constant, is_else_clause, paths, SpanlessEq};\n use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n@@ -64,6 +64,10 @@ impl<'tcx> LateLintPass<'tcx> for ComparisonChain {\n             return;\n         }\n \n+        if in_constant(cx, expr.hir_id) {\n+            return;\n+        }\n+\n         // Check that there exists at least one explicit else condition\n         let (conds, _) = if_sequence(expr);\n         if conds.len() < 2 {"}, {"sha": "c12c6a310275db9c77d39849235c02058c5ee4bb", "filename": "tests/ui/comparison_chain.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/14f155107591ebbd0a6c3fa71b2eaa3e03fe9419/tests%2Fui%2Fcomparison_chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f155107591ebbd0a6c3fa71b2eaa3e03fe9419/tests%2Fui%2Fcomparison_chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcomparison_chain.rs?ref=14f155107591ebbd0a6c3fa71b2eaa3e03fe9419", "patch": "@@ -203,4 +203,32 @@ mod issue_5212 {\n     }\n }\n \n+enum Sign {\n+    Negative,\n+    Positive,\n+    Zero,\n+}\n+\n+impl Sign {\n+    const fn sign_i8(n: i8) -> Self {\n+        if n == 0 {\n+            Sign::Zero\n+        } else if n > 0 {\n+            Sign::Positive\n+        } else {\n+            Sign::Negative\n+        }\n+    }\n+}\n+\n+const fn sign_i8(n: i8) -> Sign {\n+    if n == 0 {\n+        Sign::Zero\n+    } else if n > 0 {\n+        Sign::Positive\n+    } else {\n+        Sign::Negative\n+    }\n+}\n+\n fn main() {}"}]}