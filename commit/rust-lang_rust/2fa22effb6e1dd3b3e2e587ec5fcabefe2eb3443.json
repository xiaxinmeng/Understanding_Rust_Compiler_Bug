{"sha": "2fa22effb6e1dd3b3e2e587ec5fcabefe2eb3443", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmYTIyZWZmYjZlMWRkM2IzZTJlNTg3ZWM1ZmNhYmVmZTJlYjM0NDM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-05-21T17:57:49Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-05-21T17:57:54Z"}, "message": "Avoid counting characters and add explanatory comment to test", "tree": {"sha": "512d4d77b9d2669e2eef75b8e0ee55d7c3450998", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/512d4d77b9d2669e2eef75b8e0ee55d7c3450998"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fa22effb6e1dd3b3e2e587ec5fcabefe2eb3443", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fa22effb6e1dd3b3e2e587ec5fcabefe2eb3443", "html_url": "https://github.com/rust-lang/rust/commit/2fa22effb6e1dd3b3e2e587ec5fcabefe2eb3443", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fa22effb6e1dd3b3e2e587ec5fcabefe2eb3443/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c51f00280205d476651ff9f9a46cff6645b411a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c51f00280205d476651ff9f9a46cff6645b411a2", "html_url": "https://github.com/rust-lang/rust/commit/c51f00280205d476651ff9f9a46cff6645b411a2"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "823e56b64e398b83030e13550104aef2935c45db", "filename": "src/liballoc/str.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2fa22effb6e1dd3b3e2e587ec5fcabefe2eb3443/src%2Fliballoc%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fa22effb6e1dd3b3e2e587ec5fcabefe2eb3443/src%2Fliballoc%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstr.rs?ref=2fa22effb6e1dd3b3e2e587ec5fcabefe2eb3443", "patch": "@@ -380,7 +380,13 @@ impl str {\n                reason = \"return type may change to be an iterator\",\n                issue = \"27791\")]\n     pub fn escape_debug(&self) -> String {\n-        self.chars().enumerate().flat_map(|(i, c)| c.escape_debug_ext(i == 0)).collect()\n+        let mut string = String::with_capacity(self.len());\n+        let mut chars = self.chars();\n+        if let Some(first) = chars.next() {\n+            string.extend(first.escape_debug_ext(true))\n+        }\n+        string.extend(chars.flat_map(|c| c.escape_debug_ext(false)));\n+        string\n     }\n \n     /// Escapes each char in `s` with [`char::escape_default`]."}, {"sha": "d11bf5dc3e9a65f9532f0984600a35748c831d9c", "filename": "src/liballoc/tests/str.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2fa22effb6e1dd3b3e2e587ec5fcabefe2eb3443/src%2Fliballoc%2Ftests%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fa22effb6e1dd3b3e2e587ec5fcabefe2eb3443/src%2Fliballoc%2Ftests%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fstr.rs?ref=2fa22effb6e1dd3b3e2e587ec5fcabefe2eb3443", "patch": "@@ -989,6 +989,12 @@ fn test_escape_unicode() {\n \n #[test]\n fn test_escape_debug() {\n+    // Note that there are subtleties with the number of backslashes\n+    // on the left- and right-hand sides. In particular, Unicode code points\n+    // are usually escaped with two backslashes on the right-hand side, as\n+    // they are escaped. However, when the character is unescaped (e.g. for\n+    // printable characters), only a single backslash appears (as the character\n+    // itself appears in the debug string).\n     assert_eq!(\"abc\".escape_debug(), \"abc\");\n     assert_eq!(\"a c\".escape_debug(), \"a c\");\n     assert_eq!(\"\u00e9\u00e8\u00ea\".escape_debug(), \"\u00e9\u00e8\u00ea\");"}, {"sha": "07f873b13c0c424bdde3b74d6a443ee2066b4aaa", "filename": "src/libcore/unicode/unicode.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2fa22effb6e1dd3b3e2e587ec5fcabefe2eb3443/src%2Flibcore%2Funicode%2Funicode.py", "raw_url": "https://github.com/rust-lang/rust/raw/2fa22effb6e1dd3b3e2e587ec5fcabefe2eb3443/src%2Flibcore%2Funicode%2Funicode.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode%2Funicode.py?ref=2fa22effb6e1dd3b3e2e587ec5fcabefe2eb3443", "patch": "@@ -21,7 +21,7 @@\n # - UnicodeData.txt\n #\n # Since this should not require frequent updates, we just store this\n-# out-of-line and check the unicode.py file into git.\n+# out-of-line and check the tables.rs file into git.\n \n import fileinput, re, os, sys, operator, math, datetime\n "}]}