{"sha": "5807be7ccb2c14df9db87a54038221bbf5ae00fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4MDdiZTdjY2IyYzE0ZGY5ZGI4N2E1NDAzODIyMWJiZjVhZTAwZmE=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-04-05T15:09:28Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-04-11T22:13:43Z"}, "message": "Move contents of libstd_unicode into libcore", "tree": {"sha": "9f929cd883f06c42c62d985cad4e06c9b683a066", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f929cd883f06c42c62d985cad4e06c9b683a066"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5807be7ccb2c14df9db87a54038221bbf5ae00fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5807be7ccb2c14df9db87a54038221bbf5ae00fa", "html_url": "https://github.com/rust-lang/rust/commit/5807be7ccb2c14df9db87a54038221bbf5ae00fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5807be7ccb2c14df9db87a54038221bbf5ae00fa/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f87d4a15a82a76e7510629173c366d084f2c02ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/f87d4a15a82a76e7510629173c366d084f2c02ca", "html_url": "https://github.com/rust-lang/rust/commit/f87d4a15a82a76e7510629173c366d084f2c02ca"}], "stats": {"total": 115, "additions": 56, "deletions": 59}, "files": [{"sha": "7cb635a299aeff34d5f2eb0c4e0ab40cc459ad0a", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=5807be7ccb2c14df9db87a54038221bbf5ae00fa", "patch": "@@ -180,6 +180,8 @@ pub mod hash;\n pub mod fmt;\n pub mod time;\n \n+pub mod unicode;\n+\n /* Heap memory allocator trait */\n #[allow(missing_docs)]\n pub mod heap;"}, {"sha": "3e45b08f399dca57d0fe3535f211b47a987130e6", "filename": "src/libcore/unicode/bool_trie.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Flibcore%2Funicode%2Fbool_trie.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Flibcore%2Funicode%2Fbool_trie.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode%2Fbool_trie.rs?ref=5807be7ccb2c14df9db87a54038221bbf5ae00fa", "previous_filename": "src/libstd_unicode/bool_trie.rs"}, {"sha": "0e8b09f621a075a1bef8b01c87dbed0d43aa739c", "filename": "src/libcore/unicode/char.rs", "status": "renamed", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Flibcore%2Funicode%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Flibcore%2Funicode%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode%2Fchar.rs?ref=5807be7ccb2c14df9db87a54038221bbf5ae00fa", "patch": "@@ -28,30 +28,30 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n-use core::char::CharExt as C;\n-use core::iter::FusedIterator;\n-use core::fmt::{self, Write};\n-use tables::{conversions, derived_property, general_category, property};\n+use char::CharExt as C;\n+use iter::FusedIterator;\n+use fmt::{self, Write};\n+use unicode::tables::{conversions, derived_property, general_category, property};\n \n // stable re-exports\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use core::char::{MAX, from_digit, from_u32, from_u32_unchecked};\n+pub use char::{MAX, from_digit, from_u32, from_u32_unchecked};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use core::char::{EscapeDebug, EscapeDefault, EscapeUnicode};\n+pub use char::{EscapeDebug, EscapeDefault, EscapeUnicode};\n #[stable(feature = \"decode_utf16\", since = \"1.9.0\")]\n-pub use core::char::REPLACEMENT_CHARACTER;\n+pub use char::REPLACEMENT_CHARACTER;\n #[stable(feature = \"char_from_str\", since = \"1.20.0\")]\n-pub use core::char::ParseCharError;\n+pub use char::ParseCharError;\n \n // unstable re-exports\n #[stable(feature = \"try_from\", since = \"1.26.0\")]\n-pub use core::char::CharTryFromError;\n+pub use char::CharTryFromError;\n #[unstable(feature = \"decode_utf8\", issue = \"33906\")]\n-pub use core::char::{DecodeUtf8, decode_utf8};\n+pub use char::{DecodeUtf8, decode_utf8};\n #[unstable(feature = \"unicode\", issue = \"27783\")]\n-pub use tables::{UNICODE_VERSION};\n+pub use unicode::tables::{UNICODE_VERSION};\n #[unstable(feature = \"unicode\", issue = \"27783\")]\n-pub use version::UnicodeVersion;\n+pub use unicode::version::UnicodeVersion;\n \n /// Returns an iterator that yields the lowercase equivalent of a `char`.\n ///", "previous_filename": "src/libstd_unicode/char.rs"}, {"sha": "aaf8081799f07a9e42cb86c38dac940f5b62563c", "filename": "src/libcore/unicode/mod.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Flibcore%2Funicode%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Flibcore%2Funicode%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode%2Fmod.rs?ref=5807be7ccb2c14df9db87a54038221bbf5ae00fa", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![unstable(feature = \"unicode\", issue = \"27783\")]\n+#![allow(missing_docs)]\n+\n+mod bool_trie;\n+mod tables;\n+mod version;\n+\n+pub mod str;\n+pub mod char;\n+\n+// For use in liballoc, not re-exported in libstd.\n+pub mod derived_property {\n+    pub use unicode::tables::derived_property::{Case_Ignorable, Cased};\n+}\n+\n+// For use in libsyntax\n+pub mod property {\n+    pub use unicode::tables::property::Pattern_White_Space;\n+}"}, {"sha": "18581bf4d580ba6df5c041ee1e5b3879bbff45ad", "filename": "src/libcore/unicode/str.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Flibcore%2Funicode%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Flibcore%2Funicode%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode%2Fstr.rs?ref=5807be7ccb2c14df9db87a54038221bbf5ae00fa", "patch": "@@ -13,9 +13,9 @@\n //! This module provides functionality to `str` that requires the Unicode\n //! methods provided by the unicode parts of the CharExt trait.\n \n-use core::char;\n-use core::iter::{Filter, FusedIterator};\n-use core::str::Split;\n+use char;\n+use iter::{Filter, FusedIterator};\n+use str::Split;\n \n /// An iterator over the non-whitespace substrings of a string,\n /// separated by any amount of whitespace.", "previous_filename": "src/libstd_unicode/u_str.rs"}, {"sha": "7e8e925bda32e8e6568c1284a30fa473aab5cb94", "filename": "src/libcore/unicode/tables.rs", "status": "renamed", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Flibcore%2Funicode%2Ftables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Flibcore%2Funicode%2Ftables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode%2Ftables.rs?ref=5807be7ccb2c14df9db87a54038221bbf5ae00fa", "patch": "@@ -12,8 +12,8 @@\n \n #![allow(missing_docs, non_upper_case_globals, non_snake_case)]\n \n-use version::UnicodeVersion;\n-use bool_trie::{BoolTrie, SmallBoolTrie};\n+use unicode::version::UnicodeVersion;\n+use unicode::bool_trie::{BoolTrie, SmallBoolTrie};\n \n /// The version of [Unicode](http://www.unicode.org/) that the Unicode parts of\n /// `CharExt` and `UnicodeStrPrelude` traits are based on.\n@@ -1138,9 +1138,6 @@ pub mod property {\n }\n \n pub mod conversions {\n-    use core::option::Option;\n-    use core::option::Option::{Some, None};\n-\n     pub fn to_lower(c: char) -> [char; 3] {\n         match bsearch_case_table(c, to_lowercase_table) {\n             None        => [c, '\\0', '\\0'],", "previous_filename": "src/libstd_unicode/tables.rs"}, {"sha": "39b68dc7d9b67188635f591488e4dfdc6430f7cf", "filename": "src/libcore/unicode/unicode.py", "status": "renamed", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Flibcore%2Funicode%2Funicode.py", "raw_url": "https://github.com/rust-lang/rust/raw/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Flibcore%2Funicode%2Funicode.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode%2Funicode.py?ref=5807be7ccb2c14df9db87a54038221bbf5ae00fa", "patch": "@@ -39,8 +39,8 @@\n \n #![allow(missing_docs, non_upper_case_globals, non_snake_case)]\n \n-use version::UnicodeVersion;\n-use bool_trie::{BoolTrie, SmallBoolTrie};\n+use unicode::version::UnicodeVersion;\n+use unicode::bool_trie::{BoolTrie, SmallBoolTrie};\n '''\n \n # Mapping taken from Table 12 from:\n@@ -408,9 +408,6 @@ def emit_property_module(f, mod, tbl, emit):\n def emit_conversions_module(f, to_upper, to_lower, to_title):\n     f.write(\"pub mod conversions {\")\n     f.write(\"\"\"\n-    use core::option::Option;\n-    use core::option::Option::{Some, None};\n-\n     pub fn to_lower(c: char) -> [char; 3] {\n         match bsearch_case_table(c, to_lowercase_table) {\n             None        => [c, '\\\\0', '\\\\0'],", "previous_filename": "src/libstd_unicode/unicode.py"}, {"sha": "d82a749d91786fc41d2f77a5776154a0b39a5b5f", "filename": "src/libcore/unicode/version.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Flibcore%2Funicode%2Fversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Flibcore%2Funicode%2Fversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode%2Fversion.rs?ref=5807be7ccb2c14df9db87a54038221bbf5ae00fa", "previous_filename": "src/libstd_unicode/version.rs"}, {"sha": "8cdeb6c8ad1845c09488dee2f00b3f21cd06cbf4", "filename": "src/libstd_unicode/lib.rs", "status": "modified", "additions": 2, "deletions": 30, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Flibstd_unicode%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Flibstd_unicode%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd_unicode%2Flib.rs?ref=5807be7ccb2c14df9db87a54038221bbf5ae00fa", "patch": "@@ -27,37 +27,9 @@\n        html_playground_url = \"https://play.rust-lang.org/\",\n        issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\",\n        test(no_crate_inject, attr(allow(unused_variables), deny(warnings))))]\n-#![deny(missing_debug_implementations)]\n #![no_std]\n \n-#![feature(ascii_ctype)]\n-#![feature(core_char_ext)]\n-#![feature(str_internals)]\n-#![feature(decode_utf8)]\n-#![feature(fn_traits)]\n-#![feature(lang_items)]\n-#![feature(non_exhaustive)]\n+#![feature(unicode)]\n #![feature(staged_api)]\n-#![feature(unboxed_closures)]\n \n-mod bool_trie;\n-mod tables;\n-mod u_str;\n-mod version;\n-pub mod char;\n-\n-#[allow(deprecated)]\n-pub mod str {\n-    pub use u_str::{SplitWhitespace, UnicodeStr};\n-    pub use u_str::Utf16Encoder;\n-}\n-\n-// For use in liballoc, not re-exported in libstd.\n-pub mod derived_property {\n-    pub use tables::derived_property::{Case_Ignorable, Cased};\n-}\n-\n-// For use in libsyntax\n-pub mod property {\n-    pub use tables::property::Pattern_White_Space;\n-}\n+pub use core::unicode::*;"}, {"sha": "365387c3e5e2759a51be7fe972a55d1a5fdb6253", "filename": "src/test/compile-fail/single-primitive-inherent-impl.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Ftest%2Fcompile-fail%2Fsingle-primitive-inherent-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5807be7ccb2c14df9db87a54038221bbf5ae00fa/src%2Ftest%2Fcompile-fail%2Fsingle-primitive-inherent-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsingle-primitive-inherent-impl.rs?ref=5807be7ccb2c14df9db87a54038221bbf5ae00fa", "patch": "@@ -15,9 +15,9 @@\n #![no_std]\n \n // OK\n-#[lang = \"char\"]\n-impl char {}\n+#[lang = \"str\"]\n+impl str {}\n \n-impl char {\n-//~^ error: only a single inherent implementation marked with `#[lang = \"char\"]` is allowed for the `char` primitive\n+impl str {\n+//~^ error: only a single inherent implementation marked with `#[lang = \"str\"]` is allowed for the `str` primitive\n }"}]}