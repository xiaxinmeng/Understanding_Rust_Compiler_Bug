{"sha": "3f26c5758d7beb1207ed187b71fe9fa6fcaa03ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmMjZjNTc1OGQ3YmViMTIwN2VkMTg3YjcxZmU5ZmE2ZmNhYTAzZWM=", "commit": {"author": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-06-18T19:31:49Z"}, "committer": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-06-18T19:31:49Z"}, "message": "don't complete top level attrs inside nested attrs and add better labels #4890\n\nSigned-off-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>", "tree": {"sha": "fc47f0b81a6bc44346b91485cb0dce70a82e5d8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc47f0b81a6bc44346b91485cb0dce70a82e5d8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f26c5758d7beb1207ed187b71fe9fa6fcaa03ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f26c5758d7beb1207ed187b71fe9fa6fcaa03ec", "html_url": "https://github.com/rust-lang/rust/commit/3f26c5758d7beb1207ed187b71fe9fa6fcaa03ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f26c5758d7beb1207ed187b71fe9fa6fcaa03ec/comments", "author": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9aad07dbea39132692ff68bd421b88aad9644d81", "url": "https://api.github.com/repos/rust-lang/rust/commits/9aad07dbea39132692ff68bd421b88aad9644d81", "html_url": "https://github.com/rust-lang/rust/commit/9aad07dbea39132692ff68bd421b88aad9644d81"}], "stats": {"total": 24, "additions": 8, "deletions": 16}, "files": [{"sha": "9c7ccc9503690a585eb2c28a5eded366d6628928", "filename": "crates/ra_ide/src/completion/complete_attribute.rs", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3f26c5758d7beb1207ed187b71fe9fa6fcaa03ec/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f26c5758d7beb1207ed187b71fe9fa6fcaa03ec/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs?ref=3f26c5758d7beb1207ed187b71fe9fa6fcaa03ec", "patch": "@@ -22,24 +22,18 @@ pub(super) fn complete_attribute(acc: &mut Completions, ctx: &CompletionContext)\n         }\n         (_, Some(ast::AttrInput::TokenTree(token_tree))) => {\n             let token_tree_str = token_tree.to_string();\n-            complete_attribute_start(\n-                acc,\n-                ctx,\n-                attribute,\n-                token_tree_str.starts_with('(') && token_tree_str.ends_with(')'),\n-            )\n+            let nested = token_tree_str.starts_with('(') && token_tree_str.ends_with(')');\n+\n+            if !nested {\n+                complete_attribute_start(acc, ctx, attribute);\n+            }\n         }\n-        _ => complete_attribute_start(acc, ctx, attribute, false),\n+        _ => complete_attribute_start(acc, ctx, attribute),\n     }\n     Some(())\n }\n \n-fn complete_attribute_start(\n-    acc: &mut Completions,\n-    ctx: &CompletionContext,\n-    attribute: &ast::Attr,\n-    nested: bool,\n-) {\n+fn complete_attribute_start(acc: &mut Completions, ctx: &CompletionContext, attribute: &ast::Attr) {\n     for attr_completion in ATTRIBUTES {\n         let mut item = CompletionItem::new(\n             CompletionKind::Attribute,\n@@ -56,9 +50,7 @@ fn complete_attribute_start(\n         }\n \n         if attribute.kind() == ast::AttrKind::Inner || !attr_completion.should_be_inner {\n-            if (nested && attr_completion.should_be_inner) || !nested {\n-                acc.add(item);\n-            }\n+            acc.add(item);\n         }\n     }\n }"}]}