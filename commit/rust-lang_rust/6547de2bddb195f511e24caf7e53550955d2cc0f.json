{"sha": "6547de2bddb195f511e24caf7e53550955d2cc0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1NDdkZTJiZGRiMTk1ZjUxMWUyNGNhZjdlNTM1NTA5NTVkMmNjMGY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-30T14:10:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-30T14:10:25Z"}, "message": "Rollup merge of #60344 - Aaron1011:fix/tower-hyper, r=eddyb\n\nDon't try to render auto-trait bounds with any inference variables\n\nPreviously, we checked if the target of a projection type was itself an\ninference variable. However, for Rustdoc rendering purposes, there's no\ndistinction between an inference variable ('_') and a type containing\none (e.g. (MyStruct<u8, _>)) - we don't want to render either of them.\n\nFixes #60269\n\nDue to the complexity of the original bug, which spans three different\ncrates (hyper, tower-hyper, and tower), I have been unable to create a\nminimized reproduction for the issue.", "tree": {"sha": "2b2d2e1bdbb09e001459b5189e480f89807d831c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b2d2e1bdbb09e001459b5189e480f89807d831c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6547de2bddb195f511e24caf7e53550955d2cc0f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcyFdRCRBK7hj4Ov3rIwAAdHIIAJYWMU/O91dOdTZTFxzW7/og\np0okKAUTGd0ULGGAT1vEV3+bYYwtDr+Z0uHHv7SsP0GBWBoz4qruvK2ZqY5n4Nou\nHv8EVc1st9VJlsl+xDxIr5/Zcixc+mTjiTfDMsDFKUKPvZ57HMKehdrkC7MRfQwq\n3N5XJ9AJTD63S09R5q8ucC+n23EvODg98iXJ45qSN57/L9PL7bEovfETBvK8Vy3p\n3Xnq3ARKH26CCwVcJvB6wkSH+qUGhOC/q0nAxkt3CnceRGLxllRvp0JZ6Oc6e4lu\n41Vs6P6nxxC5z64NQd0+F36f6YuD/TBRQMGydOIFAf1ltFyvIGmBFOiBuAItH48=\n=qQB1\n-----END PGP SIGNATURE-----\n", "payload": "tree 2b2d2e1bdbb09e001459b5189e480f89807d831c\nparent f843ad60ef5a78d8b4da85c5007d3ecac229f1a8\nparent 02a40e83b217e281e7d2928cf1ce1560f6f7c219\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1556633425 +0200\ncommitter GitHub <noreply@github.com> 1556633425 +0200\n\nRollup merge of #60344 - Aaron1011:fix/tower-hyper, r=eddyb\n\nDon't try to render auto-trait bounds with any inference variables\n\nPreviously, we checked if the target of a projection type was itself an\ninference variable. However, for Rustdoc rendering purposes, there's no\ndistinction between an inference variable ('_') and a type containing\none (e.g. (MyStruct<u8, _>)) - we don't want to render either of them.\n\nFixes #60269\n\nDue to the complexity of the original bug, which spans three different\ncrates (hyper, tower-hyper, and tower), I have been unable to create a\nminimized reproduction for the issue.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6547de2bddb195f511e24caf7e53550955d2cc0f", "html_url": "https://github.com/rust-lang/rust/commit/6547de2bddb195f511e24caf7e53550955d2cc0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6547de2bddb195f511e24caf7e53550955d2cc0f/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f843ad60ef5a78d8b4da85c5007d3ecac229f1a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f843ad60ef5a78d8b4da85c5007d3ecac229f1a8", "html_url": "https://github.com/rust-lang/rust/commit/f843ad60ef5a78d8b4da85c5007d3ecac229f1a8"}, {"sha": "02a40e83b217e281e7d2928cf1ce1560f6f7c219", "url": "https://api.github.com/repos/rust-lang/rust/commits/02a40e83b217e281e7d2928cf1ce1560f6f7c219", "html_url": "https://github.com/rust-lang/rust/commit/02a40e83b217e281e7d2928cf1ce1560f6f7c219"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "4de79ccd1d882e34ffdd4cfb5d7b4f3d2e9727ca", "filename": "src/librustc/traits/auto_trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6547de2bddb195f511e24caf7e53550955d2cc0f/src%2Flibrustc%2Ftraits%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6547de2bddb195f511e24caf7e53550955d2cc0f/src%2Flibrustc%2Ftraits%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fauto_trait.rs?ref=6547de2bddb195f511e24caf7e53550955d2cc0f", "patch": "@@ -712,7 +712,7 @@ impl<'a, 'tcx> AutoTraitFinder<'a, 'tcx> {\n                     // Additionally, we check if we've seen this predicate before,\n                     // to avoid rendering duplicate bounds to the user.\n                     if self.is_param_no_infer(p.skip_binder().projection_ty.substs)\n-                        && !p.ty().skip_binder().is_ty_infer()\n+                        && !p.ty().skip_binder().has_infer_types()\n                         && is_new_pred {\n                             debug!(\"evaluate_nested_obligations: adding projection predicate\\\n                             to computed_preds: {:?}\", predicate);"}, {"sha": "52c8d1847c661d17353e7ecfc60ccf414309d5b2", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6547de2bddb195f511e24caf7e53550955d2cc0f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6547de2bddb195f511e24caf7e53550955d2cc0f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=6547de2bddb195f511e24caf7e53550955d2cc0f", "patch": "@@ -2945,6 +2945,7 @@ impl Clean<Type> for hir::Ty {\n \n impl<'tcx> Clean<Type> for Ty<'tcx> {\n     fn clean(&self, cx: &DocContext<'_>) -> Type {\n+        debug!(\"cleaning type: {:?}\", self);\n         match self.sty {\n             ty::Never => Never,\n             ty::Bool => Primitive(PrimitiveType::Bool),"}]}