{"sha": "388525fa0dc4e38dfd927413b0f694467a7ca492", "node_id": "C_kwDOAAsO6NoAKDM4ODUyNWZhMGRjNGUzOGRmZDkyNzQxM2IwZjY5NDQ2N2E3Y2E0OTI", "commit": {"author": {"name": "k-nasa", "email": "htilcs1115@gmail.com", "date": "2021-10-09T02:13:27Z"}, "committer": {"name": "k-nasa", "email": "htilcs1115@gmail.com", "date": "2021-10-09T02:13:27Z"}, "message": "Add test casee", "tree": {"sha": "74a4c8b156a0006de7b34ea6f54878962a965d70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74a4c8b156a0006de7b34ea6f54878962a965d70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/388525fa0dc4e38dfd927413b0f694467a7ca492", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/388525fa0dc4e38dfd927413b0f694467a7ca492", "html_url": "https://github.com/rust-lang/rust/commit/388525fa0dc4e38dfd927413b0f694467a7ca492", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/388525fa0dc4e38dfd927413b0f694467a7ca492/comments", "author": {"login": "k-nasa", "id": 23740172, "node_id": "MDQ6VXNlcjIzNzQwMTcy", "avatar_url": "https://avatars.githubusercontent.com/u/23740172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k-nasa", "html_url": "https://github.com/k-nasa", "followers_url": "https://api.github.com/users/k-nasa/followers", "following_url": "https://api.github.com/users/k-nasa/following{/other_user}", "gists_url": "https://api.github.com/users/k-nasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/k-nasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k-nasa/subscriptions", "organizations_url": "https://api.github.com/users/k-nasa/orgs", "repos_url": "https://api.github.com/users/k-nasa/repos", "events_url": "https://api.github.com/users/k-nasa/events{/privacy}", "received_events_url": "https://api.github.com/users/k-nasa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "k-nasa", "id": 23740172, "node_id": "MDQ6VXNlcjIzNzQwMTcy", "avatar_url": "https://avatars.githubusercontent.com/u/23740172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k-nasa", "html_url": "https://github.com/k-nasa", "followers_url": "https://api.github.com/users/k-nasa/followers", "following_url": "https://api.github.com/users/k-nasa/following{/other_user}", "gists_url": "https://api.github.com/users/k-nasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/k-nasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k-nasa/subscriptions", "organizations_url": "https://api.github.com/users/k-nasa/orgs", "repos_url": "https://api.github.com/users/k-nasa/repos", "events_url": "https://api.github.com/users/k-nasa/events{/privacy}", "received_events_url": "https://api.github.com/users/k-nasa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "545b068a7720374a13e04db24e0bef6237822f2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/545b068a7720374a13e04db24e0bef6237822f2a", "html_url": "https://github.com/rust-lang/rust/commit/545b068a7720374a13e04db24e0bef6237822f2a"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "6f383ae8bba94e7450cf20874cce62df09f256e9", "filename": "crates/ide_assists/src/handlers/replace_if_let_with_match.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/388525fa0dc4e38dfd927413b0f694467a7ca492/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/388525fa0dc4e38dfd927413b0f694467a7ca492/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs?ref=388525fa0dc4e38dfd927413b0f694467a7ca492", "patch": "@@ -885,6 +885,32 @@ fn foo() {\n         Bar(bar) => println!(\"bar {}\", bar),\n     }\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn nested_type() {\n+        check_assist(\n+            replace_if_let_with_match,\n+            r#\"\n+//- minicore: result\n+fn foo(x: Result<i32, ()>) {\n+    let bar: Result<_, ()> = Ok(Some(1));\n+    $0if let Ok(Some(_)) = bar {\n+        ()\n+    } else {\n+        ()\n+    }\n+}\n+\"#,\n+            r#\"\n+fn foo(x: Result<i32, ()>) {\n+    let bar: Result<_, ()> = Ok(Some(1));\n+    match bar {\n+        Ok(Some(_)) => (),\n+        _ => (),\n+    }\n \"#,\n         );\n     }"}]}