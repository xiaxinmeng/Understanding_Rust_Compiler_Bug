{"sha": "981c6b12fad24ef28998668e515e62976f72b3bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4MWM2YjEyZmFkMjRlZjI4OTk4NjY4ZTUxNWU2Mjk3NmY3MmIzYmY=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-12-27T05:38:28Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-12-27T08:26:46Z"}, "message": "Add tests for trait object coercion.", "tree": {"sha": "2eabc44eac87551c944518ffe45a9e1278326b7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2eabc44eac87551c944518ffe45a9e1278326b7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/981c6b12fad24ef28998668e515e62976f72b3bf", "comment_count": 13, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/981c6b12fad24ef28998668e515e62976f72b3bf", "html_url": "https://github.com/rust-lang/rust/commit/981c6b12fad24ef28998668e515e62976f72b3bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/981c6b12fad24ef28998668e515e62976f72b3bf/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1265a031399bf0a5e28d7f73568a83c544fab0b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1265a031399bf0a5e28d7f73568a83c544fab0b7", "html_url": "https://github.com/rust-lang/rust/commit/1265a031399bf0a5e28d7f73568a83c544fab0b7"}], "stats": {"total": 152, "additions": 150, "deletions": 2}, "files": [{"sha": "0a1eab913be199c0ae53a5291ff6800cb863cdb7", "filename": "src/test/compile-fail/map-types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/981c6b12fad24ef28998668e515e62976f72b3bf/src%2Ftest%2Fcompile-fail%2Fmap-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/981c6b12fad24ef28998668e515e62976f72b3bf/src%2Ftest%2Fcompile-fail%2Fmap-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmap-types.rs?ref=981c6b12fad24ef28998668e515e62976f72b3bf", "patch": "@@ -17,7 +17,7 @@ use std::hashmap::HashMap;\n \n fn main() {\n     let x: @HashMap<~str, ~str> = @HashMap::new();\n-    let x: @Map<~str, ~str> = x as @Map<~str, ~str>;\n+    let x: @Map<~str, ~str> = x;\n     let y: @Map<uint, ~str> = @x;\n-    //~^ ERROR expected trait std::container::Map but found @-ptr\n+    //~^ ERROR failed to find an implementation of trait std::container::Map<uint,~str> for @std::container::Map<~str,~str>:'static\n }"}, {"sha": "2d73158add2e14176f99033d21643d957a6737b9", "filename": "src/test/compile-fail/trait-coercion-generic-bad.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/981c6b12fad24ef28998668e515e62976f72b3bf/src%2Ftest%2Fcompile-fail%2Ftrait-coercion-generic-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/981c6b12fad24ef28998668e515e62976f72b3bf/src%2Ftest%2Fcompile-fail%2Ftrait-coercion-generic-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-coercion-generic-bad.rs?ref=981c6b12fad24ef28998668e515e62976f72b3bf", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[feature(managed_boxes)];\n+\n+struct Struct {\n+    person: &'static str\n+}\n+\n+trait Trait<T> {\n+    fn f(&self, x: T);\n+}\n+\n+impl Trait<&'static str> for Struct {\n+    fn f(&self, x: &'static str) {\n+        println!(\"Hello, {}!\", x);\n+    }\n+}\n+\n+fn main() {\n+    let s: @Trait<int> = @Struct { person: \"Fred\" };    //~ ERROR expected Trait<int>, but found Trait<&'static str>\n+    //~^ ERROR expected Trait<int>, but found Trait<&'static str>\n+    s.f(1);\n+}\n+"}, {"sha": "1ea18a7c75b4d1c8fdbed3f5584adc5350507f01", "filename": "src/test/compile-fail/trait-coercion-generic-regions.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/981c6b12fad24ef28998668e515e62976f72b3bf/src%2Ftest%2Fcompile-fail%2Ftrait-coercion-generic-regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/981c6b12fad24ef28998668e515e62976f72b3bf/src%2Ftest%2Fcompile-fail%2Ftrait-coercion-generic-regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-coercion-generic-regions.rs?ref=981c6b12fad24ef28998668e515e62976f72b3bf", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[feature(managed_boxes)];\n+\n+struct Struct {\n+    person: &'static str\n+}\n+\n+trait Trait<T> {\n+    fn f(&self, x: T);\n+}\n+\n+impl Trait<&'static str> for Struct {\n+    fn f(&self, x: &'static str) {\n+        println!(\"Hello, {}!\", x);\n+    }\n+}\n+\n+fn main() {\n+    let person = ~\"Fred\";\n+    let person: &str = person;  //~ ERROR borrowed value does not live long enough\n+    let s: @Trait<&'static str> = @Struct { person: person };\n+}\n+"}, {"sha": "415f7baf3d9cc2c46af99232e263210b71ab2d32", "filename": "src/test/run-pass/trait-coercion-generic.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/981c6b12fad24ef28998668e515e62976f72b3bf/src%2Ftest%2Frun-pass%2Ftrait-coercion-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/981c6b12fad24ef28998668e515e62976f72b3bf/src%2Ftest%2Frun-pass%2Ftrait-coercion-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-coercion-generic.rs?ref=981c6b12fad24ef28998668e515e62976f72b3bf", "patch": "@@ -0,0 +1,42 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[feature(managed_boxes)];\n+\n+trait Trait<T> {\n+    fn f(&self, x: T);\n+}\n+\n+struct Struct {\n+    x: int,\n+    y: int,\n+}\n+\n+impl Trait<&'static str> for Struct {\n+    fn f(&self, x: &'static str) {\n+        println(~\"Hi, \" + x + ~\"!\");\n+    }\n+}\n+\n+fn f(x: @Trait<&'static str>) {\n+    x.f(\"Sue\");\n+}\n+\n+pub fn main() {\n+    let a = Struct { x: 1, y: 2 };\n+    let b: @Trait<&'static str> = @a;\n+    b.f(\"Fred\");\n+    let c: ~Trait<&'static str> = ~a;\n+    c.f(\"Mary\");\n+    let d: &Trait<&'static str> = &a;\n+    d.f(\"Joe\");\n+    f(@a);\n+}\n+"}, {"sha": "1c6968266e18dadbffd676007c00f835d6a8b02e", "filename": "src/test/run-pass/trait-coercion.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/981c6b12fad24ef28998668e515e62976f72b3bf/src%2Ftest%2Frun-pass%2Ftrait-coercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/981c6b12fad24ef28998668e515e62976f72b3bf/src%2Ftest%2Frun-pass%2Ftrait-coercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-coercion.rs?ref=981c6b12fad24ef28998668e515e62976f72b3bf", "patch": "@@ -0,0 +1,42 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[feature(managed_boxes)];\n+\n+trait Trait {\n+    fn f(&self);\n+}\n+\n+struct Struct {\n+    x: int,\n+    y: int,\n+}\n+\n+impl Trait for Struct {\n+    fn f(&self) {\n+        println(\"Hi!\");\n+    }\n+}\n+\n+fn f(x: @Trait) {\n+    x.f();\n+}\n+\n+pub fn main() {\n+    let a = Struct { x: 1, y: 2 };\n+    let b: @Trait = @a;\n+    b.f();\n+    let c: ~Trait = ~a;\n+    c.f();\n+    let d: &Trait = &a;\n+    d.f();\n+    f(@a);\n+}\n+"}]}