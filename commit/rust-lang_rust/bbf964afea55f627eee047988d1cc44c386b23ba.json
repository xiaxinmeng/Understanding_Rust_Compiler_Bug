{"sha": "bbf964afea55f627eee047988d1cc44c386b23ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiZjk2NGFmZWE1NWY2MjdlZWUwNDc5ODhkMWNjNDRjMzg2YjIzYmE=", "commit": {"author": {"name": "Kevin Butler", "email": "haqkrs@gmail.com", "date": "2015-11-03T14:49:33Z"}, "committer": {"name": "Kevin Butler", "email": "haqkrs@gmail.com", "date": "2015-11-12T05:15:55Z"}, "message": "libcollections: deny warnings in doctests", "tree": {"sha": "c3de7575ddd97d251d64b9ee3401e0456b0edf66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3de7575ddd97d251d64b9ee3401e0456b0edf66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbf964afea55f627eee047988d1cc44c386b23ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbf964afea55f627eee047988d1cc44c386b23ba", "html_url": "https://github.com/rust-lang/rust/commit/bbf964afea55f627eee047988d1cc44c386b23ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbf964afea55f627eee047988d1cc44c386b23ba/comments", "author": {"login": "Ryman", "id": 994978, "node_id": "MDQ6VXNlcjk5NDk3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/994978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryman", "html_url": "https://github.com/Ryman", "followers_url": "https://api.github.com/users/Ryman/followers", "following_url": "https://api.github.com/users/Ryman/following{/other_user}", "gists_url": "https://api.github.com/users/Ryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryman/subscriptions", "organizations_url": "https://api.github.com/users/Ryman/orgs", "repos_url": "https://api.github.com/users/Ryman/repos", "events_url": "https://api.github.com/users/Ryman/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ryman", "id": 994978, "node_id": "MDQ6VXNlcjk5NDk3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/994978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryman", "html_url": "https://github.com/Ryman", "followers_url": "https://api.github.com/users/Ryman/followers", "following_url": "https://api.github.com/users/Ryman/following{/other_user}", "gists_url": "https://api.github.com/users/Ryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryman/subscriptions", "organizations_url": "https://api.github.com/users/Ryman/orgs", "repos_url": "https://api.github.com/users/Ryman/repos", "events_url": "https://api.github.com/users/Ryman/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89a8203898fc9e207e6f6b680491b9cc0a568b9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/89a8203898fc9e207e6f6b680491b9cc0a568b9e", "html_url": "https://github.com/rust-lang/rust/commit/89a8203898fc9e207e6f6b680491b9cc0a568b9e"}], "stats": {"total": 35, "additions": 27, "deletions": 8}, "files": [{"sha": "72547a9a5d2ee7703bd13839d63966971a292e05", "filename": "src/libcollections/binary_heap.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbf964afea55f627eee047988d1cc44c386b23ba/src%2Flibcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbf964afea55f627eee047988d1cc44c386b23ba/src%2Flibcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbinary_heap.rs?ref=bbf964afea55f627eee047988d1cc44c386b23ba", "patch": "@@ -233,6 +233,7 @@ impl<T: Ord> BinaryHeap<T> {\n     ///\n     /// ```\n     /// #![feature(binary_heap_extras)]\n+    /// # #![allow(deprecated)]\n     ///\n     /// use std::collections::BinaryHeap;\n     /// let heap = BinaryHeap::from_vec(vec![9, 1, 2, 7, 3, 2]);"}, {"sha": "9b8f8c8f5bb8466a8b4bc4c999fb2384ff8d62ee", "filename": "src/libcollections/borrow.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbf964afea55f627eee047988d1cc44c386b23ba/src%2Flibcollections%2Fborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbf964afea55f627eee047988d1cc44c386b23ba/src%2Flibcollections%2Fborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fborrow.rs?ref=bbf964afea55f627eee047988d1cc44c386b23ba", "patch": "@@ -72,6 +72,7 @@ impl<T> ToOwned for T where T: Clone {\n /// ```\n /// use std::borrow::Cow;\n ///\n+/// # #[allow(dead_code)]\n /// fn abs_all(input: &mut Cow<[i32]>) {\n ///     for i in 0..input.len() {\n ///         let v = input[i];"}, {"sha": "0c70a1544ef92f21ea1558519a48b46db5a5bbea", "filename": "src/libcollections/btree/set.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbf964afea55f627eee047988d1cc44c386b23ba/src%2Flibcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbf964afea55f627eee047988d1cc44c386b23ba/src%2Flibcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fset.rs?ref=bbf964afea55f627eee047988d1cc44c386b23ba", "patch": "@@ -89,6 +89,7 @@ impl<T: Ord> BTreeSet<T> {\n     /// # Examples\n     ///\n     /// ```\n+    /// # #![allow(unused_mut)]\n     /// use std::collections::BTreeSet;\n     ///\n     /// let mut set: BTreeSet<i32> = BTreeSet::new();"}, {"sha": "990575ebbb3361c15ce45f8c1d312f8957e804ba", "filename": "src/libcollections/fmt.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bbf964afea55f627eee047988d1cc44c386b23ba/src%2Flibcollections%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbf964afea55f627eee047988d1cc44c386b23ba/src%2Flibcollections%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ffmt.rs?ref=bbf964afea55f627eee047988d1cc44c386b23ba", "patch": "@@ -150,6 +150,7 @@\n //! implement a method of the signature:\n //!\n //! ```\n+//! # #![allow(dead_code)]\n //! # use std::fmt;\n //! # struct Foo; // our custom type\n //! # impl fmt::Display for Foo {\n@@ -174,7 +175,6 @@\n //! like:\n //!\n //! ```\n-//! #![feature(fmt_flags)]\n //! use std::fmt;\n //!\n //! #[derive(Debug)]\n@@ -288,6 +288,7 @@\n //! off, some example usage is:\n //!\n //! ```\n+//! # #![allow(unused_must_use)]\n //! use std::fmt;\n //! use std::io::{self, Write};\n //!"}, {"sha": "54b98c6e17992f8490d49fc04a6505b44335332c", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbf964afea55f627eee047988d1cc44c386b23ba/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbf964afea55f627eee047988d1cc44c386b23ba/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=bbf964afea55f627eee047988d1cc44c386b23ba", "patch": "@@ -27,7 +27,7 @@\n        html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        html_playground_url = \"https://play.rust-lang.org/\",\n        issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\",\n-       test(no_crate_inject))]\n+       test(no_crate_inject, attr(allow(unused_variables), deny(warnings))))]\n \n #![allow(trivial_casts)]\n #![cfg_attr(test, allow(deprecated))] // rand"}, {"sha": "85aefbfffb1ad04dfd9c60d6539ce9b12a4e6337", "filename": "src/libcollections/slice.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbf964afea55f627eee047988d1cc44c386b23ba/src%2Flibcollections%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbf964afea55f627eee047988d1cc44c386b23ba/src%2Flibcollections%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fslice.rs?ref=bbf964afea55f627eee047988d1cc44c386b23ba", "patch": "@@ -852,6 +852,7 @@ pub trait SliceConcatExt<T: ?Sized> {\n     /// # Examples\n     ///\n     /// ```\n+    /// # #![allow(deprecated)]\n     /// assert_eq!([\"hello\", \"world\"].connect(\" \"), \"hello world\");\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "a5013f4e75b18d8f3b14fb71d7d60c2fab46191e", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bbf964afea55f627eee047988d1cc44c386b23ba/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbf964afea55f627eee047988d1cc44c386b23ba/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=bbf964afea55f627eee047988d1cc44c386b23ba", "patch": "@@ -298,7 +298,7 @@ impl str {\n     /// done by `.chars()` or `.char_indices()`.\n     ///\n     /// ```\n-    /// #![feature(str_char, core)]\n+    /// #![feature(str_char)]\n     ///\n     /// use std::str::CharRange;\n     ///\n@@ -358,7 +358,7 @@ impl str {\n     /// done by `.chars().rev()` or `.char_indices()`.\n     ///\n     /// ```\n-    /// #![feature(str_char, core)]\n+    /// #![feature(str_char)]\n     ///\n     /// use std::str::CharRange;\n     ///\n@@ -634,6 +634,7 @@ impl str {\n     /// # Examples\n     ///\n     /// ```\n+    /// # #![allow(deprecated)]\n     /// let four_lines = \"foo\\r\\nbar\\n\\r\\nbaz\";\n     /// let v: Vec<&str> = four_lines.lines_any().collect();\n     ///\n@@ -643,6 +644,7 @@ impl str {\n     /// Leaving off the trailing character:\n     ///\n     /// ```\n+    /// # #![allow(deprecated)]\n     /// let four_lines = \"foo\\r\\nbar\\n\\r\\nbaz\\n\";\n     /// let v: Vec<&str> = four_lines.lines_any().collect();\n     ///\n@@ -1179,8 +1181,6 @@ impl str {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(str_match_indices)]\n-    ///\n     /// let v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\n     /// assert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n     ///\n@@ -1216,8 +1216,6 @@ impl str {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(str_match_indices)]\n-    ///\n     /// let v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\n     /// assert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n     ///"}, {"sha": "804e798c600a5808b742d341bcce9f49c5696412", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bbf964afea55f627eee047988d1cc44c386b23ba/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbf964afea55f627eee047988d1cc44c386b23ba/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=bbf964afea55f627eee047988d1cc44c386b23ba", "patch": "@@ -55,6 +55,7 @@ impl String {\n     /// # Examples\n     ///\n     /// ```\n+    /// # #![allow(unused_mut)]\n     /// let mut s = String::new();\n     /// ```\n     #[inline]\n@@ -73,6 +74,20 @@ impl String {\n     ///\n     /// ```\n     /// let mut s = String::with_capacity(10);\n+    ///\n+    /// // The String contains no chars, even though it has capacity for more\n+    /// assert_eq!(s.len(), 0);\n+    ///\n+    /// // These are all done without reallocating...\n+    /// let cap = s.capacity();\n+    /// for i in 0..10 {\n+    ///     s.push('a');\n+    /// }\n+    ///\n+    /// assert_eq!(s.capacity(), cap);\n+    ///\n+    /// // ...but this may make the vector reallocate\n+    /// s.push('a');\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "9153d624268ed6d36d2c48f4701d779538a271ec", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbf964afea55f627eee047988d1cc44c386b23ba/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbf964afea55f627eee047988d1cc44c386b23ba/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=bbf964afea55f627eee047988d1cc44c386b23ba", "patch": "@@ -242,6 +242,7 @@ impl<T> Vec<T> {\n     /// # Examples\n     ///\n     /// ```\n+    /// # #![allow(unused_mut)]\n     /// let mut vec: Vec<i32> = Vec::new();\n     /// ```\n     #[inline]"}]}