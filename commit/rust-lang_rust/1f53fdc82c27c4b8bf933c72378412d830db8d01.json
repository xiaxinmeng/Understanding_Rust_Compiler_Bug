{"sha": "1f53fdc82c27c4b8bf933c72378412d830db8d01", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmNTNmZGM4MmMyN2M0YjhiZjkzM2M3MjM3ODQxMmQ4MzBkYjhkMDE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-28T18:40:58Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-28T18:40:58Z"}, "message": "get rid of useless back-and-forth cast", "tree": {"sha": "7addc2269f4d049a8f47d5286a75fbdd44665685", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7addc2269f4d049a8f47d5286a75fbdd44665685"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f53fdc82c27c4b8bf933c72378412d830db8d01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f53fdc82c27c4b8bf933c72378412d830db8d01", "html_url": "https://github.com/rust-lang/rust/commit/1f53fdc82c27c4b8bf933c72378412d830db8d01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f53fdc82c27c4b8bf933c72378412d830db8d01/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a0e69d34f8fde29224875525e66dffb863cbaba", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a0e69d34f8fde29224875525e66dffb863cbaba", "html_url": "https://github.com/rust-lang/rust/commit/1a0e69d34f8fde29224875525e66dffb863cbaba"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "8b39f5071ae78c0f26ce0a9ca29f5692245c565e", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1f53fdc82c27c4b8bf933c72378412d830db8d01/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f53fdc82c27c4b8bf933c72378412d830db8d01/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=1f53fdc82c27c4b8bf933c72378412d830db8d01", "patch": "@@ -621,7 +621,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 let real_discr = if discr_val.layout.abi.is_signed() {\n                     // going from layout tag type to typeck discriminant type\n                     // requires first sign extending with the discriminant layout\n-                    let sexted = sign_extend(bits_discr, discr_val.layout.size) as i128;\n+                    let sexted = sign_extend(bits_discr, discr_val.layout.size);\n                     // and then zeroing with the typeck discriminant type\n                     let discr_ty = rval\n                         .layout\n@@ -631,8 +631,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                         .repr\n                         .discr_type();\n                     let size = layout::Integer::from_attr(self, discr_ty).size();\n-                    let truncatee = sexted as u128;\n-                    truncate(truncatee, size)\n+                    truncate(sexted, size)\n                 } else {\n                     bits_discr\n                 };"}]}