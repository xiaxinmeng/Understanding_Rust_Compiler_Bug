{"sha": "c30eac51c4406abe916479f49210beee9abd38b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMGVhYzUxYzQ0MDZhYmU5MTY0NzlmNDkyMTBiZWVlOWFiZDM4Yjc=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-04-14T02:18:23Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-04-14T02:20:55Z"}, "message": "Fix ICE during type layout when there's a `[type error]`\n\nBased on estebank's [comment], except I used `delay_span_bug` because it\nshould work in more cases, and I think it expresses its intent more\nclearly.\n\n[comment]: https://github.com/rust-lang/rust/issues/84108#issuecomment-818916848", "tree": {"sha": "85e4c508f5340c5e6fbbcd271c59883918b240b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85e4c508f5340c5e6fbbcd271c59883918b240b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c30eac51c4406abe916479f49210beee9abd38b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c30eac51c4406abe916479f49210beee9abd38b7", "html_url": "https://github.com/rust-lang/rust/commit/c30eac51c4406abe916479f49210beee9abd38b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c30eac51c4406abe916479f49210beee9abd38b7/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "132b4e5d167b7e622fcc11fa2b67b931105b4de1", "url": "https://api.github.com/repos/rust-lang/rust/commits/132b4e5d167b7e622fcc11fa2b67b931105b4de1", "html_url": "https://github.com/rust-lang/rust/commit/132b4e5d167b7e622fcc11fa2b67b931105b4de1"}], "stats": {"total": 67, "additions": 66, "deletions": 1}, "files": [{"sha": "0fada3e6c84713a6bc3419503563a28583fbef5f", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c30eac51c4406abe916479f49210beee9abd38b7/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c30eac51c4406abe916479f49210beee9abd38b7/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=c30eac51c4406abe916479f49210beee9abd38b7", "patch": "@@ -367,7 +367,14 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n         for &i in &inverse_memory_index {\n             let field = fields[i as usize];\n             if !sized {\n-                bug!(\"univariant: field #{} of `{}` comes after unsized field\", offsets.len(), ty);\n+                self.tcx.sess.delay_span_bug(\n+                    DUMMY_SP,\n+                    &format!(\n+                        \"univariant: field #{} of `{}` comes after unsized field\",\n+                        offsets.len(),\n+                        ty\n+                    ),\n+                );\n             }\n \n             if field.is_unsized() {"}, {"sha": "dd025c9b443f882c14731d663726798160dfbe37", "filename": "src/test/ui/layout/issue-84108.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c30eac51c4406abe916479f49210beee9abd38b7/src%2Ftest%2Fui%2Flayout%2Fissue-84108.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c30eac51c4406abe916479f49210beee9abd38b7/src%2Ftest%2Fui%2Flayout%2Fissue-84108.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flayout%2Fissue-84108.rs?ref=c30eac51c4406abe916479f49210beee9abd38b7", "patch": "@@ -0,0 +1,14 @@\n+// See issue #84108 -- this is a test to ensure we do not ICE\n+// on this invalid code.\n+\n+#![crate_type = \"lib\"]\n+\n+static FOO: (dyn AsRef<OsStr>, u8) = (\"hello\", 42);\n+//~^ ERROR cannot find type `OsStr` in this scope\n+\n+const BAR: (&Path, [u8], usize) = (\"hello\", [], 42);\n+//~^ ERROR cannot find type `Path` in this scope\n+//~| ERROR the size for values of type `[u8]` cannot be known at compilation time\n+\n+static BAZ: ([u8], usize) = ([], 0);\n+//~^ ERROR the size for values of type `[u8]` cannot be known at compilation time"}, {"sha": "36be6424110091689fb354df985c847834ec631f", "filename": "src/test/ui/layout/issue-84108.stderr", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/c30eac51c4406abe916479f49210beee9abd38b7/src%2Ftest%2Fui%2Flayout%2Fissue-84108.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c30eac51c4406abe916479f49210beee9abd38b7/src%2Ftest%2Fui%2Flayout%2Fissue-84108.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flayout%2Fissue-84108.stderr?ref=c30eac51c4406abe916479f49210beee9abd38b7", "patch": "@@ -0,0 +1,44 @@\n+error[E0412]: cannot find type `OsStr` in this scope\n+  --> $DIR/issue-84108.rs:6:24\n+   |\n+LL | static FOO: (dyn AsRef<OsStr>, u8) = (\"hello\", 42);\n+   |                        ^^^^^ not found in this scope\n+   |\n+help: consider importing this struct\n+   |\n+LL | use std::ffi::OsStr;\n+   |\n+\n+error[E0412]: cannot find type `Path` in this scope\n+  --> $DIR/issue-84108.rs:9:14\n+   |\n+LL | const BAR: (&Path, [u8], usize) = (\"hello\", [], 42);\n+   |              ^^^^ not found in this scope\n+   |\n+help: consider importing this struct\n+   |\n+LL | use std::path::Path;\n+   |\n+\n+error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n+  --> $DIR/issue-84108.rs:9:12\n+   |\n+LL | const BAR: (&Path, [u8], usize) = (\"hello\", [], 42);\n+   |            ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `[u8]`\n+   = note: only the last element of a tuple may have a dynamically sized type\n+\n+error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n+  --> $DIR/issue-84108.rs:13:13\n+   |\n+LL | static BAZ: ([u8], usize) = ([], 0);\n+   |             ^^^^^^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `[u8]`\n+   = note: only the last element of a tuple may have a dynamically sized type\n+\n+error: aborting due to 4 previous errors\n+\n+Some errors have detailed explanations: E0277, E0412.\n+For more information about an error, try `rustc --explain E0277`."}]}