{"sha": "d75a5723dbc9bbc58bf7614b3a729bf5d359290b", "node_id": "C_kwDOAAsO6NoAKGQ3NWE1NzIzZGJjOWJiYzU4YmY3NjE0YjNhNzI5YmY1ZDM1OTI5MGI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-07-09T05:58:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-09T05:58:06Z"}, "message": "Rollup merge of #99008 - obeis:issue-98974, r=compiler-errors\n\nAdding suggestion for E0530\n\nCloses #98974", "tree": {"sha": "523526c29196dd7f3c2815a788bdf2a5763af548", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/523526c29196dd7f3c2815a788bdf2a5763af548"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d75a5723dbc9bbc58bf7614b3a729bf5d359290b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiyRjuCRBK7hj4Ov3rIwAApAYIAGQWHF/AX/2FiK3vmzHyjYqz\nIzk6f97gFxMKZLcc89Dftdy0sbb3Zss0IlDmY6FtCFgC0ACxhjlzVGZ2U03zX4YU\nllDROZC/Ljy9UJyVOen1JnQqIuCx9E7QGayegw44mGn1MbsrpnObgM9pUPpggCHa\nfA4d3IoldXHPsvONuqXqaokbr7vIjbTYzn2/rAgmrUQ/gDmuIs0AXDVnGyohEt/I\nBWCBUVKSv05gj1Do+00ot1afGiStkwRyyDJzzBzkAj1BG0R/yVtgqWXCAU+T6wJO\nBWR+p3iZQSGD3iklkvOpP1KZqC/l6ptQkuMe4pUDjJAxPdV26GrzhOR8kyAvzzg=\n=IQQi\n-----END PGP SIGNATURE-----\n", "payload": "tree 523526c29196dd7f3c2815a788bdf2a5763af548\nparent a6c6166d7be30e38ee7e42370e14899c9e061f66\nparent 1b32eb34b36db37902afcaefd49a8da6167cbd30\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1657346286 +0530\ncommitter GitHub <noreply@github.com> 1657346286 +0530\n\nRollup merge of #99008 - obeis:issue-98974, r=compiler-errors\n\nAdding suggestion for E0530\n\nCloses #98974\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d75a5723dbc9bbc58bf7614b3a729bf5d359290b", "html_url": "https://github.com/rust-lang/rust/commit/d75a5723dbc9bbc58bf7614b3a729bf5d359290b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d75a5723dbc9bbc58bf7614b3a729bf5d359290b/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6c6166d7be30e38ee7e42370e14899c9e061f66", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6c6166d7be30e38ee7e42370e14899c9e061f66", "html_url": "https://github.com/rust-lang/rust/commit/a6c6166d7be30e38ee7e42370e14899c9e061f66"}, {"sha": "1b32eb34b36db37902afcaefd49a8da6167cbd30", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b32eb34b36db37902afcaefd49a8da6167cbd30", "html_url": "https://github.com/rust-lang/rust/commit/1b32eb34b36db37902afcaefd49a8da6167cbd30"}], "stats": {"total": 71, "additions": 52, "deletions": 19}, "files": [{"sha": "18ffe9528f5656930aad671407b33d703b99b131", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d75a5723dbc9bbc58bf7614b3a729bf5d359290b/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d75a5723dbc9bbc58bf7614b3a729bf5d359290b/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=d75a5723dbc9bbc58bf7614b3a729bf5d359290b", "patch": "@@ -28,7 +28,7 @@ use rustc_span::{BytePos, Span};\n use tracing::debug;\n \n use crate::imports::{Import, ImportKind, ImportResolver};\n-use crate::late::Rib;\n+use crate::late::{PatternSource, Rib};\n use crate::path_names_to_string;\n use crate::{AmbiguityError, AmbiguityErrorMisc, AmbiguityKind, BindingError, Finalize};\n use crate::{HasGenericParams, MacroRulesScope, Module, ModuleKind, ModuleOrUniformRoot};\n@@ -896,25 +896,40 @@ impl<'a> Resolver<'a> {\n                 err\n             }\n             ResolutionError::BindingShadowsSomethingUnacceptable {\n-                shadowing_binding_descr,\n+                shadowing_binding,\n                 name,\n                 participle,\n                 article,\n-                shadowed_binding_descr,\n+                shadowed_binding,\n                 shadowed_binding_span,\n             } => {\n+                let shadowed_binding_descr = shadowed_binding.descr();\n                 let mut err = struct_span_err!(\n                     self.session,\n                     span,\n                     E0530,\n                     \"{}s cannot shadow {}s\",\n-                    shadowing_binding_descr,\n+                    shadowing_binding.descr(),\n                     shadowed_binding_descr,\n                 );\n                 err.span_label(\n                     span,\n                     format!(\"cannot be named the same as {} {}\", article, shadowed_binding_descr),\n                 );\n+                match (shadowing_binding, shadowed_binding) {\n+                    (\n+                        PatternSource::Match,\n+                        Res::Def(DefKind::Ctor(CtorOf::Variant | CtorOf::Struct, CtorKind::Fn), _),\n+                    ) => {\n+                        err.span_suggestion(\n+                            span,\n+                            \"try specify the pattern arguments\",\n+                            format!(\"{}(..)\", name),\n+                            Applicability::Unspecified,\n+                        );\n+                    }\n+                    _ => (),\n+                }\n                 let msg =\n                     format!(\"the {} `{}` is {} here\", shadowed_binding_descr, name, participle);\n                 err.span_label(shadowed_binding_span, msg);"}, {"sha": "f37acca3d9f276b17c5298822c478f6859e48b04", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d75a5723dbc9bbc58bf7614b3a729bf5d359290b/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d75a5723dbc9bbc58bf7614b3a729bf5d359290b/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=d75a5723dbc9bbc58bf7614b3a729bf5d359290b", "patch": "@@ -50,7 +50,7 @@ struct BindingInfo {\n }\n \n #[derive(Copy, Clone, PartialEq, Eq, Debug)]\n-enum PatternSource {\n+pub enum PatternSource {\n     Match,\n     Let,\n     For,\n@@ -64,7 +64,7 @@ enum IsRepeatExpr {\n }\n \n impl PatternSource {\n-    fn descr(self) -> &'static str {\n+    pub fn descr(self) -> &'static str {\n         match self {\n             PatternSource::Match => \"match binding\",\n             PatternSource::Let => \"let binding\",\n@@ -2845,11 +2845,11 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n                 self.report_error(\n                     ident.span,\n                     ResolutionError::BindingShadowsSomethingUnacceptable {\n-                        shadowing_binding_descr: pat_src.descr(),\n+                        shadowing_binding: pat_src,\n                         name: ident.name,\n                         participle: if binding.is_import() { \"imported\" } else { \"defined\" },\n                         article: binding.res().article(),\n-                        shadowed_binding_descr: binding.res().descr(),\n+                        shadowed_binding: binding.res(),\n                         shadowed_binding_span: binding.span,\n                     },\n                 );\n@@ -2861,11 +2861,11 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n                 self.report_error(\n                     ident.span,\n                     ResolutionError::BindingShadowsSomethingUnacceptable {\n-                        shadowing_binding_descr: pat_src.descr(),\n+                        shadowing_binding: pat_src,\n                         name: ident.name,\n                         participle: \"defined\",\n                         article: res.article(),\n-                        shadowed_binding_descr: res.descr(),\n+                        shadowed_binding: res,\n                         shadowed_binding_span: self.r.opt_span(def_id).expect(\"const parameter defined outside of local crate\"),\n                     }\n                 );"}, {"sha": "8968179c92e4b69a0e9f970197a69ff155e54e46", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d75a5723dbc9bbc58bf7614b3a729bf5d359290b/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d75a5723dbc9bbc58bf7614b3a729bf5d359290b/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=d75a5723dbc9bbc58bf7614b3a729bf5d359290b", "patch": "@@ -61,7 +61,7 @@ use tracing::debug;\n \n use diagnostics::{ImportSuggestion, LabelSuggestion, Suggestion};\n use imports::{Import, ImportKind, ImportResolver, NameResolution};\n-use late::{HasGenericParams, PathSource};\n+use late::{HasGenericParams, PathSource, PatternSource};\n use macros::{MacroRulesBinding, MacroRulesScope, MacroRulesScopeRef};\n \n use crate::access_levels::AccessLevelsVisitor;\n@@ -230,11 +230,11 @@ enum ResolutionError<'a> {\n     ),\n     /// Error E0530: `X` bindings cannot shadow `Y`s.\n     BindingShadowsSomethingUnacceptable {\n-        shadowing_binding_descr: &'static str,\n+        shadowing_binding: PatternSource,\n         name: Symbol,\n         participle: &'static str,\n         article: &'static str,\n-        shadowed_binding_descr: &'static str,\n+        shadowed_binding: Res,\n         shadowed_binding_span: Span,\n     },\n     /// Error E0128: generic parameters with a default cannot use forward-declared identifiers."}, {"sha": "8d0f75d204c2fcc9f4f82519c9d4b4829acc03c2", "filename": "src/test/ui/empty/empty-struct-tuple-pat.stderr", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d75a5723dbc9bbc58bf7614b3a729bf5d359290b/src%2Ftest%2Fui%2Fempty%2Fempty-struct-tuple-pat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d75a5723dbc9bbc58bf7614b3a729bf5d359290b/src%2Ftest%2Fui%2Fempty%2Fempty-struct-tuple-pat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-tuple-pat.stderr?ref=d75a5723dbc9bbc58bf7614b3a729bf5d359290b", "patch": "@@ -5,7 +5,10 @@ LL | struct Empty2();\n    | ---------------- the tuple struct `Empty2` is defined here\n ...\n LL |         Empty2 => ()\n-   |         ^^^^^^ cannot be named the same as a tuple struct\n+   |         ^^^^^^\n+   |         |\n+   |         cannot be named the same as a tuple struct\n+   |         help: try specify the pattern arguments: `Empty2(..)`\n \n error[E0530]: match bindings cannot shadow tuple structs\n   --> $DIR/empty-struct-tuple-pat.rs:25:9\n@@ -14,7 +17,10 @@ LL | use empty_struct::*;\n    |     --------------- the tuple struct `XEmpty6` is imported here\n ...\n LL |         XEmpty6 => ()\n-   |         ^^^^^^^ cannot be named the same as a tuple struct\n+   |         ^^^^^^^\n+   |         |\n+   |         cannot be named the same as a tuple struct\n+   |         help: try specify the pattern arguments: `XEmpty6(..)`\n \n error[E0532]: expected unit struct, unit variant or constant, found tuple variant `E::Empty4`\n   --> $DIR/empty-struct-tuple-pat.rs:29:9"}, {"sha": "d9295746158bba78e2483c2700a7f1450de17cb8", "filename": "src/test/ui/pattern/pat-tuple-field-count-cross.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d75a5723dbc9bbc58bf7614b3a729bf5d359290b/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-field-count-cross.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d75a5723dbc9bbc58bf7614b3a729bf5d359290b/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-field-count-cross.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-field-count-cross.stderr?ref=d75a5723dbc9bbc58bf7614b3a729bf5d359290b", "patch": "@@ -5,7 +5,10 @@ LL | use declarations_for_tuple_field_count_errors::*;\n    |     -------------------------------------------- the tuple struct `Z1` is imported here\n ...\n LL |         Z1 => {}\n-   |         ^^ cannot be named the same as a tuple struct\n+   |         ^^\n+   |         |\n+   |         cannot be named the same as a tuple struct\n+   |         help: try specify the pattern arguments: `Z1(..)`\n \n error[E0532]: expected tuple struct or tuple variant, found unit struct `Z0`\n   --> $DIR/pat-tuple-field-count-cross.rs:9:9"}, {"sha": "54d89e03101dcaf010c6dbc5773a8551198e5f7b", "filename": "src/test/ui/pattern/pat-tuple-overfield.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d75a5723dbc9bbc58bf7614b3a729bf5d359290b/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d75a5723dbc9bbc58bf7614b3a729bf5d359290b/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.stderr?ref=d75a5723dbc9bbc58bf7614b3a729bf5d359290b", "patch": "@@ -5,7 +5,10 @@ LL | struct Z1();\n    | ------------ the tuple struct `Z1` is defined here\n ...\n LL |         Z1 => {}\n-   |         ^^ cannot be named the same as a tuple struct\n+   |         ^^\n+   |         |\n+   |         cannot be named the same as a tuple struct\n+   |         help: try specify the pattern arguments: `Z1(..)`\n \n error[E0532]: expected tuple struct or tuple variant, found unit struct `Z0`\n   --> $DIR/pat-tuple-overfield.rs:52:9"}, {"sha": "1529e538b5521a7ec99b1ee7b29548237a775604", "filename": "src/test/ui/pattern/pattern-binding-disambiguation.stderr", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d75a5723dbc9bbc58bf7614b3a729bf5d359290b/src%2Ftest%2Fui%2Fpattern%2Fpattern-binding-disambiguation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d75a5723dbc9bbc58bf7614b3a729bf5d359290b/src%2Ftest%2Fui%2Fpattern%2Fpattern-binding-disambiguation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpattern-binding-disambiguation.stderr?ref=d75a5723dbc9bbc58bf7614b3a729bf5d359290b", "patch": "@@ -5,7 +5,10 @@ LL | struct TupleStruct();\n    | --------------------- the tuple struct `TupleStruct` is defined here\n ...\n LL |         TupleStruct => {}\n-   |         ^^^^^^^^^^^ cannot be named the same as a tuple struct\n+   |         ^^^^^^^^^^^\n+   |         |\n+   |         cannot be named the same as a tuple struct\n+   |         help: try specify the pattern arguments: `TupleStruct(..)`\n \n error[E0530]: match bindings cannot shadow tuple variants\n   --> $DIR/pattern-binding-disambiguation.rs:33:9\n@@ -14,7 +17,10 @@ LL | use E::*;\n    |     ---- the tuple variant `TupleVariant` is imported here\n ...\n LL |         TupleVariant => {}\n-   |         ^^^^^^^^^^^^ cannot be named the same as a tuple variant\n+   |         ^^^^^^^^^^^^\n+   |         |\n+   |         cannot be named the same as a tuple variant\n+   |         help: try specify the pattern arguments: `TupleVariant(..)`\n \n error[E0530]: match bindings cannot shadow struct variants\n   --> $DIR/pattern-binding-disambiguation.rs:36:9"}]}