{"sha": "045722a17ea05cb11ae933578ee01a3d5d831352", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NTcyMmExN2VhMDVjYjExYWU5MzM1NzhlZTAxYTNkNWQ4MzEzNTI=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-04-02T20:08:25Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-04-03T19:19:33Z"}, "message": "Run update_lints", "tree": {"sha": "f6a712b8ec407196b37e4b3ab7db8f877abb43d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6a712b8ec407196b37e4b3ab7db8f877abb43d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/045722a17ea05cb11ae933578ee01a3d5d831352", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEqv54U47RUUXZfOLnLO/Nsn7QvnkFAl6HjEUACgkQLO/Nsn7Q\nvnlaTQ/+KpE61fB2gvl2vPq7vh+GrEYXk9qky3FZppthXAuA9wyvPKfrnnBsWZzL\noxP/ACT+aa2TSgH/QPZI/hAtLJ5yjaxvlLKNGz67IuCSmolJrUb5OIXT4tB+5Yxb\nVymjvSq9MvQKrj44b3atQg8KVIEfAgUYdYur/MyfPs1hRABl22MFx5y7D7cAfQPi\nN9jp4+cJxOYzdVkh8GnUUlBn/SsRJ5aISmjhLTmXJO06WkhOzd2Z1UmTJerCJSc2\nJyvLU+r/JKG5QoCsvbgNIwj6ZC6vRCKSfcOA1j6VxdzPI+A2XYYUw9rsLbmIeT6o\ngozFQz9UaYQ7Oh+2Vy/1xsG9cPL3vJ+iGtgsIy7x3IWyl/ts+CXVMgTkRTqv5o4W\nA1vQzNxn1tkMy/DXiSToKH+o86NbXONYtj7Vpdk3kH3fFwLSMRlR7hNd9I4iRuG/\n5RGUcRFrwomMAFgLHHAIot78x/DgPlIfin73ubXNSgDbjsRSdB1riUx4nS4JLMBi\no0VkKMPg4ai6USxbzCZbpoyhC6fB3Urmk6m1RFOlYO+KWEfLR8oBtP8mhDinpirZ\nHJz/ryFiZcrOQSpPNTkSJtMK9Eb1LlC3FKT69sW1uraA+mlz811FiqM1tYtKhLd5\nzkf+w0D18Pvu5ZCO1RX43/2QT7/CjXlXoV9zU+KRRdMfuqyS2K8=\n=uqQm\n-----END PGP SIGNATURE-----", "payload": "tree f6a712b8ec407196b37e4b3ab7db8f877abb43d0\nparent d89bb50f72e1db538d6ae18023c0edb746b119f9\nauthor flip1995 <hello@philkrones.com> 1585858105 +0200\ncommitter flip1995 <hello@philkrones.com> 1585941573 +0200\n\nRun update_lints\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/045722a17ea05cb11ae933578ee01a3d5d831352", "html_url": "https://github.com/rust-lang/rust/commit/045722a17ea05cb11ae933578ee01a3d5d831352", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/045722a17ea05cb11ae933578ee01a3d5d831352/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d89bb50f72e1db538d6ae18023c0edb746b119f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d89bb50f72e1db538d6ae18023c0edb746b119f9", "html_url": "https://github.com/rust-lang/rust/commit/d89bb50f72e1db538d6ae18023c0edb746b119f9"}], "stats": {"total": 308, "additions": 157, "deletions": 151}, "files": [{"sha": "b24110fc184422c3abaddeb959035035376b1376", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 157, "deletions": 151, "changes": 308, "blob_url": "https://github.com/rust-lang/rust/blob/045722a17ea05cb11ae933578ee01a3d5d831352/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/045722a17ea05cb11ae933578ee01a3d5d831352/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=045722a17ea05cb11ae933578ee01a3d5d831352", "patch": "@@ -170,157 +170,157 @@ mod consts;\n mod utils;\n \n // begin lints modules, do not remove this comment, it\u2019s used in `update_lints`\n-pub mod approx_const;\n-pub mod arithmetic;\n-pub mod as_conversions;\n-pub mod assertions_on_constants;\n-pub mod assign_ops;\n-pub mod atomic_ordering;\n-pub mod attrs;\n-pub mod bit_mask;\n-pub mod blacklisted_name;\n-pub mod block_in_if_condition;\n-pub mod booleans;\n-pub mod bytecount;\n-pub mod cargo_common_metadata;\n-pub mod checked_conversions;\n-pub mod cognitive_complexity;\n-pub mod collapsible_if;\n-pub mod comparison_chain;\n-pub mod copies;\n-pub mod copy_iterator;\n-pub mod dbg_macro;\n-pub mod default_trait_access;\n-pub mod derive;\n-pub mod doc;\n-pub mod double_comparison;\n-pub mod double_parens;\n-pub mod drop_bounds;\n-pub mod drop_forget_ref;\n-pub mod duration_subsec;\n-pub mod else_if_without_else;\n-pub mod empty_enum;\n-pub mod entry;\n-pub mod enum_clike;\n-pub mod enum_variants;\n-pub mod eq_op;\n-pub mod erasing_op;\n-pub mod escape;\n-pub mod eta_reduction;\n-pub mod eval_order_dependence;\n-pub mod excessive_bools;\n-pub mod exit;\n-pub mod explicit_write;\n-pub mod fallible_impl_from;\n-pub mod float_literal;\n-pub mod floating_point_arithmetic;\n-pub mod format;\n-pub mod formatting;\n-pub mod functions;\n-pub mod get_last_with_len;\n-pub mod identity_conversion;\n-pub mod identity_op;\n-pub mod if_let_some_result;\n-pub mod if_not_else;\n-pub mod implicit_return;\n-pub mod indexing_slicing;\n-pub mod infinite_iter;\n-pub mod inherent_impl;\n-pub mod inherent_to_string;\n-pub mod inline_fn_without_body;\n-pub mod int_plus_one;\n-pub mod integer_division;\n-pub mod items_after_statements;\n-pub mod large_enum_variant;\n-pub mod large_stack_arrays;\n-pub mod len_zero;\n-pub mod let_if_seq;\n-pub mod let_underscore;\n-pub mod lifetimes;\n-pub mod literal_representation;\n-pub mod loops;\n-pub mod macro_use;\n-pub mod main_recursion;\n-pub mod map_clone;\n-pub mod map_unit_fn;\n-pub mod matches;\n-pub mod mem_discriminant;\n-pub mod mem_forget;\n-pub mod mem_replace;\n-pub mod methods;\n-pub mod minmax;\n-pub mod misc;\n-pub mod misc_early;\n-pub mod missing_const_for_fn;\n-pub mod missing_doc;\n-pub mod missing_inline;\n-pub mod modulo_arithmetic;\n-pub mod multiple_crate_versions;\n-pub mod mut_key;\n-pub mod mut_mut;\n-pub mod mut_reference;\n-pub mod mutable_debug_assertion;\n-pub mod mutex_atomic;\n-pub mod needless_bool;\n-pub mod needless_borrow;\n-pub mod needless_borrowed_ref;\n-pub mod needless_continue;\n-pub mod needless_pass_by_value;\n-pub mod needless_update;\n-pub mod neg_cmp_op_on_partial_ord;\n-pub mod neg_multiply;\n-pub mod new_without_default;\n-pub mod no_effect;\n-pub mod non_copy_const;\n-pub mod non_expressive_names;\n-pub mod open_options;\n-pub mod option_env_unwrap;\n-pub mod overflow_check_conditional;\n-pub mod panic_unimplemented;\n-pub mod partialeq_ne_impl;\n-pub mod path_buf_push_overwrite;\n-pub mod precedence;\n-pub mod ptr;\n-pub mod ptr_offset_with_cast;\n-pub mod question_mark;\n-pub mod ranges;\n-pub mod redundant_clone;\n-pub mod redundant_field_names;\n-pub mod redundant_pattern_matching;\n-pub mod redundant_pub_crate;\n-pub mod redundant_static_lifetimes;\n-pub mod reference;\n-pub mod regex;\n-pub mod returns;\n-pub mod serde_api;\n-pub mod shadow;\n-pub mod single_component_path_imports;\n-pub mod slow_vector_initialization;\n-pub mod strings;\n-pub mod suspicious_trait_impl;\n-pub mod swap;\n-pub mod tabs_in_doc_comments;\n-pub mod temporary_assignment;\n-pub mod to_digit_is_some;\n-pub mod trait_bounds;\n-pub mod transmute;\n-pub mod transmuting_null;\n-pub mod trivially_copy_pass_by_ref;\n-pub mod try_err;\n-pub mod types;\n-pub mod unicode;\n-pub mod unnamed_address;\n-pub mod unsafe_removed_from_name;\n-pub mod unused_io_amount;\n-pub mod unused_self;\n-pub mod unwrap;\n-pub mod use_self;\n-pub mod vec;\n-pub mod verbose_file_reads;\n-pub mod wildcard_dependencies;\n-pub mod wildcard_imports;\n-pub mod write;\n-pub mod zero_div_zero;\n+mod approx_const;\n+mod arithmetic;\n+mod as_conversions;\n+mod assertions_on_constants;\n+mod assign_ops;\n+mod atomic_ordering;\n+mod attrs;\n+mod bit_mask;\n+mod blacklisted_name;\n+mod block_in_if_condition;\n+mod booleans;\n+mod bytecount;\n+mod cargo_common_metadata;\n+mod checked_conversions;\n+mod cognitive_complexity;\n+mod collapsible_if;\n+mod comparison_chain;\n+mod copies;\n+mod copy_iterator;\n+mod dbg_macro;\n+mod default_trait_access;\n+mod derive;\n+mod doc;\n+mod double_comparison;\n+mod double_parens;\n+mod drop_bounds;\n+mod drop_forget_ref;\n+mod duration_subsec;\n+mod else_if_without_else;\n+mod empty_enum;\n+mod entry;\n+mod enum_clike;\n+mod enum_variants;\n+mod eq_op;\n+mod erasing_op;\n+mod escape;\n+mod eta_reduction;\n+mod eval_order_dependence;\n+mod excessive_bools;\n+mod exit;\n+mod explicit_write;\n+mod fallible_impl_from;\n+mod float_literal;\n+mod floating_point_arithmetic;\n+mod format;\n+mod formatting;\n+mod functions;\n+mod get_last_with_len;\n+mod identity_conversion;\n+mod identity_op;\n+mod if_let_some_result;\n+mod if_not_else;\n+mod implicit_return;\n+mod indexing_slicing;\n+mod infinite_iter;\n+mod inherent_impl;\n+mod inherent_to_string;\n+mod inline_fn_without_body;\n+mod int_plus_one;\n+mod integer_division;\n+mod items_after_statements;\n+mod large_enum_variant;\n+mod large_stack_arrays;\n+mod len_zero;\n+mod let_if_seq;\n+mod let_underscore;\n+mod lifetimes;\n+mod literal_representation;\n+mod loops;\n+mod macro_use;\n+mod main_recursion;\n+mod map_clone;\n+mod map_unit_fn;\n+mod matches;\n+mod mem_discriminant;\n+mod mem_forget;\n+mod mem_replace;\n+mod methods;\n+mod minmax;\n+mod misc;\n+mod misc_early;\n+mod missing_const_for_fn;\n+mod missing_doc;\n+mod missing_inline;\n+mod modulo_arithmetic;\n+mod multiple_crate_versions;\n+mod mut_key;\n+mod mut_mut;\n+mod mut_reference;\n+mod mutable_debug_assertion;\n+mod mutex_atomic;\n+mod needless_bool;\n+mod needless_borrow;\n+mod needless_borrowed_ref;\n+mod needless_continue;\n+mod needless_pass_by_value;\n+mod needless_update;\n+mod neg_cmp_op_on_partial_ord;\n+mod neg_multiply;\n+mod new_without_default;\n+mod no_effect;\n+mod non_copy_const;\n+mod non_expressive_names;\n+mod open_options;\n+mod option_env_unwrap;\n+mod overflow_check_conditional;\n+mod panic_unimplemented;\n+mod partialeq_ne_impl;\n+mod path_buf_push_overwrite;\n+mod precedence;\n+mod ptr;\n+mod ptr_offset_with_cast;\n+mod question_mark;\n+mod ranges;\n+mod redundant_clone;\n+mod redundant_field_names;\n+mod redundant_pattern_matching;\n+mod redundant_pub_crate;\n+mod redundant_static_lifetimes;\n+mod reference;\n+mod regex;\n+mod returns;\n+mod serde_api;\n+mod shadow;\n+mod single_component_path_imports;\n+mod slow_vector_initialization;\n+mod strings;\n+mod suspicious_trait_impl;\n+mod swap;\n+mod tabs_in_doc_comments;\n+mod temporary_assignment;\n+mod to_digit_is_some;\n+mod trait_bounds;\n+mod transmute;\n+mod transmuting_null;\n+mod trivially_copy_pass_by_ref;\n+mod try_err;\n+mod types;\n+mod unicode;\n+mod unnamed_address;\n+mod unsafe_removed_from_name;\n+mod unused_io_amount;\n+mod unused_self;\n+mod unwrap;\n+mod use_self;\n+mod vec;\n+mod verbose_file_reads;\n+mod wildcard_dependencies;\n+mod wildcard_imports;\n+mod write;\n+mod zero_div_zero;\n // end lints modules, do not remove this comment, it\u2019s used in `update_lints`\n \n pub use crate::utils::conf::Conf;\n@@ -828,6 +828,12 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &unwrap::PANICKING_UNWRAP,\n         &unwrap::UNNECESSARY_UNWRAP,\n         &use_self::USE_SELF,\n+        &utils::internal_lints::CLIPPY_LINTS_INTERNAL,\n+        &utils::internal_lints::COMPILER_LINT_FUNCTIONS,\n+        &utils::internal_lints::DEFAULT_LINT,\n+        &utils::internal_lints::LINT_WITHOUT_LINT_PASS,\n+        &utils::internal_lints::OUTER_EXPN_EXPN_DATA,\n+        &utils::internal_lints::PRODUCE_ICE,\n         &vec::USELESS_VEC,\n         &verbose_file_reads::VERBOSE_FILE_READS,\n         &wildcard_dependencies::WILDCARD_DEPENDENCIES,"}]}