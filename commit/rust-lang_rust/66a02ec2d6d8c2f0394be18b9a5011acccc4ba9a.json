{"sha": "66a02ec2d6d8c2f0394be18b9a5011acccc4ba9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2YTAyZWMyZDZkOGMyZjAzOTRiZTE4YjlhNTAxMWFjY2NjNGJhOWE=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-08-01T18:41:59Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-08-01T18:41:59Z"}, "message": "Use a slice pattern instead of rchunks_exact(_).next()\n\nThis is a minor cleanup, but trying a single-use `rchunks` iterator can\nbe more directly matched with a slice pattern, `[.., a, b]`.", "tree": {"sha": "09d97f8509a3cff2127c54fbd1206df292b5602e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09d97f8509a3cff2127c54fbd1206df292b5602e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66a02ec2d6d8c2f0394be18b9a5011acccc4ba9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66a02ec2d6d8c2f0394be18b9a5011acccc4ba9a", "html_url": "https://github.com/rust-lang/rust/commit/66a02ec2d6d8c2f0394be18b9a5011acccc4ba9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66a02ec2d6d8c2f0394be18b9a5011acccc4ba9a/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfdf9d335501cc0a53ae69c940095cca7d4be0f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfdf9d335501cc0a53ae69c940095cca7d4be0f8", "html_url": "https://github.com/rust-lang/rust/commit/cfdf9d335501cc0a53ae69c940095cca7d4be0f8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fc00050f405182d1eddb93558a470572ed294e4b", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66a02ec2d6d8c2f0394be18b9a5011acccc4ba9a/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66a02ec2d6d8c2f0394be18b9a5011acccc4ba9a/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=66a02ec2d6d8c2f0394be18b9a5011acccc4ba9a", "patch": "@@ -637,7 +637,7 @@ impl EmbargoVisitor<'tcx> {\n         &mut self,\n         segments: &[hir::PathSegment<'_>],\n     ) {\n-        if let Some([module, segment]) = segments.rchunks_exact(2).next() {\n+        if let [.., module, segment] = segments {\n             if let Some(item) = module\n                 .res\n                 .and_then(|res| res.mod_def_id())"}]}