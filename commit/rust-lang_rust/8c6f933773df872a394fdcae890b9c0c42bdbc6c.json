{"sha": "8c6f933773df872a394fdcae890b9c0c42bdbc6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjNmY5MzM3NzNkZjg3MmEzOTRmZGNhZTg5MGI5YzBjNDJiZGJjNmM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-11-17T13:08:31Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-11-17T13:33:30Z"}, "message": "**Unwrap Block** supports stand-alone blocks", "tree": {"sha": "2ac6ed3ce23af719e18c521c894d63504f6eb4d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ac6ed3ce23af719e18c521c894d63504f6eb4d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c6f933773df872a394fdcae890b9c0c42bdbc6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c6f933773df872a394fdcae890b9c0c42bdbc6c", "html_url": "https://github.com/rust-lang/rust/commit/8c6f933773df872a394fdcae890b9c0c42bdbc6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c6f933773df872a394fdcae890b9c0c42bdbc6c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10fa9c595ab6cae7420eb879cabadc30db4d6d7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/10fa9c595ab6cae7420eb879cabadc30db4d6d7e", "html_url": "https://github.com/rust-lang/rust/commit/10fa9c595ab6cae7420eb879cabadc30db4d6d7e"}], "stats": {"total": 69, "additions": 68, "deletions": 1}, "files": [{"sha": "4967142432cf90ba4e638e0764916296a7b4e537", "filename": "crates/assists/src/handlers/unwrap_block.rs", "status": "modified", "additions": 68, "deletions": 1, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/8c6f933773df872a394fdcae890b9c0c42bdbc6c/crates%2Fassists%2Fsrc%2Fhandlers%2Funwrap_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c6f933773df872a394fdcae890b9c0c42bdbc6c/crates%2Fassists%2Fsrc%2Fhandlers%2Funwrap_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Funwrap_block.rs?ref=8c6f933773df872a394fdcae890b9c0c42bdbc6c", "patch": "@@ -3,7 +3,7 @@ use syntax::{\n         self,\n         edit::{AstNodeEdit, IndentLevel},\n     },\n-    AstNode, TextRange, T,\n+    AstNode, SyntaxKind, TextRange, T,\n };\n \n use crate::{utils::unwrap_trivial_block, AssistContext, AssistId, AssistKind, Assists};\n@@ -37,6 +37,15 @@ pub(crate) fn unwrap_block(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n         parent = parent.ancestors().find(|it| ast::MatchExpr::can_cast(it.kind()))?\n     }\n \n+    if matches!(parent.kind(), SyntaxKind::BLOCK_EXPR | SyntaxKind::EXPR_STMT) {\n+        return acc.add(assist_id, assist_label, target, |builder| {\n+            builder.replace(\n+                block.syntax().text_range(),\n+                update_expr_string(block.to_string(), &[' ', '{', '\\n']),\n+            );\n+        });\n+    }\n+\n     let parent = ast::Expr::cast(parent)?;\n \n     match parent.clone() {\n@@ -109,6 +118,64 @@ mod tests {\n \n     use super::*;\n \n+    #[test]\n+    fn unwrap_tail_expr_block() {\n+        check_assist(\n+            unwrap_block,\n+            r#\"\n+fn main() {\n+    <|>{\n+        92\n+    }\n+}\n+\"#,\n+            r#\"\n+fn main() {\n+    92\n+}\n+\"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn unwrap_stmt_expr_block() {\n+        check_assist(\n+            unwrap_block,\n+            r#\"\n+fn main() {\n+    <|>{\n+        92;\n+    }\n+    ()\n+}\n+\"#,\n+            r#\"\n+fn main() {\n+    92;\n+    ()\n+}\n+\"#,\n+        );\n+        // Pedantically, we should add an `;` here...\n+        check_assist(\n+            unwrap_block,\n+            r#\"\n+fn main() {\n+    <|>{\n+        92\n+    }\n+    ()\n+}\n+\"#,\n+            r#\"\n+fn main() {\n+    92\n+    ()\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn simple_if() {\n         check_assist("}]}