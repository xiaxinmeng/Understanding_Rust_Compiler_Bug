{"sha": "2e7be1ed6c1e3fec7b4aac6550f94694f5c43ae9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlN2JlMWVkNmMxZTNmZWM3YjRhYWM2NTUwZjk0Njk0ZjVjNDNhZTk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-05T10:46:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-05T10:46:49Z"}, "message": "Rollup merge of #59687 - matklad:shebang, r=petrochenkov\n\ncleanup shebang handling in the lexer", "tree": {"sha": "f45bca26d6e35c54725a0b78bf91b99f74361421", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f45bca26d6e35c54725a0b78bf91b99f74361421"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e7be1ed6c1e3fec7b4aac6550f94694f5c43ae9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcpzIZCRBK7hj4Ov3rIwAAdHIIABAiKHxfpNPdvuvhG/HLwIqV\nbgrLElb0NjaWdNxUOf43E3uT8N0ROsogKb8bCAwaSST8IC8RRtND9OWvnIZuaLzf\n0A2m2I6HzEiBxYOl1+Wn2Hpl2R9AnMx+CITVrkgeD9IM5AANPzRME3wK907X7MtG\nY+cmSbRkTmxpxHWJnrysECI+4eSevo0F+6/rE0mJq28yFZaNQhX9zVcepE1GNEkQ\ncbhZagJKEk5v2iJgcrbQ+Kg1sXMJL17zmQ+8TN5Ldw95qa6FVsh1FhOAHjoRl10b\nTenU9Ss2aMBBdHecoWsI6Eft3lPSYnY/Ku/sBTYsAdCM1MD2MEbpE72v42D2EuU=\n=yA5n\n-----END PGP SIGNATURE-----\n", "payload": "tree f45bca26d6e35c54725a0b78bf91b99f74361421\nparent a3122e12d8bcc2701c26cc3d38b35a818c0d87a6\nparent fdb8752850f9e8a6c5a846a6de3c5f1952fa1b38\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1554461209 +0200\ncommitter GitHub <noreply@github.com> 1554461209 +0200\n\nRollup merge of #59687 - matklad:shebang, r=petrochenkov\n\ncleanup shebang handling in the lexer\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e7be1ed6c1e3fec7b4aac6550f94694f5c43ae9", "html_url": "https://github.com/rust-lang/rust/commit/2e7be1ed6c1e3fec7b4aac6550f94694f5c43ae9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e7be1ed6c1e3fec7b4aac6550f94694f5c43ae9/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3122e12d8bcc2701c26cc3d38b35a818c0d87a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3122e12d8bcc2701c26cc3d38b35a818c0d87a6", "html_url": "https://github.com/rust-lang/rust/commit/a3122e12d8bcc2701c26cc3d38b35a818c0d87a6"}, {"sha": "fdb8752850f9e8a6c5a846a6de3c5f1952fa1b38", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdb8752850f9e8a6c5a846a6de3c5f1952fa1b38", "html_url": "https://github.com/rust-lang/rust/commit/fdb8752850f9e8a6c5a846a6de3c5f1952fa1b38"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "5557e281a6639b6595cd0fa5c14fac512aff6d8b", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2e7be1ed6c1e3fec7b4aac6550f94694f5c43ae9/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e7be1ed6c1e3fec7b4aac6550f94694f5c43ae9/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=2e7be1ed6c1e3fec7b4aac6550f94694f5c43ae9", "patch": "@@ -1,10 +1,9 @@\n use crate::ast::{self, Ident};\n-use crate::source_map::{SourceMap, FilePathMapping};\n use crate::parse::{token, ParseSess};\n use crate::symbol::Symbol;\n \n use errors::{Applicability, FatalError, Diagnostic, DiagnosticBuilder};\n-use syntax_pos::{BytePos, CharPos, Pos, Span, NO_EXPANSION};\n+use syntax_pos::{BytePos, Pos, Span, NO_EXPANSION};\n use core::unicode::property::Pattern_White_Space;\n \n use std::borrow::Cow;\n@@ -667,14 +666,9 @@ impl<'a> StringReader<'a> {\n                     return None;\n                 }\n \n-                // I guess this is the only way to figure out if\n-                // we're at the beginning of the file...\n-                let smap = SourceMap::new(FilePathMapping::empty());\n-                smap.files.borrow_mut().source_files.push(self.source_file.clone());\n-                let loc = smap.lookup_char_pos_adj(self.pos);\n-                debug!(\"Skipping a shebang\");\n-                if loc.line == 1 && loc.col == CharPos(0) {\n-                    // FIXME: Add shebang \"token\", return it\n+                let is_beginning_of_file = self.pos == self.source_file.start_pos;\n+                if is_beginning_of_file {\n+                    debug!(\"Skipping a shebang\");\n                     let start = self.pos;\n                     while !self.ch_is('\\n') && !self.is_eof() {\n                         self.bump();\n@@ -1911,7 +1905,7 @@ mod tests {\n \n     use crate::ast::{Ident, CrateConfig};\n     use crate::symbol::Symbol;\n-    use crate::source_map::SourceMap;\n+    use crate::source_map::{SourceMap, FilePathMapping};\n     use crate::feature_gate::UnstableFeatures;\n     use crate::parse::token;\n     use crate::diagnostics::plugin::ErrorMap;"}]}