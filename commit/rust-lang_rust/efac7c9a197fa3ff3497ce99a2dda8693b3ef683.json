{"sha": "efac7c9a197fa3ff3497ce99a2dda8693b3ef683", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmYWM3YzlhMTk3ZmEzZmYzNDk3Y2U5OWEyZGRhODY5M2IzZWY2ODM=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-08-17T00:12:46Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-08-17T21:42:40Z"}, "message": "Yet another comm interface.", "tree": {"sha": "bd36f31921ed624c1cf63d6ee9418c2944981b58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd36f31921ed624c1cf63d6ee9418c2944981b58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efac7c9a197fa3ff3497ce99a2dda8693b3ef683", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efac7c9a197fa3ff3497ce99a2dda8693b3ef683", "html_url": "https://github.com/rust-lang/rust/commit/efac7c9a197fa3ff3497ce99a2dda8693b3ef683", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efac7c9a197fa3ff3497ce99a2dda8693b3ef683/comments", "author": null, "committer": null, "parents": [{"sha": "72b2f8207d6b626bc2514b830ef4d91580f08637", "url": "https://api.github.com/repos/rust-lang/rust/commits/72b2f8207d6b626bc2514b830ef4d91580f08637", "html_url": "https://github.com/rust-lang/rust/commit/72b2f8207d6b626bc2514b830ef4d91580f08637"}], "stats": {"total": 53, "additions": 36, "deletions": 17}, "files": [{"sha": "318d9782301098c0555b1a79184b6adc7d6eb298", "filename": "src/lib/comm.rs", "status": "modified", "additions": 28, "deletions": 14, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/efac7c9a197fa3ff3497ce99a2dda8693b3ef683/src%2Flib%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efac7c9a197fa3ff3497ce99a2dda8693b3ef683/src%2Flib%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fcomm.rs?ref=efac7c9a197fa3ff3497ce99a2dda8693b3ef683", "patch": "@@ -10,16 +10,14 @@ export _port;\n export mk_port;\n export chan_from_unsafe_ptr;\n export send;\n+export recv;\n+export chan;\n+export port;\n \n native \"rust\" mod rustrt {\n     type void;\n-    type rust_chan;\n     type rust_port;\n \n-    fn new_chan(po : *rust_port) -> *rust_chan;\n-    fn take_chan(ch : *rust_chan);\n-    fn drop_chan(ch : *rust_chan);\n-    fn chan_send(ch: *rust_chan, v : *void);\n     fn chan_id_send<~T>(target_task : task_id, target_port : port_id,\n                         data : -T);\n \n@@ -35,34 +33,50 @@ native \"rust-intrinsic\" mod rusti {\n \n type port_id = int;\n \n-type _chan<~T> = {\n+type chan<~T> = {\n     task : task_id,\n     port : port_id\n };\n+type _chan<~T> = chan<T>;\n \n resource port_ptr(po: *rustrt::rust_port) {\n     rustrt::drop_port(po);\n     rustrt::del_port(po);\n }\n \n-obj _port<~T>(raw_port : @port_ptr) {\n+type port<~T> = @port_ptr;\n+\n+obj port_obj<~T>(raw_port : port<T>) {\n     // FIXME: rename this to chan once chan is not a keyword.\n     fn mk_chan() -> _chan<T> {\n-        {\n-            task: task::get_task_id(),\n-            port: rustrt::get_port_id(**raw_port)\n-        }\n+        chan::<T>(raw_port)\n     }\n \n     fn recv() -> T {\n-        ret rusti::recv(**raw_port)\n+        recv(raw_port)\n     }\n }\n+type _port<~T> = port_obj<T>;\n \n fn mk_port<~T>() -> _port<T> {\n-    _port(@port_ptr(rustrt::new_port(sys::size_of::<T>())))\n+    ret port_obj::<T>(port::<T>());\n }\n \n-fn send<~T>(ch : _chan<T>, data : -T) {\n+fn send<~T>(ch : chan<T>, data : -T) {\n     rustrt::chan_id_send(ch.task, ch.port, data);\n }\n+\n+fn port<~T>() -> port<T> {\n+    @port_ptr(rustrt::new_port(sys::size_of::<T>()))\n+}\n+\n+fn recv<~T>(p : port<T>) -> T {\n+    ret rusti::recv(**p)\n+}\n+\n+fn chan<~T>(p : port<T>) -> chan<T> {\n+    {\n+        task: task::get_task_id(),\n+        port: rustrt::get_port_id(**p)\n+    }\n+}"}, {"sha": "f29c35acdda30e2af486868bc737e93a446cce6a", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/efac7c9a197fa3ff3497ce99a2dda8693b3ef683/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/efac7c9a197fa3ff3497ce99a2dda8693b3ef683/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=efac7c9a197fa3ff3497ce99a2dda8693b3ef683", "patch": "@@ -16,14 +16,12 @@ debug_box\n debug_fn\n debug_obj\n debug_opaque\n-del_chan\n del_port\n debug_ptrcast\n debug_tag\n debug_trap\n debug_tydesc\n do_gc\n-drop_chan\n drop_port\n drop_task\n get_port_id\n@@ -77,7 +75,6 @@ str_from_cstr\n str_from_ivec\n str_push_byte\n str_slice\n-take_chan\n task_sleep\n task_yield\n task_join"}, {"sha": "17c3bc1e92912f51b2279c0de747d4d0543766a4", "filename": "src/test/stdtest/comm.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/efac7c9a197fa3ff3497ce99a2dda8693b3ef683/src%2Ftest%2Fstdtest%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efac7c9a197fa3ff3497ce99a2dda8693b3ef683/src%2Ftest%2Fstdtest%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fcomm.rs?ref=efac7c9a197fa3ff3497ce99a2dda8693b3ef683", "patch": "@@ -17,3 +17,11 @@ fn send_recv() {\n     log_err v;\n     assert(42 == v);\n }\n+\n+#[test]\n+fn send_recv_fn() {\n+    let p = comm::port::<int>();\n+    let c = comm::chan::<int>(p);\n+    comm::send(c, 42);\n+    assert(comm::recv(p) == 42);\n+}"}]}