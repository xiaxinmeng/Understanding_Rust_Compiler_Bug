{"sha": "832bae8e28768759ba3dc75cf6a10fb333741d8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzMmJhZThlMjg3Njg3NTliYTNkYzc1Y2Y2YTEwZmIzMzM3NDFkOGU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-01T15:19:15Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-01T19:15:35Z"}, "message": "fix tests", "tree": {"sha": "36c86a339d500c4e4c2e43d9c737813a182168d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36c86a339d500c4e4c2e43d9c737813a182168d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/832bae8e28768759ba3dc75cf6a10fb333741d8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/832bae8e28768759ba3dc75cf6a10fb333741d8e", "html_url": "https://github.com/rust-lang/rust/commit/832bae8e28768759ba3dc75cf6a10fb333741d8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/832bae8e28768759ba3dc75cf6a10fb333741d8e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "882a86240f42068038586431e7e5de5de247720c", "url": "https://api.github.com/repos/rust-lang/rust/commits/882a86240f42068038586431e7e5de5de247720c", "html_url": "https://github.com/rust-lang/rust/commit/882a86240f42068038586431e7e5de5de247720c"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "289bec5070c2e370b6df02c0a89780d0c05926a6", "filename": "crates/ra_hir/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/832bae8e28768759ba3dc75cf6a10fb333741d8e/crates%2Fra_hir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/832bae8e28768759ba3dc75cf6a10fb333741d8e/crates%2Fra_hir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdb.rs?ref=832bae8e28768759ba3dc75cf6a10fb333741d8e", "patch": "@@ -8,7 +8,7 @@ use crate::{\n     SourceFileItems, SourceItemId,\n     query_definitions,\n     FnScopes,\n-    macros::{MacroCallLoc, MacroCallId, MacroInput, MacroDef, MacroExpansion},\n+    macros::{MacroCallLoc, MacroCallId, MacroExpansion},\n     module::{ModuleId, ModuleTree, ModuleSource,\n     nameres::{ItemMap, InputModuleItems}},\n     ty::{InferenceResult, Ty},"}, {"sha": "78f638ce440dd9d63dd17b609567b3b26c7d3818", "filename": "crates/ra_hir/src/mock.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/832bae8e28768759ba3dc75cf6a10fb333741d8e/crates%2Fra_hir%2Fsrc%2Fmock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/832bae8e28768759ba3dc75cf6a10fb333741d8e/crates%2Fra_hir%2Fsrc%2Fmock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmock.rs?ref=832bae8e28768759ba3dc75cf6a10fb333741d8e", "patch": "@@ -6,7 +6,7 @@ use ra_db::{LocationIntener, BaseDatabase, FilePosition, FileId, CrateGraph, Sou\n use relative_path::RelativePathBuf;\n use test_utils::{parse_fixture, CURSOR_MARKER, extract_offset};\n \n-use crate::{db, DefId, DefLoc};\n+use crate::{db, DefId, DefLoc, MacroCallId, MacroCallLoc};\n \n pub const WORKSPACE: SourceRootId = SourceRootId(0);\n \n@@ -95,6 +95,7 @@ impl MockDatabase {\n #[derive(Debug, Default)]\n struct IdMaps {\n     defs: LocationIntener<DefLoc, DefId>,\n+    macros: LocationIntener<MacroCallLoc, MacroCallId>,\n }\n \n impl salsa::Database for MockDatabase {\n@@ -144,6 +145,11 @@ impl AsRef<LocationIntener<DefLoc, DefId>> for MockDatabase {\n         &self.id_maps.defs\n     }\n }\n+impl AsRef<LocationIntener<MacroCallLoc, MacroCallId>> for MockDatabase {\n+    fn as_ref(&self) -> &LocationIntener<MacroCallLoc, MacroCallId> {\n+        &self.id_maps.macros\n+    }\n+}\n \n impl MockDatabase {\n     pub(crate) fn log(&self, f: impl FnOnce()) -> Vec<salsa::Event<MockDatabase>> {\n@@ -183,6 +189,7 @@ salsa::database_storage! {\n             fn file_lines() for ra_db::FileLinesQuery;\n         }\n         impl db::HirDatabase {\n+            fn expand_macro_invocation() for db::ExpandMacroCallQuery;\n             fn module_tree() for db::ModuleTreeQuery;\n             fn fn_scopes() for db::FnScopesQuery;\n             fn file_items() for db::SourceFileItemsQuery;"}]}