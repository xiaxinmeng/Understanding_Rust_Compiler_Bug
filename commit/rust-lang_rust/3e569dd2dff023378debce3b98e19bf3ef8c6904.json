{"sha": "3e569dd2dff023378debce3b98e19bf3ef8c6904", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlNTY5ZGQyZGZmMDIzMzc4ZGViY2UzYjk4ZTE5YmYzZWY4YzY5MDQ=", "commit": {"author": {"name": "Roxane Fruytier", "email": "roxane.fruytier@hotmail.com", "date": "2021-06-29T18:15:58Z"}, "committer": {"name": "Roxane", "email": "roxane.fruytier@hotmail.com", "date": "2021-06-29T21:47:57Z"}, "message": "Remove lang items Send, UnwindSafe and RefUnwindSafe", "tree": {"sha": "d0d142114a45e04f161fdef168c4e095cbe58c7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0d142114a45e04f161fdef168c4e095cbe58c7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e569dd2dff023378debce3b98e19bf3ef8c6904", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e569dd2dff023378debce3b98e19bf3ef8c6904", "html_url": "https://github.com/rust-lang/rust/commit/3e569dd2dff023378debce3b98e19bf3ef8c6904", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e569dd2dff023378debce3b98e19bf3ef8c6904/comments", "author": {"login": "roxelo", "id": 12419401, "node_id": "MDQ6VXNlcjEyNDE5NDAx", "avatar_url": "https://avatars.githubusercontent.com/u/12419401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roxelo", "html_url": "https://github.com/roxelo", "followers_url": "https://api.github.com/users/roxelo/followers", "following_url": "https://api.github.com/users/roxelo/following{/other_user}", "gists_url": "https://api.github.com/users/roxelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/roxelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roxelo/subscriptions", "organizations_url": "https://api.github.com/users/roxelo/orgs", "repos_url": "https://api.github.com/users/roxelo/repos", "events_url": "https://api.github.com/users/roxelo/events{/privacy}", "received_events_url": "https://api.github.com/users/roxelo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "roxelo", "id": 12419401, "node_id": "MDQ6VXNlcjEyNDE5NDAx", "avatar_url": "https://avatars.githubusercontent.com/u/12419401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roxelo", "html_url": "https://github.com/roxelo", "followers_url": "https://api.github.com/users/roxelo/followers", "following_url": "https://api.github.com/users/roxelo/following{/other_user}", "gists_url": "https://api.github.com/users/roxelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/roxelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roxelo/subscriptions", "organizations_url": "https://api.github.com/users/roxelo/orgs", "repos_url": "https://api.github.com/users/roxelo/repos", "events_url": "https://api.github.com/users/roxelo/events{/privacy}", "received_events_url": "https://api.github.com/users/roxelo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e0b554619a3bb7e75b3334e97f191af20ef5d76", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e0b554619a3bb7e75b3334e97f191af20ef5d76", "html_url": "https://github.com/rust-lang/rust/commit/6e0b554619a3bb7e75b3334e97f191af20ef5d76"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "28ae08030e63029f34adcc4eccd8153564c7145c", "filename": "compiler/rustc_hir/src/lang_items.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3e569dd2dff023378debce3b98e19bf3ef8c6904/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e569dd2dff023378debce3b98e19bf3ef8c6904/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs?ref=3e569dd2dff023378debce3b98e19bf3ef8c6904", "patch": "@@ -348,7 +348,4 @@ language_item_table! {\n     Range,                   sym::Range,               range_struct,               Target::Struct;\n     RangeToInclusive,        sym::RangeToInclusive,    range_to_inclusive_struct,  Target::Struct;\n     RangeTo,                 sym::RangeTo,             range_to_struct,            Target::Struct;\n-    Send,                    sym::send,                send_trait,                 Target::Trait;\n-    UnwindSafe,              sym::unwind_safe,         unwind_safe_trait,          Target::Trait;\n-    RefUnwindSafe,           sym::ref_unwind_safe,     ref_unwind_safe_trait,      Target::Trait;\n }"}, {"sha": "f57f5fd56d28492de59d88dd4ecb6ebf36554a34", "filename": "compiler/rustc_passes/src/lang_items.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3e569dd2dff023378debce3b98e19bf3ef8c6904/compiler%2Frustc_passes%2Fsrc%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e569dd2dff023378debce3b98e19bf3ef8c6904/compiler%2Frustc_passes%2Fsrc%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Flang_items.rs?ref=3e569dd2dff023378debce3b98e19bf3ef8c6904", "patch": "@@ -257,9 +257,6 @@ impl LanguageItemCollector<'tcx> {\n             | LangItem::Unpin\n             | LangItem::Termination\n             | LangItem::Try\n-            | LangItem::Send\n-            | LangItem::UnwindSafe\n-            | LangItem::RefUnwindSafe\n                 => Some(0),\n \n             // Not a trait"}, {"sha": "38e19dcb678aabcc2bf78676910b685343cdc307", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3e569dd2dff023378debce3b98e19bf3ef8c6904/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e569dd2dff023378debce3b98e19bf3ef8c6904/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=3e569dd2dff023378debce3b98e19bf3ef8c6904", "patch": "@@ -947,7 +947,7 @@ symbols! {\n         receiver,\n         recursion_limit,\n         reexport_test_harness_main,\n-        ref_unwind_safe,\n+        ref_unwind_safe_trait,\n         reference,\n         reflect,\n         reg,\n@@ -1073,7 +1073,6 @@ symbols! {\n         self_in_typedefs,\n         self_struct_ctor,\n         semitransparent,\n-        send,\n         send_trait,\n         shl,\n         shl_assign,\n@@ -1299,7 +1298,7 @@ symbols! {\n         unused_qualifications,\n         unwind,\n         unwind_attributes,\n-        unwind_safe,\n+        unwind_safe_trait,\n         unwrap,\n         unwrap_or,\n         use_extern_macros,"}, {"sha": "d00fb2284b8846a89bdb0bfb1575783367636ecc", "filename": "library/core/src/marker.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3e569dd2dff023378debce3b98e19bf3ef8c6904/library%2Fcore%2Fsrc%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e569dd2dff023378debce3b98e19bf3ef8c6904/library%2Fcore%2Fsrc%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmarker.rs?ref=3e569dd2dff023378debce3b98e19bf3ef8c6904", "patch": "@@ -31,7 +31,10 @@ use crate::hash::Hasher;\n /// [ub]: ../../reference/behavior-considered-undefined.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[cfg_attr(not(test), rustc_diagnostic_item = \"send_trait\")]\n+<<<<<<< HEAD\n #[lang = \"send\"]\n+=======\n+>>>>>>> Remove lang items Send, UnwindSafe and RefUnwindSafe\n #[rustc_on_unimplemented(\n     message = \"`{Self}` cannot be sent between threads safely\",\n     label = \"`{Self}` cannot be sent between threads safely\""}, {"sha": "7931c4c0a5fcac16b54698690c30471ba871a288", "filename": "library/std/src/panic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3e569dd2dff023378debce3b98e19bf3ef8c6904/library%2Fstd%2Fsrc%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e569dd2dff023378debce3b98e19bf3ef8c6904/library%2Fstd%2Fsrc%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpanic.rs?ref=3e569dd2dff023378debce3b98e19bf3ef8c6904", "patch": "@@ -133,7 +133,7 @@ pub fn panic_any<M: 'static + Any + Send>(msg: M) -> ! {\n /// [`AssertUnwindSafe`] wrapper struct can be used to force this trait to be\n /// implemented for any closed over variables passed to `catch_unwind`.\n #[stable(feature = \"catch_unwind\", since = \"1.9.0\")]\n-#[cfg_attr(not(test), lang = \"unwind_safe\")]\n+#[rustc_diagnostic_item = \"unwind_safe_trait\"]\n #[rustc_on_unimplemented(\n     message = \"the type `{Self}` may not be safely transferred across an unwind boundary\",\n     label = \"`{Self}` may not be safely transferred across an unwind boundary\"\n@@ -149,7 +149,7 @@ pub auto trait UnwindSafe {}\n /// This is a \"helper marker trait\" used to provide impl blocks for the\n /// [`UnwindSafe`] trait, for more information see that documentation.\n #[stable(feature = \"catch_unwind\", since = \"1.9.0\")]\n-#[cfg_attr(not(test), lang = \"ref_unwind_safe\")]\n+#[rustc_diagnostic_item = \"ref_unwind_safe_trait\"]\n #[rustc_on_unimplemented(\n     message = \"the type `{Self}` may contain interior mutability and a reference may not be safely \\\n                transferrable across a catch_unwind boundary\","}]}