{"sha": "f265997b823f2b49f316f1a01f594c9c845c27a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyNjU5OTdiODIzZjJiNDlmMzE2ZjFhMDFmNTk0YzljODQ1YzI3YTQ=", "commit": {"author": {"name": "Aman Arora", "email": "me@aman-arora.com", "date": "2021-06-21T06:48:18Z"}, "committer": {"name": "Aman Arora", "email": "me@aman-arora.com", "date": "2021-06-22T10:00:12Z"}, "message": "Edition 2021 enables disjoint capture", "tree": {"sha": "c4549b1b4a6beddb2840834fe170140a7285ddb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4549b1b4a6beddb2840834fe170140a7285ddb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f265997b823f2b49f316f1a01f594c9c845c27a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f265997b823f2b49f316f1a01f594c9c845c27a4", "html_url": "https://github.com/rust-lang/rust/commit/f265997b823f2b49f316f1a01f594c9c845c27a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f265997b823f2b49f316f1a01f594c9c845c27a4/comments", "author": {"login": "arora-aman", "id": 4193035, "node_id": "MDQ6VXNlcjQxOTMwMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4193035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arora-aman", "html_url": "https://github.com/arora-aman", "followers_url": "https://api.github.com/users/arora-aman/followers", "following_url": "https://api.github.com/users/arora-aman/following{/other_user}", "gists_url": "https://api.github.com/users/arora-aman/gists{/gist_id}", "starred_url": "https://api.github.com/users/arora-aman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arora-aman/subscriptions", "organizations_url": "https://api.github.com/users/arora-aman/orgs", "repos_url": "https://api.github.com/users/arora-aman/repos", "events_url": "https://api.github.com/users/arora-aman/events{/privacy}", "received_events_url": "https://api.github.com/users/arora-aman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arora-aman", "id": 4193035, "node_id": "MDQ6VXNlcjQxOTMwMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4193035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arora-aman", "html_url": "https://github.com/arora-aman", "followers_url": "https://api.github.com/users/arora-aman/followers", "following_url": "https://api.github.com/users/arora-aman/following{/other_user}", "gists_url": "https://api.github.com/users/arora-aman/gists{/gist_id}", "starred_url": "https://api.github.com/users/arora-aman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arora-aman/subscriptions", "organizations_url": "https://api.github.com/users/arora-aman/orgs", "repos_url": "https://api.github.com/users/arora-aman/repos", "events_url": "https://api.github.com/users/arora-aman/events{/privacy}", "received_events_url": "https://api.github.com/users/arora-aman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4573a4a879a8e1f773944a8859e4dcd136138af8", "url": "https://api.github.com/repos/rust-lang/rust/commits/4573a4a879a8e1f773944a8859e4dcd136138af8", "html_url": "https://github.com/rust-lang/rust/commit/4573a4a879a8e1f773944a8859e4dcd136138af8"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "4c9c3954624f5acf7a979b8ef372a49d89206c57", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f265997b823f2b49f316f1a01f594c9c845c27a4/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f265997b823f2b49f316f1a01f594c9c845c27a4/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=f265997b823f2b49f316f1a01f594c9c845c27a4", "patch": "@@ -177,7 +177,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n         // We now fake capture information for all variables that are mentioned within the closure\n         // We do this after handling migrations so that min_captures computes before\n-        if !self.tcx.features().capture_disjoint_fields {\n+        if !enable_precise_capture(self.tcx, span) {\n             let mut capture_information: InferredCaptureInformation<'tcx> = Default::default();\n \n             if let Some(upvars) = self.tcx.upvars_mentioned(closure_def_id) {\n@@ -212,7 +212,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n             // If we have an origin, store it.\n             if let Some(origin) = delegate.current_origin.clone() {\n-                let origin = if self.tcx.features().capture_disjoint_fields {\n+                let origin = if enable_precise_capture(self.tcx, span) {\n                     (origin.0, restrict_capture_precision(origin.1))\n                 } else {\n                     (origin.0, Place { projections: vec![], ..origin.1 })\n@@ -1924,3 +1924,13 @@ fn determine_place_ancestry_relation(\n         PlaceAncestryRelation::Divergent\n     }\n }\n+\n+/// Precise capture is enabled if the feature gate `capture_disjoint_fields` is enabled or if\n+/// user is using Rust Edition 2021 or higher.\n+///\n+/// `span` is the span of the closure.\n+fn enable_precise_capture(tcx: TyCtxt<'_>, span: Span) -> bool {\n+    // We use span here to ensure that if the closure was generated by a macro with a different\n+    // edition.\n+    tcx.features().capture_disjoint_fields || span.rust_2021()\n+}"}, {"sha": "20bbe1d89e45d92152c4aca5fe3a216f3b2ec649", "filename": "src/test/ui/closures/2229_closure_analysis/run_pass/edition.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f265997b823f2b49f316f1a01f594c9c845c27a4/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Frun_pass%2Fedition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f265997b823f2b49f316f1a01f594c9c845c27a4/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Frun_pass%2Fedition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Frun_pass%2Fedition.rs?ref=f265997b823f2b49f316f1a01f594c9c845c27a4", "patch": "@@ -0,0 +1,23 @@\n+// edition:2021\n+// run-pass\n+\n+// Test that edition 2021 enables disjoint capture by default.\n+\n+struct Point {\n+    x: i32,\n+    y: i32,\n+}\n+\n+fn main() {\n+    let mut p = Point { x: 10, y: 10 };\n+\n+    let c = || {\n+        println!(\"{}\", p.x);\n+    };\n+\n+    // `c` should only capture `p.x`, therefore mutating `p.y` is allowed.\n+    let py = &mut p.y;\n+\n+    c();\n+    *py = 20;\n+}"}]}