{"sha": "48af94c080d37a5396dd4452c21cd8006f38fba4", "node_id": "C_kwDOAAsO6NoAKDQ4YWY5NGMwODBkMzdhNTM5NmRkNDQ1MmMyMWNkODAwNmYzOGZiYTQ", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2022-12-12T03:11:41Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2023-05-05T21:25:55Z"}, "message": "Operand::extract_field: only cast llval if it's a pointer and replace bitcast w/ pointercast.", "tree": {"sha": "45ce6208652f6d07b9766ae58dbf79b7071ec8b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45ce6208652f6d07b9766ae58dbf79b7071ec8b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48af94c080d37a5396dd4452c21cd8006f38fba4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48af94c080d37a5396dd4452c21cd8006f38fba4", "html_url": "https://github.com/rust-lang/rust/commit/48af94c080d37a5396dd4452c21cd8006f38fba4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48af94c080d37a5396dd4452c21cd8006f38fba4/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b94c232192b0fa0314b5afa18e366356e210c4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b94c232192b0fa0314b5afa18e366356e210c4c", "html_url": "https://github.com/rust-lang/rust/commit/4b94c232192b0fa0314b5afa18e366356e210c4c"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "957ec8629faa307bdf4ca61986b17f924cb1ebd5", "filename": "compiler/rustc_codegen_ssa/src/mir/operand.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/48af94c080d37a5396dd4452c21cd8006f38fba4/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48af94c080d37a5396dd4452c21cd8006f38fba4/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Foperand.rs?ref=48af94c080d37a5396dd4452c21cd8006f38fba4", "patch": "@@ -2,6 +2,7 @@ use super::place::PlaceRef;\n use super::{FunctionCx, LocalRef};\n \n use crate::base;\n+use crate::common::TypeKind;\n use crate::glue;\n use crate::traits::*;\n use crate::MemFlags;\n@@ -240,15 +241,24 @@ impl<'a, 'tcx, V: CodegenObject> OperandRef<'tcx, V> {\n                 // Bools in union fields needs to be truncated.\n                 *llval = bx.to_immediate(*llval, field);\n                 // HACK(eddyb) have to bitcast pointers until LLVM removes pointee types.\n-                *llval = bx.bitcast(*llval, bx.cx().immediate_backend_type(field));\n+                let ty = bx.cx().immediate_backend_type(field);\n+                if bx.type_kind(ty) == TypeKind::Pointer {\n+                    *llval = bx.pointercast(*llval, ty);\n+                }\n             }\n             (OperandValue::Pair(a, b), Abi::ScalarPair(a_abi, b_abi)) => {\n                 // Bools in union fields needs to be truncated.\n                 *a = bx.to_immediate_scalar(*a, a_abi);\n                 *b = bx.to_immediate_scalar(*b, b_abi);\n                 // HACK(eddyb) have to bitcast pointers until LLVM removes pointee types.\n-                *a = bx.bitcast(*a, bx.cx().scalar_pair_element_backend_type(field, 0, true));\n-                *b = bx.bitcast(*b, bx.cx().scalar_pair_element_backend_type(field, 1, true));\n+                let a_ty = bx.cx().scalar_pair_element_backend_type(field, 0, true);\n+                let b_ty = bx.cx().scalar_pair_element_backend_type(field, 1, true);\n+                if bx.type_kind(a_ty) == TypeKind::Pointer {\n+                    *a = bx.pointercast(*a, a_ty);\n+                }\n+                if bx.type_kind(b_ty) == TypeKind::Pointer {\n+                    *b = bx.pointercast(*b, b_ty);\n+                }\n             }\n             (OperandValue::Pair(..), _) => bug!(),\n             (OperandValue::Ref(..), _) => bug!(),"}]}