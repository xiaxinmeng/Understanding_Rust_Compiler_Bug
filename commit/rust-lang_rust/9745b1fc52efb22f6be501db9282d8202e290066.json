{"sha": "9745b1fc52efb22f6be501db9282d8202e290066", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3NDViMWZjNTJlZmIyMmY2YmU1MDFkYjkyODJkODIwMmUyOTAwNjY=", "commit": {"author": {"name": "Thomas de Zeeuw", "email": "thomasdezeeuw@gmail.com", "date": "2020-04-01T13:39:05Z"}, "committer": {"name": "Thomas de Zeeuw", "email": "thomasdezeeuw@gmail.com", "date": "2020-04-01T13:39:05Z"}, "message": "Use unspecified over undefined in io::Write::write_all_vectored docs", "tree": {"sha": "7d3602a7bf6f2b012b1d52654ef9ac039d51bf06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d3602a7bf6f2b012b1d52654ef9ac039d51bf06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9745b1fc52efb22f6be501db9282d8202e290066", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9745b1fc52efb22f6be501db9282d8202e290066", "html_url": "https://github.com/rust-lang/rust/commit/9745b1fc52efb22f6be501db9282d8202e290066", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9745b1fc52efb22f6be501db9282d8202e290066/comments", "author": {"login": "Thomasdezeeuw", "id": 3159064, "node_id": "MDQ6VXNlcjMxNTkwNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3159064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thomasdezeeuw", "html_url": "https://github.com/Thomasdezeeuw", "followers_url": "https://api.github.com/users/Thomasdezeeuw/followers", "following_url": "https://api.github.com/users/Thomasdezeeuw/following{/other_user}", "gists_url": "https://api.github.com/users/Thomasdezeeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thomasdezeeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thomasdezeeuw/subscriptions", "organizations_url": "https://api.github.com/users/Thomasdezeeuw/orgs", "repos_url": "https://api.github.com/users/Thomasdezeeuw/repos", "events_url": "https://api.github.com/users/Thomasdezeeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/Thomasdezeeuw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Thomasdezeeuw", "id": 3159064, "node_id": "MDQ6VXNlcjMxNTkwNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3159064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thomasdezeeuw", "html_url": "https://github.com/Thomasdezeeuw", "followers_url": "https://api.github.com/users/Thomasdezeeuw/followers", "following_url": "https://api.github.com/users/Thomasdezeeuw/following{/other_user}", "gists_url": "https://api.github.com/users/Thomasdezeeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thomasdezeeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thomasdezeeuw/subscriptions", "organizations_url": "https://api.github.com/users/Thomasdezeeuw/orgs", "repos_url": "https://api.github.com/users/Thomasdezeeuw/repos", "events_url": "https://api.github.com/users/Thomasdezeeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/Thomasdezeeuw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33a49993b440ab56cd425d8d4137d5fe17dcaae5", "url": "https://api.github.com/repos/rust-lang/rust/commits/33a49993b440ab56cd425d8d4137d5fe17dcaae5", "html_url": "https://github.com/rust-lang/rust/commit/33a49993b440ab56cd425d8d4137d5fe17dcaae5"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "68ce7e13e268745c1e9af7287aa81609c661e2d1", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9745b1fc52efb22f6be501db9282d8202e290066/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9745b1fc52efb22f6be501db9282d8202e290066/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=9745b1fc52efb22f6be501db9282d8202e290066", "patch": "@@ -1388,19 +1388,21 @@ pub trait Write {\n     ///\n     /// If the buffer contains no data, this will never call [`write_vectored`].\n     ///\n+    /// [`write_vectored`]: #tymethod.write_vectored\n+    /// [`ErrorKind::Interrupted`]: ../../std/io/enum.ErrorKind.html#variant.Interrupted\n+    ///\n     /// # Notes\n     ///\n     /// Different to `io::Write::write_vectored` this takes a *mutable*\n     /// reference to a slice of `IoSlice`s, not a non-mutable reference, because\n     /// we need to modify the slice to keep track of the bytes already written.\n     ///\n-    /// Once this function returns the contents of `bufs` is undefined, not\n-    /// undefined as in memory unsafe but we don't know what the contents of\n-    /// `bufs` will be as that depends on how many writes we needed to do. We\n-    /// advice to see this function as taking ownership of `bufs` and don't use\n-    /// the variable after the future returns. The underlying buffers, to which\n-    /// `IoSlice` points (not the `IoSlice` itself), are unchanged and can be\n-    /// reused.\n+    /// Once this function returns the contents of `bufs` is unspecified, as we\n+    /// don't know what the contents of `bufs` will be as that depends on how\n+    /// many writes we needed to do. We advice to see this function as taking\n+    /// ownership of `bufs` and don't use the variable after the future returns.\n+    /// The underlying buffers, to which `IoSlice` points (not the `IoSlice`\n+    /// itself), are unchanged and can be reused.\n     ///\n     /// # Examples\n     ///"}]}