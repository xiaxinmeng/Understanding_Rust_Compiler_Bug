{"sha": "cc60e210767f0110c5c1910bdf3c47633aae62bf", "node_id": "C_kwDOAAsO6NoAKGNjNjBlMjEwNzY3ZjAxMTBjNWMxOTEwYmRmM2M0NzYzM2FhZTYyYmY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-16T23:19:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-16T23:19:34Z"}, "message": "Rollup merge of #107489 - compiler-errors:non_lifetime_binders, r=cjgillot\n\nImplement partial support for non-lifetime binders\n\nThis implements support for non-lifetime binders. It's pretty useless currently, but I wanted to put this up so the implementation can be discussed.\n\nSpecifically, this piggybacks off of the late-bound lifetime collection code in `rustc_hir_typeck::collect::lifetimes`. This seems like a necessary step given the fact we don't resolve late-bound regions until this point, and binders are sometimes merged.\n\nQ: I'm not sure if I should go along this route, or try to modify the earlier nameres code to compute the right bound var indices for type and const binders eagerly... If so, I'll need to rename all these queries to something more appropriate (I've done this for `resolve_lifetime::Region` -> `resolve_lifetime::ResolvedArg`)\n\ncc rust-lang/types-team#81\n\nr? `@ghost`", "tree": {"sha": "aee97585979ac1b0a2779856ba396abe8023f1d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aee97585979ac1b0a2779856ba396abe8023f1d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc60e210767f0110c5c1910bdf3c47633aae62bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc60e210767f0110c5c1910bdf3c47633aae62bf", "html_url": "https://github.com/rust-lang/rust/commit/cc60e210767f0110c5c1910bdf3c47633aae62bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc60e210767f0110c5c1910bdf3c47633aae62bf/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd6534ae878b7361b08c29d994d6767027ebfae8", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd6534ae878b7361b08c29d994d6767027ebfae8", "html_url": "https://github.com/rust-lang/rust/commit/dd6534ae878b7361b08c29d994d6767027ebfae8"}, {"sha": "27a476839f9fbedbecddf2f42bf40a94c4558ef1", "url": "https://api.github.com/repos/rust-lang/rust/commits/27a476839f9fbedbecddf2f42bf40a94c4558ef1", "html_url": "https://github.com/rust-lang/rust/commit/27a476839f9fbedbecddf2f42bf40a94c4558ef1"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "fc550936165e63e21fadaf8a66f30d67549e31f1", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc60e210767f0110c5c1910bdf3c47633aae62bf/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc60e210767f0110c5c1910bdf3c47633aae62bf/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=cc60e210767f0110c5c1910bdf3c47633aae62bf", "patch": "@@ -505,13 +505,13 @@ fn check_mut_from_ref<'tcx>(cx: &LateContext<'tcx>, sig: &FnSig<'_>, body: Optio\n     if let FnRetTy::Return(ty) = sig.decl.output\n         && let Some((out, Mutability::Mut, _)) = get_ref_lm(ty)\n     {\n-        let out_region = cx.tcx.named_region(out.hir_id);\n+        let out_region = cx.tcx.named_bound_var(out.hir_id);\n         let args: Option<Vec<_>> = sig\n             .decl\n             .inputs\n             .iter()\n             .filter_map(get_ref_lm)\n-            .filter(|&(lt, _, _)| cx.tcx.named_region(lt.hir_id) == out_region)\n+            .filter(|&(lt, _, _)| cx.tcx.named_bound_var(lt.hir_id) == out_region)\n             .map(|(_, mutability, span)| (mutability == Mutability::Not).then_some(span))\n             .collect();\n         if let Some(args) = args"}]}