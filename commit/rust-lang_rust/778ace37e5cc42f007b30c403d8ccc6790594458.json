{"sha": "778ace37e5cc42f007b30c403d8ccc6790594458", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3OGFjZTM3ZTVjYzQyZjAwN2IzMGM0MDNkOGNjYzY3OTA1OTQ0NTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-10-15T17:57:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-10-15T17:57:10Z"}, "message": "Auto merge of #4671 - flip1995:ice-4671, r=phansch\n\nFix ICE in `use_self` lint\n\nThe ICE is produced by building this span:\nhttps://github.com/rust-lang/rust-clippy/blob/55e7818a06c8d83bead9c81e10e73ba33fb20890/clippy_lints/src/use_self.rs#L55-L60\n\n`span` can start in the file the macro is defined in and end where the macro is called.\n\nchangelog: Fix ICE in `use_self` lint", "tree": {"sha": "8a499aaea589cd4be9b70b5560daf859c4ed24ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a499aaea589cd4be9b70b5560daf859c4ed24ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/778ace37e5cc42f007b30c403d8ccc6790594458", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/778ace37e5cc42f007b30c403d8ccc6790594458", "html_url": "https://github.com/rust-lang/rust/commit/778ace37e5cc42f007b30c403d8ccc6790594458", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/778ace37e5cc42f007b30c403d8ccc6790594458/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55e7818a06c8d83bead9c81e10e73ba33fb20890", "url": "https://api.github.com/repos/rust-lang/rust/commits/55e7818a06c8d83bead9c81e10e73ba33fb20890", "html_url": "https://github.com/rust-lang/rust/commit/55e7818a06c8d83bead9c81e10e73ba33fb20890"}, {"sha": "2f108079da42364273dc288aca6eee2d4cf98c4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f108079da42364273dc288aca6eee2d4cf98c4e", "html_url": "https://github.com/rust-lang/rust/commit/2f108079da42364273dc288aca6eee2d4cf98c4e"}], "stats": {"total": 55, "additions": 48, "deletions": 7}, "files": [{"sha": "13ffb09a68618075c5d59b51ff1d387e8f3d61fb", "filename": ".travis.yml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/778ace37e5cc42f007b30c403d8ccc6790594458/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/778ace37e5cc42f007b30c403d8ccc6790594458/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=778ace37e5cc42f007b30c403d8ccc6790594458", "patch": "@@ -56,14 +56,14 @@ matrix:\n       if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-lang-nursery/chalk\n       if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-    # - env: INTEGRATION=rust-lang/rls\n-    #   if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n+    - env: INTEGRATION=rust-lang/rls\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=Geal/nom\n       if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-lang/rustfmt\n       if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-    # - env: INTEGRATION=hyperium/hyper\n-    #   if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n+    - env: INTEGRATION=hyperium/hyper\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=bluss/rust-itertools\n       if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=serde-rs/serde\n@@ -72,8 +72,8 @@ matrix:\n       if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-random/rand\n       if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-    # - env: INTEGRATION=rust-lang-nursery/futures-rs\n-    #   if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n+    - env: INTEGRATION=rust-lang-nursery/futures-rs\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=Marwes/combine\n       if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-lang-nursery/failure"}, {"sha": "35e154aeaee29750eb22631ba91f5a82c82730e5", "filename": "clippy_lints/src/use_self.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/778ace37e5cc42f007b30c403d8ccc6790594458/clippy_lints%2Fsrc%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778ace37e5cc42f007b30c403d8ccc6790594458/clippy_lints%2Fsrc%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuse_self.rs?ref=778ace37e5cc42f007b30c403d8ccc6790594458", "patch": "@@ -10,7 +10,7 @@ use rustc::{declare_lint_pass, declare_tool_lint};\n use rustc_errors::Applicability;\n use syntax_pos::symbol::kw;\n \n-use crate::utils::span_lint_and_sugg;\n+use crate::utils::{differing_macro_contexts, span_lint_and_sugg};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for unnecessary repetition of structure name when a\n@@ -56,6 +56,11 @@ fn span_use_self_lint(cx: &LateContext<'_, '_>, path: &Path, last_segment: Optio\n \n     // Path segments only include actual path, no methods or fields.\n     let last_path_span = last_segment.ident.span;\n+\n+    if differing_macro_contexts(path.span, last_path_span) {\n+        return;\n+    }\n+\n     // Only take path up to the end of last_path_span.\n     let span = path.span.with_hi(last_path_span.hi());\n "}, {"sha": "a8a85b4baefb728a4cd663ee47c98bceb02aea53", "filename": "tests/ui/auxiliary/use_self_macro.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/778ace37e5cc42f007b30c403d8ccc6790594458/tests%2Fui%2Fauxiliary%2Fuse_self_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778ace37e5cc42f007b30c403d8ccc6790594458/tests%2Fui%2Fauxiliary%2Fuse_self_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fuse_self_macro.rs?ref=778ace37e5cc42f007b30c403d8ccc6790594458", "patch": "@@ -0,0 +1,15 @@\n+macro_rules! use_self {\n+    (\n+        impl $ty:ident {\n+            fn func(&$this:ident) {\n+                [fields($($field:ident)*)]\n+            }\n+        }\n+    ) => (\n+        impl  $ty {\n+            fn func(&$this) {\n+                let $ty { $($field),* } = $this;\n+            }\n+        }\n+    )\n+}"}, {"sha": "64e8e7769412d6b09c9c4eca759250bd744b6b6d", "filename": "tests/ui/ice-4671.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/778ace37e5cc42f007b30c403d8ccc6790594458/tests%2Fui%2Fice-4671.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778ace37e5cc42f007b30c403d8ccc6790594458/tests%2Fui%2Fice-4671.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fice-4671.rs?ref=778ace37e5cc42f007b30c403d8ccc6790594458", "patch": "@@ -0,0 +1,21 @@\n+#![warn(clippy::use_self)]\n+\n+#[macro_use]\n+#[path = \"auxiliary/use_self_macro.rs\"]\n+mod use_self_macro;\n+\n+struct Foo {\n+    a: u32,\n+}\n+\n+use_self! {\n+    impl Foo {\n+        fn func(&self) {\n+            [fields(\n+                a\n+            )]\n+        }\n+    }\n+}\n+\n+fn main() {}"}]}