{"sha": "58190ccb634ae7931fd6689e1a2c3b5382843ec9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4MTkwY2NiNjM0YWU3OTMxZmQ2Njg5ZTFhMmMzYjUzODI4NDNlYzk=", "commit": {"author": {"name": "angelsl", "email": "hidingfromhidden@gmail.com", "date": "2016-10-03T15:49:19Z"}, "committer": {"name": "angelsl", "email": "hidingfromhidden@gmail.com", "date": "2016-10-04T16:59:13Z"}, "message": "reference: mention `move` keyword for lambdas", "tree": {"sha": "6d5c54dd2e78e1bb5d4388014844a563cf5169d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d5c54dd2e78e1bb5d4388014844a563cf5169d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58190ccb634ae7931fd6689e1a2c3b5382843ec9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58190ccb634ae7931fd6689e1a2c3b5382843ec9", "html_url": "https://github.com/rust-lang/rust/commit/58190ccb634ae7931fd6689e1a2c3b5382843ec9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58190ccb634ae7931fd6689e1a2c3b5382843ec9/comments", "author": {"login": "angelsl", "id": 235432, "node_id": "MDQ6VXNlcjIzNTQzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/235432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/angelsl", "html_url": "https://github.com/angelsl", "followers_url": "https://api.github.com/users/angelsl/followers", "following_url": "https://api.github.com/users/angelsl/following{/other_user}", "gists_url": "https://api.github.com/users/angelsl/gists{/gist_id}", "starred_url": "https://api.github.com/users/angelsl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/angelsl/subscriptions", "organizations_url": "https://api.github.com/users/angelsl/orgs", "repos_url": "https://api.github.com/users/angelsl/repos", "events_url": "https://api.github.com/users/angelsl/events{/privacy}", "received_events_url": "https://api.github.com/users/angelsl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "angelsl", "id": 235432, "node_id": "MDQ6VXNlcjIzNTQzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/235432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/angelsl", "html_url": "https://github.com/angelsl", "followers_url": "https://api.github.com/users/angelsl/followers", "following_url": "https://api.github.com/users/angelsl/following{/other_user}", "gists_url": "https://api.github.com/users/angelsl/gists{/gist_id}", "starred_url": "https://api.github.com/users/angelsl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/angelsl/subscriptions", "organizations_url": "https://api.github.com/users/angelsl/orgs", "repos_url": "https://api.github.com/users/angelsl/repos", "events_url": "https://api.github.com/users/angelsl/events{/privacy}", "received_events_url": "https://api.github.com/users/angelsl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75df685d28947ea7d2422a24f14aa1254da1aeb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/75df685d28947ea7d2422a24f14aa1254da1aeb4", "html_url": "https://github.com/rust-lang/rust/commit/75df685d28947ea7d2422a24f14aa1254da1aeb4"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "b57104fc6f5d9e80ae284588201169903df5d7d2", "filename": "src/doc/reference.md", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/58190ccb634ae7931fd6689e1a2c3b5382843ec9/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/58190ccb634ae7931fd6689e1a2c3b5382843ec9/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=58190ccb634ae7931fd6689e1a2c3b5382843ec9", "patch": "@@ -3110,10 +3110,12 @@ the lambda expression captures its environment by reference, effectively\n borrowing pointers to all outer variables mentioned inside the function.\n Alternately, the compiler may infer that a lambda expression should copy or\n move values (depending on their type) from the environment into the lambda\n-expression's captured environment.\n+expression's captured environment. A lambda can be forced to capture its\n+environment by moving values by prefixing it with the `move` keyword.\n \n In this example, we define a function `ten_times` that takes a higher-order\n-function argument, and we then call it with a lambda expression as an argument:\n+function argument, and we then call it with a lambda expression as an argument,\n+followed by a lambda expression that moves values from its environment.\n \n ```\n fn ten_times<F>(f: F) where F: Fn(i32) {\n@@ -3123,6 +3125,9 @@ fn ten_times<F>(f: F) where F: Fn(i32) {\n }\n \n ten_times(|j| println!(\"hello, {}\", j));\n+\n+let word = \"konnichiwa\".to_owned();\n+ten_times(move |j| println!(\"{}, {}\", word, j));\n ```\n \n ### Infinite loops"}]}