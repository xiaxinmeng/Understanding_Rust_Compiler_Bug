{"sha": "0c4a01af392d3c7b6206ae9726ac481a87ef1cdc", "node_id": "C_kwDOAAsO6NoAKDBjNGEwMWFmMzkyZDNjN2I2MjA2YWU5NzI2YWM0ODFhODdlZjFjZGM", "commit": {"author": {"name": "Daniil Belov", "email": "70999565+BelovDV@users.noreply.github.com", "date": "2022-09-21T10:59:03Z"}, "committer": {"name": "Daniil Belov", "email": "70999565+BelovDV@users.noreply.github.com", "date": "2022-10-26T08:18:14Z"}, "message": "check lld version to choose correct flag for tests", "tree": {"sha": "f1adcfff8951d383e6faba93bdb76a9d2e35473a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1adcfff8951d383e6faba93bdb76a9d2e35473a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c4a01af392d3c7b6206ae9726ac481a87ef1cdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c4a01af392d3c7b6206ae9726ac481a87ef1cdc", "html_url": "https://github.com/rust-lang/rust/commit/0c4a01af392d3c7b6206ae9726ac481a87ef1cdc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c4a01af392d3c7b6206ae9726ac481a87ef1cdc/comments", "author": {"login": "belovdv", "id": 70999565, "node_id": "MDQ6VXNlcjcwOTk5NTY1", "avatar_url": "https://avatars.githubusercontent.com/u/70999565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/belovdv", "html_url": "https://github.com/belovdv", "followers_url": "https://api.github.com/users/belovdv/followers", "following_url": "https://api.github.com/users/belovdv/following{/other_user}", "gists_url": "https://api.github.com/users/belovdv/gists{/gist_id}", "starred_url": "https://api.github.com/users/belovdv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/belovdv/subscriptions", "organizations_url": "https://api.github.com/users/belovdv/orgs", "repos_url": "https://api.github.com/users/belovdv/repos", "events_url": "https://api.github.com/users/belovdv/events{/privacy}", "received_events_url": "https://api.github.com/users/belovdv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "belovdv", "id": 70999565, "node_id": "MDQ6VXNlcjcwOTk5NTY1", "avatar_url": "https://avatars.githubusercontent.com/u/70999565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/belovdv", "html_url": "https://github.com/belovdv", "followers_url": "https://api.github.com/users/belovdv/followers", "following_url": "https://api.github.com/users/belovdv/following{/other_user}", "gists_url": "https://api.github.com/users/belovdv/gists{/gist_id}", "starred_url": "https://api.github.com/users/belovdv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/belovdv/subscriptions", "organizations_url": "https://api.github.com/users/belovdv/orgs", "repos_url": "https://api.github.com/users/belovdv/repos", "events_url": "https://api.github.com/users/belovdv/events{/privacy}", "received_events_url": "https://api.github.com/users/belovdv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5605ed85363345f3def5da6b1ead2ac0b803bfe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5605ed85363345f3def5da6b1ead2ac0b803bfe7", "html_url": "https://github.com/rust-lang/rust/commit/5605ed85363345f3def5da6b1ead2ac0b803bfe7"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "23828f4758d67db275cce6d942ecb6da11d962e9", "filename": "src/bootstrap/bin/rustdoc.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0c4a01af392d3c7b6206ae9726ac481a87ef1cdc/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c4a01af392d3c7b6206ae9726ac481a87ef1cdc/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustdoc.rs?ref=0c4a01af392d3c7b6206ae9726ac481a87ef1cdc", "patch": "@@ -55,13 +55,9 @@ fn main() {\n         arg.push(&linker);\n         cmd.arg(arg);\n     }\n-    if env::var_os(\"RUSTDOC_FUSE_LD_LLD\").is_some() {\n+    if let Ok(no_threads) = env::var(\"RUSTDOC_LLD_NO_THREADS\") {\n         cmd.arg(\"-Clink-arg=-fuse-ld=lld\");\n-        if cfg!(windows) {\n-            cmd.arg(\"-Clink-arg=-Wl,/threads:1\");\n-        } else {\n-            cmd.arg(\"-Clink-arg=-Wl,--threads=1\");\n-        }\n+        cmd.arg(format!(\"-Clink-arg=-Wl,{}\", no_threads));\n     }\n     // Cargo doesn't pass RUSTDOCFLAGS to proc_macros:\n     // https://github.com/rust-lang/cargo/issues/4423"}, {"sha": "f5def8ba8341f58b817afaedb9828e75a6ad0ff7", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0c4a01af392d3c7b6206ae9726ac481a87ef1cdc/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c4a01af392d3c7b6206ae9726ac481a87ef1cdc/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=0c4a01af392d3c7b6206ae9726ac481a87ef1cdc", "patch": "@@ -1152,8 +1152,8 @@ impl Build {\n                 options[0] = Some(\"-Clink-arg=-fuse-ld=lld\".to_string());\n             }\n \n-            let threads = if target.contains(\"windows\") { \"/threads:1\" } else { \"--threads=1\" };\n-            options[1] = Some(format!(\"-Clink-arg=-Wl,{}\", threads));\n+            let no_threads = util::lld_flag_no_threads(target.contains(\"windows\"));\n+            options[1] = Some(format!(\"-Clink-arg=-Wl,{}\", no_threads));\n         }\n \n         IntoIterator::into_iter(options).flatten()"}, {"sha": "f336f0496a14da5490a0c0e1af11e1c6cdc134d6", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0c4a01af392d3c7b6206ae9726ac481a87ef1cdc/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c4a01af392d3c7b6206ae9726ac481a87ef1cdc/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=0c4a01af392d3c7b6206ae9726ac481a87ef1cdc", "patch": "@@ -727,7 +727,10 @@ impl Step for RustdocTheme {\n             cmd.env(\"RUSTDOC_LINKER\", linker);\n         }\n         if builder.is_fuse_ld_lld(self.compiler.host) {\n-            cmd.env(\"RUSTDOC_FUSE_LD_LLD\", \"1\");\n+            cmd.env(\n+                \"RUSTDOC_LLD_NO_THREADS\",\n+                util::lld_flag_no_threads(self.compiler.host.contains(\"windows\")),\n+            );\n         }\n         try_run(builder, &mut cmd);\n     }"}, {"sha": "20c3801f0a50222cbcc792f98a2786a993d7b5c6", "filename": "src/bootstrap/util.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0c4a01af392d3c7b6206ae9726ac481a87ef1cdc/src%2Fbootstrap%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c4a01af392d3c7b6206ae9726ac481a87ef1cdc/src%2Fbootstrap%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Futil.rs?ref=0c4a01af392d3c7b6206ae9726ac481a87ef1cdc", "patch": "@@ -13,6 +13,7 @@ use std::time::{Instant, SystemTime, UNIX_EPOCH};\n \n use crate::builder::Builder;\n use crate::config::{Config, TargetSelection};\n+use crate::OnceCell;\n \n /// A helper macro to `unwrap` a result except also print out details like:\n ///\n@@ -607,3 +608,16 @@ pub fn get_clang_cl_resource_dir(clang_cl_path: &str) -> PathBuf {\n     let clang_rt_dir = clang_rt_builtins.parent().expect(\"The clang lib folder should exist\");\n     clang_rt_dir.to_path_buf()\n }\n+\n+pub fn lld_flag_no_threads(is_windows: bool) -> &'static str {\n+    static LLD_NO_THREADS: OnceCell<(&'static str, &'static str)> = OnceCell::new();\n+    let (windows, other) = LLD_NO_THREADS.get_or_init(|| {\n+        let out = output(Command::new(\"lld\").arg(\"-flavor\").arg(\"ld\").arg(\"--version\"));\n+        let newer = match (out.find(char::is_numeric), out.find('.')) {\n+            (Some(b), Some(e)) => out.as_str()[b..e].parse::<i32>().ok().unwrap_or(14) > 10,\n+            _ => true,\n+        };\n+        if newer { (\"/threads:1\", \"--threads=1\") } else { (\"/no-threads\", \"--no-threads\") }\n+    });\n+    if is_windows { windows } else { other }\n+}"}]}