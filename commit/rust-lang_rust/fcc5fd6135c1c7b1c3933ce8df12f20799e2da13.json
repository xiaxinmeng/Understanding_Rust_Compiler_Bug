{"sha": "fcc5fd6135c1c7b1c3933ce8df12f20799e2da13", "node_id": "C_kwDOAAsO6NoAKGZjYzVmZDYxMzVjMWM3YjFjMzkzM2NlOGRmMTJmMjA3OTllMmRhMTM", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-11-30T03:02:17Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-12-20T21:37:14Z"}, "message": "const_eval machine: use original instance for replaced MIR bodies", "tree": {"sha": "a5c60511a616ddfeeb7e381a04ea048c8a86e8ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5c60511a616ddfeeb7e381a04ea048c8a86e8ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcc5fd6135c1c7b1c3933ce8df12f20799e2da13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcc5fd6135c1c7b1c3933ce8df12f20799e2da13", "html_url": "https://github.com/rust-lang/rust/commit/fcc5fd6135c1c7b1c3933ce8df12f20799e2da13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcc5fd6135c1c7b1c3933ce8df12f20799e2da13/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11fb22d83aafd3f3ba66d54ff5ecdbfe5069cb83", "url": "https://api.github.com/repos/rust-lang/rust/commits/11fb22d83aafd3f3ba66d54ff5ecdbfe5069cb83", "html_url": "https://github.com/rust-lang/rust/commit/11fb22d83aafd3f3ba66d54ff5ecdbfe5069cb83"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "fef0e00e507ebc698f7bd27ea0a85c0c6d0867d4", "filename": "compiler/rustc_const_eval/src/const_eval/machine.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fcc5fd6135c1c7b1c3933ce8df12f20799e2da13/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcc5fd6135c1c7b1c3933ce8df12f20799e2da13/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmachine.rs?ref=fcc5fd6135c1c7b1c3933ce8df12f20799e2da13", "patch": "@@ -279,7 +279,17 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter<'mir,\n \n             if let Some(new_instance) = ecx.hook_special_const_fn(instance, args)? {\n                 // We call another const fn instead.\n-                return Self::find_mir_or_eval_fn(ecx, new_instance, _abi, args, _ret, _unwind);\n+                // However, we return the *original* instance to make backtraces work out\n+                // (and we hope this does not confuse the FnAbi checks too much).\n+                return Ok(Self::find_mir_or_eval_fn(\n+                    ecx,\n+                    new_instance,\n+                    _abi,\n+                    args,\n+                    _ret,\n+                    _unwind,\n+                )?\n+                .map(|(body, _instance)| (body, instance)));\n             }\n         }\n         // This is a const fn. Call it."}]}