{"sha": "681690db4e41505401a0ebbf3d1e4bec69ead702", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4MTY5MGRiNGU0MTUwNTQwMWEwZWJiZjNkMWU0YmVjNjllYWQ3MDI=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-11-26T16:00:30Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-12-02T14:10:11Z"}, "message": "Update miri_unleashed tests", "tree": {"sha": "45b4cd80a4412e53fece7df5b7ed075d876363a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45b4cd80a4412e53fece7df5b7ed075d876363a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/681690db4e41505401a0ebbf3d1e4bec69ead702", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/681690db4e41505401a0ebbf3d1e4bec69ead702", "html_url": "https://github.com/rust-lang/rust/commit/681690db4e41505401a0ebbf3d1e4bec69ead702", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/681690db4e41505401a0ebbf3d1e4bec69ead702/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "683f5c9c23a07fc6434b3e15207aa12144c90420", "url": "https://api.github.com/repos/rust-lang/rust/commits/683f5c9c23a07fc6434b3e15207aa12144c90420", "html_url": "https://github.com/rust-lang/rust/commit/683f5c9c23a07fc6434b3e15207aa12144c90420"}], "stats": {"total": 59, "additions": 6, "deletions": 53}, "files": [{"sha": "cf5e6d600258165596c564e98713205367e2852b", "filename": "src/test/ui/consts/miri_unleashed/mutable_const.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/681690db4e41505401a0ebbf3d1e4bec69ead702/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/681690db4e41505401a0ebbf3d1e4bec69ead702/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.rs?ref=681690db4e41505401a0ebbf3d1e4bec69ead702", "patch": "@@ -12,9 +12,7 @@ const MUTABLE_BEHIND_RAW: *mut i32 = &UnsafeCell::new(42) as *const _ as *mut _;\n const MUTATING_BEHIND_RAW: () = {\n     // Test that `MUTABLE_BEHIND_RAW` is actually immutable, by doing this at const time.\n     unsafe {\n-        *MUTABLE_BEHIND_RAW = 99 //~ WARN skipping const checks\n-        //~^ ERROR any use of this value will cause an error\n-        //~^^ tried to modify constant memory\n+        *MUTABLE_BEHIND_RAW = 99 //~ ERROR constant contains unimplemented expression type\n     }\n };\n "}, {"sha": "1a18063625be31ad3a912d9bb70c75006eaec2da", "filename": "src/test/ui/consts/miri_unleashed/mutable_const.stderr", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/681690db4e41505401a0ebbf3d1e4bec69ead702/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/681690db4e41505401a0ebbf3d1e4bec69ead702/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.stderr?ref=681690db4e41505401a0ebbf3d1e4bec69ead702", "patch": "@@ -4,30 +4,12 @@ warning: skipping const checks\n LL | const MUTABLE_BEHIND_RAW: *mut i32 = &UnsafeCell::new(42) as *const _ as *mut _;\n    |                                      ^^^^^^^^^^^^^^^^^^^^\n \n-warning: skipping const checks\n+error[E0019]: constant contains unimplemented expression type\n   --> $DIR/mutable_const.rs:15:9\n    |\n LL |         *MUTABLE_BEHIND_RAW = 99\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: any use of this value will cause an error\n-  --> $DIR/mutable_const.rs:15:9\n-   |\n-LL | / const MUTATING_BEHIND_RAW: () = {\n-LL | |     // Test that `MUTABLE_BEHIND_RAW` is actually immutable, by doing this at const time.\n-LL | |     unsafe {\n-LL | |         *MUTABLE_BEHIND_RAW = 99\n-   | |         ^^^^^^^^^^^^^^^^^^^^^^^^ tried to modify constant memory\n-...  |\n-LL | |     }\n-LL | | };\n-   | |__-\n-   |\n-note: lint level defined here\n-  --> $DIR/mutable_const.rs:4:9\n-   |\n-LL | #![deny(const_err)]\n-   |         ^^^^^^^^^\n-\n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0019`."}, {"sha": "d95833e3071dfa89f0aaacb4728c2738eac5a29b", "filename": "src/test/ui/consts/miri_unleashed/mutable_references.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/681690db4e41505401a0ebbf3d1e4bec69ead702/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references.rs", "raw_url": "https://github.com/rust-lang/rust/raw/681690db4e41505401a0ebbf3d1e4bec69ead702/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references.rs?ref=681690db4e41505401a0ebbf3d1e4bec69ead702", "patch": "@@ -1,20 +1,18 @@\n // compile-flags: -Zunleash-the-miri-inside-of-you\n+#![feature(const_mut_refs)]\n #![allow(const_err)]\n \n use std::cell::UnsafeCell;\n \n // a test demonstrating what things we could allow with a smarter const qualification\n \n static FOO: &&mut u32 = &&mut 42;\n-//~^ WARN: skipping const checks\n \n static BAR: &mut () = &mut ();\n-//~^ WARN: skipping const checks\n \n struct Foo<T>(T);\n \n static BOO: &mut Foo<()> = &mut Foo(());\n-//~^ WARN: skipping const checks\n \n struct Meh {\n     x: &'static UnsafeCell<i32>,\n@@ -28,7 +26,6 @@ static MEH: Meh = Meh {\n };\n \n static OH_YES: &mut i32 = &mut 42;\n-//~^ WARN: skipping const checks\n \n fn main() {\n     unsafe {"}, {"sha": "ce1f5f38dd99afc37bc0824e104a64eb895d2115", "filename": "src/test/ui/consts/miri_unleashed/mutable_references.stderr", "status": "modified", "additions": 2, "deletions": 26, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/681690db4e41505401a0ebbf3d1e4bec69ead702/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/681690db4e41505401a0ebbf3d1e4bec69ead702/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references.stderr?ref=681690db4e41505401a0ebbf3d1e4bec69ead702", "patch": "@@ -1,35 +1,11 @@\n warning: skipping const checks\n-  --> $DIR/mutable_references.rs:8:26\n-   |\n-LL | static FOO: &&mut u32 = &&mut 42;\n-   |                          ^^^^^^^\n-\n-warning: skipping const checks\n-  --> $DIR/mutable_references.rs:11:23\n-   |\n-LL | static BAR: &mut () = &mut ();\n-   |                       ^^^^^^^\n-\n-warning: skipping const checks\n-  --> $DIR/mutable_references.rs:16:28\n-   |\n-LL | static BOO: &mut Foo<()> = &mut Foo(());\n-   |                            ^^^^^^^^^^^^\n-\n-warning: skipping const checks\n-  --> $DIR/mutable_references.rs:26:8\n+  --> $DIR/mutable_references.rs:24:8\n    |\n LL |     x: &UnsafeCell::new(42),\n    |        ^^^^^^^^^^^^^^^^^^^^\n \n-warning: skipping const checks\n-  --> $DIR/mutable_references.rs:30:27\n-   |\n-LL | static OH_YES: &mut i32 = &mut 42;\n-   |                           ^^^^^^^\n-\n error[E0594]: cannot assign to `*OH_YES`, as `OH_YES` is an immutable static item\n-  --> $DIR/mutable_references.rs:37:5\n+  --> $DIR/mutable_references.rs:34:5\n    |\n LL |     *OH_YES = 99;\n    |     ^^^^^^^^^^^^ cannot assign"}]}