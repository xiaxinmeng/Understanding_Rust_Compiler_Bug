{"sha": "558bdf73c848eaccf3f274248981f56771c0d5ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1OGJkZjczYzg0OGVhY2NmM2YyNzQyNDg5ODFmNTY3NzFjMGQ1YWQ=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-04-24T18:45:02Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-04-24T18:45:02Z"}, "message": "simplify match", "tree": {"sha": "2e84d86869e8b0e32ad17046db5eb25af5c35418", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e84d86869e8b0e32ad17046db5eb25af5c35418"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/558bdf73c848eaccf3f274248981f56771c0d5ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/558bdf73c848eaccf3f274248981f56771c0d5ad", "html_url": "https://github.com/rust-lang/rust/commit/558bdf73c848eaccf3f274248981f56771c0d5ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/558bdf73c848eaccf3f274248981f56771c0d5ad/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f69bf6a12b9e6165ad3e4630d2b10776006b943f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f69bf6a12b9e6165ad3e4630d2b10776006b943f", "html_url": "https://github.com/rust-lang/rust/commit/f69bf6a12b9e6165ad3e4630d2b10776006b943f"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "e456ec5d624a4f4f5cb18f943234212693e38f3c", "filename": "crates/ra_ide_api/src/goto_type_definition.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/558bdf73c848eaccf3f274248981f56771c0d5ad/crates%2Fra_ide_api%2Fsrc%2Fgoto_type_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/558bdf73c848eaccf3f274248981f56771c0d5ad/crates%2Fra_ide_api%2Fsrc%2Fgoto_type_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fgoto_type_definition.rs?ref=558bdf73c848eaccf3f274248981f56771c0d5ad", "patch": "@@ -30,10 +30,7 @@ pub(crate) fn goto_type_definition(\n         return None;\n     };\n \n-    let adt_def = ty.autoderef(db).find_map(|ty| match ty.as_adt() {\n-        Some((adt_def, _)) => Some(adt_def),\n-        None => None,\n-    })?;\n+    let adt_def = ty.autoderef(db).find_map(|ty| ty.as_adt().map(|adt| adt.0))?;\n \n     let nav = NavigationTarget::from_adt_def(db, adt_def);\n     Some(RangeInfo::new(node.range(), vec![nav]))"}]}