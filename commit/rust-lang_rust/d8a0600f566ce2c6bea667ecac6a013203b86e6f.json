{"sha": "d8a0600f566ce2c6bea667ecac6a013203b86e6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4YTA2MDBmNTY2Y2UyYzZiZWE2NjdlY2FjNmEwMTMyMDNiODZlNmY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-30T21:08:21Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-30T21:08:21Z"}, "message": "remove a dead parameter that everyone sets to None", "tree": {"sha": "1e669886783666f7647d5ae38347367e11e10dd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e669886783666f7647d5ae38347367e11e10dd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8a0600f566ce2c6bea667ecac6a013203b86e6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8a0600f566ce2c6bea667ecac6a013203b86e6f", "html_url": "https://github.com/rust-lang/rust/commit/d8a0600f566ce2c6bea667ecac6a013203b86e6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8a0600f566ce2c6bea667ecac6a013203b86e6f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1a583b3a257ee2c0ceabed54a2035577211ba30", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1a583b3a257ee2c0ceabed54a2035577211ba30", "html_url": "https://github.com/rust-lang/rust/commit/a1a583b3a257ee2c0ceabed54a2035577211ba30"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "f7e28cf8d8c2f2ebfbd7715e0d0182a73a38eef2", "filename": "src/librustc_mir/const_eval/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d8a0600f566ce2c6bea667ecac6a013203b86e6f/src%2Flibrustc_mir%2Fconst_eval%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8a0600f566ce2c6bea667ecac6a013203b86e6f/src%2Flibrustc_mir%2Fconst_eval%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Ferror.rs?ref=d8a0600f566ce2c6bea667ecac6a013203b86e6f", "patch": "@@ -55,6 +55,6 @@ pub fn error_to_const_error<'mir, 'tcx, M: Machine<'mir, 'tcx>>(\n     mut error: InterpErrorInfo<'tcx>,\n ) -> ConstEvalErr<'tcx> {\n     error.print_backtrace();\n-    let stacktrace = ecx.generate_stacktrace(None);\n+    let stacktrace = ecx.generate_stacktrace();\n     ConstEvalErr { error: error.kind, stacktrace, span: ecx.tcx.span }\n }"}, {"sha": "8f24fc451bc3f724af40b531b39e8907b7cf5f11", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d8a0600f566ce2c6bea667ecac6a013203b86e6f/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8a0600f566ce2c6bea667ecac6a013203b86e6f/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=d8a0600f566ce2c6bea667ecac6a013203b86e6f", "patch": "@@ -17,7 +17,7 @@ use rustc_middle::ty::layout::{self, Align, HasDataLayout, LayoutOf, Size, TyAnd\n use rustc_middle::ty::query::TyCtxtAt;\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n-use rustc_span::source_map::{Span, DUMMY_SP};\n+use rustc_span::source_map::DUMMY_SP;\n \n use super::{\n     Immediate, MPlaceTy, Machine, MemPlace, MemPlaceMeta, Memory, OpTy, Operand, Place, PlaceTy,\n@@ -853,7 +853,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         }\n     }\n \n-    pub fn generate_stacktrace(&self, explicit_span: Option<Span>) -> Vec<FrameInfo<'tcx>> {\n+    pub fn generate_stacktrace(&self) -> Vec<FrameInfo<'tcx>> {\n         let mut frames = Vec::new();\n         for frame in self.stack().iter().rev() {\n             let source_info = frame.current_source_info();\n@@ -867,7 +867,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n \n             frames.push(FrameInfo { span, instance: frame.instance, lint_root });\n         }\n-        trace!(\"generate stacktrace: {:#?}, {:?}\", frames, explicit_span);\n+        trace!(\"generate stacktrace: {:#?}\", frames);\n         frames\n     }\n }"}]}