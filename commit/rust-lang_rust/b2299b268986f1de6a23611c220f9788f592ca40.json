{"sha": "b2299b268986f1de6a23611c220f9788f592ca40", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyMjk5YjI2ODk4NmYxZGU2YTIzNjExYzIyMGY5Nzg4ZjU5MmNhNDA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-23T06:37:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-23T06:37:18Z"}, "message": "Rollup merge of #61057 - sfackler:revert-next-back, r=alexcrichton\n\nRevert \"Add implementations of last in terms of next_back on a bunch of DoubleEndedIterators.\"\n\nThis changed observable behavior for several iterator types.\n\nr? @alexcrichton", "tree": {"sha": "d4de4a48555d5bcc089845e0231e8a55bb6184c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4de4a48555d5bcc089845e0231e8a55bb6184c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2299b268986f1de6a23611c220f9788f592ca40", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc5j+eCRBK7hj4Ov3rIwAAdHIIAFWQnf8Ywo8hCZCF0r/Llm0I\nWy+ClkwTowPnejG0/VL3VlWArJKchQZjSOV8rs3OFt9fceE73ktLKTTL1yljuXJA\neUVRlf5ydI3EKEJYiNPx3vivHRPPoB/+eoLSB3F3XlZuea65Q3hWRXe7m7gKLzbg\nlkWuL/mg0DLBbARHpzn1mhVx7FktuS44xJzTq6OhYmX5yJ5yWc0hOXMKW5IVBNBs\nLCTV2vz9jIcDGgo+qj8zGkKWVFtlQWM5v8OkyYJCGXN/Oqp+5/+Y+qsSO2IJ33vH\nQgnb0jxCsFsO7giQNrQl6qpKGjH8xcW9LtmEDNbj45s/7zxK0lKRMjlCGV1YZ68=\n=+J/v\n-----END PGP SIGNATURE-----\n", "payload": "tree d4de4a48555d5bcc089845e0231e8a55bb6184c3\nparent 4ab593984c259c47365ef0aa07cf9ea9f884d900\nparent 8a22bc3b30e81568db25cf57aa9e7629bfa449c7\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1558593438 +0200\ncommitter GitHub <noreply@github.com> 1558593438 +0200\n\nRollup merge of #61057 - sfackler:revert-next-back, r=alexcrichton\n\nRevert \"Add implementations of last in terms of next_back on a bunch of DoubleEndedIterators.\"\n\nThis changed observable behavior for several iterator types.\n\nr? @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2299b268986f1de6a23611c220f9788f592ca40", "html_url": "https://github.com/rust-lang/rust/commit/b2299b268986f1de6a23611c220f9788f592ca40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2299b268986f1de6a23611c220f9788f592ca40/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ab593984c259c47365ef0aa07cf9ea9f884d900", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ab593984c259c47365ef0aa07cf9ea9f884d900", "html_url": "https://github.com/rust-lang/rust/commit/4ab593984c259c47365ef0aa07cf9ea9f884d900"}, {"sha": "8a22bc3b30e81568db25cf57aa9e7629bfa449c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a22bc3b30e81568db25cf57aa9e7629bfa449c7", "html_url": "https://github.com/rust-lang/rust/commit/8a22bc3b30e81568db25cf57aa9e7629bfa449c7"}], "stats": {"total": 159, "additions": 0, "deletions": 159}, "files": [{"sha": "c898f064fd09f4fff4bb0e396a4384fe06049b26", "filename": "src/liballoc/collections/binary_heap.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b2299b268986f1de6a23611c220f9788f592ca40/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2299b268986f1de6a23611c220f9788f592ca40/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs?ref=b2299b268986f1de6a23611c220f9788f592ca40", "patch": "@@ -1035,11 +1035,6 @@ impl<'a, T> Iterator for Iter<'a, T> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.iter.size_hint()\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<&'a T> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1095,11 +1090,6 @@ impl<T> Iterator for IntoIter<T> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.iter.size_hint()\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<T> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1146,11 +1136,6 @@ impl<T> Iterator for Drain<'_, T> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.iter.size_hint()\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<T> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"drain\", since = \"1.6.0\")]"}, {"sha": "6b079fc87cc78905f431a097a2aa8aaee7a33f3b", "filename": "src/liballoc/collections/btree/map.rs", "status": "modified", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/b2299b268986f1de6a23611c220f9788f592ca40/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2299b268986f1de6a23611c220f9788f592ca40/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs?ref=b2299b268986f1de6a23611c220f9788f592ca40", "patch": "@@ -1193,11 +1193,6 @@ impl<'a, K: 'a, V: 'a> Iterator for Iter<'a, K, V> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         (self.length, Some(self.length))\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<(&'a K, &'a V)> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"fused\", since = \"1.26.0\")]\n@@ -1258,11 +1253,6 @@ impl<'a, K: 'a, V: 'a> Iterator for IterMut<'a, K, V> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         (self.length, Some(self.length))\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<(&'a K, &'a mut V)> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1369,11 +1359,6 @@ impl<K, V> Iterator for IntoIter<K, V> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         (self.length, Some(self.length))\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<(K, V)> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1436,11 +1421,6 @@ impl<'a, K, V> Iterator for Keys<'a, K, V> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.inner.size_hint()\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<&'a K> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1478,11 +1458,6 @@ impl<'a, K, V> Iterator for Values<'a, K, V> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.inner.size_hint()\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<&'a V> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1520,11 +1495,6 @@ impl<'a, K, V> Iterator for Range<'a, K, V> {\n             unsafe { Some(self.next_unchecked()) }\n         }\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<(&'a K, &'a V)> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"map_values_mut\", since = \"1.10.0\")]\n@@ -1538,11 +1508,6 @@ impl<'a, K, V> Iterator for ValuesMut<'a, K, V> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.inner.size_hint()\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<&'a mut V> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"map_values_mut\", since = \"1.10.0\")]\n@@ -1661,11 +1626,6 @@ impl<'a, K, V> Iterator for RangeMut<'a, K, V> {\n             unsafe { Some(self.next_unchecked()) }\n         }\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<(&'a K, &'a mut V)> {\n-        self.next_back()\n-    }\n }\n \n impl<'a, K, V> RangeMut<'a, K, V> {"}, {"sha": "16a96ca19b82462b4a99f2e234f3e1c85b630e4f", "filename": "src/liballoc/collections/btree/set.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b2299b268986f1de6a23611c220f9788f592ca40/src%2Fliballoc%2Fcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2299b268986f1de6a23611c220f9788f592ca40/src%2Fliballoc%2Fcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fset.rs?ref=b2299b268986f1de6a23611c220f9788f592ca40", "patch": "@@ -1019,11 +1019,6 @@ impl<'a, T> Iterator for Iter<'a, T> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.iter.size_hint()\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<&'a T> {\n-        self.next_back()\n-    }\n }\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, T> DoubleEndedIterator for Iter<'a, T> {\n@@ -1049,11 +1044,6 @@ impl<T> Iterator for IntoIter<T> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.iter.size_hint()\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<T> {\n-        self.next_back()\n-    }\n }\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> DoubleEndedIterator for IntoIter<T> {\n@@ -1083,11 +1073,6 @@ impl<'a, T> Iterator for Range<'a, T> {\n     fn next(&mut self) -> Option<&'a T> {\n         self.iter.next().map(|(k, _)| k)\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<&'a T> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"btree_range\", since = \"1.17.0\")]"}, {"sha": "7f7722548f581df43deca22d09a91d2950158911", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b2299b268986f1de6a23611c220f9788f592ca40/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2299b268986f1de6a23611c220f9788f592ca40/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=b2299b268986f1de6a23611c220f9788f592ca40", "patch": "@@ -2385,10 +2385,6 @@ impl Iterator for Drain<'_> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.iter.size_hint()\n     }\n-    #[inline]\n-    fn last(mut self) -> Option<char> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"drain\", since = \"1.6.0\")]"}, {"sha": "073d3ab5937035a148053e8e6243a8c300903ab2", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b2299b268986f1de6a23611c220f9788f592ca40/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2299b268986f1de6a23611c220f9788f592ca40/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=b2299b268986f1de6a23611c220f9788f592ca40", "patch": "@@ -2395,11 +2395,6 @@ impl<T> Iterator for IntoIter<T> {\n     fn count(self) -> usize {\n         self.len()\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<T> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -2519,11 +2514,6 @@ impl<T> Iterator for Drain<'_, T> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.iter.size_hint()\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<T> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"drain\", since = \"1.6.0\")]\n@@ -2593,10 +2583,6 @@ impl<I: Iterator> Iterator for Splice<'_, I> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.drain.size_hint()\n     }\n-\n-    fn last(mut self) -> Option<Self::Item> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"vec_splice\", since = \"1.21.0\")]"}, {"sha": "c0ab364380fbd83d379fe22662e5d4eb20f80598", "filename": "src/libcore/ascii.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2299b268986f1de6a23611c220f9788f592ca40/src%2Flibcore%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2299b268986f1de6a23611c220f9788f592ca40/src%2Flibcore%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fascii.rs?ref=b2299b268986f1de6a23611c220f9788f592ca40", "patch": "@@ -117,8 +117,6 @@ impl Iterator for EscapeDefault {\n     type Item = u8;\n     fn next(&mut self) -> Option<u8> { self.range.next().map(|i| self.data[i]) }\n     fn size_hint(&self) -> (usize, Option<usize>) { self.range.size_hint() }\n-    #[inline]\n-    fn last(mut self) -> Option<u8> { self.next_back() }\n }\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl DoubleEndedIterator for EscapeDefault {"}, {"sha": "518442efe74172a3c35ed85a23c00ff979681d72", "filename": "src/libcore/iter/adapters/mod.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b2299b268986f1de6a23611c220f9788f592ca40/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2299b268986f1de6a23611c220f9788f592ca40/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs?ref=b2299b268986f1de6a23611c220f9788f592ca40", "patch": "@@ -73,11 +73,6 @@ impl<I> Iterator for Rev<I> where I: DoubleEndedIterator {\n     {\n         self.iter.position(predicate)\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<Self::Item> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "50d2ba0d3ef7fa06ee9c332bc59b4f5e3c96c3f8", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b2299b268986f1de6a23611c220f9788f592ca40/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2299b268986f1de6a23611c220f9788f592ca40/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=b2299b268986f1de6a23611c220f9788f592ca40", "patch": "@@ -3547,11 +3547,6 @@ impl<'a, T, P> Iterator for Split<'a, T, P> where P: FnMut(&T) -> bool {\n             (1, Some(self.v.len() + 1))\n         }\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<Self::Item> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -3650,11 +3645,6 @@ impl<'a, T, P> Iterator for SplitMut<'a, T, P> where P: FnMut(&T) -> bool {\n             (1, Some(self.v.len() + 1))\n         }\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<Self::Item> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -3720,11 +3710,6 @@ impl<'a, T, P> Iterator for RSplit<'a, T, P> where P: FnMut(&T) -> bool {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.inner.size_hint()\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<Self::Item> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"slice_rsplit\", since = \"1.27.0\")]\n@@ -3789,11 +3774,6 @@ impl<'a, T, P> Iterator for RSplitMut<'a, T, P> where P: FnMut(&T) -> bool {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.inner.size_hint()\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<Self::Item> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"slice_rsplit\", since = \"1.27.0\")]"}, {"sha": "ef4bd83cbc5a695997a044e9fdc0677a59fe7a19", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b2299b268986f1de6a23611c220f9788f592ca40/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2299b268986f1de6a23611c220f9788f592ca40/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=b2299b268986f1de6a23611c220f9788f592ca40", "patch": "@@ -1333,11 +1333,6 @@ impl<'a> Iterator for Lines<'a> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.0.size_hint()\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<Self::Item> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1384,11 +1379,6 @@ impl<'a> Iterator for LinesAny<'a> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.0.size_hint()\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<Self::Item> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -4231,11 +4221,6 @@ impl<'a> Iterator for SplitWhitespace<'a> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.inner.size_hint()\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<Self::Item> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"split_whitespace\", since = \"1.1.0\")]\n@@ -4262,11 +4247,6 @@ impl<'a> Iterator for SplitAsciiWhitespace<'a> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.inner.size_hint()\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<Self::Item> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"}, {"sha": "9058ea93d6de077d2717173df417931ac68c364e", "filename": "src/libstd/env.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b2299b268986f1de6a23611c220f9788f592ca40/src%2Flibstd%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2299b268986f1de6a23611c220f9788f592ca40/src%2Flibstd%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fenv.rs?ref=b2299b268986f1de6a23611c220f9788f592ca40", "patch": "@@ -746,10 +746,6 @@ impl Iterator for Args {\n         self.inner.next().map(|s| s.into_string().unwrap())\n     }\n     fn size_hint(&self) -> (usize, Option<usize>) { self.inner.size_hint() }\n-    #[inline]\n-    fn last(mut self) -> Option<String> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"env\", since = \"1.0.0\")]\n@@ -785,8 +781,6 @@ impl Iterator for ArgsOs {\n     type Item = OsString;\n     fn next(&mut self) -> Option<OsString> { self.inner.next() }\n     fn size_hint(&self) -> (usize, Option<usize>) { self.inner.size_hint() }\n-    #[inline]\n-    fn last(mut self) -> Option<OsString> { self.next_back() }\n }\n \n #[stable(feature = \"env\", since = \"1.0.0\")]"}, {"sha": "126bc3754dabcac134e18c713c3d967878439aa3", "filename": "src/libstd/path.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b2299b268986f1de6a23611c220f9788f592ca40/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2299b268986f1de6a23611c220f9788f592ca40/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=b2299b268986f1de6a23611c220f9788f592ca40", "patch": "@@ -888,11 +888,6 @@ impl<'a> Iterator for Iter<'a> {\n     fn next(&mut self) -> Option<&'a OsStr> {\n         self.inner.next().map(Component::as_os_str)\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<&'a OsStr> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -956,11 +951,6 @@ impl<'a> Iterator for Components<'a> {\n         }\n         None\n     }\n-\n-    #[inline]\n-    fn last(mut self) -> Option<Self::Item> {\n-        self.next_back()\n-    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "3b4de56f2c9b7602c3f5699a2a9fa00456ff3735", "filename": "src/libstd/sys/unix/args.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2299b268986f1de6a23611c220f9788f592ca40/src%2Flibstd%2Fsys%2Funix%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2299b268986f1de6a23611c220f9788f592ca40/src%2Flibstd%2Fsys%2Funix%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fargs.rs?ref=b2299b268986f1de6a23611c220f9788f592ca40", "patch": "@@ -35,8 +35,6 @@ impl Iterator for Args {\n     type Item = OsString;\n     fn next(&mut self) -> Option<OsString> { self.iter.next() }\n     fn size_hint(&self) -> (usize, Option<usize>) { self.iter.size_hint() }\n-    #[inline]\n-    fn last(mut self) -> Option<OsString> { self.next_back() }\n }\n \n impl ExactSizeIterator for Args {"}, {"sha": "b3c77b869956364326312711471bff4e66fa2556", "filename": "src/libstd/sys/wasm/args.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b2299b268986f1de6a23611c220f9788f592ca40/src%2Flibstd%2Fsys%2Fwasm%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2299b268986f1de6a23611c220f9788f592ca40/src%2Flibstd%2Fsys%2Fwasm%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasm%2Fargs.rs?ref=b2299b268986f1de6a23611c220f9788f592ca40", "patch": "@@ -37,10 +37,6 @@ impl Iterator for Args {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.iter.size_hint()\n     }\n-    #[inline]\n-    fn last(mut self) -> Option<OsString> {\n-        self.next_back()\n-    }\n }\n \n impl ExactSizeIterator for Args {"}, {"sha": "b04bb484eedb9499cf453c344749251be4fca405", "filename": "src/libstd/sys/windows/args.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2299b268986f1de6a23611c220f9788f592ca40/src%2Flibstd%2Fsys%2Fwindows%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2299b268986f1de6a23611c220f9788f592ca40/src%2Flibstd%2Fsys%2Fwindows%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fargs.rs?ref=b2299b268986f1de6a23611c220f9788f592ca40", "patch": "@@ -181,8 +181,6 @@ impl Iterator for Args {\n     type Item = OsString;\n     fn next(&mut self) -> Option<OsString> { self.parsed_args_list.next() }\n     fn size_hint(&self) -> (usize, Option<usize>) { self.parsed_args_list.size_hint() }\n-    #[inline]\n-    fn last(mut self) -> Option<OsString> { self.next_back() }\n }\n \n impl DoubleEndedIterator for Args {"}]}