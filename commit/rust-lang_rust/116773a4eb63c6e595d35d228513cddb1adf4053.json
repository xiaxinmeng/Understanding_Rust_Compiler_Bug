{"sha": "116773a4eb63c6e595d35d228513cddb1adf4053", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExNjc3M2E0ZWI2M2M2ZTU5NWQzNWQyMjg1MTNjZGRiMWFkZjQwNTM=", "commit": {"author": {"name": "Jan Niklas Hasse", "email": "jhasse@gmail.com", "date": "2014-01-07T16:51:15Z"}, "committer": {"name": "Jan Niklas Hasse", "email": "jhasse@gmail.com", "date": "2014-01-07T16:51:15Z"}, "message": "Make CFG_LIBDIR configurable. Fixes #5223", "tree": {"sha": "c3ac0ec595e80d8c12181a00689e9e4567784618", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3ac0ec595e80d8c12181a00689e9e4567784618"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/116773a4eb63c6e595d35d228513cddb1adf4053", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/116773a4eb63c6e595d35d228513cddb1adf4053", "html_url": "https://github.com/rust-lang/rust/commit/116773a4eb63c6e595d35d228513cddb1adf4053", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/116773a4eb63c6e595d35d228513cddb1adf4053/comments", "author": {"login": "jhasse", "id": 80071, "node_id": "MDQ6VXNlcjgwMDcx", "avatar_url": "https://avatars.githubusercontent.com/u/80071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhasse", "html_url": "https://github.com/jhasse", "followers_url": "https://api.github.com/users/jhasse/followers", "following_url": "https://api.github.com/users/jhasse/following{/other_user}", "gists_url": "https://api.github.com/users/jhasse/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhasse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhasse/subscriptions", "organizations_url": "https://api.github.com/users/jhasse/orgs", "repos_url": "https://api.github.com/users/jhasse/repos", "events_url": "https://api.github.com/users/jhasse/events{/privacy}", "received_events_url": "https://api.github.com/users/jhasse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhasse", "id": 80071, "node_id": "MDQ6VXNlcjgwMDcx", "avatar_url": "https://avatars.githubusercontent.com/u/80071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhasse", "html_url": "https://github.com/jhasse", "followers_url": "https://api.github.com/users/jhasse/followers", "following_url": "https://api.github.com/users/jhasse/following{/other_user}", "gists_url": "https://api.github.com/users/jhasse/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhasse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhasse/subscriptions", "organizations_url": "https://api.github.com/users/jhasse/orgs", "repos_url": "https://api.github.com/users/jhasse/repos", "events_url": "https://api.github.com/users/jhasse/events{/privacy}", "received_events_url": "https://api.github.com/users/jhasse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b7d7a041a4f64589b63cd4e62267558bb51219b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b7d7a041a4f64589b63cd4e62267558bb51219b", "html_url": "https://github.com/rust-lang/rust/commit/7b7d7a041a4f64589b63cd4e62267558bb51219b"}], "stats": {"total": 62, "additions": 31, "deletions": 31}, "files": [{"sha": "5e2059242e2711e2aaf59cde306096d9deef732e", "filename": "Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/116773a4eb63c6e595d35d228513cddb1adf4053/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/116773a4eb63c6e595d35d228513cddb1adf4053/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=116773a4eb63c6e595d35d228513cddb1adf4053", "patch": "@@ -416,6 +416,7 @@ export CFG_ENABLE_MINGW_CROSS\n export CFG_PREFIX\n export CFG_LIBDIR\n export CFG_RUSTLIBDIR\n+export LIBDIR_RELATIVE\n \n ######################################################################\n # Subprograms\n@@ -433,12 +434,12 @@ define SREQ\n # Destinations of artifacts for the host compiler\n HROOT$(1)_H_$(3) = $(3)/stage$(1)\n HBIN$(1)_H_$(3) = $$(HROOT$(1)_H_$(3))/bin\n-HLIB$(1)_H_$(3) = $$(HROOT$(1)_H_$(3))/$$(CFG_LIBDIR)\n+HLIB$(1)_H_$(3) = $$(HROOT$(1)_H_$(3))/$$(LIBDIR_RELATIVE)\n \n # Destinations of artifacts for target architectures\n TROOT$(1)_T_$(2)_H_$(3) = $$(HLIB$(1)_H_$(3))/$$(CFG_RUSTLIBDIR)/$(2)\n TBIN$(1)_T_$(2)_H_$(3) = $$(TROOT$(1)_T_$(2)_H_$(3))/bin\n-TLIB$(1)_T_$(2)_H_$(3) = $$(TROOT$(1)_T_$(2)_H_$(3))/$$(CFG_LIBDIR)\n+TLIB$(1)_T_$(2)_H_$(3) = $$(TROOT$(1)_T_$(2)_H_$(3))/lib\n \n # The name of the standard and extra libraries used by rustc\n HSTDLIB_DEFAULT$(1)_H_$(3) = \\"}, {"sha": "c26a3c006e181a037933ca185dd95bc4d18594e4", "filename": "configure", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/116773a4eb63c6e595d35d228513cddb1adf4053/configure", "raw_url": "https://github.com/rust-lang/rust/raw/116773a4eb63c6e595d35d228513cddb1adf4053/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=116773a4eb63c6e595d35d228513cddb1adf4053", "patch": "@@ -397,7 +397,17 @@ valopt sysconfdir \"/etc\" \"install system configuration files\"\n valopt datadir \"${CFG_PREFIX}/share\" \"install data\"\n valopt infodir \"${CFG_PREFIX}/share/info\" \"install additional info\"\n valopt mandir \"${CFG_PREFIX}/share/man\" \"install man pages in PATH\"\n-valopt libdir \"${CFG_PREFIX}/lib\" \"install libraries\"\n+\n+# On windows we just store the libraries in the bin directory because\n+# there's no rpath\n+# FIXME: Thise needs to parameterized over target triples. Do it in platform.mk\n+LIBDIR_RELATIVE=lib\n+if [ \"$CFG_OSTYPE\" = \"pc-mingw32\" ]\n+then\n+    LIBDIR_RELATIVE=bin\n+fi\n+\n+valopt libdir \"${CFG_PREFIX}/${LIBDIR_RELATIVE}\" \"install libraries\"\n valopt rustlibdir \"rustlib\" \"subdirectory name for rustc's libraries\"\n \n # Validate Options\n@@ -751,15 +761,6 @@ do\n   done\n done\n \n-# On windows we just store the libraries in the bin directory because\n-# there's no rpath\n-# FIXME: Thise needs to parameterized over target triples. Do it in platform.mk\n-CFG_LIBDIR=lib\n-if [ \"$CFG_OSTYPE\" = \"pc-mingw32\" ]\n-then\n-    CFG_LIBDIR=bin\n-fi\n-\n for h in $CFG_HOST\n do\n     for t in $CFG_TARGET\n@@ -770,21 +771,21 @@ do\n             make_dir $h/stage$i/bin\n \n             # host lib dir\n-            make_dir $h/stage$i/$CFG_LIBDIR\n+            make_dir $h/stage$i/$LIBDIR_RELATIVE\n \n             # host test dir\n             make_dir $h/stage$i/test\n \n             # target bin dir\n-            make_dir $h/stage$i/$CFG_LIBDIR/$CFG_RUSTLIBDIR/$t/bin\n+            make_dir $h/stage$i/$LIBDIR_RELATIVE/$CFG_RUSTLIBDIR/$t/bin\n \n             # target lib dir\n-            make_dir $h/stage$i/$CFG_LIBDIR/$CFG_RUSTLIBDIR/$t/$CFG_LIBDIR\n+            make_dir $h/stage$i/$LIBDIR_RELATIVE/$CFG_RUSTLIBDIR/$t/lib\n         done\n \n         # Fix stage0:\n-        make_dir $h/stage0/$CFG_LIBDIR/rustc/$t/bin\n-        make_dir $h/stage0/$CFG_LIBDIR/rustc/$t/$CFG_LIBDIR\n+        make_dir $h/stage0/$LIBDIR_RELATIVE/rustc/$t/bin\n+        make_dir $h/stage0/$LIBDIR_RELATIVE/rustc/$t/$LIBDIR_RELATIVE\n \n     done\n \n@@ -1038,6 +1039,7 @@ putvar CFG_TARGET\n putvar CFG_C_COMPILER\n putvar CFG_LIBDIR\n putvar CFG_RUSTLIBDIR\n+putvar LIBDIR_RELATIVE\n putvar CFG_DISABLE_MANAGE_SUBMODULES\n putvar CFG_ANDROID_CROSS_PATH\n putvar CFG_MINGW32_CROSS_PATH"}, {"sha": "3641590662fef54506ccea12fdc1deb68bc4a07a", "filename": "mk/host.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/116773a4eb63c6e595d35d228513cddb1adf4053/mk%2Fhost.mk", "raw_url": "https://github.com/rust-lang/rust/raw/116773a4eb63c6e595d35d228513cddb1adf4053/mk%2Fhost.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fhost.mk?ref=116773a4eb63c6e595d35d228513cddb1adf4053", "patch": "@@ -149,7 +149,7 @@ $$(HLIB$(2)_H_$(4))/$(CFG_LIBNATIVE_$(4)): \\\n $$(HBIN$(2)_H_$(4))/:\n \tmkdir -p $$@\n \n-ifneq ($(CFG_LIBDIR),bin)\n+ifneq ($(LIBDIR_RELATIVE),bin)\n $$(HLIB$(2)_H_$(4))/:\n \tmkdir -p $$@\n endif"}, {"sha": "3d144775b837ad97ed1e68f94b5bfb8e1011a1b1", "filename": "mk/install.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/116773a4eb63c6e595d35d228513cddb1adf4053/mk%2Finstall.mk", "raw_url": "https://github.com/rust-lang/rust/raw/116773a4eb63c6e595d35d228513cddb1adf4053/mk%2Finstall.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Finstall.mk?ref=116773a4eb63c6e595d35d228513cddb1adf4053", "patch": "@@ -63,7 +63,7 @@ ISTAGE = 2\n \n PREFIX_ROOT = $(CFG_PREFIX)\n PREFIX_BIN = $(PREFIX_ROOT)/bin\n-PREFIX_LIB = $(PREFIX_ROOT)/$(CFG_LIBDIR)\n+PREFIX_LIB = $(CFG_LIBDIR)\n \n define INSTALL_PREPARE_N\n   # $(1) is the target triple\n@@ -76,7 +76,7 @@ TL$(1)$(2) = $$(TLIB$$(ISTAGE)_T_$(1)_H_$(2))\n # PT{R,B,L} == Prefix Target {Root, Bin, Lib}\n PTR$(1)$(2) = $$(PREFIX_LIB)/$(CFG_RUSTLIBDIR)/$(1)\n PTB$(1)$(2) = $$(PTR$(1)$(2))/bin\n-PTL$(1)$(2) = $$(PTR$(1)$(2))/$(CFG_LIBDIR)\n+PTL$(1)$(2) = $$(PTR$(1)$(2))/lib\n \n endef\n "}, {"sha": "59882e63bfdb6adeb178134a589afaf40e7dfae5", "filename": "mk/target.mk", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/116773a4eb63c6e595d35d228513cddb1adf4053/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/116773a4eb63c6e595d35d228513cddb1adf4053/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=116773a4eb63c6e595d35d228513cddb1adf4053", "patch": "@@ -193,10 +193,8 @@ endif\n $$(TBIN$(1)_T_$(2)_H_$(3))/:\n \tmkdir -p $$@\n \n-ifneq ($(CFG_LIBDIR),bin)\n $$(TLIB$(1)_T_$(2)_H_$(3))/:\n \tmkdir -p $$@\n-endif\n \n endef\n "}, {"sha": "fc5c01a8f283f778729134004c91eb5702084170", "filename": "mk/tests.mk", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/116773a4eb63c6e595d35d228513cddb1adf4053/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/116773a4eb63c6e595d35d228513cddb1adf4053/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=116773a4eb63c6e595d35d228513cddb1adf4053", "patch": "@@ -101,14 +101,14 @@ endif\n ifdef CFG_WINDOWSY_$(1)\n   CFG_TESTLIB_$(1)=$$(CFG_BUILD_DIR)$$(2)/$$(strip \\\n    $$(if $$(findstring stage0,$$(1)), \\\n-       stage0/$$(CFG_LIBDIR), \\\n+       stage0/$$(LIBDIR_RELATIVE), \\\n       $$(if $$(findstring stage1,$$(1)), \\\n-           stage1/$$(CFG_LIBDIR), \\\n+           stage1/$$(LIBDIR_RELATIVE), \\\n           $$(if $$(findstring stage2,$$(1)), \\\n-               stage2/$$(CFG_LIBDIR), \\\n+               stage2/$$(LIBDIR_RELATIVE), \\\n                $$(if $$(findstring stage3,$$(1)), \\\n-                    stage3/$$(CFG_LIBDIR), \\\n-               )))))/$$(CFG_RUSTLIBDIR)/$$(CFG_BUILD)/$$(CFG_LIBDIR)\n+                    stage3/$$(LIBDIR_RELATIVE), \\\n+               )))))/$$(CFG_RUSTLIBDIR)/$$(CFG_BUILD)/lib\n   CFG_RUN_TEST_$(1)=$$(call CFG_RUN_$(1),$$(call CFG_TESTLIB_$(1),$$(1),$$(3)),$$(1))\n endif\n "}, {"sha": "f804338f4ff5bab10a6fb8da569062f2732837d4", "filename": "src/librustc/metadata/filesearch.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/116773a4eb63c6e595d35d228513cddb1adf4053/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/116773a4eb63c6e595d35d228513cddb1adf4053/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs?ref=116773a4eb63c6e595d35d228513cddb1adf4053", "patch": "@@ -154,12 +154,11 @@ pub fn search(filesearch: @FileSearch, pick: pick) {\n }\n \n pub fn relative_target_lib_path(target_triple: &str) -> Path {\n-    let dir = libdir();\n-    let mut p = Path::new(dir.as_slice());\n+    let mut p = Path::new(libdir());\n     assert!(p.is_relative());\n     p.push(rustlibdir());\n     p.push(target_triple);\n-    p.push(dir);\n+    p.push(\"lib\");\n     p\n }\n \n@@ -245,7 +244,7 @@ pub fn rust_path() -> ~[Path] {\n // The name of the directory rustc expects libraries to be located.\n // On Unix should be \"lib\", on windows \"bin\"\n pub fn libdir() -> ~str {\n-    (env!(\"CFG_LIBDIR\")).to_owned()\n+    (env!(\"LIBDIR_RELATIVE\")).to_owned()\n }\n \n // The name of rustc's own place to organize libraries."}]}