{"sha": "47ab5f7ce27397310bd8359b8db1504fbf8a9b59", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3YWI1ZjdjZTI3Mzk3MzEwYmQ4MzU5YjhkYjE1MDRmYmY4YTliNTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-24T12:13:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-24T12:13:37Z"}, "message": "Auto merge of #87699 - ubamrein:use-iphone-deployment-target-for-llvm, r=petrochenkov\n\nAllow specifying an deployment target version for all iOS llvm targets\n\nCloses: https://github.com/rust-lang/rust/issues/79408\n\nThis pull requests adds the same procedure to define the iOS-version for the LLVM-target as was used for the simulator target and the desktop target.\n\nThis then closes the original problem mentioned in the above issue. The problem with incompatible bitcode remains, but is probably not easy fixable.\n\nI realised that something is still not right. Try to fix that.\n\nr? `@petrochenkov`", "tree": {"sha": "5673543897f02d8f8d3443d9db2e42e8d024e62f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5673543897f02d8f8d3443d9db2e42e8d024e62f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47ab5f7ce27397310bd8359b8db1504fbf8a9b59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47ab5f7ce27397310bd8359b8db1504fbf8a9b59", "html_url": "https://github.com/rust-lang/rust/commit/47ab5f7ce27397310bd8359b8db1504fbf8a9b59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47ab5f7ce27397310bd8359b8db1504fbf8a9b59/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f66e825f73d2bd7f8a763b723983850f891985b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f66e825f73d2bd7f8a763b723983850f891985b0", "html_url": "https://github.com/rust-lang/rust/commit/f66e825f73d2bd7f8a763b723983850f891985b0"}, {"sha": "8f65d154c8d6ea020f74acdb7ab7a62818c022af", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f65d154c8d6ea020f74acdb7ab7a62818c022af", "html_url": "https://github.com/rust-lang/rust/commit/8f65d154c8d6ea020f74acdb7ab7a62818c022af"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "5d75f6ab39ce7e3f21b8852eb4eaf786c363d433", "filename": "compiler/rustc_target/src/spec/apple_base.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/47ab5f7ce27397310bd8359b8db1504fbf8a9b59/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47ab5f7ce27397310bd8359b8db1504fbf8a9b59/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs?ref=47ab5f7ce27397310bd8359b8db1504fbf8a9b59", "patch": "@@ -92,6 +92,12 @@ fn ios_deployment_target() -> (u32, u32) {\n }\n \n pub fn ios_llvm_target(arch: &str) -> String {\n+    // Modern iOS tooling extracts information about deployment target\n+    // from LC_BUILD_VERSION. This load command will only be emitted when\n+    // we build with a version specific `llvm_target`, with the version\n+    // set high enough. Luckily one LC_BUILD_VERSION is enough, for Xcode\n+    // to pick it up (since std and core are still built with the fallback\n+    // of version 7.0 and hence emit the old LC_IPHONE_MIN_VERSION).\n     let (major, minor) = ios_deployment_target();\n     format!(\"{}-apple-ios{}.{}.0\", arch, major, minor)\n }"}, {"sha": "1f90c78f14a3e20f57896fb7fa976f4d0dca0f4f", "filename": "compiler/rustc_target/src/spec/armv7_apple_ios.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47ab5f7ce27397310bd8359b8db1504fbf8a9b59/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47ab5f7ce27397310bd8359b8db1504fbf8a9b59/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7_apple_ios.rs?ref=47ab5f7ce27397310bd8359b8db1504fbf8a9b59", "patch": "@@ -3,7 +3,7 @@ use crate::spec::{Target, TargetOptions};\n \n pub fn target() -> Target {\n     Target {\n-        llvm_target: \"armv7-apple-ios\".to_string(),\n+        llvm_target: super::apple_base::ios_llvm_target(\"armv7\"),\n         pointer_width: 32,\n         data_layout: \"e-m:o-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32\".to_string(),\n         arch: \"arm\".to_string(),"}, {"sha": "4419dfe92f40e2bcb9d6be739df3937b6e59d690", "filename": "compiler/rustc_target/src/spec/i386_apple_ios.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47ab5f7ce27397310bd8359b8db1504fbf8a9b59/compiler%2Frustc_target%2Fsrc%2Fspec%2Fi386_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47ab5f7ce27397310bd8359b8db1504fbf8a9b59/compiler%2Frustc_target%2Fsrc%2Fspec%2Fi386_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fi386_apple_ios.rs?ref=47ab5f7ce27397310bd8359b8db1504fbf8a9b59", "patch": "@@ -4,7 +4,7 @@ use crate::spec::{StackProbeType, Target, TargetOptions};\n pub fn target() -> Target {\n     let base = opts(\"ios\", Arch::I386);\n     Target {\n-        llvm_target: \"i386-apple-ios\".to_string(),\n+        llvm_target: super::apple_base::ios_sim_llvm_target(\"i386\"),\n         pointer_width: 32,\n         data_layout: \"e-m:o-p:32:32-p270:32:32-p271:32:32-p272:64:64-\\\n             f64:32:64-f80:128-n8:16:32-S128\""}, {"sha": "6e20bd23f1759c7dfde7e4827e8be7728efe7caf", "filename": "compiler/rustc_target/src/spec/x86_64_apple_ios.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47ab5f7ce27397310bd8359b8db1504fbf8a9b59/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47ab5f7ce27397310bd8359b8db1504fbf8a9b59/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_apple_ios.rs?ref=47ab5f7ce27397310bd8359b8db1504fbf8a9b59", "patch": "@@ -4,7 +4,7 @@ use crate::spec::{StackProbeType, Target, TargetOptions};\n pub fn target() -> Target {\n     let base = opts(\"ios\", Arch::X86_64);\n     Target {\n-        llvm_target: \"x86_64-apple-ios\".to_string(),\n+        llvm_target: super::apple_base::ios_sim_llvm_target(\"x86_64\"),\n         pointer_width: 64,\n         data_layout: \"e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\n             .to_string(),"}]}