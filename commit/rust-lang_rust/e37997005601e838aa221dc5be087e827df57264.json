{"sha": "e37997005601e838aa221dc5be087e827df57264", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzNzk5NzAwNTYwMWU4MzhhYTIyMWRjNWJlMDg3ZTgyN2RmNTcyNjQ=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-01-04T20:00:15Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-01-08T18:24:38Z"}, "message": "improve non_upper_case_globals diagnostics\n\nUse a structured suggestion and tighten the span to just the identifier.", "tree": {"sha": "972f764941a61a2793f97707754fd1f83e2fc6da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/972f764941a61a2793f97707754fd1f83e2fc6da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e37997005601e838aa221dc5be087e827df57264", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlw06uYWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdNqRCACNGOoFB9yMzA+r6yq4NPWkwLdo\nxVt6tzEuXEGkyvdpfDC+5WevT+3VO36K1ydXysktmkQ4o903ERxfpIQzWNox94vk\n5UTl6aLBQ53EkyrvGzBtXMIo2BVNaMbxH3XzoK6RGozK5qpnD/rBL9F//ncVDUZM\nQUd48IfdTsKPHUNtRFUdWkxCR3RTvTrnArqiq+PEu/oPuWpkcnAt9cQnp+qL/PEe\nojejV59GTd906zRBibzNorG9i3ibkm7XR8HEHgTznmJwIRx7NK2KUeWzH+68oWtP\nNPtBxrpft0qwQ3wGntyFRTMaRfvhp+pV+J/aSVlEp47Rj4tB4CZ23Tz1hpvy\n=/Iek\n-----END PGP SIGNATURE-----", "payload": "tree 972f764941a61a2793f97707754fd1f83e2fc6da\nparent 7c0d145ec1603fd7d4de2ef38a70baeffbedaad2\nauthor Andy Russell <arussell123@gmail.com> 1546632015 -0500\ncommitter Andy Russell <arussell123@gmail.com> 1546971878 -0500\n\nimprove non_upper_case_globals diagnostics\n\nUse a structured suggestion and tighten the span to just the identifier.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e37997005601e838aa221dc5be087e827df57264", "html_url": "https://github.com/rust-lang/rust/commit/e37997005601e838aa221dc5be087e827df57264", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e37997005601e838aa221dc5be087e827df57264/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c0d145ec1603fd7d4de2ef38a70baeffbedaad2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c0d145ec1603fd7d4de2ef38a70baeffbedaad2", "html_url": "https://github.com/rust-lang/rust/commit/7c0d145ec1603fd7d4de2ef38a70baeffbedaad2"}], "stats": {"total": 192, "additions": 89, "deletions": 103}, "files": [{"sha": "d2fdaab9315116cb7ba3ac9c660ae4319ffc80c3", "filename": "src/librustc_lint/nonstandard_style.rs", "status": "modified", "additions": 27, "deletions": 39, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/e37997005601e838aa221dc5be087e827df57264/src%2Flibrustc_lint%2Fnonstandard_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37997005601e838aa221dc5be087e827df57264/src%2Flibrustc_lint%2Fnonstandard_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fnonstandard_style.rs?ref=e37997005601e838aa221dc5be087e827df57264", "patch": "@@ -356,21 +356,21 @@ declare_lint! {\n pub struct NonUpperCaseGlobals;\n \n impl NonUpperCaseGlobals {\n-    fn check_upper_case(cx: &LateContext, sort: &str, name: ast::Name, span: Span) {\n-        if name.as_str().chars().any(|c| c.is_lowercase()) {\n-            let uc = NonSnakeCase::to_snake_case(&name.as_str()).to_uppercase();\n-            if name != &*uc {\n-                cx.span_lint(NON_UPPER_CASE_GLOBALS,\n-                             span,\n-                             &format!(\"{} `{}` should have an upper case name such as `{}`\",\n-                                      sort,\n-                                      name,\n-                                      uc));\n-            } else {\n-                cx.span_lint(NON_UPPER_CASE_GLOBALS,\n-                             span,\n-                             &format!(\"{} `{}` should have an upper case name\", sort, name));\n-            }\n+    fn check_upper_case(cx: &LateContext, sort: &str, ident: &Ident) {\n+        let name = &ident.name.as_str();\n+\n+        if name.chars().any(|c| c.is_lowercase()) {\n+            let uc = NonSnakeCase::to_snake_case(&name).to_uppercase();\n+\n+            let msg = format!(\"{} `{}` should have an upper case name\", sort, name);\n+            cx.struct_span_lint(NON_UPPER_CASE_GLOBALS, ident.span, &msg)\n+                .span_suggestion_with_applicability(\n+                    ident.span,\n+                    \"convert the identifier to upper case\",\n+                    uc,\n+                    Applicability::MaybeIncorrect,\n+                )\n+                .emit();\n         }\n     }\n }\n@@ -384,38 +384,25 @@ impl LintPass for NonUpperCaseGlobals {\n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NonUpperCaseGlobals {\n     fn check_item(&mut self, cx: &LateContext, it: &hir::Item) {\n         match it.node {\n-            hir::ItemKind::Static(..) => {\n-                if attr::find_by_name(&it.attrs, \"no_mangle\").is_some() {\n-                    return;\n-                }\n-                NonUpperCaseGlobals::check_upper_case(cx, \"static variable\", it.ident.name,\n-                                                      it.span);\n+            hir::ItemKind::Static(..) if !attr::contains_name(&it.attrs, \"no_mangle\") => {\n+                NonUpperCaseGlobals::check_upper_case(cx, \"static variable\", &it.ident);\n             }\n             hir::ItemKind::Const(..) => {\n-                NonUpperCaseGlobals::check_upper_case(cx, \"constant\", it.ident.name,\n-                                                      it.span);\n+                NonUpperCaseGlobals::check_upper_case(cx, \"constant\", &it.ident);\n             }\n             _ => {}\n         }\n     }\n \n     fn check_trait_item(&mut self, cx: &LateContext, ti: &hir::TraitItem) {\n-        match ti.node {\n-            hir::TraitItemKind::Const(..) => {\n-                NonUpperCaseGlobals::check_upper_case(cx, \"associated constant\",\n-                                                      ti.ident.name, ti.span);\n-            }\n-            _ => {}\n+        if let hir::TraitItemKind::Const(..) = ti.node {\n+            NonUpperCaseGlobals::check_upper_case(cx, \"associated constant\", &ti.ident);\n         }\n     }\n \n     fn check_impl_item(&mut self, cx: &LateContext, ii: &hir::ImplItem) {\n-        match ii.node {\n-            hir::ImplItemKind::Const(..) => {\n-                NonUpperCaseGlobals::check_upper_case(cx, \"associated constant\",\n-                                                      ii.ident.name, ii.span);\n-            }\n-            _ => {}\n+        if let hir::ImplItemKind::Const(..) = ii.node {\n+            NonUpperCaseGlobals::check_upper_case(cx, \"associated constant\", &ii.ident);\n         }\n     }\n \n@@ -424,10 +411,11 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NonUpperCaseGlobals {\n         if let PatKind::Path(hir::QPath::Resolved(None, ref path)) = p.node {\n             if let Def::Const(..) = path.def {\n                 if path.segments.len() == 1 {\n-                    NonUpperCaseGlobals::check_upper_case(cx,\n-                                                          \"constant in pattern\",\n-                                                          path.segments[0].ident.name,\n-                                                          path.span);\n+                    NonUpperCaseGlobals::check_upper_case(\n+                        cx,\n+                        \"constant in pattern\",\n+                        &path.segments[0].ident\n+                    );\n                 }\n             }\n         }"}, {"sha": "a19d0458edd80309bc56365309c728046e4c4082", "filename": "src/libsyntax_ext/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e37997005601e838aa221dc5be087e827df57264/src%2Flibsyntax_ext%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37997005601e838aa221dc5be087e827df57264/src%2Flibsyntax_ext%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Ftest.rs?ref=e37997005601e838aa221dc5be087e827df57264", "patch": "@@ -124,14 +124,14 @@ pub fn expand_test_or_bench(\n         ])\n     };\n \n-    let mut test_const = cx.item(sp, item.ident.gensym(),\n+    let mut test_const = cx.item(sp, ast::Ident::new(item.ident.name.gensymed(), sp),\n         vec![\n             // #[cfg(test)]\n             cx.attribute(attr_sp, cx.meta_list(attr_sp, Symbol::intern(\"cfg\"), vec![\n                 cx.meta_list_item_word(attr_sp, Symbol::intern(\"test\"))\n             ])),\n             // #[rustc_test_marker]\n-            cx.attribute(attr_sp, cx.meta_word(attr_sp, Symbol::intern(\"rustc_test_marker\")))\n+            cx.attribute(attr_sp, cx.meta_word(attr_sp, Symbol::intern(\"rustc_test_marker\"))),\n         ],\n         // const $ident: test::TestDescAndFn =\n         ast::ItemKind::Const(cx.ty(sp, ast::TyKind::Path(None, test_path(\"TestDescAndFn\"))),"}, {"sha": "d30b95843f300a5c7b559f2158eb1795a53880d4", "filename": "src/test/ui/issues/issue-17718-const-naming.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-naming.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-naming.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-naming.rs?ref=e37997005601e838aa221dc5be087e827df57264", "patch": "@@ -1,8 +1,8 @@\n #![warn(unused)]\n-#[deny(warnings)]\n+#![deny(warnings)]\n \n const foo: isize = 3;\n-//~^ ERROR: should have an upper case name such as\n+//~^ ERROR: should have an upper case name\n //~^^ ERROR: constant item is never used\n \n fn main() {}"}, {"sha": "b92acecb83eca0ecb589d70ac252c73093509ed9", "filename": "src/test/ui/issues/issue-17718-const-naming.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-naming.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-naming.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-naming.stderr?ref=e37997005601e838aa221dc5be087e827df57264", "patch": "@@ -5,23 +5,23 @@ LL | const foo: isize = 3;\n    | ^^^^^^^^^^^^^^^^^^^^^\n    |\n note: lint level defined here\n-  --> $DIR/issue-17718-const-naming.rs:2:8\n+  --> $DIR/issue-17718-const-naming.rs:2:9\n    |\n-LL | #[deny(warnings)]\n-   |        ^^^^^^^^\n+LL | #![deny(warnings)]\n+   |         ^^^^^^^^\n    = note: #[deny(dead_code)] implied by #[deny(warnings)]\n \n-error: constant `foo` should have an upper case name such as `FOO`\n-  --> $DIR/issue-17718-const-naming.rs:4:1\n+error: constant `foo` should have an upper case name\n+  --> $DIR/issue-17718-const-naming.rs:4:7\n    |\n LL | const foo: isize = 3;\n-   | ^^^^^^^^^^^^^^^^^^^^^\n+   |       ^^^ help: convert the identifier to upper case: `FOO`\n    |\n note: lint level defined here\n-  --> $DIR/issue-17718-const-naming.rs:2:8\n+  --> $DIR/issue-17718-const-naming.rs:2:9\n    |\n-LL | #[deny(warnings)]\n-   |        ^^^^^^^^\n+LL | #![deny(warnings)]\n+   |         ^^^^^^^^\n    = note: #[deny(non_upper_case_globals)] implied by #[deny(warnings)]\n \n error: aborting due to 2 previous errors"}, {"sha": "176f246ad76325241a70a395f5789b9029a3cff3", "filename": "src/test/ui/lint/lint-group-nonstandard-style.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Flint%2Flint-group-nonstandard-style.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Flint%2Flint-group-nonstandard-style.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-group-nonstandard-style.stderr?ref=e37997005601e838aa221dc5be087e827df57264", "patch": "@@ -37,11 +37,11 @@ LL |     #[forbid(nonstandard_style)]\n    |              ^^^^^^^^^^^^^^^^^\n    = note: #[forbid(non_snake_case)] implied by #[forbid(nonstandard_style)]\n \n-error: static variable `bad` should have an upper case name such as `BAD`\n-  --> $DIR/lint-group-nonstandard-style.rs:14:9\n+error: static variable `bad` should have an upper case name\n+  --> $DIR/lint-group-nonstandard-style.rs:14:16\n    |\n LL |         static bad: isize = 1; //~ ERROR should have an upper\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^ help: convert the identifier to upper case: `BAD`\n    |\n note: lint level defined here\n   --> $DIR/lint-group-nonstandard-style.rs:10:14"}, {"sha": "8ca5af21630a216c0b67c2ff525391fc09d562cd", "filename": "src/test/ui/lint/lint-lowercase-static-const-pattern-rename.rs", "status": "renamed", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern-rename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern-rename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern-rename.rs?ref=e37997005601e838aa221dc5be087e827df57264", "patch": "@@ -1,13 +1,12 @@\n-// run-pass\n+// compile-pass\n // Issue #7526: lowercase static constants in patterns look like bindings\n \n-// This is similar to compile-fail/match-static-const-lc, except it\n+// This is similar to lint-lowercase-static-const-pattern.rs, except it\n // shows the expected usual workaround (choosing a different name for\n // the static definition) and also demonstrates that one can work\n // around this problem locally by renaming the constant in the `use`\n // form to an uppercase identifier that placates the lint.\n \n-\n #![deny(non_upper_case_globals)]\n \n pub const A : isize = 97;", "previous_filename": "src/test/run-pass/binding/match-static-const-rename.rs"}, {"sha": "c2e159eec1ba7cea77ee93a838a78c99cc418031", "filename": "src/test/ui/lint/lint-lowercase-static-const-pattern.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern.rs?ref=e37997005601e838aa221dc5be087e827df57264", "patch": "@@ -9,7 +9,7 @@ pub const a : isize = 97;\n fn f() {\n     let r = match (0,0) {\n         (0, a) => 0,\n-        //~^ ERROR constant in pattern `a` should have an upper case name such as `A`\n+        //~^ ERROR constant in pattern `a` should have an upper case name\n         (x, y) => 1 + x + y,\n     };\n     assert_eq!(r, 1);\n@@ -24,7 +24,7 @@ fn g() {\n     use self::m::aha;\n     let r = match (0,0) {\n         (0, aha) => 0,\n-        //~^ ERROR constant in pattern `aha` should have an upper case name such as `AHA`\n+        //~^ ERROR constant in pattern `aha` should have an upper case name\n         (x, y)   => 1 + x + y,\n     };\n     assert_eq!(r, 1);\n@@ -38,7 +38,7 @@ fn h() {\n     use self::n::OKAY as not_okay;\n     let r = match (0,0) {\n         (0, not_okay) => 0,\n-//~^ ERROR constant in pattern `not_okay` should have an upper case name such as `NOT_OKAY`\n+//~^ ERROR constant in pattern `not_okay` should have an upper case name\n         (x, y)   => 1 + x + y,\n     };\n     assert_eq!(r, 1);", "previous_filename": "src/test/ui/match/match-static-const-lc.rs"}, {"sha": "d95510ccd2d257324043ea184bf3cd1e1aae033a", "filename": "src/test/ui/lint/lint-lowercase-static-const-pattern.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern.stderr?ref=e37997005601e838aa221dc5be087e827df57264", "patch": "@@ -0,0 +1,26 @@\n+error: constant in pattern `a` should have an upper case name\n+  --> $DIR/lint-lowercase-static-const-pattern.rs:11:13\n+   |\n+LL |         (0, a) => 0,\n+   |             ^ help: convert the identifier to upper case: `A`\n+   |\n+note: lint level defined here\n+  --> $DIR/lint-lowercase-static-const-pattern.rs:4:9\n+   |\n+LL | #![deny(non_upper_case_globals)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: constant in pattern `aha` should have an upper case name\n+  --> $DIR/lint-lowercase-static-const-pattern.rs:26:13\n+   |\n+LL |         (0, aha) => 0,\n+   |             ^^^ help: convert the identifier to upper case: `AHA`\n+\n+error: constant in pattern `not_okay` should have an upper case name\n+  --> $DIR/lint-lowercase-static-const-pattern.rs:40:13\n+   |\n+LL |         (0, not_okay) => 0,\n+   |             ^^^^^^^^ help: convert the identifier to upper case: `NOT_OKAY`\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "7b0d9396077d040b63f4dd97f5c2bb6e6923b4bc", "filename": "src/test/ui/lint/lint-non-uppercase-associated-const.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-associated-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-associated-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-associated-const.rs?ref=e37997005601e838aa221dc5be087e827df57264", "patch": "@@ -6,6 +6,6 @@ struct Foo;\n impl Foo {\n     const not_upper: bool = true;\n }\n-//~^^ ERROR associated constant `not_upper` should have an upper case name such as `NOT_UPPER`\n+//~^^ ERROR associated constant `not_upper` should have an upper case name\n \n fn main() {}", "previous_filename": "src/test/ui/associated-const/associated-const-upper-case-lint.rs"}, {"sha": "2185d5a0ab48f6a8118dc96a59b063196dc781bc", "filename": "src/test/ui/lint/lint-non-uppercase-associated-const.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-associated-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-associated-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-associated-const.stderr?ref=e37997005601e838aa221dc5be087e827df57264", "patch": "@@ -1,11 +1,11 @@\n-error: associated constant `not_upper` should have an upper case name such as `NOT_UPPER`\n-  --> $DIR/associated-const-upper-case-lint.rs:7:5\n+error: associated constant `not_upper` should have an upper case name\n+  --> $DIR/lint-non-uppercase-associated-const.rs:7:11\n    |\n LL |     const not_upper: bool = true;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |           ^^^^^^^^^ help: convert the identifier to upper case: `NOT_UPPER`\n    |\n note: lint level defined here\n-  --> $DIR/associated-const-upper-case-lint.rs:1:9\n+  --> $DIR/lint-non-uppercase-associated-const.rs:1:9\n    |\n LL | #![deny(non_upper_case_globals)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^", "previous_filename": "src/test/ui/associated-const/associated-const-upper-case-lint.stderr"}, {"sha": "5bd1430328b48e6c35e1640f8c5f22a87bddb564", "filename": "src/test/ui/lint/lint-non-uppercase-statics.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-statics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-statics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-statics.rs?ref=e37997005601e838aa221dc5be087e827df57264", "patch": "@@ -1,10 +1,9 @@\n #![forbid(non_upper_case_globals)]\n #![allow(dead_code)]\n \n-static foo: isize = 1; //~ ERROR static variable `foo` should have an upper case name such as `FOO`\n+static foo: isize = 1; //~ ERROR static variable `foo` should have an upper case name\n \n-static mut bar: isize = 1;\n-        //~^ ERROR static variable `bar` should have an upper case name such as `BAR`\n+static mut bar: isize = 1; //~ ERROR static variable `bar` should have an upper case name\n \n #[no_mangle]\n pub static extern_foo: isize = 1; // OK, because #[no_mangle] supersedes the warning"}, {"sha": "f5bba5f145de4877fc5d00602bdbf2e59f9f65cc", "filename": "src/test/ui/lint/lint-non-uppercase-statics.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-statics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e37997005601e838aa221dc5be087e827df57264/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-statics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-statics.stderr?ref=e37997005601e838aa221dc5be087e827df57264", "patch": "@@ -1,20 +1,20 @@\n-error: static variable `foo` should have an upper case name such as `FOO`\n-  --> $DIR/lint-non-uppercase-statics.rs:4:1\n+error: static variable `foo` should have an upper case name\n+  --> $DIR/lint-non-uppercase-statics.rs:4:8\n    |\n-LL | static foo: isize = 1; //~ ERROR static variable `foo` should have an upper case name such as `FOO`\n-   | ^^^^^^^^^^^^^^^^^^^^^^\n+LL | static foo: isize = 1; //~ ERROR static variable `foo` should have an upper case name\n+   |        ^^^ help: convert the identifier to upper case: `FOO`\n    |\n note: lint level defined here\n   --> $DIR/lint-non-uppercase-statics.rs:1:11\n    |\n LL | #![forbid(non_upper_case_globals)]\n    |           ^^^^^^^^^^^^^^^^^^^^^^\n \n-error: static variable `bar` should have an upper case name such as `BAR`\n-  --> $DIR/lint-non-uppercase-statics.rs:6:1\n+error: static variable `bar` should have an upper case name\n+  --> $DIR/lint-non-uppercase-statics.rs:6:12\n    |\n-LL | static mut bar: isize = 1;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | static mut bar: isize = 1; //~ ERROR static variable `bar` should have an upper case name\n+   |            ^^^ help: convert the identifier to upper case: `BAR`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "1ddb831bf9de93dd21163b861eb1309888eaa843", "filename": "src/test/ui/match/match-static-const-lc.stderr", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7c0d145ec1603fd7d4de2ef38a70baeffbedaad2/src%2Ftest%2Fui%2Fmatch%2Fmatch-static-const-lc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c0d145ec1603fd7d4de2ef38a70baeffbedaad2/src%2Ftest%2Fui%2Fmatch%2Fmatch-static-const-lc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-static-const-lc.stderr?ref=7c0d145ec1603fd7d4de2ef38a70baeffbedaad2", "patch": "@@ -1,26 +0,0 @@\n-error: constant in pattern `a` should have an upper case name such as `A`\n-  --> $DIR/match-static-const-lc.rs:11:13\n-   |\n-LL |         (0, a) => 0,\n-   |             ^\n-   |\n-note: lint level defined here\n-  --> $DIR/match-static-const-lc.rs:4:9\n-   |\n-LL | #![deny(non_upper_case_globals)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: constant in pattern `aha` should have an upper case name such as `AHA`\n-  --> $DIR/match-static-const-lc.rs:26:13\n-   |\n-LL |         (0, aha) => 0,\n-   |             ^^^\n-\n-error: constant in pattern `not_okay` should have an upper case name such as `NOT_OKAY`\n-  --> $DIR/match-static-const-lc.rs:40:13\n-   |\n-LL |         (0, not_okay) => 0,\n-   |             ^^^^^^^^\n-\n-error: aborting due to 3 previous errors\n-"}]}