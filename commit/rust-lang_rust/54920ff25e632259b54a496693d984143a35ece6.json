{"sha": "54920ff25e632259b54a496693d984143a35ece6", "node_id": "C_kwDOAAsO6NoAKDU0OTIwZmYyNWU2MzIyNTliNTRhNDk2NjkzZDk4NDE0M2EzNWVjZTY", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-03-09T18:33:55Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-03-09T18:33:55Z"}, "message": "Add missing clif ir comment", "tree": {"sha": "e33f76a7b0eb0db4e1c776444574ff131b32fc5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e33f76a7b0eb0db4e1c776444574ff131b32fc5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54920ff25e632259b54a496693d984143a35ece6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54920ff25e632259b54a496693d984143a35ece6", "html_url": "https://github.com/rust-lang/rust/commit/54920ff25e632259b54a496693d984143a35ece6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54920ff25e632259b54a496693d984143a35ece6/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01ffb98db5b00d683b31a62c0c50a1b6e7065117", "url": "https://api.github.com/repos/rust-lang/rust/commits/01ffb98db5b00d683b31a62c0c50a1b6e7065117", "html_url": "https://github.com/rust-lang/rust/commit/01ffb98db5b00d683b31a62c0c50a1b6e7065117"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "2aa80e4d10d0e67026211c331e5ad90f74e4a129", "filename": "src/abi/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/54920ff25e632259b54a496693d984143a35ece6/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54920ff25e632259b54a496693d984143a35ece6/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=54920ff25e632259b54a496693d984143a35ece6", "patch": "@@ -94,6 +94,9 @@ impl<'tcx> FunctionCx<'_, '_, 'tcx> {\n         let sig = Signature { params, returns, call_conv: self.target_config.default_call_conv };\n         let func_id = self.module.declare_function(name, Linkage::Import, &sig).unwrap();\n         let func_ref = self.module.declare_func_in_func(func_id, &mut self.bcx.func);\n+        if self.clif_comments.enabled() {\n+            self.add_comment(func_ref, format!(\"{:?}\", name));\n+        }\n         let call_inst = self.bcx.ins().call(func_ref, args);\n         if self.clif_comments.enabled() {\n             self.add_comment(call_inst, format!(\"easy_call {}\", name));"}]}