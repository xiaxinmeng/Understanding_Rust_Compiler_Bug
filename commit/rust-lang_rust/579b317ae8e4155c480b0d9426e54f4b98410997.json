{"sha": "579b317ae8e4155c480b0d9426e54f4b98410997", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3OWIzMTdhZThlNDE1NWM0ODBiMGQ5NDI2ZTU0ZjRiOTg0MTA5OTc=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-05-25T15:45:07Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-05-25T15:45:07Z"}, "message": "Dead code.", "tree": {"sha": "717729796d837c2f9d6513a91e0b5b553fc8130c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/717729796d837c2f9d6513a91e0b5b553fc8130c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/579b317ae8e4155c480b0d9426e54f4b98410997", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/579b317ae8e4155c480b0d9426e54f4b98410997", "html_url": "https://github.com/rust-lang/rust/commit/579b317ae8e4155c480b0d9426e54f4b98410997", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/579b317ae8e4155c480b0d9426e54f4b98410997/comments", "author": null, "committer": null, "parents": [{"sha": "3eafea46a3f66f28c358a50f97005e0893efd8b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3eafea46a3f66f28c358a50f97005e0893efd8b8", "html_url": "https://github.com/rust-lang/rust/commit/3eafea46a3f66f28c358a50f97005e0893efd8b8"}], "stats": {"total": 65, "additions": 2, "deletions": 63}, "files": [{"sha": "160fedb4349e6decaf8e6d419d1d56902b890dd7", "filename": "src/rt/rust_crate_cache.cpp", "status": "modified", "additions": 1, "deletions": 49, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/579b317ae8e4155c480b0d9426e54f4b98410997/src%2Frt%2Frust_crate_cache.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/579b317ae8e4155c480b0d9426e54f4b98410997/src%2Frt%2Frust_crate_cache.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_crate_cache.cpp?ref=579b317ae8e4155c480b0d9426e54f4b98410997", "patch": "@@ -31,40 +31,6 @@ rust_crate_cache::lib::get_handle() {\n     return handle;\n }\n \n-\n-\n-rust_crate_cache::c_sym::c_sym(rust_dom *dom, lib *library, char const *name)\n-    : val(0),\n-      library(library),\n-      dom(dom)\n-{\n-    library->ref();\n-    uintptr_t handle = library->get_handle();\n-    if (handle) {\n-#if defined(__WIN32__)\n-        val = (uintptr_t)GetProcAddress((HMODULE)handle, _T(name));\n-#else\n-        val = (uintptr_t)dlsym((void*)handle, name);\n-#endif\n-        DLOG(dom, cache, \"resolved symbol '%s' to 0x%\"  PRIxPTR,\n-                 name, val);\n-    } else {\n-        DLOG_ERR(dom, cache, \"unresolved symbol '%s', null lib handle\\n\"\n-                             \"(did you omit a -L flag?)\", name);\n-    }\n-}\n-\n-rust_crate_cache::c_sym::~c_sym() {\n-    DLOG(dom, cache,\n-            \"~rust_crate_cache::c_sym(0x%\" PRIxPTR \")\", val);\n-    library->deref();\n-}\n-\n-uintptr_t\n-rust_crate_cache::c_sym::get_val() {\n-    return val;\n-}\n-\n static inline void\n adjust_disp(uintptr_t &disp, const void *oldp, const void *newp)\n {\n@@ -113,32 +79,19 @@ rust_crate_cache::get_type_desc(size_t size,\n \n rust_crate_cache::rust_crate_cache(rust_dom *dom,\n                                    rust_crate const *crate)\n-    : c_syms((c_sym**) dom->calloc(sizeof(c_sym*) * crate->n_c_syms)),\n-      libs((lib**) dom->calloc(sizeof(lib*) * crate->n_libs)),\n+    : libs((lib**) dom->calloc(sizeof(lib*) * crate->n_libs)),\n       type_descs(NULL),\n       crate(crate),\n       dom(dom),\n       idx(0)\n {\n-    I(dom, c_syms);\n     I(dom, libs);\n }\n \n void\n rust_crate_cache::flush() {\n     DLOG(dom, cache, \"rust_crate_cache::flush()\");\n \n-    for (size_t i = 0; i < crate->n_c_syms; ++i) {\n-        c_sym *s = c_syms[i];\n-        if (s) {\n-            DLOG(dom, cache,\n-                     \"rust_crate_cache::flush() deref c_sym %\"\n-                     PRIdPTR \" (rc=%\" PRIdPTR \")\", i, s->ref_count);\n-            s->deref();\n-        }\n-        c_syms[i] = NULL;\n-    }\n-\n     for (size_t i = 0; i < crate->n_libs; ++i) {\n         lib *l = libs[i];\n         if (l) {\n@@ -160,7 +113,6 @@ rust_crate_cache::flush() {\n rust_crate_cache::~rust_crate_cache()\n {\n     flush();\n-    dom->free(c_syms);\n     dom->free(libs);\n }\n "}, {"sha": "38428f93f91e12b8edd2972ff2c9d3306ed56863", "filename": "src/rt/rust_internal.h", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/579b317ae8e4155c480b0d9426e54f4b98410997/src%2Frt%2Frust_internal.h", "raw_url": "https://github.com/rust-lang/rust/raw/579b317ae8e4155c480b0d9426e54f4b98410997/src%2Frt%2Frust_internal.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_internal.h?ref=579b317ae8e4155c480b0d9426e54f4b98410997", "patch": "@@ -240,7 +240,7 @@ class rust_crate {\n public:\n \n     size_t pad6;\n-    size_t n_c_syms;\n+    size_t pad7;\n     size_t n_libs;\n \n     // Crates are immutable, constructed by the compiler.\n@@ -297,26 +297,13 @@ rust_crate_cache : public dom_owned<rust_crate_cache>,\n         ~lib();\n     };\n \n-    class c_sym :\n-        public rc_base<c_sym>, public dom_owned<c_sym>\n-    {\n-        uintptr_t val;\n-        lib *library;\n-    public:\n-        rust_dom *dom;\n-        c_sym(rust_dom *dom, lib *library, char const *name);\n-        uintptr_t get_val();\n-        ~c_sym();\n-    };\n-\n     type_desc *get_type_desc(size_t size,\n                              size_t align,\n                              size_t n_descs,\n                              type_desc const **descs);\n \n private:\n \n-    c_sym **c_syms;\n     lib **libs;\n     type_desc *type_descs;\n "}]}