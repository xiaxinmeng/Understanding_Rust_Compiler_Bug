{"sha": "38c2a730170f94dfb458208c36be154ab5412ec7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4YzJhNzMwMTcwZjk0ZGZiNDU4MjA4YzM2YmUxNTRhYjU0MTJlYzc=", "commit": {"author": {"name": "Sunjay Varma", "email": "varma.sunjay@gmail.com", "date": "2017-11-25T19:42:55Z"}, "committer": {"name": "Sunjay Varma", "email": "varma.sunjay@gmail.com", "date": "2017-12-01T06:26:29Z"}, "message": "Testing and fixes", "tree": {"sha": "940f86ef20c6bcc908bdd43b098758f3503b5d23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/940f86ef20c6bcc908bdd43b098758f3503b5d23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38c2a730170f94dfb458208c36be154ab5412ec7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38c2a730170f94dfb458208c36be154ab5412ec7", "html_url": "https://github.com/rust-lang/rust/commit/38c2a730170f94dfb458208c36be154ab5412ec7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38c2a730170f94dfb458208c36be154ab5412ec7/comments", "author": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c023b3cec1808a4877cdda7b4d1459fc760aef3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c023b3cec1808a4877cdda7b4d1459fc760aef3", "html_url": "https://github.com/rust-lang/rust/commit/1c023b3cec1808a4877cdda7b4d1459fc760aef3"}], "stats": {"total": 65, "additions": 19, "deletions": 46}, "files": [{"sha": "2a80c0a05bfa4072ae2ec846130243345960e1cc", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38c2a730170f94dfb458208c36be154ab5412ec7/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c2a730170f94dfb458208c36be154ab5412ec7/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=38c2a730170f94dfb458208c36be154ab5412ec7", "patch": "@@ -1295,7 +1295,6 @@ impl<'a> Parser<'a> {\n         let (name, node, generics) = if self.eat_keyword(keywords::Type) {\n             let (generics, TyParam {ident, bounds, default, ..}) =\n                 self.parse_trait_item_assoc_ty(vec![])?;\n-            self.expect(&token::Semi)?;\n             (ident, TraitItemKind::Type(bounds, default), generics)\n         } else if self.is_const_item() {\n             self.expect_keyword(keywords::Const)?;\n@@ -4464,6 +4463,7 @@ impl<'a> Parser<'a> {\n         } else {\n             None\n         };\n+        self.expect(&token::Semi)?;\n \n         Ok((generics, TyParam {\n             attrs: preceding_attrs.into(),"}, {"sha": "e2643bafd389772c00c8eaf12295adf78fc699e4", "filename": "src/test/compile-fail/feature-gate-generic_associated_types.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/38c2a730170f94dfb458208c36be154ab5412ec7/src%2Ftest%2Fcompile-fail%2Ffeature-gate-generic_associated_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c2a730170f94dfb458208c36be154ab5412ec7/src%2Ftest%2Fcompile-fail%2Ffeature-gate-generic_associated_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-generic_associated_types.rs?ref=38c2a730170f94dfb458208c36be154ab5412ec7", "patch": "@@ -10,8 +10,15 @@\n \n use std::ops::Deref;\n \n-trait PointerFamily {\n+trait PointerFamily<U> {\n     type Pointer<T>: Deref<Target = T>;\n+    type Pointer2<T>: Deref<Target = T> where T: Clone, U: Clone;\n+}\n+\n+struct Foo;\n+impl PointerFamily<u32> for Foo {\n+    type Pointer<usize> = Box<usize>;\n+    type Pointer2<u32> = Box<u32>;\n }\n \n fn main() {}"}, {"sha": "6cb2aaf47ae3770be7c250c011063f8c7f5ddc19", "filename": "src/test/ui/rfc1598-generic-associated-types/generic_associated_types_equals.rs", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1c023b3cec1808a4877cdda7b4d1459fc760aef3/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric_associated_types_equals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c023b3cec1808a4877cdda7b4d1459fc760aef3/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric_associated_types_equals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric_associated_types_equals.rs?ref=1c023b3cec1808a4877cdda7b4d1459fc760aef3", "patch": "@@ -1,18 +0,0 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![feature(generic_associated_types)]\n-\n-trait Foo {\n-    type Bar<T=usize>;\n-    type X<T> where T = f64;\n-}\n-\n-fn main() {}"}, {"sha": "152c239d8f7493bc78719ca18c7f39e37b0e2089", "filename": "src/test/ui/rfc1598-generic-associated-types/generic_associated_types_equals.stderr", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/1c023b3cec1808a4877cdda7b4d1459fc760aef3/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric_associated_types_equals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1c023b3cec1808a4877cdda7b4d1459fc760aef3/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric_associated_types_equals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric_associated_types_equals.stderr?ref=1c023b3cec1808a4877cdda7b4d1459fc760aef3", "patch": "@@ -1,24 +0,0 @@\n-error: equality constraints are not yet supported in where clauses (#20041)\n-  --> $DIR/generic_associated_types_equals.rs:15:21\n-   |\n-15 |     type X<T> where T = f64;\n-   |                     ^^^^^^^\n-\n-error[E0412]: cannot find type `T` in this scope\n-  --> $DIR/generic_associated_types_equals.rs:15:21\n-   |\n-15 |     type X<T> where T = f64;\n-   |                     ^ not found in this scope\n-\n-error: defaults for type parameters are only allowed in `struct`, `enum`, `type`, or `trait` definitions.\n-  --> $DIR/generic_associated_types_equals.rs:14:14\n-   |\n-14 |     type Bar<T=usize>;\n-   |              ^\n-   |\n-   = note: #[deny(invalid_type_param_default)] on by default\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #36887 <https://github.com/rust-lang/rust/issues/36887>\n-\n-error: aborting due to 3 previous errors\n-"}, {"sha": "a7bdadd195db34be6dc5e4de92425513b1854915", "filename": "src/test/ui/rfc1598-generic-associated-types/parse/in-trait-impl.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/38c2a730170f94dfb458208c36be154ab5412ec7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparse%2Fin-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c2a730170f94dfb458208c36be154ab5412ec7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparse%2Fin-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparse%2Fin-trait-impl.rs?ref=38c2a730170f94dfb458208c36be154ab5412ec7", "patch": "@@ -8,11 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: -Zparse-only\n+// compile-flags: -Z parse-only\n \n #![feature(generic_associated_types)]\n \n impl<T> Baz for T where T: Foo {\n+    //FIXME(sunjay): This should parse successfully\n     type Quux<'a> = <T as Foo>::Bar<'a, 'static>;\n }\n "}, {"sha": "fb239fb2a6e295cfed0ef112090c078245621016", "filename": "src/test/ui/rfc1598-generic-associated-types/parse/in-trait.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/38c2a730170f94dfb458208c36be154ab5412ec7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparse%2Fin-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c2a730170f94dfb458208c36be154ab5412ec7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparse%2Fin-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparse%2Fin-trait.rs?ref=38c2a730170f94dfb458208c36be154ab5412ec7", "patch": "@@ -8,10 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: -Zparse-only\n+// compile-flags: -Z parse-only\n \n #![feature(generic_associated_types)]\n \n+use std::ops::Deref;\n+\n trait Foo {\n     type Bar<'a>;\n     type Bar<'a, 'b>;\n@@ -20,6 +22,11 @@ trait Foo {\n     type Bar<'a, 'b, T, U>;\n     type Bar<'a, 'b, T, U,>;\n     type Bar<'a, 'b, T: Debug, U,>;\n+    type Bar<'a, 'b, T: Debug, U,>: Debug;\n+    type Bar<'a, 'b, T: Debug, U,>: Deref<Target = T> + Into<U>;\n+    type Bar<'a, 'b, T: Debug, U,> where T: Deref<Target = U>, U: Into<T>;\n+    type Bar<'a, 'b, T: Debug, U,>: Deref<Target = T> + Into<U>\n+        where T: Deref<Target = U>, U: Into<T>;\n }\n \n fn main() {}"}]}