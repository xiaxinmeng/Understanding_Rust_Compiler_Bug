{"sha": "409fc2f605a27f9f0b8bfdfe453b76b3edecba61", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwOWZjMmY2MDVhMjdmOWYwYjhiZmRmZTQ1M2I3NmIzZWRlY2JhNjE=", "commit": {"author": {"name": "Wei-Ming Yang", "email": "rick68@users.noreply.github.com", "date": "2015-07-03T19:24:25Z"}, "committer": {"name": "Wei-Ming Yang", "email": "rick68@users.noreply.github.com", "date": "2015-07-03T19:24:25Z"}, "message": "Update atomic.rs\n\nRemove the tagged attribute `stable` from all private functions", "tree": {"sha": "036f89d70e60d861166aed87f3eec2437f45b944", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/036f89d70e60d861166aed87f3eec2437f45b944"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/409fc2f605a27f9f0b8bfdfe453b76b3edecba61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/409fc2f605a27f9f0b8bfdfe453b76b3edecba61", "html_url": "https://github.com/rust-lang/rust/commit/409fc2f605a27f9f0b8bfdfe453b76b3edecba61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/409fc2f605a27f9f0b8bfdfe453b76b3edecba61/comments", "author": {"login": "rick68", "id": 42619, "node_id": "MDQ6VXNlcjQyNjE5", "avatar_url": "https://avatars.githubusercontent.com/u/42619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rick68", "html_url": "https://github.com/rick68", "followers_url": "https://api.github.com/users/rick68/followers", "following_url": "https://api.github.com/users/rick68/following{/other_user}", "gists_url": "https://api.github.com/users/rick68/gists{/gist_id}", "starred_url": "https://api.github.com/users/rick68/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rick68/subscriptions", "organizations_url": "https://api.github.com/users/rick68/orgs", "repos_url": "https://api.github.com/users/rick68/repos", "events_url": "https://api.github.com/users/rick68/events{/privacy}", "received_events_url": "https://api.github.com/users/rick68/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rick68", "id": 42619, "node_id": "MDQ6VXNlcjQyNjE5", "avatar_url": "https://avatars.githubusercontent.com/u/42619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rick68", "html_url": "https://github.com/rick68", "followers_url": "https://api.github.com/users/rick68/followers", "following_url": "https://api.github.com/users/rick68/following{/other_user}", "gists_url": "https://api.github.com/users/rick68/gists{/gist_id}", "starred_url": "https://api.github.com/users/rick68/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rick68/subscriptions", "organizations_url": "https://api.github.com/users/rick68/orgs", "repos_url": "https://api.github.com/users/rick68/repos", "events_url": "https://api.github.com/users/rick68/events{/privacy}", "received_events_url": "https://api.github.com/users/rick68/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "320bd6f8744159739965f896275eceadbe24f370", "url": "https://api.github.com/repos/rust-lang/rust/commits/320bd6f8744159739965f896275eceadbe24f370", "html_url": "https://github.com/rust-lang/rust/commit/320bd6f8744159739965f896275eceadbe24f370"}], "stats": {"total": 9, "additions": 0, "deletions": 9}, "files": [{"sha": "a77df0966431383d92a3bac660a745ff82b2987b", "filename": "src/libcore/atomic.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/409fc2f605a27f9f0b8bfdfe453b76b3edecba61/src%2Flibcore%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/409fc2f605a27f9f0b8bfdfe453b76b3edecba61/src%2Flibcore%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fatomic.rs?ref=409fc2f605a27f9f0b8bfdfe453b76b3edecba61", "patch": "@@ -953,7 +953,6 @@ unsafe fn atomic_store<T>(dst: *mut T, val: T, order:Ordering) {\n }\n \n #[inline]\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n unsafe fn atomic_load<T>(dst: *const T, order:Ordering) -> T {\n     match order {\n         Acquire => intrinsics::atomic_load_acq(dst),\n@@ -965,7 +964,6 @@ unsafe fn atomic_load<T>(dst: *const T, order:Ordering) -> T {\n }\n \n #[inline]\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n unsafe fn atomic_swap<T>(dst: *mut T, val: T, order: Ordering) -> T {\n     match order {\n         Acquire => intrinsics::atomic_xchg_acq(dst, val),\n@@ -978,7 +976,6 @@ unsafe fn atomic_swap<T>(dst: *mut T, val: T, order: Ordering) -> T {\n \n /// Returns the old value (like __sync_fetch_and_add).\n #[inline]\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n unsafe fn atomic_add<T>(dst: *mut T, val: T, order: Ordering) -> T {\n     match order {\n         Acquire => intrinsics::atomic_xadd_acq(dst, val),\n@@ -991,7 +988,6 @@ unsafe fn atomic_add<T>(dst: *mut T, val: T, order: Ordering) -> T {\n \n /// Returns the old value (like __sync_fetch_and_sub).\n #[inline]\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n unsafe fn atomic_sub<T>(dst: *mut T, val: T, order: Ordering) -> T {\n     match order {\n         Acquire => intrinsics::atomic_xsub_acq(dst, val),\n@@ -1003,7 +999,6 @@ unsafe fn atomic_sub<T>(dst: *mut T, val: T, order: Ordering) -> T {\n }\n \n #[inline]\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n unsafe fn atomic_compare_and_swap<T>(dst: *mut T, old:T, new:T, order: Ordering) -> T {\n     match order {\n         Acquire => intrinsics::atomic_cxchg_acq(dst, old, new),\n@@ -1015,7 +1010,6 @@ unsafe fn atomic_compare_and_swap<T>(dst: *mut T, old:T, new:T, order: Ordering)\n }\n \n #[inline]\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n unsafe fn atomic_and<T>(dst: *mut T, val: T, order: Ordering) -> T {\n     match order {\n         Acquire => intrinsics::atomic_and_acq(dst, val),\n@@ -1027,7 +1021,6 @@ unsafe fn atomic_and<T>(dst: *mut T, val: T, order: Ordering) -> T {\n }\n \n #[inline]\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n unsafe fn atomic_nand<T>(dst: *mut T, val: T, order: Ordering) -> T {\n     match order {\n         Acquire => intrinsics::atomic_nand_acq(dst, val),\n@@ -1040,7 +1033,6 @@ unsafe fn atomic_nand<T>(dst: *mut T, val: T, order: Ordering) -> T {\n \n \n #[inline]\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n unsafe fn atomic_or<T>(dst: *mut T, val: T, order: Ordering) -> T {\n     match order {\n         Acquire => intrinsics::atomic_or_acq(dst, val),\n@@ -1053,7 +1045,6 @@ unsafe fn atomic_or<T>(dst: *mut T, val: T, order: Ordering) -> T {\n \n \n #[inline]\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n unsafe fn atomic_xor<T>(dst: *mut T, val: T, order: Ordering) -> T {\n     match order {\n         Acquire => intrinsics::atomic_xor_acq(dst, val),"}]}