{"sha": "62b259cd880d0ff83492fe09d80f944a4806672c", "node_id": "C_kwDOAAsO6NoAKDYyYjI1OWNkODgwZDBmZjgzNDkyZmUwOWQ4MGY5NDRhNDgwNjY3MmM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-20T00:09:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-20T00:09:44Z"}, "message": "Rollup merge of #91044 - r00ster91:x1b, r=joshtriplett\n\nTurn all 0x1b_u8 into '\\x1b' or b'\\x1b'\n\nSupersedes #91040", "tree": {"sha": "0d30c0a2c8678ca5524e0b3587e9121f2491c29a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d30c0a2c8678ca5524e0b3587e9121f2491c29a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62b259cd880d0ff83492fe09d80f944a4806672c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhmDzICRBK7hj4Ov3rIwAAYOIIABqJOPF5FyJhRwiqFQtQ9dab\nrC2Vg9/fAup+RIkX/chM/IvPt0LY2Rkaj5ZGU+DrvoFHgpiQoal/8AF5vXkB90yd\ntpbCu8Z8Jcys3QcGUbAwGZKHJcpMV8ug4eeUB3HKLsZ8vHpYZUUEu3EbIgLvPfQi\nJ6R1NAFzBJD+kZNwd/l/57BXiS/djmleCwUGKUZ22zwLWnZLtRJOAaM8Hb0E4opO\nXmZjVUWG9kAwhZ/eZhLWMXpj+B9cGTHbl1hdgplxvFtNqHXMUtQ3aaOT1W4j6VfK\nRM0gSbbRNwDRcGjMyoa6Rm/FmCPKMOjHCFdTYmdOvhWp5eKPMUdXjjjb5ivG/UM=\n=Hje0\n-----END PGP SIGNATURE-----\n", "payload": "tree 0d30c0a2c8678ca5524e0b3587e9121f2491c29a\nparent 98540c6805d18da3f1a89e02e8de919248d5e608\nparent a2d78573d396f8bf27da3ae0f2531ecb8649639c\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1637366984 +0100\ncommitter GitHub <noreply@github.com> 1637366984 +0100\n\nRollup merge of #91044 - r00ster91:x1b, r=joshtriplett\n\nTurn all 0x1b_u8 into '\\x1b' or b'\\x1b'\n\nSupersedes #91040\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62b259cd880d0ff83492fe09d80f944a4806672c", "html_url": "https://github.com/rust-lang/rust/commit/62b259cd880d0ff83492fe09d80f944a4806672c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62b259cd880d0ff83492fe09d80f944a4806672c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98540c6805d18da3f1a89e02e8de919248d5e608", "url": "https://api.github.com/repos/rust-lang/rust/commits/98540c6805d18da3f1a89e02e8de919248d5e608", "html_url": "https://github.com/rust-lang/rust/commit/98540c6805d18da3f1a89e02e8de919248d5e608"}, {"sha": "a2d78573d396f8bf27da3ae0f2531ecb8649639c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2d78573d396f8bf27da3ae0f2531ecb8649639c", "html_url": "https://github.com/rust-lang/rust/commit/a2d78573d396f8bf27da3ae0f2531ecb8649639c"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "7250dca2adfe45bd1d55b7e27105b6a00c0a6283", "filename": "library/core/src/char/methods.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/62b259cd880d0ff83492fe09d80f944a4806672c/library%2Fcore%2Fsrc%2Fchar%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62b259cd880d0ff83492fe09d80f944a4806672c/library%2Fcore%2Fsrc%2Fchar%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fchar%2Fmethods.rs?ref=62b259cd880d0ff83492fe09d80f944a4806672c", "patch": "@@ -1250,7 +1250,7 @@ impl char {\n     /// let percent = '%';\n     /// let space = ' ';\n     /// let lf = '\\n';\n-    /// let esc: char = 0x1b_u8.into();\n+    /// let esc = '\\x1b';\n     ///\n     /// assert!(uppercase_a.is_ascii_alphabetic());\n     /// assert!(uppercase_g.is_ascii_alphabetic());\n@@ -1284,7 +1284,7 @@ impl char {\n     /// let percent = '%';\n     /// let space = ' ';\n     /// let lf = '\\n';\n-    /// let esc: char = 0x1b_u8.into();\n+    /// let esc = '\\x1b';\n     ///\n     /// assert!(uppercase_a.is_ascii_uppercase());\n     /// assert!(uppercase_g.is_ascii_uppercase());\n@@ -1318,7 +1318,7 @@ impl char {\n     /// let percent = '%';\n     /// let space = ' ';\n     /// let lf = '\\n';\n-    /// let esc: char = 0x1b_u8.into();\n+    /// let esc = '\\x1b';\n     ///\n     /// assert!(!uppercase_a.is_ascii_lowercase());\n     /// assert!(!uppercase_g.is_ascii_lowercase());\n@@ -1355,7 +1355,7 @@ impl char {\n     /// let percent = '%';\n     /// let space = ' ';\n     /// let lf = '\\n';\n-    /// let esc: char = 0x1b_u8.into();\n+    /// let esc = '\\x1b';\n     ///\n     /// assert!(uppercase_a.is_ascii_alphanumeric());\n     /// assert!(uppercase_g.is_ascii_alphanumeric());\n@@ -1389,7 +1389,7 @@ impl char {\n     /// let percent = '%';\n     /// let space = ' ';\n     /// let lf = '\\n';\n-    /// let esc: char = 0x1b_u8.into();\n+    /// let esc = '\\x1b';\n     ///\n     /// assert!(!uppercase_a.is_ascii_digit());\n     /// assert!(!uppercase_g.is_ascii_digit());\n@@ -1426,7 +1426,7 @@ impl char {\n     /// let percent = '%';\n     /// let space = ' ';\n     /// let lf = '\\n';\n-    /// let esc: char = 0x1b_u8.into();\n+    /// let esc = '\\x1b';\n     ///\n     /// assert!(uppercase_a.is_ascii_hexdigit());\n     /// assert!(!uppercase_g.is_ascii_hexdigit());\n@@ -1464,7 +1464,7 @@ impl char {\n     /// let percent = '%';\n     /// let space = ' ';\n     /// let lf = '\\n';\n-    /// let esc: char = 0x1b_u8.into();\n+    /// let esc = '\\x1b';\n     ///\n     /// assert!(!uppercase_a.is_ascii_punctuation());\n     /// assert!(!uppercase_g.is_ascii_punctuation());\n@@ -1498,7 +1498,7 @@ impl char {\n     /// let percent = '%';\n     /// let space = ' ';\n     /// let lf = '\\n';\n-    /// let esc: char = 0x1b_u8.into();\n+    /// let esc = '\\x1b';\n     ///\n     /// assert!(uppercase_a.is_ascii_graphic());\n     /// assert!(uppercase_g.is_ascii_graphic());\n@@ -1549,7 +1549,7 @@ impl char {\n     /// let percent = '%';\n     /// let space = ' ';\n     /// let lf = '\\n';\n-    /// let esc: char = 0x1b_u8.into();\n+    /// let esc = '\\x1b';\n     ///\n     /// assert!(!uppercase_a.is_ascii_whitespace());\n     /// assert!(!uppercase_g.is_ascii_whitespace());\n@@ -1585,7 +1585,7 @@ impl char {\n     /// let percent = '%';\n     /// let space = ' ';\n     /// let lf = '\\n';\n-    /// let esc: char = 0x1b_u8.into();\n+    /// let esc = '\\x1b';\n     ///\n     /// assert!(!uppercase_a.is_ascii_control());\n     /// assert!(!uppercase_g.is_ascii_control());"}, {"sha": "e3eab07b9df6d7e63ee64cbad51a79c36acd4f3e", "filename": "library/core/src/num/mod.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/62b259cd880d0ff83492fe09d80f944a4806672c/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62b259cd880d0ff83492fe09d80f944a4806672c/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs?ref=62b259cd880d0ff83492fe09d80f944a4806672c", "patch": "@@ -428,7 +428,7 @@ impl u8 {\n     /// let percent = b'%';\n     /// let space = b' ';\n     /// let lf = b'\\n';\n-    /// let esc = 0x1b_u8;\n+    /// let esc = b'\\x1b';\n     ///\n     /// assert!(uppercase_a.is_ascii_alphabetic());\n     /// assert!(uppercase_g.is_ascii_alphabetic());\n@@ -462,7 +462,7 @@ impl u8 {\n     /// let percent = b'%';\n     /// let space = b' ';\n     /// let lf = b'\\n';\n-    /// let esc = 0x1b_u8;\n+    /// let esc = b'\\x1b';\n     ///\n     /// assert!(uppercase_a.is_ascii_uppercase());\n     /// assert!(uppercase_g.is_ascii_uppercase());\n@@ -496,7 +496,7 @@ impl u8 {\n     /// let percent = b'%';\n     /// let space = b' ';\n     /// let lf = b'\\n';\n-    /// let esc = 0x1b_u8;\n+    /// let esc = b'\\x1b';\n     ///\n     /// assert!(!uppercase_a.is_ascii_lowercase());\n     /// assert!(!uppercase_g.is_ascii_lowercase());\n@@ -533,7 +533,7 @@ impl u8 {\n     /// let percent = b'%';\n     /// let space = b' ';\n     /// let lf = b'\\n';\n-    /// let esc = 0x1b_u8;\n+    /// let esc = b'\\x1b';\n     ///\n     /// assert!(uppercase_a.is_ascii_alphanumeric());\n     /// assert!(uppercase_g.is_ascii_alphanumeric());\n@@ -567,7 +567,7 @@ impl u8 {\n     /// let percent = b'%';\n     /// let space = b' ';\n     /// let lf = b'\\n';\n-    /// let esc = 0x1b_u8;\n+    /// let esc = b'\\x1b';\n     ///\n     /// assert!(!uppercase_a.is_ascii_digit());\n     /// assert!(!uppercase_g.is_ascii_digit());\n@@ -604,7 +604,7 @@ impl u8 {\n     /// let percent = b'%';\n     /// let space = b' ';\n     /// let lf = b'\\n';\n-    /// let esc = 0x1b_u8;\n+    /// let esc = b'\\x1b';\n     ///\n     /// assert!(uppercase_a.is_ascii_hexdigit());\n     /// assert!(!uppercase_g.is_ascii_hexdigit());\n@@ -642,7 +642,7 @@ impl u8 {\n     /// let percent = b'%';\n     /// let space = b' ';\n     /// let lf = b'\\n';\n-    /// let esc = 0x1b_u8;\n+    /// let esc = b'\\x1b';\n     ///\n     /// assert!(!uppercase_a.is_ascii_punctuation());\n     /// assert!(!uppercase_g.is_ascii_punctuation());\n@@ -676,7 +676,7 @@ impl u8 {\n     /// let percent = b'%';\n     /// let space = b' ';\n     /// let lf = b'\\n';\n-    /// let esc = 0x1b_u8;\n+    /// let esc = b'\\x1b';\n     ///\n     /// assert!(uppercase_a.is_ascii_graphic());\n     /// assert!(uppercase_g.is_ascii_graphic());\n@@ -727,7 +727,7 @@ impl u8 {\n     /// let percent = b'%';\n     /// let space = b' ';\n     /// let lf = b'\\n';\n-    /// let esc = 0x1b_u8;\n+    /// let esc = b'\\x1b';\n     ///\n     /// assert!(!uppercase_a.is_ascii_whitespace());\n     /// assert!(!uppercase_g.is_ascii_whitespace());\n@@ -763,7 +763,7 @@ impl u8 {\n     /// let percent = b'%';\n     /// let space = b' ';\n     /// let lf = b'\\n';\n-    /// let esc = 0x1b_u8;\n+    /// let esc = b'\\x1b';\n     ///\n     /// assert!(!uppercase_a.is_ascii_control());\n     /// assert!(!uppercase_g.is_ascii_control());"}]}