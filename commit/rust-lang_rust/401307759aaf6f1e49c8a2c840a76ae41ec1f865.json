{"sha": "401307759aaf6f1e49c8a2c840a76ae41ec1f865", "node_id": "C_kwDOAAsO6NoAKDQwMTMwNzc1OWFhZjZmMWU0OWM4YTJjODQwYTc2YWU0MWVjMWY4NjU", "commit": {"author": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2022-02-12T17:28:19Z"}, "committer": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2022-02-12T17:28:19Z"}, "message": "make fastcall-inreg and riscv64-lp64-lp64f-lp64d-abi tests able to run on any host platform (with the right llvm components)", "tree": {"sha": "476b23d1a6855e7e566faa6dbb0fd79c387d25ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/476b23d1a6855e7e566faa6dbb0fd79c387d25ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/401307759aaf6f1e49c8a2c840a76ae41ec1f865", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/401307759aaf6f1e49c8a2c840a76ae41ec1f865", "html_url": "https://github.com/rust-lang/rust/commit/401307759aaf6f1e49c8a2c840a76ae41ec1f865", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/401307759aaf6f1e49c8a2c840a76ae41ec1f865/comments", "author": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae877003ec0d1941992a86996630df947582990e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae877003ec0d1941992a86996630df947582990e", "html_url": "https://github.com/rust-lang/rust/commit/ae877003ec0d1941992a86996630df947582990e"}], "stats": {"total": 77, "additions": 21, "deletions": 56}, "files": [{"sha": "ec7a67915928646f87ebe1bbae7159b7850fc762", "filename": "src/test/codegen/fastcall-inreg.rs", "status": "modified", "additions": 9, "deletions": 44, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/401307759aaf6f1e49c8a2c840a76ae41ec1f865/src%2Ftest%2Fcodegen%2Ffastcall-inreg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/401307759aaf6f1e49c8a2c840a76ae41ec1f865/src%2Ftest%2Fcodegen%2Ffastcall-inreg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Ffastcall-inreg.rs?ref=401307759aaf6f1e49c8a2c840a76ae41ec1f865", "patch": "@@ -2,52 +2,17 @@\n // as \"inreg\" like the C/C++ compilers for the platforms.\n // x86 only.\n \n-// ignore-aarch64\n-// ignore-aarch64_be\n-// ignore-arm\n-// ignore-armeb\n-// ignore-avr\n-// ignore-bpfel\n-// ignore-bpfeb\n-// ignore-hexagon\n-// ignore-mips\n-// ignore-mips64\n-// ignore-msp430\n-// ignore-powerpc64\n-// ignore-powerpc64le\n-// ignore-powerpc\n-// ignore-r600\n-// ignore-riscv64\n-// ignore-amdgcn\n-// ignore-sparc\n-// ignore-sparc64\n-// ignore-sparcv9\n-// ignore-sparcel\n-// ignore-s390x\n-// ignore-tce\n-// ignore-thumb\n-// ignore-thumbeb\n-// ignore-x86_64\n-// ignore-xcore\n-// ignore-nvptx\n-// ignore-nvptx64\n-// ignore-le32\n-// ignore-le64\n-// ignore-amdil\n-// ignore-amdil64\n-// ignore-hsail\n-// ignore-hsail64\n-// ignore-spir\n-// ignore-spir64\n-// ignore-kalimba\n-// ignore-shave\n-// ignore-wasm32\n-// ignore-wasm64\n-// ignore-emscripten\n-\n-// compile-flags: -C no-prepopulate-passes\n+// compile-flags: --target i686-unknown-linux-gnu -C no-prepopulate-passes\n+// needs-llvm-components: x86\n \n #![crate_type = \"lib\"]\n+#![no_core]\n+#![feature(no_core, lang_items)]\n+\n+#[lang = \"sized\"]\n+trait Sized {}\n+#[lang = \"copy\"]\n+trait Copy {}\n \n pub mod tests {\n     // CHECK: @f1(i32 inreg %_1, i32 inreg %_2, i32 %_3)"}, {"sha": "c67406ea69338b1242040abe534e6057ce0edc6c", "filename": "src/test/codegen/riscv-abi/riscv64-lp64-lp64f-lp64d-abi.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/401307759aaf6f1e49c8a2c840a76ae41ec1f865/src%2Ftest%2Fcodegen%2Friscv-abi%2Friscv64-lp64-lp64f-lp64d-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/401307759aaf6f1e49c8a2c840a76ae41ec1f865/src%2Ftest%2Fcodegen%2Friscv-abi%2Friscv64-lp64-lp64f-lp64d-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Friscv-abi%2Friscv64-lp64-lp64f-lp64d-abi.rs?ref=401307759aaf6f1e49c8a2c840a76ae41ec1f865", "patch": "@@ -1,10 +1,16 @@\n-//\n-// compile-flags: -C no-prepopulate-passes\n-// only-riscv64\n-// only-linux\n+// compile-flags: --target riscv64gc-unknown-linux-gnu -C no-prepopulate-passes\n+// needs-llvm-components: riscv\n+\n #![crate_type = \"lib\"]\n+#![no_core]\n+#![feature(no_core, lang_items)]\n #![allow(improper_ctypes)]\n \n+#[lang = \"sized\"]\n+trait Sized {}\n+#[lang = \"copy\"]\n+trait Copy {}\n+\n // CHECK: define void @f_void()\n #[no_mangle]\n pub extern \"C\" fn f_void() {}\n@@ -70,8 +76,6 @@ pub struct Tiny {\n // CHECK: define void @f_agg_tiny(i64 %0)\n #[no_mangle]\n pub extern \"C\" fn f_agg_tiny(mut e: Tiny) {\n-    e.a += e.b;\n-    e.c += e.d;\n }\n \n // CHECK: define i64 @f_agg_tiny_ret()\n@@ -89,14 +93,12 @@ pub struct Small {\n // CHECK: define void @f_agg_small([2 x i64] %0)\n #[no_mangle]\n pub extern \"C\" fn f_agg_small(mut x: Small) {\n-    x.a += unsafe { *x.b };\n-    x.b = &mut x.a;\n }\n \n // CHECK: define [2 x i64] @f_agg_small_ret()\n #[no_mangle]\n pub extern \"C\" fn f_agg_small_ret() -> Small {\n-    Small { a: 1, b: core::ptr::null_mut() }\n+    Small { a: 1, b: 0 as *mut _ }\n }\n \n #[repr(C)]\n@@ -107,7 +109,6 @@ pub struct SmallAligned {\n // CHECK: define void @f_agg_small_aligned(i128 %0)\n #[no_mangle]\n pub extern \"C\" fn f_agg_small_aligned(mut x: SmallAligned) {\n-    x.a += x.a;\n }\n \n #[repr(C)]\n@@ -121,7 +122,6 @@ pub struct Large {\n // CHECK: define void @f_agg_large(%Large* {{.*}}%x)\n #[no_mangle]\n pub extern \"C\" fn f_agg_large(mut x: Large) {\n-    x.a = x.b + x.c + x.d;\n }\n \n // CHECK: define void @f_agg_large_ret(%Large* {{.*}}sret{{.*}}, i32 signext %i, i8 signext %j)\n@@ -172,7 +172,7 @@ pub unsafe extern \"C\" fn f_va_caller() {\n         4.0f64,\n         5.0f64,\n         Tiny { a: 1, b: 2, c: 3, d: 4 },\n-        Small { a: 10, b: core::ptr::null_mut() },\n+        Small { a: 10, b: 0 as *mut _ },\n         SmallAligned { a: 11 },\n         Large { a: 12, b: 13, c: 14, d: 15 },\n     );"}]}