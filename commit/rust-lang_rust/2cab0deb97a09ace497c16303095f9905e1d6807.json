{"sha": "2cab0deb97a09ace497c16303095f9905e1d6807", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYWIwZGViOTdhMDlhY2U0OTdjMTYzMDMwOTVmOTkwNWUxZDY4MDc=", "commit": {"author": {"name": "\u0410\u0440\u0442\u0451\u043c \u041f\u0430\u0432\u043b\u043e\u0432 [Artyom Pavlov]", "email": "newpavlov@gmail.com", "date": "2018-07-31T01:07:11Z"}, "committer": {"name": "\u0410\u0440\u0442\u0451\u043c \u041f\u0430\u0432\u043b\u043e\u0432 [Artyom Pavlov]", "email": "newpavlov@gmail.com", "date": "2018-07-31T01:07:11Z"}, "message": "don't duplicate impls", "tree": {"sha": "3e559e61757c6dcc9426906fbc719e2558eb848c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e559e61757c6dcc9426906fbc719e2558eb848c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cab0deb97a09ace497c16303095f9905e1d6807", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJbX7Y/AAoJEBOpOZ+3fjNcxCMQAJlt39UDptTXqKmXELVpKfp4\nZLH7pufibL24MwQ7mWXh6MswhemyMjb/iLAfKIqDseRlVEqNJnv5Dtmhz8rQ/Z6W\nB9N6E6oG6e6GcSfaHLsVd7Ckhs+bQ4QFzA0pdXhqujJZ8LCGz/PwYoB8ISlHu8AE\nqkUSzNVUKAVUd5bYHMlwaHzPfzebKpbRBDC22GW0jPYcZa7HT8QQ6VYKUQBpcheU\nkdu6LYAXBQpIeuDIBiIRbTLWClZ93ULs6XREG23v+amDq6vgAZG1h+yRQLRPxhF1\nfozAa0jpW2vN1QT19eq0Ou6KPDQkv3tRrrvkvkWyFuwE6w/WVaZP4u6lB1OONW+P\nGKcGC7p7KS0PPtVOPQQ5ySoLRZ9QJEWcweR+ZFSqJ2JHKEKb6yj6K42d/rn3eAfX\nXRY76Er+ILvoNEDmuL9Kr3jwhgom6/CG95ThyB8PR6IM9g5g6/mLYkDM3gZh0+FX\nnyFEJ5FzYuujOBQ3AnR+EJPNmtBucV+EReDNaorLyz4nZX8hYwwfWglH94xt0fDY\nvtZLhl6yU1XzzHMZrEnaWxCGWpiSGn1Qxa/eicmIn7GOOlFEvo5DvoMTNABrBCeD\nlAmptHclFkEti5zyvrGNruoabAKRHTBMCsNCl5Saq3YjNAloG/tiXA1u4x76mrFe\nktMGnpTZAxg7xV3foPoa\n=cYWv\n-----END PGP SIGNATURE-----", "payload": "tree 3e559e61757c6dcc9426906fbc719e2558eb848c\nparent 2c300fa15b65e75ca07ada06819502ced7d80882\nauthor \u0410\u0440\u0442\u0451\u043c \u041f\u0430\u0432\u043b\u043e\u0432 [Artyom Pavlov] <newpavlov@gmail.com> 1532999231 +0300\ncommitter \u0410\u0440\u0442\u0451\u043c \u041f\u0430\u0432\u043b\u043e\u0432 [Artyom Pavlov] <newpavlov@gmail.com> 1532999231 +0300\n\ndon't duplicate impls\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cab0deb97a09ace497c16303095f9905e1d6807", "html_url": "https://github.com/rust-lang/rust/commit/2cab0deb97a09ace497c16303095f9905e1d6807", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cab0deb97a09ace497c16303095f9905e1d6807/comments", "author": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c300fa15b65e75ca07ada06819502ced7d80882", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c300fa15b65e75ca07ada06819502ced7d80882", "html_url": "https://github.com/rust-lang/rust/commit/2c300fa15b65e75ca07ada06819502ced7d80882"}], "stats": {"total": 19, "additions": 2, "deletions": 17}, "files": [{"sha": "fff47ac44ef69e1db483c86ddcabe2dde6c31773", "filename": "src/libcore/time.rs", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2cab0deb97a09ace497c16303095f9905e1d6807/src%2Flibcore%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cab0deb97a09ace497c16303095f9905e1d6807/src%2Flibcore%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftime.rs?ref=2cab0deb97a09ace497c16303095f9905e1d6807", "patch": "@@ -507,7 +507,7 @@ impl Mul<Duration> for u32 {\n     type Output = Duration;\n \n     fn mul(self, rhs: Duration) -> Duration {\n-        rhs.checked_mul(self).expect(\"overflow when multiplying scalar by duration\")\n+        rhs * self\n     }\n }\n \n@@ -540,22 +540,7 @@ impl Mul<Duration> for f64 {\n     type Output = Duration;\n \n     fn mul(self, rhs: Duration) -> Duration {\n-        const NPS: f64 = NANOS_PER_SEC as f64;\n-        let nanos_f64 = self * (NPS * (rhs.secs as f64) + (rhs.nanos as f64));\n-        if !nanos_f64.is_finite() {\n-            panic!(\"got non-finite value when multiplying float by duration\");\n-        }\n-        if nanos_f64 > MAX_NANOS_F64 {\n-            panic!(\"overflow when multiplying float by duration\");\n-        }\n-        if nanos_f64 < 0.0 {\n-            panic!(\"underflow when multiplying float by duration\");\n-        }\n-        let nanos_u128 = nanos_f64 as u128;\n-        Duration {\n-            secs: (nanos_u128 / (NANOS_PER_SEC as u128)) as u64,\n-            nanos: (nanos_u128 % (NANOS_PER_SEC as u128)) as u32,\n-        }\n+        rhs * self\n     }\n }\n "}]}