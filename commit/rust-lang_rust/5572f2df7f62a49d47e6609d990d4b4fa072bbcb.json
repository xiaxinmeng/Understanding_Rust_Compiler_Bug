{"sha": "5572f2df7f62a49d47e6609d990d4b4fa072bbcb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1NzJmMmRmN2Y2MmE0OWQ0N2U2NjA5ZDk5MGQ0YjRmYTA3MmJiY2I=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-10-26T15:09:31Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-10-26T15:09:31Z"}, "message": "Rollup merge of #55264 - michaelwoerister:single-cgu-std, r=simulacrum\n\nCompile the libstd we distribute with -Ccodegen-unit=1\n\nThis PR\n - adds the `single-codegen-unit-std` option to `config.toml` which allows for setting the CGU count for `libstd` and `libtest` independently of the one for the rest of the compiler, and\n - sets the new option to `true` for all dist jobs in CI.\n\nFixes #54872.", "tree": {"sha": "45ad6972478248ac5e6368e89cdee9a5d913410d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45ad6972478248ac5e6368e89cdee9a5d913410d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5572f2df7f62a49d47e6609d990d4b4fa072bbcb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlvTLisACgkQ/vbIBR0O\nATwceBAAllW59fnINApHC3r6j0a9/U8Hv1XDajNaYS8QgkwH+TsqzM5ZZIjonmva\nLsDWKxnDfQ5lVo3i/SSMyRJix5prpa2sbanJ3quWkYyr3JE92hlowaS64VI8Hi9V\nurRi84QHnU9ltt5Nv2Oiby3nQdo1FuRybJSQHAZwV5+RtPwvZRIpQMF2MxT0o8aE\n+ca9Y9Wez0GoZlpvDL6Ml7lFtRDrAtHW3ig9wADrMKZVu7qvQ8U5JCiHRQllulBH\nrBxobka3Z7gYWBLYjesknR1wxfWKnJ9yP/Yo5Egc57YQu7TnOKU40IvbHICTqKek\no/i4Y/vsuV0faiq+EPT+Sj4COizHsW1Cf/vYVr4oQwFPNGX1b4gFyZcP+u+rdzTb\ng9MoNmXfo5e/8owII+NLWNrai/nf5DiX8d+RH19Xh3RZIbiwMWBa3YAU6EWT47th\nQaZePteL4Gc44ajw97SzHQ9e7m5furW6TTcV7j1ZK1QPU4DOU707O5fXk3sq19mp\nOYccGhrZzgd1qCXj2PblDHVyX/6ynToIZPzeVd6KnpXFkf/kXSNG7biEO3B4Ocll\nOZE6uHJKSbwzBvFVLSbpXjHlv0pLSnQ6jFH3eP0AuYqozukYLEQBYNtXIojFDzMX\nTJ+DEhm5p75J+eLmdRaTQIIevUWXD5OULy0Es+8L1IGAUdh6XPA=\n=tc2F\n-----END PGP SIGNATURE-----", "payload": "tree 45ad6972478248ac5e6368e89cdee9a5d913410d\nparent 3faffa2e94045c5543d7fb107f39518375b0aa4f\nparent 5dedf0cead430d2cfef6e3957c26d066fb1a40eb\nauthor kennytm <kennytm@gmail.com> 1540566571 +0800\ncommitter kennytm <kennytm@gmail.com> 1540566571 +0800\n\nRollup merge of #55264 - michaelwoerister:single-cgu-std, r=simulacrum\n\nCompile the libstd we distribute with -Ccodegen-unit=1\n\nThis PR\n - adds the `single-codegen-unit-std` option to `config.toml` which allows for setting the CGU count for `libstd` and `libtest` independently of the one for the rest of the compiler, and\n - sets the new option to `true` for all dist jobs in CI.\n\nFixes #54872.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5572f2df7f62a49d47e6609d990d4b4fa072bbcb", "html_url": "https://github.com/rust-lang/rust/commit/5572f2df7f62a49d47e6609d990d4b4fa072bbcb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5572f2df7f62a49d47e6609d990d4b4fa072bbcb/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3faffa2e94045c5543d7fb107f39518375b0aa4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3faffa2e94045c5543d7fb107f39518375b0aa4f", "html_url": "https://github.com/rust-lang/rust/commit/3faffa2e94045c5543d7fb107f39518375b0aa4f"}, {"sha": "5dedf0cead430d2cfef6e3957c26d066fb1a40eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dedf0cead430d2cfef6e3957c26d066fb1a40eb", "html_url": "https://github.com/rust-lang/rust/commit/5dedf0cead430d2cfef6e3957c26d066fb1a40eb"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "093b8f9e526eca8778e43293a3614e0bc70f1fae", "filename": "config.toml.example", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5572f2df7f62a49d47e6609d990d4b4fa072bbcb/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/5572f2df7f62a49d47e6609d990d4b4fa072bbcb/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=5572f2df7f62a49d47e6609d990d4b4fa072bbcb", "patch": "@@ -277,6 +277,10 @@\n # compiler.\n #codegen-units = 1\n \n+# Sets the number of codegen units to build the standard library with,\n+# regardless of what the codegen-unit setting for the rest of the compiler is.\n+#codegen-units-std = 1\n+\n # Whether or not debug assertions are enabled for the compiler and standard\n # library. Also enables compilation of debug! and trace! logging macros.\n #debug-assertions = false"}, {"sha": "5abc0455b587186d67292fee50ade8874e91ee2b", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5572f2df7f62a49d47e6609d990d4b4fa072bbcb/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5572f2df7f62a49d47e6609d990d4b4fa072bbcb/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=5572f2df7f62a49d47e6609d990d4b4fa072bbcb", "patch": "@@ -1119,10 +1119,15 @@ impl<'a> Builder<'a> {\n             cargo.arg(\"-v\");\n         }\n \n-        // This must be kept before the thinlto check, as we set codegen units\n-        // to 1 forcibly there.\n-        if let Some(n) = self.config.rust_codegen_units {\n-            cargo.env(\"RUSTC_CODEGEN_UNITS\", n.to_string());\n+        match (mode, self.config.rust_codegen_units_std, self.config.rust_codegen_units) {\n+            (Mode::Std, Some(n), _) |\n+            (Mode::Test, Some(n), _) |\n+            (_, _, Some(n)) => {\n+                cargo.env(\"RUSTC_CODEGEN_UNITS\", n.to_string());\n+            }\n+            _ => {\n+                // Don't set anything\n+            }\n         }\n \n         if self.config.rust_optimize {"}, {"sha": "3eb6e8d84e877fdfe8a4665b72718a7141b8498d", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5572f2df7f62a49d47e6609d990d4b4fa072bbcb/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5572f2df7f62a49d47e6609d990d4b4fa072bbcb/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=5572f2df7f62a49d47e6609d990d4b4fa072bbcb", "patch": "@@ -95,6 +95,7 @@ pub struct Config {\n     // rust codegen options\n     pub rust_optimize: bool,\n     pub rust_codegen_units: Option<u32>,\n+    pub rust_codegen_units_std: Option<u32>,\n     pub rust_debug_assertions: bool,\n     pub rust_debuginfo: bool,\n     pub rust_debuginfo_lines: bool,\n@@ -294,6 +295,7 @@ impl Default for StringOrBool {\n struct Rust {\n     optimize: Option<bool>,\n     codegen_units: Option<u32>,\n+    codegen_units_std: Option<u32>,\n     debug_assertions: Option<bool>,\n     debuginfo: Option<bool>,\n     debuginfo_lines: Option<bool>,\n@@ -580,6 +582,8 @@ impl Config {\n                 Some(n) => config.rust_codegen_units = Some(n),\n                 None => {}\n             }\n+\n+            config.rust_codegen_units_std = rust.codegen_units_std;\n         }\n \n         if let Some(ref t) = toml.target {"}, {"sha": "ddb894eb1f6597be1c166cdb6d8176e8804121c1", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5572f2df7f62a49d47e6609d990d4b4fa072bbcb/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/5572f2df7f62a49d47e6609d990d4b4fa072bbcb/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=5572f2df7f62a49d47e6609d990d4b4fa072bbcb", "patch": "@@ -393,6 +393,13 @@ def set(key, value):\n     targets[target][0] = targets[target][0].replace(\"x86_64-unknown-linux-gnu\", target)\n \n \n+def is_number(value):\n+  try:\n+    float(value)\n+    return True\n+  except:\n+    return False\n+\n # Here we walk through the constructed configuration we have from the parsed\n # command line arguments. We then apply each piece of configuration by\n # basically just doing a `sed` to change the various configuration line to what\n@@ -406,7 +413,11 @@ def to_toml(value):\n     elif isinstance(value, list):\n         return '[' + ', '.join(map(to_toml, value)) + ']'\n     elif isinstance(value, str):\n-        return \"'\" + value + \"'\"\n+        # Don't put quotes around numeric values\n+        if is_number(value):\n+            return value\n+        else:\n+            return \"'\" + value + \"'\"\n     else:\n         raise RuntimeError('no toml')\n "}, {"sha": "8e0eb8fec43256a7060375270ffc52b978c82a50", "filename": "src/ci/run.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5572f2df7f62a49d47e6609d990d4b4fa072bbcb/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/5572f2df7f62a49d47e6609d990d4b4fa072bbcb/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=5572f2df7f62a49d47e6609d990d4b4fa072bbcb", "patch": "@@ -40,6 +40,7 @@ RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-sccache\"\n RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --disable-manage-submodules\"\n RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-locked-deps\"\n RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-cargo-native-static\"\n+RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --set rust.codegen-units-std=1\"\n \n if [ \"$DIST_SRC\" = \"\" ]; then\n   RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --disable-dist-src\""}]}