{"sha": "d7e42cc61c122c24a2503d7deebdaf00cb2aea23", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ZTQyY2M2MWMxMjJjMjRhMjUwM2Q3ZGVlYmRhZjAwY2IyYWVhMjM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-03T23:38:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-03T23:38:50Z"}, "message": "Rollup merge of #62268 - Zoxc:inherent_impls, r=eddyb\n\nClean up inherent_impls\n\nSplit out from https://github.com/rust-lang/rust/pull/61923.\n\nr? @eddyb", "tree": {"sha": "2aaa155dc6d78fc25e5028801673132c9c3ac858", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2aaa155dc6d78fc25e5028801673132c9c3ac858"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7e42cc61c122c24a2503d7deebdaf00cb2aea23", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdHTyKCRBK7hj4Ov3rIwAAdHIIAAfdnGWnGWnoZxuy+DhQtAP8\nx2TmLEhGHJScSz/nlF4/IsRd+RUq5KHHAFVXS3gaTozPuoNNNKbxOZB5wGSQJQzC\nIeJxYAeT3YhG+r1TnriR48tKF+0dnlUUcXjHG4UFkkCtxlmwkuhDjDKrlxfcD9ZL\nhf2+/y6MDu6mILpRA4xAnokJBM/PhF04JWdIp+UnGLv6o02HODxhJpaRxVat1CqP\nOWmeHP2eBc05iSqjLuVJi/3iC62xU0A3fnmVtGgP24JRGc3i3F3BpPw7XHRGtVSw\nEi6/Wy01PVSe2q4ruOKI+dDunwx+85SgWrH/W9DoJnFh/A62LRXAqCjbFHY98yU=\n=94QP\n-----END PGP SIGNATURE-----\n", "payload": "tree 2aaa155dc6d78fc25e5028801673132c9c3ac858\nparent 8867ba19de71f437956440eeda9cd45ca8f1dc8f\nparent 8d6b1d10d48c3d189718c46c3b6441c2b7a0598b\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1562197130 +0200\ncommitter GitHub <noreply@github.com> 1562197130 +0200\n\nRollup merge of #62268 - Zoxc:inherent_impls, r=eddyb\n\nClean up inherent_impls\n\nSplit out from https://github.com/rust-lang/rust/pull/61923.\n\nr? @eddyb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7e42cc61c122c24a2503d7deebdaf00cb2aea23", "html_url": "https://github.com/rust-lang/rust/commit/d7e42cc61c122c24a2503d7deebdaf00cb2aea23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7e42cc61c122c24a2503d7deebdaf00cb2aea23/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8867ba19de71f437956440eeda9cd45ca8f1dc8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8867ba19de71f437956440eeda9cd45ca8f1dc8f", "html_url": "https://github.com/rust-lang/rust/commit/8867ba19de71f437956440eeda9cd45ca8f1dc8f"}, {"sha": "8d6b1d10d48c3d189718c46c3b6441c2b7a0598b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d6b1d10d48c3d189718c46c3b6441c2b7a0598b", "html_url": "https://github.com/rust-lang/rust/commit/8d6b1d10d48c3d189718c46c3b6441c2b7a0598b"}], "stats": {"total": 33, "additions": 4, "deletions": 29}, "files": [{"sha": "9efe1273ac04489400768b1f3461b4263a47fe06", "filename": "src/librustc_typeck/coherence/inherent_impls.rs", "status": "modified", "additions": 4, "deletions": 29, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/d7e42cc61c122c24a2503d7deebdaf00cb2aea23/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7e42cc61c122c24a2503d7deebdaf00cb2aea23/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls.rs?ref=d7e42cc61c122c24a2503d7deebdaf00cb2aea23", "patch": "@@ -7,7 +7,6 @@\n //! `tcx.inherent_impls(def_id)`). That value, however,\n //! is computed by selecting an idea from this table.\n \n-use rustc::dep_graph::DepKind;\n use rustc::hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc::hir;\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n@@ -36,35 +35,11 @@ pub fn crate_inherent_impls(\n pub fn inherent_impls(tcx: TyCtxt<'_>, ty_def_id: DefId) -> &[DefId] {\n     assert!(ty_def_id.is_local());\n \n-    // NB. Until we adopt the red-green dep-tracking algorithm (see\n-    // [the plan] for details on that), we do some hackery here to get\n-    // the dependencies correct.  Basically, we use a `with_ignore` to\n-    // read the result we want. If we didn't have the `with_ignore`,\n-    // we would wind up with a dependency on the entire crate, which\n-    // we don't want. Then we go and add dependencies on all the impls\n-    // in the result (which is what we wanted).\n-    //\n-    // The result is a graph with an edge from `Hir(I)` for every impl\n-    // `I` defined on some type `T` to `CoherentInherentImpls(T)`,\n-    // thus ensuring that if any of those impls change, the set of\n-    // inherent impls is considered dirty.\n-    //\n-    // [the plan]: https://github.com/rust-lang/rust-roadmap/issues/4\n-\n-    let result = tcx.dep_graph.with_ignore(|| {\n-        let crate_map = tcx.crate_inherent_impls(ty_def_id.krate);\n-        match crate_map.inherent_impls.get(&ty_def_id) {\n-            Some(v) => &v[..],\n-            None => &[],\n-        }\n-    });\n-\n-    for &impl_def_id in &result[..] {\n-        let def_path_hash = tcx.def_path_hash(impl_def_id);\n-        tcx.dep_graph.read(def_path_hash.to_dep_node(DepKind::Hir));\n+    let crate_map = tcx.crate_inherent_impls(ty_def_id.krate);\n+    match crate_map.inherent_impls.get(&ty_def_id) {\n+        Some(v) => &v[..],\n+        None => &[],\n     }\n-\n-    result\n }\n \n struct InherentCollect<'tcx> {"}]}