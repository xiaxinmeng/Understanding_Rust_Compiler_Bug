{"sha": "314126257d3d20e3e788325f3b88b7e635bd6bb8", "node_id": "C_kwDOAAsO6NoAKDMxNDEyNjI1N2QzZDIwZTNlNzg4MzI1ZjNiODhiN2U2MzViZDZiYjg", "commit": {"author": {"name": "whtahy", "email": "whtahy@users.noreply.github.com", "date": "2023-04-22T17:31:00Z"}, "committer": {"name": "whtahy", "email": "whtahy@users.noreply.github.com", "date": "2023-04-22T17:31:00Z"}, "message": "add known-bug test for unsound issue 98117", "tree": {"sha": "878c19c27d5b16ba92eab1d2475e255e8fe07516", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/878c19c27d5b16ba92eab1d2475e255e8fe07516"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/314126257d3d20e3e788325f3b88b7e635bd6bb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/314126257d3d20e3e788325f3b88b7e635bd6bb8", "html_url": "https://github.com/rust-lang/rust/commit/314126257d3d20e3e788325f3b88b7e635bd6bb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/314126257d3d20e3e788325f3b88b7e635bd6bb8/comments", "author": {"login": "whtahy", "id": 19783477, "node_id": "MDQ6VXNlcjE5NzgzNDc3", "avatar_url": "https://avatars.githubusercontent.com/u/19783477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whtahy", "html_url": "https://github.com/whtahy", "followers_url": "https://api.github.com/users/whtahy/followers", "following_url": "https://api.github.com/users/whtahy/following{/other_user}", "gists_url": "https://api.github.com/users/whtahy/gists{/gist_id}", "starred_url": "https://api.github.com/users/whtahy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whtahy/subscriptions", "organizations_url": "https://api.github.com/users/whtahy/orgs", "repos_url": "https://api.github.com/users/whtahy/repos", "events_url": "https://api.github.com/users/whtahy/events{/privacy}", "received_events_url": "https://api.github.com/users/whtahy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "whtahy", "id": 19783477, "node_id": "MDQ6VXNlcjE5NzgzNDc3", "avatar_url": "https://avatars.githubusercontent.com/u/19783477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whtahy", "html_url": "https://github.com/whtahy", "followers_url": "https://api.github.com/users/whtahy/followers", "following_url": "https://api.github.com/users/whtahy/following{/other_user}", "gists_url": "https://api.github.com/users/whtahy/gists{/gist_id}", "starred_url": "https://api.github.com/users/whtahy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whtahy/subscriptions", "organizations_url": "https://api.github.com/users/whtahy/orgs", "repos_url": "https://api.github.com/users/whtahy/repos", "events_url": "https://api.github.com/users/whtahy/events{/privacy}", "received_events_url": "https://api.github.com/users/whtahy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c5de9a2e85e4490fad8c30a8078ac7117a01836", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c5de9a2e85e4490fad8c30a8078ac7117a01836", "html_url": "https://github.com/rust-lang/rust/commit/3c5de9a2e85e4490fad8c30a8078ac7117a01836"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "86722afdf9fdd91601c4f7c16d59f4cb43f0a44c", "filename": "tests/ui/wf/wf-in-where-clause-static.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/314126257d3d20e3e788325f3b88b7e635bd6bb8/tests%2Fui%2Fwf%2Fwf-in-where-clause-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/314126257d3d20e3e788325f3b88b7e635bd6bb8/tests%2Fui%2Fwf%2Fwf-in-where-clause-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwf%2Fwf-in-where-clause-static.rs?ref=314126257d3d20e3e788325f3b88b7e635bd6bb8", "patch": "@@ -0,0 +1,23 @@\n+// check-pass\n+// known-bug: #98117\n+\n+// Should fail. Functions are responsible for checking the well-formedness of\n+// their own where clauses, so this should fail and require an explicit bound\n+// `T: 'static`.\n+\n+use std::fmt::Display;\n+\n+trait Static: 'static {}\n+impl<T> Static for &'static T {}\n+\n+fn foo<S: Display>(x: S) -> Box<dyn Display>\n+where\n+    &'static S: Static,\n+{\n+    Box::new(x)\n+}\n+\n+fn main() {\n+    let s = foo(&String::from(\"blah blah blah\"));\n+    println!(\"{}\", s);\n+}"}]}