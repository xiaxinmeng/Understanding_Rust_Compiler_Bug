{"sha": "84a266149bb212109baa94de98457edddff1bae1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0YTI2NjE0OWJiMjEyMTA5YmFhOTRkZTk4NDU3ZWRkZGZmMWJhZTE=", "commit": {"author": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-08-06T18:13:10Z"}, "committer": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-08-26T13:34:31Z"}, "message": "Add test for stepping though `match` expressions", "tree": {"sha": "bb80d7e2282a3cce95902da10bf7a63e98318823", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb80d7e2282a3cce95902da10bf7a63e98318823"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84a266149bb212109baa94de98457edddff1bae1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84a266149bb212109baa94de98457edddff1bae1", "html_url": "https://github.com/rust-lang/rust/commit/84a266149bb212109baa94de98457edddff1bae1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84a266149bb212109baa94de98457edddff1bae1/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a42dfc2fa2b373aedf7a169da3f0ec0e996fc9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a42dfc2fa2b373aedf7a169da3f0ec0e996fc9f", "html_url": "https://github.com/rust-lang/rust/commit/0a42dfc2fa2b373aedf7a169da3f0ec0e996fc9f"}], "stats": {"total": 383, "additions": 383, "deletions": 0}, "files": [{"sha": "4a5f7857097a11665bcbd2275a744f5bb61476f2", "filename": "src/test/debuginfo/step-into-match.rs", "status": "added", "additions": 383, "deletions": 0, "changes": 383, "blob_url": "https://github.com/rust-lang/rust/blob/84a266149bb212109baa94de98457edddff1bae1/src%2Ftest%2Fdebuginfo%2Fstep-into-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a266149bb212109baa94de98457edddff1bae1/src%2Ftest%2Fdebuginfo%2Fstep-into-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstep-into-match.rs?ref=84a266149bb212109baa94de98457edddff1bae1", "patch": "@@ -0,0 +1,383 @@\n+// compile-flags: -g\n+// ignore-android: FIXME(#10381)\n+\n+// === GDB TESTS ==============================================================\n+\n+// gdb-command: r\n+\n+// gdb-command: s\n+// gdb-check:[...]match x {\n+\n+// gdb-command: s\n+// gdb-check:[...]    Some(42) => 1,\n+\n+// gdb-command: s\n+// gdb-check:[...]}\n+\n+// gdb-command: s\n+// gdb-check:[...]match_enum(Some(12));\n+\n+// gdb-command: s\n+// gdb-check:[...]match x {\n+\n+// gdb-command: s\n+// gdb-check:[...]Some(_) => 2,\n+\n+// gdb-command: s\n+// gdb-check:[...]}\n+\n+// gdb-command: s\n+// gdb-check:[...]match_enum(None);\n+\n+// gdb-command: s\n+// gdb-check:[...]match x {\n+\n+// gdb-command: s\n+// gdb-check:[...]None => 3,\n+\n+// gdb-command: s\n+// gdb-check:[...]}\n+\n+// gdb-command: s\n+// gdb-check:[...]match_int(1);\n+\n+// gdb-command: s\n+// gdb-check:[...]match y {\n+\n+// gdb-command: s\n+// gdb-check:[...]1 => 3,\n+\n+// gdb-command: s\n+// gdb-check:[...]}\n+\n+// gdb-command: s\n+// gdb-check:[...]match_int(2);\n+\n+// gdb-command: s\n+// gdb-check:[...]match y {\n+\n+// gdb-command: s\n+// gdb-check:[...]_ => 4,\n+\n+// gdb-command: s\n+// gdb-check:[...]}\n+\n+// gdb-command: s\n+// gdb-check:[...]match_int(0);\n+\n+// gdb-command: s\n+// gdb-check:[...]match y {\n+\n+// gdb-command: s\n+// gdb-check:[...]0 => 2,\n+\n+// gdb-command: s\n+// gdb-check:[...]}\n+\n+// gdb-command: s\n+// gdb-check:[...]match_int(-1);\n+\n+// gdb-command: s\n+// gdb-check:[...]match y {\n+\n+// gdb-command: s\n+// gdb-check:[...]-1 => 1,\n+\n+// gdb-command: s\n+// gdb-check:[...]}\n+\n+// gdb-command: s\n+// gdb-check:[...]match_tuple(5, 12);\n+\n+// gdb-command: s\n+// gdb-check:[...]match (a, b) {\n+\n+// gdb-command: s\n+// gdb-check:[...](5, 12) => 3,\n+\n+// gdb-command: s\n+// gdb-check:[...]}\n+\n+// gdb-command: s\n+// gdb-check:[...]match_tuple(29, 1);\n+\n+// gdb-command: s\n+// gdb-check:[...]match (a, b) {\n+\n+// gdb-command: s\n+// gdb-check:[...](29, _) => 2,\n+\n+// gdb-command: s\n+// gdb-check:[...]}\n+\n+// gdb-command: s\n+// gdb-check:[...]match_tuple(12, 12);\n+\n+// gdb-command: s\n+// gdb-check:[...]match (a, b) {\n+\n+// gdb-command: s\n+// gdb-check:[...](_, _) => 5\n+\n+// gdb-command: s\n+// gdb-check:[...]}\n+\n+// gdb-command: s\n+// gdb-check:[...]match_tuple(42, 12);\n+\n+// gdb-command: s\n+// gdb-check:[...]match (a, b) {\n+\n+// gdb-command: s\n+// gdb-check:[...](42, 12) => 1,\n+\n+// gdb-command: s\n+// gdb-check:[...]}\n+\n+// gdb-command: s\n+// gdb-check:[...]match_tuple(1, 9);\n+\n+// gdb-command: s\n+// gdb-check:[...]match (a, b) {\n+\n+// gdb-command: s\n+// gdb-check:[...](_, 9) => 4,\n+\n+// gdb-command: s\n+// gdb-check:[...]}\n+\n+// gdb-command: s\n+// gdb-check:[...]}\n+\n+// === CDB TESTS ==============================================================\n+\n+// Enable line-based debugging and print lines after stepping.\n+// cdb-command: .lines -e\n+// cdb-command: l+s\n+// cdb-command: l+t\n+\n+// cdb-command: g\n+\n+// cdb-command: t\n+// cdb-check:   [...]: fn match_enum(x: Option<u32>) -> u8 {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match x {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:         Some(42) => 1,\n+\n+// cdb-command: t\n+// cdb-check:   [...]: }\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match_enum(Some(12));\n+\n+// cdb-command: t\n+// cdb-check:   [...]: fn match_enum(x: Option<u32>) -> u8 {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match x {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:         Some(_) => 2,\n+\n+// cdb-command: t\n+// cdb-check:   [...]: }\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match_enum(None);\n+\n+// cdb-command: t\n+// cdb-check:   [...]: fn match_enum(x: Option<u32>) -> u8 {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match x {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:         None => 3,\n+\n+// cdb-command: t\n+// cdb-check:   [...]: }\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match_int(1);\n+\n+// cdb-command: t\n+// cdb-check:   [...]: fn match_int(y: i32) -> u16 {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match y {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:         1 => 3,\n+\n+// cdb-command: t\n+// cdb-check:   [...]: }\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match_int(2);\n+\n+// cdb-command: t\n+// cdb-check:   [...]: fn match_int(y: i32) -> u16 {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match y {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:         _ => 4,\n+\n+// cdb-command: t\n+// cdb-check:   [...]: }\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match_int(0);\n+\n+// cdb-command: t\n+// cdb-check:   [...]: fn match_int(y: i32) -> u16 {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match y {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:         0 => 2,\n+\n+// cdb-command: t\n+// cdb-check:   [...]: }\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match_int(-1);\n+\n+// cdb-command: t\n+// cdb-check:   [...]: fn match_int(y: i32) -> u16 {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match y {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:         -1 => 1,\n+\n+// cdb-command: t\n+// cdb-check:   [...]: }\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match_tuple(5, 12);\n+\n+// cdb-command: t\n+// cdb-check:   [...]: fn match_tuple(a: u8, b: i8) -> u32 {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match (a, b) {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:         (5, 12) => 3,\n+\n+// cdb-command: t\n+// cdb-check:   [...]: }\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match_tuple(29, 1);\n+\n+// cdb-command: t\n+// cdb-check:   [...]: fn match_tuple(a: u8, b: i8) -> u32 {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match (a, b) {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:         (29, _) => 2,\n+\n+// cdb-command: t\n+// cdb-check:   [...]: }\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match_tuple(12, 12);\n+\n+// cdb-command: t\n+// cdb-check:   [...]: fn match_tuple(a: u8, b: i8) -> u32 {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match (a, b) {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:         (_, _) => 5\n+\n+// cdb-command: t\n+// cdb-check:   [...]: }\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match_tuple(42, 12);\n+\n+// cdb-command: t\n+// cdb-check:   [...]: fn match_tuple(a: u8, b: i8) -> u32 {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match (a, b) {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:         (42, 12) => 1,\n+\n+// cdb-command: t\n+// cdb-check:   [...]: }\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match_tuple(1, 9);\n+\n+// cdb-command: t\n+// cdb-check:   [...]: fn match_tuple(a: u8, b: i8) -> u32 {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:     match (a, b) {\n+\n+// cdb-command: t\n+// cdb-check:   [...]:         (_, 9) => 4,\n+\n+// cdb-command: t\n+// cdb-check:   [...]: }\n+\n+// cdb-command: t\n+// cdb-check:   [...]: }\n+\n+fn main() {\n+    match_enum(Some(42)); // #break\n+    match_enum(Some(12));\n+    match_enum(None);\n+\n+    match_int(1);\n+    match_int(2);\n+    match_int(0);\n+    match_int(-1);\n+\n+    match_tuple(5, 12);\n+    match_tuple(29, 1);\n+    match_tuple(12, 12);\n+    match_tuple(42, 12);\n+    match_tuple(1, 9);\n+}\n+\n+fn match_enum(x: Option<u32>) -> u8 {\n+    match x {\n+        Some(42) => 1,\n+        Some(_) => 2,\n+        None => 3,\n+    }\n+}\n+\n+fn match_int(y: i32) -> u16 {\n+    match y {\n+        -1 => 1,\n+        0 => 2,\n+        1 => 3,\n+        _ => 4,\n+    }\n+}\n+\n+fn match_tuple(a: u8, b: i8) -> u32 {\n+    match (a, b) {\n+        (42, 12) => 1,\n+        (29, _) => 2,\n+        (5, 12) => 3,\n+        (_, 9) => 4,\n+        (_, _) => 5\n+    }\n+}"}]}