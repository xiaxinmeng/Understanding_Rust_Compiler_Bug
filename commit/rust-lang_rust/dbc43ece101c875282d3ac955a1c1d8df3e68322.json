{"sha": "dbc43ece101c875282d3ac955a1c1d8df3e68322", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiYzQzZWNlMTAxYzg3NTI4MmQzYWM5NTVhMWMxZDhkZjNlNjgzMjI=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-06-03T19:47:59Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-06-03T19:47:59Z"}, "message": "Revert \"implement TrustedRandomAccess for Take iterator adapter\"\n\nThis reverts commit 37a5b515e9c36ee3f57d9e0d7db7efce2fb02195.", "tree": {"sha": "1fce348086d8a0bfa67b4e2fb5a47b55d8447135", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fce348086d8a0bfa67b4e2fb5a47b55d8447135"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbc43ece101c875282d3ac955a1c1d8df3e68322", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbc43ece101c875282d3ac955a1c1d8df3e68322", "html_url": "https://github.com/rust-lang/rust/commit/dbc43ece101c875282d3ac955a1c1d8df3e68322", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbc43ece101c875282d3ac955a1c1d8df3e68322/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "257782579915963c9dbe7433102275743837b9a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/257782579915963c9dbe7433102275743837b9a8", "html_url": "https://github.com/rust-lang/rust/commit/257782579915963c9dbe7433102275743837b9a8"}], "stats": {"total": 23, "additions": 1, "deletions": 22}, "files": [{"sha": "beda8c32c6bdc70473945bd70b6b73ee458c4a39", "filename": "library/core/src/iter/adapters/take.rs", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/dbc43ece101c875282d3ac955a1c1d8df3e68322/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ftake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbc43ece101c875282d3ac955a1c1d8df3e68322/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ftake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ftake.rs?ref=dbc43ece101c875282d3ac955a1c1d8df3e68322", "patch": "@@ -1,8 +1,5 @@\n use crate::cmp;\n-use crate::iter::{\n-    adapters::zip::try_get_unchecked, adapters::SourceIter, FusedIterator, InPlaceIterable,\n-    TrustedLen, TrustedRandomAccess,\n-};\n+use crate::iter::{adapters::SourceIter, FusedIterator, InPlaceIterable, TrustedLen};\n use crate::ops::{ControlFlow, Try};\n \n /// An iterator that only iterates over the first `n` iterations of `iter`.\n@@ -114,15 +111,6 @@ where\n \n         self.try_fold(init, ok(fold)).unwrap()\n     }\n-\n-    unsafe fn __iterator_get_unchecked(&mut self, idx: usize) -> <I as Iterator>::Item\n-    where\n-        Self: TrustedRandomAccess,\n-    {\n-        // SAFETY: the caller must uphold the contract for\n-        // `Iterator::__iterator_get_unchecked`.\n-        unsafe { try_get_unchecked(&mut self.iter, idx) }\n-    }\n }\n \n #[unstable(issue = \"none\", feature = \"inplace_iteration\")]\n@@ -219,12 +207,3 @@ impl<I> FusedIterator for Take<I> where I: FusedIterator {}\n \n #[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<I: TrustedLen> TrustedLen for Take<I> {}\n-\n-#[doc(hidden)]\n-#[unstable(feature = \"trusted_random_access\", issue = \"none\")]\n-unsafe impl<I> TrustedRandomAccess for Take<I>\n-where\n-    I: TrustedRandomAccess,\n-{\n-    const MAY_HAVE_SIDE_EFFECT: bool = I::MAY_HAVE_SIDE_EFFECT;\n-}"}]}