{"sha": "2ba7e776b611b797b00e5a2cd02584c5993514d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiYTdlNzc2YjYxMWI3OTdiMDBlNWEyY2QwMjU4NGM1OTkzNTE0ZDU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-29T12:49:02Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-02T08:36:18Z"}, "message": "FIXME", "tree": {"sha": "cf27e239434c3ad2ef7ea150619f5abc9ecedc68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf27e239434c3ad2ef7ea150619f5abc9ecedc68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ba7e776b611b797b00e5a2cd02584c5993514d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ba7e776b611b797b00e5a2cd02584c5993514d5", "html_url": "https://github.com/rust-lang/rust/commit/2ba7e776b611b797b00e5a2cd02584c5993514d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ba7e776b611b797b00e5a2cd02584c5993514d5/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "222ed9f57118a2542a67d39e6df07152bac0b962", "url": "https://api.github.com/repos/rust-lang/rust/commits/222ed9f57118a2542a67d39e6df07152bac0b962", "html_url": "https://github.com/rust-lang/rust/commit/222ed9f57118a2542a67d39e6df07152bac0b962"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2fc7d65d655df2a17fc781b6f8fc43532111995e", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba7e776b611b797b00e5a2cd02584c5993514d5/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ba7e776b611b797b00e5a2cd02584c5993514d5/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=2ba7e776b611b797b00e5a2cd02584c5993514d5", "patch": "@@ -512,7 +512,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> InterpretCx<'a, 'mir, 'tcx, M>\n         };\n         // Early-return cases.\n         match val.val {\n-            ConstValue::Param(_) => return err!(TooGeneric),\n+            ConstValue::Param(_) => return err!(TooGeneric), // FIXME(oli-obk): try to monomorphize\n             ConstValue::Unevaluated(def_id, substs) => {\n                 let instance = self.resolve(def_id, substs)?;\n                 return Ok(OpTy::from(self.const_eval_raw(GlobalId {"}]}