{"sha": "2cd09f27b835d4342ce6f87eaf250eceb2718db8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjZDA5ZjI3YjgzNWQ0MzQyY2U2Zjg3ZWFmMjUwZWNlYjI3MThkYjg=", "commit": {"author": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2018-05-26T01:14:45Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2018-05-29T13:19:46Z"}, "message": "store polonius output in MirBorrowCtx", "tree": {"sha": "24cf4948e1ff9cbdee99d5cfb9cdf5f7a6dd7bb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24cf4948e1ff9cbdee99d5cfb9cdf5f7a6dd7bb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cd09f27b835d4342ce6f87eaf250eceb2718db8", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEmNHc6jmXzkUyxd4xiMlBzaHUZDIFAlsNU3IACgkQiMlBzaHU\nZDKeWBAAgnpT3pQx4K2Iwz1gfNS4kx8sq/joIyiyKzjLrVne8ff7g+jRnWPPFvZ2\nivK39annHQLVeemzOqqE3txPvZdef5iFvpDKtiM1Sz1Mjwey8B0u8XGSnT5WKuxC\nsrG5NxnDM4W1/JId9hP5AccvHMzJodj4uVp/gnCjydMbf5FcnYNs9jbNV6qCckDr\nGG2IfDWu5Tk7EB53rwvUgFiCn7KFsZDQc1mzJMy4MohikhbVHn8So1S+d45Zvt0S\nJuzZknweqrGOCNyBcH4r5y1ngQubfCXdgCiw/5+UjwZ154TiK1k0NKCeKug+KUKJ\n5Uie0sTfTE5+aOpTF/DapvB3B5rMwp5QNw7SnZO9KAtoejRDjNheEvlHr19DNlBM\neWFTBzWX757VXS1NwLNSCpBEYm6fWrQOhs3AGfCYH/U9pLeicxzTr9ifZS9bB7TG\n0fNFqnjVylx+CuF+4uvZ0cwU6bhkgy7rsA1m29JaoOFTrvHFW+LxKALHQzEPhhMd\nEHUnpWegQlkGUl0yRqG2uLiaXfXZZ4+3jj2HOdDDayjYcIIVfeIr4KlcFkkRhAAB\n1NwL1v36CXcy7PcyxkAFcA3AlkGY3GwRvP9+LFlxt7rdnQCPcLWtn8emxaA763oC\nfokThf2GfFA/AUZ2nJPnRqWfwE59Mo8K6oaTn9zvvvYiDkeikD4=\n=3FHq\n-----END PGP SIGNATURE-----", "payload": "tree 24cf4948e1ff9cbdee99d5cfb9cdf5f7a6dd7bb7\nparent b45aebfdf6d37599bd3771a2ba8b0b429acde005\nauthor Douglas Campos <qmx@qmx.me> 1527297285 +0000\ncommitter Santiago Pastorino <spastorino@gmail.com> 1527599986 -0300\n\nstore polonius output in MirBorrowCtx\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cd09f27b835d4342ce6f87eaf250eceb2718db8", "html_url": "https://github.com/rust-lang/rust/commit/2cd09f27b835d4342ce6f87eaf250eceb2718db8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cd09f27b835d4342ce6f87eaf250eceb2718db8/comments", "author": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b45aebfdf6d37599bd3771a2ba8b0b429acde005", "url": "https://api.github.com/repos/rust-lang/rust/commits/b45aebfdf6d37599bd3771a2ba8b0b429acde005", "html_url": "https://github.com/rust-lang/rust/commit/b45aebfdf6d37599bd3771a2ba8b0b429acde005"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "e2d696e9b0f793e8745848045b18f95a10c1e442", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2cd09f27b835d4342ce6f87eaf250eceb2718db8/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cd09f27b835d4342ce6f87eaf250eceb2718db8/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=2cd09f27b835d4342ce6f87eaf250eceb2718db8", "patch": "@@ -11,11 +11,12 @@\n //! This query borrow-checks the MIR to (further) ensure it is not broken.\n \n use borrow_check::nll::region_infer::RegionInferenceContext;\n+use borrow_check::location::LocationIndex;\n use rustc::hir;\n use rustc::hir::def_id::DefId;\n use rustc::hir::map::definitions::DefPathData;\n use rustc::infer::InferCtxt;\n-use rustc::ty::{self, ParamEnv, TyCtxt};\n+use rustc::ty::{self, ParamEnv, RegionVid, TyCtxt};\n use rustc::ty::maps::Providers;\n use rustc::lint::builtin::UNUSED_MUT;\n use rustc::mir::{AggregateKind, BasicBlock, BorrowCheckResult, BorrowKind};\n@@ -45,6 +46,7 @@ use dataflow::move_paths::{IllegalMoveOriginKind, MoveError};\n use dataflow::move_paths::{HasMoveData, LookupResult, MoveData, MovePathIndex};\n use util::borrowck_errors::{BorrowckErrors, Origin};\n use util::collect_writes::FindAssignments;\n+use polonius_engine::Output;\n \n use self::borrow_set::{BorrowSet, BorrowData};\n use self::flows::Flows;\n@@ -198,7 +200,7 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n     let borrow_set = Rc::new(BorrowSet::build(tcx, mir));\n \n     // If we are in non-lexical mode, compute the non-lexical lifetimes.\n-    let (regioncx, _polonius_output, opt_closure_req) = nll::compute_regions(\n+    let (regioncx, polonius_output, opt_closure_req) = nll::compute_regions(\n         infcx,\n         def_id,\n         free_regions,\n@@ -251,6 +253,7 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n         used_mut_upvars: SmallVec::new(),\n         borrow_set,\n         dominators,\n+        polonius_output,\n     };\n \n     let mut state = Flows::new(\n@@ -373,6 +376,9 @@ pub struct MirBorrowckCtxt<'cx, 'gcx: 'tcx, 'tcx: 'cx> {\n \n     /// Dominators for MIR\n     dominators: Dominators<BasicBlock>,\n+\n+    /// Polonius Output\n+    polonius_output: Option<Rc<Output<RegionVid, BorrowIndex, LocationIndex>>>,\n }\n \n // Check that:"}]}