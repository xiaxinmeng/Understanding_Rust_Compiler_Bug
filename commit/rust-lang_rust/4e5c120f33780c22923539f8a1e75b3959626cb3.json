{"sha": "4e5c120f33780c22923539f8a1e75b3959626cb3", "node_id": "C_kwDOAAsO6NoAKDRlNWMxMjBmMzM3ODBjMjI5MjM1MzlmOGExZTc1YjM5NTk2MjZjYjM", "commit": {"author": {"name": "Tam Pham", "email": "tam001p@gmail.com", "date": "2023-04-04T03:28:55Z"}, "committer": {"name": "Tam Pham", "email": "tam001p@gmail.com", "date": "2023-04-04T03:28:55Z"}, "message": "Update ui tests involving invalid visibility qualifiers", "tree": {"sha": "01c74c337e7cbab28c35b0196f7cc148f2e69dd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01c74c337e7cbab28c35b0196f7cc148f2e69dd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e5c120f33780c22923539f8a1e75b3959626cb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e5c120f33780c22923539f8a1e75b3959626cb3", "html_url": "https://github.com/rust-lang/rust/commit/4e5c120f33780c22923539f8a1e75b3959626cb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e5c120f33780c22923539f8a1e75b3959626cb3/comments", "author": {"login": "ElectrifyPro", "id": 1387522, "node_id": "MDQ6VXNlcjEzODc1MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1387522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ElectrifyPro", "html_url": "https://github.com/ElectrifyPro", "followers_url": "https://api.github.com/users/ElectrifyPro/followers", "following_url": "https://api.github.com/users/ElectrifyPro/following{/other_user}", "gists_url": "https://api.github.com/users/ElectrifyPro/gists{/gist_id}", "starred_url": "https://api.github.com/users/ElectrifyPro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ElectrifyPro/subscriptions", "organizations_url": "https://api.github.com/users/ElectrifyPro/orgs", "repos_url": "https://api.github.com/users/ElectrifyPro/repos", "events_url": "https://api.github.com/users/ElectrifyPro/events{/privacy}", "received_events_url": "https://api.github.com/users/ElectrifyPro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ElectrifyPro", "id": 1387522, "node_id": "MDQ6VXNlcjEzODc1MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1387522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ElectrifyPro", "html_url": "https://github.com/ElectrifyPro", "followers_url": "https://api.github.com/users/ElectrifyPro/followers", "following_url": "https://api.github.com/users/ElectrifyPro/following{/other_user}", "gists_url": "https://api.github.com/users/ElectrifyPro/gists{/gist_id}", "starred_url": "https://api.github.com/users/ElectrifyPro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ElectrifyPro/subscriptions", "organizations_url": "https://api.github.com/users/ElectrifyPro/orgs", "repos_url": "https://api.github.com/users/ElectrifyPro/repos", "events_url": "https://api.github.com/users/ElectrifyPro/events{/privacy}", "received_events_url": "https://api.github.com/users/ElectrifyPro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87b3ae3909d24829da338b40fa0c24e073c3a64d", "url": "https://api.github.com/repos/rust-lang/rust/commits/87b3ae3909d24829da338b40fa0c24e073c3a64d", "html_url": "https://github.com/rust-lang/rust/commit/87b3ae3909d24829da338b40fa0c24e073c3a64d"}], "stats": {"total": 268, "additions": 162, "deletions": 106}, "files": [{"sha": "cf41bcce8c20231248c9facc2154b16fd4647235", "filename": "tests/ui/error-codes/E0449.stderr", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Ferror-codes%2FE0449.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Ferror-codes%2FE0449.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferror-codes%2FE0449.stderr?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -1,22 +1,26 @@\n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/E0449.rs:7:1\n    |\n LL | pub impl Bar {}\n-   | ^^^ `pub` not permitted here because it's implied\n+   | ^^^\n    |\n    = note: place qualifiers on individual impl items instead\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/E0449.rs:9:1\n    |\n LL | pub impl Foo for Bar {\n-   | ^^^ `pub` not permitted here because it's implied\n+   | ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/E0449.rs:10:5\n    |\n LL |     pub fn foo() {}\n-   |     ^^^ `pub` not permitted here because it's implied\n+   |     ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n error: aborting due to 3 previous errors\n "}, {"sha": "2298ad240d5609d78ab131f44a9b34a39ccb335d", "filename": "tests/ui/issues/issue-28433.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fissues%2Fissue-28433.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fissues%2Fissue-28433.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-28433.rs?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -1,9 +1,9 @@\n enum Bird {\n     pub Duck,\n-    //~^ ERROR unnecessary visibility qualifier\n+    //~^ ERROR visibility qualifiers are not permitted here\n     Goose,\n     pub(crate) Dove\n-    //~^ ERROR unnecessary visibility qualifier\n+    //~^ ERROR visibility qualifiers are not permitted here\n }\n \n "}, {"sha": "5fb8a89621c2d530cae324389e074e280db0192c", "filename": "tests/ui/issues/issue-28433.stderr", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fissues%2Fissue-28433.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fissues%2Fissue-28433.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-28433.stderr?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -1,14 +1,18 @@\n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/issue-28433.rs:2:5\n    |\n LL |     pub Duck,\n-   |     ^^^ `pub` not permitted here because it's implied\n+   |     ^^^\n+   |\n+   = note: enum variants and their fields always share the visibility of the enum they are in\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/issue-28433.rs:5:5\n    |\n LL |     pub(crate) Dove\n    |     ^^^^^^^^^^\n+   |\n+   = note: enum variants and their fields always share the visibility of the enum they are in\n \n error: aborting due to 2 previous errors\n "}, {"sha": "403160f1253a4f3ef947e1abdd0c4c9b9370a82b", "filename": "tests/ui/parser/assoc-static-semantic-fail.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Fassoc-static-semantic-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Fassoc-static-semantic-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fassoc-static-semantic-fail.rs?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -31,7 +31,7 @@ trait T {\n     //~| ERROR a static item cannot be `default`\n     pub(crate) default static TD: u8;\n     //~^ ERROR associated `static` items are not allowed\n-    //~| ERROR unnecessary visibility qualifier\n+    //~| ERROR visibility qualifiers are not permitted here\n     //~| ERROR a static item cannot be `default`\n }\n \n@@ -47,6 +47,6 @@ impl T for S {\n     pub default static TD: u8;\n     //~^ ERROR associated `static` items are not allowed\n     //~| ERROR associated constant in `impl` without body\n-    //~| ERROR unnecessary visibility qualifier\n+    //~| ERROR visibility qualifiers are not permitted here\n     //~| ERROR a static item cannot be `default`\n }"}, {"sha": "8178bd223732669d6bd43c00a65487430a21afeb", "filename": "tests/ui/parser/assoc-static-semantic-fail.stderr", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Fassoc-static-semantic-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Fassoc-static-semantic-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fassoc-static-semantic-fail.stderr?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -134,11 +134,13 @@ LL |     pub(crate) default static ID: u8;\n    |                                     |\n    |                                     help: provide a definition for the constant: `= <expr>;`\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/assoc-static-semantic-fail.rs:32:5\n    |\n LL |     pub(crate) default static TD: u8;\n    |     ^^^^^^^^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n error: associated constant in `impl` without body\n   --> $DIR/assoc-static-semantic-fail.rs:41:5\n@@ -156,11 +158,13 @@ LL |     pub default static TD: u8;\n    |                              |\n    |                              help: provide a definition for the constant: `= <expr>;`\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/assoc-static-semantic-fail.rs:47:5\n    |\n LL |     pub default static TD: u8;\n-   |     ^^^ `pub` not permitted here because it's implied\n+   |     ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n warning: the feature `specialization` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/assoc-static-semantic-fail.rs:3:12"}, {"sha": "d1058ceb2a1c421cc79b9cbb96b466520b12ee2d", "filename": "tests/ui/parser/default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fdefault.rs?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -14,7 +14,7 @@ impl Foo for u8 {\n }\n \n impl Foo for u16 {\n-    pub default fn foo<T: Default>() -> T { //~ ERROR unnecessary visibility qualifier\n+    pub default fn foo<T: Default>() -> T { //~ ERROR visibility qualifiers are not permitted here\n         T::default()\n     }\n }"}, {"sha": "e6330f368d91707cd7af7d27e81bce0dac544b1e", "filename": "tests/ui/parser/default.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Fdefault.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Fdefault.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fdefault.stderr?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -17,11 +17,13 @@ LL |     default pub fn foo<T: Default>() -> T { T::default() }\n LL | }\n    | - item list ends here\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/default.rs:17:5\n    |\n LL |     pub default fn foo<T: Default>() -> T {\n-   |     ^^^ `pub` not permitted here because it's implied\n+   |     ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n warning: the feature `specialization` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/default.rs:3:12"}, {"sha": "7953e12ecdb8e4e55b525ecff204c1d51350e4d1", "filename": "tests/ui/parser/trait-pub-assoc-const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Ftrait-pub-assoc-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Ftrait-pub-assoc-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Ftrait-pub-assoc-const.rs?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -1,6 +1,6 @@\n trait Foo {\n     pub const Foo: u32;\n-    //~^ ERROR unnecessary visibility qualifier\n+    //~^ ERROR visibility qualifiers are not permitted here\n }\n \n fn main() {}"}, {"sha": "c14a2f2eea527b4d862760eaf83f878abee9c43f", "filename": "tests/ui/parser/trait-pub-assoc-const.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Ftrait-pub-assoc-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Ftrait-pub-assoc-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Ftrait-pub-assoc-const.stderr?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -1,8 +1,10 @@\n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/trait-pub-assoc-const.rs:2:5\n    |\n LL |     pub const Foo: u32;\n-   |     ^^^ `pub` not permitted here because it's implied\n+   |     ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n error: aborting due to previous error\n "}, {"sha": "5d9434edc10558f13e6ad6a3208cee86ba8a1266", "filename": "tests/ui/parser/trait-pub-assoc-ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Ftrait-pub-assoc-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Ftrait-pub-assoc-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Ftrait-pub-assoc-ty.rs?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -1,6 +1,6 @@\n trait Foo {\n     pub type Foo;\n-    //~^ ERROR unnecessary visibility qualifier\n+    //~^ ERROR visibility qualifiers are not permitted here\n }\n \n fn main() {}"}, {"sha": "7f6e7350ca7a2df0ee6f1de86e0306c93eb96875", "filename": "tests/ui/parser/trait-pub-assoc-ty.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Ftrait-pub-assoc-ty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Ftrait-pub-assoc-ty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Ftrait-pub-assoc-ty.stderr?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -1,8 +1,10 @@\n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/trait-pub-assoc-ty.rs:2:5\n    |\n LL |     pub type Foo;\n-   |     ^^^ `pub` not permitted here because it's implied\n+   |     ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n error: aborting due to previous error\n "}, {"sha": "c8f33e782e2343d98c10902722c8731c63221639", "filename": "tests/ui/parser/trait-pub-method.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Ftrait-pub-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Ftrait-pub-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Ftrait-pub-method.rs?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -1,6 +1,6 @@\n trait Foo {\n     pub fn foo();\n-    //~^ ERROR unnecessary visibility qualifier\n+    //~^ ERROR visibility qualifiers are not permitted here\n }\n \n fn main() {}"}, {"sha": "2bf1d468a8535af19f65ead8f19a754f88d812d0", "filename": "tests/ui/parser/trait-pub-method.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Ftrait-pub-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fparser%2Ftrait-pub-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Ftrait-pub-method.stderr?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -1,8 +1,10 @@\n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/trait-pub-method.rs:2:5\n    |\n LL |     pub fn foo();\n-   |     ^^^ `pub` not permitted here because it's implied\n+   |     ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n error: aborting due to previous error\n "}, {"sha": "5c926dee05b21392f387b2990ffab83985275b3b", "filename": "tests/ui/privacy/issue-29161.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fprivacy%2Fissue-29161.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fprivacy%2Fissue-29161.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fissue-29161.rs?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -2,7 +2,7 @@ mod a {\n     struct A;\n \n     impl Default for A {\n-        pub fn default() -> A { //~ ERROR unnecessary visibility qualifier\n+        pub fn default() -> A { //~ ERROR visibility qualifiers are not permitted here\n             A\n         }\n     }"}, {"sha": "1a6c80499a1bf1f5d596c434f82cf1c403312f40", "filename": "tests/ui/privacy/issue-29161.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fprivacy%2Fissue-29161.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fprivacy%2Fissue-29161.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fissue-29161.stderr?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -1,8 +1,10 @@\n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/issue-29161.rs:5:9\n    |\n LL |         pub fn default() -> A {\n-   |         ^^^ `pub` not permitted here because it's implied\n+   |         ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n error[E0603]: struct `A` is private\n   --> $DIR/issue-29161.rs:13:8"}, {"sha": "32c5b801fda83dcf38b9811ad6d19fcc09bfa85f", "filename": "tests/ui/privacy/priv-in-bad-locations.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fprivacy%2Fpriv-in-bad-locations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fprivacy%2Fpriv-in-bad-locations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fpriv-in-bad-locations.rs?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -1,4 +1,4 @@\n-pub extern \"C\" { //~ ERROR unnecessary visibility qualifier\n+pub extern \"C\" { //~ ERROR visibility qualifiers are not permitted here\n     pub fn bar();\n }\n \n@@ -8,10 +8,10 @@ trait A {\n \n struct B;\n \n-pub impl B {} //~ ERROR unnecessary visibility qualifier\n+pub impl B {} //~ ERROR visibility qualifiers are not permitted here\n \n-pub impl A for B { //~ ERROR unnecessary visibility qualifier\n-    pub fn foo(&self) {} //~ ERROR unnecessary visibility qualifier\n+pub impl A for B { //~ ERROR visibility qualifiers are not permitted here\n+    pub fn foo(&self) {} //~ ERROR visibility qualifiers are not permitted here\n }\n \n pub fn main() {}"}, {"sha": "70dab5bfe13dff7728b0ef8f0204581b042f4b49", "filename": "tests/ui/privacy/priv-in-bad-locations.stderr", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fprivacy%2Fpriv-in-bad-locations.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fprivacy%2Fpriv-in-bad-locations.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fpriv-in-bad-locations.stderr?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -1,30 +1,34 @@\n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/priv-in-bad-locations.rs:1:1\n    |\n LL | pub extern \"C\" {\n-   | ^^^ `pub` not permitted here because it's implied\n+   | ^^^\n    |\n    = note: place qualifiers on individual foreign items instead\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/priv-in-bad-locations.rs:11:1\n    |\n LL | pub impl B {}\n-   | ^^^ `pub` not permitted here because it's implied\n+   | ^^^\n    |\n    = note: place qualifiers on individual impl items instead\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/priv-in-bad-locations.rs:13:1\n    |\n LL | pub impl A for B {\n-   | ^^^ `pub` not permitted here because it's implied\n+   | ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/priv-in-bad-locations.rs:14:5\n    |\n LL |     pub fn foo(&self) {}\n-   |     ^^^ `pub` not permitted here because it's implied\n+   |     ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n error: aborting due to 4 previous errors\n "}, {"sha": "6622089dda6d7ef9b624755c3f42404ce86ace45", "filename": "tests/ui/privacy/privacy-sanity.rs", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fprivacy%2Fprivacy-sanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fprivacy%2Fprivacy-sanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fprivacy-sanity.rs?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -10,17 +10,17 @@ pub struct S {\n }\n struct Ts(pub u8);\n \n-pub impl Tr for S {  //~ ERROR unnecessary visibility qualifier\n-    pub fn f() {} //~ ERROR unnecessary visibility qualifier\n-    pub const C: u8 = 0; //~ ERROR unnecessary visibility qualifier\n-    pub type T = u8; //~ ERROR unnecessary visibility qualifier\n+pub impl Tr for S {  //~ ERROR visibility qualifiers are not permitted here\n+    pub fn f() {} //~ ERROR visibility qualifiers are not permitted here\n+    pub const C: u8 = 0; //~ ERROR visibility qualifiers are not permitted here\n+    pub type T = u8; //~ ERROR visibility qualifiers are not permitted here\n }\n-pub impl S { //~ ERROR unnecessary visibility qualifier\n+pub impl S { //~ ERROR visibility qualifiers are not permitted here\n     pub fn f() {}\n     pub const C: u8 = 0;\n     // pub type T = u8;\n }\n-pub extern \"C\" { //~ ERROR unnecessary visibility qualifier\n+pub extern \"C\" { //~ ERROR visibility qualifiers are not permitted here\n     pub fn f();\n     pub static St: u8;\n }\n@@ -36,17 +36,17 @@ const MAIN: u8 = {\n     }\n     struct Ts(pub u8);\n \n-    pub impl Tr for S {  //~ ERROR unnecessary visibility qualifier\n-        pub fn f() {} //~ ERROR unnecessary visibility qualifier\n-        pub const C: u8 = 0; //~ ERROR unnecessary visibility qualifier\n-        pub type T = u8; //~ ERROR unnecessary visibility qualifier\n+    pub impl Tr for S {  //~ ERROR visibility qualifiers are not permitted here\n+        pub fn f() {} //~ ERROR visibility qualifiers are not permitted here\n+        pub const C: u8 = 0; //~ ERROR visibility qualifiers are not permitted here\n+        pub type T = u8; //~ ERROR visibility qualifiers are not permitted here\n     }\n-    pub impl S { //~ ERROR unnecessary visibility qualifier\n+    pub impl S { //~ ERROR visibility qualifiers are not permitted here\n         pub fn f() {}\n         pub const C: u8 = 0;\n         // pub type T = u8;\n     }\n-    pub extern \"C\" { //~ ERROR unnecessary visibility qualifier\n+    pub extern \"C\" { //~ ERROR visibility qualifiers are not permitted here\n         pub fn f();\n         pub static St: u8;\n     }\n@@ -65,17 +65,17 @@ fn main() {\n     }\n     struct Ts(pub u8);\n \n-    pub impl Tr for S {  //~ ERROR unnecessary visibility qualifier\n-        pub fn f() {} //~ ERROR unnecessary visibility qualifier\n-        pub const C: u8 = 0; //~ ERROR unnecessary visibility qualifier\n-        pub type T = u8; //~ ERROR unnecessary visibility qualifier\n+    pub impl Tr for S {  //~ ERROR visibility qualifiers are not permitted here\n+        pub fn f() {} //~ ERROR visibility qualifiers are not permitted here\n+        pub const C: u8 = 0; //~ ERROR visibility qualifiers are not permitted here\n+        pub type T = u8; //~ ERROR visibility qualifiers are not permitted here\n     }\n-    pub impl S { //~ ERROR unnecessary visibility qualifier\n+    pub impl S { //~ ERROR visibility qualifiers are not permitted here\n         pub fn f() {}\n         pub const C: u8 = 0;\n         // pub type T = u8;\n     }\n-    pub extern \"C\" { //~ ERROR unnecessary visibility qualifier\n+    pub extern \"C\" { //~ ERROR visibility qualifiers are not permitted here\n         pub fn f();\n         pub static St: u8;\n     }"}, {"sha": "a537f8c190103a77b61b3e74adef2a1fad988103", "filename": "tests/ui/privacy/privacy-sanity.stderr", "status": "modified", "additions": 60, "deletions": 36, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fprivacy%2Fprivacy-sanity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fprivacy%2Fprivacy-sanity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fprivacy-sanity.stderr?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -1,120 +1,144 @@\n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/privacy-sanity.rs:13:1\n    |\n LL | pub impl Tr for S {\n-   | ^^^ `pub` not permitted here because it's implied\n+   | ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/privacy-sanity.rs:14:5\n    |\n LL |     pub fn f() {}\n-   |     ^^^ `pub` not permitted here because it's implied\n+   |     ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/privacy-sanity.rs:15:5\n    |\n LL |     pub const C: u8 = 0;\n-   |     ^^^ `pub` not permitted here because it's implied\n+   |     ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/privacy-sanity.rs:16:5\n    |\n LL |     pub type T = u8;\n-   |     ^^^ `pub` not permitted here because it's implied\n+   |     ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/privacy-sanity.rs:18:1\n    |\n LL | pub impl S {\n-   | ^^^ `pub` not permitted here because it's implied\n+   | ^^^\n    |\n    = note: place qualifiers on individual impl items instead\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/privacy-sanity.rs:23:1\n    |\n LL | pub extern \"C\" {\n-   | ^^^ `pub` not permitted here because it's implied\n+   | ^^^\n    |\n    = note: place qualifiers on individual foreign items instead\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/privacy-sanity.rs:39:5\n    |\n LL |     pub impl Tr for S {\n-   |     ^^^ `pub` not permitted here because it's implied\n+   |     ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/privacy-sanity.rs:40:9\n    |\n LL |         pub fn f() {}\n-   |         ^^^ `pub` not permitted here because it's implied\n+   |         ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/privacy-sanity.rs:41:9\n    |\n LL |         pub const C: u8 = 0;\n-   |         ^^^ `pub` not permitted here because it's implied\n+   |         ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/privacy-sanity.rs:42:9\n    |\n LL |         pub type T = u8;\n-   |         ^^^ `pub` not permitted here because it's implied\n+   |         ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/privacy-sanity.rs:44:5\n    |\n LL |     pub impl S {\n-   |     ^^^ `pub` not permitted here because it's implied\n+   |     ^^^\n    |\n    = note: place qualifiers on individual impl items instead\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/privacy-sanity.rs:49:5\n    |\n LL |     pub extern \"C\" {\n-   |     ^^^ `pub` not permitted here because it's implied\n+   |     ^^^\n    |\n    = note: place qualifiers on individual foreign items instead\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/privacy-sanity.rs:68:5\n    |\n LL |     pub impl Tr for S {\n-   |     ^^^ `pub` not permitted here because it's implied\n+   |     ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/privacy-sanity.rs:69:9\n    |\n LL |         pub fn f() {}\n-   |         ^^^ `pub` not permitted here because it's implied\n+   |         ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/privacy-sanity.rs:70:9\n    |\n LL |         pub const C: u8 = 0;\n-   |         ^^^ `pub` not permitted here because it's implied\n+   |         ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/privacy-sanity.rs:71:9\n    |\n LL |         pub type T = u8;\n-   |         ^^^ `pub` not permitted here because it's implied\n+   |         ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/privacy-sanity.rs:73:5\n    |\n LL |     pub impl S {\n-   |     ^^^ `pub` not permitted here because it's implied\n+   |     ^^^\n    |\n    = note: place qualifiers on individual impl items instead\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/privacy-sanity.rs:78:5\n    |\n LL |     pub extern \"C\" {\n-   |     ^^^ `pub` not permitted here because it's implied\n+   |     ^^^\n    |\n    = note: place qualifiers on individual foreign items instead\n "}, {"sha": "e4b671142f9f0250355d484fcd6d085c0d612a9f", "filename": "tests/ui/privacy/useless-pub.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fprivacy%2Fuseless-pub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fprivacy%2Fuseless-pub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fuseless-pub.rs?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -5,12 +5,12 @@ pub trait E {\n }\n \n impl E for A {\n-    pub fn foo(&self) {} //~ ERROR: unnecessary visibility qualifier\n+    pub fn foo(&self) {} //~ ERROR: visibility qualifiers are not permitted here\n }\n \n enum Foo {\n-    V1 { pub f: i32 }, //~ ERROR unnecessary visibility qualifier\n-    V2(pub i32), //~ ERROR unnecessary visibility qualifier\n+    V1 { pub f: i32 }, //~ ERROR visibility qualifiers are not permitted here\n+    V2(pub i32), //~ ERROR visibility qualifiers are not permitted here\n }\n \n fn main() {}"}, {"sha": "73497e3fed5bfb399fde8a3e7fce78bb3fe16709", "filename": "tests/ui/privacy/useless-pub.stderr", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fprivacy%2Fuseless-pub.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e5c120f33780c22923539f8a1e75b3959626cb3/tests%2Fui%2Fprivacy%2Fuseless-pub.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Fuseless-pub.stderr?ref=4e5c120f33780c22923539f8a1e75b3959626cb3", "patch": "@@ -1,20 +1,26 @@\n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/useless-pub.rs:8:5\n    |\n LL |     pub fn foo(&self) {}\n-   |     ^^^ `pub` not permitted here because it's implied\n+   |     ^^^\n+   |\n+   = note: trait items always share the visibility of their trait\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/useless-pub.rs:12:10\n    |\n LL |     V1 { pub f: i32 },\n-   |          ^^^ `pub` not permitted here because it's implied\n+   |          ^^^\n+   |\n+   = note: enum variants and their fields always share the visibility of the enum they are in\n \n-error[E0449]: unnecessary visibility qualifier\n+error[E0449]: visibility qualifiers are not permitted here\n   --> $DIR/useless-pub.rs:13:8\n    |\n LL |     V2(pub i32),\n-   |        ^^^ `pub` not permitted here because it's implied\n+   |        ^^^\n+   |\n+   = note: enum variants and their fields always share the visibility of the enum they are in\n \n error: aborting due to 3 previous errors\n "}]}