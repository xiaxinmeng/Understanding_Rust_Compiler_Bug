{"sha": "8885dc2b37c1f2cf541938c893398b5bee55b88b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4ODVkYzJiMzdjMWYyY2Y1NDE5MzhjODkzMzk4YjViZWU1NWI4OGI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-08T14:33:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-08T14:33:34Z"}, "message": "Rollup merge of #63261 - RalfJung:rand, r=nikomatsakis\n\nbump rand in libcore/liballoc test suites\n\nThis pulls in the fix for https://github.com/rust-random/rand/issues/779, which trips Miri when running these test suites.\n\n`SmallRng` (formerly used by libcore) is no longer built by default, it needs a feature gate. I opted to switch to `StdRng` instead. Or should I enable the feature gate?", "tree": {"sha": "83fdbfa7c0514683817ff58c9b9378a8ba131902", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83fdbfa7c0514683817ff58c9b9378a8ba131902"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8885dc2b37c1f2cf541938c893398b5bee55b88b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdTDK+CRBK7hj4Ov3rIwAAdHIIAD74zUvILHESLNHJAvtEtt7t\nnvhtPyj86siAYQfXfgn3pokAq5UH6PwLSOvjWZubSX+IemSPFLgB/HqU6+ZhGK3B\n25hXXMROqNJsUCh8EmK/Sb95GI2qw+vp1VnSEft1L1pNGye3gLsClyiB/pDHbcpF\nraG5yOLnJFI6Vjco4Kfk2NzFL3ZCn2bAIu+0K27Mal1FcOoA0fyRu/Unprb+8lUr\nAYvIFnYEJXEc8BvNVWg/i3WJ886xdgBUm5xtGqbO/UXfjvjiJaWGzHECq29RXV/Q\n9TVk+47JB3afnEFanWwS2wR4buUw/S8cA4Hokzk4nwZEdfGKu/29j6QxUzF3+GI=\n=VZ5M\n-----END PGP SIGNATURE-----\n", "payload": "tree 83fdbfa7c0514683817ff58c9b9378a8ba131902\nparent 2628f579f6246df385acf9203bf2ffb6aedf5ccc\nparent 39185dd398644a184989c75e7cb34ab62cb871eb\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1565274814 +0200\ncommitter GitHub <noreply@github.com> 1565274814 +0200\n\nRollup merge of #63261 - RalfJung:rand, r=nikomatsakis\n\nbump rand in libcore/liballoc test suites\n\nThis pulls in the fix for https://github.com/rust-random/rand/issues/779, which trips Miri when running these test suites.\n\n`SmallRng` (formerly used by libcore) is no longer built by default, it needs a feature gate. I opted to switch to `StdRng` instead. Or should I enable the feature gate?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8885dc2b37c1f2cf541938c893398b5bee55b88b", "html_url": "https://github.com/rust-lang/rust/commit/8885dc2b37c1f2cf541938c893398b5bee55b88b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8885dc2b37c1f2cf541938c893398b5bee55b88b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2628f579f6246df385acf9203bf2ffb6aedf5ccc", "url": "https://api.github.com/repos/rust-lang/rust/commits/2628f579f6246df385acf9203bf2ffb6aedf5ccc", "html_url": "https://github.com/rust-lang/rust/commit/2628f579f6246df385acf9203bf2ffb6aedf5ccc"}, {"sha": "39185dd398644a184989c75e7cb34ab62cb871eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/39185dd398644a184989c75e7cb34ab62cb871eb", "html_url": "https://github.com/rust-lang/rust/commit/39185dd398644a184989c75e7cb34ab62cb871eb"}], "stats": {"total": 55, "additions": 32, "deletions": 23}, "files": [{"sha": "3e716bf4c909c35bb513a96c9c4142f0a549361e", "filename": "Cargo.lock", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/8885dc2b37c1f2cf541938c893398b5bee55b88b/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/8885dc2b37c1f2cf541938c893398b5bee55b88b/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=8885dc2b37c1f2cf541938c893398b5bee55b88b", "patch": "@@ -19,8 +19,8 @@ version = \"0.0.0\"\n dependencies = [\n  \"compiler_builtins 0.1.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n- \"rand 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rand_xorshift 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_xorshift 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -514,7 +514,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n name = \"core\"\n version = \"0.0.0\"\n dependencies = [\n- \"rand 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1050,7 +1050,7 @@ dependencies = [\n \n [[package]]\n name = \"getrandom\"\n-version = \"0.1.7\"\n+version = \"0.1.8\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cfg-if 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2246,7 +2246,7 @@ name = \"rand\"\n version = \"0.7.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"getrandom 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"getrandom 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_chacha 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_core 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2286,7 +2286,7 @@ name = \"rand_core\"\n version = \"0.5.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"getrandom 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"getrandom 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -2343,6 +2343,14 @@ dependencies = [\n  \"rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"rand_xorshift\"\n+version = \"0.2.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"rand_core 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"rayon\"\n version = \"1.1.0\"\n@@ -4436,7 +4444,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum fwdansi 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"34dd4c507af68d37ffef962063dfa1944ce0dd4d5b82043dbab1dabe088610c3\"\n \"checksum generic-array 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ef25c5683767570c2bbd7deba372926a55eaae9982d7726ee2a1050239d45b9d\"\n \"checksum getopts 0.2.19 (registry+https://github.com/rust-lang/crates.io-index)\" = \"72327b15c228bfe31f1390f93dd5e9279587f0463836393c9df719ce62a3e450\"\n-\"checksum getrandom 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cd8e190892c840661957ba9f32dacfb3eb405e657f9f9f60485605f0bb37d6f8\"\n+\"checksum getrandom 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"34f33de6f0ae7c9cb5e574502a562e2b512799e32abb801cd1e79ad952b62b49\"\n \"checksum git2 0.9.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8cb400360e8a4d61b10e648285bbfa919bbf9519d0d5d5720354456f44349226\"\n \"checksum git2-curl 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2293de73491c3dc4174c5949ef53d2cc037b27613f88d72032e3f5237247a7dd\"\n \"checksum glob 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9b919933a397b79c37e33b77bb2aa3dc8eb6e165ad809e58ff75bc7db2e34574\"\n@@ -4567,6 +4575,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7b75f676a1e053fc562eafbb47838d67c84801e38fc1ba459e8f180deabd5071\"\n \"checksum rand_pcg 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"086bd09a33c7044e56bb44d5bdde5a60e7f119a9e95b0775f545de759a32fe05\"\n \"checksum rand_xorshift 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"effa3fcaa47e18db002bdde6060944b6d2f9cfd8db471c30e873448ad9187be3\"\n+\"checksum rand_xorshift 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"77d416b86801d23dde1aa643023b775c3a462efc0ed96443add11546cdf1dca8\"\n \"checksum rayon 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a4b0186e22767d5b9738a05eab7c6ac90b15db17e5b5f9bd87976dd7d89a10a4\"\n \"checksum rayon-core 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ebbe0df8435ac0c397d467b6cad6d25543d06e8a019ef3f6af3c384597515bd2\"\n \"checksum rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"678054eb77286b51581ba43620cc911abf02758c91f93f479767aed0f90458b2\""}, {"sha": "d1119f7b7c0a7f6a83cccaa0aa7c8d0897d5abde", "filename": "src/liballoc/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8885dc2b37c1f2cf541938c893398b5bee55b88b/src%2Fliballoc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8885dc2b37c1f2cf541938c893398b5bee55b88b/src%2Fliballoc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2FCargo.toml?ref=8885dc2b37c1f2cf541938c893398b5bee55b88b", "patch": "@@ -15,8 +15,8 @@ core = { path = \"../libcore\" }\n compiler_builtins = { version = \"0.1.10\", features = ['rustc-dep-of-std'] }\n \n [dev-dependencies]\n-rand = \"0.6\"\n-rand_xorshift = \"0.1\"\n+rand = \"0.7\"\n+rand_xorshift = \"0.2\"\n \n [[test]]\n name = \"collectionstests\""}, {"sha": "ef91d801dc72cb6e30c3915486f151bd9113cfe2", "filename": "src/liballoc/benches/slice.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8885dc2b37c1f2cf541938c893398b5bee55b88b/src%2Fliballoc%2Fbenches%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8885dc2b37c1f2cf541938c893398b5bee55b88b/src%2Fliballoc%2Fbenches%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbenches%2Fslice.rs?ref=8885dc2b37c1f2cf541938c893398b5bee55b88b", "patch": "@@ -186,12 +186,12 @@ const SEED: [u8; 16] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n \n fn gen_random(len: usize) -> Vec<u64> {\n     let mut rng = XorShiftRng::from_seed(SEED);\n-    rng.sample_iter(&Standard).take(len).collect()\n+    (&mut rng).sample_iter(&Standard).take(len).collect()\n }\n \n fn gen_random_bytes(len: usize) -> Vec<u8> {\n     let mut rng = XorShiftRng::from_seed(SEED);\n-    rng.sample_iter(&Standard).take(len).collect()\n+    (&mut rng).sample_iter(&Standard).take(len).collect()\n }\n \n fn gen_mostly_ascending(len: usize) -> Vec<u64> {\n@@ -221,14 +221,14 @@ fn gen_strings(len: usize) -> Vec<String> {\n     let mut v = vec![];\n     for _ in 0..len {\n         let n = rng.gen::<usize>() % 20 + 1;\n-        v.push(rng.sample_iter(&Alphanumeric).take(n).collect());\n+        v.push((&mut rng).sample_iter(&Alphanumeric).take(n).collect());\n     }\n     v\n }\n \n fn gen_big_random(len: usize) -> Vec<[u64; 16]> {\n     let mut rng = XorShiftRng::from_seed(SEED);\n-    rng.sample_iter(&Standard).map(|x| [x; 16]).take(len).collect()\n+    (&mut rng).sample_iter(&Standard).map(|x| [x; 16]).take(len).collect()\n }\n \n macro_rules! sort {"}, {"sha": "ac07ffb14febdd8ba0f74a7d1a319b1f0ea5f1f4", "filename": "src/libcore/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8885dc2b37c1f2cf541938c893398b5bee55b88b/src%2Flibcore%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8885dc2b37c1f2cf541938c893398b5bee55b88b/src%2Flibcore%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2FCargo.toml?ref=8885dc2b37c1f2cf541938c893398b5bee55b88b", "patch": "@@ -21,7 +21,7 @@ name = \"corebenches\"\n path = \"../libcore/benches/lib.rs\"\n \n [dev-dependencies]\n-rand = \"0.6\"\n+rand = \"0.7\"\n \n [features]\n # Make panics and failed asserts immediately abort without formatting any message"}, {"sha": "d56787b2819a7387a7191426733bdbb8ec19ac03", "filename": "src/libcore/tests/num/flt2dec/random.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8885dc2b37c1f2cf541938c893398b5bee55b88b/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Frandom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8885dc2b37c1f2cf541938c893398b5bee55b88b/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Frandom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Frandom.rs?ref=8885dc2b37c1f2cf541938c893398b5bee55b88b", "patch": "@@ -8,8 +8,8 @@ use core::num::flt2dec::strategy::grisu::format_exact_opt;\n use core::num::flt2dec::strategy::grisu::format_shortest_opt;\n use core::num::flt2dec::{decode, DecodableFloat, FullDecoded, Decoded};\n \n-use rand::FromEntropy;\n-use rand::rngs::SmallRng;\n+use rand::SeedableRng;\n+use rand::rngs::StdRng;\n use rand::distributions::{Distribution, Uniform};\n \n pub fn decode_finite<T: DecodableFloat>(v: T) -> Decoded {\n@@ -65,7 +65,7 @@ pub fn f32_random_equivalence_test<F, G>(f: F, g: G, k: usize, n: usize)\n     if cfg!(target_os = \"emscripten\") {\n         return // using rng pulls in i128 support, which doesn't work\n     }\n-    let mut rng = SmallRng::from_entropy();\n+    let mut rng = StdRng::from_entropy();\n     let f32_range = Uniform::new(0x0000_0001u32, 0x7f80_0000);\n     iterate(\"f32_random_equivalence_test\", k, n, f, g, |_| {\n         let x = f32::from_bits(f32_range.sample(&mut rng));\n@@ -79,7 +79,7 @@ pub fn f64_random_equivalence_test<F, G>(f: F, g: G, k: usize, n: usize)\n     if cfg!(target_os = \"emscripten\") {\n         return // using rng pulls in i128 support, which doesn't work\n     }\n-    let mut rng = SmallRng::from_entropy();\n+    let mut rng = StdRng::from_entropy();\n     let f64_range = Uniform::new(0x0000_0000_0000_0001u64, 0x7ff0_0000_0000_0000);\n     iterate(\"f64_random_equivalence_test\", k, n, f, g, |_| {\n         let x = f64::from_bits(f64_range.sample(&mut rng));"}, {"sha": "04ad02766616dff650751634fc3e1d663e5cf269", "filename": "src/libcore/tests/slice.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8885dc2b37c1f2cf541938c893398b5bee55b88b/src%2Flibcore%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8885dc2b37c1f2cf541938c893398b5bee55b88b/src%2Flibcore%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fslice.rs?ref=8885dc2b37c1f2cf541938c893398b5bee55b88b", "patch": "@@ -1157,7 +1157,7 @@ fn test_rotate_right() {\n fn sort_unstable() {\n     use core::cmp::Ordering::{Equal, Greater, Less};\n     use core::slice::heapsort;\n-    use rand::{FromEntropy, Rng, rngs::SmallRng, seq::SliceRandom};\n+    use rand::{SeedableRng, Rng, rngs::StdRng, seq::SliceRandom};\n \n     #[cfg(not(miri))] // Miri is too slow\n     let large_range = 500..510;\n@@ -1171,7 +1171,7 @@ fn sort_unstable() {\n \n     let mut v = [0; 600];\n     let mut tmp = [0; 600];\n-    let mut rng = SmallRng::from_entropy();\n+    let mut rng = StdRng::from_entropy();\n \n     for len in (2..25).chain(large_range) {\n         let v = &mut v[0..len];\n@@ -1237,11 +1237,11 @@ fn sort_unstable() {\n #[cfg(not(miri))] // Miri is too slow\n fn partition_at_index() {\n     use core::cmp::Ordering::{Equal, Greater, Less};\n-    use rand::rngs::SmallRng;\n+    use rand::rngs::StdRng;\n     use rand::seq::SliceRandom;\n-    use rand::{FromEntropy, Rng};\n+    use rand::{SeedableRng, Rng};\n \n-    let mut rng = SmallRng::from_entropy();\n+    let mut rng = StdRng::from_entropy();\n \n     for len in (2..21).chain(500..501) {\n         let mut orig = vec![0; len];"}]}