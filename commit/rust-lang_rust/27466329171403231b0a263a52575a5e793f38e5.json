{"sha": "27466329171403231b0a263a52575a5e793f38e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3NDY2MzI5MTcxNDAzMjMxYjBhMjYzYTUyNTc1YTVlNzkzZjM4ZTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-20T00:36:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-20T00:36:53Z"}, "message": "Auto merge of #6766 - matthiaskrgr:nestedmatch, r=flip1995\n\ncollapsible_match: fix lint message capitalization\n\n(see https://rustc-dev-guide.rust-lang.org/diagnostics.html for details)\n\n---\n\n*Please write a short comment explaining your change (or \"none\" for internal only changes)*\nchangelog: collapsible_match: fix lint message capitalization", "tree": {"sha": "20e6c4c40e73b93e60e73dad86f704326d80b168", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20e6c4c40e73b93e60e73dad86f704326d80b168"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27466329171403231b0a263a52575a5e793f38e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27466329171403231b0a263a52575a5e793f38e5", "html_url": "https://github.com/rust-lang/rust/commit/27466329171403231b0a263a52575a5e793f38e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27466329171403231b0a263a52575a5e793f38e5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23de8013a641247a2244797f5919249ae069f369", "url": "https://api.github.com/repos/rust-lang/rust/commits/23de8013a641247a2244797f5919249ae069f369", "html_url": "https://github.com/rust-lang/rust/commit/23de8013a641247a2244797f5919249ae069f369"}, {"sha": "1f4153aa1e2fc4a59527c17cde43f3feb3088463", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f4153aa1e2fc4a59527c17cde43f3feb3088463", "html_url": "https://github.com/rust-lang/rust/commit/1f4153aa1e2fc4a59527c17cde43f3feb3088463"}], "stats": {"total": 96, "additions": 48, "deletions": 48}, "files": [{"sha": "3c45525684be455365a85c323d076ffbe44d92e3", "filename": "clippy_lints/src/collapsible_match.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/27466329171403231b0a263a52575a5e793f38e5/clippy_lints%2Fsrc%2Fcollapsible_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27466329171403231b0a263a52575a5e793f38e5/clippy_lints%2Fsrc%2Fcollapsible_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcollapsible_match.rs?ref=27466329171403231b0a263a52575a5e793f38e5", "patch": "@@ -96,12 +96,12 @@ fn check_arm<'tcx>(arm: &Arm<'tcx>, wild_outer_arm: &Arm<'tcx>, cx: &LateContext\n                 cx,\n                 COLLAPSIBLE_MATCH,\n                 expr.span,\n-                \"Unnecessary nested match\",\n+                \"unnecessary nested match\",\n                 |diag| {\n                     let mut help_span = MultiSpan::from_spans(vec![binding_span, non_wild_inner_arm.pat.span]);\n-                    help_span.push_span_label(binding_span, \"Replace this binding\".into());\n+                    help_span.push_span_label(binding_span, \"replace this binding\".into());\n                     help_span.push_span_label(non_wild_inner_arm.pat.span, \"with this pattern\".into());\n-                    diag.span_help(help_span, \"The outer pattern can be modified to include the inner pattern.\");\n+                    diag.span_help(help_span, \"the outer pattern can be modified to include the inner pattern\");\n                 },\n             );\n         }"}, {"sha": "77978884900893f816cc016ea570e93a33c32688", "filename": "tests/ui/collapsible_match.stderr", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/27466329171403231b0a263a52575a5e793f38e5/tests%2Fui%2Fcollapsible_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27466329171403231b0a263a52575a5e793f38e5/tests%2Fui%2Fcollapsible_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_match.stderr?ref=27466329171403231b0a263a52575a5e793f38e5", "patch": "@@ -1,4 +1,4 @@\n-error: Unnecessary nested match\n+error: unnecessary nested match\n   --> $DIR/collapsible_match.rs:7:20\n    |\n LL |           Ok(val) => match val {\n@@ -9,15 +9,15 @@ LL | |         },\n    | |_________^\n    |\n    = note: `-D clippy::collapsible-match` implied by `-D warnings`\n-help: The outer pattern can be modified to include the inner pattern.\n+help: the outer pattern can be modified to include the inner pattern\n   --> $DIR/collapsible_match.rs:7:12\n    |\n LL |         Ok(val) => match val {\n-   |            ^^^ Replace this binding\n+   |            ^^^ replace this binding\n LL |             Some(n) => foo(n),\n    |             ^^^^^^^ with this pattern\n \n-error: Unnecessary nested match\n+error: unnecessary nested match\n   --> $DIR/collapsible_match.rs:16:20\n    |\n LL |           Ok(val) => match val {\n@@ -27,31 +27,31 @@ LL | |             _ => return,\n LL | |         },\n    | |_________^\n    |\n-help: The outer pattern can be modified to include the inner pattern.\n+help: the outer pattern can be modified to include the inner pattern\n   --> $DIR/collapsible_match.rs:16:12\n    |\n LL |         Ok(val) => match val {\n-   |            ^^^ Replace this binding\n+   |            ^^^ replace this binding\n LL |             Some(n) => foo(n),\n    |             ^^^^^^^ with this pattern\n \n-error: Unnecessary nested match\n+error: unnecessary nested match\n   --> $DIR/collapsible_match.rs:25:9\n    |\n LL | /         if let Some(n) = val {\n LL | |             take(n);\n LL | |         }\n    | |_________^\n    |\n-help: The outer pattern can be modified to include the inner pattern.\n+help: the outer pattern can be modified to include the inner pattern\n   --> $DIR/collapsible_match.rs:24:15\n    |\n LL |     if let Ok(val) = res_opt {\n-   |               ^^^ Replace this binding\n+   |               ^^^ replace this binding\n LL |         if let Some(n) = val {\n    |                ^^^^^^^ with this pattern\n \n-error: Unnecessary nested match\n+error: unnecessary nested match\n   --> $DIR/collapsible_match.rs:32:9\n    |\n LL | /         if let Some(n) = val {\n@@ -61,15 +61,15 @@ LL | |             return;\n LL | |         }\n    | |_________^\n    |\n-help: The outer pattern can be modified to include the inner pattern.\n+help: the outer pattern can be modified to include the inner pattern\n   --> $DIR/collapsible_match.rs:31:15\n    |\n LL |     if let Ok(val) = res_opt {\n-   |               ^^^ Replace this binding\n+   |               ^^^ replace this binding\n LL |         if let Some(n) = val {\n    |                ^^^^^^^ with this pattern\n \n-error: Unnecessary nested match\n+error: unnecessary nested match\n   --> $DIR/collapsible_match.rs:43:9\n    |\n LL | /         match val {\n@@ -78,32 +78,32 @@ LL | |             _ => (),\n LL | |         }\n    | |_________^\n    |\n-help: The outer pattern can be modified to include the inner pattern.\n+help: the outer pattern can be modified to include the inner pattern\n   --> $DIR/collapsible_match.rs:42:15\n    |\n LL |     if let Ok(val) = res_opt {\n-   |               ^^^ Replace this binding\n+   |               ^^^ replace this binding\n LL |         match val {\n LL |             Some(n) => foo(n),\n    |             ^^^^^^^ with this pattern\n \n-error: Unnecessary nested match\n+error: unnecessary nested match\n   --> $DIR/collapsible_match.rs:52:13\n    |\n LL | /             if let Some(n) = val {\n LL | |                 take(n);\n LL | |             }\n    | |_____________^\n    |\n-help: The outer pattern can be modified to include the inner pattern.\n+help: the outer pattern can be modified to include the inner pattern\n   --> $DIR/collapsible_match.rs:51:12\n    |\n LL |         Ok(val) => {\n-   |            ^^^ Replace this binding\n+   |            ^^^ replace this binding\n LL |             if let Some(n) = val {\n    |                    ^^^^^^^ with this pattern\n \n-error: Unnecessary nested match\n+error: unnecessary nested match\n   --> $DIR/collapsible_match.rs:61:9\n    |\n LL | /         match val {\n@@ -112,16 +112,16 @@ LL | |             _ => return,\n LL | |         }\n    | |_________^\n    |\n-help: The outer pattern can be modified to include the inner pattern.\n+help: the outer pattern can be modified to include the inner pattern\n   --> $DIR/collapsible_match.rs:60:15\n    |\n LL |     if let Ok(val) = res_opt {\n-   |               ^^^ Replace this binding\n+   |               ^^^ replace this binding\n LL |         match val {\n LL |             Some(n) => foo(n),\n    |             ^^^^^^^ with this pattern\n \n-error: Unnecessary nested match\n+error: unnecessary nested match\n   --> $DIR/collapsible_match.rs:72:13\n    |\n LL | /             if let Some(n) = val {\n@@ -131,15 +131,15 @@ LL | |                 return;\n LL | |             }\n    | |_____________^\n    |\n-help: The outer pattern can be modified to include the inner pattern.\n+help: the outer pattern can be modified to include the inner pattern\n   --> $DIR/collapsible_match.rs:71:12\n    |\n LL |         Ok(val) => {\n-   |            ^^^ Replace this binding\n+   |            ^^^ replace this binding\n LL |             if let Some(n) = val {\n    |                    ^^^^^^^ with this pattern\n \n-error: Unnecessary nested match\n+error: unnecessary nested match\n   --> $DIR/collapsible_match.rs:83:20\n    |\n LL |           Ok(val) => match val {\n@@ -149,15 +149,15 @@ LL | |             None => return,\n LL | |         },\n    | |_________^\n    |\n-help: The outer pattern can be modified to include the inner pattern.\n+help: the outer pattern can be modified to include the inner pattern\n   --> $DIR/collapsible_match.rs:83:12\n    |\n LL |         Ok(val) => match val {\n-   |            ^^^ Replace this binding\n+   |            ^^^ replace this binding\n LL |             Some(n) => foo(n),\n    |             ^^^^^^^ with this pattern\n \n-error: Unnecessary nested match\n+error: unnecessary nested match\n   --> $DIR/collapsible_match.rs:92:22\n    |\n LL |           Some(val) => match val {\n@@ -167,11 +167,11 @@ LL | |             _ => return,\n LL | |         },\n    | |_________^\n    |\n-help: The outer pattern can be modified to include the inner pattern.\n+help: the outer pattern can be modified to include the inner pattern\n   --> $DIR/collapsible_match.rs:92:14\n    |\n LL |         Some(val) => match val {\n-   |              ^^^ Replace this binding\n+   |              ^^^ replace this binding\n LL |             Some(n) => foo(n),\n    |             ^^^^^^^ with this pattern\n "}, {"sha": "c8a445ef369d9be9c796ad3c43552119394e8781", "filename": "tests/ui/collapsible_match2.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/27466329171403231b0a263a52575a5e793f38e5/tests%2Fui%2Fcollapsible_match2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27466329171403231b0a263a52575a5e793f38e5/tests%2Fui%2Fcollapsible_match2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_match2.stderr?ref=27466329171403231b0a263a52575a5e793f38e5", "patch": "@@ -1,4 +1,4 @@\n-error: Unnecessary nested match\n+error: unnecessary nested match\n   --> $DIR/collapsible_match2.rs:8:34\n    |\n LL |               Ok(val) if make() => match val {\n@@ -9,15 +9,15 @@ LL | |             },\n    | |_____________^\n    |\n    = note: `-D clippy::collapsible-match` implied by `-D warnings`\n-help: The outer pattern can be modified to include the inner pattern.\n+help: the outer pattern can be modified to include the inner pattern\n   --> $DIR/collapsible_match2.rs:8:16\n    |\n LL |             Ok(val) if make() => match val {\n-   |                ^^^ Replace this binding\n+   |                ^^^ replace this binding\n LL |                 Some(n) => foo(n),\n    |                 ^^^^^^^ with this pattern\n \n-error: Unnecessary nested match\n+error: unnecessary nested match\n   --> $DIR/collapsible_match2.rs:15:24\n    |\n LL |               Ok(val) => match val {\n@@ -27,15 +27,15 @@ LL | |                 _ => return,\n LL | |             },\n    | |_____________^\n    |\n-help: The outer pattern can be modified to include the inner pattern.\n+help: the outer pattern can be modified to include the inner pattern\n   --> $DIR/collapsible_match2.rs:15:16\n    |\n LL |             Ok(val) => match val {\n-   |                ^^^ Replace this binding\n+   |                ^^^ replace this binding\n LL |                 Some(n) => foo(n),\n    |                 ^^^^^^^ with this pattern\n \n-error: Unnecessary nested match\n+error: unnecessary nested match\n   --> $DIR/collapsible_match2.rs:29:29\n    |\n LL |                       $pat => match $e {\n@@ -48,16 +48,16 @@ LL | |                     },\n LL |           mac!(res_opt => Ok(val), val => Some(n), foo(n));\n    |           ------------------------------------------------- in this macro invocation\n    |\n-help: The outer pattern can be modified to include the inner pattern.\n+help: the outer pattern can be modified to include the inner pattern\n   --> $DIR/collapsible_match2.rs:41:28\n    |\n LL |         mac!(res_opt => Ok(val), val => Some(n), foo(n));\n    |                            ^^^          ^^^^^^^ with this pattern\n    |                            |\n-   |                            Replace this binding\n+   |                            replace this binding\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: Unnecessary nested match\n+error: unnecessary nested match\n   --> $DIR/collapsible_match2.rs:46:20\n    |\n LL |           Some(s) => match *s {\n@@ -67,15 +67,15 @@ LL | |             _ => (),\n LL | |         },\n    | |_________^\n    |\n-help: The outer pattern can be modified to include the inner pattern.\n+help: the outer pattern can be modified to include the inner pattern\n   --> $DIR/collapsible_match2.rs:46:14\n    |\n LL |         Some(s) => match *s {\n-   |              ^ Replace this binding\n+   |              ^ replace this binding\n LL |             [n] => foo(n),\n    |             ^^^ with this pattern\n \n-error: Unnecessary nested match\n+error: unnecessary nested match\n   --> $DIR/collapsible_match2.rs:55:24\n    |\n LL |           Some(ref s) => match &*s {\n@@ -85,11 +85,11 @@ LL | |             _ => (),\n LL | |         },\n    | |_________^\n    |\n-help: The outer pattern can be modified to include the inner pattern.\n+help: the outer pattern can be modified to include the inner pattern\n   --> $DIR/collapsible_match2.rs:55:14\n    |\n LL |         Some(ref s) => match &*s {\n-   |              ^^^^^ Replace this binding\n+   |              ^^^^^ replace this binding\n LL |             [n] => foo(n),\n    |             ^^^ with this pattern\n "}]}