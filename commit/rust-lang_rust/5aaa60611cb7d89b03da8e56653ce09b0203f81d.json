{"sha": "5aaa60611cb7d89b03da8e56653ce09b0203f81d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhYWE2MDYxMWNiN2Q4OWIwM2RhOGU1NjY1M2NlMDliMDIwM2Y4MWQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-03-10T07:49:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-03-10T07:49:06Z"}, "message": "Auto merge of #39835 - brson:relnotes, r=brson\n\nRelease notes for 1.16\n\n[Rendered](https://github.com/brson/rust/blob/relnotes/RELEASES.md)", "tree": {"sha": "6b6c2e10e058aafddb7c9918b4797c33bb62d644", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b6c2e10e058aafddb7c9918b4797c33bb62d644"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5aaa60611cb7d89b03da8e56653ce09b0203f81d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5aaa60611cb7d89b03da8e56653ce09b0203f81d", "html_url": "https://github.com/rust-lang/rust/commit/5aaa60611cb7d89b03da8e56653ce09b0203f81d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5aaa60611cb7d89b03da8e56653ce09b0203f81d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec87925325c005922977ebf9b10dc9e98d8a6d40", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec87925325c005922977ebf9b10dc9e98d8a6d40", "html_url": "https://github.com/rust-lang/rust/commit/ec87925325c005922977ebf9b10dc9e98d8a6d40"}, {"sha": "23c09eaa770c0bdc40dc744a4086dbe7976b4662", "url": "https://api.github.com/repos/rust-lang/rust/commits/23c09eaa770c0bdc40dc744a4086dbe7976b4662", "html_url": "https://github.com/rust-lang/rust/commit/23c09eaa770c0bdc40dc744a4086dbe7976b4662"}], "stats": {"total": 191, "additions": 191, "deletions": 0}, "files": [{"sha": "606936778c49a96dc4d1040aa9caaec03dd9631b", "filename": "RELEASES.md", "status": "modified", "additions": 191, "deletions": 0, "changes": 191, "blob_url": "https://github.com/rust-lang/rust/blob/5aaa60611cb7d89b03da8e56653ce09b0203f81d/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/5aaa60611cb7d89b03da8e56653ce09b0203f81d/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=5aaa60611cb7d89b03da8e56653ce09b0203f81d", "patch": "@@ -1,3 +1,194 @@\n+Version 1.16.0 (2017-03-16)\n+===========================\n+\n+Language\n+--------\n+\n+* Lifetimes in statics and consts default to `'static`. [RFC 1623]\n+* [The compiler's `dead_code` lint now accounts for type aliases][38051].\n+* [Uninhabitable enums (those without any variants) no longer permit wildcard\n+  match patterns][38069]\n+* [Clean up semantics of `self` in an import list][38313]\n+* [`Self` may appear in `impl` headers][38920]\n+* [`Self` may appear in struct expressions][39282]\n+\n+Compiler\n+--------\n+\n+* [`rustc` now supports `--emit=metadata`, which causes rustc to emit\n+  a `.rmeta` file containing only crate metadata][38571]. This can be\n+  used by tools like the Rust Language Service to perform\n+  metadata-only builds.\n+* [Levenshtein based typo suggestions now work in most places, while\n+  previously they worked only for fields and sometimes for local\n+  variables][38927]. Together with the overhaul of \"no\n+  resolution\"/\"unexpected resolution\" errors (#[38154]) they result in\n+  large and systematic improvement in resolution diagnostics.\n+* [Fix `transmute::<T, U>` where `T` requires a bigger alignment than\n+  `U`][38670]\n+* [rustc: use -Xlinker when specifying an rpath with ',' in it][38798]\n+* [`rustc` no longer attempts to provide \"consider using an explicit\n+  lifetime\" suggestions][37057]. They were inaccurate.\n+\n+Stabilized APIs\n+---------------\n+\n+* [`VecDeque::truncate`]\n+* [`VecDeque::resize`]\n+* [`String::insert_str`]\n+* [`Duration::checked_add`]\n+* [`Duration::checked_sub`]\n+* [`Duration::checked_div`]\n+* [`Duration::checked_mul`]\n+* [`str::replacen`]\n+* [`str::repeat`]\n+* [`SocketAddr::is_ipv4`]\n+* [`SocketAddr::is_ipv6`]\n+* [`IpAddr::is_ipv4`]\n+* [`IpAddr::is_ipv6`]\n+* [`Vec::dedup_by`]\n+* [`Vec::dedup_by_key`]\n+* [`Result::unwrap_or_default`]\n+* [`<*const T>::wrapping_offset`]\n+* [`<*mut T>::wrapping_offset`]\n+* `CommandExt::creation_flags`\n+* [`File::set_permissions`]\n+* [`String::split_off`]\n+\n+Libraries\n+---------\n+\n+* [`[T]::binary_search` and `[T]::binary_search_by_key` now take\n+  their argument by `Borrow` parameter][37761]\n+* [All public types in std implement `Debug`][38006]\n+* [`IpAddr` implements `From<Ipv4Addr>` and `From<Ipv6Addr>`][38327]\n+* [`Ipv6Addr` implements `From<[u16; 8]>`][38131]\n+* [Ctrl-Z returns from `Stdin.read()` when reading from the console on\n+  Windows][38274]\n+* [std: Fix partial writes in `LineWriter`][38062]\n+* [std: Clamp max read/write sizes on Unix][38062]\n+* [Use more specific panic message for `&str` slicing errors][38066]\n+* [`TcpListener::set_only_v6` is deprecated][38304]. This\n+  functionality cannot be achieved in std currently.\n+* [`writeln!`, like `println!`, now accepts a form with no string\n+  or formatting arguments, to just print a newline][38469]\n+* [Implement `iter::Sum` and `iter::Product` for `Result`][38580]\n+* [Reduce the size of static data in `std_unicode::tables`][38781]\n+* [`char::EscapeDebug`, `EscapeDefault`, `EscapeUnicode`,\n+  `CaseMappingIter`, `ToLowercase`, `ToUppercase`, implement\n+  `Display`][38909]\n+* [`Duration` implements `Sum`][38712]\n+* [`String` implements `ToSocketAddrs`][39048]\n+\n+Cargo\n+-----\n+\n+* [The `cargo check` command does a type check of a project without\n+  building it][cargo/3296]\n+* [crates.io will display CI badges from Travis and AppVeyor, if\n+  specified in Cargo.toml][cargo/3546]\n+* [crates.io will display categories listed in Cargo.toml][cargo/3301]\n+* [Compilation profiles accept integer values for `debug`, in addition\n+  to `true` and `false`. These are passed to `rustc` as the value to\n+  `-C debuginfo`][cargo/3534]\n+* [Implement `cargo --version --verbose`][cargo/3604]\n+* [All builds now output 'dep-info' build dependencies compatible with\n+  make and ninja][cargo/3557]\n+* [Build all workspace members with `build --all`][cargo/3511]\n+* [Document all workspace members with `doc --all`][cargo/3515]\n+* [Path deps outside workspace are not members][cargo/3443]\n+\n+Misc\n+----\n+\n+* [`rustdoc` has a `--sysroot` argument that, like `rustc`, specifies\n+  the path to the Rust implementation][38589]\n+* [The `armv7-linux-androideabi` target no longer enables NEON\n+  extensions, per Google's ABI guide][38413]\n+* [The stock standard library can be compiled for Redox OS][38401]\n+* [Rust has initial SPARC support][38726]. Tier 3. No builds\n+  available.\n+* [Rust has experimental support for Nvidia PTX][38559]. Tier 3. No\n+  builds available.\n+* [Fix backtraces on i686-pc-windows-gnu by disabling FPO][39379]\n+\n+Compatibility Notes\n+-------------------\n+\n+* [Uninhabitable enums (those without any variants) no longer permit wildcard\n+  match patterns][38069]\n+* In this release, references to uninhabited types can not be\n+  pattern-matched. This was accidentally allowed in 1.15.\n+* [The compiler's `dead_code` lint now accounts for type aliases][38051].\n+* [Ctrl-Z returns from `Stdin.read()` when reading from the console on\n+  Windows][38274]\n+* [Clean up semantics of `self` in an import list][38313]\n+\n+[37057]: https://github.com/rust-lang/rust/pull/37057\n+[37761]: https://github.com/rust-lang/rust/pull/37761\n+[38006]: https://github.com/rust-lang/rust/pull/38006\n+[38051]: https://github.com/rust-lang/rust/pull/38051\n+[38062]: https://github.com/rust-lang/rust/pull/38062\n+[38062]: https://github.com/rust-lang/rust/pull/38622\n+[38066]: https://github.com/rust-lang/rust/pull/38066\n+[38069]: https://github.com/rust-lang/rust/pull/38069\n+[38131]: https://github.com/rust-lang/rust/pull/38131\n+[38154]: https://github.com/rust-lang/rust/pull/38154\n+[38274]: https://github.com/rust-lang/rust/pull/38274\n+[38304]: https://github.com/rust-lang/rust/pull/38304\n+[38313]: https://github.com/rust-lang/rust/pull/38313\n+[38314]: https://github.com/rust-lang/rust/pull/38314\n+[38327]: https://github.com/rust-lang/rust/pull/38327\n+[38401]: https://github.com/rust-lang/rust/pull/38401\n+[38413]: https://github.com/rust-lang/rust/pull/38413\n+[38469]: https://github.com/rust-lang/rust/pull/38469\n+[38559]: https://github.com/rust-lang/rust/pull/38559\n+[38571]: https://github.com/rust-lang/rust/pull/38571\n+[38580]: https://github.com/rust-lang/rust/pull/38580\n+[38589]: https://github.com/rust-lang/rust/pull/38589\n+[38670]: https://github.com/rust-lang/rust/pull/38670\n+[38712]: https://github.com/rust-lang/rust/pull/38712\n+[38726]: https://github.com/rust-lang/rust/pull/38726\n+[38781]: https://github.com/rust-lang/rust/pull/38781\n+[38798]: https://github.com/rust-lang/rust/pull/38798\n+[38909]: https://github.com/rust-lang/rust/pull/38909\n+[38920]: https://github.com/rust-lang/rust/pull/38920\n+[38927]: https://github.com/rust-lang/rust/pull/38927\n+[39048]: https://github.com/rust-lang/rust/pull/39048\n+[39282]: https://github.com/rust-lang/rust/pull/39282\n+[39379]: https://github.com/rust-lang/rust/pull/39379\n+[`<*const T>::wrapping_offset`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.wrapping_offset\n+[`<*mut T>::wrapping_offset`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.wrapping_offset\n+[`Duration::checked_add`]: https://doc.rust-lang.org/std/time/struct.Duration.html#method.checked_add\n+[`Duration::checked_div`]: https://doc.rust-lang.org/std/time/struct.Duration.html#method.checked_div\n+[`Duration::checked_mul`]: https://doc.rust-lang.org/std/time/struct.Duration.html#method.checked_mul\n+[`Duration::checked_sub`]: https://doc.rust-lang.org/std/time/struct.Duration.html#method.checked_sub\n+[`File::set_permissions`]: https://doc.rust-lang.org/std/fs/struct.File.html#method.set_permissions\n+[`IpAddr::is_ipv4`]: https://doc.rust-lang.org/std/net/enum.IpAddr.html#method.is_ipv4\n+[`IpAddr::is_ipv6`]: https://doc.rust-lang.org/std/net/enum.IpAddr.html#method.is_ipv6\n+[`Result::unwrap_or_default`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap_or_default\n+[`SocketAddr::is_ipv4`]: https://doc.rust-lang.org/std/net/enum.SocketAddr.html#method.is_ipv4\n+[`SocketAddr::is_ipv6`]: https://doc.rust-lang.org/std/net/enum.SocketAddr.html#method.is_ipv6\n+[`String::insert_str`]: https://doc.rust-lang.org/std/string/struct.String.html#method.insert_str\n+[`String::split_off`]: https://doc.rust-lang.org/std/string/struct.String.html#method.split_off\n+[`Vec::dedup_by_key`]: https://doc.rust-lang.org/std/vec/struct.Vec.html#method.dedup_by_key\n+[`Vec::dedup_by`]: https://doc.rust-lang.org/std/vec/struct.Vec.html#method.dedup_by\n+[`VecDeque::resize`]:  https://doc.rust-lang.org/std/collections/vec_deque/struct.VecDeque.html#method.resize\n+[`VecDeque::truncate`]: https://doc.rust-lang.org/std/collections/vec_deque/struct.VecDeque.html#method.truncate\n+[`str::repeat`]: https://doc.rust-lang.org/std/primitive.str.html#method.repeat\n+[`str::replacen`]: https://doc.rust-lang.org/std/primitive.str.html#method.replacen\n+[cargo/3296]: https://github.com/rust-lang/cargo/pull/3296\n+[cargo/3301]: https://github.com/rust-lang/cargo/pull/3301\n+[cargo/3443]: https://github.com/rust-lang/cargo/pull/3443\n+[cargo/3511]: https://github.com/rust-lang/cargo/pull/3511\n+[cargo/3515]: https://github.com/rust-lang/cargo/pull/3515\n+[cargo/3534]: https://github.com/rust-lang/cargo/pull/3534\n+[cargo/3546]: https://github.com/rust-lang/cargo/pull/3546\n+[cargo/3557]: https://github.com/rust-lang/cargo/pull/3557\n+[cargo/3604]: https://github.com/rust-lang/cargo/pull/3604\n+[RFC 1623]: https://github.com/rust-lang/rfcs/blob/master/text/1623-static.md\n+\n+\n Version 1.15.1 (2017-02-09)\n ===========================\n "}]}