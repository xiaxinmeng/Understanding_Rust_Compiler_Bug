{"sha": "bc310144230ad87edbfb40e1ed49c5d947d569bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjMzEwMTQ0MjMwYWQ4N2VkYmZiNDBlMWVkNDljNWQ5NDdkNTY5YmI=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-10-31T06:04:50Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-10-31T06:04:50Z"}, "message": "Add an optional max width argument to rewrite_string()", "tree": {"sha": "f45c35d01457678ad52f0ae18e25d38fca0a77f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f45c35d01457678ad52f0ae18e25d38fca0a77f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc310144230ad87edbfb40e1ed49c5d947d569bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc310144230ad87edbfb40e1ed49c5d947d569bb", "html_url": "https://github.com/rust-lang/rust/commit/bc310144230ad87edbfb40e1ed49c5d947d569bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc310144230ad87edbfb40e1ed49c5d947d569bb/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e99893e25c900ceb8b61c6c69e8a46d3e604c1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e99893e25c900ceb8b61c6c69e8a46d3e604c1d", "html_url": "https://github.com/rust-lang/rust/commit/7e99893e25c900ceb8b61c6c69e8a46d3e604c1d"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "4c48337e0363190145861472822b5c00f3ebf174", "filename": "src/expr.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bc310144230ad87edbfb40e1ed49c5d947d569bb/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc310144230ad87edbfb40e1ed49c5d947d569bb/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=bc310144230ad87edbfb40e1ed49c5d947d569bb", "patch": "@@ -1955,7 +1955,11 @@ fn rewrite_string_lit(context: &RewriteContext, span: Span, shape: Shape) -> Opt\n     // Remove the quote characters.\n     let str_lit = &string_lit[1..string_lit.len() - 1];\n \n-    rewrite_string(str_lit, &StringFormat::new(shape.visual_indent(0), context.config))\n+    rewrite_string(\n+        str_lit,\n+        &StringFormat::new(shape.visual_indent(0), context.config),\n+        None,\n+    )\n }\n \n fn string_requires_rewrite("}, {"sha": "43b1ccbcb937146caa602c4781e56ed46f5f664f", "filename": "src/string.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bc310144230ad87edbfb40e1ed49c5d947d569bb/src%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc310144230ad87edbfb40e1ed49c5d947d569bb/src%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstring.rs?ref=bc310144230ad87edbfb40e1ed49c5d947d569bb", "patch": "@@ -44,7 +44,11 @@ impl<'a> StringFormat<'a> {\n }\n \n // FIXME: simplify this!\n-pub fn rewrite_string<'a>(orig: &str, fmt: &StringFormat<'a>) -> Option<String> {\n+pub fn rewrite_string<'a>(\n+    orig: &str,\n+    fmt: &StringFormat<'a>,\n+    max_width: Option<usize>,\n+) -> Option<String> {\n     // Strip line breaks.\n     let re = Regex::new(r\"([^\\\\](\\\\\\\\)*)\\\\[\\n\\r][[:space:]]*\").unwrap();\n     let stripped_str = re.replace_all(orig, \"$1\");\n@@ -67,7 +71,7 @@ pub fn rewrite_string<'a>(orig: &str, fmt: &StringFormat<'a>) -> Option<String>\n     let ender_length = fmt.line_end.len();\n     // If we cannot put at least a single character per line, the rewrite won't\n     // succeed.\n-    let max_chars = shape\n+    let mut max_chars = shape\n         .width\n         .checked_sub(fmt.opener.len() + ender_length + 1)? + 1;\n \n@@ -135,6 +139,10 @@ pub fn rewrite_string<'a>(orig: &str, fmt: &StringFormat<'a>) -> Option<String>\n \n         // The next line starts where the current line ends.\n         cur_start = cur_end;\n+\n+        if let Some(new_max_chars) = max_width {\n+            max_chars = new_max_chars.checked_sub(fmt.opener.len() + ender_length + 1)? + 1;\n+        }\n     }\n \n     result.push_str(fmt.closer);\n@@ -150,6 +158,6 @@ mod test {\n     fn issue343() {\n         let config = Default::default();\n         let fmt = StringFormat::new(Shape::legacy(2, Indent::empty()), &config);\n-        rewrite_string(\"eq_\", &fmt);\n+        rewrite_string(\"eq_\", &fmt, None);\n     }\n }"}]}