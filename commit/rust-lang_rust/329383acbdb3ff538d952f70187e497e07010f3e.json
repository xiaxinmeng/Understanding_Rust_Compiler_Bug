{"sha": "329383acbdb3ff538d952f70187e497e07010f3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyOTM4M2FjYmRiM2ZmNTM4ZDk1MmY3MDE4N2U0OTdlMDcwMTBmM2U=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-02-16T21:48:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-02-16T21:48:38Z"}, "message": "Auto merge of #1176 - RalfJung:readme, r=oli-obk\n\nupdate Readme", "tree": {"sha": "c97cf5d0cfca26e9a4736d9b596458185a5ee670", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c97cf5d0cfca26e9a4736d9b596458185a5ee670"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/329383acbdb3ff538d952f70187e497e07010f3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/329383acbdb3ff538d952f70187e497e07010f3e", "html_url": "https://github.com/rust-lang/rust/commit/329383acbdb3ff538d952f70187e497e07010f3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/329383acbdb3ff538d952f70187e497e07010f3e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "daaf9f7e28530ad86ae194a671144003635a09ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/daaf9f7e28530ad86ae194a671144003635a09ae", "html_url": "https://github.com/rust-lang/rust/commit/daaf9f7e28530ad86ae194a671144003635a09ae"}, {"sha": "e449dccd3764b8adb1be4787b345eae9b0c7306e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e449dccd3764b8adb1be4787b345eae9b0c7306e", "html_url": "https://github.com/rust-lang/rust/commit/e449dccd3764b8adb1be4787b345eae9b0c7306e"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "1f008e735ec2c25c3c8be35f3a450c083a54262e", "filename": "README.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/329383acbdb3ff538d952f70187e497e07010f3e/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/329383acbdb3ff538d952f70187e497e07010f3e/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=329383acbdb3ff538d952f70187e497e07010f3e", "patch": "@@ -14,13 +14,13 @@ for example:\n * Not sufficiently aligned memory accesses and references\n * Violation of *some* basic type invariants (a `bool` that is not 0 or 1, for example,\n   or an invalid enum discriminant)\n-* WIP: Violations of the rules governing aliasing for reference types\n+* **Experimental**: Violations of the rules governing aliasing for reference types\n \n Miri has already discovered some [real-world bugs](#bugs-found-by-miri).  If you\n found a bug with Miri, we'd appreciate if you tell us and we'll add it to the\n list!\n \n-Be aware that Miri will not catch all cases of undefined behavior in your\n+Be aware that Miri will **not catch all cases of undefined behavior** in your\n program, and cannot run all programs:\n \n * There are still plenty of open questions around the basic invariants for some\n@@ -147,8 +147,8 @@ Several `-Z` flags are relevant for Miri:\n \n * `-Zmiri-seed=<hex>` is a custom `-Z` flag added by Miri.  It configures the\n   seed of the RNG that Miri uses to resolve non-determinism.  This RNG is used\n-  to pick base addresses for allocations, and when the interpreted program\n-  requests system entropy.  The default seed is 0.\n+  to pick base addresses for allocations.  When isolation is enabled (the default),\n+  this is also used to emulate system entropy.  The default seed is 0.\n   **NOTE**: This entropy is not good enough for cryptographic use!  Do not\n   generate secret keys in Miri or perform other kinds of cryptographic\n   operations that rely on proper random numbers.\n@@ -157,8 +157,8 @@ Several `-Z` flags are relevant for Miri:\n   useful for debugging.  It means Miri will miss bugs in your program.  However,\n   this can also help to make Miri run faster.\n * `-Zmiri-disable-isolation` disables host host isolation.  As a consequence,\n-  the program has access to host resources such as environment variables and\n-  randomness (and, eventually, file systems and more).\n+  the program has access to host resources such as environment variables, file\n+  systems, and randomness.\n * `-Zmiri-ignore-leaks` disables the memory leak checker.\n * `-Zmiri-env-exclude=<var>` keeps the `var` environment variable isolated from\n   the host. Can be used multiple times to exclude several variables. The `TERM`"}]}