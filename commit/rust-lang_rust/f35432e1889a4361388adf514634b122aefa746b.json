{"sha": "f35432e1889a4361388adf514634b122aefa746b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzNTQzMmUxODg5YTQzNjEzODhhZGY1MTQ2MzRiMTIyYWVmYTc0NmI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-18T21:53:08Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-24T19:53:55Z"}, "message": "or-patterns: add syntactic tests.", "tree": {"sha": "341c59dcdd514c0db84e71c674a00a5624ae6e4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/341c59dcdd514c0db84e71c674a00a5624ae6e4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f35432e1889a4361388adf514634b122aefa746b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f35432e1889a4361388adf514634b122aefa746b", "html_url": "https://github.com/rust-lang/rust/commit/f35432e1889a4361388adf514634b122aefa746b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f35432e1889a4361388adf514634b122aefa746b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9af18bed544ede37b6b817cca1d4613aad4696f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9af18bed544ede37b6b817cca1d4613aad4696f", "html_url": "https://github.com/rust-lang/rust/commit/a9af18bed544ede37b6b817cca1d4613aad4696f"}], "stats": {"total": 217, "additions": 217, "deletions": 0}, "files": [{"sha": "43c9214bd98f7340356aa04863ee5976b8e6659c", "filename": "src/test/ui/or-patterns/or-patterns-syntactic-fail.rs", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/f35432e1889a4361388adf514634b122aefa746b/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35432e1889a4361388adf514634b122aefa746b/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-fail.rs?ref=f35432e1889a4361388adf514634b122aefa746b", "patch": "@@ -0,0 +1,56 @@\n+// Test some cases where or-patterns may ostensibly be allowed but are in fact not.\n+// This is not a semantic test. We only test parsing.\n+\n+#![feature(or_patterns)]\n+//~^ WARN the feature `or_patterns` is incomplete and may cause the compiler to crash\n+\n+fn main() {}\n+\n+// Test the `pat` macro fragment parser:\n+macro_rules! accept_pat {\n+    ($p:pat) => {}\n+}\n+\n+accept_pat!(p | q); //~ ERROR no rules expected the token `|`\n+accept_pat!(| p | q); //~ ERROR no rules expected the token `|`\n+\n+// Non-macro tests:\n+\n+enum E { A, B }\n+use E::*;\n+\n+fn no_top_level_or_patterns() {\n+    // We do *not* allow or-patterns at the top level of lambdas...\n+    let _ = |A | B: E| (); //~ ERROR binary operation `|` cannot be applied to type `E`\n+    //           -------- This looks like an or-pattern but is in fact `|A| (B: E | ())`.\n+\n+    // ...and for now neither do we allow or-patterns at the top level of functions.\n+    fn fun(A | B: E) {} //~ ERROR expected one of `:` or `@`, found `|`\n+}\n+\n+// We also do not allow a leading `|` when not in a top level position:\n+\n+#[cfg(FALSE)]\n+fn no_leading_parens() {\n+    let ( | A | B); //~ ERROR expected pattern, found `|`\n+}\n+\n+#[cfg(FALSE)]\n+fn no_leading_tuple() {\n+    let ( | A | B,); //~ ERROR expected pattern, found `|`\n+}\n+\n+#[cfg(FALSE)]\n+fn no_leading_slice() {\n+    let [ | A | B ]; //~ ERROR expected pattern, found `|`\n+}\n+\n+#[cfg(FALSE)]\n+fn no_leading_tuple_struct() {\n+    let TS( | A | B ); //~ ERROR expected pattern, found `|`\n+}\n+\n+#[cfg(FALSE)]\n+fn no_leading_struct() {\n+    let NS { f: | A | B }; //~ ERROR expected pattern, found `|`\n+}"}, {"sha": "809ff272f62046032b4657e12835b326fa08537f", "filename": "src/test/ui/or-patterns/or-patterns-syntactic-fail.stderr", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/f35432e1889a4361388adf514634b122aefa746b/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f35432e1889a4361388adf514634b122aefa746b/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-fail.stderr?ref=f35432e1889a4361388adf514634b122aefa746b", "patch": "@@ -0,0 +1,75 @@\n+error: expected one of `:` or `@`, found `|`\n+  --> $DIR/or-patterns-syntactic-fail.rs:28:14\n+   |\n+LL |     fn fun(A | B: E) {}\n+   |              ^ expected one of `:` or `@` here\n+\n+error: expected pattern, found `|`\n+  --> $DIR/or-patterns-syntactic-fail.rs:35:11\n+   |\n+LL |     let ( | A | B);\n+   |           ^ expected pattern\n+\n+error: expected pattern, found `|`\n+  --> $DIR/or-patterns-syntactic-fail.rs:40:11\n+   |\n+LL |     let ( | A | B,);\n+   |           ^ expected pattern\n+\n+error: expected pattern, found `|`\n+  --> $DIR/or-patterns-syntactic-fail.rs:45:11\n+   |\n+LL |     let [ | A | B ];\n+   |           ^ expected pattern\n+\n+error: expected pattern, found `|`\n+  --> $DIR/or-patterns-syntactic-fail.rs:50:13\n+   |\n+LL |     let TS( | A | B );\n+   |             ^ expected pattern\n+\n+error: expected pattern, found `|`\n+  --> $DIR/or-patterns-syntactic-fail.rs:55:17\n+   |\n+LL |     let NS { f: | A | B };\n+   |                 ^ expected pattern\n+\n+error: no rules expected the token `|`\n+  --> $DIR/or-patterns-syntactic-fail.rs:14:15\n+   |\n+LL | macro_rules! accept_pat {\n+   | ----------------------- when calling this macro\n+...\n+LL | accept_pat!(p | q);\n+   |               ^ no rules expected this token in macro call\n+\n+error: no rules expected the token `|`\n+  --> $DIR/or-patterns-syntactic-fail.rs:15:13\n+   |\n+LL | macro_rules! accept_pat {\n+   | ----------------------- when calling this macro\n+...\n+LL | accept_pat!(| p | q);\n+   |             ^ no rules expected this token in macro call\n+\n+warning: the feature `or_patterns` is incomplete and may cause the compiler to crash\n+  --> $DIR/or-patterns-syntactic-fail.rs:4:12\n+   |\n+LL | #![feature(or_patterns)]\n+   |            ^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error[E0369]: binary operation `|` cannot be applied to type `E`\n+  --> $DIR/or-patterns-syntactic-fail.rs:24:22\n+   |\n+LL |     let _ = |A | B: E| ();\n+   |                  ----^ -- ()\n+   |                  |\n+   |                  E\n+   |\n+   = note: an implementation of `std::ops::BitOr` might be missing for `E`\n+\n+error: aborting due to 9 previous errors\n+\n+For more information about this error, try `rustc --explain E0369`."}, {"sha": "5fe72caf9c1ff7a9c3ee401a76dd4f6ab8e86761", "filename": "src/test/ui/or-patterns/or-patterns-syntactic-pass.rs", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/f35432e1889a4361388adf514634b122aefa746b/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35432e1889a4361388adf514634b122aefa746b/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-pass.rs?ref=f35432e1889a4361388adf514634b122aefa746b", "patch": "@@ -0,0 +1,78 @@\n+// Here we test all the places `|` is *syntactically* allowed.\n+// This is not a semantic test. We only test parsing.\n+\n+// check-pass\n+\n+#![feature(or_patterns)]\n+\n+fn main() {}\n+\n+// Test the `pat` macro fragment parser:\n+macro_rules! accept_pat {\n+    ($p:pat) => {}\n+}\n+\n+accept_pat!((p | q));\n+accept_pat!((p | q,));\n+accept_pat!(TS(p | q));\n+accept_pat!(NS { f: p | q });\n+accept_pat!([p | q]);\n+\n+// Non-macro tests:\n+\n+#[cfg(FALSE)]\n+fn or_patterns() {\n+    // Top level of `let`:\n+    let | A | B;\n+    let A | B;\n+    let A | B: u8;\n+    let A | B = 0;\n+    let A | B: u8 = 0;\n+\n+    // Top level of `for`:\n+    for | A | B in 0 {}\n+    for A | B in 0 {}\n+\n+    // Top level of `while`:\n+    while let | A | B = 0 {}\n+    while let A | B = 0 {}\n+\n+    // Top level of `if`:\n+    if let | A | B = 0 {}\n+    if let A | B = 0 {}\n+\n+    // Top level of `match` arms:\n+    match 0 {\n+        | A | B => {},\n+        A | B => {},\n+    }\n+\n+    // Functions:\n+    fn fun((A | B): _) {}\n+\n+    // Lambdas:\n+    let _ = |(A | B): u8| ();\n+\n+    // Parenthesis and tuple patterns:\n+    let (A | B);\n+    let (A | B,);\n+\n+    // Tuple struct patterns:\n+    let A(B | C);\n+    let E::V(B | C);\n+\n+    // Struct patterns:\n+    let S { f1: B | C, f2 };\n+    let E::V { f1: B | C, f2 };\n+\n+    // Slice patterns:\n+    let [A | B, .. | ..];\n+\n+    // These bind as `(prefix p) | q` as opposed to `prefix (p | q)`:\n+    let box 0 | 1; // Unstable; we *can* the precedence if we want.\n+    let &0 | 1;\n+    let &mut 0 | 1;\n+    let x @ 0 | 1;\n+    let ref x @ 0 | 1;\n+    let ref mut x @ 0 | 1;\n+}"}, {"sha": "3145a2e9f2a6edef9a25352ee7645a346a5c1e84", "filename": "src/test/ui/or-patterns/or-patterns-syntactic-pass.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f35432e1889a4361388adf514634b122aefa746b/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-pass.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f35432e1889a4361388adf514634b122aefa746b/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-pass.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-pass.stderr?ref=f35432e1889a4361388adf514634b122aefa746b", "patch": "@@ -0,0 +1,8 @@\n+warning: the feature `or_patterns` is incomplete and may cause the compiler to crash\n+  --> $DIR/or-patterns-syntactic-pass.rs:6:12\n+   |\n+LL | #![feature(or_patterns)]\n+   |            ^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+"}]}