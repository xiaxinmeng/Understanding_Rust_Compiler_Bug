{"sha": "cbe3afece59d85a53b9c7e085c1426c9bac2b526", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiZTNhZmVjZTU5ZDg1YTUzYjljN2UwODVjMTQyNmM5YmFjMmI1MjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-18T03:21:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-18T03:21:12Z"}, "message": "Auto merge of #87728 - GuillaumeGomez:doc-test-attr-checks, r=jyn514\n\nAdd \"doc(test(...))\" attribute checks\n\nFixes #82672.\n\nr? `@camelid`", "tree": {"sha": "4b3cd7cbc8c801d736dedc2b3afef1bc0998774e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b3cd7cbc8c801d736dedc2b3afef1bc0998774e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbe3afece59d85a53b9c7e085c1426c9bac2b526", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbe3afece59d85a53b9c7e085c1426c9bac2b526", "html_url": "https://github.com/rust-lang/rust/commit/cbe3afece59d85a53b9c7e085c1426c9bac2b526", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbe3afece59d85a53b9c7e085c1426c9bac2b526/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02b27f1e70fc60a8f2aa0982e80d7cde5889112e", "url": "https://api.github.com/repos/rust-lang/rust/commits/02b27f1e70fc60a8f2aa0982e80d7cde5889112e", "html_url": "https://github.com/rust-lang/rust/commit/02b27f1e70fc60a8f2aa0982e80d7cde5889112e"}, {"sha": "d4293ffcb34b17af42815b1669aeec50e9cf50b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4293ffcb34b17af42815b1669aeec50e9cf50b8", "html_url": "https://github.com/rust-lang/rust/commit/d4293ffcb34b17af42815b1669aeec50e9cf50b8"}], "stats": {"total": 158, "additions": 156, "deletions": 2}, "files": [{"sha": "3fea75954b9581d5758e5dd5103e290fa6b6a768", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 43, "deletions": 2, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/cbe3afece59d85a53b9c7e085c1426c9bac2b526/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbe3afece59d85a53b9c7e085c1426c9bac2b526/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=cbe3afece59d85a53b9c7e085c1426c9bac2b526", "patch": "@@ -717,6 +717,42 @@ impl CheckAttrVisitor<'tcx> {\n         true\n     }\n \n+    /// Checks that `doc(test(...))` attribute contains only valid attributes. Returns `true` if\n+    /// valid.\n+    fn check_test_attr(&self, meta: &NestedMetaItem, hir_id: HirId) -> bool {\n+        let mut is_valid = true;\n+        if let Some(metas) = meta.meta_item_list() {\n+            for i_meta in metas {\n+                match i_meta.name_or_empty() {\n+                    sym::attr | sym::no_crate_inject => {}\n+                    _ => {\n+                        self.tcx.struct_span_lint_hir(\n+                            INVALID_DOC_ATTRIBUTES,\n+                            hir_id,\n+                            i_meta.span(),\n+                            |lint| {\n+                                lint.build(&format!(\n+                                    \"unknown `doc(test)` attribute `{}`\",\n+                                    rustc_ast_pretty::pprust::path_to_string(\n+                                        &i_meta.meta_item().unwrap().path\n+                                    ),\n+                                ))\n+                                .emit();\n+                            },\n+                        );\n+                        is_valid = false;\n+                    }\n+                }\n+            }\n+        } else {\n+            self.tcx.struct_span_lint_hir(INVALID_DOC_ATTRIBUTES, hir_id, meta.span(), |lint| {\n+                lint.build(\"`#[doc(test(...)]` takes a list of attributes\").emit();\n+            });\n+            is_valid = false;\n+        }\n+        is_valid\n+    }\n+\n     /// Runs various checks on `#[doc]` attributes. Returns `true` if valid.\n     ///\n     /// `specified_inline` should be initialized to `None` and kept for the scope\n@@ -793,8 +829,13 @@ impl CheckAttrVisitor<'tcx> {\n                         | sym::no_inline\n                         | sym::notable_trait\n                         | sym::passes\n-                        | sym::plugins\n-                        | sym::test => {}\n+                        | sym::plugins => {}\n+\n+                        sym::test => {\n+                            if !self.check_test_attr(&meta, hir_id) {\n+                                is_valid = false;\n+                            }\n+                        }\n \n                         sym::primitive => {\n                             if !self.tcx.features().doc_primitive {"}, {"sha": "12608f244507563109dc98373e1cbff31f4f5f7c", "filename": "src/test/rustdoc-ui/doc-test-attr-pass.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cbe3afece59d85a53b9c7e085c1426c9bac2b526/src%2Ftest%2Frustdoc-ui%2Fdoc-test-attr-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbe3afece59d85a53b9c7e085c1426c9bac2b526/src%2Ftest%2Frustdoc-ui%2Fdoc-test-attr-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-test-attr-pass.rs?ref=cbe3afece59d85a53b9c7e085c1426c9bac2b526", "patch": "@@ -0,0 +1,8 @@\n+// check-pass\n+\n+#![crate_type = \"lib\"]\n+#![deny(invalid_doc_attributes)]\n+#![doc(test(no_crate_inject))]\n+#![doc(test(attr(deny(warnings))))]\n+\n+pub fn foo() {}"}, {"sha": "46178ad865a4c7b1bfb94ee73ec5f268264578b4", "filename": "src/test/rustdoc-ui/doc-test-attr.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cbe3afece59d85a53b9c7e085c1426c9bac2b526/src%2Ftest%2Frustdoc-ui%2Fdoc-test-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbe3afece59d85a53b9c7e085c1426c9bac2b526/src%2Ftest%2Frustdoc-ui%2Fdoc-test-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-test-attr.rs?ref=cbe3afece59d85a53b9c7e085c1426c9bac2b526", "patch": "@@ -0,0 +1,14 @@\n+#![crate_type = \"lib\"]\n+#![deny(invalid_doc_attributes)]\n+\n+#![doc(test)]\n+//~^ ERROR `#[doc(test(...)]` takes a list of attributes\n+//~^^ WARN this was previously accepted by the compiler\n+#![doc(test = \"hello\")]\n+//~^ ERROR `#[doc(test(...)]` takes a list of attributes\n+//~^^ WARN this was previously accepted by the compiler\n+#![doc(test(a))]\n+//~^ ERROR unknown `doc(test)` attribute `a`\n+//~^^ WARN this was previously accepted by the compiler\n+\n+pub fn foo() {}"}, {"sha": "7f5e2d6bc70d903f38dfaad330ce83f7b667cc04", "filename": "src/test/rustdoc-ui/doc-test-attr.stderr", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/cbe3afece59d85a53b9c7e085c1426c9bac2b526/src%2Ftest%2Frustdoc-ui%2Fdoc-test-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cbe3afece59d85a53b9c7e085c1426c9bac2b526/src%2Ftest%2Frustdoc-ui%2Fdoc-test-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-test-attr.stderr?ref=cbe3afece59d85a53b9c7e085c1426c9bac2b526", "patch": "@@ -0,0 +1,34 @@\n+error: `#[doc(test(...)]` takes a list of attributes\n+  --> $DIR/doc-test-attr.rs:4:8\n+   |\n+LL | #![doc(test)]\n+   |        ^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/doc-test-attr.rs:2:9\n+   |\n+LL | #![deny(invalid_doc_attributes)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #82730 <https://github.com/rust-lang/rust/issues/82730>\n+\n+error: `#[doc(test(...)]` takes a list of attributes\n+  --> $DIR/doc-test-attr.rs:7:8\n+   |\n+LL | #![doc(test = \"hello\")]\n+   |        ^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #82730 <https://github.com/rust-lang/rust/issues/82730>\n+\n+error: unknown `doc(test)` attribute `a`\n+  --> $DIR/doc-test-attr.rs:10:13\n+   |\n+LL | #![doc(test(a))]\n+   |             ^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #82730 <https://github.com/rust-lang/rust/issues/82730>\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "7884addd15fe7f614866066151f7eba2b4f269bb", "filename": "src/test/ui/rustdoc/doc-test-attr-pass.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cbe3afece59d85a53b9c7e085c1426c9bac2b526/src%2Ftest%2Fui%2Frustdoc%2Fdoc-test-attr-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbe3afece59d85a53b9c7e085c1426c9bac2b526/src%2Ftest%2Fui%2Frustdoc%2Fdoc-test-attr-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frustdoc%2Fdoc-test-attr-pass.rs?ref=cbe3afece59d85a53b9c7e085c1426c9bac2b526", "patch": "@@ -0,0 +1,9 @@\n+// check-pass\n+\n+#![crate_type = \"lib\"]\n+#![deny(invalid_doc_attributes)]\n+#![doc(test(no_crate_inject))]\n+#![doc(test(attr(deny(warnings))))]\n+#![doc(test())]\n+\n+pub fn foo() {}"}, {"sha": "46178ad865a4c7b1bfb94ee73ec5f268264578b4", "filename": "src/test/ui/rustdoc/doc-test-attr.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cbe3afece59d85a53b9c7e085c1426c9bac2b526/src%2Ftest%2Fui%2Frustdoc%2Fdoc-test-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbe3afece59d85a53b9c7e085c1426c9bac2b526/src%2Ftest%2Fui%2Frustdoc%2Fdoc-test-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frustdoc%2Fdoc-test-attr.rs?ref=cbe3afece59d85a53b9c7e085c1426c9bac2b526", "patch": "@@ -0,0 +1,14 @@\n+#![crate_type = \"lib\"]\n+#![deny(invalid_doc_attributes)]\n+\n+#![doc(test)]\n+//~^ ERROR `#[doc(test(...)]` takes a list of attributes\n+//~^^ WARN this was previously accepted by the compiler\n+#![doc(test = \"hello\")]\n+//~^ ERROR `#[doc(test(...)]` takes a list of attributes\n+//~^^ WARN this was previously accepted by the compiler\n+#![doc(test(a))]\n+//~^ ERROR unknown `doc(test)` attribute `a`\n+//~^^ WARN this was previously accepted by the compiler\n+\n+pub fn foo() {}"}, {"sha": "7f5e2d6bc70d903f38dfaad330ce83f7b667cc04", "filename": "src/test/ui/rustdoc/doc-test-attr.stderr", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/cbe3afece59d85a53b9c7e085c1426c9bac2b526/src%2Ftest%2Fui%2Frustdoc%2Fdoc-test-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cbe3afece59d85a53b9c7e085c1426c9bac2b526/src%2Ftest%2Fui%2Frustdoc%2Fdoc-test-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frustdoc%2Fdoc-test-attr.stderr?ref=cbe3afece59d85a53b9c7e085c1426c9bac2b526", "patch": "@@ -0,0 +1,34 @@\n+error: `#[doc(test(...)]` takes a list of attributes\n+  --> $DIR/doc-test-attr.rs:4:8\n+   |\n+LL | #![doc(test)]\n+   |        ^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/doc-test-attr.rs:2:9\n+   |\n+LL | #![deny(invalid_doc_attributes)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #82730 <https://github.com/rust-lang/rust/issues/82730>\n+\n+error: `#[doc(test(...)]` takes a list of attributes\n+  --> $DIR/doc-test-attr.rs:7:8\n+   |\n+LL | #![doc(test = \"hello\")]\n+   |        ^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #82730 <https://github.com/rust-lang/rust/issues/82730>\n+\n+error: unknown `doc(test)` attribute `a`\n+  --> $DIR/doc-test-attr.rs:10:13\n+   |\n+LL | #![doc(test(a))]\n+   |             ^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #82730 <https://github.com/rust-lang/rust/issues/82730>\n+\n+error: aborting due to 3 previous errors\n+"}]}