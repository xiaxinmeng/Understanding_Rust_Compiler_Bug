{"sha": "9eec33464e775bc8d25889ec93614f0144ae1471", "node_id": "C_kwDOAAsO6NoAKDllZWMzMzQ2NGU3NzViYzhkMjU4ODllYzkzNjE0ZjAxNDRhZTE0NzE", "commit": {"author": {"name": "Krasimir Georgiev", "email": "krasimir@google.com", "date": "2022-07-05T08:59:50Z"}, "committer": {"name": "Krasimir Georgiev", "email": "krasimir@google.com", "date": "2022-07-05T09:45:24Z"}, "message": "adapt issue-37945 codegen test to accept any order of ops", "tree": {"sha": "4e08fb2d163642d4d8099949eed4f938cbd56250", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e08fb2d163642d4d8099949eed4f938cbd56250"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9eec33464e775bc8d25889ec93614f0144ae1471", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9eec33464e775bc8d25889ec93614f0144ae1471", "html_url": "https://github.com/rust-lang/rust/commit/9eec33464e775bc8d25889ec93614f0144ae1471", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9eec33464e775bc8d25889ec93614f0144ae1471/comments", "author": {"login": "krasimirgg", "id": 29306214, "node_id": "MDQ6VXNlcjI5MzA2MjE0", "avatar_url": "https://avatars.githubusercontent.com/u/29306214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krasimirgg", "html_url": "https://github.com/krasimirgg", "followers_url": "https://api.github.com/users/krasimirgg/followers", "following_url": "https://api.github.com/users/krasimirgg/following{/other_user}", "gists_url": "https://api.github.com/users/krasimirgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/krasimirgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krasimirgg/subscriptions", "organizations_url": "https://api.github.com/users/krasimirgg/orgs", "repos_url": "https://api.github.com/users/krasimirgg/repos", "events_url": "https://api.github.com/users/krasimirgg/events{/privacy}", "received_events_url": "https://api.github.com/users/krasimirgg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "krasimirgg", "id": 29306214, "node_id": "MDQ6VXNlcjI5MzA2MjE0", "avatar_url": "https://avatars.githubusercontent.com/u/29306214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krasimirgg", "html_url": "https://github.com/krasimirgg", "followers_url": "https://api.github.com/users/krasimirgg/followers", "following_url": "https://api.github.com/users/krasimirgg/following{/other_user}", "gists_url": "https://api.github.com/users/krasimirgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/krasimirgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krasimirgg/subscriptions", "organizations_url": "https://api.github.com/users/krasimirgg/orgs", "repos_url": "https://api.github.com/users/krasimirgg/repos", "events_url": "https://api.github.com/users/krasimirgg/events{/privacy}", "received_events_url": "https://api.github.com/users/krasimirgg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "880646ca9c6dc21e04efe2f1940369a45b71ff2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/880646ca9c6dc21e04efe2f1940369a45b71ff2d", "html_url": "https://github.com/rust-lang/rust/commit/880646ca9c6dc21e04efe2f1940369a45b71ff2d"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "12fa1e9e56b6ab7f1a56f096e73f7a0b6809db67", "filename": "src/test/codegen/issue-37945.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9eec33464e775bc8d25889ec93614f0144ae1471/src%2Ftest%2Fcodegen%2Fissue-37945.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9eec33464e775bc8d25889ec93614f0144ae1471/src%2Ftest%2Fcodegen%2Fissue-37945.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fissue-37945.rs?ref=9eec33464e775bc8d25889ec93614f0144ae1471", "patch": "@@ -17,7 +17,9 @@ pub fn is_empty_1(xs: Iter<f32>) -> bool {\n // CHECK-NEXT:  start:\n // CHECK-NEXT:    [[A:%.*]] = icmp ne {{i32\\*|ptr}} %xs.1, null\n // CHECK-NEXT:    tail call void @llvm.assume(i1 [[A]])\n-// CHECK-NEXT:    [[B:%.*]] = icmp eq {{i32\\*|ptr}} %xs.1, %xs.0\n+// The order between %xs.0 and %xs.1 on the next line doesn't matter\n+// and different LLVM versions produce different order.\n+// CHECK-NEXT:    [[B:%.*]] = icmp eq {{i32\\*|ptr}} {{%xs.0, %xs.1|%xs.1, %xs.0}}\n // CHECK-NEXT:    ret i1 [[B:%.*]]\n     {xs}.next().is_none()\n }\n@@ -28,7 +30,9 @@ pub fn is_empty_2(xs: Iter<f32>) -> bool {\n // CHECK-NEXT:  start:\n // CHECK-NEXT:    [[C:%.*]] = icmp ne {{i32\\*|ptr}} %xs.1, null\n // CHECK-NEXT:    tail call void @llvm.assume(i1 [[C]])\n-// CHECK-NEXT:    [[D:%.*]] = icmp eq {{i32\\*|ptr}} %xs.1, %xs.0\n+// The order between %xs.0 and %xs.1 on the next line doesn't matter\n+// and different LLVM versions produce different order.\n+// CHECK-NEXT:    [[D:%.*]] = icmp eq {{i32\\*|ptr}} {{%xs.0, %xs.1|%xs.1, %xs.0}}\n // CHECK-NEXT:    ret i1 [[D:%.*]]\n     xs.map(|&x| x).next().is_none()\n }"}]}