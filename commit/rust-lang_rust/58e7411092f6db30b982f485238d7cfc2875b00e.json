{"sha": "58e7411092f6db30b982f485238d7cfc2875b00e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4ZTc0MTEwOTJmNmRiMzBiOTgyZjQ4NTIzOGQ3Y2ZjMjg3NWIwMGU=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-21T15:00:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-21T15:00:38Z"}, "message": "Rollup merge of #86274 - alexander-melentyev:spaces, r=bjorn3\n\nSpaces", "tree": {"sha": "06f95eca2445e6d9629deb2c012900aaf9390ea2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06f95eca2445e6d9629deb2c012900aaf9390ea2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58e7411092f6db30b982f485238d7cfc2875b00e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg0KmXCRBK7hj4Ov3rIwAAZ/gIAHa5LeNHPDi1KxjmSEyVmZOM\n7OLKU0pPTDmQoesxcoryrVpJp+zhHjEqYEMXPtF2NWofNiqVoTXCAYd3zYhlC1hC\ni86DCC72Q3q4Mbc6d0OmZnklud3sVd9NyehZuUPHaWOq++tgYYP3zGFe1g9YlsXF\n4tEWkH7rXlW7sqZg8sBJrDerZTxZRb8NJbsKTQqtk+6jTg+cr0VVuSZSoiYw3bg/\nTAjCKOza5pr3YWEXhoNM3I4l5zD+RsmLSR/kIFkvrGrf5bb8sEI99kCA8eCT/6/b\nXc1KWEpnrgX8zs0F7tG0S9alRS6JGtxG4SDDQzBCTQVp2wK6qBt2YVfhtqKH2Pc=\n=72m6\n-----END PGP SIGNATURE-----\n", "payload": "tree 06f95eca2445e6d9629deb2c012900aaf9390ea2\nparent ac410564f0ec68c59c0d9bc6980b469467bf50c0\nparent e84c9aed6d82eddcaf96d1c4fe90adcd2182b9a0\nauthor Yuki Okushi <jtitor@2k36.org> 1624287638 +0900\ncommitter GitHub <noreply@github.com> 1624287638 +0900\n\nRollup merge of #86274 - alexander-melentyev:spaces, r=bjorn3\n\nSpaces\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58e7411092f6db30b982f485238d7cfc2875b00e", "html_url": "https://github.com/rust-lang/rust/commit/58e7411092f6db30b982f485238d7cfc2875b00e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58e7411092f6db30b982f485238d7cfc2875b00e/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac410564f0ec68c59c0d9bc6980b469467bf50c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac410564f0ec68c59c0d9bc6980b469467bf50c0", "html_url": "https://github.com/rust-lang/rust/commit/ac410564f0ec68c59c0d9bc6980b469467bf50c0"}, {"sha": "e84c9aed6d82eddcaf96d1c4fe90adcd2182b9a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e84c9aed6d82eddcaf96d1c4fe90adcd2182b9a0", "html_url": "https://github.com/rust-lang/rust/commit/e84c9aed6d82eddcaf96d1c4fe90adcd2182b9a0"}], "stats": {"total": 96, "additions": 48, "deletions": 48}, "files": [{"sha": "a7b70cea927d0c3b41bbcb4b0cee906be469d192", "filename": ".github/ISSUE_TEMPLATE/diagnostics.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58e7411092f6db30b982f485238d7cfc2875b00e/.github%2FISSUE_TEMPLATE%2Fdiagnostics.md", "raw_url": "https://github.com/rust-lang/rust/raw/58e7411092f6db30b982f485238d7cfc2875b00e/.github%2FISSUE_TEMPLATE%2Fdiagnostics.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2FISSUE_TEMPLATE%2Fdiagnostics.md?ref=58e7411092f6db30b982f485238d7cfc2875b00e", "patch": "@@ -9,7 +9,7 @@ along with any information you feel relevant to replicating the bug.\n \n If you cannot produce a minimal reproduction case (something that would work in\n isolation), please provide the steps or even link to a repository that causes\n-the problematic output to occur. \n+the problematic output to occur.\n -->\n \n Given the following code: <!-- Please provide a link to play.rust-lang.org -->"}, {"sha": "cf75f4184a1c96a0eab4def408ee84a76594759d", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58e7411092f6db30b982f485238d7cfc2875b00e/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/58e7411092f6db30b982f485238d7cfc2875b00e/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=58e7411092f6db30b982f485238d7cfc2875b00e", "patch": "@@ -21,7 +21,7 @@ Read [\"Installation\"] from [The Book].\n The Rust build system uses a Python script called `x.py` to build the compiler,\n which manages the bootstrapping process. It lives in the root of the project.\n \n-The `x.py` command can be run directly on most systems in the following format: \n+The `x.py` command can be run directly on most systems in the following format:\n \n ```sh\n ./x.py <subcommand> [flags]"}, {"sha": "35e5627e61ff86f95f9547751ea938b656ccd1a5", "filename": "RELEASES.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58e7411092f6db30b982f485238d7cfc2875b00e/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/58e7411092f6db30b982f485238d7cfc2875b00e/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=58e7411092f6db30b982f485238d7cfc2875b00e", "patch": "@@ -369,7 +369,7 @@ Language\n --------\n - [You can now parameterize items such as functions, traits, and `struct`s by constant\n   values in addition to by types and lifetimes.][79135] Also known as \"const generics\"\n-  E.g. you can now write the following. Note: Only values of primitive integers, \n+  E.g. you can now write the following. Note: Only values of primitive integers,\n   `bool`, or `char` types are currently permitted.\n   ```rust\n   struct GenericArray<T, const LENGTH: usize> {"}, {"sha": "9a820f0803f0ade766ea8578cd536443c3cacf2b", "filename": "config.toml.example", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/58e7411092f6db30b982f485238d7cfc2875b00e/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/58e7411092f6db30b982f485238d7cfc2875b00e/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=58e7411092f6db30b982f485238d7cfc2875b00e", "patch": "@@ -567,8 +567,8 @@ changelog-seen = 2\n # On Linux target, if crt-static is not enabled, 'no' means dynamic link to\n # `libgcc_s.so`, 'in-tree' means static link to the in-tree build of llvm libunwind\n # and 'system' means dynamic link to `libunwind.so`. If crt-static is enabled,\n-# the behavior is depend on the libc. On musl target, 'no' and 'in-tree' both \n-# means static link to the in-tree build of llvm libunwind, and 'system' means \n+# the behavior is depend on the libc. On musl target, 'no' and 'in-tree' both\n+# means static link to the in-tree build of llvm libunwind, and 'system' means\n # static link to `libunwind.a` provided by system. Due to the limitation of glibc,\n # it must link to `libgcc_eh.a` to get a working output, and this option have no effect.\n #llvm-libunwind = 'no'"}, {"sha": "ff9afab064a281140f6971a6529c245a9a6ef7e3", "filename": "src/librustdoc/html/static/FiraSans-LICENSE.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Flibrustdoc%2Fhtml%2Fstatic%2FFiraSans-LICENSE.txt", "raw_url": "https://github.com/rust-lang/rust/raw/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Flibrustdoc%2Fhtml%2Fstatic%2FFiraSans-LICENSE.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2FFiraSans-LICENSE.txt?ref=58e7411092f6db30b982f485238d7cfc2875b00e", "patch": "@@ -1,5 +1,5 @@\n Digitized data copyright (c) 2012-2015, The Mozilla Foundation and Telefonica S.A.\n-with Reserved Font Name < Fira >, \n+with Reserved Font Name < Fira >,\n \n This Font Software is licensed under the SIL Open Font License, Version 1.1.\n This license is copied below, and is also available with a FAQ at:\n@@ -19,7 +19,7 @@ with others.\n \n The OFL allows the licensed fonts to be used, studied, modified and\n redistributed freely as long as they are not sold by themselves. The\n-fonts, including any derivative works, can be bundled, embedded, \n+fonts, including any derivative works, can be bundled, embedded,\n redistributed and/or sold with any software provided that any reserved\n names are not used by derivative works. The fonts and derivatives,\n however, cannot be released under any other type of license. The"}, {"sha": "7d7b7c811738e897ac7aa0a61d95908ca1b49368", "filename": "src/tools/clippy/CONTRIBUTING.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Fclippy%2FCONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Fclippy%2FCONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2FCONTRIBUTING.md?ref=58e7411092f6db30b982f485238d7cfc2875b00e", "patch": "@@ -342,7 +342,7 @@ We have prioritization labels and a sync-blocker label, which are described belo\n - [P-low][p-low]: Requires attention (fix/response/evaluation) by a team member but isn't urgent.\n - [P-medium][p-medium]: Should be addressed by a team member until the next sync.\n - [P-high][p-high]: Should be immediately addressed and will require an out-of-cycle sync or a backport.\n-- [L-sync-blocker][l-sync-blocker]: An issue that \"blocks\" a sync. \n+- [L-sync-blocker][l-sync-blocker]: An issue that \"blocks\" a sync.\n Or rather: before the sync this should be addressed,\n e.g. by removing a lint again, so it doesn't hit beta/stable.\n "}, {"sha": "bd322cc80702acc0ee8c2498fd71f903b81dfdf9", "filename": "src/tools/clippy/README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Fclippy%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Fclippy%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2FREADME.md?ref=58e7411092f6db30b982f485238d7cfc2875b00e", "patch": "@@ -95,7 +95,7 @@ As with `cargo check`, this includes dependencies that are members of the worksp\n If you want to run Clippy **only** on the given crate, use the `--no-deps` option like this:\n \n ```terminal\n-cargo clippy -p example -- --no-deps \n+cargo clippy -p example -- --no-deps\n ```\n \n ### As a rustc replacement (`clippy-driver`)"}, {"sha": "90c034bd02a9e8493b93718f178de160cd60857e", "filename": "src/tools/clippy/clippy_utils/src/ast_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fast_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fast_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fast_utils.rs?ref=58e7411092f6db30b982f485238d7cfc2875b00e", "patch": "@@ -178,7 +178,7 @@ pub fn eq_expr(l: &Expr, r: &Expr) -> bool {\n         (Path(lq, lp), Path(rq, rp)) => both(lq, rq, |l, r| eq_qself(l, r)) && eq_path(lp, rp),\n         (MacCall(l), MacCall(r)) => eq_mac_call(l, r),\n         (Struct(lse), Struct(rse)) => {\n-            eq_maybe_qself(&lse.qself, &rse.qself) \n+            eq_maybe_qself(&lse.qself, &rse.qself)\n                 && eq_path(&lse.path, &rse.path)\n                 && eq_struct_rest(&lse.rest, &rse.rest)\n                 && unordered_over(&lse.fields, &rse.fields, |l, r| eq_field(l, r))"}, {"sha": "ed3a2fff83f168e7825b1c4e2fce3dee7cf6b820", "filename": "src/tools/clippy/doc/basics.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Fclippy%2Fdoc%2Fbasics.md", "raw_url": "https://github.com/rust-lang/rust/raw/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Fclippy%2Fdoc%2Fbasics.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fdoc%2Fbasics.md?ref=58e7411092f6db30b982f485238d7cfc2875b00e", "patch": "@@ -96,9 +96,9 @@ cargo dev ide_setup\n \n ## lintcheck\n `cargo lintcheck` will build and run clippy on a fixed set of crates and generate a log of the results.  \n-You can `git diff` the updated log against its previous version and \n+You can `git diff` the updated log against its previous version and\n see what impact your lint made on a small set of crates.  \n-If you add a new lint, please audit the resulting warnings and make sure \n+If you add a new lint, please audit the resulting warnings and make sure\n there are no false positives and that the suggestions are valid.\n \n Refer to the tools [README] for more details."}, {"sha": "a61070d8a80efc11fb1c3aae004b5c14d1fc28b8", "filename": "src/tools/clippy/lintcheck/README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Fclippy%2Flintcheck%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Fclippy%2Flintcheck%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Flintcheck%2FREADME.md?ref=58e7411092f6db30b982f485238d7cfc2875b00e", "patch": "@@ -73,5 +73,5 @@ You can run `./lintcheck/target/debug/lintcheck --fix` which will run Clippy wit\n print a warning if Clippys suggestions fail to apply (if the resulting code does not build).  \n This lets us spot bad suggestions or false positives automatically in some cases.  \n \n-Please note that the target dir should be cleaned afterwards since clippy will modify \n+Please note that the target dir should be cleaned afterwards since clippy will modify\n the downloaded sources which can lead to unexpected results when running lintcheck again afterwards."}, {"sha": "0174d3ffcbc2af59caf2dae5668fadd27b737161", "filename": "src/tools/clippy/util/gh-pages/index.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Fclippy%2Futil%2Fgh-pages%2Findex.html", "raw_url": "https://github.com/rust-lang/rust/raw/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Fclippy%2Futil%2Fgh-pages%2Findex.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Futil%2Fgh-pages%2Findex.html?ref=58e7411092f6db30b982f485238d7cfc2875b00e", "patch": "@@ -363,7 +363,7 @@ <h4 class=\"list-group-item-heading\">\n \n             $scope.bySearch = function (lint, index, array) {\n                 let searchStr = $scope.search;\n-                // It can be `null` I haven't missed this value \n+                // It can be `null` I haven't missed this value\n                 if (searchStr == null || searchStr.length < 3) {\n                     return true;\n                 }\n@@ -375,7 +375,7 @@ <h4 class=\"list-group-item-heading\">\n                 }\n \n                 // Search the description\n-                // The use of `for`-loops instead of `foreach` enables us to return early \n+                // The use of `for`-loops instead of `foreach` enables us to return early\n                 let terms = searchStr.split(\" \");\n                 for (index = 0; index < terms.length; index++) {\n                     if (lint.id.indexOf(terms[index]) !== -1) {\n@@ -463,7 +463,7 @@ <h4 class=\"list-group-item-heading\">\n \n         let children = themeMenu.children;\n         for (let index = 0; index < children.length; index++) {\n-            let child = children[index]; \n+            let child = children[index];\n             child.addEventListener(\"click\", function(e) {\n                 setTheme(child.id, true);\n             });\n@@ -476,7 +476,7 @@ <h4 class=\"list-group-item-heading\">\n         let enableHighlight = false;\n         let enableNight = false;\n         let enableAyu = false;\n-        \n+\n         if (theme == \"ayu\") {\n             enableAyu = true;\n         } else if (theme == \"coal\" || theme == \"navy\") {"}, {"sha": "68354b6ceaf25aa1a973050c358bac6baaf823fe", "filename": "src/tools/rustfmt/CHANGELOG.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Frustfmt%2FCHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Frustfmt%2FCHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2FCHANGELOG.md?ref=58e7411092f6db30b982f485238d7cfc2875b00e", "patch": "@@ -176,7 +176,7 @@ https://rust-lang.github.io/rustfmt/?version=v1.4.33&search=#imports_granularity\n \n ### Changed\n \n-- Original comment indentation for trailing comments within an `if` is now taken into account when determining the indentation level to use for the trailing comment in formatted code. This does not modify any existing code formatted with rustfmt; it simply gives the programmer discretion to specify whether the comment is associated to the `else` block, or if the trailing comment is just a member of the `if` block. ([#1575](https://github.com/rust-lang/rustfmt/issues/1575), [#4120](https://github.com/rust-lang/rustfmt/issues/4120), [#4506](https://github.com/rust-lang/rustfmt/issues/4506)) \n+- Original comment indentation for trailing comments within an `if` is now taken into account when determining the indentation level to use for the trailing comment in formatted code. This does not modify any existing code formatted with rustfmt; it simply gives the programmer discretion to specify whether the comment is associated to the `else` block, or if the trailing comment is just a member of the `if` block. ([#1575](https://github.com/rust-lang/rustfmt/issues/1575), [#4120](https://github.com/rust-lang/rustfmt/issues/4120), [#4506](https://github.com/rust-lang/rustfmt/issues/4506))\n \n In this example the `// else comment` refers to the `else`:\n ```rust\n@@ -213,7 +213,7 @@ if toks.eat_token(Token::Word(\"modify\"))? && toks.eat_token(Token::Word(\"labels\"\n \n ### Fixed\n - Formatting of empty blocks with attributes which only contained comments is no longer butchered.([#4475](https://github.com/rust-lang/rustfmt/issues/4475), [#4467](https://github.com/rust-lang/rustfmt/issues/4467), [#4452](https://github.com/rust-lang/rustfmt/issues/4452#issuecomment-705886282), [#4522](https://github.com/rust-lang/rustfmt/issues/4522))\n-- Indentation of trailing comments in non-empty extern blocks is now correct. ([#4120](https://github.com/rust-lang/rustfmt/issues/4120#issuecomment-696491872)) \n+- Indentation of trailing comments in non-empty extern blocks is now correct. ([#4120](https://github.com/rust-lang/rustfmt/issues/4120#issuecomment-696491872))\n \n ### Install/Download Options\n - **crates.io package** - *pending*\n@@ -297,7 +297,7 @@ if toks.eat_token(Token::Word(\"modify\"))? && toks.eat_token(Token::Word(\"labels\"\n - Fix aligning comments of different group\n - Fix flattening imports with a single `self`.\n - Fix removing attributes on function parameters.\n-- Fix removing `impl` keyword from opaque type. \n+- Fix removing `impl` keyword from opaque type.\n \n ## [1.4.8] 2019-09-08\n \n@@ -329,7 +329,7 @@ if toks.eat_token(Token::Word(\"modify\"))? && toks.eat_token(Token::Word(\"labels\"\n \n - Add `--message-format` command line option to `cargo-fmt`.\n - Add `-l,--files-with-diff` command line option to `rustfmt`.\n-- Add `json` emit mode. \n+- Add `json` emit mode.\n \n ### Fixed\n \n@@ -380,7 +380,7 @@ if toks.eat_token(Token::Word(\"modify\"))? && toks.eat_token(Token::Word(\"labels\"\n \n ### Added\n \n-- Add new attribute `rustfmt::skip::attributes` to prevent rustfmt \n+- Add new attribute `rustfmt::skip::attributes` to prevent rustfmt\n from formatting an attribute #3665\n \n ### Changed"}, {"sha": "9daa70653797657d6488a952e1f56f3c7f4d3411", "filename": "src/tools/rustfmt/Configurations.md", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Frustfmt%2FConfigurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Frustfmt%2FConfigurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2FConfigurations.md?ref=58e7411092f6db30b982f485238d7cfc2875b00e", "patch": "@@ -17,27 +17,27 @@ To enable unstable options, set `unstable_features = true` in `rustfmt.toml` or\n \n Below you find a detailed visual guide on all the supported configuration options of rustfmt:\n \n-## `array_width` \n+## `array_width`\n \n Maximum width of an array literal before falling back to vertical formatting.\n \n - **Default value**: `60`\n - **Possible values**: any positive integer that is less than or equal to the value specified for [`max_width`](#max_width)\n - **Stable**: Yes\n \n-By default this option is set as a percentage of [`max_width`](#max_width) provided by [`use_small_heuristics`](#use_small_heuristics), but a value set directly for `array_width` will take precedence. \n+By default this option is set as a percentage of [`max_width`](#max_width) provided by [`use_small_heuristics`](#use_small_heuristics), but a value set directly for `array_width` will take precedence.\n \n See also [`max_width`](#max_width) and [`use_small_heuristics`](#use_small_heuristics)\n \n-## `attr_fn_like_width` \n+## `attr_fn_like_width`\n \n Maximum width of the args of a function-like attributes before falling back to vertical formatting.\n \n - **Default value**: `70`\n - **Possible values**: any positive integer that is less than or equal to the value specified for [`max_width`](#max_width)\n - **Stable**: Yes\n \n-By default this option is set as a percentage of [`max_width`](#max_width) provided by [`use_small_heuristics`](#use_small_heuristics), but a value set directly for `attr_fn_like_width` will take precedence. \n+By default this option is set as a percentage of [`max_width`](#max_width) provided by [`use_small_heuristics`](#use_small_heuristics), but a value set directly for `attr_fn_like_width` will take precedence.\n \n See also [`max_width`](#max_width) and [`use_small_heuristics`](#use_small_heuristics)\n \n@@ -295,15 +295,15 @@ where\n }\n ```\n \n-## `chain_width` \n+## `chain_width`\n \n Maximum width of a chain to fit on one line.\n \n - **Default value**: `60`\n - **Possible values**: any positive integer that is less than or equal to the value specified for [`max_width`](#max_width)\n - **Stable**: Yes\n \n-By default this option is set as a percentage of [`max_width`](#max_width) provided by [`use_small_heuristics`](#use_small_heuristics), but a value set directly for `chain_width` will take precedence. \n+By default this option is set as a percentage of [`max_width`](#max_width) provided by [`use_small_heuristics`](#use_small_heuristics), but a value set directly for `chain_width` will take precedence.\n \n See also [`max_width`](#max_width) and [`use_small_heuristics`](#use_small_heuristics)\n \n@@ -751,15 +751,15 @@ trait Lorem {\n }\n ```\n \n-## `fn_call_width` \n+## `fn_call_width`\n \n Maximum width of the args of a function call before falling back to vertical formatting.\n \n - **Default value**: `60`\n - **Possible values**: any positive integer that is less than or equal to the value specified for [`max_width`](#max_width)\n - **Stable**: Yes\n \n-By default this option is set as a percentage of [`max_width`](#max_width) provided by [`use_small_heuristics`](#use_small_heuristics), but a value set directly for `fn_call_width` will take precedence. \n+By default this option is set as a percentage of [`max_width`](#max_width) provided by [`use_small_heuristics`](#use_small_heuristics), but a value set directly for `fn_call_width` will take precedence.\n \n See also [`max_width`](#max_width) and [`use_small_heuristics`](#use_small_heuristics)\n \n@@ -2124,15 +2124,15 @@ Don't reformat out of line modules\n - **Possible values**: `true`, `false`\n - **Stable**: No (tracking issue: #3389)\n \n-## `single_line_if_else_max_width` \n+## `single_line_if_else_max_width`\n \n Maximum line length for single line if-else expressions. A value of `0` (zero) results in if-else expressions always being broken into multiple lines. Note this occurs when `use_small_heuristics` is set to `Off`.\n \n - **Default value**: `50`\n - **Possible values**: any positive integer that is less than or equal to the value specified for [`max_width`](#max_width)\n - **Stable**: Yes\n \n-By default this option is set as a percentage of [`max_width`](#max_width) provided by [`use_small_heuristics`](#use_small_heuristics), but a value set directly for `single_line_if_else_max_width` will take precedence. \n+By default this option is set as a percentage of [`max_width`](#max_width) provided by [`use_small_heuristics`](#use_small_heuristics), but a value set directly for `single_line_if_else_max_width` will take precedence.\n \n See also [`max_width`](#max_width) and [`use_small_heuristics`](#use_small_heuristics)\n \n@@ -2313,27 +2313,27 @@ fn main() {\n \n See also: [`indent_style`](#indent_style).\n \n-## `struct_lit_width` \n+## `struct_lit_width`\n \n Maximum width in the body of a struct literal before falling back to vertical formatting. A value of `0` (zero) results in struct literals always being broken into multiple lines. Note this occurs when `use_small_heuristics` is set to `Off`.\n \n - **Default value**: `18`\n - **Possible values**: any positive integer that is less than or equal to the value specified for [`max_width`](#max_width)\n - **Stable**: Yes\n \n-By default this option is set as a percentage of [`max_width`](#max_width) provided by [`use_small_heuristics`](#use_small_heuristics), but a value set directly for `struct_lit_width` will take precedence. \n+By default this option is set as a percentage of [`max_width`](#max_width) provided by [`use_small_heuristics`](#use_small_heuristics), but a value set directly for `struct_lit_width` will take precedence.\n \n See also [`max_width`](#max_width), [`use_small_heuristics`](#use_small_heuristics), and [`struct_lit_single_line`](#struct_lit_single_line)\n \n-## `struct_variant_width` \n+## `struct_variant_width`\n \n Maximum width in the body of a struct variant before falling back to vertical formatting. A value of `0` (zero) results in struct literals always being broken into multiple lines. Note this occurs when `use_small_heuristics` is set to `Off`.\n \n - **Default value**: `35`\n - **Possible values**: any positive integer that is less than or equal to the value specified for [`max_width`](#max_width)\n - **Stable**: Yes\n \n-By default this option is set as a percentage of [`max_width`](#max_width) provided by [`use_small_heuristics`](#use_small_heuristics), but a value set directly for `struct_variant_width` will take precedence. \n+By default this option is set as a percentage of [`max_width`](#max_width) provided by [`use_small_heuristics`](#use_small_heuristics), but a value set directly for `struct_variant_width` will take precedence.\n \n See also [`max_width`](#max_width) and [`use_small_heuristics`](#use_small_heuristics)\n \n@@ -2530,7 +2530,7 @@ fn main() {\n \n This option can be used to simplify the management and bulk updates of the granular width configuration settings ([`fn_call_width`](#fn_call_width), [`attr_fn_like_width`](#attr_fn_like_width), [`struct_lit_width`](#struct_lit_width), [`struct_variant_width`](#struct_variant_width), [`array_width`](#array_width), [`chain_width`](#chain_width), [`single_line_if_else_max_width`](#single_line_if_else_max_width)), that respectively control when formatted constructs are multi-lined/vertical based on width.\n \n-Note that explicitly provided values for the width configuration settings take precedence and override the calculated values determined by `use_small_heuristics`. \n+Note that explicitly provided values for the width configuration settings take precedence and override the calculated values determined by `use_small_heuristics`.\n \n - **Default value**: `\"Default\"`\n - **Possible values**: `\"Default\"`, `\"Off\"`, `\"Max\"`\n@@ -2595,7 +2595,7 @@ fn main() {\n ```\n \n #### `Off`:\n-When `use_small_heuristics` is set to `Off`, the granular width settings are functionally disabled and ignored. See the documentation for the respective width config options for specifics. \n+When `use_small_heuristics` is set to `Off`, the granular width settings are functionally disabled and ignored. See the documentation for the respective width config options for specifics.\n \n ```rust\n enum Lorem {"}, {"sha": "1b77dad11f0fe9b397de1f4ddc28f1452d4dd7a2", "filename": "src/tools/rustfmt/Contributing.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Frustfmt%2FContributing.md", "raw_url": "https://github.com/rust-lang/rust/raw/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Frustfmt%2FContributing.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2FContributing.md?ref=58e7411092f6db30b982f485238d7cfc2875b00e", "patch": "@@ -38,7 +38,7 @@ colourised diff will be printed so that the offending line(s) can quickly be\n identified.\n \n Without explicit settings, the tests will be run using rustfmt's default\n-configuration. It is possible to run a test using non-default settings in several \n+configuration. It is possible to run a test using non-default settings in several\n ways. Firstly, you can include configuration parameters in comments at the top\n of the file. For example: to use 3 spaces per tab, start your test with\n `// rustfmt-tab_spaces: 3`. Just remember that the comment is part of the input,"}, {"sha": "7a4dcf8773b61a85b7fc6fcc6dd08c9a91b55a00", "filename": "src/tools/rustfmt/Design.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Frustfmt%2FDesign.md", "raw_url": "https://github.com/rust-lang/rust/raw/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Frustfmt%2FDesign.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2FDesign.md?ref=58e7411092f6db30b982f485238d7cfc2875b00e", "patch": "@@ -150,8 +150,8 @@ for its configuration.\n \n Our visitor keeps track of the desired current indent due to blocks (\n `block_indent`). Each `visit_*` method reformats code according to this indent,\n-`config.comment_width()` and `config.max_width()`. Most reformatting that is done \n-in the `visit_*` methods is a bit hacky and is meant to be temporary until it can \n+`config.comment_width()` and `config.max_width()`. Most reformatting that is done\n+in the `visit_*` methods is a bit hacky and is meant to be temporary until it can\n be done properly.\n \n There are a bunch of methods called `rewrite_*`. They do the bulk of the"}, {"sha": "500a9f9a37c8cb58f4f718ae1a829a3a6a1b0f3e", "filename": "src/tools/rustfmt/README.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Frustfmt%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Frustfmt%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2FREADME.md?ref=58e7411092f6db30b982f485238d7cfc2875b00e", "patch": "@@ -180,13 +180,13 @@ needs to be specified in `rustfmt.toml`, e.g., with `edition = \"2018\"`.\n \n * For things you do not want rustfmt to mangle, use `#[rustfmt::skip]`\n * To prevent rustfmt from formatting a macro or an attribute,\n-  use `#[rustfmt::skip::macros(target_macro_name)]` or \n+  use `#[rustfmt::skip::macros(target_macro_name)]` or\n   `#[rustfmt::skip::attributes(target_attribute_name)]`\n \n   Example:\n \n     ```rust\n-    #![rustfmt::skip::attributes(custom_attribute)]   \n+    #![rustfmt::skip::attributes(custom_attribute)]\n \n     #[custom_attribute(formatting , here , should , be , Skipped)]\n     #[rustfmt::skip::macros(html)]"}, {"sha": "0269e3ee4af931437a9e6c5d9c81bd172c1fb193", "filename": "src/tools/rustfmt/ci/integration.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Frustfmt%2Fci%2Fintegration.sh", "raw_url": "https://github.com/rust-lang/rust/raw/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Frustfmt%2Fci%2Fintegration.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2Fci%2Fintegration.sh?ref=58e7411092f6db30b982f485238d7cfc2875b00e", "patch": "@@ -15,7 +15,7 @@ set -ex\n # it again.\n #\n #which cargo-fmt || cargo install --force\n-CFG_RELEASE=nightly CFG_RELEASE_CHANNEL=nightly cargo install --path . --force \n+CFG_RELEASE=nightly CFG_RELEASE_CHANNEL=nightly cargo install --path . --force\n \n echo \"Integration tests for: ${INTEGRATION}\"\n cargo fmt -- --version"}, {"sha": "56d1917e2b61b211eb8ae3112f07e93ea1cdf0c9", "filename": "src/tools/rustfmt/docs/index.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Frustfmt%2Fdocs%2Findex.html", "raw_url": "https://github.com/rust-lang/rust/raw/58e7411092f6db30b982f485238d7cfc2875b00e/src%2Ftools%2Frustfmt%2Fdocs%2Findex.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2Fdocs%2Findex.html?ref=58e7411092f6db30b982f485238d7cfc2875b00e", "patch": "@@ -85,7 +85,7 @@\n                 outputHtml() {\n                   const ast = this.configurationDescriptions\n                                   .filter(({ head, text, stable }) => {\n-                                    \n+\n                                     if (\n                                       text.includes(this.searchCondition) === false &&\n                                       head.includes(this.searchCondition) === false\n@@ -105,7 +105,7 @@\n               },\n               created: async function() {\n                 const res = await axios.get(ConfigurationMdUrl);\n-                const { \n+                const {\n                   about,\n                   configurationAbout,\n                   configurationDescriptions\n@@ -144,7 +144,7 @@\n                   const lastIndex = stack.length - 1;\n                   stack[lastIndex].push(next);\n                   return stack;\n-                }, \n+                },\n                 [[]]);\n               });\n             }\n@@ -179,7 +179,7 @@\n                 configurationAbout, ...configurationDescriptions\n               ] = configurations;\n               configurationAbout.value.links = {};\n-              \n+\n               return {\n                 about,\n                 configurationAbout: configurationAbout.value,"}]}