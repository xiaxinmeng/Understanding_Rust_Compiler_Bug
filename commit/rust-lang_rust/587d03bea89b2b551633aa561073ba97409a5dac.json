{"sha": "587d03bea89b2b551633aa561073ba97409a5dac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4N2QwM2JlYTg5YjJiNTUxNjMzYWE1NjEwNzNiYTk3NDA5YTVkYWM=", "commit": {"author": {"name": "Donough Liu", "email": "ldm2993593805@163.com", "date": "2019-12-23T13:07:13Z"}, "committer": {"name": "Donough Liu", "email": "ldm2993593805@163.com", "date": "2019-12-23T13:07:13Z"}, "message": "Yield is an expression form, not a statement.", "tree": {"sha": "3b65e59e0db84cbc09629c04791649e4b2ce72ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b65e59e0db84cbc09629c04791649e4b2ce72ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/587d03bea89b2b551633aa561073ba97409a5dac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/587d03bea89b2b551633aa561073ba97409a5dac", "html_url": "https://github.com/rust-lang/rust/commit/587d03bea89b2b551633aa561073ba97409a5dac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/587d03bea89b2b551633aa561073ba97409a5dac/comments", "author": {"login": "ldm0", "id": 31354274, "node_id": "MDQ6VXNlcjMxMzU0Mjc0", "avatar_url": "https://avatars.githubusercontent.com/u/31354274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldm0", "html_url": "https://github.com/ldm0", "followers_url": "https://api.github.com/users/ldm0/followers", "following_url": "https://api.github.com/users/ldm0/following{/other_user}", "gists_url": "https://api.github.com/users/ldm0/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldm0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldm0/subscriptions", "organizations_url": "https://api.github.com/users/ldm0/orgs", "repos_url": "https://api.github.com/users/ldm0/repos", "events_url": "https://api.github.com/users/ldm0/events{/privacy}", "received_events_url": "https://api.github.com/users/ldm0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ldm0", "id": 31354274, "node_id": "MDQ6VXNlcjMxMzU0Mjc0", "avatar_url": "https://avatars.githubusercontent.com/u/31354274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldm0", "html_url": "https://github.com/ldm0", "followers_url": "https://api.github.com/users/ldm0/followers", "following_url": "https://api.github.com/users/ldm0/following{/other_user}", "gists_url": "https://api.github.com/users/ldm0/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldm0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldm0/subscriptions", "organizations_url": "https://api.github.com/users/ldm0/orgs", "repos_url": "https://api.github.com/users/ldm0/repos", "events_url": "https://api.github.com/users/ldm0/events{/privacy}", "received_events_url": "https://api.github.com/users/ldm0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1485c168990b2dbb6e2858bc09af0254c1af9491", "url": "https://api.github.com/repos/rust-lang/rust/commits/1485c168990b2dbb6e2858bc09af0254c1af9491", "html_url": "https://github.com/rust-lang/rust/commit/1485c168990b2dbb6e2858bc09af0254c1af9491"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "0d136bd7d9cf9a437e5ea7fc7a0727113f01c00f", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/587d03bea89b2b551633aa561073ba97409a5dac/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/587d03bea89b2b551633aa561073ba97409a5dac/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=587d03bea89b2b551633aa561073ba97409a5dac", "patch": "@@ -1424,7 +1424,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n     }\n \n     /// Reports an error if this is a borrow of local data.\n-    /// This is called for all Yield statements on movable generators\n+    /// This is called for all Yield expressions on movable generators\n     fn check_for_local_borrow(&mut self, borrow: &BorrowData<'tcx>, yield_span: Span) {\n         debug!(\"check_for_local_borrow({:?})\", borrow);\n "}, {"sha": "23b4799643a6cfb6282b167ee692cb3c6425c6ab", "filename": "src/librustc_mir/borrow_check/path_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/587d03bea89b2b551633aa561073ba97409a5dac/src%2Flibrustc_mir%2Fborrow_check%2Fpath_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/587d03bea89b2b551633aa561073ba97409a5dac/src%2Flibrustc_mir%2Fborrow_check%2Fpath_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fpath_utils.rs?ref=587d03bea89b2b551633aa561073ba97409a5dac", "patch": "@@ -131,7 +131,7 @@ pub(super) fn is_active<'tcx>(\n }\n \n /// Determines if a given borrow is borrowing local data\n-/// This is called for all Yield statements on movable generators\n+/// This is called for all Yield expressions on movable generators\n pub(super) fn borrow_of_local_data(place: &Place<'_>) -> bool {\n     match place.base {\n         PlaceBase::Static(_) => false,"}, {"sha": "479536a1c8f01900738d345e292cb004857114d0", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/587d03bea89b2b551633aa561073ba97409a5dac/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/587d03bea89b2b551633aa561073ba97409a5dac/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=587d03bea89b2b551633aa561073ba97409a5dac", "patch": "@@ -1775,7 +1775,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     self.tcx.sess,\n                     expr.span,\n                     E0627,\n-                    \"yield statement outside of generator literal\"\n+                    \"yield expression outside of generator literal\"\n                 )\n                 .emit();\n             }"}, {"sha": "931fee13471267771c795ba0908c12b1db17efbf", "filename": "src/test/ui/feature-gates/feature-gate-generators.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/587d03bea89b2b551633aa561073ba97409a5dac/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generators.rs", "raw_url": "https://github.com/rust-lang/rust/raw/587d03bea89b2b551633aa561073ba97409a5dac/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generators.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generators.rs?ref=587d03bea89b2b551633aa561073ba97409a5dac", "patch": "@@ -1,6 +1,6 @@\n fn main() {\n     yield true; //~ ERROR yield syntax is experimental\n-                //~^ ERROR yield statement outside of generator literal\n+                //~^ ERROR yield expression outside of generator literal\n }\n \n #[cfg(FALSE)]"}, {"sha": "4adc21efc6a2125f21fb2bad85244725769e827b", "filename": "src/test/ui/feature-gates/feature-gate-generators.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/587d03bea89b2b551633aa561073ba97409a5dac/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generators.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/587d03bea89b2b551633aa561073ba97409a5dac/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generators.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generators.stderr?ref=587d03bea89b2b551633aa561073ba97409a5dac", "patch": "@@ -25,12 +25,13 @@ LL |     yield 0;\n    = note: for more information, see https://github.com/rust-lang/rust/issues/43122\n    = help: add `#![feature(generators)]` to the crate attributes to enable\n \n-error[E0627]: yield statement outside of generator literal\n+error[E0627]: yield expression outside of generator literal\n   --> $DIR/feature-gate-generators.rs:2:5\n    |\n LL |     yield true;\n    |     ^^^^^^^^^^\n \n error: aborting due to 4 previous errors\n \n-For more information about this error, try `rustc --explain E0658`.\n+Some errors have detailed explanations: E0627, E0658.\n+For more information about an error, try `rustc --explain E0627`."}, {"sha": "fe5ca822ceca1ce39e09cb24b9b9a24aa3e34817", "filename": "src/test/ui/generator/yield-in-const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/587d03bea89b2b551633aa561073ba97409a5dac/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/587d03bea89b2b551633aa561073ba97409a5dac/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-const.rs?ref=587d03bea89b2b551633aa561073ba97409a5dac", "patch": "@@ -1,6 +1,6 @@\n #![feature(generators)]\n \n const A: u8 = { yield 3u8; 3u8};\n-//~^ ERROR yield statement outside\n+//~^ ERROR yield expression outside\n \n fn main() {}"}, {"sha": "dcf4fe63e64bcf9622d83a768b8516df262ca495", "filename": "src/test/ui/generator/yield-in-const.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/587d03bea89b2b551633aa561073ba97409a5dac/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/587d03bea89b2b551633aa561073ba97409a5dac/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-const.stderr?ref=587d03bea89b2b551633aa561073ba97409a5dac", "patch": "@@ -1,8 +1,9 @@\n-error[E0627]: yield statement outside of generator literal\n+error[E0627]: yield expression outside of generator literal\n   --> $DIR/yield-in-const.rs:3:17\n    |\n LL | const A: u8 = { yield 3u8; 3u8};\n    |                 ^^^^^^^^^\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0627`."}, {"sha": "29b811621de1efecb5d6472f9b20b7f7a88cb32b", "filename": "src/test/ui/generator/yield-in-function.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/587d03bea89b2b551633aa561073ba97409a5dac/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/587d03bea89b2b551633aa561073ba97409a5dac/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-function.rs?ref=587d03bea89b2b551633aa561073ba97409a5dac", "patch": "@@ -1,4 +1,4 @@\n #![feature(generators)]\n \n fn main() { yield; }\n-//~^ ERROR yield statement outside\n+//~^ ERROR yield expression outside"}, {"sha": "51cce198ca3b45a7d4da74f4274639f9a7f97707", "filename": "src/test/ui/generator/yield-in-function.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/587d03bea89b2b551633aa561073ba97409a5dac/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-function.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/587d03bea89b2b551633aa561073ba97409a5dac/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-function.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-function.stderr?ref=587d03bea89b2b551633aa561073ba97409a5dac", "patch": "@@ -1,8 +1,9 @@\n-error[E0627]: yield statement outside of generator literal\n+error[E0627]: yield expression outside of generator literal\n   --> $DIR/yield-in-function.rs:3:13\n    |\n LL | fn main() { yield; }\n    |             ^^^^^\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0627`."}, {"sha": "d27fbb33ba10acfa67191812fa701543ef4719a3", "filename": "src/test/ui/generator/yield-in-static.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/587d03bea89b2b551633aa561073ba97409a5dac/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/587d03bea89b2b551633aa561073ba97409a5dac/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-static.rs?ref=587d03bea89b2b551633aa561073ba97409a5dac", "patch": "@@ -1,6 +1,6 @@\n #![feature(generators)]\n \n static B: u8 = { yield 3u8; 3u8};\n-//~^ ERROR yield statement outside\n+//~^ ERROR yield expression outside\n \n fn main() {}"}, {"sha": "d867f3ad345288b4fede56c3b6ab7e747650df40", "filename": "src/test/ui/generator/yield-in-static.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/587d03bea89b2b551633aa561073ba97409a5dac/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/587d03bea89b2b551633aa561073ba97409a5dac/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-static.stderr?ref=587d03bea89b2b551633aa561073ba97409a5dac", "patch": "@@ -1,8 +1,9 @@\n-error[E0627]: yield statement outside of generator literal\n+error[E0627]: yield expression outside of generator literal\n   --> $DIR/yield-in-static.rs:3:18\n    |\n LL | static B: u8 = { yield 3u8; 3u8};\n    |                  ^^^^^^^^^\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0627`."}]}