{"sha": "2bee88870fde12dcbf6209e436bf6c3ca4159444", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiZWU4ODg3MGZkZTEyZGNiZjYyMDllNDM2YmY2YzNjYTQxNTk0NDQ=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-02-17T07:14:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-02-17T07:14:39Z"}, "message": "Merge pull request #2421 from brotzeit/clippy\n\napply some clippy suggestions", "tree": {"sha": "0d30e23d6abc4bbf7b6164bc8657048d7429ad40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d30e23d6abc4bbf7b6164bc8657048d7429ad40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2bee88870fde12dcbf6209e436bf6c3ca4159444", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJah9ZfCRBK7hj4Ov3rIwAAdHIIAH1PD8gArl6bVHve1A8pkJ+q\nftCHJTZt1f7G/eeiVZliirmWDZgh5SyRNO6Z8yS/O0QY++QYGHqRBG8QFXKaXH1Z\nvHC5zVIwvwDbd+0BoABmO70xMEvH+ShuK4leJlyMzWu33zi6QoduJv3GWeLoIyqo\nXYkzKJwNhz8QzzZ4ciyL185QJEYIiRKU2GZGo2xGj7xxZDYvwrQTRtLFsN2QRyi3\nZ1E1R1Ra62XaGH2Ao4dzbVWiUeRcG6xPSyv8ccKP5D1g8iUeT2x4iby+GXK8R/5k\n0OMFOWMEJDmoxkxLqnhoDVsECbaUIKmBXBG3ssp0b11VXirjby37mBsOGlKptPY=\n=IVtH\n-----END PGP SIGNATURE-----\n", "payload": "tree 0d30e23d6abc4bbf7b6164bc8657048d7429ad40\nparent 4531921f5ffb8f2d6b16225b8f2a63bf49b310b0\nparent ddca0f9b123bdf38536b9f6318f23b7ba2b40b9f\nauthor Seiichi Uchida <seuchida@gmail.com> 1518851679 +0900\ncommitter GitHub <noreply@github.com> 1518851679 +0900\n\nMerge pull request #2421 from brotzeit/clippy\n\napply some clippy suggestions"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2bee88870fde12dcbf6209e436bf6c3ca4159444", "html_url": "https://github.com/rust-lang/rust/commit/2bee88870fde12dcbf6209e436bf6c3ca4159444", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2bee88870fde12dcbf6209e436bf6c3ca4159444/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4531921f5ffb8f2d6b16225b8f2a63bf49b310b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4531921f5ffb8f2d6b16225b8f2a63bf49b310b0", "html_url": "https://github.com/rust-lang/rust/commit/4531921f5ffb8f2d6b16225b8f2a63bf49b310b0"}, {"sha": "ddca0f9b123bdf38536b9f6318f23b7ba2b40b9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddca0f9b123bdf38536b9f6318f23b7ba2b40b9f", "html_url": "https://github.com/rust-lang/rust/commit/ddca0f9b123bdf38536b9f6318f23b7ba2b40b9f"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "3ba702ded918b04152124d18d19e3eb6f8302a00", "filename": "rustfmt-core/src/lists.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2bee88870fde12dcbf6209e436bf6c3ca4159444/rustfmt-core%2Fsrc%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bee88870fde12dcbf6209e436bf6c3ca4159444/rustfmt-core%2Fsrc%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Fsrc%2Flists.rs?ref=2bee88870fde12dcbf6209e436bf6c3ca4159444", "patch": "@@ -616,6 +616,7 @@ where\n     }\n }\n \n+#[cfg_attr(feature = \"cargo-clippy\", allow(too_many_arguments))]\n // Creates an iterator over a list's items with associated comments.\n pub fn itemize_list<'a, T, I, F1, F2, F3>(\n     codemap: &'a CodeMap,"}, {"sha": "46d10824fef049ba69f34b20193a62f7a6b2ea01", "filename": "rustfmt-core/src/visitor.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2bee88870fde12dcbf6209e436bf6c3ca4159444/rustfmt-core%2Fsrc%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bee88870fde12dcbf6209e436bf6c3ca4159444/rustfmt-core%2Fsrc%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Fsrc%2Fvisitor.rs?ref=2bee88870fde12dcbf6209e436bf6c3ca4159444", "patch": "@@ -200,7 +200,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n \n                 let snippet = self.snippet(mk_sp(\n                     self.last_pos,\n-                    attr_lo.unwrap_or(first_stmt.span.lo()),\n+                    attr_lo.unwrap_or_else(|| first_stmt.span.lo()),\n                 ));\n                 let len = CommentCodeSlices::new(snippet)\n                     .nth(0)\n@@ -568,6 +568,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n         self.buffer.push_str(s);\n     }\n \n+    #[cfg_attr(feature = \"cargo-clippy\", allow(needless_pass_by_value))]\n     fn push_rewrite_inner(&mut self, span: Span, rewrite: Option<String>) {\n         if let Some(ref s) = rewrite {\n             self.push_str(s);"}]}