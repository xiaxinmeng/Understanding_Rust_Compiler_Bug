{"sha": "52ee9fbc027f7c371ed2e34ad191633a42c11c95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyZWU5ZmJjMDI3ZjdjMzcxZWQyZTM0YWQxOTE2MzNhNDJjMTFjOTU=", "commit": {"author": {"name": "Thi\u00e9baud Weksteen", "email": "tweek@google.com", "date": "2021-03-15T10:21:39Z"}, "committer": {"name": "Thi\u00e9baud Weksteen", "email": "tweek@google.com", "date": "2021-04-09T13:33:43Z"}, "message": "android: set abort message\n\nAndroid has the ability to supply an abort message [1]. This message is\nautomatically included in the debug trace, which helps debugging [2].\nModify panic_abort to populate this message before calling abort().\n\n[1] https://android.googlesource.com/platform/bionic/+/master/libc/include/android/set_abort_message.h\n[2] https://source.android.com/devices/tech/debug/native-crash", "tree": {"sha": "af313f08ef9db0438d1dbc4a0762f47b607acfdd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af313f08ef9db0438d1dbc4a0762f47b607acfdd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52ee9fbc027f7c371ed2e34ad191633a42c11c95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52ee9fbc027f7c371ed2e34ad191633a42c11c95", "html_url": "https://github.com/rust-lang/rust/commit/52ee9fbc027f7c371ed2e34ad191633a42c11c95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52ee9fbc027f7c371ed2e34ad191633a42c11c95/comments", "author": {"login": "tweksteen", "id": 109376, "node_id": "MDQ6VXNlcjEwOTM3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/109376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tweksteen", "html_url": "https://github.com/tweksteen", "followers_url": "https://api.github.com/users/tweksteen/followers", "following_url": "https://api.github.com/users/tweksteen/following{/other_user}", "gists_url": "https://api.github.com/users/tweksteen/gists{/gist_id}", "starred_url": "https://api.github.com/users/tweksteen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tweksteen/subscriptions", "organizations_url": "https://api.github.com/users/tweksteen/orgs", "repos_url": "https://api.github.com/users/tweksteen/repos", "events_url": "https://api.github.com/users/tweksteen/events{/privacy}", "received_events_url": "https://api.github.com/users/tweksteen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tweksteen", "id": 109376, "node_id": "MDQ6VXNlcjEwOTM3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/109376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tweksteen", "html_url": "https://github.com/tweksteen", "followers_url": "https://api.github.com/users/tweksteen/followers", "following_url": "https://api.github.com/users/tweksteen/following{/other_user}", "gists_url": "https://api.github.com/users/tweksteen/gists{/gist_id}", "starred_url": "https://api.github.com/users/tweksteen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tweksteen/subscriptions", "organizations_url": "https://api.github.com/users/tweksteen/orgs", "repos_url": "https://api.github.com/users/tweksteen/repos", "events_url": "https://api.github.com/users/tweksteen/events{/privacy}", "received_events_url": "https://api.github.com/users/tweksteen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "354cc751b74e813f180755fa67bebcb669825755", "url": "https://api.github.com/repos/rust-lang/rust/commits/354cc751b74e813f180755fa67bebcb669825755", "html_url": "https://github.com/rust-lang/rust/commit/354cc751b74e813f180755fa67bebcb669825755"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "5b559ae17cf7b6ea28227105841f0b57e5514bea", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/52ee9fbc027f7c371ed2e34ad191633a42c11c95/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/52ee9fbc027f7c371ed2e34ad191633a42c11c95/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=52ee9fbc027f7c371ed2e34ad191633a42c11c95", "patch": "@@ -2482,6 +2482,7 @@ dependencies = [\n name = \"panic_abort\"\n version = \"0.0.0\"\n dependencies = [\n+ \"alloc\",\n  \"cfg-if 0.1.10\",\n  \"compiler_builtins\",\n  \"core\","}, {"sha": "bdab664cd64fcc5dd530a582dc1fe09a99f3f717", "filename": "library/panic_abort/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/52ee9fbc027f7c371ed2e34ad191633a42c11c95/library%2Fpanic_abort%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/52ee9fbc027f7c371ed2e34ad191633a42c11c95/library%2Fpanic_abort%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fpanic_abort%2FCargo.toml?ref=52ee9fbc027f7c371ed2e34ad191633a42c11c95", "patch": "@@ -13,6 +13,7 @@ bench = false\n doc = false\n \n [dependencies]\n+alloc = { path = \"../alloc\" }\n cfg-if = { version = \"0.1.8\", features = ['rustc-dep-of-std'] }\n core = { path = \"../core\" }\n libc = { version = \"0.2\", default-features = false }"}, {"sha": "34d77502eabe50b34368754fd807d3dbc038aad2", "filename": "library/panic_abort/src/android.rs", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/52ee9fbc027f7c371ed2e34ad191633a42c11c95/library%2Fpanic_abort%2Fsrc%2Fandroid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52ee9fbc027f7c371ed2e34ad191633a42c11c95/library%2Fpanic_abort%2Fsrc%2Fandroid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fpanic_abort%2Fsrc%2Fandroid.rs?ref=52ee9fbc027f7c371ed2e34ad191633a42c11c95", "patch": "@@ -0,0 +1,49 @@\n+use alloc::string::String;\n+use core::mem::transmute;\n+use core::panic::BoxMeUp;\n+use core::ptr::copy_nonoverlapping;\n+\n+const ANDROID_SET_ABORT_MESSAGE: &[u8] = b\"android_set_abort_message\\0\";\n+type SetAbortMessageType = unsafe extern \"C\" fn(*const libc::c_char) -> ();\n+\n+// Forward the abort message to libc's android_set_abort_message. We try our best to populate the\n+// message but as this function may already be called as part of a failed allocation, it may not be\n+// possible to do so.\n+//\n+// Some methods of core are on purpose avoided (such as try_reserve) as these rely on the correct\n+// resolution of rust_eh_personality which is loosely defined in panic_abort.\n+//\n+// Weakly resolve the symbol for android_set_abort_message. This function is only available\n+// for API >= 21.\n+pub(crate) unsafe fn android_set_abort_message(payload: *mut &mut dyn BoxMeUp) {\n+    let func_addr =\n+        libc::dlsym(libc::RTLD_DEFAULT, ANDROID_SET_ABORT_MESSAGE.as_ptr() as *const libc::c_char)\n+            as usize;\n+    if func_addr == 0 {\n+        return;\n+    }\n+\n+    let payload = (*payload).get();\n+    let msg = match payload.downcast_ref::<&'static str>() {\n+        Some(msg) => msg.as_bytes(),\n+        None => match payload.downcast_ref::<String>() {\n+            Some(msg) => msg.as_bytes(),\n+            None => &[],\n+        },\n+    };\n+    if msg.is_empty() {\n+        return;\n+    }\n+\n+    // Allocate a new buffer to append the null byte.\n+    let size = msg.len() + 1usize;\n+    let buf = libc::malloc(size) as *mut libc::c_char;\n+    if buf.is_null() {\n+        return; // allocation failure\n+    }\n+    copy_nonoverlapping(msg.as_ptr(), buf as *mut u8, msg.len());\n+    buf.offset(msg.len() as isize).write(0);\n+\n+    let func = transmute::<usize, SetAbortMessageType>(func_addr);\n+    func(buf);\n+}"}, {"sha": "5dcd1e6af365917cf324a5dfbfcc827db9e4de75", "filename": "library/panic_abort/src/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/52ee9fbc027f7c371ed2e34ad191633a42c11c95/library%2Fpanic_abort%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52ee9fbc027f7c371ed2e34ad191633a42c11c95/library%2Fpanic_abort%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fpanic_abort%2Fsrc%2Flib.rs?ref=52ee9fbc027f7c371ed2e34ad191633a42c11c95", "patch": "@@ -19,6 +19,9 @@\n #![feature(rustc_attrs)]\n #![feature(asm)]\n \n+#[cfg(target_os = \"android\")]\n+mod android;\n+\n use core::any::Any;\n use core::panic::BoxMeUp;\n \n@@ -31,6 +34,10 @@ pub unsafe extern \"C\" fn __rust_panic_cleanup(_: *mut u8) -> *mut (dyn Any + Sen\n // \"Leak\" the payload and shim to the relevant abort on the platform in question.\n #[rustc_std_internal_symbol]\n pub unsafe extern \"C\" fn __rust_start_panic(_payload: *mut &mut dyn BoxMeUp) -> u32 {\n+    // Android has the ability to attach a message as part of the abort.\n+    #[cfg(target_os = \"android\")]\n+    android::android_set_abort_message(_payload);\n+\n     abort();\n \n     cfg_if::cfg_if! {"}]}