{"sha": "ff60fdc315e324843589554f45e2e3c8f7cd1bf4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmNjBmZGMzMTVlMzI0ODQzNTg5NTU0ZjQ1ZTJlM2M4ZjdjZDFiZjQ=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-08-10T18:31:38Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-08-10T18:31:38Z"}, "message": "Fix typos in syntax.md", "tree": {"sha": "175c92e0cc8aa5c7d1951b4de156785ccab9e133", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/175c92e0cc8aa5c7d1951b4de156785ccab9e133"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff60fdc315e324843589554f45e2e3c8f7cd1bf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff60fdc315e324843589554f45e2e3c8f7cd1bf4", "html_url": "https://github.com/rust-lang/rust/commit/ff60fdc315e324843589554f45e2e3c8f7cd1bf4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff60fdc315e324843589554f45e2e3c8f7cd1bf4/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3336509e52187a7a70a8043557a7317872e3a2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3336509e52187a7a70a8043557a7317872e3a2f", "html_url": "https://github.com/rust-lang/rust/commit/f3336509e52187a7a70a8043557a7317872e3a2f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f1bcdc4aff86279d0a020e34826f11d53649c955", "filename": "docs/dev/syntax.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff60fdc315e324843589554f45e2e3c8f7cd1bf4/docs%2Fdev%2Fsyntax.md", "raw_url": "https://github.com/rust-lang/rust/raw/ff60fdc315e324843589554f45e2e3c8f7cd1bf4/docs%2Fdev%2Fsyntax.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Fsyntax.md?ref=ff60fdc315e324843589554f45e2e3c8f7cd1bf4", "patch": "@@ -74,7 +74,7 @@ Points of note:\n * The original text can be recovered by concatenating the texts of all tokens in order.\n * Accessing a child of particular type (for example, parameter list of a function) generally involves linerary traversing the children, looking for a specific `kind`.\n * Modifying the tree is roughly `O(depth)`.\n-  We don't make special efforts to guarantree that the depth is not liner, but, in practice, syntax trees are branchy and shallow.\n+  We don't make special efforts to guarantee that the depth is not linear, but, in practice, syntax trees are branchy and shallow.\n * If mandatory (grammar wise) node is missing from the input, it's just missing from the tree.\n * If an extra erroneous input is present, it is wrapped into a node with `ERROR` kind, and treated just like any other node.\n * Parser errors are not a part of syntax tree."}]}