{"sha": "eb2980c7f1df7d4c461837daeca4c14eeea80429", "node_id": "C_kwDOAAsO6NoAKGViMjk4MGM3ZjFkZjdkNGM0NjE4MzdkYWVjYTRjMTRlZWVhODA0Mjk", "commit": {"author": {"name": "Gijs Burghoorn", "email": "g.burghoorn@gmail.com", "date": "2023-01-04T15:18:34Z"}, "committer": {"name": "Gijs Burghoorn", "email": "g.burghoorn@gmail.com", "date": "2023-01-04T15:18:34Z"}, "message": "Tidy up whitespace", "tree": {"sha": "2f905aae5284724aa041f9599596835f6e596db9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f905aae5284724aa041f9599596835f6e596db9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb2980c7f1df7d4c461837daeca4c14eeea80429", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb2980c7f1df7d4c461837daeca4c14eeea80429", "html_url": "https://github.com/rust-lang/rust/commit/eb2980c7f1df7d4c461837daeca4c14eeea80429", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb2980c7f1df7d4c461837daeca4c14eeea80429/comments", "author": {"login": "coastalwhite", "id": 6944009, "node_id": "MDQ6VXNlcjY5NDQwMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/6944009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coastalwhite", "html_url": "https://github.com/coastalwhite", "followers_url": "https://api.github.com/users/coastalwhite/followers", "following_url": "https://api.github.com/users/coastalwhite/following{/other_user}", "gists_url": "https://api.github.com/users/coastalwhite/gists{/gist_id}", "starred_url": "https://api.github.com/users/coastalwhite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coastalwhite/subscriptions", "organizations_url": "https://api.github.com/users/coastalwhite/orgs", "repos_url": "https://api.github.com/users/coastalwhite/repos", "events_url": "https://api.github.com/users/coastalwhite/events{/privacy}", "received_events_url": "https://api.github.com/users/coastalwhite/received_events", "type": "User", "site_admin": false}, "committer": {"login": "coastalwhite", "id": 6944009, "node_id": "MDQ6VXNlcjY5NDQwMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/6944009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coastalwhite", "html_url": "https://github.com/coastalwhite", "followers_url": "https://api.github.com/users/coastalwhite/followers", "following_url": "https://api.github.com/users/coastalwhite/following{/other_user}", "gists_url": "https://api.github.com/users/coastalwhite/gists{/gist_id}", "starred_url": "https://api.github.com/users/coastalwhite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coastalwhite/subscriptions", "organizations_url": "https://api.github.com/users/coastalwhite/orgs", "repos_url": "https://api.github.com/users/coastalwhite/repos", "events_url": "https://api.github.com/users/coastalwhite/events{/privacy}", "received_events_url": "https://api.github.com/users/coastalwhite/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c43b42b0cd1823388418504e84f3c4fec6f33b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c43b42b0cd1823388418504e84f3c4fec6f33b9", "html_url": "https://github.com/rust-lang/rust/commit/0c43b42b0cd1823388418504e84f3c4fec6f33b9"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "ff80d1160f65e6d2413cb0a94f78af99c4c7b775", "filename": "library/core/src/macros/mod.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/eb2980c7f1df7d4c461837daeca4c14eeea80429/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2980c7f1df7d4c461837daeca4c14eeea80429/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs?ref=eb2980c7f1df7d4c461837daeca4c14eeea80429", "patch": "@@ -1312,7 +1312,7 @@ pub(crate) mod builtin {\n             /* compiler built-in */\n         };\n     }\n-    \n+\n     /// Parses a file as an expression or an item according to the context.\n     ///\n     /// <div class=\"example-wrap\" style=\"display:inline-block\">\n@@ -1328,19 +1328,19 @@ pub(crate) mod builtin {\n     ///\n     /// </pre>\n     /// </div>\n-    /// \n+    ///\n     /// If the included file is parsed as an expression, it is placed in the surrounding code\n     /// [unhygienically](https://doc.rust-lang.org/reference/macros-by-example.html#hygiene). This\n     /// could result in variables or functions being different from what the file expected if there\n     /// are variables or functions that have the same name in the current file.\n-    /// \n+    ///\n     /// The included file is located relative to the current file (similarly to how modules are\n     /// found). The provided path is interpreted in a platform-specific way at compile time. So,\n     /// for instance, an invocation with a Windows path containing backslashes `\\` would not\n     /// compile correctly on Unix.\n     ///\n     /// # Uses\n-    /// \n+    ///\n     /// The `include!` macro is primarily used for two purposes. It is used to include\n     /// documentation that is written in a separate file and it is used to include [build artifacts\n     /// usually as a result from the `build.rs`\n@@ -1351,31 +1351,31 @@ pub(crate) mod builtin {\n     /// use the [`include_str`] macro as `#![doc = include_str!(\"...\")]` (at the module level) or\n     /// `#[doc = include_str!(\"...\")]` (at the item level) to include documentation from a plain\n     /// text or markdown file.\n-    /// \n+    ///\n     /// # Examples\n-    /// \n+    ///\n     /// Assume there are two files in the same directory with the following contents:\n-    /// \n+    ///\n     /// File 'monkeys.in':\n-    /// \n+    ///\n     /// ```ignore (only-for-syntax-highlight)\n     /// ['\ud83d\ude48', '\ud83d\ude4a', '\ud83d\ude49']\n     ///     .iter()\n     ///     .cycle()\n     ///     .take(6)\n     ///     .collect::<String>()\n     /// ```\n-    /// \n+    ///\n     /// File 'main.rs':\n-    /// \n+    ///\n     /// ```ignore (cannot-doctest-external-file-dependency)\n     /// fn main() {\n     ///     let my_string = include!(\"monkeys.in\");\n     ///     assert_eq!(\"\ud83d\ude48\ud83d\ude4a\ud83d\ude49\ud83d\ude48\ud83d\ude4a\ud83d\ude49\", my_string);\n     ///     println!(\"{my_string}\");\n     /// }\n     /// ```\n-    /// \n+    ///\n     /// Compiling 'main.rs' and running the resulting binary will print\n     /// \"\ud83d\ude48\ud83d\ude4a\ud83d\ude49\ud83d\ude48\ud83d\ude4a\ud83d\ude49\".\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}