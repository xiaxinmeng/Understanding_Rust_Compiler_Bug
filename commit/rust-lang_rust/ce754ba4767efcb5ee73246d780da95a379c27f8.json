{"sha": "ce754ba4767efcb5ee73246d780da95a379c27f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlNzU0YmE0NzY3ZWZjYjVlZTczMjQ2ZDc4MGRhOTVhMzc5YzI3Zjg=", "commit": {"author": {"name": "toidiu", "email": "toidiu@protonmail.com", "date": "2017-10-11T02:54:59Z"}, "committer": {"name": "toidiu", "email": "toidiu@protonmail.com", "date": "2017-10-16T18:26:18Z"}, "message": "add a new dep node for outlives", "tree": {"sha": "a329e535f6208d41e6de3bfe98a1379e3bff3dda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a329e535f6208d41e6de3bfe98a1379e3bff3dda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce754ba4767efcb5ee73246d780da95a379c27f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce754ba4767efcb5ee73246d780da95a379c27f8", "html_url": "https://github.com/rust-lang/rust/commit/ce754ba4767efcb5ee73246d780da95a379c27f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce754ba4767efcb5ee73246d780da95a379c27f8/comments", "author": null, "committer": null, "parents": [{"sha": "fe5cb1a5174f6054d03b6d95f84ff8808e2c89de", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe5cb1a5174f6054d03b6d95f84ff8808e2c89de", "html_url": "https://github.com/rust-lang/rust/commit/fe5cb1a5174f6054d03b6d95f84ff8808e2c89de"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "92bbb745bb2145327c88d38d6369a0f128e51253", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ce754ba4767efcb5ee73246d780da95a379c27f8/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce754ba4767efcb5ee73246d780da95a379c27f8/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=ce754ba4767efcb5ee73246d780da95a379c27f8", "patch": "@@ -476,6 +476,7 @@ define_dep_nodes!( <'tcx>\n     [] TypeOfItem(DefId),\n     [] GenericsOfItem(DefId),\n     [] PredicatesOfItem(DefId),\n+    [] InferredOutlivesOf(DefId),\n     [] SuperPredicatesOfItem(DefId),\n     [] TraitDefOfItem(DefId),\n     [] AdtDefOfItem(DefId),"}, {"sha": "f54391ebb07eb42fa2db7ae81f5cf854e7a59db6", "filename": "src/librustc/ty/maps/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce754ba4767efcb5ee73246d780da95a379c27f8/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce754ba4767efcb5ee73246d780da95a379c27f8/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs?ref=ce754ba4767efcb5ee73246d780da95a379c27f8", "patch": "@@ -122,7 +122,7 @@ define_maps! { <'tcx>\n     [] fn variances_of: ItemVariances(DefId) -> Rc<Vec<ty::Variance>>,\n \n     /// Maps from def-id of a type to its (inferred) outlives.\n-    [] fn inferred_outlives_of: PredicatesOfItem(DefId) -> Vec<ty::Predicate<'tcx>>,\n+    [] fn inferred_outlives_of: InferredOutlivesOf(DefId) -> Vec<ty::Predicate<'tcx>>,\n \n     /// Maps from an impl/trait def-id to a list of the def-ids of its items\n     [] fn associated_item_def_ids: AssociatedItemDefIds(DefId) -> Rc<Vec<DefId>>,"}, {"sha": "69a9a258d81c9f615105e2b39f37d3308c73b529", "filename": "src/librustc/ty/maps/plumbing.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ce754ba4767efcb5ee73246d780da95a379c27f8/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce754ba4767efcb5ee73246d780da95a379c27f8/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs?ref=ce754ba4767efcb5ee73246d780da95a379c27f8", "patch": "@@ -736,6 +736,7 @@ pub fn force_from_dep_node<'a, 'gcx, 'lcx>(tcx: TyCtxt<'a, 'gcx, 'lcx>,\n         DepKind::TypeOfItem => { force!(type_of, def_id!()); }\n         DepKind::GenericsOfItem => { force!(generics_of, def_id!()); }\n         DepKind::PredicatesOfItem => { force!(predicates_of, def_id!()); }\n+        DepKind::InferredOutlivesOf => { force!(outlives_of, def_id!()); }\n         DepKind::SuperPredicatesOfItem => { force!(super_predicates_of, def_id!()); }\n         DepKind::TraitDefOfItem => { force!(trait_def, def_id!()); }\n         DepKind::AdtDefOfItem => { force!(adt_def, def_id!()); }"}]}