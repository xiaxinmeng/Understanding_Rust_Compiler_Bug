{"sha": "7c5e41631da6c647da6b55bb6e9d9011874e23c0", "node_id": "C_kwDOAAsO6NoAKDdjNWU0MTYzMWRhNmM2NDdkYTZiNTViYjZlOWQ5MDExODc0ZTIzYzA", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2023-06-12T09:16:57Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2023-06-12T09:18:28Z"}, "message": "Revert \"Fix intra-doc links from pointer appearing in windows HANDLE type alias\"\n\nThis reverts commit 2ce7cd906bde70d8cbd9b07b31c6a7bf1131c345.", "tree": {"sha": "5bd3b6a14e43e276dbcddbef03dbf5144c43d98e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bd3b6a14e43e276dbcddbef03dbf5144c43d98e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c5e41631da6c647da6b55bb6e9d9011874e23c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c5e41631da6c647da6b55bb6e9d9011874e23c0", "html_url": "https://github.com/rust-lang/rust/commit/7c5e41631da6c647da6b55bb6e9d9011874e23c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c5e41631da6c647da6b55bb6e9d9011874e23c0/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77dba225c1048e5585b2cdefb7f8588bd2d2741b", "url": "https://api.github.com/repos/rust-lang/rust/commits/77dba225c1048e5585b2cdefb7f8588bd2d2741b", "html_url": "https://github.com/rust-lang/rust/commit/77dba225c1048e5585b2cdefb7f8588bd2d2741b"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "c6f43857887c96e02e71bc25caea546a07a6673d", "filename": "library/core/src/ptr/mut_ptr.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7c5e41631da6c647da6b55bb6e9d9011874e23c0/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c5e41631da6c647da6b55bb6e9d9011874e23c0/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs?ref=7c5e41631da6c647da6b55bb6e9d9011874e23c0", "patch": "@@ -106,7 +106,7 @@ impl<T: ?Sized> *mut T {\n     /// with [`cast_mut`] on `*const T` and may have documentation value if used instead of implicit\n     /// coercion.\n     ///\n-    /// [`cast_mut`]: pointer::cast_mut\n+    /// [`cast_mut`]: #method.cast_mut\n     #[stable(feature = \"ptr_const_cast\", since = \"1.65.0\")]\n     #[rustc_const_stable(feature = \"ptr_const_cast\", since = \"1.65.0\")]\n     #[inline(always)]\n@@ -117,7 +117,7 @@ impl<T: ?Sized> *mut T {\n     /// Casts a pointer to its raw bits.\n     ///\n     /// This is equivalent to `as usize`, but is more specific to enhance readability.\n-    /// The inverse method is [`from_bits`](pointer#method.from_bits-1).\n+    /// The inverse method is [`from_bits`](#method.from_bits-1).\n     ///\n     /// In particular, `*p as usize` and `p as usize` will both compile for\n     /// pointers to numeric types but do very different things, so using this\n@@ -153,7 +153,7 @@ impl<T: ?Sized> *mut T {\n     /// Creates a pointer from its raw bits.\n     ///\n     /// This is equivalent to `as *mut T`, but is more specific to enhance readability.\n-    /// The inverse method is [`to_bits`](pointer#method.to_bits-1).\n+    /// The inverse method is [`to_bits`](#method.to_bits-1).\n     ///\n     /// # Examples\n     ///\n@@ -303,7 +303,7 @@ impl<T: ?Sized> *mut T {\n     ///\n     /// For the mutable counterpart see [`as_mut`].\n     ///\n-    /// [`as_uninit_ref`]: pointer#method.as_uninit_ref-1\n+    /// [`as_uninit_ref`]: #method.as_uninit_ref-1\n     /// [`as_mut`]: #method.as_mut\n     ///\n     /// # Safety\n@@ -369,7 +369,7 @@ impl<T: ?Sized> *mut T {\n     ///\n     /// For the mutable counterpart see [`as_uninit_mut`].\n     ///\n-    /// [`as_ref`]: pointer#method.as_ref-1\n+    /// [`as_ref`]: #method.as_ref-1\n     /// [`as_uninit_mut`]: #method.as_uninit_mut\n     ///\n     /// # Safety\n@@ -624,7 +624,7 @@ impl<T: ?Sized> *mut T {\n     /// For the shared counterpart see [`as_ref`].\n     ///\n     /// [`as_uninit_mut`]: #method.as_uninit_mut\n-    /// [`as_ref`]: pointer#method.as_ref-1\n+    /// [`as_ref`]: #method.as_ref-1\n     ///\n     /// # Safety\n     ///\n@@ -689,7 +689,7 @@ impl<T: ?Sized> *mut T {\n     /// For the shared counterpart see [`as_uninit_ref`].\n     ///\n     /// [`as_mut`]: #method.as_mut\n-    /// [`as_uninit_ref`]: pointer#method.as_uninit_ref-1\n+    /// [`as_uninit_ref`]: #method.as_uninit_ref-1\n     ///\n     /// # Safety\n     ///\n@@ -779,7 +779,7 @@ impl<T: ?Sized> *mut T {\n     ///\n     /// This function is the inverse of [`offset`].\n     ///\n-    /// [`offset`]: pointer#method.offset-1\n+    /// [`offset`]: #method.offset-1\n     ///\n     /// # Safety\n     ///\n@@ -2051,7 +2051,7 @@ impl<T> *mut [T] {\n     ///\n     /// For the mutable counterpart see [`as_uninit_slice_mut`].\n     ///\n-    /// [`as_ref`]: pointer#method.as_ref-1\n+    /// [`as_ref`]: #method.as_ref-1\n     /// [`as_uninit_slice_mut`]: #method.as_uninit_slice_mut\n     ///\n     /// # Safety"}]}