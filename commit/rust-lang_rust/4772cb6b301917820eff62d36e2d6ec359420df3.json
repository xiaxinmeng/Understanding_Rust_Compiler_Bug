{"sha": "4772cb6b301917820eff62d36e2d6ec359420df3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3NzJjYjZiMzAxOTE3ODIwZWZmNjJkMzZlMmQ2ZWMzNTk0MjBkZjM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-22T17:56:52Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-22T17:56:52Z"}, "message": "minor: clarify naming", "tree": {"sha": "1a6e219398b29faf6dc22f8d948075ac3b804373", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a6e219398b29faf6dc22f8d948075ac3b804373"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4772cb6b301917820eff62d36e2d6ec359420df3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4772cb6b301917820eff62d36e2d6ec359420df3", "html_url": "https://github.com/rust-lang/rust/commit/4772cb6b301917820eff62d36e2d6ec359420df3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4772cb6b301917820eff62d36e2d6ec359420df3/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16d83ccbe2d4dd80c4a5de0793d95fb67e034408", "url": "https://api.github.com/repos/rust-lang/rust/commits/16d83ccbe2d4dd80c4a5de0793d95fb67e034408", "html_url": "https://github.com/rust-lang/rust/commit/16d83ccbe2d4dd80c4a5de0793d95fb67e034408"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "1b7cb7c8b29499e22c932f187cabd59890d53758", "filename": "crates/hir_def/src/item_scope.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4772cb6b301917820eff62d36e2d6ec359420df3/crates%2Fhir_def%2Fsrc%2Fitem_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4772cb6b301917820eff62d36e2d6ec359420df3/crates%2Fhir_def%2Fsrc%2Fitem_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_scope.rs?ref=4772cb6b301917820eff62d36e2d6ec359420df3", "patch": "@@ -30,12 +30,16 @@ pub struct PerNsGlobImports {\n \n #[derive(Debug, Default, PartialEq, Eq)]\n pub struct ItemScope {\n+    /// Defs visible in this scope. This includes `declarations`, but also\n+    /// imports.\n     types: FxHashMap<Name, (ModuleDefId, Visibility)>,\n     values: FxHashMap<Name, (ModuleDefId, Visibility)>,\n     macros: FxHashMap<Name, (MacroDefId, Visibility)>,\n     unresolved: FxHashSet<Name>,\n \n-    defs: Vec<ModuleDefId>,\n+    /// The defs declared in this scope. Each def has a single scope where it is\n+    /// declared.\n+    declarations: Vec<ModuleDefId>,\n     impls: Vec<ImplId>,\n     unnamed_consts: Vec<ConstId>,\n     /// Traits imported via `use Trait as _;`.\n@@ -89,7 +93,7 @@ impl ItemScope {\n     }\n \n     pub fn declarations(&self) -> impl Iterator<Item = ModuleDefId> + '_ {\n-        self.defs.iter().copied()\n+        self.declarations.iter().copied()\n     }\n \n     pub fn impls(&self) -> impl Iterator<Item = ImplId> + ExactSizeIterator + '_ {\n@@ -150,8 +154,8 @@ impl ItemScope {\n             .chain(self.unnamed_trait_imports.keys().copied())\n     }\n \n-    pub(crate) fn define_def(&mut self, def: ModuleDefId) {\n-        self.defs.push(def)\n+    pub(crate) fn declare(&mut self, def: ModuleDefId) {\n+        self.declarations.push(def)\n     }\n \n     pub(crate) fn get_legacy_macro(&self, name: &Name) -> Option<MacroDefId> {\n@@ -311,7 +315,7 @@ impl ItemScope {\n             values,\n             macros,\n             unresolved,\n-            defs,\n+            declarations: defs,\n             impls,\n             unnamed_consts,\n             unnamed_trait_imports,"}, {"sha": "634e02205921f66169b02d2388befdc40a54188f", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4772cb6b301917820eff62d36e2d6ec359420df3/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4772cb6b301917820eff62d36e2d6ec359420df3/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=4772cb6b301917820eff62d36e2d6ec359420df3", "patch": "@@ -1506,7 +1506,7 @@ impl ModCollector<'_, '_> {\n             }\n \n             if let Some(DefData { id, name, visibility, has_constructor }) = def {\n-                self.def_collector.def_map.modules[self.module_id].scope.define_def(id);\n+                self.def_collector.def_map.modules[self.module_id].scope.declare(id);\n                 let vis = self\n                     .def_collector\n                     .def_map\n@@ -1627,7 +1627,7 @@ impl ModCollector<'_, '_> {\n         modules[self.module_id].children.insert(name.clone(), res);\n         let module = self.def_collector.def_map.module_id(res);\n         let def: ModuleDefId = module.into();\n-        self.def_collector.def_map.modules[self.module_id].scope.define_def(def);\n+        self.def_collector.def_map.modules[self.module_id].scope.declare(def);\n         self.def_collector.update(\n             self.module_id,\n             &[(Some(name), PerNs::from_def(def, vis, false))],"}]}