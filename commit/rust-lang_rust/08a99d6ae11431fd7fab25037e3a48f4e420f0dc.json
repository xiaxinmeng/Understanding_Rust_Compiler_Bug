{"sha": "08a99d6ae11431fd7fab25037e3a48f4e420f0dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4YTk5ZDZhZTExNDMxZmQ3ZmFiMjUwMzdlM2E0OGY0ZTQyMGYwZGM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-06T19:14:32Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-06T19:14:36Z"}, "message": "tutorial: Add a language overview to the introduction", "tree": {"sha": "b6815d19c3fa17e1c55ce552efd553d612f8e339", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6815d19c3fa17e1c55ce552efd553d612f8e339"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08a99d6ae11431fd7fab25037e3a48f4e420f0dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08a99d6ae11431fd7fab25037e3a48f4e420f0dc", "html_url": "https://github.com/rust-lang/rust/commit/08a99d6ae11431fd7fab25037e3a48f4e420f0dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08a99d6ae11431fd7fab25037e3a48f4e420f0dc/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "604f7c66ff4c61ea593e060eb6f8d055c89b64e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/604f7c66ff4c61ea593e060eb6f8d055c89b64e8", "html_url": "https://github.com/rust-lang/rust/commit/604f7c66ff4c61ea593e060eb6f8d055c89b64e8"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "9d85f9b3c6654ff29a64519eb77f62cf096dccfb", "filename": "doc/tutorial.md", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/08a99d6ae11431fd7fab25037e3a48f4e420f0dc/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/08a99d6ae11431fd7fab25037e3a48f4e420f0dc/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=08a99d6ae11431fd7fab25037e3a48f4e420f0dc", "patch": "@@ -11,6 +11,33 @@ comparisons to other languages in the C family. The tutorial covers\n the whole language, though not with the depth and precision of the\n [language reference](rust.html).\n \n+## Language Overview\n+\n+Rust is a systems programming language with a focus on type safety,\n+memory safety, and performance. It is intended for writing large, high\n+performance applications while preventing several classes of errors\n+commonly found in languages like C++. Rust has a sophisticated memory\n+model that enables many of the efficient data structures used in C\n+while disallowing invalid memory access that would otherwise cause\n+segmentation faults. Like other systems languages it is statically\n+typed and compiled ahead of time.\n+\n+As a multi-paradigm language it has strong support for writing code in\n+procedural, functional and object-oriented styles. Some of it's nice\n+high-level features include:\n+\n+* Pattern matching and algebraic data types (enums) - common in functional\n+  languages, pattern matching on ADTs provides a compact and expressive\n+  way to encode program logic\n+* Task-based concurrency - Rust uses lightweight tasks that do not share\n+  memory\n+* Higher-order functions - Closures in Rust are very powerful and used\n+  pervasively\n+* Polymorphism - Rust's type system features a unique combination of\n+  Java-style interfaces and Haskell-style typeclasses\n+* Generics - Functions and types can be parameterized over generic\n+  types with optional type constraints\n+\n ## First Impressions\n \n As a curly-brace language in the tradition of C, C++, and JavaScript,"}]}