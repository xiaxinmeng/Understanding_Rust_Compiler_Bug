{"sha": "747f0be0822faa0ef9a62384b2960e6c22b67b6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0N2YwYmUwODIyZmFhMGVmOWE2MjM4NGIyOTYwZTZjMjJiNjdiNmE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-09-25T23:26:23Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-09-25T23:26:23Z"}, "message": "rustc: Don't use jemalloc when crossing to MSVC\n\nThis commit updates the compiler to not attempt to use jemalloc for platforms\nwhere jemalloc is never enabled. Currently the compiler attempts to link in\njemalloc based on whether `--disable-jemalloc` was specified at build time for\nthe compiler itself, but this is only the right decision for the host target,\nnot for other targets.\n\nThis still leaves a hole open where a set of target libraries are downloaded\nwhich were built with `--disable-jemalloc` and the compiler is unaware of that,\nbut this is a pretty rare case so it can always be fixed later.", "tree": {"sha": "e3bd99d5ba3192cf1389081cf8e2b1a582114db3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3bd99d5ba3192cf1389081cf8e2b1a582114db3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/747f0be0822faa0ef9a62384b2960e6c22b67b6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/747f0be0822faa0ef9a62384b2960e6c22b67b6a", "html_url": "https://github.com/rust-lang/rust/commit/747f0be0822faa0ef9a62384b2960e6c22b67b6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/747f0be0822faa0ef9a62384b2960e6c22b67b6a/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fe79bdfdacb2f5914971bd1a0b63b9577afbf6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fe79bdfdacb2f5914971bd1a0b63b9577afbf6a", "html_url": "https://github.com/rust-lang/rust/commit/8fe79bdfdacb2f5914971bd1a0b63b9577afbf6a"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "8b75bb3941477b356aef4df75b75e253961f5614", "filename": "src/librustc_back/target/apple_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/747f0be0822faa0ef9a62384b2960e6c22b67b6a/src%2Flibrustc_back%2Ftarget%2Fapple_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/747f0be0822faa0ef9a62384b2960e6c22b67b6a/src%2Flibrustc_back%2Ftarget%2Fapple_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fapple_base.rs?ref=747f0be0822faa0ef9a62384b2960e6c22b67b6a", "patch": "@@ -24,7 +24,7 @@ pub fn opts() -> TargetOptions {\n         dll_suffix: \".dylib\".to_string(),\n         archive_format: \"bsd\".to_string(),\n         pre_link_args: Vec::new(),\n-        exe_allocation_crate: super::best_allocator(),\n+        exe_allocation_crate: super::maybe_jemalloc(),\n         .. Default::default()\n     }\n }"}, {"sha": "2b84244cda4a2ef2f903bd532867e770a2fc9d4c", "filename": "src/librustc_back/target/bitrig_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/747f0be0822faa0ef9a62384b2960e6c22b67b6a/src%2Flibrustc_back%2Ftarget%2Fbitrig_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/747f0be0822faa0ef9a62384b2960e6c22b67b6a/src%2Flibrustc_back%2Ftarget%2Fbitrig_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fbitrig_base.rs?ref=747f0be0822faa0ef9a62384b2960e6c22b67b6a", "patch": "@@ -20,7 +20,7 @@ pub fn opts() -> TargetOptions {\n         has_rpath: true,\n         position_independent_executables: true,\n         archive_format: \"gnu\".to_string(),\n-        exe_allocation_crate: super::best_allocator(),\n+        exe_allocation_crate: \"alloc_system\".to_string(),\n \n         .. Default::default()\n     }"}, {"sha": "b78fdc9f59ba1103063cb2863e1ab87efaf5fa80", "filename": "src/librustc_back/target/dragonfly_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/747f0be0822faa0ef9a62384b2960e6c22b67b6a/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/747f0be0822faa0ef9a62384b2960e6c22b67b6a/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs?ref=747f0be0822faa0ef9a62384b2960e6c22b67b6a", "patch": "@@ -27,7 +27,7 @@ pub fn opts() -> TargetOptions {\n         ),\n         position_independent_executables: true,\n         archive_format: \"gnu\".to_string(),\n-        exe_allocation_crate: super::best_allocator(),\n+        exe_allocation_crate: super::maybe_jemalloc(),\n         .. Default::default()\n     }\n }"}, {"sha": "e955f8c302bd64977a0b8c84e0d17c49bd153963", "filename": "src/librustc_back/target/freebsd_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/747f0be0822faa0ef9a62384b2960e6c22b67b6a/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/747f0be0822faa0ef9a62384b2960e6c22b67b6a/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs?ref=747f0be0822faa0ef9a62384b2960e6c22b67b6a", "patch": "@@ -18,7 +18,7 @@ pub fn opts() -> TargetOptions {\n         executables: true,\n         has_rpath: true,\n         archive_format: \"gnu\".to_string(),\n-        exe_allocation_crate: super::best_allocator(),\n+        exe_allocation_crate: super::maybe_jemalloc(),\n \n         .. Default::default()\n     }"}, {"sha": "6492fa5015970e07ca149a11c3ab32866dadf997", "filename": "src/librustc_back/target/linux_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/747f0be0822faa0ef9a62384b2960e6c22b67b6a/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/747f0be0822faa0ef9a62384b2960e6c22b67b6a/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs?ref=747f0be0822faa0ef9a62384b2960e6c22b67b6a", "patch": "@@ -29,7 +29,7 @@ pub fn opts() -> TargetOptions {\n         ],\n         position_independent_executables: true,\n         archive_format: \"gnu\".to_string(),\n-        exe_allocation_crate: super::best_allocator(),\n+        exe_allocation_crate: super::maybe_jemalloc(),\n         .. Default::default()\n     }\n }"}, {"sha": "771c2b45e1fabbb40531c9aeb8bcb83d205b6165", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/747f0be0822faa0ef9a62384b2960e6c22b67b6a/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/747f0be0822faa0ef9a62384b2960e6c22b67b6a/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=747f0be0822faa0ef9a62384b2960e6c22b67b6a", "patch": "@@ -449,7 +449,7 @@ impl Target {\n     }\n }\n \n-fn best_allocator() -> String {\n+fn maybe_jemalloc() -> String {\n     if cfg!(disable_jemalloc) {\n         \"alloc_system\".to_string()\n     } else {"}, {"sha": "2e4aa27cf889d22659b909e2221c5e5e6d9d8182", "filename": "src/librustc_back/target/openbsd_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/747f0be0822faa0ef9a62384b2960e6c22b67b6a/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/747f0be0822faa0ef9a62384b2960e6c22b67b6a/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs?ref=747f0be0822faa0ef9a62384b2960e6c22b67b6a", "patch": "@@ -27,7 +27,7 @@ pub fn opts() -> TargetOptions {\n         ),\n         position_independent_executables: true,\n         archive_format: \"gnu\".to_string(),\n-        exe_allocation_crate: super::best_allocator(),\n+        exe_allocation_crate: \"alloc_system\".to_string(),\n         .. Default::default()\n     }\n }"}, {"sha": "2e5973679022d7c05a56544db0e9cd84ff2c6fc9", "filename": "src/librustc_back/target/windows_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/747f0be0822faa0ef9a62384b2960e6c22b67b6a/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/747f0be0822faa0ef9a62384b2960e6c22b67b6a/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs?ref=747f0be0822faa0ef9a62384b2960e6c22b67b6a", "patch": "@@ -64,7 +64,7 @@ pub fn opts() -> TargetOptions {\n             // Always enable DEP (NX bit) when it is available\n             \"-Wl,--nxcompat\".to_string(),\n         ),\n-        exe_allocation_crate: super::best_allocator(),\n+        exe_allocation_crate: super::maybe_jemalloc(),\n \n         .. Default::default()\n     }"}, {"sha": "fb88ce158e4b3db5e0f25d217101df06ac247dec", "filename": "src/librustc_back/target/windows_msvc_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/747f0be0822faa0ef9a62384b2960e6c22b67b6a/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/747f0be0822faa0ef9a62384b2960e6c22b67b6a/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs?ref=747f0be0822faa0ef9a62384b2960e6c22b67b6a", "patch": "@@ -60,7 +60,7 @@ pub fn opts() -> TargetOptions {\n             \"/NXCOMPAT\".to_string(),\n         ],\n         archive_format: \"gnu\".to_string(),\n-        exe_allocation_crate: super::best_allocator(),\n+        exe_allocation_crate: \"alloc_system\".to_string(),\n \n         .. Default::default()\n     }"}]}