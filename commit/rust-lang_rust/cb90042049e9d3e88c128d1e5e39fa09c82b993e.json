{"sha": "cb90042049e9d3e88c128d1e5e39fa09c82b993e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiOTAwNDIwNDllOWQzZTg4YzEyOGQxZTVlMzlmYTA5YzgyYjk5M2U=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-11-08T12:36:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-08T12:36:25Z"}, "message": "Rollup merge of #78842 - shepmaster:bootstrap-rustfmt, r=Mark-Simulacrum\n\nHonor the rustfmt setting in config.toml\n\nPrior to this, setting the rustfmt configuration was ignored:\n\n```\n% mkdir example\n\n% cd example\n\n% ../configure --set build.rustfmt=/usr/bin/true\n\n% ../x.py fmt\n./x.py fmt is not supported on this channel\nfailed to run: /Users/shep/Projects/rust/example/build/bootstrap/debug/bootstrap fmt\nBuild completed unsuccessfully in 0:00:01\n```\n\nAnd after:\n\n```\n% ../x.py fmt\nBuild completed successfully in 0:00:11\n```\n\nr? `@Mark-Simulacrum`", "tree": {"sha": "e7bd128185f5967d06e23c76c08b3785e2016dd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7bd128185f5967d06e23c76c08b3785e2016dd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb90042049e9d3e88c128d1e5e39fa09c82b993e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfp+ZJCRBK7hj4Ov3rIwAAdHIIAFW4ZloltvqI3GAq3ruIogmw\nNR1e1yL7VNnMF8+bykBt5x/rM5ke8J8M5f0i78otgmCYmOoOBDuU0UjGeTo5J5Y0\nIGJoehh8g2Nn/rp5CRCftOrNtYg+yOQjO8/6dvePpgGCENE+jlXuCfIQUrzRJrkF\naI0ca9JKkCB/U2+L0hSVYUiCW/YPj3CmL4j8xSQoQiZrxGd39PppAnoFvSsZ6M25\nPunYSfSt05Sc+Hp6hy9R/gez3NG0Xe6veoPPlcM7UcVFO3NODJcwQXAXDnhPku4s\nyI64FStX7c3RBvH2AECzlzZsBE4BkGf3RLgFieqa0QcC6cDblWcX5geAo4wtu5I=\n=AsXP\n-----END PGP SIGNATURE-----\n", "payload": "tree e7bd128185f5967d06e23c76c08b3785e2016dd7\nparent 2489ff7123c6861e24f8f92e8a94c087ac3f4193\nparent 8cae2f167c0c332c5d04006afdd56d7a40c4dccb\nauthor Mara Bos <m-ou.se@m-ou.se> 1604838985 +0100\ncommitter GitHub <noreply@github.com> 1604838985 +0100\n\nRollup merge of #78842 - shepmaster:bootstrap-rustfmt, r=Mark-Simulacrum\n\nHonor the rustfmt setting in config.toml\n\nPrior to this, setting the rustfmt configuration was ignored:\n\n```\n% mkdir example\n\n% cd example\n\n% ../configure --set build.rustfmt=/usr/bin/true\n\n% ../x.py fmt\n./x.py fmt is not supported on this channel\nfailed to run: /Users/shep/Projects/rust/example/build/bootstrap/debug/bootstrap fmt\nBuild completed unsuccessfully in 0:00:01\n```\n\nAnd after:\n\n```\n% ../x.py fmt\nBuild completed successfully in 0:00:11\n```\n\nr? `@Mark-Simulacrum`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb90042049e9d3e88c128d1e5e39fa09c82b993e", "html_url": "https://github.com/rust-lang/rust/commit/cb90042049e9d3e88c128d1e5e39fa09c82b993e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb90042049e9d3e88c128d1e5e39fa09c82b993e/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2489ff7123c6861e24f8f92e8a94c087ac3f4193", "url": "https://api.github.com/repos/rust-lang/rust/commits/2489ff7123c6861e24f8f92e8a94c087ac3f4193", "html_url": "https://github.com/rust-lang/rust/commit/2489ff7123c6861e24f8f92e8a94c087ac3f4193"}, {"sha": "8cae2f167c0c332c5d04006afdd56d7a40c4dccb", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cae2f167c0c332c5d04006afdd56d7a40c4dccb", "html_url": "https://github.com/rust-lang/rust/commit/8cae2f167c0c332c5d04006afdd56d7a40c4dccb"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "40ea9afb6f695a3aed96ed3b158ba86b99c12465", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/cb90042049e9d3e88c128d1e5e39fa09c82b993e/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb90042049e9d3e88c128d1e5e39fa09c82b993e/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=cb90042049e9d3e88c128d1e5e39fa09c82b993e", "patch": "@@ -913,11 +913,18 @@ impl Config {\n             set(&mut config.missing_tools, t.missing_tools);\n         }\n \n-        // Cargo does not provide a RUSTFMT environment variable, so we\n-        // synthesize it manually. Note that we also later check the config.toml\n-        // and set this to that path if necessary.\n-        let rustfmt = config.initial_rustc.with_file_name(exe(\"rustfmt\", config.build));\n-        config.initial_rustfmt = if rustfmt.exists() { Some(rustfmt) } else { None };\n+        config.initial_rustfmt = config.initial_rustfmt.or_else({\n+            let build = config.build;\n+            let initial_rustc = &config.initial_rustc;\n+\n+            move || {\n+                // Cargo does not provide a RUSTFMT environment variable, so we\n+                // synthesize it manually.\n+                let rustfmt = initial_rustc.with_file_name(exe(\"rustfmt\", build));\n+\n+                if rustfmt.exists() { Some(rustfmt) } else { None }\n+            }\n+        });\n \n         // Now that we've reached the end of our configuration, infer the\n         // default values for all options that we haven't otherwise stored yet."}]}