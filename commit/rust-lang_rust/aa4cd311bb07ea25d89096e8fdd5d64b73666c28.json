{"sha": "aa4cd311bb07ea25d89096e8fdd5d64b73666c28", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhNGNkMzExYmIwN2VhMjVkODkwOTZlOGZkZDVkNjRiNzM2NjZjMjg=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-06-06T01:11:17Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-06-06T01:50:58Z"}, "message": "Add config options for spaces around the colon in struct literal fields\n\nIn Rust, colons are used for three purposes:\n\n* Type annotations, including type ascription\n* Trait bounds\n* Struct literal fields\n\nThis commit adds options for the last missing of the three purposes,\nstruct literal fields.", "tree": {"sha": "8eda35fc415720f1954538e6843e46a56e653f59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8eda35fc415720f1954538e6843e46a56e653f59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa4cd311bb07ea25d89096e8fdd5d64b73666c28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa4cd311bb07ea25d89096e8fdd5d64b73666c28", "html_url": "https://github.com/rust-lang/rust/commit/aa4cd311bb07ea25d89096e8fdd5d64b73666c28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d04ab9e5ba46b21a49027ce38dc913b4617125ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/d04ab9e5ba46b21a49027ce38dc913b4617125ba", "html_url": "https://github.com/rust-lang/rust/commit/d04ab9e5ba46b21a49027ce38dc913b4617125ba"}], "stats": {"total": 130, "additions": 121, "deletions": 9}, "files": [{"sha": "0b0a55703561bb64f17b601d299864714bd5a259", "filename": "Configurations.md", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=aa4cd311bb07ea25d89096e8fdd5d64b73666c28", "patch": "@@ -1123,6 +1123,33 @@ fn lorem<T: Eq>(t: T) {\n \n See also: [`space_before_bound`](#space_before_bound).\n \n+## `space_after_struct_lit_field_colon`\n+\n+Leave a space after the colon in a struct literal field\n+\n+- **Default value**: `true`\n+- **Possible values**: `true`, `false`\n+\n+#### `false`:\n+\n+```rust\n+let lorem = Lorem {\n+    ipsum:dolor,\n+    sit:amet,\n+};\n+```\n+\n+#### `true`:\n+\n+```rust\n+let lorem = Lorem {\n+    ipsum: dolor,\n+    sit: amet,\n+};\n+```\n+\n+See also: [`space_before_struct_lit_field_colon`](#space_before_struct_lit_field_colon).\n+\n ## `space_after_type_annotation_colon`\n \n Leave a space after the colon in a type annotation\n@@ -1173,6 +1200,33 @@ fn lorem<T : Eq>(t: T) {\n \n See also: [`space_after_bound_colon`](#space_after_bound_colon).\n \n+## `space_before_struct_lit_field_colon`\n+\n+Leave a space before the colon in a struct literal field\n+\n+- **Default value**: `true`\n+- **Possible values**: `true`, `false`\n+\n+#### `false`:\n+\n+```rust\n+let lorem = Lorem {\n+    ipsum: dolor,\n+    sit: amet,\n+};\n+```\n+\n+#### `true`:\n+\n+```rust\n+let lorem = Lorem {\n+    ipsum : dolor,\n+    sit : amet,\n+};\n+```\n+\n+See also: [`space_after_struct_lit_field_colon`](#space_after_struct_lit_field_colon).\n+\n ## `space_before_type_annotation`\n \n Leave a space before the colon in a type annotation"}, {"sha": "112d8e35d1dbc84c5b4c313ab37a8906639aeeda", "filename": "src/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=aa4cd311bb07ea25d89096e8fdd5d64b73666c28", "patch": "@@ -564,6 +564,10 @@ create_config! {\n         \"Leave a space before the colon in a type annotation\";\n     space_after_type_annotation_colon: bool, true,\n         \"Leave a space after the colon in a type annotation\";\n+    space_before_struct_lit_field_colon: bool, false,\n+        \"Leave a space before the colon in a struct literal field\";\n+    space_after_struct_lit_field_colon: bool, true,\n+        \"Leave a space after the colon in a struct literal field\";\n     space_before_bound: bool, false, \"Leave a space before the colon in a trait or lifetime bound\";\n     space_after_bound_colon: bool, true,\n         \"Leave a space after the colon in a trait or lifetime bound\";"}, {"sha": "8392ab438cdb8c25c717c5d64639a66458c8140b", "filename": "src/expr.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=aa4cd311bb07ea25d89096e8fdd5d64b73666c28", "patch": "@@ -2050,18 +2050,18 @@ fn rewrite_struct_lit<'a>(context: &RewriteContext,\n     // FIXME if context.config.struct_lit_style() == Visual, but we run out\n     // of space, we should fall back to BlockIndent.\n }\n-\n-pub fn type_annotation_separator(config: &Config) -> &str {\n-    colon_spaces(config.space_before_type_annotation(),\n-                 config.space_after_type_annotation_colon())\n+pub fn struct_lit_field_separator(config: &Config) -> &str {\n+    colon_spaces(config.space_before_struct_lit_field_colon(),\n+                 config.space_after_struct_lit_field_colon())\n }\n \n+\n fn rewrite_field(context: &RewriteContext, field: &ast::Field, shape: Shape) -> Option<String> {\n     let name = &field.ident.node.to_string();\n     if field.is_shorthand {\n         Some(name.to_string())\n     } else {\n-        let separator = type_annotation_separator(context.config);\n+        let separator = struct_lit_field_separator(context.config);\n         let overhead = name.len() + separator.len();\n         let mut expr_shape = try_opt!(shape.sub_width(overhead));\n         expr_shape.offset += overhead;"}, {"sha": "bf7933b547c2d10b7b5579b64c623af6c04d3c3b", "filename": "src/items.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=aa4cd311bb07ea25d89096e8fdd5d64b73666c28", "patch": "@@ -14,10 +14,10 @@ use {Indent, Shape};\n use codemap::SpanUtils;\n use utils::{format_mutability, format_visibility, contains_skip, end_typaram, wrap_str,\n             last_line_width, format_unsafety, trim_newlines, stmt_expr, semicolon_for_expr,\n-            trimmed_last_line_width};\n+            trimmed_last_line_width, colon_spaces};\n use lists::{write_list, itemize_list, ListItem, ListFormatting, SeparatorTactic, list_helper,\n             DefinitiveListTactic, ListTactic, definitive_tactic, format_item_list};\n-use expr::{is_empty_block, is_simple_block_stmt, rewrite_assign_rhs, type_annotation_separator};\n+use expr::{is_empty_block, is_simple_block_stmt, rewrite_assign_rhs};\n use comment::{FindUncommented, contains_comment, rewrite_comment, recover_comment_removed};\n use visitor::FmtVisitor;\n use rewrite::{Rewrite, RewriteContext};\n@@ -27,6 +27,12 @@ use syntax::{ast, abi, codemap, ptr, symbol};\n use syntax::codemap::{Span, BytePos, mk_sp};\n use syntax::ast::ImplItem;\n \n+fn type_annotation_separator(config: &Config) -> &str {\n+    colon_spaces(config.space_before_type_annotation(),\n+                 config.space_after_type_annotation_colon())\n+}\n+\n+\n // Statements of the form\n // let pat: ty = init;\n impl Rewrite for ast::Local {"}, {"sha": "3ee99fa5d1d8035a8843bec415f3800a4f547eaf", "filename": "tests/source/configs-space_after_struct_lit_field_colon-false.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Fsource%2Fconfigs-space_after_struct_lit_field_colon-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Fsource%2Fconfigs-space_after_struct_lit_field_colon-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-space_after_struct_lit_field_colon-false.rs?ref=aa4cd311bb07ea25d89096e8fdd5d64b73666c28", "patch": "@@ -0,0 +1,6 @@\n+// rustfmt-space_after_struct_lit_field_colon: false\n+\n+const LOREM: Lorem = Lorem {\n+    ipsum:dolor,\n+    sit :  amet,\n+};"}, {"sha": "6105d4725d8ad1abaeb5214b78e24b5b5fe5ff70", "filename": "tests/source/configs-space_after_struct_lit_field_colon-true.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Fsource%2Fconfigs-space_after_struct_lit_field_colon-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Fsource%2Fconfigs-space_after_struct_lit_field_colon-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-space_after_struct_lit_field_colon-true.rs?ref=aa4cd311bb07ea25d89096e8fdd5d64b73666c28", "patch": "@@ -0,0 +1,6 @@\n+// rustfmt-space_after_struct_lit_field_colon: true\n+\n+const LOREM: Lorem = Lorem {\n+    ipsum:dolor,\n+    sit :  amet,\n+};"}, {"sha": "a2d71c8bf0bcb10f41a1964107905af5afe7a770", "filename": "tests/source/configs-space_before_struct_lit_field_colon-false.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Fsource%2Fconfigs-space_before_struct_lit_field_colon-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Fsource%2Fconfigs-space_before_struct_lit_field_colon-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-space_before_struct_lit_field_colon-false.rs?ref=aa4cd311bb07ea25d89096e8fdd5d64b73666c28", "patch": "@@ -0,0 +1,6 @@\n+// rustfmt-space_before_struct_lit_field_colon: false\n+\n+const LOREM: Lorem = Lorem {\n+    ipsum:dolor,\n+    sit  : amet,\n+};"}, {"sha": "50e4ba12d82bc010a6393821493294918cb030e4", "filename": "tests/source/configs-space_before_struct_lit_field_colon-true.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Fsource%2Fconfigs-space_before_struct_lit_field_colon-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Fsource%2Fconfigs-space_before_struct_lit_field_colon-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-space_before_struct_lit_field_colon-true.rs?ref=aa4cd311bb07ea25d89096e8fdd5d64b73666c28", "patch": "@@ -0,0 +1,6 @@\n+// rustfmt-space_before_struct_lit_field_colon: true\n+\n+const LOREM: Lorem = Lorem {\n+    ipsum:dolor,\n+    sit  : amet,\n+};"}, {"sha": "8f4750594646ec41012d8978e46bc8de65e6c782", "filename": "tests/target/configs-space_after_struct_lit_field_colon-false.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Ftarget%2Fconfigs-space_after_struct_lit_field_colon-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Ftarget%2Fconfigs-space_after_struct_lit_field_colon-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-space_after_struct_lit_field_colon-false.rs?ref=aa4cd311bb07ea25d89096e8fdd5d64b73666c28", "patch": "@@ -0,0 +1,6 @@\n+// rustfmt-space_after_struct_lit_field_colon: false\n+\n+const LOREM: Lorem = Lorem {\n+    ipsum:dolor,\n+    sit:amet,\n+};"}, {"sha": "34fb792dcb550e90fb1aba8af9b715c617a76fd0", "filename": "tests/target/configs-space_after_struct_lit_field_colon-true.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Ftarget%2Fconfigs-space_after_struct_lit_field_colon-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Ftarget%2Fconfigs-space_after_struct_lit_field_colon-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-space_after_struct_lit_field_colon-true.rs?ref=aa4cd311bb07ea25d89096e8fdd5d64b73666c28", "patch": "@@ -0,0 +1,6 @@\n+// rustfmt-space_after_struct_lit_field_colon: true\n+\n+const LOREM: Lorem = Lorem {\n+    ipsum: dolor,\n+    sit: amet,\n+};"}, {"sha": "48336954786b25e439ceae53442ae7167e4e0e7a", "filename": "tests/target/configs-space_before_struct_lit_field_colon-false.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Ftarget%2Fconfigs-space_before_struct_lit_field_colon-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Ftarget%2Fconfigs-space_before_struct_lit_field_colon-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-space_before_struct_lit_field_colon-false.rs?ref=aa4cd311bb07ea25d89096e8fdd5d64b73666c28", "patch": "@@ -0,0 +1,6 @@\n+// rustfmt-space_before_struct_lit_field_colon: false\n+\n+const LOREM: Lorem = Lorem {\n+    ipsum: dolor,\n+    sit: amet,\n+};"}, {"sha": "e4f1cdb4575f84846615ed4b88c941fab293f2b7", "filename": "tests/target/configs-space_before_struct_lit_field_colon-true.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Ftarget%2Fconfigs-space_before_struct_lit_field_colon-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Ftarget%2Fconfigs-space_before_struct_lit_field_colon-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-space_before_struct_lit_field_colon-true.rs?ref=aa4cd311bb07ea25d89096e8fdd5d64b73666c28", "patch": "@@ -0,0 +1,6 @@\n+// rustfmt-space_before_struct_lit_field_colon: true\n+\n+const LOREM: Lorem = Lorem {\n+    ipsum : dolor,\n+    sit : amet,\n+};"}, {"sha": "0ad06dbb70c37efa46648b25e66014510045d59a", "filename": "tests/target/space-before-type-annotation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Ftarget%2Fspace-before-type-annotation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Ftarget%2Fspace-before-type-annotation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fspace-before-type-annotation.rs?ref=aa4cd311bb07ea25d89096e8fdd5d64b73666c28", "patch": "@@ -9,5 +9,5 @@ struct S {\n     fieldVar : i32,\n }\n fn f() {\n-    S { fieldVar : 42 }\n+    S { fieldVar: 42 }\n }"}, {"sha": "b07620fb4c17e67ba726f8982bce87ef305bdf25", "filename": "tests/target/space-not-after-type-annotation-colon.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Ftarget%2Fspace-not-after-type-annotation-colon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa4cd311bb07ea25d89096e8fdd5d64b73666c28/tests%2Ftarget%2Fspace-not-after-type-annotation-colon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fspace-not-after-type-annotation-colon.rs?ref=aa4cd311bb07ea25d89096e8fdd5d64b73666c28", "patch": "@@ -10,5 +10,5 @@ struct S {\n     fieldVar :i32,\n }\n fn f() {\n-    S { fieldVar :42 }\n+    S { fieldVar: 42 }\n }"}]}