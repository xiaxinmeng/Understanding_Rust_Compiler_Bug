{"sha": "cb5520bc4865473971281ddb3e33a29a256109c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiNTUyMGJjNDg2NTQ3Mzk3MTI4MWRkYjNlMzNhMjlhMjU2MTA5Yzg=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-11-03T20:08:30Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-11-19T17:41:10Z"}, "message": "Recognise #[must_use] on traits, affecting impl Trait", "tree": {"sha": "b09c2eaca5ac8274b4a5cefa474d299229530452", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b09c2eaca5ac8274b4a5cefa474d299229530452"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb5520bc4865473971281ddb3e33a29a256109c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb5520bc4865473971281ddb3e33a29a256109c8", "html_url": "https://github.com/rust-lang/rust/commit/cb5520bc4865473971281ddb3e33a29a256109c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb5520bc4865473971281ddb3e33a29a256109c8/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b55717f9b0023f58b7ca2fab77a0b33206076ac4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b55717f9b0023f58b7ca2fab77a0b33206076ac4", "html_url": "https://github.com/rust-lang/rust/commit/b55717f9b0023f58b7ca2fab77a0b33206076ac4"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "f8030fa6ec7a8bcba1019304445bddd79777e1ef", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cb5520bc4865473971281ddb3e33a29a256109c8/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb5520bc4865473971281ddb3e33a29a256109c8/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=cb5520bc4865473971281ddb3e33a29a256109c8", "patch": "@@ -66,9 +66,22 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedResults {\n         } else {\n             match t.sty {\n                 ty::Adt(def, _) => check_must_use(cx, def.did, s.span, \"\"),\n+                ty::Opaque(def, _) => {\n+                    let mut must_use = false;\n+                    for (predicate, _) in cx.tcx.predicates_of(def).predicates {\n+                        if let ty::Predicate::Trait(ref poly_trait_predicate) = predicate {\n+                            let trait_ref = poly_trait_predicate.skip_binder().trait_ref;\n+                            if check_must_use(cx, trait_ref.def_id, s.span, \"implementer of \") {\n+                                must_use = true;\n+                                break;\n+                            }\n+                        }\n+                    }\n+                    must_use\n+                }\n                 _ => false,\n             }\n-        }\n+        };\n \n         let mut fn_warned = false;\n         let mut op_warned = false;"}]}