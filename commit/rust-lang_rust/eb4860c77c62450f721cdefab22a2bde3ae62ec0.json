{"sha": "eb4860c77c62450f721cdefab22a2bde3ae62ec0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNDg2MGM3N2M2MjQ1MGY3MjFjZGVmYWIyMmEyYmRlM2FlNjJlYzA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-24T03:16:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-24T03:16:22Z"}, "message": "Rollup merge of #60186 - estebank:accept-suffix, r=nikomatsakis\n\nTemporarily accept [i|u][32|size] suffixes on a tuple index and warn\n\nFix #60138.\n\n#59553 will need to be kept open to track the change back to rejecting this code a few versions down thee line.", "tree": {"sha": "85656a3ed4c614715eda45e1e98146a7c9d42bea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85656a3ed4c614715eda45e1e98146a7c9d42bea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb4860c77c62450f721cdefab22a2bde3ae62ec0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcv9UGCRBK7hj4Ov3rIwAAdHIIAGfu4J9k2ezydm9CnnZvo5gw\ns8D5Z9KdVqm17KMOJA1XvCh9mEYEpifYUFI1n5zLzw98ZwHfWavR/mWhNp6iVmIM\nhB8/ilgfRFn5INVj2Q+C6TQQQida8/Xsb8mZMYhYLYiCAETwvoidhNOfrxEJoSbO\n7Txl16nr2Hb2BwuBP/QbwDkGXaq6c23oEeWGwNN0Ji7F+6WztNaR9x86W7YaK/rT\nFWg7fwkD4Kj73NFJ0Rj3V13gXurKAzTmS5blL6PoGfZpB0wnwMCtCqkFqYLbnK3M\nUbE68DJNmbmlnakX32/F18feHcIfpZL95t8fexa2v4YJzr0Yk2bg8ODzYOWXxCE=\n=qz0v\n-----END PGP SIGNATURE-----\n", "payload": "tree 85656a3ed4c614715eda45e1e98146a7c9d42bea\nparent 31a537184c86ee2e9231a9b82423243c1e440e89\nparent 4c015739eadc1419b92a6a399ad145960d08f281\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1556075782 +0200\ncommitter GitHub <noreply@github.com> 1556075782 +0200\n\nRollup merge of #60186 - estebank:accept-suffix, r=nikomatsakis\n\nTemporarily accept [i|u][32|size] suffixes on a tuple index and warn\n\nFix #60138.\n\n#59553 will need to be kept open to track the change back to rejecting this code a few versions down thee line.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb4860c77c62450f721cdefab22a2bde3ae62ec0", "html_url": "https://github.com/rust-lang/rust/commit/eb4860c77c62450f721cdefab22a2bde3ae62ec0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb4860c77c62450f721cdefab22a2bde3ae62ec0/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31a537184c86ee2e9231a9b82423243c1e440e89", "url": "https://api.github.com/repos/rust-lang/rust/commits/31a537184c86ee2e9231a9b82423243c1e440e89", "html_url": "https://github.com/rust-lang/rust/commit/31a537184c86ee2e9231a9b82423243c1e440e89"}, {"sha": "4c015739eadc1419b92a6a399ad145960d08f281", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c015739eadc1419b92a6a399ad145960d08f281", "html_url": "https://github.com/rust-lang/rust/commit/4c015739eadc1419b92a6a399ad145960d08f281"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "75d687be28003764677bdffbee2e2526b7fb9ee0", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 31, "deletions": 3, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/eb4860c77c62450f721cdefab22a2bde3ae62ec0/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4860c77c62450f721cdefab22a2bde3ae62ec0/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=eb4860c77c62450f721cdefab22a2bde3ae62ec0", "patch": "@@ -1145,9 +1145,34 @@ impl<'a> Parser<'a> {\n                 if text.is_empty() {\n                     self.span_bug(sp, \"found empty literal suffix in Some\")\n                 }\n-                self.struct_span_err(sp, &format!(\"suffixes on {} are invalid\", kind))\n-                    .span_label(sp, format!(\"invalid suffix `{}`\", text))\n-                    .emit();\n+                let mut err = if kind == \"a tuple index\" &&\n+                    [\"i32\", \"u32\", \"isize\", \"usize\"].contains(&text.to_string().as_str())\n+                {\n+                    // #59553: warn instead of reject out of hand to allow the fix to percolate\n+                    // through the ecosystem when people fix their macros\n+                    let mut err = self.struct_span_warn(\n+                        sp,\n+                        &format!(\"suffixes on {} are invalid\", kind),\n+                    );\n+                    err.note(&format!(\n+                        \"`{}` is *temporarily* accepted on tuple index fields as it was \\\n+                         incorrectly accepted on stable for a few releases\",\n+                        text,\n+                    ));\n+                    err.help(\n+                        \"on proc macros, you'll want to use `syn::Index::from` or \\\n+                         `proc_macro::Literal::*_unsuffixed` for code that will desugar \\\n+                         to tuple field access\",\n+                    );\n+                    err.note(\n+                        \"for more context, see https://github.com/rust-lang/rust/issues/60210\",\n+                    );\n+                    err\n+                } else {\n+                    self.struct_span_err(sp, &format!(\"suffixes on {} are invalid\", kind))\n+                };\n+                err.span_label(sp, format!(\"invalid suffix `{}`\", text));\n+                err.emit();\n             }\n         }\n     }\n@@ -1455,6 +1480,9 @@ impl<'a> Parser<'a> {\n     fn struct_span_err<S: Into<MultiSpan>>(&self, sp: S, m: &str) -> DiagnosticBuilder<'a> {\n         self.sess.span_diagnostic.struct_span_err(sp, m)\n     }\n+    fn struct_span_warn<S: Into<MultiSpan>>(&self, sp: S, m: &str) -> DiagnosticBuilder<'a> {\n+        self.sess.span_diagnostic.struct_span_warn(sp, m)\n+    }\n     crate fn span_bug<S: Into<MultiSpan>>(&self, sp: S, m: &str) -> ! {\n         self.sess.span_diagnostic.span_bug(sp, m)\n     }"}]}