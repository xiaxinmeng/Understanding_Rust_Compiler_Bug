{"sha": "61d419314f3ea5c8e7d3380afc019db1070c4744", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxZDQxOTMxNGYzZWE1YzhlN2QzMzgwYWZjMDE5ZGIxMDcwYzQ3NDQ=", "commit": {"author": {"name": "Dodo", "email": "kasper199914@gmail.com", "date": "2020-03-29T16:27:54Z"}, "committer": {"name": "Dodo", "email": "kasper199914@gmail.com", "date": "2020-03-29T16:27:54Z"}, "message": "add a build-pass test for issue 62220", "tree": {"sha": "7ab73a269362d42d934adc153c5abca017bce6b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ab73a269362d42d934adc153c5abca017bce6b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61d419314f3ea5c8e7d3380afc019db1070c4744", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61d419314f3ea5c8e7d3380afc019db1070c4744", "html_url": "https://github.com/rust-lang/rust/commit/61d419314f3ea5c8e7d3380afc019db1070c4744", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61d419314f3ea5c8e7d3380afc019db1070c4744/comments", "author": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ab82b87af4f20b6c0a481e050517103d50263e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ab82b87af4f20b6c0a481e050517103d50263e9", "html_url": "https://github.com/rust-lang/rust/commit/8ab82b87af4f20b6c0a481e050517103d50263e9"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "c95b30632017531dd5d2ab0810c90bafc0014d9f", "filename": "src/test/ui/const-generics/issues/issue-62220.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/61d419314f3ea5c8e7d3380afc019db1070c4744/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62220.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61d419314f3ea5c8e7d3380afc019db1070c4744/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62220.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62220.rs?ref=61d419314f3ea5c8e7d3380afc019db1070c4744", "patch": "@@ -0,0 +1,22 @@\n+// build-pass\n+#![allow(incomplete_features)]\n+\n+#![feature(const_generics)]\n+pub struct Vector<T, const N: usize>([T; N]);\n+\n+pub type TruncatedVector<T, const N: usize> = Vector<T, { N - 1 }>;\n+\n+impl<T, const N: usize> Vector<T, { N }> {\n+    /// Drop the last component and return the vector with one fewer dimension.\n+    pub fn trunc(self) -> (TruncatedVector<T, { N }>, T) {\n+        unimplemented!()\n+    }\n+}\n+\n+fn vec4<T>(a: T, b: T, c: T, d: T) -> Vector<T, 4> {\n+    Vector([a, b, c, d])\n+}\n+\n+fn main() {\n+    let (_xyz, _w): (TruncatedVector<u32, 4>, u32) = vec4(0u32, 1, 2, 3).trunc();\n+}"}]}