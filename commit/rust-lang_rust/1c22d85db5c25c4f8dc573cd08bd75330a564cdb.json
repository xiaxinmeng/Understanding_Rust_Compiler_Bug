{"sha": "1c22d85db5c25c4f8dc573cd08bd75330a564cdb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjMjJkODVkYjVjMjVjNGY4ZGM1NzNjZDA4YmQ3NTMzMGE1NjRjZGI=", "commit": {"author": {"name": "Stepan Koltsov", "email": "stepan.koltsov@gmail.com", "date": "2017-01-09T02:57:11Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-01-09T02:57:11Z"}, "message": "Better message for LineOverflow error (#1268)\n\n(with current length and configured limit)", "tree": {"sha": "4d50da5654309590ab04e2ca4c4b01661ec05b0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d50da5654309590ab04e2ca4c4b01661ec05b0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c22d85db5c25c4f8dc573cd08bd75330a564cdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c22d85db5c25c4f8dc573cd08bd75330a564cdb", "html_url": "https://github.com/rust-lang/rust/commit/1c22d85db5c25c4f8dc573cd08bd75330a564cdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c22d85db5c25c4f8dc573cd08bd75330a564cdb/comments", "author": {"login": "stepancheg", "id": 28969, "node_id": "MDQ6VXNlcjI4OTY5", "avatar_url": "https://avatars.githubusercontent.com/u/28969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stepancheg", "html_url": "https://github.com/stepancheg", "followers_url": "https://api.github.com/users/stepancheg/followers", "following_url": "https://api.github.com/users/stepancheg/following{/other_user}", "gists_url": "https://api.github.com/users/stepancheg/gists{/gist_id}", "starred_url": "https://api.github.com/users/stepancheg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stepancheg/subscriptions", "organizations_url": "https://api.github.com/users/stepancheg/orgs", "repos_url": "https://api.github.com/users/stepancheg/repos", "events_url": "https://api.github.com/users/stepancheg/events{/privacy}", "received_events_url": "https://api.github.com/users/stepancheg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21c085261b3fac745768b03b10f5acb6e25e2972", "url": "https://api.github.com/repos/rust-lang/rust/commits/21c085261b3fac745768b03b10f5acb6e25e2972", "html_url": "https://github.com/rust-lang/rust/commit/21c085261b3fac745768b03b10f5acb6e25e2972"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "fc016d8666625eab67e3b94309c787668c66b3ac", "filename": "src/lib.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1c22d85db5c25c4f8dc573cd08bd75330a564cdb/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c22d85db5c25c4f8dc573cd08bd75330a564cdb/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=1c22d85db5c25c4f8dc573cd08bd75330a564cdb", "patch": "@@ -202,8 +202,8 @@ impl Sub<usize> for Indent {\n }\n \n pub enum ErrorKind {\n-    // Line has exceeded character limit\n-    LineOverflow,\n+    // Line has exceeded character limit (found, maximum)\n+    LineOverflow(usize, usize),\n     // Line ends in whitespace\n     TrailingWhitespace,\n     // TO-DO or FIX-ME item without an issue number\n@@ -213,7 +213,12 @@ pub enum ErrorKind {\n impl fmt::Display for ErrorKind {\n     fn fmt(&self, fmt: &mut fmt::Formatter) -> Result<(), fmt::Error> {\n         match *self {\n-            ErrorKind::LineOverflow => write!(fmt, \"line exceeded maximum length\"),\n+            ErrorKind::LineOverflow(found, maximum) => {\n+                write!(fmt,\n+                       \"line exceeded maximum length (maximum: {}, found: {})\",\n+                       maximum,\n+                       found)\n+            }\n             ErrorKind::TrailingWhitespace => write!(fmt, \"left behind trailing whitespace\"),\n             ErrorKind::BadIssue(issue) => write!(fmt, \"found {}\", issue),\n         }\n@@ -229,15 +234,15 @@ pub struct FormattingError {\n impl FormattingError {\n     fn msg_prefix(&self) -> &str {\n         match self.kind {\n-            ErrorKind::LineOverflow |\n+            ErrorKind::LineOverflow(..) |\n             ErrorKind::TrailingWhitespace => \"Rustfmt failed at\",\n             ErrorKind::BadIssue(_) => \"WARNING:\",\n         }\n     }\n \n     fn msg_suffix(&self) -> &str {\n         match self.kind {\n-            ErrorKind::LineOverflow |\n+            ErrorKind::LineOverflow(..) |\n             ErrorKind::TrailingWhitespace => \"(sorry)\",\n             ErrorKind::BadIssue(_) => \"\",\n         }\n@@ -353,7 +358,7 @@ fn format_lines(text: &mut StringBuffer, name: &str, config: &Config, report: &m\n             if line_len > config.max_width {\n                 errors.push(FormattingError {\n                     line: cur_line,\n-                    kind: ErrorKind::LineOverflow,\n+                    kind: ErrorKind::LineOverflow(line_len, config.max_width),\n                 });\n             }\n             line_len = 0;"}]}