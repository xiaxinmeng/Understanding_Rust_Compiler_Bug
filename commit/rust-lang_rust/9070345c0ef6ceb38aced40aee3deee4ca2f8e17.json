{"sha": "9070345c0ef6ceb38aced40aee3deee4ca2f8e17", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwNzAzNDVjMGVmNmNlYjM4YWNlZDQwYWVlM2RlZWU0Y2EyZjhlMTc=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-23T02:50:11Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-30T15:37:44Z"}, "message": "add tests", "tree": {"sha": "ab168bb9a867b0b2ca0112687ccf34f36a3f6e91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab168bb9a867b0b2ca0112687ccf34f36a3f6e91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9070345c0ef6ceb38aced40aee3deee4ca2f8e17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9070345c0ef6ceb38aced40aee3deee4ca2f8e17", "html_url": "https://github.com/rust-lang/rust/commit/9070345c0ef6ceb38aced40aee3deee4ca2f8e17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9070345c0ef6ceb38aced40aee3deee4ca2f8e17/comments", "author": null, "committer": null, "parents": [{"sha": "a8733162772feec5f498427ea10d869272d164ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8733162772feec5f498427ea10d869272d164ab", "html_url": "https://github.com/rust-lang/rust/commit/a8733162772feec5f498427ea10d869272d164ab"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "ff6f848ab598d7313ca216841d7d9a24c73e2c8e", "filename": "src/test/compile-fail/for-loop-hygiene.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9070345c0ef6ceb38aced40aee3deee4ca2f8e17/src%2Ftest%2Fcompile-fail%2Ffor-loop-hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9070345c0ef6ceb38aced40aee3deee4ca2f8e17/src%2Ftest%2Fcompile-fail%2Ffor-loop-hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffor-loop-hygiene.rs?ref=9070345c0ef6ceb38aced40aee3deee4ca2f8e17", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// for-loops are expanded in the front end, and use an `iter` ident in their expansion. Check that\n+// `iter` is not accessible inside the for loop.\n+\n+#![allow(unstable)]\n+\n+fn main() {\n+    for _ in 0..10 {\n+        iter.next();  //~ error: unresolved name `iter`\n+    }\n+}"}, {"sha": "7564efbd9e56ba483ebe65f102df68dbf1f06814", "filename": "src/test/run-pass/for-loop-into-iterator.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/9070345c0ef6ceb38aced40aee3deee4ca2f8e17/src%2Ftest%2Frun-pass%2Ffor-loop-into-iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9070345c0ef6ceb38aced40aee3deee4ca2f8e17/src%2Ftest%2Frun-pass%2Ffor-loop-into-iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffor-loop-into-iterator.rs?ref=9070345c0ef6ceb38aced40aee3deee4ca2f8e17", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that for loops can do what RFC #235 claims\n+\n+fn main() {\n+    let mut v = vec![1];\n+\n+    for x in &v {\n+        assert_eq!(x, &1);\n+    }\n+\n+    for x in &mut v {\n+        assert_eq!(x, &mut 1);\n+    }\n+\n+    for x in v {\n+        assert_eq!(x, 1);\n+    }\n+}"}]}