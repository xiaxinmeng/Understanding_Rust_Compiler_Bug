{"sha": "86feac18e8f96a99830defd707eb221f12d02924", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2ZmVhYzE4ZThmOTZhOTk4MzBkZWZkNzA3ZWIyMjFmMTJkMDI5MjQ=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-07T18:26:27Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-07T18:34:58Z"}, "message": "Change TraitRef::hir_fmt_ext to free-standing function", "tree": {"sha": "632c95c0e5d7cd997755f838d9581d8596f0a9e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/632c95c0e5d7cd997755f838d9581d8596f0a9e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86feac18e8f96a99830defd707eb221f12d02924", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86feac18e8f96a99830defd707eb221f12d02924", "html_url": "https://github.com/rust-lang/rust/commit/86feac18e8f96a99830defd707eb221f12d02924", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86feac18e8f96a99830defd707eb221f12d02924/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb248d85a0eb91bae7bafcd69ffe4dfed3e32fce", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb248d85a0eb91bae7bafcd69ffe4dfed3e32fce", "html_url": "https://github.com/rust-lang/rust/commit/eb248d85a0eb91bae7bafcd69ffe4dfed3e32fce"}], "stats": {"total": 38, "additions": 18, "deletions": 20}, "files": [{"sha": "26601678693e67ea973c29c7dd217008c07f842c", "filename": "crates/hir_ty/src/display.rs", "status": "modified", "additions": 18, "deletions": 20, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/86feac18e8f96a99830defd707eb221f12d02924/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86feac18e8f96a99830defd707eb221f12d02924/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs?ref=86feac18e8f96a99830defd707eb221f12d02924", "patch": "@@ -792,31 +792,29 @@ fn write_bounds_like_dyn_trait(\n     Ok(())\n }\n \n-impl TraitRef {\n-    fn hir_fmt_ext(&self, f: &mut HirFormatter, use_as: bool) -> Result<(), HirDisplayError> {\n-        if f.should_truncate() {\n-            return write!(f, \"{}\", TYPE_HINT_TRUNCATION);\n-        }\n+fn fmt_trait_ref(tr: &TraitRef, f: &mut HirFormatter, use_as: bool) -> Result<(), HirDisplayError> {\n+    if f.should_truncate() {\n+        return write!(f, \"{}\", TYPE_HINT_TRUNCATION);\n+    }\n \n-        self.self_type_parameter(&Interner).hir_fmt(f)?;\n-        if use_as {\n-            write!(f, \" as \")?;\n-        } else {\n-            write!(f, \": \")?;\n-        }\n-        write!(f, \"{}\", f.db.trait_data(self.hir_trait_id()).name)?;\n-        if self.substitution.len(&Interner) > 1 {\n-            write!(f, \"<\")?;\n-            f.write_joined(&self.substitution.interned()[1..], \", \")?;\n-            write!(f, \">\")?;\n-        }\n-        Ok(())\n+    tr.self_type_parameter(&Interner).hir_fmt(f)?;\n+    if use_as {\n+        write!(f, \" as \")?;\n+    } else {\n+        write!(f, \": \")?;\n     }\n+    write!(f, \"{}\", f.db.trait_data(tr.hir_trait_id()).name)?;\n+    if tr.substitution.len(&Interner) > 1 {\n+        write!(f, \"<\")?;\n+        f.write_joined(&tr.substitution.interned()[1..], \", \")?;\n+        write!(f, \">\")?;\n+    }\n+    Ok(())\n }\n \n impl HirDisplay for TraitRef {\n     fn hir_fmt(&self, f: &mut HirFormatter) -> Result<(), HirDisplayError> {\n-        self.hir_fmt_ext(f, false)\n+        fmt_trait_ref(self, f, false)\n     }\n }\n \n@@ -830,7 +828,7 @@ impl HirDisplay for WhereClause {\n             WhereClause::Implemented(trait_ref) => trait_ref.hir_fmt(f)?,\n             WhereClause::AliasEq(AliasEq { alias: AliasTy::Projection(projection_ty), ty }) => {\n                 write!(f, \"<\")?;\n-                projection_ty.trait_ref(f.db).hir_fmt_ext(f, true)?;\n+                fmt_trait_ref(&projection_ty.trait_ref(f.db), f, true)?;\n                 write!(\n                     f,\n                     \">::{} = \","}]}