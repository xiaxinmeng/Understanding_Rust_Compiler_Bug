{"sha": "e1b6bb214fbc9d2a9af5c029679822e90dfd9660", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxYjZiYjIxNGZiYzlkMmE5YWY1YzAyOTY3OTgyMmU5MGRmZDk2NjA=", "commit": {"author": {"name": "Fran\u00e7ois Mockers", "email": "mockersf@gmail.com", "date": "2021-03-11T02:31:54Z"}, "committer": {"name": "Fran\u00e7ois Mockers", "email": "mockersf@gmail.com", "date": "2021-04-13T20:09:08Z"}, "message": "fix links from trait impl methods to trait declaration", "tree": {"sha": "df88ef67b7a9e27584c038553b37a2edb036da5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df88ef67b7a9e27584c038553b37a2edb036da5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1b6bb214fbc9d2a9af5c029679822e90dfd9660", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1b6bb214fbc9d2a9af5c029679822e90dfd9660", "html_url": "https://github.com/rust-lang/rust/commit/e1b6bb214fbc9d2a9af5c029679822e90dfd9660", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1b6bb214fbc9d2a9af5c029679822e90dfd9660/comments", "author": {"login": "mockersf", "id": 8672791, "node_id": "MDQ6VXNlcjg2NzI3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/8672791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mockersf", "html_url": "https://github.com/mockersf", "followers_url": "https://api.github.com/users/mockersf/followers", "following_url": "https://api.github.com/users/mockersf/following{/other_user}", "gists_url": "https://api.github.com/users/mockersf/gists{/gist_id}", "starred_url": "https://api.github.com/users/mockersf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mockersf/subscriptions", "organizations_url": "https://api.github.com/users/mockersf/orgs", "repos_url": "https://api.github.com/users/mockersf/repos", "events_url": "https://api.github.com/users/mockersf/events{/privacy}", "received_events_url": "https://api.github.com/users/mockersf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mockersf", "id": 8672791, "node_id": "MDQ6VXNlcjg2NzI3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/8672791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mockersf", "html_url": "https://github.com/mockersf", "followers_url": "https://api.github.com/users/mockersf/followers", "following_url": "https://api.github.com/users/mockersf/following{/other_user}", "gists_url": "https://api.github.com/users/mockersf/gists{/gist_id}", "starred_url": "https://api.github.com/users/mockersf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mockersf/subscriptions", "organizations_url": "https://api.github.com/users/mockersf/orgs", "repos_url": "https://api.github.com/users/mockersf/repos", "events_url": "https://api.github.com/users/mockersf/events{/privacy}", "received_events_url": "https://api.github.com/users/mockersf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c1304205b7bc53a1e9f48cf286a60438351c1ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c1304205b7bc53a1e9f48cf286a60438351c1ab", "html_url": "https://github.com/rust-lang/rust/commit/5c1304205b7bc53a1e9f48cf286a60438351c1ab"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "a95cfc11367253bbf6333535d444e2231976a122", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e1b6bb214fbc9d2a9af5c029679822e90dfd9660/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b6bb214fbc9d2a9af5c029679822e90dfd9660/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=e1b6bb214fbc9d2a9af5c029679822e90dfd9660", "patch": "@@ -912,10 +912,9 @@ fn render_assoc_item(\n         let cache = cx.cache();\n         let tcx = cx.tcx();\n         let name = meth.name.as_ref().unwrap();\n-        let anchor = format!(\"#{}.{}\", meth.type_(), name);\n         let href = match link {\n             AssocItemLink::Anchor(Some(ref id)) => format!(\"#{}\", id),\n-            AssocItemLink::Anchor(None) => anchor,\n+            AssocItemLink::Anchor(None) => format!(\"#{}.{}\", meth.type_(), name),\n             AssocItemLink::GotoSource(did, provided_methods) => {\n                 // We're creating a link from an impl-item to the corresponding\n                 // trait-item and need to map the anchored type accordingly.\n@@ -925,7 +924,9 @@ fn render_assoc_item(\n                     ItemType::TyMethod\n                 };\n \n-                href(did, cache).map(|p| format!(\"{}#{}.{}\", p.0, ty, name)).unwrap_or(anchor)\n+                href(did, cache)\n+                    .map(|p| format!(\"{}#{}.{}\", p.0, ty, name))\n+                    .unwrap_or_else(|| format!(\"#{}.{}\", ty, name))\n             }\n         };\n         let vis = meth.visibility.print_with_space(tcx, meth.def_id, cache).to_string();"}]}