{"sha": "b7db5bfc50095c259d2f128ddb96f7faf8654e3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3ZGI1YmZjNTAwOTVjMjU5ZDJmMTI4ZGRiOTZmN2ZhZjg2NTRlM2M=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-13T10:09:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-13T10:09:00Z"}, "message": "Auto merge of #6442 - matthiaskrgr:clone-double-ref-ty, r=llogiq\n\nclone_double_ref: print reference type in lint message\n\nchangelog: clone_double_ref: print the type of the reference in lint message", "tree": {"sha": "3dc7b4a9713e09056361adb699dd7018d0a8389b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3dc7b4a9713e09056361adb699dd7018d0a8389b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7db5bfc50095c259d2f128ddb96f7faf8654e3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7db5bfc50095c259d2f128ddb96f7faf8654e3c", "html_url": "https://github.com/rust-lang/rust/commit/b7db5bfc50095c259d2f128ddb96f7faf8654e3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7db5bfc50095c259d2f128ddb96f7faf8654e3c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89c282fb633bd7e0d8af6c07ee7ad837bb196cb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/89c282fb633bd7e0d8af6c07ee7ad837bb196cb7", "html_url": "https://github.com/rust-lang/rust/commit/89c282fb633bd7e0d8af6c07ee7ad837bb196cb7"}, {"sha": "0b145d688b293a92cd855000f249d83acae53f9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b145d688b293a92cd855000f249d83acae53f9d", "html_url": "https://github.com/rust-lang/rust/commit/0b145d688b293a92cd855000f249d83acae53f9d"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "ce234e01a1bb453c66de3f922d6fe8353ee0c10f", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b7db5bfc50095c259d2f128ddb96f7faf8654e3c/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7db5bfc50095c259d2f128ddb96f7faf8654e3c/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=b7db5bfc50095c259d2f128ddb96f7faf8654e3c", "patch": "@@ -2100,8 +2100,11 @@ fn lint_clone_on_copy(cx: &LateContext<'_>, expr: &hir::Expr<'_>, arg: &hir::Exp\n                 cx,\n                 CLONE_DOUBLE_REF,\n                 expr.span,\n-                \"using `clone` on a double-reference; \\\n-                this will copy the reference instead of cloning the inner type\",\n+                &format!(\n+                    \"using `clone` on a double-reference; \\\n+                    this will copy the reference of type `{}` instead of cloning the inner type\",\n+                    ty\n+                ),\n                 |diag| {\n                     if let Some(snip) = sugg::Sugg::hir_opt(cx, arg) {\n                         let mut ty = innermost;"}, {"sha": "b908d0ce9c1601c8683eff2744a8ac8a624c0578", "filename": "tests/ui/unnecessary_clone.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b7db5bfc50095c259d2f128ddb96f7faf8654e3c/tests%2Fui%2Funnecessary_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7db5bfc50095c259d2f128ddb96f7faf8654e3c/tests%2Fui%2Funnecessary_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_clone.stderr?ref=b7db5bfc50095c259d2f128ddb96f7faf8654e3c", "patch": "@@ -44,7 +44,7 @@ error: using `clone` on a `Copy` type\n LL |     Some(t).clone();\n    |     ^^^^^^^^^^^^^^^ help: try removing the `clone` call: `Some(t)`\n \n-error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type\n+error: using `clone` on a double-reference; this will copy the reference of type `&std::vec::Vec<i32>` instead of cloning the inner type\n   --> $DIR/unnecessary_clone.rs:48:22\n    |\n LL |     let z: &Vec<_> = y.clone();\n@@ -66,7 +66,7 @@ error: using `clone` on a `Copy` type\n LL |         let _: E = a.clone();\n    |                    ^^^^^^^^^ help: try dereferencing it: `*****a`\n \n-error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type\n+error: using `clone` on a double-reference; this will copy the reference of type `&[u8]` instead of cloning the inner type\n   --> $DIR/unnecessary_clone.rs:89:22\n    |\n LL |         let _ = &mut encoded.clone();\n@@ -81,7 +81,7 @@ help: or try being explicit if you are sure, that you want to clone a reference\n LL |         let _ = &mut <&[u8]>::clone(encoded);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type\n+error: using `clone` on a double-reference; this will copy the reference of type `&[u8]` instead of cloning the inner type\n   --> $DIR/unnecessary_clone.rs:90:18\n    |\n LL |         let _ = &encoded.clone();"}]}