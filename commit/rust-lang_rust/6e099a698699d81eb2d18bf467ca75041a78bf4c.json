{"sha": "6e099a698699d81eb2d18bf467ca75041a78bf4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlMDk5YTY5ODY5OWQ4MWViMmQxOGJmNDY3Y2E3NTA0MWE3OGJmNGM=", "commit": {"author": {"name": "daniellimws", "email": "weesoong.lim@gmail.com", "date": "2018-11-16T16:21:23Z"}, "committer": {"name": "daniellimws", "email": "weesoong.lim@gmail.com", "date": "2018-11-16T16:21:23Z"}, "message": "Add double quotes to resolve error", "tree": {"sha": "d9ea1de0cc54bfbf51625f503fb39086398005ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9ea1de0cc54bfbf51625f503fb39086398005ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e099a698699d81eb2d18bf467ca75041a78bf4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e099a698699d81eb2d18bf467ca75041a78bf4c", "html_url": "https://github.com/rust-lang/rust/commit/6e099a698699d81eb2d18bf467ca75041a78bf4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e099a698699d81eb2d18bf467ca75041a78bf4c/comments", "author": {"login": "daniellimws", "id": 8130120, "node_id": "MDQ6VXNlcjgxMzAxMjA=", "avatar_url": "https://avatars.githubusercontent.com/u/8130120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daniellimws", "html_url": "https://github.com/daniellimws", "followers_url": "https://api.github.com/users/daniellimws/followers", "following_url": "https://api.github.com/users/daniellimws/following{/other_user}", "gists_url": "https://api.github.com/users/daniellimws/gists{/gist_id}", "starred_url": "https://api.github.com/users/daniellimws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daniellimws/subscriptions", "organizations_url": "https://api.github.com/users/daniellimws/orgs", "repos_url": "https://api.github.com/users/daniellimws/repos", "events_url": "https://api.github.com/users/daniellimws/events{/privacy}", "received_events_url": "https://api.github.com/users/daniellimws/received_events", "type": "User", "site_admin": false}, "committer": {"login": "daniellimws", "id": 8130120, "node_id": "MDQ6VXNlcjgxMzAxMjA=", "avatar_url": "https://avatars.githubusercontent.com/u/8130120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daniellimws", "html_url": "https://github.com/daniellimws", "followers_url": "https://api.github.com/users/daniellimws/followers", "following_url": "https://api.github.com/users/daniellimws/following{/other_user}", "gists_url": "https://api.github.com/users/daniellimws/gists{/gist_id}", "starred_url": "https://api.github.com/users/daniellimws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daniellimws/subscriptions", "organizations_url": "https://api.github.com/users/daniellimws/orgs", "repos_url": "https://api.github.com/users/daniellimws/repos", "events_url": "https://api.github.com/users/daniellimws/events{/privacy}", "received_events_url": "https://api.github.com/users/daniellimws/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15334e03b757c13578d15f49c5950eab21956437", "url": "https://api.github.com/repos/rust-lang/rust/commits/15334e03b757c13578d15f49c5950eab21956437", "html_url": "https://github.com/rust-lang/rust/commit/15334e03b757c13578d15f49c5950eab21956437"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1f1a4f249c727b7141f94e3a32149aa006c46a47", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e099a698699d81eb2d18bf467ca75041a78bf4c/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e099a698699d81eb2d18bf467ca75041a78bf4c/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=6e099a698699d81eb2d18bf467ca75041a78bf4c", "patch": "@@ -481,7 +481,7 @@ impl<'a, T: Copy> From<&'a [T]> for Box<[T]> {\n     /// let slice: &[u8] = &[104, 101, 108, 108, 111];\n     /// let boxed_slice = Box::from(slice);\n     ///\n-    /// println!({:?}, boxed_slice);\n+    /// println!(\"{:?}\", boxed_slice);\n     /// ```\n     fn from(slice: &'a [T]) -> Box<[T]> {\n         let mut boxed = unsafe { RawVec::with_capacity(slice.len()).into_box() };"}]}