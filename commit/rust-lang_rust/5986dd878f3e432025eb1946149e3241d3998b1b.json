{"sha": "5986dd878f3e432025eb1946149e3241d3998b1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5ODZkZDg3OGYzZTQzMjAyNWViMTk0NjE0OWUzMjQxZDM5OThiMWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-02T06:58:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-02T06:58:59Z"}, "message": "Auto merge of #79883 - frewsxcv:frewsxcv-san, r=shepmaster\n\nEnable ASan, TSan, UBSan for aarch64-apple-darwin.\n\nI confirmed ASan, TSan, UBSan all work for me locally with `clang` on my new Macbook Air.\n\n~This requires https://github.com/rust-lang/llvm-project/pull/86~", "tree": {"sha": "e84ddc3be9342785d1c97c4cb90ee3dc6f6ce77a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e84ddc3be9342785d1c97c4cb90ee3dc6f6ce77a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5986dd878f3e432025eb1946149e3241d3998b1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5986dd878f3e432025eb1946149e3241d3998b1b", "html_url": "https://github.com/rust-lang/rust/commit/5986dd878f3e432025eb1946149e3241d3998b1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5986dd878f3e432025eb1946149e3241d3998b1b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6b6d5cf6486926a1c8dffe4ef793e214cb827c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6b6d5cf6486926a1c8dffe4ef793e214cb827c5", "html_url": "https://github.com/rust-lang/rust/commit/f6b6d5cf6486926a1c8dffe4ef793e214cb827c5"}, {"sha": "d482de30ea70d537dced8ec04a3903e3264cf106", "url": "https://api.github.com/repos/rust-lang/rust/commits/d482de30ea70d537dced8ec04a3903e3264cf106", "html_url": "https://github.com/rust-lang/rust/commit/d482de30ea70d537dced8ec04a3903e3264cf106"}], "stats": {"total": 91, "additions": 73, "deletions": 18}, "files": [{"sha": "55fddb38e10beede84041212c9cb13835a0a0029", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5986dd878f3e432025eb1946149e3241d3998b1b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5986dd878f3e432025eb1946149e3241d3998b1b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=5986dd878f3e432025eb1946149e3241d3998b1b", "patch": "@@ -895,7 +895,7 @@ fn link_sanitizer_runtime(sess: &Session, linker: &mut dyn Linker, name: &str) {\n         .unwrap_or_default();\n \n     match sess.opts.target_triple.triple() {\n-        \"x86_64-apple-darwin\" => {\n+        \"aarch64-apple-darwin\" | \"x86_64-apple-darwin\" => {\n             // On Apple platforms, the sanitizer is always built as a dylib, and\n             // LLVM will link to `@rpath/*.dylib`, so we need to specify an\n             // rpath to the library as well (the rpath should be absolute, see"}, {"sha": "509e583eca21dab8dfdb0b4fb56f86d4b24e1edf", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5986dd878f3e432025eb1946149e3241d3998b1b/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5986dd878f3e432025eb1946149e3241d3998b1b/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=5986dd878f3e432025eb1946149e3241d3998b1b", "patch": "@@ -1522,18 +1522,24 @@ fn validate_commandline_args_with_session_available(sess: &Session) {\n     }\n \n     const ASAN_SUPPORTED_TARGETS: &[&str] = &[\n+        \"aarch64-apple-darwin\",\n         \"aarch64-fuchsia\",\n         \"aarch64-unknown-linux-gnu\",\n         \"x86_64-apple-darwin\",\n         \"x86_64-fuchsia\",\n         \"x86_64-unknown-freebsd\",\n         \"x86_64-unknown-linux-gnu\",\n     ];\n-    const LSAN_SUPPORTED_TARGETS: &[&str] =\n-        &[\"aarch64-unknown-linux-gnu\", \"x86_64-apple-darwin\", \"x86_64-unknown-linux-gnu\"];\n+    const LSAN_SUPPORTED_TARGETS: &[&str] = &[\n+        \"aarch64-apple-darwin\",\n+        \"aarch64-unknown-linux-gnu\",\n+        \"x86_64-apple-darwin\",\n+        \"x86_64-unknown-linux-gnu\",\n+    ];\n     const MSAN_SUPPORTED_TARGETS: &[&str] =\n         &[\"aarch64-unknown-linux-gnu\", \"x86_64-unknown-freebsd\", \"x86_64-unknown-linux-gnu\"];\n     const TSAN_SUPPORTED_TARGETS: &[&str] = &[\n+        \"aarch64-apple-darwin\",\n         \"aarch64-unknown-linux-gnu\",\n         \"x86_64-apple-darwin\",\n         \"x86_64-unknown-freebsd\","}, {"sha": "9477a7cb354772d2c395ecfdd62694170e93c555", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 27, "deletions": 9, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/5986dd878f3e432025eb1946149e3241d3998b1b/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5986dd878f3e432025eb1946149e3241d3998b1b/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=5986dd878f3e432025eb1946149e3241d3998b1b", "patch": "@@ -356,15 +356,12 @@ fn copy_sanitizers(\n         let dst = libdir.join(&runtime.name);\n         builder.copy(&runtime.path, &dst);\n \n-        if target == \"x86_64-apple-darwin\" {\n-            // Update the library install name reflect the fact it has been renamed.\n-            let status = Command::new(\"install_name_tool\")\n-                .arg(\"-id\")\n-                .arg(format!(\"@rpath/{}\", runtime.name))\n-                .arg(&dst)\n-                .status()\n-                .expect(\"failed to execute `install_name_tool`\");\n-            assert!(status.success());\n+        if target == \"x86_64-apple-darwin\" || target == \"aarch64-apple-darwin\" {\n+            // Update the library\u2019s install name to reflect that it has has been renamed.\n+            apple_darwin_update_library_name(&dst, &format!(\"@rpath/{}\", &runtime.name));\n+            // Upon renaming the install name, the code signature of the file will invalidate,\n+            // so we will sign it again.\n+            apple_darwin_sign_file(&dst);\n         }\n \n         target_deps.push(dst);\n@@ -373,6 +370,27 @@ fn copy_sanitizers(\n     target_deps\n }\n \n+fn apple_darwin_update_library_name(library_path: &Path, new_name: &str) {\n+    let status = Command::new(\"install_name_tool\")\n+        .arg(\"-id\")\n+        .arg(new_name)\n+        .arg(library_path)\n+        .status()\n+        .expect(\"failed to execute `install_name_tool`\");\n+    assert!(status.success());\n+}\n+\n+fn apple_darwin_sign_file(file_path: &Path) {\n+    let status = Command::new(\"codesign\")\n+        .arg(\"-f\") // Force to rewrite the existing signature\n+        .arg(\"-s\")\n+        .arg(\"-\")\n+        .arg(file_path)\n+        .status()\n+        .expect(\"failed to execute `codesign`\");\n+    assert!(status.success());\n+}\n+\n #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n pub struct StartupObjects {\n     pub compiler: Compiler,"}, {"sha": "6412df3fd904e88a906b90f597104c855ed435c1", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5986dd878f3e432025eb1946149e3241d3998b1b/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5986dd878f3e432025eb1946149e3241d3998b1b/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=5986dd878f3e432025eb1946149e3241d3998b1b", "patch": "@@ -802,6 +802,7 @@ fn supported_sanitizers(\n     };\n \n     match &*target.triple {\n+        \"aarch64-apple-darwin\" => darwin_libs(\"osx\", &[\"asan\", \"lsan\", \"tsan\"]),\n         \"aarch64-fuchsia\" => common_libs(\"fuchsia\", \"aarch64\", &[\"asan\"]),\n         \"aarch64-unknown-linux-gnu\" => {\n             common_libs(\"linux\", \"aarch64\", &[\"asan\", \"lsan\", \"msan\", \"tsan\"])"}, {"sha": "d03d5c7501424f6ada648ecf1c0429a9f524953b", "filename": "src/doc/unstable-book/src/compiler-flags/sanitizer.md", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5986dd878f3e432025eb1946149e3241d3998b1b/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsanitizer.md", "raw_url": "https://github.com/rust-lang/rust/raw/5986dd878f3e432025eb1946149e3241d3998b1b/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsanitizer.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsanitizer.md?ref=5986dd878f3e432025eb1946149e3241d3998b1b", "patch": "@@ -31,7 +31,12 @@ with runtime flag `ASAN_OPTIONS=detect_leaks=1` on macOS.\n \n AddressSanitizer is supported on the following targets:\n \n+* `aarch64-apple-darwin`\n+* `aarch64-fuchsia`\n+* `aarch64-unknown-linux-gnu`\n * `x86_64-apple-darwin`\n+* `x86_64-fuchsia`\n+* `x86_64-unknown-freebsd`\n * `x86_64-unknown-linux-gnu`\n \n AddressSanitizer works with non-instrumented code although it will impede its\n@@ -169,10 +174,26 @@ Shadow byte legend (one shadow byte represents 8 application bytes):\n ==39249==ABORTING\n ```\n \n+# LeakSanitizer\n+\n+LeakSanitizer is run-time memory leak detector.\n+\n+LeakSanitizer is supported on the following targets:\n+\n+* `aarch64-apple-darwin`\n+* `aarch64-unknown-linux-gnu`\n+* `x86_64-apple-darwin`\n+* `x86_64-unknown-linux-gnu`\n+\n # MemorySanitizer\n \n-MemorySanitizer is detector of uninitialized reads. It is only supported on the\n-`x86_64-unknown-linux-gnu` target.\n+MemorySanitizer is detector of uninitialized reads.\n+\n+MemorySanitizer is supported on the following targets:\n+\n+* `aarch64-unknown-linux-gnu`\n+* `x86_64-unknown-freebsd`\n+* `x86_64-unknown-linux-gnu`\n \n MemorySanitizer requires all program code to be instrumented. C/C++ dependencies\n need to be recompiled using Clang with `-fsanitize=memory` option. Failing to\n@@ -219,7 +240,10 @@ $ cargo run -Zbuild-std --target x86_64-unknown-linux-gnu\n ThreadSanitizer is a data race detection tool. It is supported on the following\n targets:\n \n+* `aarch64-apple-darwin`\n+* `aarch64-unknown-linux-gnu`\n * `x86_64-apple-darwin`\n+* `x86_64-unknown-freebsd`\n * `x86_64-unknown-linux-gnu`\n \n To work correctly ThreadSanitizer needs to be \"aware\" of all synchronization"}, {"sha": "fb9d249da03d533c1198f0902767fc73cc93b993", "filename": "src/test/codegen/sanitizer-no-sanitize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5986dd878f3e432025eb1946149e3241d3998b1b/src%2Ftest%2Fcodegen%2Fsanitizer-no-sanitize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5986dd878f3e432025eb1946149e3241d3998b1b/src%2Ftest%2Fcodegen%2Fsanitizer-no-sanitize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fsanitizer-no-sanitize.rs?ref=5986dd878f3e432025eb1946149e3241d3998b1b", "patch": "@@ -1,4 +1,4 @@\n-// Verifies that no_sanitze attribute can be used to\n+// Verifies that no_sanitize attribute can be used to\n // selectively disable sanitizer instrumentation.\n //\n // needs-sanitizer-address"}, {"sha": "093678707fb99a8d243960062dc5a811b0db3390", "filename": "src/test/ui/sanitize/unsupported-target.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5986dd878f3e432025eb1946149e3241d3998b1b/src%2Ftest%2Fui%2Fsanitize%2Funsupported-target.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5986dd878f3e432025eb1946149e3241d3998b1b/src%2Ftest%2Fui%2Fsanitize%2Funsupported-target.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsanitize%2Funsupported-target.stderr?ref=5986dd878f3e432025eb1946149e3241d3998b1b", "patch": "@@ -1,4 +1,4 @@\n-error: `-Zsanitizer=leak` only works with targets: aarch64-unknown-linux-gnu, x86_64-apple-darwin, x86_64-unknown-linux-gnu\n+error: `-Zsanitizer=leak` only works with targets: aarch64-apple-darwin, aarch64-unknown-linux-gnu, x86_64-apple-darwin, x86_64-unknown-linux-gnu\n \n error: aborting due to previous error\n "}, {"sha": "1647df8044ccc37cb138c13499853ce43daf340b", "filename": "src/tools/compiletest/src/util.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5986dd878f3e432025eb1946149e3241d3998b1b/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5986dd878f3e432025eb1946149e3241d3998b1b/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs?ref=5986dd878f3e432025eb1946149e3241d3998b1b", "patch": "@@ -82,6 +82,7 @@ const ARCH_TABLE: &[(&str, &str)] = &[\n ];\n \n pub const ASAN_SUPPORTED_TARGETS: &[&str] = &[\n+    \"aarch64-apple-darwin\",\n     \"aarch64-fuchsia\",\n     \"aarch64-unknown-linux-gnu\",\n     \"x86_64-apple-darwin\",\n@@ -90,13 +91,18 @@ pub const ASAN_SUPPORTED_TARGETS: &[&str] = &[\n     \"x86_64-unknown-linux-gnu\",\n ];\n \n-pub const LSAN_SUPPORTED_TARGETS: &[&str] =\n-    &[\"aarch64-unknown-linux-gnu\", \"x86_64-apple-darwin\", \"x86_64-unknown-linux-gnu\"];\n+pub const LSAN_SUPPORTED_TARGETS: &[&str] = &[\n+    \"aarch64-apple-darwin\",\n+    \"aarch64-unknown-linux-gnu\",\n+    \"x86_64-apple-darwin\",\n+    \"x86_64-unknown-linux-gnu\",\n+];\n \n pub const MSAN_SUPPORTED_TARGETS: &[&str] =\n     &[\"aarch64-unknown-linux-gnu\", \"x86_64-unknown-freebsd\", \"x86_64-unknown-linux-gnu\"];\n \n pub const TSAN_SUPPORTED_TARGETS: &[&str] = &[\n+    \"aarch64-apple-darwin\",\n     \"aarch64-unknown-linux-gnu\",\n     \"x86_64-apple-darwin\",\n     \"x86_64-unknown-freebsd\","}]}