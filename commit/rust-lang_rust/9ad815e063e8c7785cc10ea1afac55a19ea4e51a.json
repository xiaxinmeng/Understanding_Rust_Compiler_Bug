{"sha": "9ad815e063e8c7785cc10ea1afac55a19ea4e51a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhZDgxNWUwNjNlOGM3Nzg1Y2MxMGVhMWFmYWM1NWExOWVhNGU1MWE=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-07-23T23:56:17Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-07-23T23:56:17Z"}, "message": "std: rename str.as_bytes_with_null_consume to str.to_bytes_with_null", "tree": {"sha": "8028c4e7bd736965f09e2c7f245a3a936681c546", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8028c4e7bd736965f09e2c7f245a3a936681c546"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ad815e063e8c7785cc10ea1afac55a19ea4e51a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ad815e063e8c7785cc10ea1afac55a19ea4e51a", "html_url": "https://github.com/rust-lang/rust/commit/9ad815e063e8c7785cc10ea1afac55a19ea4e51a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ad815e063e8c7785cc10ea1afac55a19ea4e51a/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7434080dd7c0cd072d7e51fbb1e174e954bdc011", "url": "https://api.github.com/repos/rust-lang/rust/commits/7434080dd7c0cd072d7e51fbb1e174e954bdc011", "html_url": "https://github.com/rust-lang/rust/commit/7434080dd7c0cd072d7e51fbb1e174e954bdc011"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "114ab6702ae24b2fa7f2a5a426c2790d571ce785", "filename": "src/libextra/terminfo/parm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9ad815e063e8c7785cc10ea1afac55a19ea4e51a/src%2Flibextra%2Fterminfo%2Fparm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ad815e063e8c7785cc10ea1afac55a19ea4e51a/src%2Flibextra%2Fterminfo%2Fparm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fterminfo%2Fparm.rs?ref=9ad815e063e8c7785cc10ea1afac55a19ea4e51a", "patch": "@@ -545,7 +545,7 @@ priv fn format(val: Param, op: FormatOp, flags: Flags) -> Result<~[u8],~str> {\n         String(s) => {\n             match op {\n                 FormatString => {\n-                    let mut s = s.as_bytes_with_null_consume();\n+                    let mut s = s.to_bytes_with_null();\n                     s.pop(); // remove the null\n                     if flags.precision > 0 && flags.precision < s.len() {\n                         s.truncate(flags.precision);"}, {"sha": "3987f260065560d5a63593b40e0b7bb7ea781b0f", "filename": "src/libstd/str.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9ad815e063e8c7785cc10ea1afac55a19ea4e51a/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ad815e063e8c7785cc10ea1afac55a19ea4e51a/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=9ad815e063e8c7785cc10ea1afac55a19ea4e51a", "patch": "@@ -2073,8 +2073,7 @@ pub trait OwnedStr {\n     fn reserve(&mut self, n: uint);\n     fn reserve_at_least(&mut self, n: uint);\n     fn capacity(&self) -> uint;\n-\n-    fn as_bytes_with_null_consume(self) -> ~[u8];\n+    fn to_bytes_with_null(self) -> ~[u8];\n }\n \n impl OwnedStr for ~str {\n@@ -2263,7 +2262,7 @@ impl OwnedStr for ~str {\n     /// Convert to a vector of bytes. This does not allocate a new\n     /// string, and includes the null terminator.\n     #[inline]\n-    fn as_bytes_with_null_consume(self) -> ~[u8] {\n+    fn to_bytes_with_null(self) -> ~[u8] {\n         unsafe { ::cast::transmute(self) }\n     }\n }\n@@ -3065,17 +3064,17 @@ mod tests {\n     }\n \n     #[test]\n-    fn test_as_bytes_with_null_consume() {\n+    fn test_to_bytes_with_null() {\n         let s = ~\"\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam\";\n         let v = ~[\n             224, 184, 168, 224, 185, 132, 224, 184, 151, 224, 184, 162, 228,\n             184, 173, 229, 141, 142, 86, 105, 225, 187, 135, 116, 32, 78, 97,\n             109, 0\n         ];\n-        assert_eq!((~\"\").as_bytes_with_null_consume(), ~[0]);\n-        assert_eq!((~\"abc\").as_bytes_with_null_consume(),\n+        assert_eq!((~\"\").to_bytes_with_null(), ~[0]);\n+        assert_eq!((~\"abc\").to_bytes_with_null(),\n                    ~['a' as u8, 'b' as u8, 'c' as u8, 0]);\n-        assert_eq!(s.as_bytes_with_null_consume(), v);\n+        assert_eq!(s.to_bytes_with_null(), v);\n     }\n \n     #[test]"}, {"sha": "38f36dd258b7acde112eb972d96eaebab173f3fc", "filename": "src/test/run-pass/foreign-fn-linkname.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9ad815e063e8c7785cc10ea1afac55a19ea4e51a/src%2Ftest%2Frun-pass%2Fforeign-fn-linkname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ad815e063e8c7785cc10ea1afac55a19ea4e51a/src%2Ftest%2Frun-pass%2Fforeign-fn-linkname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeign-fn-linkname.rs?ref=9ad815e063e8c7785cc10ea1afac55a19ea4e51a", "patch": "@@ -26,7 +26,7 @@ mod libc {\n fn strlen(str: ~str) -> uint {\n     unsafe {\n         // C string is terminated with a zero\n-        let bytes = str.as_bytes_with_null_consume();\n+        let bytes = str.to_bytes_with_null();\n         return libc::my_strlen(vec::raw::to_ptr(bytes));\n     }\n }"}]}