{"sha": "2f2d49523a8a2cd4e3156dc2f810a83ef37e1872", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMmQ0OTUyM2E4YTJjZDRlMzE1NmRjMmY4MTBhODNlZjM3ZTE4NzI=", "commit": {"author": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2019-01-31T22:18:07Z"}, "committer": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2019-01-31T22:18:07Z"}, "message": "Simplify lambdas", "tree": {"sha": "30fca0f1131a30561b09ff12e5c8d97f73d2f24c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30fca0f1131a30561b09ff12e5c8d97f73d2f24c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f2d49523a8a2cd4e3156dc2f810a83ef37e1872", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f2d49523a8a2cd4e3156dc2f810a83ef37e1872", "html_url": "https://github.com/rust-lang/rust/commit/2f2d49523a8a2cd4e3156dc2f810a83ef37e1872", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f2d49523a8a2cd4e3156dc2f810a83ef37e1872/comments", "author": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "committer": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f841ff4a7b8227f17e0fa056c6a73ba549f2872e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f841ff4a7b8227f17e0fa056c6a73ba549f2872e", "html_url": "https://github.com/rust-lang/rust/commit/f841ff4a7b8227f17e0fa056c6a73ba549f2872e"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "b63d816ce44cac1a9455f836fb67e6e64b33b8f6", "filename": "src/libstd/time.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2f2d49523a8a2cd4e3156dc2f810a83ef37e1872/src%2Flibstd%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f2d49523a8a2cd4e3156dc2f810a83ef37e1872/src%2Flibstd%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime.rs?ref=2f2d49523a8a2cd4e3156dc2f810a83ef37e1872", "patch": "@@ -247,15 +247,15 @@ impl Instant {\n     /// otherwise.\n     #[stable(feature = \"time_checked_add\", since = \"1.34.0\")]\n     pub fn checked_add(&self, duration: Duration) -> Option<Instant> {\n-        self.0.checked_add_duration(&duration).map(|t| Instant(t))\n+        self.0.checked_add_duration(&duration).map(Instant)\n     }\n \n     /// Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as\n     /// `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n     /// otherwise.\n     #[stable(feature = \"time_checked_add\", since = \"1.34.0\")]\n     pub fn checked_sub(&self, duration: Duration) -> Option<Instant> {\n-        self.0.checked_sub_duration(&duration).map(|t| Instant(t))\n+        self.0.checked_sub_duration(&duration).map(Instant)\n     }\n }\n \n@@ -420,15 +420,15 @@ impl SystemTime {\n     /// otherwise.\n     #[stable(feature = \"time_checked_add\", since = \"1.34.0\")]\n     pub fn checked_add(&self, duration: Duration) -> Option<SystemTime> {\n-        self.0.checked_add_duration(&duration).map(|t| SystemTime(t))\n+        self.0.checked_add_duration(&duration).map(SystemTime)\n     }\n \n     /// Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as\n     /// `SystemTime` (which means it's inside the bounds of the underlying data structure), `None`\n     /// otherwise.\n     #[stable(feature = \"time_checked_add\", since = \"1.34.0\")]\n     pub fn checked_sub(&self, duration: Duration) -> Option<SystemTime> {\n-        self.0.checked_sub_duration(&duration).map(|t| SystemTime(t))\n+        self.0.checked_sub_duration(&duration).map(SystemTime)\n     }\n }\n "}]}