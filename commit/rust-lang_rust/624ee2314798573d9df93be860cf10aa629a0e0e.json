{"sha": "624ee2314798573d9df93be860cf10aa629a0e0e", "node_id": "C_kwDOAAsO6NoAKDYyNGVlMjMxNDc5ODU3M2Q5ZGY5M2JlODYwY2YxMGFhNjI5YTBlMGU", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-09-29T19:06:37Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-09-29T19:06:37Z"}, "message": "Use the right HirFileId for LowerCtx when expanding macros in fn parameter types", "tree": {"sha": "6810ebf4b8ce791426828705019f0b8c81ce3c4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6810ebf4b8ce791426828705019f0b8c81ce3c4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/624ee2314798573d9df93be860cf10aa629a0e0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/624ee2314798573d9df93be860cf10aa629a0e0e", "html_url": "https://github.com/rust-lang/rust/commit/624ee2314798573d9df93be860cf10aa629a0e0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/624ee2314798573d9df93be860cf10aa629a0e0e/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bd14e05304a5daff556875cf476f9afb26a766a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bd14e05304a5daff556875cf476f9afb26a766a", "html_url": "https://github.com/rust-lang/rust/commit/1bd14e05304a5daff556875cf476f9afb26a766a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8622357cd42d3fdd31d51945b7de59ec8ecaabbb", "filename": "crates/hir_def/src/generics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/624ee2314798573d9df93be860cf10aa629a0e0e/crates%2Fhir_def%2Fsrc%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/624ee2314798573d9df93be860cf10aa629a0e0e/crates%2Fhir_def%2Fsrc%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fgenerics.rs?ref=624ee2314798573d9df93be860cf10aa629a0e0e", "patch": "@@ -299,7 +299,7 @@ impl GenericParams {\n                 let macro_call = mc.to_node(db.upcast());\n                 match expander.enter_expand::<ast::Type>(db, macro_call) {\n                     Ok(ExpandResult { value: Some((mark, expanded)), .. }) => {\n-                        let ctx = LowerCtx::new(db, mc.file_id);\n+                        let ctx = LowerCtx::new(db, expander.current_file_id());\n                         let type_ref = TypeRef::from_ast(&ctx, expanded);\n                         self.fill_implicit_impl_trait_args(db, expander, &type_ref);\n                         expander.exit(db, mark);"}]}