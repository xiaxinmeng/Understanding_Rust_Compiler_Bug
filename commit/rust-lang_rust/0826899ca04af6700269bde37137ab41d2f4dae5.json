{"sha": "0826899ca04af6700269bde37137ab41d2f4dae5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4MjY4OTljYTA0YWY2NzAwMjY5YmRlMzcxMzdhYjQxZDJmNGRhZTU=", "commit": {"author": {"name": "Elichai Turkel", "email": "elichai.turkel@gmail.com", "date": "2020-03-18T11:18:08Z"}, "committer": {"name": "Elichai Turkel", "email": "elichai.turkel@gmail.com", "date": "2020-03-18T12:14:23Z"}, "message": "Remove uninhabit/zeroed tests to a new test file for abort checking", "tree": {"sha": "08b0ad153840c4ad10c099aae6e4b5bb5995d134", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08b0ad153840c4ad10c099aae6e4b5bb5995d134"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0826899ca04af6700269bde37137ab41d2f4dae5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJNBAABCAA3FiEEC5PUstyhDoo+NyfXk4PN6ejman8FAl5yEJ8ZHGVsaWNoYWku\ndHVya2VsQGdtYWlsLmNvbQAKCRCTg83p6OZqf4C9D/9teXS/Or3ehy7scAml+fdX\nrj42aH70ow5E8kBdU7bjeAERscqt3f4wEVCQ5CsVhQY/Cl3Pk6FxDbFg3Vz3WAw1\nufZU4pEC5gGgkde8PSnSgKXd1zKEbpXsi71X7DnW9frnivls53dit2bjHxlCM89s\nvVS4hWSy0XuBbxYKTvXIh9qEofPlxi4SlNKpmR64JdtvarhUlVarOLGK/EtDWOnN\n2uEPGgnlpKxY4XOy8uqhxSNY3wsBdgzdsg51TZI9qhj/PPbm1GRfS5rm9HE5dSHs\nx6qSUlWu1ZZ/YnMDNgQ4J4+M6CvfvUr9NkviRAAHYeTIg/QMaGD1YHqA5TehCqT6\nFhFodWuYFJQBrMU5Munl6PF8VUs58TEPrr3az/AFBtkvqUnvU4U/S9+FO6LoklAl\nCUkDQeTZNrgE56IGePZTH+q5/gmMHteVZYfJCeuwz61M8Yqzqg19/jk0IltDqShU\n7X6J6TJSuC+XgSRkthUb0YVIXxlFTMJJ4wKWAQ8Bgxdc8YDcvxvb7TdMbWtFnug7\n+/CgWtRhteHbYRi04ulHMX61i6bmp1lupFMRn1s6DWzf0XEQU1rN7eoweOvyANRN\niJ90ntiMx6ZzFCiT6e2Q3oIrhdMhUNr5MuExO32kKV6Oakc1Rh77vkpvsmSNl3pG\nYFMlb9G3rjQep9S3DQBx6g==\n=zSGd\n-----END PGP SIGNATURE-----", "payload": "tree 08b0ad153840c4ad10c099aae6e4b5bb5995d134\nparent 52e1372e038d0372c7435b50e7d6e98a15b9a02f\nauthor Elichai Turkel <elichai.turkel@gmail.com> 1584530288 +0200\ncommitter Elichai Turkel <elichai.turkel@gmail.com> 1584533663 +0200\n\nRemove uninhabit/zeroed tests to a new test file for abort checking\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0826899ca04af6700269bde37137ab41d2f4dae5", "html_url": "https://github.com/rust-lang/rust/commit/0826899ca04af6700269bde37137ab41d2f4dae5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0826899ca04af6700269bde37137ab41d2f4dae5/comments", "author": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52e1372e038d0372c7435b50e7d6e98a15b9a02f", "url": "https://api.github.com/repos/rust-lang/rust/commits/52e1372e038d0372c7435b50e7d6e98a15b9a02f", "html_url": "https://github.com/rust-lang/rust/commit/52e1372e038d0372c7435b50e7d6e98a15b9a02f"}], "stats": {"total": 70, "additions": 15, "deletions": 55}, "files": [{"sha": "78c2b0fbeeb7232f6e142b15ac799edfbb24a74f", "filename": "tests/compile-fail/invalid_zero_init.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0826899ca04af6700269bde37137ab41d2f4dae5/tests%2Fcompile-fail%2Finvalid_zero_init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0826899ca04af6700269bde37137ab41d2f4dae5/tests%2Fcompile-fail%2Finvalid_zero_init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Finvalid_zero_init.rs?ref=0826899ca04af6700269bde37137ab41d2f4dae5", "patch": "@@ -0,0 +1,6 @@\n+ // error-pattern: the evaluated program aborted execution: attempted to zero-initialize type `fn()`, which is invalid\n+\n+#[allow(deprecated, invalid_value)]\n+fn main() {\n+    unsafe { std::mem::zeroed::<fn()>() };\n+}"}, {"sha": "b9048830783f8e1ae7877e87e36136c580cb4153", "filename": "tests/compile-fail/uninit_uninhabited_type.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0826899ca04af6700269bde37137ab41d2f4dae5/tests%2Fcompile-fail%2Funinit_uninhabited_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0826899ca04af6700269bde37137ab41d2f4dae5/tests%2Fcompile-fail%2Funinit_uninhabited_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Funinit_uninhabited_type.rs?ref=0826899ca04af6700269bde37137ab41d2f4dae5", "patch": "@@ -0,0 +1,7 @@\n+ // error-pattern: the evaluated program aborted execution: attempted to instantiate uninhabited type `!`\n+#![feature(never_type)]\n+\n+#[allow(deprecated, invalid_value)]\n+fn main() {\n+    unsafe { std::mem::uninitialized::<!>() };\n+}"}, {"sha": "6408c940d98a4be5afc735db653178767a2f8544", "filename": "tests/run-pass/panic/catch_panic.rs", "status": "modified", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/0826899ca04af6700269bde37137ab41d2f4dae5/tests%2Frun-pass%2Fpanic%2Fcatch_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0826899ca04af6700269bde37137ab41d2f4dae5/tests%2Frun-pass%2Fpanic%2Fcatch_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fpanic%2Fcatch_panic.rs?ref=0826899ca04af6700269bde37137ab41d2f4dae5", "patch": "@@ -67,43 +67,6 @@ fn main() {\n         |_old_val| { let _val = 1/0; loop {} },\n     );\n \n-    // libcore panics from shims.\n-    #[allow(deprecated, invalid_value)]\n-    {\n-        test(\n-            Some(\"attempted to instantiate uninhabited type `!`\"),\n-            |_old_val| unsafe { std::mem::uninitialized::<!>() },\n-        );\n-        test(\n-            Some(\"attempted to instantiate uninhabited type `!`\"),\n-            |_old_val| unsafe { std::mem::zeroed::<!>() },\n-        );\n-        test(\n-            Some(\"attempted to leave type `fn()` uninitialized, which is invalid\"),\n-            |_old_val| unsafe { std::mem::uninitialized::<fn()>(); loop {} },\n-        );\n-        test(\n-            Some(\"attempted to zero-initialize type `fn()`, which is invalid\"),\n-            |_old_val| unsafe { std::mem::zeroed::<fn()>(); loop {} },\n-        );\n-        test(\n-            Some(\"attempted to leave type `*const dyn std::marker::Sync` uninitialized, which is invalid\"),\n-            |_old_val| unsafe { std::mem::uninitialized::<*const dyn Sync>(); loop {} },\n-        );\n-        test(\n-            Some(\"attempted to zero-initialize type `*mut dyn std::marker::Sync`, which is invalid\"),\n-            |_old_val| unsafe { std::mem::zeroed::<*mut dyn Sync>(); loop {} },\n-        );\n-        test(\n-            Some(\"attempted to leave type `&u8` uninitialized, which is invalid\"),\n-            |_old_val| unsafe { std::mem::uninitialized::<&u8>(); loop {} },\n-        );\n-        test(\n-            Some(\"attempted to zero-initialize type `&u8`, which is invalid\"),\n-            |_old_val| unsafe { std::mem::zeroed::<&u8>(); loop {} },\n-        );\n-    }\n-\n     test(\n         Some(\"align_offset: align is not a power-of-two\"),\n         |_old_val| { (0usize as *const u8).align_offset(3); loop {} },"}, {"sha": "6da9cd29963a6b09dc8b75a1fea7f2e2f572f80a", "filename": "tests/run-pass/panic/catch_panic.stderr", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0826899ca04af6700269bde37137ab41d2f4dae5/tests%2Frun-pass%2Fpanic%2Fcatch_panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0826899ca04af6700269bde37137ab41d2f4dae5/tests%2Frun-pass%2Fpanic%2Fcatch_panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fpanic%2Fcatch_panic.stderr?ref=0826899ca04af6700269bde37137ab41d2f4dae5", "patch": "@@ -16,27 +16,11 @@ thread 'main' panicked at 'index out of bounds: the len is 3 but the index is 4'\n Caught panic message (String): index out of bounds: the len is 3 but the index is 4\n thread 'main' panicked at 'attempt to divide by zero', $DIR/catch_panic.rs:67:33\n Caught panic message (String): attempt to divide by zero\n-thread 'main' panicked at 'attempted to instantiate uninhabited type `!`', $LOC\n-Caught panic message (String): attempted to instantiate uninhabited type `!`\n-thread 'main' panicked at 'attempted to instantiate uninhabited type `!`', $LOC\n-Caught panic message (String): attempted to instantiate uninhabited type `!`\n-thread 'main' panicked at 'attempted to leave type `fn()` uninitialized, which is invalid', $LOC\n-Caught panic message (String): attempted to leave type `fn()` uninitialized, which is invalid\n-thread 'main' panicked at 'attempted to zero-initialize type `fn()`, which is invalid', $LOC\n-Caught panic message (String): attempted to zero-initialize type `fn()`, which is invalid\n-thread 'main' panicked at 'attempted to leave type `*const dyn std::marker::Sync` uninitialized, which is invalid', $LOC\n-Caught panic message (String): attempted to leave type `*const dyn std::marker::Sync` uninitialized, which is invalid\n-thread 'main' panicked at 'attempted to zero-initialize type `*mut dyn std::marker::Sync`, which is invalid', $LOC\n-Caught panic message (String): attempted to zero-initialize type `*mut dyn std::marker::Sync`, which is invalid\n-thread 'main' panicked at 'attempted to leave type `&u8` uninitialized, which is invalid', $LOC\n-Caught panic message (String): attempted to leave type `&u8` uninitialized, which is invalid\n-thread 'main' panicked at 'attempted to zero-initialize type `&u8`, which is invalid', $LOC\n-Caught panic message (String): attempted to zero-initialize type `&u8`, which is invalid\n thread 'main' panicked at 'align_offset: align is not a power-of-two', $LOC\n Caught panic message (String): align_offset: align is not a power-of-two\n-thread 'main' panicked at 'assertion failed: false', $DIR/catch_panic.rs:113:29\n+thread 'main' panicked at 'assertion failed: false', $DIR/catch_panic.rs:76:29\n Caught panic message (&str): assertion failed: false\n-thread 'main' panicked at 'assertion failed: false', $DIR/catch_panic.rs:114:29\n+thread 'main' panicked at 'assertion failed: false', $DIR/catch_panic.rs:77:29\n Caught panic message (&str): assertion failed: false\n thread 'main' panicked at 'attempt to copy from unaligned or null pointer', $LOC\n Caught panic message (String): attempt to copy from unaligned or null pointer"}]}