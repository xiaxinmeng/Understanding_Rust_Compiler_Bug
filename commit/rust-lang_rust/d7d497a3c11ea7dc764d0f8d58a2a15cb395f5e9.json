{"sha": "d7d497a3c11ea7dc764d0f8d58a2a15cb395f5e9", "node_id": "C_kwDOAAsO6NoAKGQ3ZDQ5N2EzYzExZWE3ZGM3NjRkMGY4ZDU4YTJhMTVjYjM5NWY1ZTk", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-05-31T23:55:59Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-06-01T00:25:06Z"}, "message": "rustdoc: add jsdoc comments for complex functions", "tree": {"sha": "eb3c461392f10788ea5538e80951c0f77186dd42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb3c461392f10788ea5538e80951c0f77186dd42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7d497a3c11ea7dc764d0f8d58a2a15cb395f5e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7d497a3c11ea7dc764d0f8d58a2a15cb395f5e9", "html_url": "https://github.com/rust-lang/rust/commit/d7d497a3c11ea7dc764d0f8d58a2a15cb395f5e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7d497a3c11ea7dc764d0f8d58a2a15cb395f5e9/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9302d72346444b74bfbb2274c6da1acda9622a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9302d72346444b74bfbb2274c6da1acda9622a7", "html_url": "https://github.com/rust-lang/rust/commit/b9302d72346444b74bfbb2274c6da1acda9622a7"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "6da51ea0a55e7f58675dd0370972d48e3079450d", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/d7d497a3c11ea7dc764d0f8d58a2a15cb395f5e9/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/d7d497a3c11ea7dc764d0f8d58a2a15cb395f5e9/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=d7d497a3c11ea7dc764d0f8d58a2a15cb395f5e9", "patch": "@@ -779,6 +779,13 @@ function preLoadCss(cssUrl) {\n         });\n     });\n \n+    /**\n+     * Show a tooltip immediately.\n+     *\n+     * @param {DOMElement} e - The tooltip's anchor point. The DOM is consulted to figure\n+     *                         out what the tooltip should contain, and where it should be\n+     *                         positioned.\n+     */\n     function showTooltip(e) {\n         const notable_ty = e.getAttribute(\"data-notable-ty\");\n         if (!window.NOTABLE_TRAITS && notable_ty) {\n@@ -789,8 +796,9 @@ function preLoadCss(cssUrl) {\n                 throw new Error(\"showTooltip() called with notable without any notable traits!\");\n             }\n         }\n+        // Make this function idempotent. If the tooltip is already shown, avoid doing extra work\n+        // and leave it alone.\n         if (window.CURRENT_TOOLTIP_ELEMENT && window.CURRENT_TOOLTIP_ELEMENT.TOOLTIP_BASE === e) {\n-            // Make this function idempotent.\n             clearTooltipHoverTimeout(window.CURRENT_TOOLTIP_ELEMENT);\n             return;\n         }\n@@ -800,6 +808,7 @@ function preLoadCss(cssUrl) {\n             wrapper.innerHTML = \"<div class=\\\"content\\\">\" +\n                 window.NOTABLE_TRAITS[notable_ty] + \"</div>\";\n         } else {\n+            // Replace any `title` attribute with `data-title` to avoid double tooltips.\n             if (e.getAttribute(\"title\") !== null) {\n                 e.setAttribute(\"data-title\", e.getAttribute(\"title\"));\n                 e.removeAttribute(\"title\");\n@@ -859,6 +868,17 @@ function preLoadCss(cssUrl) {\n         };\n     }\n \n+    /**\n+     * Show or hide the tooltip after a timeout. If a timeout was already set before this function\n+     * was called, that timeout gets cleared. If the tooltip is already in the requested state,\n+     * this function will still clear any pending timeout, but otherwise do nothing.\n+     *\n+     * @param {DOMElement} element - The tooltip's anchor point. The DOM is consulted to figure\n+     *                               out what the tooltip should contain, and where it should be\n+     *                               positioned.\n+     * @param {boolean}    show    - If true, the tooltip will be made visible. If false, it will\n+     *                               be hidden.\n+     */\n     function setTooltipHoverTimeout(element, show) {\n         clearTooltipHoverTimeout(element);\n         if (!show && !window.CURRENT_TOOLTIP_ELEMENT) {\n@@ -883,6 +903,13 @@ function preLoadCss(cssUrl) {\n         }, show ? window.RUSTDOC_TOOLTIP_HOVER_MS : window.RUSTDOC_TOOLTIP_HOVER_EXIT_MS);\n     }\n \n+    /**\n+     * If a show/hide timeout was set by `setTooltipHoverTimeout`, cancel it. If none exists,\n+     * do nothing.\n+     *\n+     * @param {DOMElement} element - The tooltip's anchor point,\n+     *                               as passed to `setTooltipHoverTimeout`.\n+     */\n     function clearTooltipHoverTimeout(element) {\n         if (element.TOOLTIP_HOVER_TIMEOUT !== undefined) {\n             removeClass(window.CURRENT_TOOLTIP_ELEMENT, \"fade-out\");\n@@ -910,6 +937,12 @@ function preLoadCss(cssUrl) {\n         }\n     }\n \n+    /**\n+     * Hide the current tooltip immediately.\n+     *\n+     * @param {boolean} focus - If set to `true`, move keyboard focus to the tooltip anchor point.\n+     *                          If set to `false`, leave keyboard focus alone.\n+     */\n     function hideTooltip(focus) {\n         if (window.CURRENT_TOOLTIP_ELEMENT) {\n             if (window.CURRENT_TOOLTIP_ELEMENT.TOOLTIP_BASE.TOOLTIP_FORCE_VISIBLE) {"}]}