{"sha": "59bbbe78e2ddf6f5c823372890b928fe19e41ac3", "node_id": "C_kwDOAAsO6NoAKDU5YmJiZTc4ZTJkZGY2ZjVjODIzMzcyODkwYjkyOGZlMTllNDFhYzM", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-13T09:30:09Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-13T09:31:46Z"}, "message": "Avoid invoking the full `eq` infrastructure when all we want is to check a discriminant", "tree": {"sha": "d090f3ea28b303060318db8fe281681d6d0653e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d090f3ea28b303060318db8fe281681d6d0653e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59bbbe78e2ddf6f5c823372890b928fe19e41ac3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59bbbe78e2ddf6f5c823372890b928fe19e41ac3", "html_url": "https://github.com/rust-lang/rust/commit/59bbbe78e2ddf6f5c823372890b928fe19e41ac3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59bbbe78e2ddf6f5c823372890b928fe19e41ac3/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72f144de242499776d8ca2f6626d63d169781a05", "url": "https://api.github.com/repos/rust-lang/rust/commits/72f144de242499776d8ca2f6626d63d169781a05", "html_url": "https://github.com/rust-lang/rust/commit/72f144de242499776d8ca2f6626d63d169781a05"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "dcd457957a81929b011cdbb522b31d5932cb23fe", "filename": "compiler/rustc_middle/src/traits/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/59bbbe78e2ddf6f5c823372890b928fe19e41ac3/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59bbbe78e2ddf6f5c823372890b928fe19e41ac3/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs?ref=59bbbe78e2ddf6f5c823372890b928fe19e41ac3", "patch": "@@ -206,7 +206,9 @@ pub struct InternedObligationCauseCode<'tcx> {\n impl<'tcx> From<ObligationCauseCode<'tcx>> for InternedObligationCauseCode<'tcx> {\n     #[inline(always)]\n     fn from(code: ObligationCauseCode<'tcx>) -> Self {\n-        Self { code: if code == MISC_OBLIGATION_CAUSE_CODE { None } else { Some(Lrc::new(code)) } }\n+        Self {\n+            code: if let MISC_OBLIGATION_CAUSE_CODE = code { None } else { Some(Lrc::new(code)) },\n+        }\n     }\n }\n "}]}