{"sha": "80262e6040675b9346816e2845a7fc81c64b82a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwMjYyZTYwNDA2NzViOTM0NjgxNmUyODQ1YTdmYzgxYzY0YjgyYTA=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-09T10:32:56Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-09T10:32:56Z"}, "message": "Fix irrefutable slice patterns in const fn", "tree": {"sha": "1d11d0fae4a083c5669fb42981fa1a163d81b439", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d11d0fae4a083c5669fb42981fa1a163d81b439"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80262e6040675b9346816e2845a7fc81c64b82a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80262e6040675b9346816e2845a7fc81c64b82a0", "html_url": "https://github.com/rust-lang/rust/commit/80262e6040675b9346816e2845a7fc81c64b82a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80262e6040675b9346816e2845a7fc81c64b82a0/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aef6288d9ad2c5d9bba2525611ef1a3da703d4b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5", "html_url": "https://github.com/rust-lang/rust/commit/aef6288d9ad2c5d9bba2525611ef1a3da703d4b5"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "ddd714fd27e597a5b1f3bbe114def3edd74ae7ba", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/80262e6040675b9346816e2845a7fc81c64b82a0/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80262e6040675b9346816e2845a7fc81c64b82a0/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=80262e6040675b9346816e2845a7fc81c64b82a0", "patch": "@@ -470,6 +470,8 @@ impl<'a, 'tcx> Visitor<'tcx> for Qualifier<'a, 'tcx, 'tcx> {\n                             }\n                         }\n \n+                        ProjectionElem::ConstantIndex {..} |\n+                        ProjectionElem::Subslice {..} |\n                         ProjectionElem::Field(..) |\n                         ProjectionElem::Index(_) => {\n                             let base_ty = proj.base.ty(this.mir, this.tcx).to_ty(this.tcx);\n@@ -499,8 +501,6 @@ impl<'a, 'tcx> Visitor<'tcx> for Qualifier<'a, 'tcx, 'tcx> {\n                             this.qualif.restrict(ty, this.tcx, this.param_env);\n                         }\n \n-                        ProjectionElem::ConstantIndex {..} |\n-                        ProjectionElem::Subslice {..} |\n                         ProjectionElem::Downcast(..) => {\n                             this.not_const()\n                         }"}, {"sha": "6935255098b6790bf68ec54985bc89e2d3edddd8", "filename": "src/librustc_mir/transform/qualify_min_const_fn.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/80262e6040675b9346816e2845a7fc81c64b82a0/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80262e6040675b9346816e2845a7fc81c64b82a0/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs?ref=80262e6040675b9346816e2845a7fc81c64b82a0", "patch": "@@ -264,13 +264,10 @@ fn check_place(\n         Place::Static(_) => Err((span, \"cannot access `static` items in const fn\".into())),\n         Place::Projection(proj) => {\n             match proj.elem {\n+                | ProjectionElem::ConstantIndex { .. } | ProjectionElem::Subslice { .. }\n                 | ProjectionElem::Deref | ProjectionElem::Field(..) | ProjectionElem::Index(_) => {\n                     check_place(tcx, mir, &proj.base, span)\n                 }\n-                // slice patterns are unstable\n-                | ProjectionElem::ConstantIndex { .. } | ProjectionElem::Subslice { .. } => {\n-                    return Err((span, \"slice patterns in const fn are unstable\".into()))\n-                }\n                 | ProjectionElem::Downcast(..) => {\n                     Err((span, \"`match` or `if let` in `const fn` is unstable\".into()))\n                 }"}, {"sha": "424a16f7ed39b10aa34e222de064709d3e816f22", "filename": "src/test/ui/consts/const_let_irrefutable.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/80262e6040675b9346816e2845a7fc81c64b82a0/src%2Ftest%2Fui%2Fconsts%2Fconst_let_irrefutable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80262e6040675b9346816e2845a7fc81c64b82a0/src%2Ftest%2Fui%2Fconsts%2Fconst_let_irrefutable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_let_irrefutable.rs?ref=80262e6040675b9346816e2845a7fc81c64b82a0", "patch": "@@ -0,0 +1,11 @@\n+// compile-pass\n+\n+fn main() {}\n+\n+const fn tup((a, b): (i32, i32)) -> i32 {\n+    a + b\n+}\n+\n+const fn array([a, b]: [i32; 2]) -> i32 {\n+    a + b\n+}"}, {"sha": "345f682868fbc52f6890a70cd28359f7b63046c6", "filename": "src/test/ui/consts/const_let_refutable.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/80262e6040675b9346816e2845a7fc81c64b82a0/src%2Ftest%2Fui%2Fconsts%2Fconst_let_refutable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80262e6040675b9346816e2845a7fc81c64b82a0/src%2Ftest%2Fui%2Fconsts%2Fconst_let_refutable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_let_refutable.rs?ref=80262e6040675b9346816e2845a7fc81c64b82a0", "patch": "@@ -0,0 +1,5 @@\n+fn main() {}\n+\n+const fn slice([a, b]: &[i32]) -> i32 { //~ ERROR refutable pattern in function argument\n+    a + b\n+}"}, {"sha": "c5d2ba02a70c613917b178033ba76eab9ad07545", "filename": "src/test/ui/consts/const_let_refutable.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/80262e6040675b9346816e2845a7fc81c64b82a0/src%2Ftest%2Fui%2Fconsts%2Fconst_let_refutable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/80262e6040675b9346816e2845a7fc81c64b82a0/src%2Ftest%2Fui%2Fconsts%2Fconst_let_refutable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_let_refutable.stderr?ref=80262e6040675b9346816e2845a7fc81c64b82a0", "patch": "@@ -0,0 +1,9 @@\n+error[E0005]: refutable pattern in function argument: `&[]` not covered\n+  --> $DIR/const_let_refutable.rs:3:16\n+   |\n+LL | const fn slice([a, b]: &[i32]) -> i32 { //~ ERROR refutable pattern in function argument\n+   |                ^^^^^^ pattern `&[]` not covered\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0005`."}]}