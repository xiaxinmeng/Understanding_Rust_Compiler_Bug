{"sha": "924a1d4a7adf34a039954358db66061de7291207", "node_id": "C_kwDOAAsO6NoAKDkyNGExZDRhN2FkZjM0YTAzOTk1NDM1OGRiNjYwNjFkZTcyOTEyMDc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-22T00:01:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-22T00:01:13Z"}, "message": "Rollup merge of #105932 - MasterAwesome:aarch64-bti-llvm-15, r=nikic\n\nCorrect branch-protection ModFlagBehavior for Aarch64 on LLVM-15\n\nWhen building with Fat LTO and BTI enabled on aarch64, the BTI is set to `Module::Min` for alloc shim but is set to `Module::Error` for the crate. This was fine when we were using LLVM-14 but LLVM-15 changes it's behaviour to support for compiling with different `mbranch-protection` flags.\n\nRefer:\nhttps://github.com/rust-lang/llvm-project/commit/b0343a38a5910e980bb031e4014655d77cd0c162\n\nfixes https://github.com/rust-lang/rust/issues/102162", "tree": {"sha": "d696d6bdfd7dadfdb5bd5fee372929ae5600f2f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d696d6bdfd7dadfdb5bd5fee372929ae5600f2f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/924a1d4a7adf34a039954358db66061de7291207", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjo55JCRBK7hj4Ov3rIwAAk0wIAKU3kVWJV4O2zBcbHLhql+hE\nKoB8zB+VUgUeuR39CMcdJQi/GX8I3ZV3i0v+/G1ItyPPw/I2WY/dq/wq8HtALEVE\nylSBbmYJsbQNCU7TzT9s/w14ofTjAHJhPHiaQLnNynwx3y+bEgyLRdyaPjVR2/2f\nI9Ehp4Q277ibO8SbDhLdw7PfzQyIJ/b0Eybeb5VRKjKGC4wvl3OxSiSWrgOTIkrZ\no25oYCz8bYNdonLUyIHdLvw6PEIr7DjCBSsl4yjYFyvBAeRM6AMrB/EnuRzyEPyd\nX5zWHwlUIXWNJq9E31YkWxvL+yPlttenrnUssCczmTO/5WU3l4O+AgJLW6rXZVs=\n=mDII\n-----END PGP SIGNATURE-----\n", "payload": "tree d696d6bdfd7dadfdb5bd5fee372929ae5600f2f0\nparent 3eccc297d42b09eaecbf05a6846f1d5c9abc0b95\nparent 5480ac540cdb88a1512334c5680ccf7cd76a38c8\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1671667273 +0100\ncommitter GitHub <noreply@github.com> 1671667273 +0100\n\nRollup merge of #105932 - MasterAwesome:aarch64-bti-llvm-15, r=nikic\n\nCorrect branch-protection ModFlagBehavior for Aarch64 on LLVM-15\n\nWhen building with Fat LTO and BTI enabled on aarch64, the BTI is set to `Module::Min` for alloc shim but is set to `Module::Error` for the crate. This was fine when we were using LLVM-14 but LLVM-15 changes it's behaviour to support for compiling with different `mbranch-protection` flags.\n\nRefer:\nhttps://github.com/rust-lang/llvm-project/commit/b0343a38a5910e980bb031e4014655d77cd0c162\n\nfixes https://github.com/rust-lang/rust/issues/102162\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/924a1d4a7adf34a039954358db66061de7291207", "html_url": "https://github.com/rust-lang/rust/commit/924a1d4a7adf34a039954358db66061de7291207", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/924a1d4a7adf34a039954358db66061de7291207/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3eccc297d42b09eaecbf05a6846f1d5c9abc0b95", "url": "https://api.github.com/repos/rust-lang/rust/commits/3eccc297d42b09eaecbf05a6846f1d5c9abc0b95", "html_url": "https://github.com/rust-lang/rust/commit/3eccc297d42b09eaecbf05a6846f1d5c9abc0b95"}, {"sha": "5480ac540cdb88a1512334c5680ccf7cd76a38c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5480ac540cdb88a1512334c5680ccf7cd76a38c8", "html_url": "https://github.com/rust-lang/rust/commit/5480ac540cdb88a1512334c5680ccf7cd76a38c8"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "d9ccba07a346a1066e93beea9981566f383b15e9", "filename": "compiler/rustc_codegen_llvm/src/context.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/924a1d4a7adf34a039954358db66061de7291207/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/924a1d4a7adf34a039954358db66061de7291207/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs?ref=924a1d4a7adf34a039954358db66061de7291207", "patch": "@@ -280,29 +280,35 @@ pub unsafe fn create_module<'ll>(\n     }\n \n     if let Some(BranchProtection { bti, pac_ret }) = sess.opts.unstable_opts.branch_protection {\n+        let behavior = if llvm_version >= (15, 0, 0) {\n+            llvm::LLVMModFlagBehavior::Min\n+        } else {\n+            llvm::LLVMModFlagBehavior::Error\n+        };\n+\n         if sess.target.arch == \"aarch64\" {\n             llvm::LLVMRustAddModuleFlag(\n                 llmod,\n-                llvm::LLVMModFlagBehavior::Error,\n+                behavior,\n                 \"branch-target-enforcement\\0\".as_ptr().cast(),\n                 bti.into(),\n             );\n             llvm::LLVMRustAddModuleFlag(\n                 llmod,\n-                llvm::LLVMModFlagBehavior::Error,\n+                behavior,\n                 \"sign-return-address\\0\".as_ptr().cast(),\n                 pac_ret.is_some().into(),\n             );\n             let pac_opts = pac_ret.unwrap_or(PacRet { leaf: false, key: PAuthKey::A });\n             llvm::LLVMRustAddModuleFlag(\n                 llmod,\n-                llvm::LLVMModFlagBehavior::Error,\n+                behavior,\n                 \"sign-return-address-all\\0\".as_ptr().cast(),\n                 pac_opts.leaf.into(),\n             );\n             llvm::LLVMRustAddModuleFlag(\n                 llmod,\n-                llvm::LLVMModFlagBehavior::Error,\n+                behavior,\n                 \"sign-return-address-with-bkey\\0\".as_ptr().cast(),\n                 u32::from(pac_opts.key == PAuthKey::B),\n             );"}, {"sha": "6c78966a98d81d9f6e73c55f5a0d223bb8c6d47b", "filename": "compiler/rustc_codegen_llvm/src/llvm/ffi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/924a1d4a7adf34a039954358db66061de7291207/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/924a1d4a7adf34a039954358db66061de7291207/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs?ref=924a1d4a7adf34a039954358db66061de7291207", "patch": "@@ -79,6 +79,7 @@ pub enum LLVMModFlagBehavior {\n     Append = 5,\n     AppendUnique = 6,\n     Max = 7,\n+    Min = 8,\n }\n \n // Consts for the LLVM CallConv type, pre-cast to usize."}]}