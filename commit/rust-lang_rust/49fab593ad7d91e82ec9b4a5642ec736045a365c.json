{"sha": "49fab593ad7d91e82ec9b4a5642ec736045a365c", "node_id": "C_kwDOAAsO6NoAKDQ5ZmFiNTkzYWQ3ZDkxZTgyZWM5YjRhNTY0MmVjNzM2MDQ1YTM2NWM", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2022-03-04T21:24:13Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2022-03-04T21:44:31Z"}, "message": "show variadic args in hover function signature", "tree": {"sha": "ed2cd3c5658354a819b7bc88a7770630134885ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed2cd3c5658354a819b7bc88a7770630134885ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49fab593ad7d91e82ec9b4a5642ec736045a365c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAmIiiEAWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdM0zB/4xecIKYafNqrfVjRelua3DFq9g\nnFhq/trNkdOYpp3YHFX9q9aINDyPnKLLehdPDoKKKcVIk6NLvBD8qVswtLKeW5Ok\nAM1NkMKuP14YFpgqD8wy+13V/5wzP+jehF1G+jmvzuZ2Mf4DjKIzD7YUlsaOMEF0\nKE8g3j7SSb5O4lSh6jo12LHCbZQbBwZJwvQqr24klyljk8e6EuNt2If8yziDHZ7A\nXnG6L3eW2M3ljiZzU6Tk+tJS15vIEYVV4/AM2BcYm5Ar9CwJ2dKuZ2k9IeTojb0q\n5R9BbnjQMJNZcA6VLMhGsomJRrurM3jfYV+W1uLokgO0j9S+3/rroUFeqeDl\n=yVw9\n-----END PGP SIGNATURE-----", "payload": "tree ed2cd3c5658354a819b7bc88a7770630134885ea\nparent 908c17bfa6a55fc78bb9255e02bd53eebf0386dd\nauthor Andy Russell <arussell123@gmail.com> 1646429053 -0500\ncommitter Andy Russell <arussell123@gmail.com> 1646430271 -0500\n\nshow variadic args in hover function signature\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49fab593ad7d91e82ec9b4a5642ec736045a365c", "html_url": "https://github.com/rust-lang/rust/commit/49fab593ad7d91e82ec9b4a5642ec736045a365c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49fab593ad7d91e82ec9b4a5642ec736045a365c/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "908c17bfa6a55fc78bb9255e02bd53eebf0386dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/908c17bfa6a55fc78bb9255e02bd53eebf0386dd", "html_url": "https://github.com/rust-lang/rust/commit/908c17bfa6a55fc78bb9255e02bd53eebf0386dd"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "b7ea42236ee2ffc733518e803b301d5fd181af37", "filename": "crates/hir/src/display.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/49fab593ad7d91e82ec9b4a5642ec736045a365c/crates%2Fhir%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49fab593ad7d91e82ec9b4a5642ec736045a365c/crates%2Fhir%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fdisplay.rs?ref=49fab593ad7d91e82ec9b4a5642ec736045a365c", "patch": "@@ -86,6 +86,11 @@ impl HirDisplay for Function {\n             // The former will ignore lifetime arguments currently.\n             type_ref.hir_fmt(f)?;\n         }\n+\n+        if data.is_varargs() {\n+            write!(f, \", ...\")?;\n+        }\n+\n         write!(f, \")\")?;\n \n         // `FunctionData::ret_type` will be `::core::future::Future<Output = ...>` for async fns."}, {"sha": "e7fad48080d3b7ac1f83c918d402e158d86d9797", "filename": "crates/ide/src/hover/tests.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/49fab593ad7d91e82ec9b4a5642ec736045a365c/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49fab593ad7d91e82ec9b4a5642ec736045a365c/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs?ref=49fab593ad7d91e82ec9b4a5642ec736045a365c", "patch": "@@ -1757,6 +1757,30 @@ fn foo() { let bar = Bar; bar.fo$0o(); }\n     );\n }\n \n+#[test]\n+fn test_hover_variadic_function() {\n+    check(\n+        r#\"\n+extern \"C\" {\n+    pub fn foo(bar: i32, ...) -> i32;\n+}\n+\n+fn main() { let foo_test = unsafe { fo$0o(1, 2, 3); } }\n+\"#,\n+        expect![[r#\"\n+            *foo*\n+\n+            ```rust\n+            test\n+            ```\n+\n+            ```rust\n+            pub unsafe fn foo(bar: i32, ...) -> i32\n+            ```\n+        \"#]],\n+    );\n+}\n+\n #[test]\n fn test_hover_trait_has_impl_action() {\n     check_actions("}]}