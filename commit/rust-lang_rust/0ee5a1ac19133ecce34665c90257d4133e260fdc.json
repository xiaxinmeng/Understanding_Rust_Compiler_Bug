{"sha": "0ee5a1ac19133ecce34665c90257d4133e260fdc", "node_id": "C_kwDOAAsO6NoAKDBlZTVhMWFjMTkxMzNlY2NlMzQ2NjVjOTAyNTdkNDEzM2UyNjBmZGM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-16T00:02:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-16T00:02:46Z"}, "message": "Auto merge of #101711 - chenyukang:fix-101691, r=jyn514\n\nCopy stage0 binaries into stage0-sysroot\n\nFixes #101691", "tree": {"sha": "2c9972e76d797d5874fbe9e0bebcd54f84cc8674", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c9972e76d797d5874fbe9e0bebcd54f84cc8674"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ee5a1ac19133ecce34665c90257d4133e260fdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ee5a1ac19133ecce34665c90257d4133e260fdc", "html_url": "https://github.com/rust-lang/rust/commit/0ee5a1ac19133ecce34665c90257d4133e260fdc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ee5a1ac19133ecce34665c90257d4133e260fdc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf9ed0dd5836201843d28bbad50abfbe1913af2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf9ed0dd5836201843d28bbad50abfbe1913af2a", "html_url": "https://github.com/rust-lang/rust/commit/cf9ed0dd5836201843d28bbad50abfbe1913af2a"}, {"sha": "32f8eb2fee4d6781a79052b560abd10e12ebb34f", "url": "https://api.github.com/repos/rust-lang/rust/commits/32f8eb2fee4d6781a79052b560abd10e12ebb34f", "html_url": "https://github.com/rust-lang/rust/commit/32f8eb2fee4d6781a79052b560abd10e12ebb34f"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "f7ab6bf93fb7ea01375b6082f99252f1d659a558", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/0ee5a1ac19133ecce34665c90257d4133e260fdc/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ee5a1ac19133ecce34665c90257d4133e260fdc/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=0ee5a1ac19133ecce34665c90257d4133e260fdc", "patch": "@@ -436,6 +436,43 @@ impl Step for StdLink {\n         let libdir = builder.sysroot_libdir(target_compiler, target);\n         let hostdir = builder.sysroot_libdir(target_compiler, compiler.host);\n         add_to_sysroot(builder, &libdir, &hostdir, &libstd_stamp(builder, compiler, target));\n+\n+        if compiler.stage == 0 {\n+            // special handling for stage0, to make `rustup toolchain link` and `x dist --stage 0`\n+            // work for stage0-sysroot\n+\n+            // copy bin files from stage0/bin to stage0-sysroot/bin\n+            let sysroot = builder.out.join(&compiler.host.triple).join(\"stage0-sysroot\");\n+\n+            let host = compiler.host.triple;\n+            let stage0_bin_dir = builder.out.join(&host).join(\"stage0/bin\");\n+            let sysroot_bin_dir = sysroot.join(\"bin\");\n+            t!(fs::create_dir_all(&sysroot_bin_dir));\n+            builder.cp_r(&stage0_bin_dir, &sysroot_bin_dir);\n+\n+            // copy all *.so files from stage0/lib to stage0-sysroot/lib\n+            let stage0_lib_dir = builder.out.join(&host).join(\"stage0/lib\");\n+            if let Ok(files) = fs::read_dir(&stage0_lib_dir) {\n+                for file in files {\n+                    let file = t!(file);\n+                    let path = file.path();\n+                    if path.is_file() && is_dylib(&file.file_name().into_string().unwrap()) {\n+                        builder.copy(&path, &sysroot.join(\"lib\").join(path.file_name().unwrap()));\n+                    }\n+                }\n+            }\n+\n+            // copy codegen-backends from stage0\n+            let sysroot_codegen_backends = builder.sysroot_codegen_backends(compiler);\n+            t!(fs::create_dir_all(&sysroot_codegen_backends));\n+            let stage0_codegen_backends = builder\n+                .out\n+                .join(&host)\n+                .join(\"stage0/lib/rustlib\")\n+                .join(&host)\n+                .join(\"codegen-backends\");\n+            builder.cp_r(&stage0_codegen_backends, &sysroot_codegen_backends);\n+        }\n     }\n }\n "}]}