{"sha": "a5064618cb788b458034c2604348c67c50343004", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1MDY0NjE4Y2I3ODhiNDU4MDM0YzI2MDQzNDhjNjdjNTAzNDMwMDQ=", "commit": {"author": {"name": "Nanami", "email": "12036195+yokodake@users.noreply.github.com", "date": "2020-09-13T23:11:02Z"}, "committer": {"name": "yokodake", "email": "ngyj@cinnabar.fr", "date": "2020-10-05T09:34:03Z"}, "message": "Document unsafety in core::slice::memchr\n\nContributes to #66219", "tree": {"sha": "ef12869523b12c830e3b6a2ad45f3cdd407bc260", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef12869523b12c830e3b6a2ad45f3cdd407bc260"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5064618cb788b458034c2604348c67c50343004", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5064618cb788b458034c2604348c67c50343004", "html_url": "https://github.com/rust-lang/rust/commit/a5064618cb788b458034c2604348c67c50343004", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5064618cb788b458034c2604348c67c50343004/comments", "author": {"login": "yokodake", "id": 12036195, "node_id": "MDQ6VXNlcjEyMDM2MTk1", "avatar_url": "https://avatars.githubusercontent.com/u/12036195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yokodake", "html_url": "https://github.com/yokodake", "followers_url": "https://api.github.com/users/yokodake/followers", "following_url": "https://api.github.com/users/yokodake/following{/other_user}", "gists_url": "https://api.github.com/users/yokodake/gists{/gist_id}", "starred_url": "https://api.github.com/users/yokodake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yokodake/subscriptions", "organizations_url": "https://api.github.com/users/yokodake/orgs", "repos_url": "https://api.github.com/users/yokodake/repos", "events_url": "https://api.github.com/users/yokodake/events{/privacy}", "received_events_url": "https://api.github.com/users/yokodake/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yokodake", "id": 12036195, "node_id": "MDQ6VXNlcjEyMDM2MTk1", "avatar_url": "https://avatars.githubusercontent.com/u/12036195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yokodake", "html_url": "https://github.com/yokodake", "followers_url": "https://api.github.com/users/yokodake/followers", "following_url": "https://api.github.com/users/yokodake/following{/other_user}", "gists_url": "https://api.github.com/users/yokodake/gists{/gist_id}", "starred_url": "https://api.github.com/users/yokodake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yokodake/subscriptions", "organizations_url": "https://api.github.com/users/yokodake/orgs", "repos_url": "https://api.github.com/users/yokodake/repos", "events_url": "https://api.github.com/users/yokodake/events{/privacy}", "received_events_url": "https://api.github.com/users/yokodake/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efbaa413061c2a6e52f06f00a60ee7830fcf3ea5", "url": "https://api.github.com/repos/rust-lang/rust/commits/efbaa413061c2a6e52f06f00a60ee7830fcf3ea5", "html_url": "https://github.com/rust-lang/rust/commit/efbaa413061c2a6e52f06f00a60ee7830fcf3ea5"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "08077c700da69c0991f611e0ec5e7265f9c84fca", "filename": "library/core/src/slice/memchr.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a5064618cb788b458034c2604348c67c50343004/library%2Fcore%2Fsrc%2Fslice%2Fmemchr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5064618cb788b458034c2604348c67c50343004/library%2Fcore%2Fsrc%2Fslice%2Fmemchr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmemchr.rs?ref=a5064618cb788b458034c2604348c67c50343004", "patch": "@@ -1,8 +1,6 @@\n // Original implementation taken from rust-memchr.\n // Copyright 2015 Andrew Gallant, bluss and Nicolas Koch\n \n-// ignore-tidy-undocumented-unsafe\n-\n use crate::cmp;\n use crate::mem;\n \n@@ -72,6 +70,8 @@ fn memchr_general_case(x: u8, text: &[u8]) -> Option<usize> {\n     // search the body of the text\n     let repeated_x = repeat_byte(x);\n     while offset <= len - 2 * USIZE_BYTES {\n+        // SAFETY: the while's predicate guarantees a distance of at least 2 * usize_bytes\n+        // between the offset and the end of the slice.\n         unsafe {\n             let u = *(ptr.add(offset) as *const usize);\n             let v = *(ptr.add(offset + USIZE_BYTES) as *const usize);\n@@ -105,6 +105,8 @@ pub fn memrchr(x: u8, text: &[u8]) -> Option<usize> {\n     let (min_aligned_offset, max_aligned_offset) = {\n         // We call this just to obtain the length of the prefix and suffix.\n         // In the middle we always process two chunks at once.\n+        // SAFETY: transmuting `[u8]` to `[usize]` is safe except for size differences\n+        // which are handled by `align_to`.\n         let (prefix, _, suffix) = unsafe { text.align_to::<(Chunk, Chunk)>() };\n         (prefix.len(), len - suffix.len())\n     };\n@@ -121,6 +123,8 @@ pub fn memrchr(x: u8, text: &[u8]) -> Option<usize> {\n     let chunk_bytes = mem::size_of::<Chunk>();\n \n     while offset > min_aligned_offset {\n+        // SAFETY: offset starts at len - suffix.len(), as long as it is greater than\n+        // min_aligned_offset (prefix.len()) the remaining distance is at least 2 * chunk_bytes.\n         unsafe {\n             let u = *(ptr.offset(offset as isize - 2 * chunk_bytes as isize) as *const Chunk);\n             let v = *(ptr.offset(offset as isize - chunk_bytes as isize) as *const Chunk);"}]}