{"sha": "0f707f42c847814f60776a3b608c3016b00d7457", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmNzA3ZjQyYzg0NzgxNGY2MDc3NmEzYjYwOGMzMDE2YjAwZDc0NTc=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-11-21T18:37:43Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-11-29T20:09:10Z"}, "message": "Distinguish `stmt_mac`s that are followed by semicolons and those that aren't.", "tree": {"sha": "8e8c4a8fc17bbef3054d732999cbcd785123ab03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e8c4a8fc17bbef3054d732999cbcd785123ab03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f707f42c847814f60776a3b608c3016b00d7457", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f707f42c847814f60776a3b608c3016b00d7457", "html_url": "https://github.com/rust-lang/rust/commit/0f707f42c847814f60776a3b608c3016b00d7457", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f707f42c847814f60776a3b608c3016b00d7457/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e77491bd870d9b026ebfbda07caab103f111ce8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e77491bd870d9b026ebfbda07caab103f111ce8f", "html_url": "https://github.com/rust-lang/rust/commit/e77491bd870d9b026ebfbda07caab103f111ce8f"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "252ccdc3e1bbfcb8b90e7934210e831bf4452629", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0f707f42c847814f60776a3b608c3016b00d7457/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f707f42c847814f60776a3b608c3016b00d7457/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=0f707f42c847814f60776a3b608c3016b00d7457", "patch": "@@ -666,7 +666,8 @@ enum stmt_ {\n     // expr with trailing semi-colon (may have any type):\n     stmt_semi(@expr, node_id),\n \n-    stmt_mac(mac),\n+    // bool: is there a trailing sem-colon?\n+    stmt_mac(mac, bool),\n }\n \n // FIXME (pending discussion of #1697, #2178...): local should really be"}, {"sha": "5686ea11bc544e45de54ffedc05be44c313e8335", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f707f42c847814f60776a3b608c3016b00d7457/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f707f42c847814f60776a3b608c3016b00d7457/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=0f707f42c847814f60776a3b608c3016b00d7457", "patch": "@@ -40,7 +40,7 @@ pure fn stmt_id(s: stmt) -> node_id {\n       stmt_decl(_, id) => id,\n       stmt_expr(_, id) => id,\n       stmt_semi(_, id) => id,\n-      stmt_mac(_) => fail ~\"attempted to analyze unexpanded stmt\",\n+      stmt_mac(*) => fail ~\"attempted to analyze unexpanded stmt\",\n     }\n }\n "}, {"sha": "0d5b0070d2fe3cebee39999664fa98b4a7556972", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0f707f42c847814f60776a3b608c3016b00d7457/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f707f42c847814f60776a3b608c3016b00d7457/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=0f707f42c847814f60776a3b608c3016b00d7457", "patch": "@@ -272,12 +272,12 @@ fn expand_stmt(exts: HashMap<~str, syntax_extension>, cx: ext_ctxt,\n                orig: fn@(&&s: stmt_, span, ast_fold) -> (stmt_, span))\n     -> (stmt_, span)\n {\n-    let (mac, pth, tts) = biased_match! (\n-        (s)        ~ (stmt_mac(mac))          else return orig(s, sp, fld);\n+    let (mac, pth, tts, semi) = biased_match! (\n+        (s)        ~ (stmt_mac(mac, semi))    else return orig(s, sp, fld);\n         (mac.node) ~ (mac_invoc_tt(pth, tts)) else {\n             cx.span_bug(mac.span, ~\"naked syntactic bit\")\n         };\n-        => (mac, pth, tts));\n+        => (mac, pth, tts, semi));\n \n     assert(vec::len(pth.idents) == 1u);\n     let extname = cx.parse_sess().interner.get(pth.idents[0]);\n@@ -287,8 +287,10 @@ fn expand_stmt(exts: HashMap<~str, syntax_extension>, cx: ext_ctxt,\n \n         Some(normal_tt({expander: exp, span: exp_sp})) => {\n             let expanded = match exp(cx, mac.span, tts) {\n-                mr_expr(e) =>\n+                mr_expr(e) if !semi =>\n                     @{node: ast::stmt_expr(e, cx.next_id()), span: e.span},\n+                mr_expr(e) if semi =>\n+                    @{node: ast::stmt_semi(e, cx.next_id()), span: e.span},\n                 mr_any(_,_,stmt_mkr) => stmt_mkr(),\n                 _ => cx.span_fatal(\n                     pth.span,"}, {"sha": "b3ab5897045dc5b5d2de1078e7a3eec0e7414523", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f707f42c847814f60776a3b608c3016b00d7457/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f707f42c847814f60776a3b608c3016b00d7457/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=0f707f42c847814f60776a3b608c3016b00d7457", "patch": "@@ -310,7 +310,7 @@ fn noop_fold_stmt(s: stmt_, fld: ast_fold) -> stmt_ {\n       stmt_decl(d, nid) => stmt_decl(fld.fold_decl(d), fld.new_id(nid)),\n       stmt_expr(e, nid) => stmt_expr(fld.fold_expr(e), fld.new_id(nid)),\n       stmt_semi(e, nid) => stmt_semi(fld.fold_expr(e), fld.new_id(nid)),\n-      stmt_mac(mac) => stmt_mac(fold_mac(mac))\n+      stmt_mac(mac, semi) => stmt_mac(fold_mac(mac), semi)\n     };\n }\n "}, {"sha": "6851bebccc36f5afb4b5821d9582b6914757329f", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0f707f42c847814f60776a3b608c3016b00d7457/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f707f42c847814f60776a3b608c3016b00d7457/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=0f707f42c847814f60776a3b608c3016b00d7457", "patch": "@@ -2228,7 +2228,7 @@ impl Parser {\n \n             if id == token::special_idents::invalid {\n                 return @spanned(lo, hi, stmt_mac(\n-                    spanned(lo, hi, mac_invoc_tt(pth, tts))));\n+                    spanned(lo, hi, mac_invoc_tt(pth, tts)), false));\n             } else {\n                 // if it has a special ident, it's definitely an item\n                 return @spanned(lo, hi, stmt_decl(\n@@ -2380,12 +2380,13 @@ impl Parser {\n                             }\n                         }\n \n-                        stmt_mac(m) => {\n+                        stmt_mac(m, false) => {\n                             // Statement macro; might be an expr\n                             match self.token {\n                                 token::SEMI => {\n                                     self.bump();\n-                                    stmts.push(stmt);\n+                                    stmts.push(@{node: stmt_mac(m, true),\n+                                                 ..*stmt});\n                                 }\n                                 token::RBRACE => {\n                                     // if a block ends in `m!(arg)` without"}, {"sha": "75b962bcc93421c40d14a610350462adf46211b3", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0f707f42c847814f60776a3b608c3016b00d7457/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f707f42c847814f60776a3b608c3016b00d7457/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=0f707f42c847814f60776a3b608c3016b00d7457", "patch": "@@ -882,9 +882,10 @@ fn print_stmt(s: ps, st: ast::stmt) {\n         print_expr(s, expr);\n         word(s.s, ~\";\");\n       }\n-      ast::stmt_mac(mac) => {\n+      ast::stmt_mac(mac, semi) => {\n         space_if_not_bol(s);\n         print_mac(s, mac);\n+        if semi { word(s.s, ~\";\"); }\n       }\n     }\n     if parse::classify::stmt_ends_with_semi(st) { word(s.s, ~\";\"); }"}, {"sha": "2ddeba1f1cbbbc5c8f5cd9e35b42c995286ec6d9", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f707f42c847814f60776a3b608c3016b00d7457/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f707f42c847814f60776a3b608c3016b00d7457/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=0f707f42c847814f60776a3b608c3016b00d7457", "patch": "@@ -348,7 +348,7 @@ fn visit_stmt<E>(s: @stmt, e: E, v: vt<E>) {\n       stmt_decl(d, _) => v.visit_decl(d, e, v),\n       stmt_expr(ex, _) => v.visit_expr(ex, e, v),\n       stmt_semi(ex, _) => v.visit_expr(ex, e, v),\n-      stmt_mac(mac) => visit_mac(mac, e, v)\n+      stmt_mac(mac, _) => visit_mac(mac, e, v)\n     }\n }\n "}]}