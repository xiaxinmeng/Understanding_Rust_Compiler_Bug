{"sha": "b0d31704855a286c476d4208fd6cacde9153e252", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwZDMxNzA0ODU1YTI4NmM0NzZkNDIwOGZkNmNhY2RlOTE1M2UyNTI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-13T08:15:49Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-13T09:20:31Z"}, "message": "Rollup merge of #50670 - alexcrichton:remove-extern-crate-correct-span, r=Manishearth\n\nrustc: Include semicolon when removing `extern crate`\n\nCurrently the lint for removing `extern crate` suggests removing `extern crate`\nmost of the time, but the rest of the time it suggest replacing it with `use\ncrate_name`. Unfortunately though when spliced into the original code you're\nreplacing\n\n    extern crate foo;\n\nwith\n\n    use foo\n\nwhich is syntactically invalid! This commit ensure that the trailing semicolon\nis included in rustc's suggestion to ensure that the code continues to compile\nafterwards.", "tree": {"sha": "80f65c220a4c9a7673d24e0c0a630766ba626e37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80f65c220a4c9a7673d24e0c0a630766ba626e37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0d31704855a286c476d4208fd6cacde9153e252", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlr4A18ACgkQ/vbIBR0O\nATzOBRAAvMVvxz8QbYPm84VwAZuXvFiuwsSk8S0GkahiHtGQtg7XkHwJ/MFAslBJ\ny2+fDz9hOj1mrJul2PzZKkf8MzgS3hCDnVNj9MRHhK/mDlM9xK/Wr+McG0wJvuP5\njChK5sWVNNUCw0ckPAJmt8T8ITD6/vQgolo/OYsofFZOrs/J5NJJvMqs7z5cc34y\nVeHeND68ltIV4L2TwkIqXDw6UFRbQ6u/EwtE7mosoksnwR5ZMahpRsW2hf/Zx29K\nUoy66NS/yd+Wfe6UVeCq8FtAmptjxeZ2Zou3d+qenNbUXY9YoYjURW99o+54a/+X\nn2qL20FFv3FgkLtV7XmYlYAGOA/CRIj40/iyzr6ba1fyjA9AsvhcBBW3wagC+mHv\n74DyhBVMOV4GNGAVbRuZr4NqCirwqvmeBMwXnlWyFWR4DcwvHDaOzYCxq6P3plyW\nIM94ReiLjGgzersXxPELlBmAee2N85m66fFIwi7DM3ZCzSnimfHHVSIKDSRns6zZ\nqD5eP3QnTndvD6tlNwaDcC8KvJwF3GutzxtoLmVVmKq6B4G/UKr7DGE7OSJ6A1su\n4FBZ9vX+gvKIJJVu/FiH5HyC6QAq4WNNJpiTO+05gzNUStVsGEtsy8yhZuiSF0ph\ncVK7FofUuNT8kUiCtkmxqW2KFWmd2NAgvQLCid3/v3gkMBcQKUc=\n=zDEK\n-----END PGP SIGNATURE-----", "payload": "tree 80f65c220a4c9a7673d24e0c0a630766ba626e37\nparent ededa9dcd563c9191efeb4bc07c280281b595674\nparent 6de899f42db1901a637dd8c7d7b3c976d58200a2\nauthor kennytm <kennytm@gmail.com> 1526199349 +0800\ncommitter kennytm <kennytm@gmail.com> 1526203231 +0800\n\nRollup merge of #50670 - alexcrichton:remove-extern-crate-correct-span, r=Manishearth\n\nrustc: Include semicolon when removing `extern crate`\n\nCurrently the lint for removing `extern crate` suggests removing `extern crate`\nmost of the time, but the rest of the time it suggest replacing it with `use\ncrate_name`. Unfortunately though when spliced into the original code you're\nreplacing\n\n    extern crate foo;\n\nwith\n\n    use foo\n\nwhich is syntactically invalid! This commit ensure that the trailing semicolon\nis included in rustc's suggestion to ensure that the code continues to compile\nafterwards.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0d31704855a286c476d4208fd6cacde9153e252", "html_url": "https://github.com/rust-lang/rust/commit/b0d31704855a286c476d4208fd6cacde9153e252", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0d31704855a286c476d4208fd6cacde9153e252/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ededa9dcd563c9191efeb4bc07c280281b595674", "url": "https://api.github.com/repos/rust-lang/rust/commits/ededa9dcd563c9191efeb4bc07c280281b595674", "html_url": "https://github.com/rust-lang/rust/commit/ededa9dcd563c9191efeb4bc07c280281b595674"}, {"sha": "6de899f42db1901a637dd8c7d7b3c976d58200a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6de899f42db1901a637dd8c7d7b3c976d58200a2", "html_url": "https://github.com/rust-lang/rust/commit/6de899f42db1901a637dd8c7d7b3c976d58200a2"}], "stats": {"total": 118, "additions": 107, "deletions": 11}, "files": [{"sha": "c2dcbad8d24519fc1b1d23f5c78362185827fc51", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b0d31704855a286c476d4208fd6cacde9153e252/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0d31704855a286c476d4208fd6cacde9153e252/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=b0d31704855a286c476d4208fd6cacde9153e252", "patch": "@@ -1568,10 +1568,10 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ExternCrate {\n \n                 if let Some(orig) = orig {\n                     err.span_suggestion(it.span, &help,\n-                        format!(\"{}use {} as {}\", pub_, orig, it.name));\n+                        format!(\"{}use {} as {};\", pub_, orig, it.name));\n                 } else {\n                     err.span_suggestion(it.span, &help,\n-                        format!(\"{}use {}\", pub_, it.name));\n+                        format!(\"{}use {};\", pub_, it.name));\n                 }\n             } else {\n                 err.span_suggestion(it.span, \"remove it\", \"\".into());"}, {"sha": "ab5457018eda66d9e0a068faa17919396fd78062", "filename": "src/test/ui-fulldeps/unnecessary-extern-crate.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b0d31704855a286c476d4208fd6cacde9153e252/src%2Ftest%2Fui-fulldeps%2Funnecessary-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0d31704855a286c476d4208fd6cacde9153e252/src%2Ftest%2Fui-fulldeps%2Funnecessary-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Funnecessary-extern-crate.stderr?ref=b0d31704855a286c476d4208fd6cacde9153e252", "patch": "@@ -14,55 +14,55 @@ error: `extern crate` is unnecessary in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:19:1\n    |\n LL | extern crate alloc as x;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc as x`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc as x;`\n \n error: `extern crate` is unnecessary in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:25:1\n    |\n LL | pub extern crate test as y;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `pub use`: `pub use test as y`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `pub use`: `pub use test as y;`\n \n error: `extern crate` is unnecessary in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:28:1\n    |\n LL | pub extern crate libc;\n-   | ^^^^^^^^^^^^^^^^^^^^^^ help: use `pub use`: `pub use libc`\n+   | ^^^^^^^^^^^^^^^^^^^^^^ help: use `pub use`: `pub use libc;`\n \n error: `extern crate` is unnecessary in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:34:5\n    |\n LL |     extern crate alloc;\n-   |     ^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc`\n+   |     ^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc;`\n \n error: `extern crate` is unnecessary in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:37:5\n    |\n LL |     extern crate alloc as x;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc as x`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc as x;`\n \n error: `extern crate` is unnecessary in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:40:5\n    |\n LL |     pub extern crate test;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^ help: use `pub use`: `pub use test`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^ help: use `pub use`: `pub use test;`\n \n error: `extern crate` is unnecessary in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:43:5\n    |\n LL |     pub extern crate test as y;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `pub use`: `pub use test as y`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `pub use`: `pub use test as y;`\n \n error: `extern crate` is unnecessary in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:47:9\n    |\n LL |         extern crate alloc;\n-   |         ^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc`\n+   |         ^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc;`\n \n error: `extern crate` is unnecessary in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:50:9\n    |\n LL |         extern crate alloc as x;\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc as x`\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `use`: `use alloc as x;`\n \n error: aborting due to 10 previous errors\n "}, {"sha": "4275e80e7fe8b32bcdfb26b201ccb9b84f8f0c0c", "filename": "src/test/ui/suggestions/auxiliary/removing-extern-crate.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b0d31704855a286c476d4208fd6cacde9153e252/src%2Ftest%2Fui%2Fsuggestions%2Fauxiliary%2Fremoving-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0d31704855a286c476d4208fd6cacde9153e252/src%2Ftest%2Fui%2Fsuggestions%2Fauxiliary%2Fremoving-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fauxiliary%2Fremoving-extern-crate.rs?ref=b0d31704855a286c476d4208fd6cacde9153e252", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// intentionally blank"}, {"sha": "723137f5db0c12d68175827b0a61d9fa8160eaf9", "filename": "src/test/ui/suggestions/removing-extern-crate.fixed", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/b0d31704855a286c476d4208fd6cacde9153e252/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/b0d31704855a286c476d4208fd6cacde9153e252/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.fixed?ref=b0d31704855a286c476d4208fd6cacde9153e252", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: --edition 2018\n+// aux-build:removing-extern-crate.rs\n+// run-rustfix\n+// compile-pass\n+\n+#![warn(rust_2018_idioms)]\n+#![allow(unused_imports)]\n+\n+use std as foo;\n+\n+\n+mod another {\n+    use std as foo;\n+    use std;\n+}\n+\n+fn main() {}"}, {"sha": "29479086460e6cca9095f4ec5ebc646b7dd091c9", "filename": "src/test/ui/suggestions/removing-extern-crate.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/b0d31704855a286c476d4208fd6cacde9153e252/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0d31704855a286c476d4208fd6cacde9153e252/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.rs?ref=b0d31704855a286c476d4208fd6cacde9153e252", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: --edition 2018\n+// aux-build:removing-extern-crate.rs\n+// run-rustfix\n+// compile-pass\n+\n+#![warn(rust_2018_idioms)]\n+#![allow(unused_imports)]\n+\n+extern crate std as foo;\n+extern crate core;\n+\n+mod another {\n+    extern crate std as foo;\n+    extern crate std;\n+}\n+\n+fn main() {}"}, {"sha": "317703d0caa521d622b981a4090bdb19e777fbe3", "filename": "src/test/ui/suggestions/removing-extern-crate.stderr", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/b0d31704855a286c476d4208fd6cacde9153e252/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0d31704855a286c476d4208fd6cacde9153e252/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.stderr?ref=b0d31704855a286c476d4208fd6cacde9153e252", "patch": "@@ -0,0 +1,31 @@\n+warning: `extern crate` is unnecessary in the new edition\n+  --> $DIR/removing-extern-crate.rs:19:1\n+   |\n+LL | extern crate std as foo;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `use`: `use std as foo;`\n+   |\n+note: lint level defined here\n+  --> $DIR/removing-extern-crate.rs:16:9\n+   |\n+LL | #![warn(rust_2018_idioms)]\n+   |         ^^^^^^^^^^^^^^^^\n+   = note: #[warn(unnecessary_extern_crate)] implied by #[warn(rust_2018_idioms)]\n+\n+warning: `extern crate` is unnecessary in the new edition\n+  --> $DIR/removing-extern-crate.rs:20:1\n+   |\n+LL | extern crate core;\n+   | ^^^^^^^^^^^^^^^^^^ help: remove it\n+\n+warning: `extern crate` is unnecessary in the new edition\n+  --> $DIR/removing-extern-crate.rs:23:5\n+   |\n+LL |     extern crate std as foo;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `use`: `use std as foo;`\n+\n+warning: `extern crate` is unnecessary in the new edition\n+  --> $DIR/removing-extern-crate.rs:24:5\n+   |\n+LL |     extern crate std;\n+   |     ^^^^^^^^^^^^^^^^^ help: use `use`: `use std;`\n+"}]}