{"sha": "dd43d133252750154e323af3bc87d523bb1987ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNDNkMTMzMjUyNzUwMTU0ZTMyM2FmM2JjODdkNTIzYmIxOTg3YWU=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-22T15:45:08Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-05-01T23:12:36Z"}, "message": "Reduce duplication in `impl_dep_tracking_hash` macros", "tree": {"sha": "6d4b766f4c3dccfe522e8fc20d4e3018c8bd1e18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d4b766f4c3dccfe522e8fc20d4e3018c8bd1e18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd43d133252750154e323af3bc87d523bb1987ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd43d133252750154e323af3bc87d523bb1987ae", "html_url": "https://github.com/rust-lang/rust/commit/dd43d133252750154e323af3bc87d523bb1987ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd43d133252750154e323af3bc87d523bb1987ae/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b52769b804a12b7045ee1bce893a64045cdb974a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b52769b804a12b7045ee1bce893a64045cdb974a", "html_url": "https://github.com/rust-lang/rust/commit/b52769b804a12b7045ee1bce893a64045cdb974a"}], "stats": {"total": 118, "additions": 61, "deletions": 57}, "files": [{"sha": "a859da3721c51a0052a976be02592bedbe2c3eb9", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 61, "deletions": 57, "changes": 118, "blob_url": "https://github.com/rust-lang/rust/blob/dd43d133252750154e323af3bc87d523bb1987ae/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd43d133252750154e323af3bc87d523bb1987ae/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=dd43d133252750154e323af3bc87d523bb1987ae", "patch": "@@ -2332,17 +2332,17 @@ crate mod dep_tracking {\n     }\n \n     macro_rules! impl_dep_tracking_hash_via_hash {\n-        ($t:ty) => {\n+        ($($t:ty),+ $(,)?) => {$(\n             impl DepTrackingHash for $t {\n                 fn hash(&self, hasher: &mut DefaultHasher, _: ErrorOutputType) {\n                     Hash::hash(self, hasher);\n                 }\n             }\n-        };\n+        )+};\n     }\n \n     macro_rules! impl_dep_tracking_hash_for_sortable_vec_of {\n-        ($t:ty) => {\n+        ($($t:ty),+ $(,)?) => {$(\n             impl DepTrackingHash for Vec<$t> {\n                 fn hash(&self, hasher: &mut DefaultHasher, error_format: ErrorOutputType) {\n                     let mut elems: Vec<&$t> = self.iter().collect();\n@@ -2354,61 +2354,65 @@ crate mod dep_tracking {\n                     }\n                 }\n             }\n-        };\n-    }\n+        )+};\n+    }\n+\n+    impl_dep_tracking_hash_via_hash!(\n+        bool,\n+        usize,\n+        u64,\n+        String,\n+        PathBuf,\n+        lint::Level,\n+        Option<bool>,\n+        Option<u32>,\n+        Option<usize>,\n+        Option<NonZeroUsize>,\n+        Option<String>,\n+        Option<(String, u64)>,\n+        Option<Vec<String>>,\n+        Option<MergeFunctions>,\n+        Option<RelocModel>,\n+        Option<CodeModel>,\n+        Option<TlsModel>,\n+        Option<WasiExecModel>,\n+        Option<PanicStrategy>,\n+        Option<RelroLevel>,\n+        Option<InstrumentCoverage>,\n+        Option<lint::Level>,\n+        Option<PathBuf>,\n+        CrateType,\n+        MergeFunctions,\n+        PanicStrategy,\n+        RelroLevel,\n+        Passes,\n+        OptLevel,\n+        LtoCli,\n+        DebugInfo,\n+        UnstableFeatures,\n+        OutputTypes,\n+        NativeLibKind,\n+        SanitizerSet,\n+        CFGuard,\n+        TargetTriple,\n+        Edition,\n+        LinkerPluginLto,\n+        Option<SplitDebuginfo>,\n+        SwitchWithOptPath,\n+        Option<SymbolManglingVersion>,\n+        Option<SourceFileHashAlgorithm>,\n+        TrimmedDefPaths,\n+    );\n \n-    impl_dep_tracking_hash_via_hash!(bool);\n-    impl_dep_tracking_hash_via_hash!(usize);\n-    impl_dep_tracking_hash_via_hash!(u64);\n-    impl_dep_tracking_hash_via_hash!(String);\n-    impl_dep_tracking_hash_via_hash!(PathBuf);\n-    impl_dep_tracking_hash_via_hash!(lint::Level);\n-    impl_dep_tracking_hash_via_hash!(Option<bool>);\n-    impl_dep_tracking_hash_via_hash!(Option<u32>);\n-    impl_dep_tracking_hash_via_hash!(Option<usize>);\n-    impl_dep_tracking_hash_via_hash!(Option<NonZeroUsize>);\n-    impl_dep_tracking_hash_via_hash!(Option<String>);\n-    impl_dep_tracking_hash_via_hash!(Option<(String, u64)>);\n-    impl_dep_tracking_hash_via_hash!(Option<Vec<String>>);\n-    impl_dep_tracking_hash_via_hash!(Option<MergeFunctions>);\n-    impl_dep_tracking_hash_via_hash!(Option<RelocModel>);\n-    impl_dep_tracking_hash_via_hash!(Option<CodeModel>);\n-    impl_dep_tracking_hash_via_hash!(Option<TlsModel>);\n-    impl_dep_tracking_hash_via_hash!(Option<WasiExecModel>);\n-    impl_dep_tracking_hash_via_hash!(Option<PanicStrategy>);\n-    impl_dep_tracking_hash_via_hash!(Option<RelroLevel>);\n-    impl_dep_tracking_hash_via_hash!(Option<InstrumentCoverage>);\n-    impl_dep_tracking_hash_via_hash!(Option<lint::Level>);\n-    impl_dep_tracking_hash_via_hash!(Option<PathBuf>);\n-    impl_dep_tracking_hash_via_hash!(CrateType);\n-    impl_dep_tracking_hash_via_hash!(MergeFunctions);\n-    impl_dep_tracking_hash_via_hash!(PanicStrategy);\n-    impl_dep_tracking_hash_via_hash!(RelroLevel);\n-    impl_dep_tracking_hash_via_hash!(Passes);\n-    impl_dep_tracking_hash_via_hash!(OptLevel);\n-    impl_dep_tracking_hash_via_hash!(LtoCli);\n-    impl_dep_tracking_hash_via_hash!(DebugInfo);\n-    impl_dep_tracking_hash_via_hash!(UnstableFeatures);\n-    impl_dep_tracking_hash_via_hash!(OutputTypes);\n-    impl_dep_tracking_hash_via_hash!(NativeLibKind);\n-    impl_dep_tracking_hash_via_hash!(SanitizerSet);\n-    impl_dep_tracking_hash_via_hash!(CFGuard);\n-    impl_dep_tracking_hash_via_hash!(TargetTriple);\n-    impl_dep_tracking_hash_via_hash!(Edition);\n-    impl_dep_tracking_hash_via_hash!(LinkerPluginLto);\n-    impl_dep_tracking_hash_via_hash!(Option<SplitDebuginfo>);\n-    impl_dep_tracking_hash_via_hash!(SwitchWithOptPath);\n-    impl_dep_tracking_hash_via_hash!(Option<SymbolManglingVersion>);\n-    impl_dep_tracking_hash_via_hash!(Option<SourceFileHashAlgorithm>);\n-    impl_dep_tracking_hash_via_hash!(TrimmedDefPaths);\n-\n-    impl_dep_tracking_hash_for_sortable_vec_of!(String);\n-    impl_dep_tracking_hash_for_sortable_vec_of!(PathBuf);\n-    impl_dep_tracking_hash_for_sortable_vec_of!((PathBuf, PathBuf));\n-    impl_dep_tracking_hash_for_sortable_vec_of!(CrateType);\n-    impl_dep_tracking_hash_for_sortable_vec_of!((String, lint::Level));\n-    impl_dep_tracking_hash_for_sortable_vec_of!((String, Option<String>, NativeLibKind));\n-    impl_dep_tracking_hash_for_sortable_vec_of!((String, u64));\n+    impl_dep_tracking_hash_for_sortable_vec_of!(\n+        String,\n+        PathBuf,\n+        (PathBuf, PathBuf),\n+        CrateType,\n+        (String, lint::Level),\n+        (String, Option<String>, NativeLibKind),\n+        (String, u64)\n+    );\n \n     impl<T1, T2> DepTrackingHash for (T1, T2)\n     where"}]}