{"sha": "fa4f4fa67321b1a18176fddde4c187ab4b67c056", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNGY0ZmE2NzMyMWIxYTE4MTc2ZmRkZGU0YzE4N2FiNGI2N2MwNTY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-20T22:15:29Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-20T22:15:29Z"}, "message": "Merge pull request #4519 from cpeterso/impl-timespec-ord\n\nImplement Ord trait for Timespec", "tree": {"sha": "935390dd47f3df8c22484c4ee3ec640c1d025921", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/935390dd47f3df8c22484c4ee3ec640c1d025921"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa4f4fa67321b1a18176fddde4c187ab4b67c056", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa4f4fa67321b1a18176fddde4c187ab4b67c056", "html_url": "https://github.com/rust-lang/rust/commit/fa4f4fa67321b1a18176fddde4c187ab4b67c056", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa4f4fa67321b1a18176fddde4c187ab4b67c056/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b428cd55b8e1e4b5325b261bc7a474e0e7d8aba6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b428cd55b8e1e4b5325b261bc7a474e0e7d8aba6", "html_url": "https://github.com/rust-lang/rust/commit/b428cd55b8e1e4b5325b261bc7a474e0e7d8aba6"}, {"sha": "ed17ce1ddae2b8c80a6c97ab32efc15b5e4285b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed17ce1ddae2b8c80a6c97ab32efc15b5e4285b9", "html_url": "https://github.com/rust-lang/rust/commit/ed17ce1ddae2b8c80a6c97ab32efc15b5e4285b9"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "e1aea994db1fd6d6598390e37e1591eab13b4b15", "filename": "src/libstd/time.rs", "status": "modified", "additions": 46, "deletions": 2, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/fa4f4fa67321b1a18176fddde4c187ab4b67c056/src%2Flibstd%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa4f4fa67321b1a18176fddde4c187ab4b67c056/src%2Flibstd%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime.rs?ref=fa4f4fa67321b1a18176fddde4c187ab4b67c056", "patch": "@@ -10,7 +10,7 @@\n \n #[forbid(deprecated_mode)];\n \n-use core::cmp::Eq;\n+use core::cmp::{Eq, Ord};\n use core::int;\n use core::libc::{c_char, c_int, c_long, size_t, time_t};\n use core::i32;\n@@ -41,7 +41,7 @@ extern mod rustrt {\n pub struct Timespec { sec: i64, nsec: i32 }\n \n impl Timespec {\n-    static fn new(sec: i64, nsec: i32) -> Timespec {\n+    static pure fn new(sec: i64, nsec: i32) -> Timespec {\n         Timespec { sec: sec, nsec: nsec }\n     }\n }\n@@ -53,6 +53,16 @@ impl Timespec : Eq {\n     pure fn ne(&self, other: &Timespec) -> bool { !self.eq(other) }\n }\n \n+impl Timespec : Ord {\n+    pure fn lt(&self, other: &Timespec) -> bool {\n+        self.sec < other.sec ||\n+            (self.sec == other.sec && self.nsec < other.nsec)\n+    }\n+    pure fn le(&self, other: &Timespec) -> bool { !other.lt(self) }\n+    pure fn ge(&self, other: &Timespec) -> bool { !self.lt(other) }\n+    pure fn gt(&self, other: &Timespec) -> bool { !self.le(other) }\n+}\n+\n /**\n  * Returns the current time as a `timespec` containing the seconds and\n  * nanoseconds since 1970-01-01T00:00:00Z.\n@@ -1247,4 +1257,38 @@ mod tests {\n         assert utc.rfc822z() == ~\"Fri, 13 Feb 2009 23:31:30 -0000\";\n         assert utc.rfc3339() == ~\"2009-02-13T23:31:30Z\";\n     }\n+\n+    #[test]\n+    fn test_timespec_eq_ord() {\n+        use core::cmp::{eq, ge, gt, le, lt, ne};\n+\n+        let a = &Timespec::new(-2, 1);\n+        let b = &Timespec::new(-1, 2);\n+        let c = &Timespec::new(1, 2);\n+        let d = &Timespec::new(2, 1);\n+        let e = &Timespec::new(2, 1);\n+\n+        assert eq(d, e);\n+        assert ne(c, e);\n+\n+        assert lt(a, b);\n+        assert lt(b, c);\n+        assert lt(c, d);\n+\n+        assert le(a, b);\n+        assert le(b, c);\n+        assert le(c, d);\n+        assert le(d, e);\n+        assert le(e, d);\n+\n+        assert ge(b, a);\n+        assert ge(c, b);\n+        assert ge(d, c);\n+        assert ge(e, d);\n+        assert ge(d, e);\n+\n+        assert gt(b, a);\n+        assert gt(c, b);\n+        assert gt(d, c);\n+    }\n }"}]}