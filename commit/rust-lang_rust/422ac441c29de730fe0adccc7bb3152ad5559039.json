{"sha": "422ac441c29de730fe0adccc7bb3152ad5559039", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyMmFjNDQxYzI5ZGU3MzBmZTBhZGNjYzdiYjMxNTJhZDU1NTkwMzk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-19T15:31:26Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-19T15:31:26Z"}, "message": "Minor cleanups", "tree": {"sha": "d36799aa736dc1e51cf8c566c2c1053ceb960443", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d36799aa736dc1e51cf8c566c2c1053ceb960443"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/422ac441c29de730fe0adccc7bb3152ad5559039", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/422ac441c29de730fe0adccc7bb3152ad5559039", "html_url": "https://github.com/rust-lang/rust/commit/422ac441c29de730fe0adccc7bb3152ad5559039", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/422ac441c29de730fe0adccc7bb3152ad5559039/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5da1dc9a8b6b568add92c30dca0341328c138b31", "url": "https://api.github.com/repos/rust-lang/rust/commits/5da1dc9a8b6b568add92c30dca0341328c138b31", "html_url": "https://github.com/rust-lang/rust/commit/5da1dc9a8b6b568add92c30dca0341328c138b31"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "549c5efe7cc22ddc526ecf74bb22b52e5a3c80d7", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/422ac441c29de730fe0adccc7bb3152ad5559039/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/422ac441c29de730fe0adccc7bb3152ad5559039/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=422ac441c29de730fe0adccc7bb3152ad5559039", "patch": "@@ -520,7 +520,6 @@ fn highlight_element(\n         NAME_REF => {\n             let name_ref = element.into_node().and_then(ast::NameRef::cast).unwrap();\n             highlight_func_by_name_ref(sema, &name_ref).unwrap_or_else(|| {\n-                let possibly_unsafe = is_possibly_unsafe(&name_ref);\n                 match classify_name_ref(sema, &name_ref) {\n                     Some(name_kind) => match name_kind {\n                         NameRefClass::ExternCrate(_) => HighlightTag::Module.into(),\n@@ -532,6 +531,7 @@ fn highlight_element(\n                                     binding_hash = Some(calc_binding_hash(&name, *shadow_count))\n                                 }\n                             };\n+                            let possibly_unsafe = is_possibly_unsafe(&name_ref);\n                             highlight_def(sema, db, def, Some(name_ref), possibly_unsafe)\n                         }\n                         NameRefClass::FieldShorthand { .. } => HighlightTag::Field.into(),"}]}