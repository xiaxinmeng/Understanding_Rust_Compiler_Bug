{"sha": "4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NjBjYjgzMGZjZTYzZmNmZmRjNDU1OGY0MjgxYWFhYzZhM2ExYmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-07-28T16:34:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-07-28T16:34:59Z"}, "message": "Auto merge of #62910 - petrochenkov:buildwarn2, r=Mark-Simulacrum\n\ncleanup: Remove lint annotations in specific crates that are already enforced by rustbuild\n\nRemove some random unnecessary lint `allow`s.\n\nDeny `unused_lifetimes` through rustbuild.\n\nr? @Mark-Simulacrum", "tree": {"sha": "3863f24b2c59b79009465a6f60990acdfccffe30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3863f24b2c59b79009465a6f60990acdfccffe30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "html_url": "https://github.com/rust-lang/rust/commit/4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "023525dbda35748a10713471b948974b68a1c2cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/023525dbda35748a10713471b948974b68a1c2cc", "html_url": "https://github.com/rust-lang/rust/commit/023525dbda35748a10713471b948974b68a1c2cc"}, {"sha": "1a370109ec176fa33a9cac2fe143b43c56ebcfd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a370109ec176fa33a9cac2fe143b43c56ebcfd9", "html_url": "https://github.com/rust-lang/rust/commit/1a370109ec176fa33a9cac2fe143b43c56ebcfd9"}], "stats": {"total": 595, "additions": 182, "deletions": 413}, "files": [{"sha": "bd1a87c5744d39d8c1a552a0925ff18a53b627d8", "filename": "src/bootstrap/bin/main.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Fbootstrap%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Fbootstrap%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Fmain.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -5,7 +5,8 @@\n //! parent directory, and otherwise documentation can be found throughout the `build`\n //! directory in each respective module.\n \n-#![deny(warnings)]\n+// NO-RUSTC-WRAPPER\n+#![deny(warnings, rust_2018_idioms, unused_lifetimes)]\n \n use std::env;\n "}, {"sha": "23f81c2c8769242f015a11d28a3b72710ec5cd13", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -15,7 +15,8 @@\n //! switching compilers for the bootstrap and for build scripts will probably\n //! never get replaced.\n \n-#![deny(warnings)]\n+// NO-RUSTC-WRAPPER\n+#![deny(warnings, rust_2018_idioms, unused_lifetimes)]\n \n use std::env;\n use std::ffi::OsString;\n@@ -126,8 +127,11 @@ fn main() {\n \n     if env::var_os(\"RUSTC_DENY_WARNINGS\").is_some() &&\n        env::var_os(\"RUSTC_EXTERNAL_TOOL\").is_none() {\n+        // When extending this list, search for `NO-RUSTC-WRAPPER` and add the new lints\n+        // there as well, some code doesn't go through this `rustc` wrapper.\n         cmd.arg(\"-Dwarnings\");\n         cmd.arg(\"-Drust_2018_idioms\");\n+        cmd.arg(\"-Dunused_lifetimes\");\n         // cfg(not(bootstrap)): Remove this during the next stage 0 compiler update.\n         // `-Drustc::internal` is a new feature and `rustc_version` mis-reports the `stage`.\n         let cfg_not_bootstrap = stage != \"0\" && crate_name != Some(\"rustc_version\");"}, {"sha": "ff38ee8788f5652c2c551ff3db1a120a89a27c2c", "filename": "src/bootstrap/bin/rustdoc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustdoc.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -2,7 +2,8 @@\n //!\n //! See comments in `src/bootstrap/rustc.rs` for more information.\n \n-#![deny(warnings)]\n+// NO-RUSTC-WRAPPER\n+#![deny(warnings, rust_2018_idioms, unused_lifetimes)]\n \n use std::env;\n use std::process::Command;"}, {"sha": "c2e64ef51a746e13e5b8aafab226465d9f324553", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -103,8 +103,9 @@\n //! More documentation can be found in each respective module below, and you can\n //! also check out the `src/bootstrap/README.md` file for more information.\n \n-#![deny(rust_2018_idioms)]\n-#![deny(warnings)]\n+// NO-RUSTC-WRAPPER\n+#![deny(warnings, rust_2018_idioms, unused_lifetimes)]\n+\n #![feature(core_intrinsics)]\n #![feature(drain_filter)]\n \n@@ -1312,7 +1313,7 @@ fn chmod(path: &Path, perms: u32) {\n fn chmod(_path: &Path, _perms: u32) {}\n \n \n-impl<'a> Compiler {\n+impl Compiler {\n     pub fn with_stage(mut self, stage: u32) -> Compiler {\n         self.stage = stage;\n         self"}, {"sha": "c30307f3a1b28d7a09ed09f3631b3bf619bee66b", "filename": "src/build_helper/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Fbuild_helper%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Fbuild_helper%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuild_helper%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,4 +1,5 @@\n-#![deny(rust_2018_idioms)]\n+// NO-RUSTC-WRAPPER\n+#![deny(warnings, rust_2018_idioms, unused_lifetimes)]\n \n use std::fs::File;\n use std::path::{Path, PathBuf};"}, {"sha": "c0f345443b90715aeeddefac52f478e5cfd4b160", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -62,8 +62,6 @@\n #![warn(missing_docs)]\n #![warn(missing_debug_implementations)]\n #![deny(intra_doc_link_resolution_failure)] // rustdoc is run without -D warnings\n-\n-#![deny(rust_2018_idioms)]\n #![allow(explicit_outlives_requirements)]\n \n #![cfg_attr(not(test), feature(generator_trait))]"}, {"sha": "eca726cd41032f28d1638398de4d593a019af07f", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1838,6 +1838,7 @@ impl PartialEq for String {\n macro_rules! impl_eq {\n     ($lhs:ty, $rhs: ty) => {\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        #[allow(unused_lifetimes)]\n         impl<'a, 'b> PartialEq<$rhs> for $lhs {\n             #[inline]\n             fn eq(&self, other: &$rhs) -> bool { PartialEq::eq(&self[..], &other[..]) }\n@@ -1846,6 +1847,7 @@ macro_rules! impl_eq {\n         }\n \n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        #[allow(unused_lifetimes)]\n         impl<'a, 'b> PartialEq<$lhs> for $rhs {\n             #[inline]\n             fn eq(&self, other: &$lhs) -> bool { PartialEq::eq(&self[..], &other[..]) }"}, {"sha": "6d774f3fecd9267cf1cf812895100ea6e30e7874", "filename": "src/liballoc/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Fliballoc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Fliballoc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -8,7 +8,6 @@\n #![feature(trusted_len)]\n #![feature(try_reserve)]\n #![feature(unboxed_closures)]\n-#![deny(rust_2018_idioms)]\n \n use std::hash::{Hash, Hasher};\n use std::collections::hash_map::DefaultHasher;"}, {"sha": "690d8344acff96b8667fefe0b10f2972a8e0c650", "filename": "src/libarena/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -11,9 +11,6 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        test(no_crate_inject, attr(deny(warnings))))]\n \n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n #![feature(core_intrinsics)]\n #![feature(dropck_eyepatch)]\n #![feature(raw_vec_internals)]"}, {"sha": "517893a1967dc63b39801bc06ec2e4e4891a2e70", "filename": "src/libcore/array.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibcore%2Farray.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibcore%2Farray.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Farray.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -217,7 +217,7 @@ where\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, 'b, A, B, const N: usize> PartialEq<[B; N]> for [A; N]\n+impl<A, B, const N: usize> PartialEq<[B; N]> for [A; N]\n where\n     A: PartialEq<B>,\n     [A; N]: LengthAtMost32,\n@@ -234,7 +234,7 @@ where\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, 'b, A, B, const N: usize> PartialEq<[B]> for [A; N]\n+impl<A, B, const N: usize> PartialEq<[B]> for [A; N]\n where\n     A: PartialEq<B>,\n     [A; N]: LengthAtMost32,\n@@ -250,7 +250,7 @@ where\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, 'b, A, B, const N: usize> PartialEq<[A; N]> for [B]\n+impl<A, B, const N: usize> PartialEq<[A; N]> for [B]\n where\n     B: PartialEq<A>,\n     [A; N]: LengthAtMost32,\n@@ -266,7 +266,7 @@ where\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, 'b, A, B, const N: usize> PartialEq<&'b [B]> for [A; N]\n+impl<'b, A, B, const N: usize> PartialEq<&'b [B]> for [A; N]\n where\n     A: PartialEq<B>,\n     [A; N]: LengthAtMost32,\n@@ -282,7 +282,7 @@ where\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, 'b, A, B, const N: usize> PartialEq<[A; N]> for &'b [B]\n+impl<'b, A, B, const N: usize> PartialEq<[A; N]> for &'b [B]\n where\n     B: PartialEq<A>,\n     [A; N]: LengthAtMost32,\n@@ -298,7 +298,7 @@ where\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, 'b, A, B, const N: usize> PartialEq<&'b mut [B]> for [A; N]\n+impl<'b, A, B, const N: usize> PartialEq<&'b mut [B]> for [A; N]\n where\n     A: PartialEq<B>,\n     [A; N]: LengthAtMost32,\n@@ -314,7 +314,7 @@ where\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, 'b, A, B, const N: usize> PartialEq<[A; N]> for &'b mut [B]\n+impl<'b, A, B, const N: usize> PartialEq<[A; N]> for &'b mut [B]\n where\n     B: PartialEq<A>,\n     [A; N]: LengthAtMost32,"}, {"sha": "bdfc1e66fd494a7c99efad7d49854739889f542b", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -62,8 +62,6 @@\n #![warn(missing_docs)]\n #![warn(missing_debug_implementations)]\n #![deny(intra_doc_link_resolution_failure)] // rustdoc is run without -D warnings\n-\n-#![deny(rust_2018_idioms)]\n #![allow(explicit_outlives_requirements)]\n \n #![feature(allow_internal_unstable)]"}, {"sha": "88a56174629f9ed2846008708ba0d07f39b36970", "filename": "src/libcore/pin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibcore%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibcore%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpin.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -775,7 +775,7 @@ where\n {}\n \n #[stable(feature = \"pin\", since = \"1.33.0\")]\n-impl<'a, P, U> DispatchFromDyn<Pin<U>> for Pin<P>\n+impl<P, U> DispatchFromDyn<Pin<U>> for Pin<P>\n where\n     P: DispatchFromDyn<U>,\n {}"}, {"sha": "f0d011fe6b2c0c02f779d26ad0a4937e23e54efe", "filename": "src/libcore/ptr/unique.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibcore%2Fptr%2Funique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibcore%2Fptr%2Funique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr%2Funique.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -172,7 +172,7 @@ impl<T: ?Sized> From<&T> for Unique<T> {\n }\n \n #[unstable(feature = \"ptr_internals\", issue = \"0\")]\n-impl<'a, T: ?Sized> From<NonNull<T>> for Unique<T> {\n+impl<T: ?Sized> From<NonNull<T>> for Unique<T> {\n     #[inline]\n     fn from(p: NonNull<T>) -> Self {\n         unsafe { Unique::new_unchecked(p.as_ptr()) }"}, {"sha": "a3b108b2e9cea00bc07f9e3f55504336c7f5e222", "filename": "src/libcore/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -32,7 +32,6 @@\n #![feature(const_fn)]\n #![feature(iter_partition_in_place)]\n #![feature(iter_is_partitioned)]\n-#![warn(rust_2018_idioms)]\n \n extern crate test;\n "}, {"sha": "83e24a48ea0085cb2885fd10d8b27ce915ac8a3d", "filename": "src/libfmt_macros/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibfmt_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibfmt_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfmt_macros%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -8,9 +8,6 @@\n        html_playground_url = \"https://play.rust-lang.org/\",\n        test(attr(deny(warnings))))]\n \n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n #![feature(nll)]\n #![feature(rustc_private)]\n #![feature(unicode_internals)]"}, {"sha": "bb996e5f906d75c888e6b928308d0df2db005462", "filename": "src/libgraphviz/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibgraphviz%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibgraphviz%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgraphviz%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -274,8 +274,6 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        test(attr(allow(unused_variables), deny(warnings))))]\n \n-#![deny(rust_2018_idioms)]\n-\n #![feature(nll)]\n \n use LabelText::*;"}, {"sha": "ee9dd858ef45fd15be349e6dba2f29296305b7a6", "filename": "src/libpanic_abort/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibpanic_abort%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibpanic_abort%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_abort%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -10,7 +10,6 @@\n #![panic_runtime]\n \n #![allow(unused_features)]\n-#![deny(rust_2018_idioms)]\n \n #![feature(core_intrinsics)]\n #![feature(libc)]"}, {"sha": "06e6e768f459c03a36f4ef3324a95284c4cbd00c", "filename": "src/libpanic_unwind/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibpanic_unwind%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibpanic_unwind%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -17,8 +17,6 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\")]\n \n-#![deny(rust_2018_idioms)]\n-\n #![feature(core_intrinsics)]\n #![feature(lang_items)]\n #![feature(libc)]"}, {"sha": "2cde1f65adf9c484ab0aee45fe6c978fda30cbb9", "filename": "src/libproc_macro/bridge/scoped_cell.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibproc_macro%2Fbridge%2Fscoped_cell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibproc_macro%2Fbridge%2Fscoped_cell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro%2Fbridge%2Fscoped_cell.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -5,6 +5,7 @@ use std::mem;\n use std::ops::{Deref, DerefMut};\n \n /// Type lambda application, with a lifetime.\n+#[allow(unused_lifetimes)]\n pub trait ApplyL<'a> {\n     type Out;\n }"}, {"sha": "c0f7714ca211af612fa2cb61fd026056d7ade99e", "filename": "src/libproc_macro/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibproc_macro%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibproc_macro%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -17,8 +17,6 @@\n        test(no_crate_inject, attr(deny(warnings))),\n        test(attr(allow(dead_code, deprecated, unused_variables, unused_mut))))]\n \n-#![deny(rust_2018_idioms)]\n-\n #![feature(nll)]\n #![feature(staged_api)]\n #![feature(const_fn)]"}, {"sha": "0d12ba01c87a2ed5deb9ba1cdea6f1d42d8c3114", "filename": "src/libprofiler_builtins/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibprofiler_builtins%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibprofiler_builtins%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibprofiler_builtins%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -7,4 +7,3 @@\n #![allow(unused_features)]\n #![feature(nll)]\n #![feature(staged_api)]\n-#![deny(rust_2018_idioms)]"}, {"sha": "1edadbd5bae1a9aca5d20b9cb57f1920d5b22bb3", "filename": "src/librustc/error_codes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ferror_codes.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![allow(non_snake_case)]\n-\n // Error messages for EXXXX errors.\n // Each message should start and end with a new line, and be wrapped to 80 characters.\n // In vim you can `:set tw=80` and use `gq` to wrap paragraphs. Use `:set tw=0` to disable."}, {"sha": "4b3fefcd4debbaf0afa859d0018ea65cce298e6d", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -28,9 +28,6 @@\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n #![feature(arbitrary_self_types)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n@@ -81,8 +78,7 @@ extern crate libc;\n \n // Use the test crate here so we depend on getopts through it. This allow tools to link to both\n // librustc_driver and libtest.\n-#[allow(unused_extern_crates)]\n-extern crate test;\n+extern crate test as _;\n \n #[macro_use]\n mod macros;"}, {"sha": "886915db4498ce40167565482e04743f1c802e0b", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1628,7 +1628,7 @@ impl RustcOptGroup {\n // *unstable* options, i.e., options that are only enabled when the\n // user also passes the `-Z unstable-options` debugging flag.\n mod opt {\n-    // The `fn opt_u` etc below are written so that we can use them\n+    // The `fn flag*` etc below are written so that we can use them\n     // in the future; do not warn about them not being used right now.\n     #![allow(dead_code)]\n "}, {"sha": "a25560ff762a1115d1bb74b4fa69df1ab98204f6", "filename": "src/librustc/ty/query/job.rs", "status": "modified", "additions": 16, "deletions": 33, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc%2Fty%2Fquery%2Fjob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc%2Fty%2Fquery%2Fjob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fjob.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,35 +1,25 @@\n-#![allow(warnings)]\n-\n-use std::mem;\n-use std::process;\n-use std::{fmt, ptr};\n+use crate::ty::context::TyCtxt;\n+use crate::ty::query::plumbing::CycleError;\n+use crate::ty::query::Query;\n+use crate::ty::tls;\n \n-use rustc_data_structures::fx::FxHashSet;\n-use rustc_data_structures::sync::{Lock, LockGuard, Lrc, Weak};\n-use rustc_data_structures::OnDrop;\n-use rustc_data_structures::jobserver;\n+use rustc_data_structures::sync::Lrc;\n use syntax_pos::Span;\n \n-use crate::ty::tls;\n-use crate::ty::query::Query;\n-use crate::ty::query::plumbing::CycleError;\n #[cfg(not(parallel_compiler))]\n-use crate::ty::query::{\n-    plumbing::TryGetJob,\n-    config::QueryDescription,\n-};\n-use crate::ty::context::TyCtxt;\n+use std::ptr;\n \n #[cfg(parallel_compiler)]\n use {\n-    rustc_rayon_core as rayon_core,\n     parking_lot::{Mutex, Condvar},\n-    std::sync::atomic::Ordering,\n-    std::thread,\n-    std::iter,\n-    std::iter::FromIterator,\n+    rustc_data_structures::{jobserver, OnDrop},\n+    rustc_data_structures::fx::FxHashSet,\n+    rustc_data_structures::stable_hasher::{StableHasher, HashStable},\n+    rustc_data_structures::sync::Lock,\n+    rustc_rayon_core as rayon_core,\n     syntax_pos::DUMMY_SP,\n-    rustc_data_structures::stable_hasher::{StableHasherResult, StableHasher, HashStable},\n+    std::{mem, process, thread},\n+    std::iter::FromIterator,\n };\n \n /// Indicates the state of a query for a given key in a query map.\n@@ -81,7 +71,7 @@ impl<'tcx> QueryJob<'tcx> {\n         span: Span,\n     ) -> Result<(), CycleError<'tcx>> {\n         tls::with_related_context(tcx, move |icx| {\n-            let mut waiter = Lrc::new(QueryWaiter {\n+            let waiter = Lrc::new(QueryWaiter {\n                 query: icx.query.clone(),\n                 span,\n                 cycle: Lock::new(None),\n@@ -138,6 +128,7 @@ impl<'tcx> QueryJob<'tcx> {\n         self.latch.set();\n     }\n \n+    #[cfg(parallel_compiler)]\n     fn as_ptr(&self) -> *const QueryJob<'tcx> {\n         self as *const _\n     }\n@@ -431,7 +422,7 @@ fn remove_cycle<'tcx>(\n         let usage = usage.as_ref().map(|(span, query)| (*span, query.info.query.clone()));\n \n         // Create the cycle error\n-        let mut error = CycleError {\n+        let error = CycleError {\n             usage,\n             cycle: stack.iter().map(|&(s, ref q)| QueryInfo {\n                 span: s,\n@@ -463,21 +454,13 @@ fn remove_cycle<'tcx>(\n /// Must only be called when a deadlock is about to happen.\n #[cfg(parallel_compiler)]\n pub unsafe fn handle_deadlock() {\n-    use syntax;\n-    use syntax_pos;\n-\n     let registry = rayon_core::Registry::current();\n \n     let gcx_ptr = tls::GCX_PTR.with(|gcx_ptr| {\n         gcx_ptr as *const _\n     });\n     let gcx_ptr = &*gcx_ptr;\n \n-    let syntax_globals = syntax::GLOBALS.with(|syntax_globals| {\n-        syntax_globals as *const _\n-    });\n-    let syntax_globals = &*syntax_globals;\n-\n     let syntax_pos_globals = syntax_pos::GLOBALS.with(|syntax_pos_globals| {\n         syntax_pos_globals as *const _\n     });"}, {"sha": "9e6d5a6f62434e95dbf458c7192fff5ebfdb490e", "filename": "src/librustc_apfloat/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_apfloat%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_apfloat%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_apfloat%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -32,7 +32,6 @@\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![forbid(unsafe_code)]\n-#![deny(rust_2018_idioms)]\n \n #![feature(nll)]\n "}, {"sha": "d6c8e54c18db7ea9e9f6d9bdefc1e2ce0d5e3dd3", "filename": "src/librustc_asan/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_asan%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_asan%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_asan%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -6,5 +6,3 @@\n #![unstable(feature = \"sanitizer_runtime_lib\",\n             reason = \"internal implementation detail of sanitizers\",\n             issue = \"0\")]\n-\n-#![deny(rust_2018_idioms)]"}, {"sha": "dc818278a4b748c03799c0ce9df9850b3dfb157f", "filename": "src/librustc_ast_borrowck/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_ast_borrowck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_ast_borrowck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_borrowck%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,8 +1,6 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![allow(non_camel_case_types)]\n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n \n #![feature(in_band_lifetimes)]\n #![feature(nll)]"}, {"sha": "c6b5dc03a6f0ab04dc8eac39d5250c8667cdf49e", "filename": "src/librustc_codegen_llvm/error_codes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_llvm%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_llvm%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ferror_codes.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![allow(non_snake_case)]\n-\n register_long_diagnostics! {\n \n E0511: r##\""}, {"sha": "199170182e4b467bc1fd3d1427cfeee6611cfc5e", "filename": "src/librustc_codegen_llvm/intrinsic.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![allow(non_upper_case_globals)]\n-\n use crate::attributes;\n use crate::llvm;\n use crate::llvm_util;"}, {"sha": "a630817fb33866960ba5b7cb049f940ab04484f9", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -12,7 +12,6 @@\n #![feature(crate_visibility_modifier)]\n #![feature(extern_types)]\n #![feature(in_band_lifetimes)]\n-#![allow(unused_attributes)]\n #![feature(libc)]\n #![feature(nll)]\n #![feature(rustc_diagnostic_macros)]\n@@ -22,8 +21,6 @@\n #![feature(static_nobundle)]\n #![feature(trusted_len)]\n #![feature(mem_take)]\n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n \n use back::write::{create_target_machine, create_informational_target_machine};\n use syntax_pos::symbol::Symbol;"}, {"sha": "d82e1c68df094726ea6497ddaac7b8c50980b8d8", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,3 +1,6 @@\n+#![allow(non_camel_case_types)]\n+#![allow(non_upper_case_globals)]\n+\n use super::debuginfo::{\n     DIBuilder, DIDescriptor, DIFile, DILexicalBlock, DISubprogram, DIType,\n     DIBasicType, DIDerivedType, DICompositeType, DIScope, DIVariable,"}, {"sha": "57815933af02b2961b52bc79a87cc84199a3ae07", "filename": "src/librustc_codegen_llvm/llvm/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_llvm%2Fllvm%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_llvm%2Fllvm%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fmod.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,7 +1,4 @@\n-#![allow(non_upper_case_globals)]\n-#![allow(non_camel_case_types)]\n #![allow(non_snake_case)]\n-#![deny(bare_trait_objects)]\n \n pub use self::IntPredicate::*;\n pub use self::RealPredicate::*;"}, {"sha": "8d6cd0bcf474bd4efe947111bf7dbf74cc968951", "filename": "src/librustc_codegen_llvm/type_.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_llvm%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_llvm%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ftype_.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![allow(non_upper_case_globals)]\n-\n pub use crate::llvm::Type;\n \n use crate::llvm;"}, {"sha": "fc04976f511b38d065b6c0777e66028041fc066f", "filename": "src/librustc_codegen_ssa/base.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_ssa%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_ssa%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fbase.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -781,12 +781,6 @@ impl CrateInfo {\n     }\n }\n \n-fn is_codegened_item(tcx: TyCtxt<'_>, id: DefId) -> bool {\n-    let (all_mono_items, _) =\n-        tcx.collect_and_partition_mono_items(LOCAL_CRATE);\n-    all_mono_items.contains(&id)\n-}\n-\n pub fn provide_both(providers: &mut Providers<'_>) {\n     providers.backend_optimization_level = |tcx, cratenum| {\n         let for_speed = match tcx.sess.opts.optimize {"}, {"sha": "8d46dcb7c09c38f26f792e568044ca227bfe04ab", "filename": "src/librustc_codegen_ssa/error_codes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_ssa%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_ssa%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ferror_codes.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![allow(non_snake_case)]\n-\n register_long_diagnostics! {\n \n E0668: r##\""}, {"sha": "73ef16e0091460ee6e8b16f593b2001ec79d9b7c", "filename": "src/librustc_codegen_ssa/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_ssa%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_ssa%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -11,10 +11,6 @@\n #![feature(nll)]\n #![feature(trusted_len)]\n #![feature(mem_take)]\n-#![allow(unused_attributes)]\n-#![allow(dead_code)]\n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n \n #![recursion_limit=\"256\"]\n "}, {"sha": "262cfb1658ef99c79f07a1de6ab4d114189bcd08", "filename": "src/librustc_codegen_utils/codegen_backend.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -5,8 +5,6 @@\n //! This API is completely unstable and subject to change.\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n-#![deny(warnings)]\n-#![feature(box_syntax)]\n \n use std::any::Any;\n use std::sync::mpsc;"}, {"sha": "4ea375b59b2c02f55189efcff63c9f9618c3091c", "filename": "src/librustc_codegen_utils/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_utils%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_codegen_utils%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -10,15 +10,11 @@\n #![feature(core_intrinsics)]\n #![feature(never_type)]\n #![feature(nll)]\n-#![allow(unused_attributes)]\n #![feature(rustc_diagnostic_macros)]\n #![feature(in_band_lifetimes)]\n \n #![recursion_limit=\"256\"]\n \n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n #[macro_use]\n extern crate rustc;\n "}, {"sha": "749709521e86688983df241104475e2fbffd6870", "filename": "src/librustc_data_structures/graph/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_data_structures%2Fgraph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_data_structures%2Fgraph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fgraph%2Fmod.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -39,6 +39,7 @@ where\n     }\n }\n \n+#[allow(unused_lifetimes)]\n pub trait GraphSuccessors<'graph> {\n     type Item;\n     type Iter: Iterator<Item = Self::Item>;\n@@ -54,6 +55,7 @@ where\n     ) -> <Self as GraphPredecessors<'_>>::Iter;\n }\n \n+#[allow(unused_lifetimes)]\n pub trait GraphPredecessors<'graph> {\n     type Item;\n     type Iter: Iterator<Item = Self::Item>;"}, {"sha": "bb27637912b316902da5cf3b9a953462454783e7", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -26,7 +26,6 @@\n #![cfg_attr(unix, feature(libc))]\n #![cfg_attr(test, feature(test))]\n \n-#![deny(rust_2018_idioms)]\n #![cfg_attr(not(bootstrap), allow(rustc::default_hash_types))]\n \n #[macro_use]"}, {"sha": "3b49ce710633e541992143318dd59d7666b53b90", "filename": "src/librustc_data_structures/owning_ref/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_data_structures%2Fowning_ref%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_data_structures%2Fowning_ref%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fowning_ref%2Fmod.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -283,6 +283,7 @@ impl<T> Erased for T {}\n /// Helper trait for erasing the concrete type of what an owner dereferences to,\n /// for example `Box<T> -> Box<Erased>`. This would be unneeded with\n /// higher kinded types support in the language.\n+#[allow(unused_lifetimes)]\n pub unsafe trait IntoErased<'a> {\n     /// Owner with the dereference type substituted to `Erased`.\n     type Erased;\n@@ -293,6 +294,7 @@ pub unsafe trait IntoErased<'a> {\n /// Helper trait for erasing the concrete type of what an owner dereferences to,\n /// for example `Box<T> -> Box<Erased + Send>`. This would be unneeded with\n /// higher kinded types support in the language.\n+#[allow(unused_lifetimes)]\n pub unsafe trait IntoErasedSend<'a> {\n     /// Owner with the dereference type substituted to `Erased + Send`.\n     type Erased: Send;\n@@ -303,6 +305,7 @@ pub unsafe trait IntoErasedSend<'a> {\n /// Helper trait for erasing the concrete type of what an owner dereferences to,\n /// for example `Box<T> -> Box<Erased + Send + Sync>`. This would be unneeded with\n /// higher kinded types support in the language.\n+#[allow(unused_lifetimes)]\n pub unsafe trait IntoErasedSendSync<'a> {\n     /// Owner with the dereference type substituted to `Erased + Send + Sync`.\n     type Erased: Send + Sync;"}, {"sha": "77b7ef96d3f6ca941851075aef24660aa682f1bb", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -16,9 +16,6 @@\n \n #![recursion_limit=\"256\"]\n \n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n pub extern crate getopts;\n #[cfg(unix)]\n extern crate libc;"}, {"sha": "3f758c2521bc008e7f54927c7b7742045f3d116c", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -5,12 +5,9 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![feature(crate_visibility_modifier)]\n-#![allow(unused_attributes)]\n #![cfg_attr(unix, feature(libc))]\n #![feature(nll)]\n #![feature(optin_builtin_traits)]\n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n \n pub use emitter::ColorConfig;\n "}, {"sha": "eaf08d76b9905c16ef7f9b41ceeca31ebfb24430", "filename": "src/librustc_fs_util/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_fs_util%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_fs_util%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_fs_util%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rust_2018_idioms)]\n-\n use std::path::{Path, PathBuf};\n use std::ffi::CString;\n use std::fs;"}, {"sha": "b257311138587bb8055cd41ec7c6dd72af058d8f", "filename": "src/librustc_incremental/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_incremental%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_incremental%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -8,9 +8,6 @@\n \n #![recursion_limit=\"256\"]\n \n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n #[macro_use] extern crate rustc;\n #[macro_use] extern crate log;\n "}, {"sha": "fef60a47dc4e7adfbed803e2978c168f918bafe2", "filename": "src/librustc_interface/interface.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_interface%2Finterface.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_interface%2Finterface.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Finterface.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -12,7 +12,6 @@ use rustc_data_structures::OnDrop;\n use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::fx::{FxHashSet, FxHashMap};\n use rustc_metadata::cstore::CStore;\n-use std::io::Write;\n use std::path::PathBuf;\n use std::result;\n use std::sync::{Arc, Mutex};"}, {"sha": "2e593d441553a014c28a85bafb16e1b033e272f4", "filename": "src/librustc_interface/lib.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_interface%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_interface%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -6,11 +6,6 @@\n #![feature(generators)]\n #![cfg_attr(unix, feature(libc))]\n \n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n-#![allow(unused_imports)]\n-\n #![recursion_limit=\"256\"]\n \n #[cfg(unix)]"}, {"sha": "8dd2595967fd79130e0e108b86d52650070cab87", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -2,54 +2,47 @@ use crate::interface::{Compiler, Result};\n use crate::util;\n use crate::proc_macro_decls;\n \n-use log::{debug, info, warn, log_enabled};\n+use log::{info, warn, log_enabled};\n use rustc::dep_graph::DepGraph;\n use rustc::hir;\n use rustc::hir::lowering::lower_crate;\n use rustc::hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc::lint;\n use rustc::middle::{self, reachable, resolve_lifetime, stability};\n use rustc::middle::cstore::CrateStore;\n-use rustc::middle::privacy::AccessLevels;\n use rustc::ty::{self, AllArenas, Resolutions, TyCtxt, GlobalCtxt};\n use rustc::ty::steal::Steal;\n use rustc::traits;\n use rustc::util::common::{time, ErrorReported};\n-use rustc::util::profiling::ProfileCategory;\n-use rustc::session::{CompileResult, CrateDisambiguator, Session};\n+use rustc::session::Session;\n use rustc::session::config::{self, CrateType, Input, OutputFilenames, OutputType};\n use rustc::session::search_paths::PathKind;\n-use rustc_allocator as allocator;\n use rustc_ast_borrowck as borrowck;\n use rustc_codegen_ssa::back::link::emit_metadata;\n use rustc_codegen_utils::codegen_backend::CodegenBackend;\n use rustc_codegen_utils::link::filename_for_metadata;\n use rustc_data_structures::{box_region_allow_access, declare_box_region_type, parallel};\n-use rustc_data_structures::fingerprint::Fingerprint;\n-use rustc_data_structures::stable_hasher::StableHasher;\n use rustc_data_structures::sync::{Lrc, ParallelIterator, par_iter};\n use rustc_incremental;\n-use rustc_incremental::DepGraphFuture;\n use rustc_metadata::creader::CrateLoader;\n use rustc_metadata::cstore::{self, CStore};\n use rustc_mir as mir;\n-use rustc_passes::{self, ast_validation, hir_stats, loops, rvalue_promotion, layout_test};\n+use rustc_passes::{self, ast_validation, hir_stats, layout_test};\n use rustc_plugin as plugin;\n use rustc_plugin::registry::Registry;\n use rustc_privacy;\n use rustc_resolve::{Resolver, ResolverArenas};\n use rustc_traits;\n use rustc_typeck as typeck;\n-use syntax::{self, ast, attr, diagnostics, visit};\n+use syntax::{self, ast, diagnostics, visit};\n use syntax::early_buffered_lints::BufferedEarlyLint;\n use syntax::ext::base::{NamedSyntaxExtension, ExtCtxt};\n use syntax::mut_visit::MutVisitor;\n use syntax::parse::{self, PResult};\n use syntax::util::node_count::NodeCounter;\n-use syntax::util::lev_distance::find_best_match_for_name;\n use syntax::symbol::Symbol;\n use syntax::feature_gate::AttributeType;\n-use syntax_pos::{FileName, edition::Edition, hygiene};\n+use syntax_pos::FileName;\n use syntax_ext;\n \n use rustc_serialize::json;\n@@ -61,12 +54,11 @@ use std::ffi::OsString;\n use std::fs;\n use std::io::{self, Write};\n use std::iter;\n-use std::path::{Path, PathBuf};\n+use std::path::PathBuf;\n use std::sync::mpsc;\n use std::cell::RefCell;\n use std::rc::Rc;\n use std::mem;\n-use std::ops::Generator;\n \n pub fn parse<'a>(sess: &'a Session, input: &Input) -> PResult<'a, ast::Crate> {\n     sess.diagnostic()"}, {"sha": "2e7952cd004477d99e311946a49fee1fac8b6b7d", "filename": "src/librustc_interface/queries.rs", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_interface%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_interface%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fqueries.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -2,30 +2,18 @@ use crate::interface::{Compiler, Result};\n use crate::passes::{self, BoxedResolver, ExpansionResult, BoxedGlobalCtxt, PluginInfo};\n \n use rustc_incremental::DepGraphFuture;\n-use rustc_data_structures::sync::Lrc;\n-use rustc::session::config::{Input, OutputFilenames, OutputType};\n-use rustc::session::Session;\n+use rustc::session::config::{OutputFilenames, OutputType};\n use rustc::util::common::{time, ErrorReported};\n-use rustc::util::profiling::ProfileCategory;\n-use rustc::lint;\n use rustc::hir;\n use rustc::hir::def_id::LOCAL_CRATE;\n-use rustc::ty;\n use rustc::ty::steal::Steal;\n use rustc::dep_graph::DepGraph;\n-use rustc_passes::hir_stats;\n-use rustc_plugin::registry::Registry;\n-use rustc_serialize::json;\n use std::cell::{Ref, RefMut, RefCell};\n-use std::ops::Deref;\n use std::rc::Rc;\n use std::sync::mpsc;\n use std::any::Any;\n use std::mem;\n-use syntax::parse::{self, PResult};\n-use syntax::util::node_count::NodeCounter;\n-use syntax::{self, ast, attr, diagnostics, visit};\n-use syntax_pos::hygiene;\n+use syntax::{self, ast};\n \n /// Represent the result of a query.\n /// This result can be stolen with the `take` method and returned with the `give` method."}, {"sha": "f007a0cf2abee5ef23437a4d0ff8a7abedf27606", "filename": "src/librustc_interface/util.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_interface%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_interface%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Futil.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -203,8 +203,6 @@ pub fn spawn_thread_pool<F: FnOnce() -> R + Send, R: Send>(\n     f: F,\n ) -> R {\n     use rayon::{ThreadPool, ThreadPoolBuilder};\n-    use syntax;\n-    use syntax_pos;\n \n     let gcx_ptr = &Lock::new(0);\n "}, {"sha": "d3975360525d0673e7c2029d3e5c379003701bc9", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -19,9 +19,6 @@\n \n #![recursion_limit=\"256\"]\n \n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n #[macro_use]\n extern crate rustc;\n "}, {"sha": "647d473f01572ac24a74ace2e7d5fab2dd6448b8", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,4 +1,3 @@\n-#![deny(rust_2018_idioms)]\n #![feature(nll)]\n #![feature(static_nobundle)]\n "}, {"sha": "d6c8e54c18db7ea9e9f6d9bdefc1e2ce0d5e3dd3", "filename": "src/librustc_lsan/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_lsan%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_lsan%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lsan%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -6,5 +6,3 @@\n #![unstable(feature = \"sanitizer_runtime_lib\",\n             reason = \"internal implementation detail of sanitizers\",\n             issue = \"0\")]\n-\n-#![deny(rust_2018_idioms)]"}, {"sha": "85e2247ebd7e38b50f91b7427194b93771e87da4", "filename": "src/librustc_macros/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_macros%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_macros%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,4 @@\n #![feature(proc_macro_hygiene)]\n-#![deny(rust_2018_idioms)]\n #![cfg_attr(not(bootstrap), allow(rustc::default_hash_types))]\n \n #![recursion_limit=\"128\"]"}, {"sha": "0708a6243bf296c92f96dbbc8c1d71a882975209", "filename": "src/librustc_metadata/error_codes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_metadata%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_metadata%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Ferror_codes.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![allow(non_snake_case)]\n-\n use syntax::{register_diagnostics, register_long_diagnostics};\n \n register_long_diagnostics! {"}, {"sha": "c96d02d9b37dee5649ee9626642a26e2a3476b0d", "filename": "src/librustc_metadata/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_metadata%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_metadata%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -15,9 +15,6 @@\n \n #![recursion_limit=\"256\"]\n \n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n extern crate libc;\n extern crate proc_macro;\n "}, {"sha": "50c0640f885f2f25a1102812bee95aa6ce1cf67b", "filename": "src/librustc_mir/borrow_check/nll/type_check/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,7 +1,5 @@\n //! This pass type-checks the MIR to ensure it is not broken.\n \n-#![allow(unreachable_code)]\n-\n use crate::borrow_check::borrow_set::BorrowSet;\n use crate::borrow_check::location::LocationTable;\n use crate::borrow_check::nll::constraints::{OutlivesConstraintSet, OutlivesConstraint};"}, {"sha": "a5e44a1933c9d3602346aa0e2130e57e4e23d14f", "filename": "src/librustc_mir/error_codes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_mir%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_mir%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ferror_codes.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![allow(non_snake_case)]\n-\n register_long_diagnostics! {\n \n "}, {"sha": "20d5e54d2ce4939683a1dbf2d10dc4847cf9ed29", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -26,9 +26,6 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n \n #![recursion_limit=\"256\"]\n \n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n #[macro_use] extern crate log;\n #[macro_use] extern crate rustc;\n #[macro_use] extern crate rustc_data_structures;"}, {"sha": "d6c8e54c18db7ea9e9f6d9bdefc1e2ce0d5e3dd3", "filename": "src/librustc_msan/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_msan%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_msan%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_msan%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -6,5 +6,3 @@\n #![unstable(feature = \"sanitizer_runtime_lib\",\n             reason = \"internal implementation detail of sanitizers\",\n             issue = \"0\")]\n-\n-#![deny(rust_2018_idioms)]"}, {"sha": "cd33943e77e203c0921294ec4cedbd11d3cca1ec", "filename": "src/librustc_passes/error_codes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_passes%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_passes%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Ferror_codes.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![allow(non_snake_case)]\n-\n use syntax::{register_diagnostics, register_long_diagnostics};\n \n register_long_diagnostics! {"}, {"sha": "5614b570b927aa646265747fbeca93a79dac03d0", "filename": "src/librustc_passes/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_passes%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_passes%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -13,9 +13,6 @@\n \n #![recursion_limit=\"256\"]\n \n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n #[macro_use]\n extern crate rustc;\n "}, {"sha": "b5f6a8d905d314542f6e9c14f89aa9a886bf6fdf", "filename": "src/librustc_plugin/error_codes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_plugin%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_plugin%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Ferror_codes.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![allow(non_snake_case)]\n-\n use syntax::{register_diagnostics, register_long_diagnostics};\n \n register_long_diagnostics! {"}, {"sha": "25a7a8cdeb6d67c717a480dff1ca1d35deb05ea1", "filename": "src/librustc_plugin/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_plugin%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_plugin%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -59,8 +59,6 @@\n \n #![recursion_limit=\"256\"]\n \n-#![deny(rust_2018_idioms)]\n-\n pub use registry::Registry;\n \n mod error_codes;"}, {"sha": "70a799d426a07f5ce686d4343cee538742714b79", "filename": "src/librustc_privacy/error_codes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_privacy%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_privacy%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Ferror_codes.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![allow(non_snake_case)]\n-\n register_long_diagnostics! {\n \n E0445: r##\""}, {"sha": "e291f40ffd27d9c7140ae94bb2e5c42dd9303883", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,8 +1,5 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n #![feature(in_band_lifetimes)]\n #![feature(nll)]\n #![feature(rustc_diagnostic_macros)]"}, {"sha": "e01f53786edab2cd3a239c928fda288f0c4e10cd", "filename": "src/librustc_resolve/error_codes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_resolve%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_resolve%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Ferror_codes.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![allow(non_snake_case)]\n-\n use syntax::{register_diagnostics, register_long_diagnostics};\n \n // Error messages for EXXXX errors.  Each message should start and end with a"}, {"sha": "bc5898fe78da7872686e68ce302bd44fe7af64b6", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -10,9 +10,6 @@\n \n #![recursion_limit=\"256\"]\n \n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n pub use rustc::hir::def::{Namespace, PerNS};\n \n use Determinacy::*;"}, {"sha": "9edb4c0fa67482a6098f60355334b3c1cb6511a6", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,12 +1,8 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![feature(nll)]\n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-#![allow(unused_attributes)]\n \n #![recursion_limit=\"256\"]\n \n-\n mod dumper;\n mod dump_visitor;\n #[macro_use]"}, {"sha": "1aec990064a86f001553210ce0dbcd3e87c8f21e", "filename": "src/librustc_target/abi/call/hexagon.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_target%2Fabi%2Fcall%2Fhexagon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_target%2Fabi%2Fcall%2Fhexagon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fhexagon.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![allow(non_upper_case_globals)]\n-\n use crate::abi::call::{FnType, ArgType};\n \n fn classify_ret_ty<Ty>(ret: &mut ArgType<'_, Ty>) {"}, {"sha": "a349dc26e834cc295599239f6f80a52fb0fc0ce9", "filename": "src/librustc_target/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_target%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_target%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -13,9 +13,6 @@\n #![feature(nll)]\n #![feature(slice_patterns)]\n \n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n #[macro_use] extern crate log;\n \n pub mod abi;"}, {"sha": "ebe6b7c6138850b346c6fda8bbb3388b33aec267", "filename": "src/librustc_traits/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_traits%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_traits%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,9 +1,6 @@\n //! New recursive solver modeled on Chalk's recursive solver. Most of\n //! the guts are broken up into modules; see the comments in those modules.\n \n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n #![feature(crate_visibility_modifier)]\n #![feature(in_band_lifetimes)]\n #![feature(nll)]"}, {"sha": "d6c8e54c18db7ea9e9f6d9bdefc1e2ce0d5e3dd3", "filename": "src/librustc_tsan/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_tsan%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_tsan%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_tsan%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -6,5 +6,3 @@\n #![unstable(feature = \"sanitizer_runtime_lib\",\n             reason = \"internal implementation detail of sanitizers\",\n             issue = \"0\")]\n-\n-#![deny(rust_2018_idioms)]"}, {"sha": "4bdcb0fa2910c8893e21ca36fcd112410b2cadd8", "filename": "src/librustc_typeck/error_codes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_typeck%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_typeck%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Ferror_codes.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,7 +1,5 @@\n // ignore-tidy-filelength\n \n-#![allow(non_snake_case)]\n-\n register_long_diagnostics! {\n \n E0023: r##\""}, {"sha": "a34b137aca97196c09dc1eda3410597451015082", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -73,9 +73,6 @@ This API is completely unstable and subject to change.\n \n #![recursion_limit=\"256\"]\n \n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n #[macro_use] extern crate log;\n #[macro_use] extern crate syntax;\n "}, {"sha": "a8d7ff4a2eb8bd8a7c7b3a66e26b49baa301ccf4", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,6 +1,3 @@\n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        html_playground_url = \"https://play.rust-lang.org/\")]\n "}, {"sha": "2ad85c603d1e4930ada216b78c5e987e837abb79", "filename": "src/libserialize/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibserialize%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibserialize%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -8,8 +8,6 @@ Core encoding and decoding interfaces.\n        html_playground_url = \"https://play.rust-lang.org/\",\n        test(attr(allow(unused_variables), deny(warnings))))]\n \n-#![deny(rust_2018_idioms)]\n-\n #![feature(box_syntax)]\n #![feature(core_intrinsics)]\n #![feature(specialization)]"}, {"sha": "8db7bc12cd3088e0266be92c537670c2762cd532", "filename": "src/libstd/build.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibstd%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibstd%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbuild.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![deny(warnings)]\n-\n use std::env;\n \n fn main() {"}, {"sha": "8fd76eabe394371a0b569c496cf4031a6b876086", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -209,9 +209,8 @@\n #![warn(missing_docs)]\n #![warn(missing_debug_implementations)]\n #![deny(intra_doc_link_resolution_failure)] // rustdoc is run without -D warnings\n-\n-#![deny(rust_2018_idioms)]\n #![allow(explicit_outlives_requirements)]\n+#![allow(unused_lifetimes)]\n \n // Tell the compiler to link to either panic_abort or panic_unwind\n #![needs_panic_runtime]"}, {"sha": "e5e55a6444a2eb8012d5231eec876a333bc2f1f1", "filename": "src/libsyntax/diagnostics/plugin.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibsyntax%2Fdiagnostics%2Fplugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibsyntax%2Fdiagnostics%2Fplugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostics%2Fplugin.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -123,7 +123,6 @@ pub fn expand_register_diagnostic<'cx>(ecx: &'cx mut ExtCtxt<'_>,\n     MacEager::items(smallvec![])\n }\n \n-#[allow(deprecated)]\n pub fn expand_build_diagnostic_array<'cx>(ecx: &'cx mut ExtCtxt<'_>,\n                                           span: Span,\n                                           token_tree: &[TokenTree])\n@@ -149,7 +148,7 @@ pub fn expand_build_diagnostic_array<'cx>(ecx: &'cx mut ExtCtxt<'_>,\n                 ecx.span_bug(span, &format!(\n                     \"error writing metadata for triple `{}` and crate `{}`, error: {}, \\\n                      cause: {:?}\",\n-                    target_triple, crate_name, e.description(), e.cause()\n+                    target_triple, crate_name, e.description(), e.source()\n                 ));\n             }\n         });"}, {"sha": "1ba29011f75a40cf867b8039292a2e27d9b2e2de", "filename": "src/libsyntax/error_codes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibsyntax%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibsyntax%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ferror_codes.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![allow(non_snake_case)]\n-\n // Error messages for EXXXX errors.\n // Each message should start and end with a new line, and be wrapped to 80 characters.\n // In vim you can `:set tw=80` and use `gq` to wrap paragraphs. Use `:set tw=0` to disable."}, {"sha": "83c9c692bd30c9fb7e993b2e36bdecc40fe6d435", "filename": "src/libsyntax/json.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibsyntax%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibsyntax%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fjson.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -122,7 +122,6 @@ struct Diagnostic {\n }\n \n #[derive(RustcEncodable)]\n-#[allow(unused_attributes)]\n struct DiagnosticSpan {\n     file_name: String,\n     byte_start: u32,"}, {"sha": "1fd20fa0b31285a2b60680ead343ed8f55c130a7", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -7,9 +7,6 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        test(attr(deny(warnings))))]\n \n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n #![feature(bind_by_move_pattern_guards)]\n #![feature(box_syntax)]\n #![feature(const_fn)]"}, {"sha": "5982a4df226c2d189062369b234c1ad3c7790781", "filename": "src/libsyntax_ext/error_codes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibsyntax_ext%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibsyntax_ext%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Ferror_codes.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![allow(non_snake_case)]\n-\n use syntax::register_long_diagnostics;\n \n // Error messages for EXXXX errors."}, {"sha": "da11f2ff23fb572116802327e024463dfee53a34", "filename": "src/libsyntax_ext/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibsyntax_ext%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibsyntax_ext%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -3,9 +3,6 @@\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n #![feature(crate_visibility_modifier)]\n #![feature(decl_macro)]\n #![feature(mem_take)]"}, {"sha": "acc13aec4022999c39c0c2271c67238b3a90b93f", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -6,9 +6,6 @@\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n-#![deny(rust_2018_idioms)]\n-#![deny(unused_lifetimes)]\n-\n #![feature(const_fn)]\n #![feature(crate_visibility_modifier)]\n #![feature(nll)]"}, {"sha": "ad1a83316be7c316cc78d8c71d8532595f4f695b", "filename": "src/libterm/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibterm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibterm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -35,8 +35,6 @@\n        test(attr(deny(warnings))))]\n #![deny(missing_docs)]\n \n-#![deny(rust_2018_idioms)]\n-\n #![cfg_attr(windows, feature(libc))]\n \n use std::io::prelude::*;"}, {"sha": "653dce32e50cac6734cf9ac4962a8ae59fadb0f4", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -17,7 +17,6 @@\n // this crate, which relies on this attribute (rather than the value of `--crate-name` passed by\n // cargo) to detect this crate.\n \n-#![deny(rust_2018_idioms)]\n #![crate_name = \"test\"]\n #![unstable(feature = \"test\", issue = \"27812\")]\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\", test(attr(deny(warnings))))]"}, {"sha": "b9ce71b6b847ec1dddc6bcb331d62ac1afe0ad8c", "filename": "src/libunwind/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibunwind%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Flibunwind%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunwind%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,8 +1,6 @@\n #![no_std]\n #![unstable(feature = \"panic_unwind\", issue = \"32837\")]\n \n-#![deny(rust_2018_idioms)]\n-\n #![feature(link_cfg)]\n #![feature(nll)]\n #![feature(staged_api)]"}, {"sha": "afc92638fda978c767f917da8872e07b149d8878", "filename": "src/test/run-make-fulldeps/issue-19371/foo.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Frun-make-fulldeps%2Fissue-19371%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Frun-make-fulldeps%2Fissue-19371%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fissue-19371%2Ffoo.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -2,8 +2,7 @@\n \n extern crate rustc;\n extern crate rustc_interface;\n-#[allow(unused_extern_crates)]\n-extern crate rustc_driver;\n+extern crate rustc_driver as _;\n extern crate syntax;\n \n use rustc::session::DiagnosticOutput;"}, {"sha": "dde73ba69f7bf30f0de9732d52172caa35e25cad", "filename": "src/test/ui-fulldeps/plugin-as-extern-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui-fulldeps%2Fplugin-as-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui-fulldeps%2Fplugin-as-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fplugin-as-extern-crate.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -5,7 +5,6 @@\n // libsyntax is not compiled for it.\n \n #![deny(plugin_as_library)]\n-#![allow(unused_extern_crates)]\n \n extern crate attr_plugin_test; //~ ERROR compiler plugin used as an ordinary library\n "}, {"sha": "4daa4a2c821208660fd16ddd62c3df4dd79d105e", "filename": "src/test/ui-fulldeps/plugin-as-extern-crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui-fulldeps%2Fplugin-as-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui-fulldeps%2Fplugin-as-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fplugin-as-extern-crate.stderr?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,5 @@\n error: compiler plugin used as an ordinary library\n-  --> $DIR/plugin-as-extern-crate.rs:10:1\n+  --> $DIR/plugin-as-extern-crate.rs:9:1\n    |\n LL | extern crate attr_plugin_test;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "aa6a973d7bd85709e62bfd02ff55d3a8ebac2b24", "filename": "src/test/ui/enable-unstable-lib-feature.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fenable-unstable-lib-feature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fenable-unstable-lib-feature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenable-unstable-lib-feature.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -6,7 +6,6 @@\n #![deny(non_snake_case)] // To trigger a hard error\n \n // Shouldn't generate a warning about unstable features\n-#[allow(unused_extern_crates)]\n extern crate stability_cfg2;\n \n pub fn BOGUS() { } //~ ERROR"}, {"sha": "d5b8c0efaad37b8c2264c65cfe4f3c352c348053", "filename": "src/test/ui/enable-unstable-lib-feature.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fenable-unstable-lib-feature.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fenable-unstable-lib-feature.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenable-unstable-lib-feature.stderr?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,5 @@\n error: function `BOGUS` should have a snake case name\n-  --> $DIR/enable-unstable-lib-feature.rs:12:8\n+  --> $DIR/enable-unstable-lib-feature.rs:11:8\n    |\n LL | pub fn BOGUS() { }\n    |        ^^^^^ help: convert the identifier to snake case: `bogus`"}, {"sha": "e291268be86e56333249110c4e63dcc58a4f1e75", "filename": "src/test/ui/error-codes/E0254.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Ferror-codes%2FE0254.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Ferror-codes%2FE0254.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0254.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,4 +1,4 @@\n-#![allow(unused_extern_crates, non_camel_case_types)]\n+#![allow(non_camel_case_types)]\n \n extern crate alloc;\n "}, {"sha": "e7e94d58635c1748b2daaa8ff546edfd47bc6b82", "filename": "src/test/ui/error-codes/E0259.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Ferror-codes%2FE0259.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Ferror-codes%2FE0259.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0259.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,4 @@\n #![feature(rustc_private)]\n-#![allow(unused_extern_crates)]\n \n extern crate alloc;\n "}, {"sha": "4a48a4d554167021a4ad055080fc13d072b7206a", "filename": "src/test/ui/error-codes/E0259.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Ferror-codes%2FE0259.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Ferror-codes%2FE0259.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0259.stderr?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,5 @@\n error[E0259]: the name `alloc` is defined multiple times\n-  --> $DIR/E0259.rs:6:1\n+  --> $DIR/E0259.rs:5:1\n    |\n LL | extern crate alloc;\n    | ------------------- previous import of the extern crate `alloc` here"}, {"sha": "f7eb220b08f597292433e769aa7adf2e2e1af443", "filename": "src/test/ui/error-codes/E0260.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Ferror-codes%2FE0260.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Ferror-codes%2FE0260.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0260.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![allow(unused_extern_crates)]\n-\n extern crate alloc;\n \n mod alloc {"}, {"sha": "737b20b91ec25af863b76b742f5a4e77e5755f24", "filename": "src/test/ui/error-codes/E0260.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Ferror-codes%2FE0260.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Ferror-codes%2FE0260.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0260.stderr?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,5 @@\n error[E0260]: the name `alloc` is defined multiple times\n-  --> $DIR/E0260.rs:5:1\n+  --> $DIR/E0260.rs:3:1\n    |\n LL | extern crate alloc;\n    | ------------------- previous import of the extern crate `alloc` here"}, {"sha": "04313872d27131efce86bd052bc2c194d11addd5", "filename": "src/test/ui/issues/issue-36881.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fissues%2Fissue-36881.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fissues%2Fissue-36881.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-36881.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,7 +1,6 @@\n // aux-build:issue-36881-aux.rs\n \n fn main() {\n-    #[allow(unused_extern_crates)]\n     extern crate issue_36881_aux;\n     use issue_36881_aux::Foo; //~ ERROR unresolved import\n }"}, {"sha": "07d2c99d7d2dec44b6de2648851f0a4a70e8998a", "filename": "src/test/ui/issues/issue-36881.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fissues%2Fissue-36881.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fissues%2Fissue-36881.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-36881.stderr?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,5 @@\n error[E0432]: unresolved import `issue_36881_aux`\n-  --> $DIR/issue-36881.rs:6:9\n+  --> $DIR/issue-36881.rs:5:9\n    |\n LL |     use issue_36881_aux::Foo;\n    |         ^^^^^^^^^^^^^^^ maybe a missing `extern crate issue_36881_aux;`?"}, {"sha": "5e747467a127ed2d182a7052fcff573256c5aea8", "filename": "src/test/ui/lint/lint-stability-deprecated.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -5,7 +5,6 @@\n // aux-build:stability-cfg2.rs\n // ignore-tidy-linelength\n #![warn(deprecated)]\n-#![allow(dead_code, unused_extern_crates)]\n #![feature(staged_api, unstable_test_feature)]\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "8132a66df8a0fa326d0ecdcd2e6b9e7acc46697f", "filename": "src/test/ui/lint/lint-stability-deprecated.stderr", "status": "modified", "additions": 105, "deletions": 105, "changes": 210, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.stderr?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,5 @@\n warning: use of deprecated item 'lint_stability::deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:26:9\n+  --> $DIR/lint-stability-deprecated.rs:25:9\n    |\n LL |         deprecated();\n    |         ^^^^^^^^^^\n@@ -11,625 +11,625 @@ LL | #![warn(deprecated)]\n    |         ^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:31:9\n+  --> $DIR/lint-stability-deprecated.rs:30:9\n    |\n LL |         Trait::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:33:9\n+  --> $DIR/lint-stability-deprecated.rs:32:9\n    |\n LL |         <Foo as Trait>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:35:9\n+  --> $DIR/lint-stability-deprecated.rs:34:9\n    |\n LL |         deprecated_text();\n    |         ^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:40:9\n+  --> $DIR/lint-stability-deprecated.rs:39:9\n    |\n LL |         Trait::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:42:9\n+  --> $DIR/lint-stability-deprecated.rs:41:9\n    |\n LL |         <Foo as Trait>::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::deprecated_unstable': text\n-  --> $DIR/lint-stability-deprecated.rs:44:9\n+  --> $DIR/lint-stability-deprecated.rs:43:9\n    |\n LL |         deprecated_unstable();\n    |         ^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_unstable': text\n-  --> $DIR/lint-stability-deprecated.rs:49:9\n+  --> $DIR/lint-stability-deprecated.rs:48:9\n    |\n LL |         Trait::trait_deprecated_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_unstable': text\n-  --> $DIR/lint-stability-deprecated.rs:51:9\n+  --> $DIR/lint-stability-deprecated.rs:50:9\n    |\n LL |         <Foo as Trait>::trait_deprecated_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::deprecated_unstable_text': text\n-  --> $DIR/lint-stability-deprecated.rs:53:9\n+  --> $DIR/lint-stability-deprecated.rs:52:9\n    |\n LL |         deprecated_unstable_text();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_unstable_text': text\n-  --> $DIR/lint-stability-deprecated.rs:58:9\n+  --> $DIR/lint-stability-deprecated.rs:57:9\n    |\n LL |         Trait::trait_deprecated_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_unstable_text': text\n-  --> $DIR/lint-stability-deprecated.rs:60:9\n+  --> $DIR/lint-stability-deprecated.rs:59:9\n    |\n LL |         <Foo as Trait>::trait_deprecated_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::DeprecatedStruct': text\n-  --> $DIR/lint-stability-deprecated.rs:107:17\n+  --> $DIR/lint-stability-deprecated.rs:106:17\n    |\n LL |         let _ = DeprecatedStruct {\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::DeprecatedUnstableStruct': text\n-  --> $DIR/lint-stability-deprecated.rs:110:17\n+  --> $DIR/lint-stability-deprecated.rs:109:17\n    |\n LL |         let _ = DeprecatedUnstableStruct {\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::DeprecatedUnitStruct': text\n-  --> $DIR/lint-stability-deprecated.rs:117:17\n+  --> $DIR/lint-stability-deprecated.rs:116:17\n    |\n LL |         let _ = DeprecatedUnitStruct;\n    |                 ^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::DeprecatedUnstableUnitStruct': text\n-  --> $DIR/lint-stability-deprecated.rs:118:17\n+  --> $DIR/lint-stability-deprecated.rs:117:17\n    |\n LL |         let _ = DeprecatedUnstableUnitStruct;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Enum::DeprecatedVariant': text\n-  --> $DIR/lint-stability-deprecated.rs:122:17\n+  --> $DIR/lint-stability-deprecated.rs:121:17\n    |\n LL |         let _ = Enum::DeprecatedVariant;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Enum::DeprecatedUnstableVariant': text\n-  --> $DIR/lint-stability-deprecated.rs:123:17\n+  --> $DIR/lint-stability-deprecated.rs:122:17\n    |\n LL |         let _ = Enum::DeprecatedUnstableVariant;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::DeprecatedTupleStruct': text\n-  --> $DIR/lint-stability-deprecated.rs:127:17\n+  --> $DIR/lint-stability-deprecated.rs:126:17\n    |\n LL |         let _ = DeprecatedTupleStruct (1);\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::DeprecatedUnstableTupleStruct': text\n-  --> $DIR/lint-stability-deprecated.rs:128:17\n+  --> $DIR/lint-stability-deprecated.rs:127:17\n    |\n LL |         let _ = DeprecatedUnstableTupleStruct (1);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:137:25\n+  --> $DIR/lint-stability-deprecated.rs:136:25\n    |\n LL |         macro_test_arg!(deprecated_text());\n    |                         ^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::deprecated_unstable_text': text\n-  --> $DIR/lint-stability-deprecated.rs:138:25\n+  --> $DIR/lint-stability-deprecated.rs:137:25\n    |\n LL |         macro_test_arg!(deprecated_unstable_text());\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:139:41\n+  --> $DIR/lint-stability-deprecated.rs:138:41\n    |\n LL |         macro_test_arg!(macro_test_arg!(deprecated_text()));\n    |                                         ^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:144:9\n+  --> $DIR/lint-stability-deprecated.rs:143:9\n    |\n LL |         Trait::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:146:9\n+  --> $DIR/lint-stability-deprecated.rs:145:9\n    |\n LL |         <Foo as Trait>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:148:9\n+  --> $DIR/lint-stability-deprecated.rs:147:9\n    |\n LL |         Trait::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:150:9\n+  --> $DIR/lint-stability-deprecated.rs:149:9\n    |\n LL |         <Foo as Trait>::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_unstable': text\n-  --> $DIR/lint-stability-deprecated.rs:152:9\n+  --> $DIR/lint-stability-deprecated.rs:151:9\n    |\n LL |         Trait::trait_deprecated_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_unstable': text\n-  --> $DIR/lint-stability-deprecated.rs:154:9\n+  --> $DIR/lint-stability-deprecated.rs:153:9\n    |\n LL |         <Foo as Trait>::trait_deprecated_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_unstable_text': text\n-  --> $DIR/lint-stability-deprecated.rs:156:9\n+  --> $DIR/lint-stability-deprecated.rs:155:9\n    |\n LL |         Trait::trait_deprecated_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_unstable_text': text\n-  --> $DIR/lint-stability-deprecated.rs:158:9\n+  --> $DIR/lint-stability-deprecated.rs:157:9\n    |\n LL |         <Foo as Trait>::trait_deprecated_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::DeprecatedTrait': text\n-  --> $DIR/lint-stability-deprecated.rs:186:10\n+  --> $DIR/lint-stability-deprecated.rs:185:10\n    |\n LL |     impl DeprecatedTrait for S {}\n    |          ^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::DeprecatedTrait': text\n-  --> $DIR/lint-stability-deprecated.rs:188:25\n+  --> $DIR/lint-stability-deprecated.rs:187:25\n    |\n LL |     trait LocalTrait2 : DeprecatedTrait { }\n    |                         ^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'inheritance::inherited_stability::unstable_mod::deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:207:9\n+  --> $DIR/lint-stability-deprecated.rs:206:9\n    |\n LL |         unstable_mod::deprecated();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:329:9\n+  --> $DIR/lint-stability-deprecated.rs:328:9\n    |\n LL |         deprecated();\n    |         ^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::Trait::trait_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:334:9\n+  --> $DIR/lint-stability-deprecated.rs:333:9\n    |\n LL |         Trait::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::Trait::trait_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:336:9\n+  --> $DIR/lint-stability-deprecated.rs:335:9\n    |\n LL |         <Foo as Trait>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:338:9\n+  --> $DIR/lint-stability-deprecated.rs:337:9\n    |\n LL |         deprecated_text();\n    |         ^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::Trait::trait_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:343:9\n+  --> $DIR/lint-stability-deprecated.rs:342:9\n    |\n LL |         Trait::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::Trait::trait_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:345:9\n+  --> $DIR/lint-stability-deprecated.rs:344:9\n    |\n LL |         <Foo as Trait>::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::DeprecatedStruct': text\n-  --> $DIR/lint-stability-deprecated.rs:383:17\n+  --> $DIR/lint-stability-deprecated.rs:382:17\n    |\n LL |         let _ = DeprecatedStruct {\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::DeprecatedUnitStruct': text\n-  --> $DIR/lint-stability-deprecated.rs:390:17\n+  --> $DIR/lint-stability-deprecated.rs:389:17\n    |\n LL |         let _ = DeprecatedUnitStruct;\n    |                 ^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::Enum::DeprecatedVariant': text\n-  --> $DIR/lint-stability-deprecated.rs:394:17\n+  --> $DIR/lint-stability-deprecated.rs:393:17\n    |\n LL |         let _ = Enum::DeprecatedVariant;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::DeprecatedTupleStruct': text\n-  --> $DIR/lint-stability-deprecated.rs:398:17\n+  --> $DIR/lint-stability-deprecated.rs:397:17\n    |\n LL |         let _ = DeprecatedTupleStruct (1);\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::Trait::trait_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:405:9\n+  --> $DIR/lint-stability-deprecated.rs:404:9\n    |\n LL |         Trait::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::Trait::trait_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:407:9\n+  --> $DIR/lint-stability-deprecated.rs:406:9\n    |\n LL |         <Foo as Trait>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::Trait::trait_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:409:9\n+  --> $DIR/lint-stability-deprecated.rs:408:9\n    |\n LL |         Trait::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::Trait::trait_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:411:9\n+  --> $DIR/lint-stability-deprecated.rs:410:9\n    |\n LL |         <Foo as Trait>::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::test_fn_body::fn_in_body': text\n-  --> $DIR/lint-stability-deprecated.rs:438:9\n+  --> $DIR/lint-stability-deprecated.rs:437:9\n    |\n LL |         fn_in_body();\n    |         ^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::DeprecatedTrait': text\n-  --> $DIR/lint-stability-deprecated.rs:458:10\n+  --> $DIR/lint-stability-deprecated.rs:457:10\n    |\n LL |     impl DeprecatedTrait for S { }\n    |          ^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::DeprecatedTrait': text\n-  --> $DIR/lint-stability-deprecated.rs:460:24\n+  --> $DIR/lint-stability-deprecated.rs:459:24\n    |\n LL |     trait LocalTrait : DeprecatedTrait { }\n    |                        ^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::MethodTester::test_method_body::fn_in_body': text\n-  --> $DIR/lint-stability-deprecated.rs:446:13\n+  --> $DIR/lint-stability-deprecated.rs:445:13\n    |\n LL |             fn_in_body();\n    |             ^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::TraitWithAssociatedTypes::TypeDeprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:99:48\n+  --> $DIR/lint-stability-deprecated.rs:98:48\n    |\n LL |         struct S2<T: TraitWithAssociatedTypes>(T::TypeDeprecated);\n    |                                                ^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::TraitWithAssociatedTypes::TypeDeprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:103:13\n+  --> $DIR/lint-stability-deprecated.rs:102:13\n    |\n LL |             TypeDeprecated = u16,\n    |             ^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::MethodTester::method_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:27:13\n+  --> $DIR/lint-stability-deprecated.rs:26:13\n    |\n LL |         foo.method_deprecated();\n    |             ^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::MethodTester::method_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:28:9\n+  --> $DIR/lint-stability-deprecated.rs:27:9\n    |\n LL |         Foo::method_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::MethodTester::method_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:29:9\n+  --> $DIR/lint-stability-deprecated.rs:28:9\n    |\n LL |         <Foo>::method_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:30:13\n+  --> $DIR/lint-stability-deprecated.rs:29:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:32:9\n+  --> $DIR/lint-stability-deprecated.rs:31:9\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::MethodTester::method_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:36:13\n+  --> $DIR/lint-stability-deprecated.rs:35:13\n    |\n LL |         foo.method_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::MethodTester::method_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:37:9\n+  --> $DIR/lint-stability-deprecated.rs:36:9\n    |\n LL |         Foo::method_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::MethodTester::method_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:38:9\n+  --> $DIR/lint-stability-deprecated.rs:37:9\n    |\n LL |         <Foo>::method_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:39:13\n+  --> $DIR/lint-stability-deprecated.rs:38:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:41:9\n+  --> $DIR/lint-stability-deprecated.rs:40:9\n    |\n LL |         <Foo>::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::MethodTester::method_deprecated_unstable': text\n-  --> $DIR/lint-stability-deprecated.rs:45:13\n+  --> $DIR/lint-stability-deprecated.rs:44:13\n    |\n LL |         foo.method_deprecated_unstable();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::MethodTester::method_deprecated_unstable': text\n-  --> $DIR/lint-stability-deprecated.rs:46:9\n+  --> $DIR/lint-stability-deprecated.rs:45:9\n    |\n LL |         Foo::method_deprecated_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::MethodTester::method_deprecated_unstable': text\n-  --> $DIR/lint-stability-deprecated.rs:47:9\n+  --> $DIR/lint-stability-deprecated.rs:46:9\n    |\n LL |         <Foo>::method_deprecated_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_unstable': text\n-  --> $DIR/lint-stability-deprecated.rs:48:13\n+  --> $DIR/lint-stability-deprecated.rs:47:13\n    |\n LL |         foo.trait_deprecated_unstable();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_unstable': text\n-  --> $DIR/lint-stability-deprecated.rs:50:9\n+  --> $DIR/lint-stability-deprecated.rs:49:9\n    |\n LL |         <Foo>::trait_deprecated_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::MethodTester::method_deprecated_unstable_text': text\n-  --> $DIR/lint-stability-deprecated.rs:54:13\n+  --> $DIR/lint-stability-deprecated.rs:53:13\n    |\n LL |         foo.method_deprecated_unstable_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::MethodTester::method_deprecated_unstable_text': text\n-  --> $DIR/lint-stability-deprecated.rs:55:9\n+  --> $DIR/lint-stability-deprecated.rs:54:9\n    |\n LL |         Foo::method_deprecated_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::MethodTester::method_deprecated_unstable_text': text\n-  --> $DIR/lint-stability-deprecated.rs:56:9\n+  --> $DIR/lint-stability-deprecated.rs:55:9\n    |\n LL |         <Foo>::method_deprecated_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_unstable_text': text\n-  --> $DIR/lint-stability-deprecated.rs:57:13\n+  --> $DIR/lint-stability-deprecated.rs:56:13\n    |\n LL |         foo.trait_deprecated_unstable_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_unstable_text': text\n-  --> $DIR/lint-stability-deprecated.rs:59:9\n+  --> $DIR/lint-stability-deprecated.rs:58:9\n    |\n LL |         <Foo>::trait_deprecated_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::DeprecatedStruct::i': text\n-  --> $DIR/lint-stability-deprecated.rs:108:13\n+  --> $DIR/lint-stability-deprecated.rs:107:13\n    |\n LL |             i: 0\n    |             ^^^^\n \n warning: use of deprecated item 'lint_stability::DeprecatedUnstableStruct::i': text\n-  --> $DIR/lint-stability-deprecated.rs:112:13\n+  --> $DIR/lint-stability-deprecated.rs:111:13\n    |\n LL |             i: 0\n    |             ^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:143:13\n+  --> $DIR/lint-stability-deprecated.rs:142:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:145:9\n+  --> $DIR/lint-stability-deprecated.rs:144:9\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:147:13\n+  --> $DIR/lint-stability-deprecated.rs:146:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:149:9\n+  --> $DIR/lint-stability-deprecated.rs:148:9\n    |\n LL |         <Foo>::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_unstable': text\n-  --> $DIR/lint-stability-deprecated.rs:151:13\n+  --> $DIR/lint-stability-deprecated.rs:150:13\n    |\n LL |         foo.trait_deprecated_unstable();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_unstable': text\n-  --> $DIR/lint-stability-deprecated.rs:153:9\n+  --> $DIR/lint-stability-deprecated.rs:152:9\n    |\n LL |         <Foo>::trait_deprecated_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_unstable_text': text\n-  --> $DIR/lint-stability-deprecated.rs:155:13\n+  --> $DIR/lint-stability-deprecated.rs:154:13\n    |\n LL |         foo.trait_deprecated_unstable_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_unstable_text': text\n-  --> $DIR/lint-stability-deprecated.rs:157:9\n+  --> $DIR/lint-stability-deprecated.rs:156:9\n    |\n LL |         <Foo>::trait_deprecated_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:174:13\n+  --> $DIR/lint-stability-deprecated.rs:173:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:175:13\n+  --> $DIR/lint-stability-deprecated.rs:174:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_unstable': text\n-  --> $DIR/lint-stability-deprecated.rs:176:13\n+  --> $DIR/lint-stability-deprecated.rs:175:13\n    |\n LL |         foo.trait_deprecated_unstable();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'lint_stability::Trait::trait_deprecated_unstable_text': text\n-  --> $DIR/lint-stability-deprecated.rs:177:13\n+  --> $DIR/lint-stability-deprecated.rs:176:13\n    |\n LL |         foo.trait_deprecated_unstable_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::MethodTester::method_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:330:13\n+  --> $DIR/lint-stability-deprecated.rs:329:13\n    |\n LL |         foo.method_deprecated();\n    |             ^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::MethodTester::method_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:331:9\n+  --> $DIR/lint-stability-deprecated.rs:330:9\n    |\n LL |         Foo::method_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::MethodTester::method_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:332:9\n+  --> $DIR/lint-stability-deprecated.rs:331:9\n    |\n LL |         <Foo>::method_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::Trait::trait_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:333:13\n+  --> $DIR/lint-stability-deprecated.rs:332:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::Trait::trait_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:335:9\n+  --> $DIR/lint-stability-deprecated.rs:334:9\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::MethodTester::method_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:339:13\n+  --> $DIR/lint-stability-deprecated.rs:338:13\n    |\n LL |         foo.method_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::MethodTester::method_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:340:9\n+  --> $DIR/lint-stability-deprecated.rs:339:9\n    |\n LL |         Foo::method_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::MethodTester::method_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:341:9\n+  --> $DIR/lint-stability-deprecated.rs:340:9\n    |\n LL |         <Foo>::method_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::Trait::trait_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:342:13\n+  --> $DIR/lint-stability-deprecated.rs:341:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::Trait::trait_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:344:9\n+  --> $DIR/lint-stability-deprecated.rs:343:9\n    |\n LL |         <Foo>::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::DeprecatedStruct::i': text\n-  --> $DIR/lint-stability-deprecated.rs:385:13\n+  --> $DIR/lint-stability-deprecated.rs:384:13\n    |\n LL |             i: 0\n    |             ^^^^\n \n warning: use of deprecated item 'this_crate::Trait::trait_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:404:13\n+  --> $DIR/lint-stability-deprecated.rs:403:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::Trait::trait_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:406:9\n+  --> $DIR/lint-stability-deprecated.rs:405:9\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::Trait::trait_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:408:13\n+  --> $DIR/lint-stability-deprecated.rs:407:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::Trait::trait_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:410:9\n+  --> $DIR/lint-stability-deprecated.rs:409:9\n    |\n LL |         <Foo>::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::Trait::trait_deprecated': text\n-  --> $DIR/lint-stability-deprecated.rs:427:13\n+  --> $DIR/lint-stability-deprecated.rs:426:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated item 'this_crate::Trait::trait_deprecated_text': text\n-  --> $DIR/lint-stability-deprecated.rs:428:13\n+  --> $DIR/lint-stability-deprecated.rs:427:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "ec0b64a10953fb960ed1afc98c22c64ff3f499f3", "filename": "src/test/ui/macros/macro-use-bad-args-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-bad-args-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-bad-args-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-bad-args-1.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,6 +1,5 @@\n #![no_std]\n \n-#[allow(unused_extern_crates)]\n #[macro_use(foo(bar))]  //~ ERROR bad macro import\n extern crate std;\n "}, {"sha": "4e5482a518c9586dc8a803cc9d4e61ea13e708fc", "filename": "src/test/ui/macros/macro-use-bad-args-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-bad-args-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-bad-args-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-bad-args-1.stderr?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,5 @@\n error[E0466]: bad macro import\n-  --> $DIR/macro-use-bad-args-1.rs:4:13\n+  --> $DIR/macro-use-bad-args-1.rs:3:13\n    |\n LL | #[macro_use(foo(bar))]\n    |             ^^^^^^^^"}, {"sha": "c5f8f62c186864a0720b4142fbb28f2160f69d15", "filename": "src/test/ui/macros/macro-use-bad-args-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-bad-args-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-bad-args-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-bad-args-2.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,6 +1,5 @@\n #![no_std]\n \n-#[allow(unused_extern_crates)]\n #[macro_use(foo=\"bar\")]  //~ ERROR bad macro import\n extern crate std;\n "}, {"sha": "c958104eac43bfec5c84e62c89941236404ff94a", "filename": "src/test/ui/macros/macro-use-bad-args-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-bad-args-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-bad-args-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-bad-args-2.stderr?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,5 @@\n error[E0466]: bad macro import\n-  --> $DIR/macro-use-bad-args-2.rs:4:13\n+  --> $DIR/macro-use-bad-args-2.rs:3:13\n    |\n LL | #[macro_use(foo=\"bar\")]\n    |             ^^^^^^^^^"}, {"sha": "e9664a4dd480e950198913fa1bc7e809c17cbb62", "filename": "src/test/ui/no-std-inject.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fno-std-inject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fno-std-inject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fno-std-inject.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,4 @@\n #![no_std]\n-#![allow(unused_extern_crates)]\n \n extern crate core; //~ ERROR: the name `core` is defined multiple times\n extern crate std;"}, {"sha": "a82931e0fbdd050710e2c795871101bfe920fa99", "filename": "src/test/ui/no-std-inject.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fno-std-inject.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fno-std-inject.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fno-std-inject.stderr?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,5 @@\n error[E0259]: the name `core` is defined multiple times\n-  --> $DIR/no-std-inject.rs:4:1\n+  --> $DIR/no-std-inject.rs:3:1\n    |\n LL | extern crate core;\n    | ^^^^^^^^^^^^^^^^^^ `core` reimported here"}, {"sha": "3cb6ab52e0a2c586eb9acc9b2d2005731cc5114c", "filename": "src/test/ui/resolve/resolve-conflict-extern-crate-vs-extern-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-extern-crate-vs-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-extern-crate-vs-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-extern-crate-vs-extern-crate.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,4 +1,3 @@\n-#[allow(unused_extern_crates)]\n extern crate std;\n //~^ ERROR the name `std` is defined multiple times\n "}, {"sha": "ea6cb9eb00d8f98e745a5107d76f427ede734716", "filename": "src/test/ui/resolve/resolve-conflict-extern-crate-vs-extern-crate.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-extern-crate-vs-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-extern-crate-vs-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-extern-crate-vs-extern-crate.stderr?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,8 +1,4 @@\n error[E0259]: the name `std` is defined multiple times\n-  --> $DIR/resolve-conflict-extern-crate-vs-extern-crate.rs:2:1\n-   |\n-LL | extern crate std;\n-   | ^^^^^^^^^^^^^^^^^ `std` reimported here\n    |\n    = note: `std` must be defined only once in the type namespace of this module\n help: you can use `as` to change the binding name of the import"}, {"sha": "a14ec5b7290b4762c9296df5bd348a977adae35b", "filename": "src/test/ui/resolve_self_super_hint.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fresolve_self_super_hint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fresolve_self_super_hint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve_self_super_hint.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![allow(unused_extern_crates)]\n-\n mod a {\n     extern crate alloc;\n     use alloc::HashMap;"}, {"sha": "bc862553b5bce15188408298c6f0086f49623a57", "filename": "src/test/ui/resolve_self_super_hint.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fresolve_self_super_hint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftest%2Fui%2Fresolve_self_super_hint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve_self_super_hint.stderr?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,17 +1,17 @@\n error[E0432]: unresolved import `alloc`\n-  --> $DIR/resolve_self_super_hint.rs:5:9\n+  --> $DIR/resolve_self_super_hint.rs:3:9\n    |\n LL |     use alloc::HashMap;\n    |         ^^^^^ help: a similar path exists: `self::alloc`\n \n error[E0432]: unresolved import `alloc`\n-  --> $DIR/resolve_self_super_hint.rs:10:13\n+  --> $DIR/resolve_self_super_hint.rs:8:13\n    |\n LL |         use alloc::HashMap;\n    |             ^^^^^ help: a similar path exists: `super::alloc`\n \n error[E0432]: unresolved import `alloc`\n-  --> $DIR/resolve_self_super_hint.rs:15:17\n+  --> $DIR/resolve_self_super_hint.rs:13:17\n    |\n LL |             use alloc::HashMap;\n    |                 ^^^^^\n@@ -20,7 +20,7 @@ LL |             use alloc::HashMap;\n    |                 help: a similar path exists: `a::alloc`\n \n error[E0432]: unresolved import `alloc`\n-  --> $DIR/resolve_self_super_hint.rs:20:21\n+  --> $DIR/resolve_self_super_hint.rs:18:21\n    |\n LL |                 use alloc::HashMap;\n    |                     ^^^^^"}, {"sha": "a935bc6a4ded9b03f54349a9407dcd77ba1eb189", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rust_2018_idioms)]\n-\n use toml;\n use serde::Serialize;\n "}, {"sha": "729287faeb628a0a4c3d45bdf8cd9ef781f825bb", "filename": "src/tools/cargotest/main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Fcargotest%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Fcargotest%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcargotest%2Fmain.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rust_2018_idioms)]\n-\n use std::env;\n use std::process::Command;\n use std::path::{Path, PathBuf};"}, {"sha": "d709475541a60696e25227f4e346547fbb4acd7d", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,7 +1,6 @@\n #![crate_name = \"compiletest\"]\n #![feature(test)]\n #![feature(vec_remove_item)]\n-#![deny(warnings, rust_2018_idioms)]\n \n extern crate test;\n "}, {"sha": "c31a5069e4673e64b2c4ecb5d03304eec3c3a442", "filename": "src/tools/error_index_generator/main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Ferror_index_generator%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Ferror_index_generator%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ferror_index_generator%2Fmain.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,7 +1,5 @@\n #![feature(rustc_private)]\n \n-#![deny(rust_2018_idioms)]\n-\n extern crate env_logger;\n extern crate syntax;\n extern crate serialize as rustc_serialize;"}, {"sha": "49c149afe17f901cac9908b018a05465fe119f40", "filename": "src/tools/linkchecker/main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Flinkchecker%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Flinkchecker%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flinkchecker%2Fmain.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -14,8 +14,6 @@\n //! A few whitelisted exceptions are allowed as there's known bugs in rustdoc,\n //! but this should catch the majority of \"broken link\" cases.\n \n-#![deny(rust_2018_idioms)]\n-\n use std::collections::hash_map::Entry;\n use std::collections::{HashMap, HashSet};\n use std::env;"}, {"sha": "a1d52251263d4fe7ee9d3cb6f8ccf5706385e197", "filename": "src/tools/remote-test-client/src/main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Fremote-test-client%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Fremote-test-client%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fremote-test-client%2Fsrc%2Fmain.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rust_2018_idioms)]\n-\n /// This is a small client program intended to pair with `remote-test-server` in\n /// this repository. This client connects to the server over TCP and is used to\n /// push artifacts and run tests on the server instead of locally."}, {"sha": "d2238730196aa9ce7144d2aa9567e84fb7fc4c47", "filename": "src/tools/remote-test-server/src/main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rust_2018_idioms)]\n-\n /// This is a small server which is intended to run inside of an emulator or\n /// on a remote test device. This server pairs with the `remote-test-client`\n /// program in this repository. The `remote-test-client` connects to this"}, {"sha": "6bce7c3a978eb7f55e8337171798988e5583aad9", "filename": "src/tools/rustbook/src/main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Frustbook%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Frustbook%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustbook%2Fsrc%2Fmain.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rust_2018_idioms)]\n-\n use clap::{crate_version};\n \n use std::env;"}, {"sha": "143278525616628baf7d95f94e402694cfc82952", "filename": "src/tools/rustc-std-workspace-core/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Frustc-std-workspace-core%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Frustc-std-workspace-core%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustc-std-workspace-core%2Flib.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,4 @@\n #![feature(no_core)]\n #![no_core]\n-#![deny(rust_2018_idioms)]\n \n pub use core::*;"}, {"sha": "616b5444832c11c56f28ec2ae291b20e4b551ccd", "filename": "src/tools/rustdoc-themes/main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Frustdoc-themes%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Frustdoc-themes%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-themes%2Fmain.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rust_2018_idioms)]\n-\n use std::env::args;\n use std::fs::read_dir;\n use std::path::Path;"}, {"sha": "99573cadb95f008db0e51e373ab30f56c23c27ad", "filename": "src/tools/rustdoc/main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Frustdoc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Frustdoc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc%2Fmain.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,3 +1 @@\n-#![deny(rust_2018_idioms)]\n-\n fn main() { rustdoc::main() }"}, {"sha": "3acb50547daf041c818059887a525f76898f1ad0", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -4,8 +4,6 @@\n //! etc. This is run by default on `make check` and as part of the auto\n //! builders.\n \n-#![deny(warnings)]\n-\n use tidy::*;\n \n use std::process;"}, {"sha": "036349ea1c82a23f99562125c88c153417efb010", "filename": "src/tools/unstable-book-gen/src/main.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Funstable-book-gen%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560cb830fce63fcffdc4558f4281aaac6a3a1ba/src%2Ftools%2Funstable-book-gen%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Funstable-book-gen%2Fsrc%2Fmain.rs?ref=4560cb830fce63fcffdc4558f4281aaac6a3a1ba", "patch": "@@ -1,10 +1,5 @@\n //! Auto-generate stub docs for the unstable book\n \n-#![deny(rust_2018_idioms)]\n-#![deny(warnings)]\n-\n-\n-\n use tidy::features::{Feature, Features, collect_lib_features, collect_lang_features};\n use tidy::unstable_book::{collect_unstable_feature_names, collect_unstable_book_section_file_names,\n                           PATH_STR, LANG_FEATURES_DIR, LIB_FEATURES_DIR};"}]}