{"sha": "e37d0e312596c06659b881c240a5afdd58395665", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzN2QwZTMxMjU5NmMwNjY1OWI4ODFjMjQwYTVhZmRkNTgzOTU2NjU=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-04-22T02:28:22Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-04-22T02:28:22Z"}, "message": "Print hex dump of alloc on reading undef bytes", "tree": {"sha": "1a4e6e2a416a14279e68c21fabe04b7ba7c91516", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a4e6e2a416a14279e68c21fabe04b7ba7c91516"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e37d0e312596c06659b881c240a5afdd58395665", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e37d0e312596c06659b881c240a5afdd58395665", "html_url": "https://github.com/rust-lang/rust/commit/e37d0e312596c06659b881c240a5afdd58395665", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e37d0e312596c06659b881c240a5afdd58395665/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d9db57a0dee6b2ed013c27fb312cef77a05e323", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d9db57a0dee6b2ed013c27fb312cef77a05e323", "html_url": "https://github.com/rust-lang/rust/commit/8d9db57a0dee6b2ed013c27fb312cef77a05e323"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "77aaacea02400cc5b25602df1ad4ad7360ac8f9b", "filename": "src/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e37d0e312596c06659b881c240a5afdd58395665/src%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37d0e312596c06659b881c240a5afdd58395665/src%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiagnostics.rs?ref=e37d0e312596c06659b881c240a5afdd58395665", "patch": "@@ -114,6 +114,9 @@ pub fn report_error<'tcx, 'mir>(\n     };\n \n     e.print_backtrace();\n+    if let UndefinedBehavior(UndefinedBehaviorInfo::InvalidUndefBytes(Some(ptr))) = e.kind {\n+        ecx.memory.dump_alloc(ptr.alloc_id);\n+    }\n     let msg = e.to_string();\n     report_msg(ecx, &format!(\"{}: {}\", title, msg), msg, helps, true)\n }"}]}