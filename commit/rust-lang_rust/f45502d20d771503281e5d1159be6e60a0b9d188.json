{"sha": "f45502d20d771503281e5d1159be6e60a0b9d188", "node_id": "C_kwDOAAsO6NoAKGY0NTUwMmQyMGQ3NzE1MDMyODFlNWQxMTU5YmU2ZTYwYTBiOWQxODg", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-06-12T09:58:40Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-06-12T09:58:40Z"}, "message": "extend assert", "tree": {"sha": "60d085ee681520660df84f23e264ebfb17d4d302", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60d085ee681520660df84f23e264ebfb17d4d302"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f45502d20d771503281e5d1159be6e60a0b9d188", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f45502d20d771503281e5d1159be6e60a0b9d188", "html_url": "https://github.com/rust-lang/rust/commit/f45502d20d771503281e5d1159be6e60a0b9d188", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f45502d20d771503281e5d1159be6e60a0b9d188/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77dba225c1048e5585b2cdefb7f8588bd2d2741b", "url": "https://api.github.com/repos/rust-lang/rust/commits/77dba225c1048e5585b2cdefb7f8588bd2d2741b", "html_url": "https://github.com/rust-lang/rust/commit/77dba225c1048e5585b2cdefb7f8588bd2d2741b"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "bb2bd2faec20823e58140fc0fc9a2cbd56580d61", "filename": "compiler/rustc_infer/src/infer/combine.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f45502d20d771503281e5d1159be6e60a0b9d188/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45502d20d771503281e5d1159be6e60a0b9d188/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcombine.rs?ref=f45502d20d771503281e5d1159be6e60a0b9d188", "patch": "@@ -34,7 +34,7 @@ use rustc_middle::infer::unify_key::{ConstVarValue, ConstVariableValue};\n use rustc_middle::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind};\n use rustc_middle::ty::error::{ExpectedFound, TypeError};\n use rustc_middle::ty::relate::{RelateResult, TypeRelation};\n-use rustc_middle::ty::{self, AliasKind, InferConst, ToPredicate, Ty, TyCtxt, TypeVisitableExt};\n+use rustc_middle::ty::{self, InferConst, ToPredicate, Ty, TyCtxt, TypeVisitableExt};\n use rustc_middle::ty::{IntType, UintType};\n use rustc_span::DUMMY_SP;\n \n@@ -103,12 +103,12 @@ impl<'tcx> InferCtxt<'tcx> {\n \n             // We don't expect `TyVar` or `Fresh*` vars at this point with lazy norm.\n             (\n-                ty::Alias(AliasKind::Projection, _),\n+                ty::Alias(..),\n                 ty::Infer(ty::TyVar(_) | ty::FreshTy(_) | ty::FreshIntTy(_) | ty::FreshFloatTy(_)),\n             )\n             | (\n                 ty::Infer(ty::TyVar(_) | ty::FreshTy(_) | ty::FreshIntTy(_) | ty::FreshFloatTy(_)),\n-                ty::Alias(AliasKind::Projection, _),\n+                ty::Alias(..),\n             ) if self.next_trait_solver() => {\n                 bug!()\n             }"}]}