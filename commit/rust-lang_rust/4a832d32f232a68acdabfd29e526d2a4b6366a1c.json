{"sha": "4a832d32f232a68acdabfd29e526d2a4b6366a1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhODMyZDMyZjIzMmE2OGFjZGFiZmQyOWU1MjZkMmE0YjYzNjZhMWM=", "commit": {"author": {"name": "Dominik Stolz", "email": "d.stolz@tum.de", "date": "2021-07-10T10:58:30Z"}, "committer": {"name": "Dominik Stolz", "email": "d.stolz@tum.de", "date": "2021-08-01T07:45:00Z"}, "message": "Check whether clone3 syscall exists in pidfd test", "tree": {"sha": "9944d392a2b9a7b966666f45e860377bb3a6132e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9944d392a2b9a7b966666f45e860377bb3a6132e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a832d32f232a68acdabfd29e526d2a4b6366a1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a832d32f232a68acdabfd29e526d2a4b6366a1c", "html_url": "https://github.com/rust-lang/rust/commit/4a832d32f232a68acdabfd29e526d2a4b6366a1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a832d32f232a68acdabfd29e526d2a4b6366a1c/comments", "author": {"login": "voidc", "id": 5302792, "node_id": "MDQ6VXNlcjUzMDI3OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5302792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/voidc", "html_url": "https://github.com/voidc", "followers_url": "https://api.github.com/users/voidc/followers", "following_url": "https://api.github.com/users/voidc/following{/other_user}", "gists_url": "https://api.github.com/users/voidc/gists{/gist_id}", "starred_url": "https://api.github.com/users/voidc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/voidc/subscriptions", "organizations_url": "https://api.github.com/users/voidc/orgs", "repos_url": "https://api.github.com/users/voidc/repos", "events_url": "https://api.github.com/users/voidc/events{/privacy}", "received_events_url": "https://api.github.com/users/voidc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "voidc", "id": 5302792, "node_id": "MDQ6VXNlcjUzMDI3OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5302792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/voidc", "html_url": "https://github.com/voidc", "followers_url": "https://api.github.com/users/voidc/followers", "following_url": "https://api.github.com/users/voidc/following{/other_user}", "gists_url": "https://api.github.com/users/voidc/gists{/gist_id}", "starred_url": "https://api.github.com/users/voidc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/voidc/subscriptions", "organizations_url": "https://api.github.com/users/voidc/orgs", "repos_url": "https://api.github.com/users/voidc/repos", "events_url": "https://api.github.com/users/voidc/events{/privacy}", "received_events_url": "https://api.github.com/users/voidc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a4d012103999528ea7712bd3bb93a5ed7a6824e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a4d012103999528ea7712bd3bb93a5ed7a6824e", "html_url": "https://github.com/rust-lang/rust/commit/2a4d012103999528ea7712bd3bb93a5ed7a6824e"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "93321ac536ab916c47b6db1b3ae592da9c6d8a2a", "filename": "src/test/ui/command/command-create-pidfd.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4a832d32f232a68acdabfd29e526d2a4b6366a1c/src%2Ftest%2Fui%2Fcommand%2Fcommand-create-pidfd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a832d32f232a68acdabfd29e526d2a4b6366a1c/src%2Ftest%2Fui%2Fcommand%2Fcommand-create-pidfd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcommand%2Fcommand-create-pidfd.rs?ref=4a832d32f232a68acdabfd29e526d2a4b6366a1c", "patch": "@@ -2,10 +2,28 @@\n // only-linux - pidfds are a linux-specific concept\n \n #![feature(linux_pidfd)]\n-use std::os::linux::process::{CommandExt, ChildExt};\n+#![feature(rustc_private)]\n+\n+extern crate libc;\n+\n+use std::io::Error;\n+use std::os::linux::process::{ChildExt, CommandExt};\n use std::process::Command;\n \n+fn has_clone3() -> bool {\n+    let res = unsafe { libc::syscall(libc::SYS_clone3, 0, 0) };\n+    let err = (res == -1)\n+        .then(|| Error::last_os_error())\n+        .expect(\"probe syscall should not succeed\");\n+    err.raw_os_error() != Some(libc::ENOSYS)\n+}\n+\n fn main() {\n+    // pidfds require the clone3 syscall\n+    if !has_clone3() {\n+        return;\n+    }\n+\n     // We don't assert the precise value, since the standard library\n     // might have opened other file descriptors before our code runs.\n     let _ = Command::new(\"echo\")"}]}