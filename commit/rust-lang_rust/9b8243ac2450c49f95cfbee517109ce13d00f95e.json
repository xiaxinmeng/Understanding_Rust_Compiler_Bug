{"sha": "9b8243ac2450c49f95cfbee517109ce13d00f95e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliODI0M2FjMjQ1MGM0OWY5NWNmYmVlNTE3MTA5Y2UxM2QwMGY5NWU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-18T05:18:51Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-18T06:33:20Z"}, "message": "Point at more cases involving return types", "tree": {"sha": "5c3c9445bf89c3a989bb880fb6f0f1a2b157a2e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c3c9445bf89c3a989bb880fb6f0f1a2b157a2e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b8243ac2450c49f95cfbee517109ce13d00f95e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b8243ac2450c49f95cfbee517109ce13d00f95e", "html_url": "https://github.com/rust-lang/rust/commit/9b8243ac2450c49f95cfbee517109ce13d00f95e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b8243ac2450c49f95cfbee517109ce13d00f95e/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4318502bca669f399b7428d3e9a180b1de041bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4318502bca669f399b7428d3e9a180b1de041bc", "html_url": "https://github.com/rust-lang/rust/commit/c4318502bca669f399b7428d3e9a180b1de041bc"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "7b9b97ff065a69f167b8a23e8207157c3e238a5a", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9b8243ac2450c49f95cfbee517109ce13d00f95e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b8243ac2450c49f95cfbee517109ce13d00f95e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=9b8243ac2450c49f95cfbee517109ce13d00f95e", "patch": "@@ -4347,11 +4347,15 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     struct_span_err!(self.tcx.sess, expr.span, E0572,\n                                      \"return statement outside of function body\").emit();\n                 } else if let Some(ref e) = *expr_opt {\n-                    *self.ret_coercion_span.borrow_mut() = Some(e.span);\n+                    if self.ret_coercion_span.borrow().is_none() {\n+                        *self.ret_coercion_span.borrow_mut() = Some(e.span);\n+                    }\n                     self.check_return_expr(e);\n                 } else {\n                     let mut coercion = self.ret_coercion.as_ref().unwrap().borrow_mut();\n-                    *self.ret_coercion_span.borrow_mut() = Some(expr.span);\n+                    if self.ret_coercion_span.borrow().is_none() {\n+                        *self.ret_coercion_span.borrow_mut() = Some(expr.span);\n+                    }\n                     let cause = self.cause(expr.span, ObligationCauseCode::ReturnNoExpression);\n                     if let Some((fn_decl, _)) = self.get_fn_decl(expr.id) {\n                         coercion.coerce_forced_unit("}, {"sha": "be3d2c0db4ca19efc94acf2dcaec537efe3eccd5", "filename": "src/test/ui/point-to-type-err-cause-on-impl-trait-return.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9b8243ac2450c49f95cfbee517109ce13d00f95e/src%2Ftest%2Fui%2Fpoint-to-type-err-cause-on-impl-trait-return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b8243ac2450c49f95cfbee517109ce13d00f95e/src%2Ftest%2Fui%2Fpoint-to-type-err-cause-on-impl-trait-return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpoint-to-type-err-cause-on-impl-trait-return.stderr?ref=9b8243ac2450c49f95cfbee517109ce13d00f95e", "patch": "@@ -13,6 +13,9 @@ LL |     1u32\n error[E0308]: mismatched types\n   --> $DIR/point-to-type-err-cause-on-impl-trait-return.rs:13:16\n    |\n+LL |         return 0i32;\n+   |                ---- expected because of this statement\n+LL |     } else {\n LL |         return 1u32;\n    |                ^^^^ expected i32, found u32\n    |"}]}