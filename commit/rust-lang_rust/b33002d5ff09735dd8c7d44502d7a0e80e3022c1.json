{"sha": "b33002d5ff09735dd8c7d44502d7a0e80e3022c1", "node_id": "C_kwDOAAsO6NoAKGIzMzAwMmQ1ZmYwOTczNWRkOGM3ZDQ0NTAyZDdhMGU4MGUzMDIyYzE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-23T21:00:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-23T21:00:03Z"}, "message": "Auto merge of #9366 - Alexendoo:manual_string_new, r=xFrednet\n\nRename `manual_empty_string_creation` and move to pedantic\n\nRenames it to `manual_string_new` and moves it to the pedantic category\n\nPedantic because it's a fairly minor style change but could be very noisy\n\nchangelog: *doesn't need its own entry, but remember to s/manual_empty_string_creation/manual_string_new/ the changelog entry for #9295*\n\nr? `@xFrednet` to get it in before the upcoming sync as this isn't a `cargo dev rename_lint` style rename", "tree": {"sha": "d62b33ac4dc43a2ba09b5a03c8265423ce2935d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d62b33ac4dc43a2ba09b5a03c8265423ce2935d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b33002d5ff09735dd8c7d44502d7a0e80e3022c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b33002d5ff09735dd8c7d44502d7a0e80e3022c1", "html_url": "https://github.com/rust-lang/rust/commit/b33002d5ff09735dd8c7d44502d7a0e80e3022c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5735a3bef6db84156d78d05fdd43e6332687cf2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5735a3bef6db84156d78d05fdd43e6332687cf2c", "html_url": "https://github.com/rust-lang/rust/commit/5735a3bef6db84156d78d05fdd43e6332687cf2c"}, {"sha": "2cb5318e97f7083f397c45664f3808e2601fbe78", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cb5318e97f7083f397c45664f3808e2601fbe78", "html_url": "https://github.com/rust-lang/rust/commit/2cb5318e97f7083f397c45664f3808e2601fbe78"}], "stats": {"total": 50, "additions": 24, "deletions": 26}, "files": [{"sha": "b3abdc61e6397b5a2e0ef1d17dd6c2f5d2e8ae80", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=b33002d5ff09735dd8c7d44502d7a0e80e3022c1", "patch": "@@ -3831,7 +3831,6 @@ Released 2018-09-13\n [`manual_assert`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_assert\n [`manual_async_fn`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_async_fn\n [`manual_bits`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_bits\n-[`manual_empty_string_creations`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_empty_string_creations\n [`manual_filter_map`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_filter_map\n [`manual_find`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_find\n [`manual_find_map`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_find_map\n@@ -3847,6 +3846,7 @@ Released 2018-09-13\n [`manual_saturating_arithmetic`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_saturating_arithmetic\n [`manual_split_once`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_split_once\n [`manual_str_repeat`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_str_repeat\n+[`manual_string_new`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_string_new\n [`manual_strip`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_strip\n [`manual_swap`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_swap\n [`manual_unwrap_or`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_unwrap_or"}, {"sha": "3e46ba12c446903d02b6faae223161eeffbc4aa3", "filename": "clippy_lints/src/lib.register_all.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/clippy_lints%2Fsrc%2Flib.register_all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/clippy_lints%2Fsrc%2Flib.register_all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_all.rs?ref=b33002d5ff09735dd8c7d44502d7a0e80e3022c1", "patch": "@@ -122,7 +122,6 @@ store.register_group(true, \"clippy::all\", Some(\"clippy_all\"), vec![\n     LintId::of(main_recursion::MAIN_RECURSION),\n     LintId::of(manual_async_fn::MANUAL_ASYNC_FN),\n     LintId::of(manual_bits::MANUAL_BITS),\n-    LintId::of(manual_empty_string_creations::MANUAL_EMPTY_STRING_CREATIONS),\n     LintId::of(manual_non_exhaustive::MANUAL_NON_EXHAUSTIVE),\n     LintId::of(manual_rem_euclid::MANUAL_REM_EUCLID),\n     LintId::of(manual_retain::MANUAL_RETAIN),"}, {"sha": "e99b4ffdb3a00fa5dc7d19d2f53aa946a5b21f32", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=b33002d5ff09735dd8c7d44502d7a0e80e3022c1", "patch": "@@ -240,11 +240,11 @@ store.register_lints(&[\n     manual_assert::MANUAL_ASSERT,\n     manual_async_fn::MANUAL_ASYNC_FN,\n     manual_bits::MANUAL_BITS,\n-    manual_empty_string_creations::MANUAL_EMPTY_STRING_CREATIONS,\n     manual_instant_elapsed::MANUAL_INSTANT_ELAPSED,\n     manual_non_exhaustive::MANUAL_NON_EXHAUSTIVE,\n     manual_rem_euclid::MANUAL_REM_EUCLID,\n     manual_retain::MANUAL_RETAIN,\n+    manual_string_new::MANUAL_STRING_NEW,\n     manual_strip::MANUAL_STRIP,\n     map_unit_fn::OPTION_MAP_UNIT_FN,\n     map_unit_fn::RESULT_MAP_UNIT_FN,"}, {"sha": "03c3c202e0a8f089635385253eed4682e5469eab", "filename": "clippy_lints/src/lib.register_pedantic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/clippy_lints%2Fsrc%2Flib.register_pedantic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/clippy_lints%2Fsrc%2Flib.register_pedantic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_pedantic.rs?ref=b33002d5ff09735dd8c7d44502d7a0e80e3022c1", "patch": "@@ -48,6 +48,7 @@ store.register_group(true, \"clippy::pedantic\", Some(\"clippy_pedantic\"), vec![\n     LintId::of(macro_use::MACRO_USE_IMPORTS),\n     LintId::of(manual_assert::MANUAL_ASSERT),\n     LintId::of(manual_instant_elapsed::MANUAL_INSTANT_ELAPSED),\n+    LintId::of(manual_string_new::MANUAL_STRING_NEW),\n     LintId::of(matches::MATCH_BOOL),\n     LintId::of(matches::MATCH_ON_VEC_ITEMS),\n     LintId::of(matches::MATCH_SAME_ARMS),"}, {"sha": "b5cb078e7a3ccce2fc5a8f0b7ed93b68cca24585", "filename": "clippy_lints/src/lib.register_style.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/clippy_lints%2Fsrc%2Flib.register_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/clippy_lints%2Fsrc%2Flib.register_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_style.rs?ref=b33002d5ff09735dd8c7d44502d7a0e80e3022c1", "patch": "@@ -43,7 +43,6 @@ store.register_group(true, \"clippy::style\", Some(\"clippy_style\"), vec![\n     LintId::of(main_recursion::MAIN_RECURSION),\n     LintId::of(manual_async_fn::MANUAL_ASYNC_FN),\n     LintId::of(manual_bits::MANUAL_BITS),\n-    LintId::of(manual_empty_string_creations::MANUAL_EMPTY_STRING_CREATIONS),\n     LintId::of(manual_non_exhaustive::MANUAL_NON_EXHAUSTIVE),\n     LintId::of(match_result_ok::MATCH_RESULT_OK),\n     LintId::of(matches::COLLAPSIBLE_MATCH),"}, {"sha": "be91630b8fa62edd33f73bc1e0056c758da56990", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=b33002d5ff09735dd8c7d44502d7a0e80e3022c1", "patch": "@@ -267,11 +267,11 @@ mod main_recursion;\n mod manual_assert;\n mod manual_async_fn;\n mod manual_bits;\n-mod manual_empty_string_creations;\n mod manual_instant_elapsed;\n mod manual_non_exhaustive;\n mod manual_rem_euclid;\n mod manual_retain;\n+mod manual_string_new;\n mod manual_strip;\n mod map_unit_fn;\n mod match_result_ok;\n@@ -894,7 +894,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|| Box::new(std_instead_of_core::StdReexports::default()));\n     store.register_late_pass(|| Box::new(manual_instant_elapsed::ManualInstantElapsed));\n     store.register_late_pass(|| Box::new(partialeq_to_none::PartialeqToNone));\n-    store.register_late_pass(|| Box::new(manual_empty_string_creations::ManualEmptyStringCreations));\n+    store.register_late_pass(|| Box::new(manual_string_new::ManualStringNew));\n     store.register_late_pass(|| Box::new(unused_peekable::UnusedPeekable));\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }"}, {"sha": "a90eaa8fdcbe35b200216f180c5675be3d5ff6d0", "filename": "clippy_lints/src/manual_string_new.rs", "status": "renamed", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/clippy_lints%2Fsrc%2Fmanual_string_new.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/clippy_lints%2Fsrc%2Fmanual_string_new.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_string_new.rs?ref=b33002d5ff09735dd8c7d44502d7a0e80e3022c1", "patch": "@@ -29,13 +29,13 @@ declare_clippy_lint! {\n     /// let b = String::new();\n     /// ```\n     #[clippy::version = \"1.65.0\"]\n-    pub MANUAL_EMPTY_STRING_CREATIONS,\n-    style,\n+    pub MANUAL_STRING_NEW,\n+    pedantic,\n     \"empty String is being created manually\"\n }\n-declare_lint_pass!(ManualEmptyStringCreations => [MANUAL_EMPTY_STRING_CREATIONS]);\n+declare_lint_pass!(ManualStringNew => [MANUAL_STRING_NEW]);\n \n-impl LateLintPass<'_> for ManualEmptyStringCreations {\n+impl LateLintPass<'_> for ManualStringNew {\n     fn check_expr(&mut self, cx: &LateContext<'_>, expr: &Expr<'_>) {\n         if expr.span.from_expansion() {\n             return;\n@@ -75,11 +75,10 @@ fn is_expr_kind_empty_str(expr_kind: &ExprKind<'_>) -> bool {\n     false\n }\n \n-/// Emits the `MANUAL_EMPTY_STRING_CREATION` warning and suggests the appropriate fix.\n fn warn_then_suggest(cx: &LateContext<'_>, span: Span) {\n     span_lint_and_sugg(\n         cx,\n-        MANUAL_EMPTY_STRING_CREATIONS,\n+        MANUAL_STRING_NEW,\n         span,\n         \"empty String is being created manually\",\n         \"consider using\",", "previous_filename": "clippy_lints/src/manual_empty_string_creations.rs"}, {"sha": "a376411bfbc804e3019f409f80c57050ff1fb4f6", "filename": "tests/ui/manual_string_new.fixed", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/tests%2Fui%2Fmanual_string_new.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/tests%2Fui%2Fmanual_string_new.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_string_new.fixed?ref=b33002d5ff09735dd8c7d44502d7a0e80e3022c1", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n \n-#![warn(clippy::manual_empty_string_creations)]\n+#![warn(clippy::manual_string_new)]\n \n macro_rules! create_strings_from_macro {\n     // When inside a macro, nothing should warn to prevent false positives.", "previous_filename": "tests/ui/manual_empty_string_creations.fixed"}, {"sha": "6bfc52fb1bce3ef6ecb8b0804af955d1fdd1b2f8", "filename": "tests/ui/manual_string_new.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/tests%2Fui%2Fmanual_string_new.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/tests%2Fui%2Fmanual_string_new.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_string_new.rs?ref=b33002d5ff09735dd8c7d44502d7a0e80e3022c1", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n \n-#![warn(clippy::manual_empty_string_creations)]\n+#![warn(clippy::manual_string_new)]\n \n macro_rules! create_strings_from_macro {\n     // When inside a macro, nothing should warn to prevent false positives.", "previous_filename": "tests/ui/manual_empty_string_creations.rs"}, {"sha": "e5ecfc61947a35f357e236eddf9f1bdf44914f3e", "filename": "tests/ui/manual_string_new.stderr", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/tests%2Fui%2Fmanual_string_new.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/tests%2Fui%2Fmanual_string_new.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_string_new.stderr?ref=b33002d5ff09735dd8c7d44502d7a0e80e3022c1", "patch": "@@ -1,55 +1,55 @@\n error: empty String is being created manually\n-  --> $DIR/manual_empty_string_creations.rs:15:13\n+  --> $DIR/manual_string_new.rs:15:13\n    |\n LL |     let _ = \"\".to_string();\n    |             ^^^^^^^^^^^^^^ help: consider using: `String::new()`\n    |\n-   = note: `-D clippy::manual-empty-string-creations` implied by `-D warnings`\n+   = note: `-D clippy::manual-string-new` implied by `-D warnings`\n \n error: empty String is being created manually\n-  --> $DIR/manual_empty_string_creations.rs:18:13\n+  --> $DIR/manual_string_new.rs:18:13\n    |\n LL |     let _ = \"\".to_owned();\n    |             ^^^^^^^^^^^^^ help: consider using: `String::new()`\n \n error: empty String is being created manually\n-  --> $DIR/manual_empty_string_creations.rs:21:21\n+  --> $DIR/manual_string_new.rs:21:21\n    |\n LL |     let _: String = \"\".into();\n    |                     ^^^^^^^^^ help: consider using: `String::new()`\n \n error: empty String is being created manually\n-  --> $DIR/manual_empty_string_creations.rs:28:13\n+  --> $DIR/manual_string_new.rs:28:13\n    |\n LL |     let _ = String::from(\"\");\n    |             ^^^^^^^^^^^^^^^^ help: consider using: `String::new()`\n \n error: empty String is being created manually\n-  --> $DIR/manual_empty_string_creations.rs:29:13\n+  --> $DIR/manual_string_new.rs:29:13\n    |\n LL |     let _ = <String>::from(\"\");\n    |             ^^^^^^^^^^^^^^^^^^ help: consider using: `String::new()`\n \n error: empty String is being created manually\n-  --> $DIR/manual_empty_string_creations.rs:34:13\n+  --> $DIR/manual_string_new.rs:34:13\n    |\n LL |     let _ = String::try_from(\"\").unwrap();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `String::new()`\n \n error: empty String is being created manually\n-  --> $DIR/manual_empty_string_creations.rs:40:21\n+  --> $DIR/manual_string_new.rs:40:21\n    |\n LL |     let _: String = From::from(\"\");\n    |                     ^^^^^^^^^^^^^^ help: consider using: `String::new()`\n \n error: empty String is being created manually\n-  --> $DIR/manual_empty_string_creations.rs:45:21\n+  --> $DIR/manual_string_new.rs:45:21\n    |\n LL |     let _: String = TryFrom::try_from(\"\").unwrap();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `String::new()`\n \n error: empty String is being created manually\n-  --> $DIR/manual_empty_string_creations.rs:48:21\n+  --> $DIR/manual_string_new.rs:48:21\n    |\n LL |     let _: String = TryFrom::try_from(\"\").expect(\"this should warn\");\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `String::new()`", "previous_filename": "tests/ui/manual_empty_string_creations.stderr"}, {"sha": "40052c41039e5d01c320f34743fe48331fc9e81a", "filename": "tests/ui/unnecessary_owned_empty_strings.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/tests%2Fui%2Funnecessary_owned_empty_strings.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/tests%2Fui%2Funnecessary_owned_empty_strings.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_owned_empty_strings.fixed?ref=b33002d5ff09735dd8c7d44502d7a0e80e3022c1", "patch": "@@ -12,7 +12,7 @@ fn main() {\n     ref_str_argument(\"\");\n \n     // should be linted\n-    #[allow(clippy::manual_empty_string_creations)]\n+    #[allow(clippy::manual_string_new)]\n     ref_str_argument(\"\");\n \n     // should not be linted"}, {"sha": "2304dff5192b9ee66c34805feab80ab2d55bd62c", "filename": "tests/ui/unnecessary_owned_empty_strings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/tests%2Fui%2Funnecessary_owned_empty_strings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b33002d5ff09735dd8c7d44502d7a0e80e3022c1/tests%2Fui%2Funnecessary_owned_empty_strings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_owned_empty_strings.rs?ref=b33002d5ff09735dd8c7d44502d7a0e80e3022c1", "patch": "@@ -12,7 +12,7 @@ fn main() {\n     ref_str_argument(&String::new());\n \n     // should be linted\n-    #[allow(clippy::manual_empty_string_creations)]\n+    #[allow(clippy::manual_string_new)]\n     ref_str_argument(&String::from(\"\"));\n \n     // should not be linted"}]}