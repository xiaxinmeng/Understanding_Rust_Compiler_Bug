{"sha": "8cfc8153da71c599ba6e118279d366b74638057e", "node_id": "C_kwDOAAsO6NoAKDhjZmM4MTUzZGE3MWM1OTliYTZlMTE4Mjc5ZDM2NmI3NDYzODA1N2U", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-11-23T06:00:37Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-11-28T04:17:45Z"}, "message": "Remove `Lit::from_included_bytes`.\n\n`Lit::from_included_bytes` calls `Lit::from_lit_kind`, but the two call\nsites only need the resulting `token::Lit`, not the full `ast::Lit`.\n\nThis commit changes those call sites to use `LitKind::to_token_lit`,\nwhich means `from_included_bytes` can be removed.", "tree": {"sha": "85eb61282cf859796b07ec94cc996462145d220c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85eb61282cf859796b07ec94cc996462145d220c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cfc8153da71c599ba6e118279d366b74638057e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cfc8153da71c599ba6e118279d366b74638057e", "html_url": "https://github.com/rust-lang/rust/commit/8cfc8153da71c599ba6e118279d366b74638057e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cfc8153da71c599ba6e118279d366b74638057e/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c6bf2bee7914fd94f8ae5ec96234e8a2ce51958", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c6bf2bee7914fd94f8ae5ec96234e8a2ce51958", "html_url": "https://github.com/rust-lang/rust/commit/8c6bf2bee7914fd94f8ae5ec96234e8a2ce51958"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "8eec869fbe5f05257979318f59b804318a3418a0", "filename": "compiler/rustc_ast/src/util/literal.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8cfc8153da71c599ba6e118279d366b74638057e/compiler%2Frustc_ast%2Fsrc%2Futil%2Fliteral.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cfc8153da71c599ba6e118279d366b74638057e/compiler%2Frustc_ast%2Fsrc%2Futil%2Fliteral.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Futil%2Fliteral.rs?ref=8cfc8153da71c599ba6e118279d366b74638057e", "patch": "@@ -2,7 +2,6 @@\n \n use crate::ast::{self, Lit, LitKind};\n use crate::token::{self, Token};\n-use rustc_data_structures::sync::Lrc;\n use rustc_lexer::unescape::{byte_from_char, unescape_byte, unescape_char, unescape_literal, Mode};\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n@@ -215,13 +214,6 @@ impl Lit {\n         Lit { token_lit: kind.to_token_lit(), kind, span }\n     }\n \n-    /// Recovers an AST literal from a string of bytes produced by `include_bytes!`.\n-    /// This requires ASCII-escaping the string, which can result in poor performance\n-    /// for very large strings of bytes.\n-    pub fn from_included_bytes(bytes: &Lrc<[u8]>, span: Span) -> Lit {\n-        Self::from_lit_kind(LitKind::ByteStr(bytes.clone()), span)\n-    }\n-\n     /// Losslessly convert an AST literal into a token.\n     pub fn to_token(&self) -> Token {\n         let kind = match self.token_lit.kind {"}, {"sha": "f4d77549eff4cc77a3a374cd9267b5678b741ef9", "filename": "compiler/rustc_ast_pretty/src/pprust/state/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8cfc8153da71c599ba6e118279d366b74638057e/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cfc8153da71c599ba6e118279d366b74638057e/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fexpr.rs?ref=8cfc8153da71c599ba6e118279d366b74638057e", "patch": "@@ -328,8 +328,8 @@ impl<'a> State<'a> {\n                 self.print_token_literal(token_lit, expr.span);\n             }\n             ast::ExprKind::IncludedBytes(ref bytes) => {\n-                let lit = ast::Lit::from_included_bytes(bytes, expr.span);\n-                self.print_literal(&lit)\n+                let lit = ast::LitKind::ByteStr(bytes.clone()).to_token_lit();\n+                self.print_token_literal(lit, expr.span)\n             }\n             ast::ExprKind::Cast(ref expr, ref ty) => {\n                 let prec = AssocOp::As.precedence() as i8;"}, {"sha": "b69556c0e7cc208da465d02b01f7e3387b984549", "filename": "compiler/rustc_expand/src/proc_macro_server.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8cfc8153da71c599ba6e118279d366b74638057e/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cfc8153da71c599ba6e118279d366b74638057e/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs?ref=8cfc8153da71c599ba6e118279d366b74638057e", "patch": "@@ -526,9 +526,9 @@ impl server::TokenStream for Rustc<'_, '_> {\n                 Ok(tokenstream::TokenStream::token_alone(token::Literal(*token_lit), expr.span))\n             }\n             ast::ExprKind::IncludedBytes(bytes) => {\n-                let lit = ast::Lit::from_included_bytes(bytes, expr.span);\n+                let lit = ast::LitKind::ByteStr(bytes.clone()).to_token_lit();\n                 Ok(tokenstream::TokenStream::token_alone(\n-                    token::TokenKind::Literal(lit.token_lit),\n+                    token::TokenKind::Literal(lit),\n                     expr.span,\n                 ))\n             }"}]}