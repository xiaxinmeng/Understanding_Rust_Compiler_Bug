{"sha": "55e67bfc105ef6abf0997584e0e84cc939f35dc6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1ZTY3YmZjMTA1ZWY2YWJmMDk5NzU4NGUwZTg0Y2M5MzlmMzVkYzY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-10-14T12:20:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-14T12:20:51Z"}, "message": "Merge pull request #1278 from d-dorazio/1112\n\nSuggest `nth(X)` instead of `skip(X).next()`", "tree": {"sha": "14273e71e5eeedf6f9198997062a89d084aa4570", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14273e71e5eeedf6f9198997062a89d084aa4570"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55e67bfc105ef6abf0997584e0e84cc939f35dc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55e67bfc105ef6abf0997584e0e84cc939f35dc6", "html_url": "https://github.com/rust-lang/rust/commit/55e67bfc105ef6abf0997584e0e84cc939f35dc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55e67bfc105ef6abf0997584e0e84cc939f35dc6/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fbd8906e1db3b3e949b630cd4f56f627e35b2b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fbd8906e1db3b3e949b630cd4f56f627e35b2b3", "html_url": "https://github.com/rust-lang/rust/commit/4fbd8906e1db3b3e949b630cd4f56f627e35b2b3"}, {"sha": "62831c6e295b8d6f23dca5bbf17022153ab11a9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/62831c6e295b8d6f23dca5bbf17022153ab11a9d", "html_url": "https://github.com/rust-lang/rust/commit/62831c6e295b8d6f23dca5bbf17022153ab11a9d"}], "stats": {"total": 73, "additions": 71, "deletions": 2}, "files": [{"sha": "4f7176f5bb3a00bee1e875b3572f694a1d62cdd4", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55e67bfc105ef6abf0997584e0e84cc939f35dc6/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/55e67bfc105ef6abf0997584e0e84cc939f35dc6/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=55e67bfc105ef6abf0997584e0e84cc939f35dc6", "patch": "@@ -266,6 +266,7 @@ All notable changes to this project will be documented in this file.\n [`items_after_statements`]: https://github.com/Manishearth/rust-clippy/wiki#items_after_statements\n [`iter_next_loop`]: https://github.com/Manishearth/rust-clippy/wiki#iter_next_loop\n [`iter_nth`]: https://github.com/Manishearth/rust-clippy/wiki#iter_nth\n+[`iter_skip_next`]: https://github.com/Manishearth/rust-clippy/wiki#iter_skip_next\n [`len_without_is_empty`]: https://github.com/Manishearth/rust-clippy/wiki#len_without_is_empty\n [`len_zero`]: https://github.com/Manishearth/rust-clippy/wiki#len_zero\n [`let_and_return`]: https://github.com/Manishearth/rust-clippy/wiki#let_and_return"}, {"sha": "fee1c5427f215e51d70823443e784a892ef3fc99", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/55e67bfc105ef6abf0997584e0e84cc939f35dc6/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/55e67bfc105ef6abf0997584e0e84cc939f35dc6/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=55e67bfc105ef6abf0997584e0e84cc939f35dc6", "patch": "@@ -174,7 +174,7 @@ You can check out this great service at [clippy.bashy.io](https://clippy.bashy.i\n \n ## Lints\n \n-There are 173 lints included in this crate:\n+There are 174 lints included in this crate:\n \n name                                                                                                                 | default | triggers on\n ---------------------------------------------------------------------------------------------------------------------|---------|----------------------------------------------------------------------------------------------------------------------------------\n@@ -244,6 +244,7 @@ name\n [items_after_statements](https://github.com/Manishearth/rust-clippy/wiki#items_after_statements)                     | allow   | blocks where an item comes after a statement\n [iter_next_loop](https://github.com/Manishearth/rust-clippy/wiki#iter_next_loop)                                     | warn    | for-looping over `_.next()` which is probably not intended\n [iter_nth](https://github.com/Manishearth/rust-clippy/wiki#iter_nth)                                                 | warn    | using `.iter().nth()` on a standard library type with O(1) element access\n+[iter_skip_next](https://github.com/Manishearth/rust-clippy/wiki#iter_skip_next)                                     | warn    | using `.skip(x).next()` on an iterator\n [len_without_is_empty](https://github.com/Manishearth/rust-clippy/wiki#len_without_is_empty)                         | warn    | traits or impls with a public `len` method but no corresponding `is_empty` method\n [len_zero](https://github.com/Manishearth/rust-clippy/wiki#len_zero)                                                 | warn    | checking `.len() == 0` or `.len() > 0` (or similar) when `.is_empty()` could be used instead\n [let_and_return](https://github.com/Manishearth/rust-clippy/wiki#let_and_return)                                     | warn    | creating a let-binding and then immediately returning it like `let x = expr; x` at the end of a block"}, {"sha": "8aa84082bce8d4932ca542911e912b760f4d8157", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55e67bfc105ef6abf0997584e0e84cc939f35dc6/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55e67bfc105ef6abf0997584e0e84cc939f35dc6/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=55e67bfc105ef6abf0997584e0e84cc939f35dc6", "patch": "@@ -372,6 +372,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         methods::EXTEND_FROM_SLICE,\n         methods::FILTER_NEXT,\n         methods::ITER_NTH,\n+        methods::ITER_SKIP_NEXT,\n         methods::NEW_RET_NO_SELF,\n         methods::OK_EXPECT,\n         methods::OR_FUN_CALL,"}, {"sha": "4bf8e806b7bf2a44908642174bae3c26a06f5a88", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/55e67bfc105ef6abf0997584e0e84cc939f35dc6/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55e67bfc105ef6abf0997584e0e84cc939f35dc6/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=55e67bfc105ef6abf0997584e0e84cc939f35dc6", "patch": "@@ -440,6 +440,31 @@ declare_lint! {\n     \"using `.iter().nth()` on a standard library type with O(1) element access\"\n }\n \n+/// **What it does:** Checks for use of `.skip(x).next()` on iterators.\n+///\n+/// **Why is this bad?** `.nth(x)` is cleaner\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+/// ```rust\n+/// let some_vec = vec![0, 1, 2, 3];\n+/// let bad_vec = some_vec.iter().skip(3).next();\n+/// let bad_slice = &some_vec[..].iter().skip(3).next();\n+/// ```\n+/// The correct use would be:\n+/// ```rust\n+/// let some_vec = vec![0, 1, 2, 3];\n+/// let bad_vec = some_vec.iter().nth(3);\n+/// let bad_slice = &some_vec[..].iter().nth(3);\n+/// ```\n+declare_lint! {\n+    pub ITER_SKIP_NEXT,\n+    Warn,\n+    \"using `.skip(x).next()` on an iterator\"\n+}\n+\n+\n impl LintPass for Pass {\n     fn get_lints(&self) -> LintArray {\n         lint_array!(EXTEND_FROM_SLICE,\n@@ -461,7 +486,8 @@ impl LintPass for Pass {\n                     TEMPORARY_CSTRING_AS_PTR,\n                     FILTER_NEXT,\n                     FILTER_MAP,\n-                    ITER_NTH)\n+                    ITER_NTH,\n+                    ITER_SKIP_NEXT)\n     }\n }\n \n@@ -506,6 +532,8 @@ impl LateLintPass for Pass {\n                     lint_iter_nth(cx, expr, arglists[0], false);\n                 } else if let Some(arglists) = method_chain_args(expr, &[\"iter_mut\", \"nth\"]) {\n                     lint_iter_nth(cx, expr, arglists[0], true);\n+                } else if let Some(_) = method_chain_args(expr, &[\"skip\", \"next\"]) {\n+                    lint_iter_skip_next(cx, expr);\n                 }\n \n                 lint_or_fun_call(cx, expr, &name.node.as_str(), args);\n@@ -790,6 +818,18 @@ fn lint_iter_nth(cx: &LateContext, expr: &hir::Expr, iter_args: &MethodArgs, is_\n     );\n }\n \n+fn lint_iter_skip_next(cx: &LateContext, expr: &hir::Expr){\n+    // lint if caller of skip is an Iterator\n+    if match_trait_method(cx, expr, &paths::ITERATOR) {\n+         span_lint(\n+            cx,\n+            ITER_SKIP_NEXT,\n+            expr.span,\n+            \"called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\"\n+        );\n+    }\n+}\n+\n fn derefs_to_slice(cx: &LateContext, expr: &hir::Expr, ty: ty::Ty) -> Option<sugg::Sugg<'static>> {\n     fn may_slice(cx: &LateContext, ty: ty::Ty) -> bool {\n         match ty.sty {"}, {"sha": "a26a396526e9080f0f61005d2cd7f45dd5abab38", "filename": "tests/compile-fail/methods.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/55e67bfc105ef6abf0997584e0e84cc939f35dc6/tests%2Fcompile-fail%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55e67bfc105ef6abf0997584e0e84cc939f35dc6/tests%2Fcompile-fail%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmethods.rs?ref=55e67bfc105ef6abf0997584e0e84cc939f35dc6", "patch": "@@ -173,6 +173,10 @@ impl IteratorFalsePositives {\n     fn nth(self, n: usize) -> Option<u32> {\n         Some(self.foo)\n     }\n+\n+    fn skip(self, _: usize) -> IteratorFalsePositives {\n+        self\n+    }\n }\n \n /// Checks implementation of `FILTER_NEXT` lint\n@@ -363,6 +367,28 @@ fn iter_nth() {\n     let ok_mut = false_positive.iter_mut().nth(3);\n }\n \n+/// Checks implementation of `ITER_SKIP_NEXT` lint\n+fn iter_skip_next() {\n+    let mut some_vec = vec![0, 1, 2, 3];\n+\n+    let _ = some_vec.iter().skip(42).next();\n+    //~^ERROR called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n+\n+    let _ = some_vec.iter().cycle().skip(42).next();\n+    //~^ERROR called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n+\n+    let _ = (1..10).skip(10).next();\n+    //~^ERROR called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n+\n+    let _ = &some_vec[..].iter().skip(3).next();\n+    //~^ERROR called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n+\n+    let foo = IteratorFalsePositives { foo : 0 };\n+    let _ = foo.skip(42).next();\n+    let _ = foo.filter().skip(42).next();\n+}\n+\n+\n #[allow(similar_names)]\n fn main() {\n     use std::io;"}]}