{"sha": "c06ea8f9445dbb5eda99ac8730d7fb2177df6816", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwNmVhOGY5NDQ1ZGJiNWVkYTk5YWM4NzMwZDdmYjIxNzdkZjY4MTY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-25T19:15:40Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-25T19:15:40Z"}, "message": "Add test of recursive object types (ha, work by default) and fix effect-walker bug revealed by it.", "tree": {"sha": "acf35b5b3a2d1d0a37aede3ec7193eaa5a588f3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/acf35b5b3a2d1d0a37aede3ec7193eaa5a588f3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c06ea8f9445dbb5eda99ac8730d7fb2177df6816", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c06ea8f9445dbb5eda99ac8730d7fb2177df6816", "html_url": "https://github.com/rust-lang/rust/commit/c06ea8f9445dbb5eda99ac8730d7fb2177df6816", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c06ea8f9445dbb5eda99ac8730d7fb2177df6816/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "422b8a6be4aab120685f450db0a520fcb5a8aa6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/422b8a6be4aab120685f450db0a520fcb5a8aa6b", "html_url": "https://github.com/rust-lang/rust/commit/422b8a6be4aab120685f450db0a520fcb5a8aa6b"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "289976a098542d28b08f14060031d2865b838d19", "filename": "src/boot/me/effect.ml", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c06ea8f9445dbb5eda99ac8730d7fb2177df6816/src%2Fboot%2Fme%2Feffect.ml", "raw_url": "https://github.com/rust-lang/rust/raw/c06ea8f9445dbb5eda99ac8730d7fb2177df6816/src%2Fboot%2Fme%2Feffect.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Feffect.ml?ref=c06ea8f9445dbb5eda99ac8730d7fb2177df6816", "patch": "@@ -72,6 +72,7 @@ let function_effect_propagation_visitor\n    *    - Calling a function with effect e lowers to e.\n    *)\n   let curr_fn = Stack.create () in\n+\n   let visit_mod_item_pre n p i =\n     begin\n       match i.node.Ast.decl_item with\n@@ -80,16 +81,29 @@ let function_effect_propagation_visitor\n     end;\n     inner.Walk.visit_mod_item_pre n p i\n   in\n+\n   let visit_mod_item_post n p i =\n     inner.Walk.visit_mod_item_post n p i;\n     match i.node.Ast.decl_item with\n         Ast.MOD_ITEM_fn _ -> ignore (Stack.pop curr_fn)\n       | _ -> ()\n   in\n+\n+  let visit_obj_fn_pre o i fi =\n+    Stack.push fi.id curr_fn;\n+    inner.Walk.visit_obj_fn_pre o i fi\n+  in\n+\n+  let visit_obj_fn_post o i fi =\n+    inner.Walk.visit_obj_fn_post o i fi;\n+    ignore (Stack.pop curr_fn)\n+  in\n+\n   let visit_obj_drop_pre o b =\n     Stack.push b.id curr_fn;\n     inner.Walk.visit_obj_drop_pre o b\n   in\n+\n   let visit_obj_drop_post o b =\n     inner.Walk.visit_obj_drop_post o b;\n     ignore (Stack.pop curr_fn);\n@@ -155,6 +169,8 @@ let function_effect_propagation_visitor\n     { inner with\n         Walk.visit_mod_item_pre = visit_mod_item_pre;\n         Walk.visit_mod_item_post = visit_mod_item_post;\n+        Walk.visit_obj_fn_pre = visit_obj_fn_pre;\n+        Walk.visit_obj_fn_post = visit_obj_fn_post;\n         Walk.visit_obj_drop_pre = visit_obj_drop_pre;\n         Walk.visit_obj_drop_post = visit_obj_drop_post;\n         Walk.visit_stmt_pre = visit_stmt_pre }"}, {"sha": "3e562e36f9ec437d5b447b2060b567e2b8ced288", "filename": "src/test/run-pass/obj-recursion.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c06ea8f9445dbb5eda99ac8730d7fb2177df6816/src%2Ftest%2Frun-pass%2Fobj-recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c06ea8f9445dbb5eda99ac8730d7fb2177df6816/src%2Ftest%2Frun-pass%2Fobj-recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fobj-recursion.rs?ref=c06ea8f9445dbb5eda99ac8730d7fb2177df6816", "patch": "@@ -0,0 +1,25 @@\n+type adder =\n+  obj {\n+    fn add();\n+  };\n+\n+obj leaf_adder(int x) {\n+  fn add() {\n+    log \"leaf\";\n+    log x;\n+  }\n+}\n+obj delegate_adder(adder a) {\n+  fn add() {\n+    a.add();\n+  }\n+}\n+\n+fn main() {\n+  auto x =\n+    delegate_adder\n+    (delegate_adder\n+     (delegate_adder\n+      (leaf_adder(10))));\n+  x.add();\n+}\n\\ No newline at end of file"}]}