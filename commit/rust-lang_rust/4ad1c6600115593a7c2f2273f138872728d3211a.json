{"sha": "4ad1c6600115593a7c2f2273f138872728d3211a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhZDFjNjYwMDExNTU5M2E3YzJmMjI3M2YxMzg4NzI3MjhkMzIxMWE=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-08-06T13:28:05Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-08-06T13:28:05Z"}, "message": "Use custom path value if one exists when searching modules", "tree": {"sha": "e2c2bb1562a9bec52971b0dea519ca3eb7bde894", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2c2bb1562a9bec52971b0dea519ca3eb7bde894"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ad1c6600115593a7c2f2273f138872728d3211a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ad1c6600115593a7c2f2273f138872728d3211a", "html_url": "https://github.com/rust-lang/rust/commit/4ad1c6600115593a7c2f2273f138872728d3211a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ad1c6600115593a7c2f2273f138872728d3211a/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "803d000ed3ab291ccf438a2cb29968aa50f067e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/803d000ed3ab291ccf438a2cb29968aa50f067e7", "html_url": "https://github.com/rust-lang/rust/commit/803d000ed3ab291ccf438a2cb29968aa50f067e7"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "3316c5a970bcf90d9fd85597180018bdf834635f", "filename": "src/modules.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4ad1c6600115593a7c2f2273f138872728d3211a/src%2Fmodules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ad1c6600115593a7c2f2273f138872728d3211a/src%2Fmodules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmodules.rs?ref=4ad1c6600115593a7c2f2273f138872728d3211a", "patch": "@@ -15,6 +15,7 @@ use std::path::{Path, PathBuf};\n use syntax::ast;\n use syntax::codemap;\n use syntax::parse::{parser, DirectoryOwnership};\n+use syntax_pos::symbol::Symbol;\n \n use config::FileName;\n use utils::contains_skip;\n@@ -38,6 +39,18 @@ pub fn list_files<'a>(\n     Ok(result)\n }\n \n+fn path_value(attr: &ast::Attribute) -> Option<Symbol> {\n+    if attr.name() == \"path\" {\n+        attr.value_str()\n+    } else {\n+        None\n+    }\n+}\n+\n+fn find_path_value(attrs: &[ast::Attribute]) -> Option<Symbol> {\n+    attrs.iter().flat_map(path_value).next()\n+}\n+\n /// Recursively list all external modules included in a module.\n fn list_submodules<'a>(\n     module: &'a ast::Mod,\n@@ -53,7 +66,11 @@ fn list_submodules<'a>(\n                 let is_internal =\n                     codemap.span_to_filename(item.span) == codemap.span_to_filename(sub_mod.inner);\n                 let (dir_path, relative) = if is_internal {\n-                    (search_dir.join(&item.ident.to_string()), None)\n+                    if let Some(path) = find_path_value(&item.attrs) {\n+                        (search_dir.join(&path.as_str()), None)\n+                    } else {\n+                        (search_dir.join(&item.ident.to_string()), None)\n+                    }\n                 } else {\n                     let (mod_path, relative) =\n                         module_file(item.ident, &item.attrs, search_dir, relative, codemap)?;"}]}