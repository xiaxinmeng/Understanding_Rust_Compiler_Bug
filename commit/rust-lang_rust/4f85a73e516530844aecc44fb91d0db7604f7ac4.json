{"sha": "4f85a73e516530844aecc44fb91d0db7604f7ac4", "node_id": "C_kwDOAAsO6NoAKDRmODVhNzNlNTE2NTMwODQ0YWVjYzQ0ZmI5MWQwZGI3NjA0ZjdhYzQ", "commit": {"author": {"name": "Waffle Maybe", "email": "waffle.lapkin@gmail.com", "date": "2022-06-05T21:35:37Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-06-05T21:40:52Z"}, "message": "Add spaces before and after expr in add {} suggestion\n\nCo-authored-by: Michael Goulet <michael@errs.io>", "tree": {"sha": "34afcdf8de6349ead7ec6386b8ac448319415432", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34afcdf8de6349ead7ec6386b8ac448319415432"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f85a73e516530844aecc44fb91d0db7604f7ac4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f85a73e516530844aecc44fb91d0db7604f7ac4", "html_url": "https://github.com/rust-lang/rust/commit/4f85a73e516530844aecc44fb91d0db7604f7ac4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f85a73e516530844aecc44fb91d0db7604f7ac4/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f06f05174581702e822f1d866a06e0a6a22d0b3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f06f05174581702e822f1d866a06e0a6a22d0b3d", "html_url": "https://github.com/rust-lang/rust/commit/f06f05174581702e822f1d866a06e0a6a22d0b3d"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "b786c52e6880f8f926da967871954777ffa92b0a", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f85a73e516530844aecc44fb91d0db7604f7ac4/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f85a73e516530844aecc44fb91d0db7604f7ac4/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=4f85a73e516530844aecc44fb91d0db7604f7ac4", "patch": "@@ -1593,8 +1593,8 @@ impl<'a> Parser<'a> {\n \n                 let sugg_msg = \"consider enclosing expression in a block\";\n                 let suggestions = vec![\n-                    (span.shrink_to_lo(), \"{\".to_owned()),\n-                    (span.shrink_to_hi(), \"}\".to_owned()),\n+                    (span.shrink_to_lo(), \"{ \".to_owned()),\n+                    (span.shrink_to_hi(), \" }\".to_owned()),\n                 ];\n \n                 err.multipart_suggestion_verbose("}, {"sha": "fe546a71971176cb1addee19aa68d4bcdc670e86", "filename": "src/test/ui/parser/recover-labeled-non-block-expr.fixed", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4f85a73e516530844aecc44fb91d0db7604f7ac4/src%2Ftest%2Fui%2Fparser%2Frecover-labeled-non-block-expr.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4f85a73e516530844aecc44fb91d0db7604f7ac4/src%2Ftest%2Fui%2Fparser%2Frecover-labeled-non-block-expr.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-labeled-non-block-expr.fixed?ref=4f85a73e516530844aecc44fb91d0db7604f7ac4", "patch": "@@ -4,12 +4,12 @@ fn main() {\n     let _ = 1 + 1; //~ ERROR expected `while`, `for`, `loop` or `{` after a label\n \n     match () { () => {}, }; //~ ERROR expected `while`, `for`, `loop` or `{` after a label\n-    'label: {match () { () => break 'label, }}; //~ ERROR expected `while`, `for`, `loop` or `{` after a label\n+    'label: { match () { () => break 'label, } }; //~ ERROR expected `while`, `for`, `loop` or `{` after a label\n     #[allow(unused_labels)]\n-    'label: {match () { () => 'lp: loop { break 'lp 0 }, }}; //~ ERROR expected `while`, `for`, `loop` or `{` after a label\n+    'label: { match () { () => 'lp: loop { break 'lp 0 }, } }; //~ ERROR expected `while`, `for`, `loop` or `{` after a label\n \n     let x = 1;\n-    let _i = 'label: {match x { //~ ERROR expected `while`, `for`, `loop` or `{` after a label\n+    let _i = 'label: { match x { //~ ERROR expected `while`, `for`, `loop` or `{` after a label\n         0 => 42,\n         1 if false => break 'label 17,\n         1 => {\n@@ -20,8 +20,8 @@ fn main() {\n             }\n         }\n         _ => 1,\n-    }};\n+    } };\n \n     let other = 3;\n-    let _val = 'label: {(1, if other == 3 { break 'label (2, 3) } else { other })}; //~ ERROR expected `while`, `for`, `loop` or `{` after a label\n+    let _val = 'label: { (1, if other == 3 { break 'label (2, 3) } else { other }) }; //~ ERROR expected `while`, `for`, `loop` or `{` after a label\n }"}, {"sha": "767389c48088a7c76f1b9327ada80a05bdf0f5e2", "filename": "src/test/ui/parser/recover-labeled-non-block-expr.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4f85a73e516530844aecc44fb91d0db7604f7ac4/src%2Ftest%2Fui%2Fparser%2Frecover-labeled-non-block-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4f85a73e516530844aecc44fb91d0db7604f7ac4/src%2Ftest%2Fui%2Fparser%2Frecover-labeled-non-block-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-labeled-non-block-expr.stderr?ref=4f85a73e516530844aecc44fb91d0db7604f7ac4", "patch": "@@ -30,8 +30,8 @@ LL |     'label: match () { () => break 'label, };\n    |\n help: consider enclosing expression in a block\n    |\n-LL |     'label: {match () { () => break 'label, }};\n-   |             +                                +\n+LL |     'label: { match () { () => break 'label, } };\n+   |             +                                  +\n \n error: expected `while`, `for`, `loop` or `{` after a label\n   --> $DIR/recover-labeled-non-block-expr.rs:9:13\n@@ -41,8 +41,8 @@ LL |     'label: match () { () => 'lp: loop { break 'lp 0 }, };\n    |\n help: consider enclosing expression in a block\n    |\n-LL |     'label: {match () { () => 'lp: loop { break 'lp 0 }, }};\n-   |             +                                             +\n+LL |     'label: { match () { () => 'lp: loop { break 'lp 0 }, } };\n+   |             +                                               +\n \n error: expected `while`, `for`, `loop` or `{` after a label\n   --> $DIR/recover-labeled-non-block-expr.rs:12:22\n@@ -52,7 +52,7 @@ LL |     let _i = 'label: match x {\n    |\n help: consider enclosing expression in a block\n    |\n-LL ~     let _i = 'label: {match x {\n+LL ~     let _i = 'label: { match x {\n LL |         0 => 42,\n LL |         1 if false => break 'label 17,\n LL |         1 => {\n@@ -68,8 +68,8 @@ LL |     let _val = 'label: (1, if other == 3 { break 'label (2, 3) } else { oth\n    |\n help: consider enclosing expression in a block\n    |\n-LL |     let _val = 'label: {(1, if other == 3 { break 'label (2, 3) } else { other })};\n-   |                        +                                                         +\n+LL |     let _val = 'label: { (1, if other == 3 { break 'label (2, 3) } else { other }) };\n+   |                        +                                                           +\n \n error: aborting due to 6 previous errors\n "}]}