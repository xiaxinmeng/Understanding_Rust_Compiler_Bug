{"sha": "96ecaa17a7f333f3c374d5742565087a72798479", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2ZWNhYTE3YTdmMzMzZjNjMzc0ZDU3NDI1NjUwODdhNzI3OTg0Nzk=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-07-31T10:57:49Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-07-31T10:57:49Z"}, "message": "Relocate Arc and Rc UnwindSafe impls", "tree": {"sha": "1a9a90458593e992f2c10e48573af9971edc66f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a9a90458593e992f2c10e48573af9971edc66f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96ecaa17a7f333f3c374d5742565087a72798479", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmEFLK0ACgkQ+boUO5X/\nbYKPbRAAxQ49fu2tGLo270FAeCdNZhYdKJMnDT8jDafxNvqNFGCgqt9dLGfbcRb/\nEK5IfhnkaQLki/VBrrS3EaTkLrTXKdi4L5hnOPAO4LoBFD2X+FIujanjYpTNJ52K\ngWtfNz0Y++aoiEEbdky6NxDa5807D8HA9epFMZ5B898DhcZ0lsFYm0Asg0/SwrBF\nepIiVooc1RWpBSMVzuH1h5/IvboDm7erXZaMSrqvZ9OEckwDFB5H9VFq+fZEPVfg\n+b6JRXYYbHM7KX5wTVY5yuutUp+x0bLEjbR2cc6W4yx23YQ21TqBHee4dELXr86s\nBudpeyP9PuoSf0g/GUWHttj5LeiTq0fyQOoVHWWhHOHXDxkvXuWRtvCn4sRvFLy5\nvS/7OhxqziPanmx5fWONY9BWJbCjK5GdbXjDZuPPDuZG0DIh5RE9K5DbrQPX3k47\nvSKnBZ67toXemhJVbaEHuPbHaWe79pg94ACt9RSnIn+27JBMirab6dBp/QvAABhI\ncFBw3mBFO7XoIunXRo1h9q8cutHzNLuw7ogqWShkLyJzwxcvE8hjRkhKSGNuNMkl\nLByu/gxuQjhW20maofHRphYYw5BE/VuKKSYazBqIWtC8/fukL57Z8KxG7o2JIOVz\nVGweI3Nnvl45B6JsuqzzZt2MP+I890iEgL/obOitP8t8k/OorJM=\n=E10u\n-----END PGP SIGNATURE-----", "payload": "tree 1a9a90458593e992f2c10e48573af9971edc66f1\nparent 60fa568c31f9da49b3e5e7ac14928d145960933e\nauthor David Tolnay <dtolnay@gmail.com> 1627729069 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1627729069 -0700\n\nRelocate Arc and Rc UnwindSafe impls\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96ecaa17a7f333f3c374d5742565087a72798479", "html_url": "https://github.com/rust-lang/rust/commit/96ecaa17a7f333f3c374d5742565087a72798479", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96ecaa17a7f333f3c374d5742565087a72798479/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60fa568c31f9da49b3e5e7ac14928d145960933e", "url": "https://api.github.com/repos/rust-lang/rust/commits/60fa568c31f9da49b3e5e7ac14928d145960933e", "html_url": "https://github.com/rust-lang/rust/commit/60fa568c31f9da49b3e5e7ac14928d145960933e"}], "stats": {"total": 20, "additions": 8, "deletions": 12}, "files": [{"sha": "d2ececaa9759fb8fa7c5c1270a3f8f6c734b8808", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/96ecaa17a7f333f3c374d5742565087a72798479/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96ecaa17a7f333f3c374d5742565087a72798479/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=96ecaa17a7f333f3c374d5742565087a72798479", "patch": "@@ -177,7 +177,6 @@ mod boxed {\n pub mod borrow;\n pub mod collections;\n pub mod fmt;\n-mod panic;\n pub mod prelude;\n pub mod raw_vec;\n pub mod rc;"}, {"sha": "b854be9f5ce8198299fe99fceade2899452f730c", "filename": "library/alloc/src/panic.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/60fa568c31f9da49b3e5e7ac14928d145960933e/library%2Falloc%2Fsrc%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60fa568c31f9da49b3e5e7ac14928d145960933e/library%2Falloc%2Fsrc%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fpanic.rs?ref=60fa568c31f9da49b3e5e7ac14928d145960933e", "patch": "@@ -1,11 +0,0 @@\n-use crate::rc::Rc;\n-use crate::sync::Arc;\n-use core::panic::{RefUnwindSafe, UnwindSafe};\n-\n-// not covered via the Shared impl in libcore b/c the inner contents use\n-// Cell/AtomicUsize, but the usage here is unwind safe so we can lift the\n-// impl up one level to Arc/Rc itself\n-#[stable(feature = \"catch_unwind\", since = \"1.9.0\")]\n-impl<T: RefUnwindSafe + ?Sized> UnwindSafe for Rc<T> {}\n-#[stable(feature = \"catch_unwind\", since = \"1.9.0\")]\n-impl<T: RefUnwindSafe + ?Sized> UnwindSafe for Arc<T> {}"}, {"sha": "0b3079fa59db602ace6aea67c1297380c36bf886", "filename": "library/alloc/src/rc.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/96ecaa17a7f333f3c374d5742565087a72798479/library%2Falloc%2Fsrc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96ecaa17a7f333f3c374d5742565087a72798479/library%2Falloc%2Fsrc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Frc.rs?ref=96ecaa17a7f333f3c374d5742565087a72798479", "patch": "@@ -262,6 +262,7 @@ use core::marker::{self, PhantomData, Unpin, Unsize};\n use core::mem::size_of_val;\n use core::mem::{self, align_of_val_raw, forget};\n use core::ops::{CoerceUnsized, Deref, DispatchFromDyn, Receiver};\n+use core::panic::{RefUnwindSafe, UnwindSafe};\n #[cfg(not(no_global_oom_handling))]\n use core::pin::Pin;\n use core::ptr::{self, NonNull};\n@@ -314,6 +315,9 @@ impl<T: ?Sized> !marker::Send for Rc<T> {}\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: ?Sized> !marker::Sync for Rc<T> {}\n \n+#[stable(feature = \"catch_unwind\", since = \"1.9.0\")]\n+impl<T: RefUnwindSafe + ?Sized> UnwindSafe for Rc<T> {}\n+\n #[unstable(feature = \"coerce_unsized\", issue = \"27732\")]\n impl<T: ?Sized + Unsize<U>, U: ?Sized> CoerceUnsized<Rc<U>> for Rc<T> {}\n "}, {"sha": "3183a6db410b8bddbf6329a9f21531f508be20d8", "filename": "library/alloc/src/sync.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/96ecaa17a7f333f3c374d5742565087a72798479/library%2Falloc%2Fsrc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96ecaa17a7f333f3c374d5742565087a72798479/library%2Falloc%2Fsrc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fsync.rs?ref=96ecaa17a7f333f3c374d5742565087a72798479", "patch": "@@ -19,6 +19,7 @@ use core::marker::{PhantomData, Unpin, Unsize};\n use core::mem::size_of_val;\n use core::mem::{self, align_of_val_raw};\n use core::ops::{CoerceUnsized, Deref, DispatchFromDyn, Receiver};\n+use core::panic::{RefUnwindSafe, UnwindSafe};\n use core::pin::Pin;\n use core::ptr::{self, NonNull};\n #[cfg(not(no_global_oom_handling))]\n@@ -240,6 +241,9 @@ unsafe impl<T: ?Sized + Sync + Send> Send for Arc<T> {}\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n unsafe impl<T: ?Sized + Sync + Send> Sync for Arc<T> {}\n \n+#[stable(feature = \"catch_unwind\", since = \"1.9.0\")]\n+impl<T: RefUnwindSafe + ?Sized> UnwindSafe for Arc<T> {}\n+\n #[unstable(feature = \"coerce_unsized\", issue = \"27732\")]\n impl<T: ?Sized + Unsize<U>, U: ?Sized> CoerceUnsized<Arc<U>> for Arc<T> {}\n "}]}