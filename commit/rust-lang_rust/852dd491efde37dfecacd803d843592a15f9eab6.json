{"sha": "852dd491efde37dfecacd803d843592a15f9eab6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1MmRkNDkxZWZkZTM3ZGZlY2FjZDgwM2Q4NDM1OTJhMTVmOWVhYjY=", "commit": {"author": {"name": "Saleem Jaffer", "email": "ssaleem1992@gmail.com", "date": "2019-04-30T06:49:53Z"}, "committer": {"name": "Saleem Jaffer", "email": "ssaleem1992@gmail.com", "date": "2019-05-04T09:49:59Z"}, "message": "removing map_same from MaybeResult", "tree": {"sha": "65b4066eacec95fcb02f7572b53e4753afa23355", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65b4066eacec95fcb02f7572b53e4753afa23355"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/852dd491efde37dfecacd803d843592a15f9eab6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/852dd491efde37dfecacd803d843592a15f9eab6", "html_url": "https://github.com/rust-lang/rust/commit/852dd491efde37dfecacd803d843592a15f9eab6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/852dd491efde37dfecacd803d843592a15f9eab6/comments", "author": {"login": "saleemjaffer", "id": 19221716, "node_id": "MDQ6VXNlcjE5MjIxNzE2", "avatar_url": "https://avatars.githubusercontent.com/u/19221716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saleemjaffer", "html_url": "https://github.com/saleemjaffer", "followers_url": "https://api.github.com/users/saleemjaffer/followers", "following_url": "https://api.github.com/users/saleemjaffer/following{/other_user}", "gists_url": "https://api.github.com/users/saleemjaffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/saleemjaffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saleemjaffer/subscriptions", "organizations_url": "https://api.github.com/users/saleemjaffer/orgs", "repos_url": "https://api.github.com/users/saleemjaffer/repos", "events_url": "https://api.github.com/users/saleemjaffer/events{/privacy}", "received_events_url": "https://api.github.com/users/saleemjaffer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saleemjaffer", "id": 19221716, "node_id": "MDQ6VXNlcjE5MjIxNzE2", "avatar_url": "https://avatars.githubusercontent.com/u/19221716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saleemjaffer", "html_url": "https://github.com/saleemjaffer", "followers_url": "https://api.github.com/users/saleemjaffer/followers", "following_url": "https://api.github.com/users/saleemjaffer/following{/other_user}", "gists_url": "https://api.github.com/users/saleemjaffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/saleemjaffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saleemjaffer/subscriptions", "organizations_url": "https://api.github.com/users/saleemjaffer/orgs", "repos_url": "https://api.github.com/users/saleemjaffer/repos", "events_url": "https://api.github.com/users/saleemjaffer/events{/privacy}", "received_events_url": "https://api.github.com/users/saleemjaffer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e3d9f1039df40a959d8d63e71dec5ecfecd56c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e3d9f1039df40a959d8d63e71dec5ecfecd56c7", "html_url": "https://github.com/rust-lang/rust/commit/8e3d9f1039df40a959d8d63e71dec5ecfecd56c7"}], "stats": {"total": 44, "additions": 19, "deletions": 25}, "files": [{"sha": "319db52fe208e7538e7c8ef75ae61f4607a81681", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 19, "deletions": 25, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/852dd491efde37dfecacd803d843592a15f9eab6/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/852dd491efde37dfecacd803d843592a15f9eab6/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=852dd491efde37dfecacd803d843592a15f9eab6", "patch": "@@ -5,7 +5,6 @@ use syntax::ast::{self, Ident, IntTy, UintTy};\n use syntax::attr;\n use syntax_pos::DUMMY_SP;\n \n-// use std::convert::From;\n use std::cmp;\n use std::fmt;\n use std::i128;\n@@ -1545,37 +1544,31 @@ impl<'gcx, 'tcx, T: HasTyCtxt<'gcx>> HasTyCtxt<'gcx> for LayoutCx<'tcx, T> {\n }\n \n pub trait MaybeResult<T> {\n-    type Item;\n+    type Error;\n \n-    fn from_ok(x: T) -> Self;\n-    fn map_same<F: FnOnce(T) -> T>(self, f: F) -> Self;\n-    fn to_result(self) -> Result<T, Self::Item>;\n+    fn from(x: Result<T, Self::Error>) -> Self;\n+    fn to_result(self) -> Result<T, Self::Error>;\n }\n \n impl<T> MaybeResult<T> for T {\n-    type Item = !;\n+    type Error = !;\n \n-    fn from_ok(x: T) -> Self {\n+    fn from(x: Result<T, Self::Error>) -> Self {\n+        let Ok(x) = x;\n         x\n     }\n-    fn map_same<F: FnOnce(T) -> T>(self, f: F) -> Self {\n-        f(self)\n-    }\n-    fn to_result(self) -> Result<T, !> {\n+    fn to_result(self) -> Result<T, Self::Error> {\n         Ok(self)\n     }\n }\n \n impl<T, E> MaybeResult<T> for Result<T, E> {\n-    type Item = E;\n+    type Error = E;\n \n-    fn from_ok(x: T) -> Self {\n-        Ok(x)\n-    }\n-    fn map_same<F: FnOnce(T) -> T>(self, f: F) -> Self {\n-        self.map(f)\n+    fn from(x: Result<T, Self::Error>) -> Self {\n+        x\n     }\n-    fn to_result(self) -> Result<T, E> {\n+    fn to_result(self) -> Result<T, Self::Error> {\n         self\n     }\n }\n@@ -1681,10 +1674,9 @@ impl<'a, 'tcx, C> TyLayoutMethods<'tcx, C> for Ty<'tcx>\n \n             Variants::Single { index } => {\n                 // Deny calling for_variant more than once for non-Single enums.\n-                cx.layout_of(this.ty).map_same(|layout| {\n+                if let Ok(layout) = cx.layout_of(this.ty).to_result() {\n                     assert_eq!(layout.variants, Variants::Single { index });\n-                    layout\n-                });\n+                }\n \n                 let fields = match this.ty.sty {\n                     ty::Adt(def, _) => def.variants[variant_index].fields.len(),\n@@ -1754,10 +1746,12 @@ impl<'a, 'tcx, C> TyLayoutMethods<'tcx, C> for Ty<'tcx>\n                     } else {\n                         tcx.mk_mut_ref(tcx.lifetimes.re_static, nil)\n                     };\n-                    return cx.layout_of(ptr_ty).map_same(|mut ptr_layout| {\n-                        ptr_layout.ty = this.ty;\n-                        ptr_layout\n-                    });\n+                    return MaybeResult::from(\n+                        cx.layout_of(ptr_ty).to_result().map(|mut ptr_layout| {\n+                            ptr_layout.ty = this.ty;\n+                            ptr_layout\n+                        })\n+                    );\n                 }\n \n                 match tcx.struct_tail(pointee).sty {"}]}