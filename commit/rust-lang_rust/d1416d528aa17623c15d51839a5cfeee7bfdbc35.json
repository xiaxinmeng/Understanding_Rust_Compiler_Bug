{"sha": "d1416d528aa17623c15d51839a5cfeee7bfdbc35", "node_id": "C_kwDOAAsO6NoAKGQxNDE2ZDUyOGFhMTc2MjNjMTVkNTE4MzlhNWNmZWVlN2JmZGJjMzU", "commit": {"author": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2022-02-15T03:49:39Z"}, "committer": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2022-03-28T01:11:57Z"}, "message": "Add scrape examples help page", "tree": {"sha": "5f9c5484a6c4b1bf81962775d62457658ce54958", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f9c5484a6c4b1bf81962775d62457658ce54958"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1416d528aa17623c15d51839a5cfeee7bfdbc35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1416d528aa17623c15d51839a5cfeee7bfdbc35", "html_url": "https://github.com/rust-lang/rust/commit/d1416d528aa17623c15d51839a5cfeee7bfdbc35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1416d528aa17623c15d51839a5cfeee7bfdbc35/comments", "author": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "318e45767f068cd3e04d110a0451f31169ac119c", "url": "https://api.github.com/repos/rust-lang/rust/commits/318e45767f068cd3e04d110a0451f31169ac119c", "html_url": "https://github.com/rust-lang/rust/commit/318e45767f068cd3e04d110a0451f31169ac119c"}], "stats": {"total": 98, "additions": 86, "deletions": 12}, "files": [{"sha": "90123655758cce202a8521f87d43d7df2fed9fae", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d1416d528aa17623c15d51839a5cfeee7bfdbc35/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1416d528aa17623c15d51839a5cfeee7bfdbc35/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=d1416d528aa17623c15d51839a5cfeee7bfdbc35", "patch": "@@ -17,8 +17,8 @@ use super::print_item::{full_path, item_path, print_item};\n use super::search_index::build_index;\n use super::write_shared::write_shared;\n use super::{\n-    collect_spans_and_sources, print_sidebar, settings, AllTypes, LinkFromSrc, NameDoc, StylePath,\n-    BASIC_KEYWORDS,\n+    collect_spans_and_sources, print_sidebar, scrape_examples_help, settings, AllTypes,\n+    LinkFromSrc, NameDoc, StylePath, BASIC_KEYWORDS,\n };\n \n use crate::clean::{self, types::ExternalLocation, ExternalCrate};\n@@ -551,6 +551,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n         let crate_name = self.tcx().crate_name(LOCAL_CRATE);\n         let final_file = self.dst.join(crate_name.as_str()).join(\"all.html\");\n         let settings_file = self.dst.join(\"settings.html\");\n+        let scrape_examples_help_file = self.dst.join(\"scrape-examples-help.html\");\n \n         let mut root_path = self.dst.to_str().expect(\"invalid path\").to_owned();\n         if !root_path.ends_with('/') {\n@@ -606,6 +607,20 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             &self.shared.style_files,\n         );\n         self.shared.fs.write(settings_file, v)?;\n+\n+        if self.shared.layout.scrape_examples_extension {\n+            page.title = \"About scraped examples\";\n+            page.description = \"How the scraped examples feature works in Rustdoc\";\n+            let v = layout::render(\n+                &self.shared.layout,\n+                &page,\n+                \"\",\n+                scrape_examples_help(&*self.shared),\n+                &self.shared.style_files,\n+            );\n+            self.shared.fs.write(scrape_examples_help_file, v)?;\n+        }\n+\n         if let Some(ref redirections) = self.shared.redirections {\n             if !redirections.borrow().is_empty() {\n                 let redirect_map_path ="}, {"sha": "80a18038272c724c0d0b511cdd45486cfe25e128", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/d1416d528aa17623c15d51839a5cfeee7bfdbc35/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1416d528aa17623c15d51839a5cfeee7bfdbc35/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=d1416d528aa17623c15d51839a5cfeee7bfdbc35", "patch": "@@ -62,7 +62,6 @@ use rustc_span::{\n use serde::ser::SerializeSeq;\n use serde::{Serialize, Serializer};\n \n-use crate::clean::utils::DOC_RUST_LANG_ORG_CHANNEL;\n use crate::clean::{self, ItemId, RenderedLink, SelfTy};\n use crate::error::Error;\n use crate::formats::cache::Cache;\n@@ -77,6 +76,7 @@ use crate::html::format::{\n use crate::html::highlight;\n use crate::html::markdown::{HeadingOffset, IdMap, Markdown, MarkdownHtml, MarkdownSummaryLine};\n use crate::html::sources;\n+use crate::html::static_files::SCRAPE_EXAMPLES_HELP_MD;\n use crate::scrape_examples::{CallData, CallLocation};\n use crate::try_none;\n \n@@ -462,6 +462,29 @@ fn settings(root_path: &str, suffix: &str, theme_names: Vec<String>) -> Result<S\n     ))\n }\n \n+fn scrape_examples_help(shared: &SharedContext<'_>) -> String {\n+    let content = SCRAPE_EXAMPLES_HELP_MD;\n+    let mut ids = IdMap::default();\n+    format!(\n+        \"<div class=\\\"main-heading\\\">\n+            <h1 class=\\\"fqn\\\">\\\n+                <span class=\\\"in-band\\\">About scraped examples</span>\\\n+            </h1>\\\n+        </div>\\\n+        <div>{}</div>\",\n+        Markdown {\n+            content,\n+            links: &[],\n+            ids: &mut ids,\n+            error_codes: shared.codes,\n+            edition: shared.edition(),\n+            playground: &shared.playground,\n+            heading_offset: HeadingOffset::H1\n+        }\n+        .into_string()\n+    )\n+}\n+\n fn document(\n     w: &mut Buffer,\n     cx: &Context<'_>,\n@@ -2672,9 +2695,9 @@ fn render_call_locations(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item) {\n           <span></span>\\\n           <h5 id=\\\"{id}\\\">\\\n              <a href=\\\"#{id}\\\">Examples found in repository</a>\\\n-             <a class=\\\"scrape-help\\\" href=\\\"{doc_prefix}/rustdoc/scraped-examples.html\\\" target=\\\"_blank\\\">?</a>\\\n+             <a class=\\\"scrape-help\\\" href=\\\"{root_path}scrape-examples-help.html\\\">?</a>\\\n           </h5>\",\n-        doc_prefix = DOC_RUST_LANG_ORG_CHANNEL,\n+        root_path = cx.root_path(),\n         id = id\n     );\n "}, {"sha": "e3c3d614f015c2cac866975e63cb25c1d1694d2c", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1416d528aa17623c15d51839a5cfeee7bfdbc35/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/d1416d528aa17623c15d51839a5cfeee7bfdbc35/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=d1416d528aa17623c15d51839a5cfeee7bfdbc35", "patch": "@@ -2034,7 +2034,7 @@ details.rustdoc-toggle[open] > summary.hideme::after {\n \n /* Begin: styles for --scrape-examples feature */\n \n-.scraped-example-list .section-header .scrape-help {\n+.scraped-example-list .scrape-help {\n \tmargin-left: 10px;\n \tpadding: 0 4px;\n \tfont-weight: normal;"}, {"sha": "b1bf06c1865c7eacb21de75947fcfbfd77d8015a", "filename": "src/librustdoc/html/static/css/themes/ayu.css", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1416d528aa17623c15d51839a5cfeee7bfdbc35/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/d1416d528aa17623c15d51839a5cfeee7bfdbc35/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css?ref=d1416d528aa17623c15d51839a5cfeee7bfdbc35", "patch": "@@ -612,11 +612,11 @@ input:checked + .slider {\n }\n \n \n-.scraped-example-list .section-header .scrape-help {\n+.scraped-example-list .scrape-help {\n \tborder-color: #aaa;\n \tcolor: #eee;\n }\n-.scraped-example-list .section-header .scrape-help:hover {\n+.scraped-example-list .scrape-help:hover {\n \tborder-color: white;\n \tcolor: white;\n }"}, {"sha": "236304ccc9f1be49f0809f9487c09edcdd50962b", "filename": "src/librustdoc/html/static/css/themes/dark.css", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1416d528aa17623c15d51839a5cfeee7bfdbc35/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/d1416d528aa17623c15d51839a5cfeee7bfdbc35/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css?ref=d1416d528aa17623c15d51839a5cfeee7bfdbc35", "patch": "@@ -478,11 +478,11 @@ div.files > .selected {\n \tborder-bottom-color: #ddd;\n }\n \n-.scraped-example-list .section-header .scrape-help {\n+.scraped-example-list .scrape-help {\n \tborder-color: #aaa;\n \tcolor: #eee;\n }\n-.scraped-example-list .section-header .scrape-help:hover {\n+.scraped-example-list .scrape-help:hover {\n \tborder-color: white;\n \tcolor: white;\n }"}, {"sha": "c923902aba2d312de59830a51b201ccd9770d8fd", "filename": "src/librustdoc/html/static/css/themes/light.css", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1416d528aa17623c15d51839a5cfeee7bfdbc35/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/d1416d528aa17623c15d51839a5cfeee7bfdbc35/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css?ref=d1416d528aa17623c15d51839a5cfeee7bfdbc35", "patch": "@@ -463,11 +463,11 @@ div.files > .selected {\n \tborder-bottom-color: #D5D5D5;\n }\n \n-.scraped-example-list .section-header .scrape-help {\n+.scraped-example-list .scrape-help {\n \tborder-color: #555;\n \tcolor: #333;\n }\n-.scraped-example-list .section-header .scrape-help:hover {\n+.scraped-example-list .scrape-help:hover {\n \tborder-color: black;\n \tcolor: black;\n }"}, {"sha": "035b2e18b00ebeaf1839e4ce3b4e85a9158e4e62", "filename": "src/librustdoc/html/static/scrape-examples-help.md", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/d1416d528aa17623c15d51839a5cfeee7bfdbc35/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fscrape-examples-help.md", "raw_url": "https://github.com/rust-lang/rust/raw/d1416d528aa17623c15d51839a5cfeee7bfdbc35/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fscrape-examples-help.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fscrape-examples-help.md?ref=d1416d528aa17623c15d51839a5cfeee7bfdbc35", "patch": "@@ -0,0 +1,34 @@\n+Rustdoc will automatically scrape examples of documented items from the `examples/` directory of a project. These examples will be included within the generated documentation for that item. For example, if your library contains a public function:\n+\n+```rust\n+// src/lib.rs\n+pub fn a_func() {}\n+```\n+\n+And you have an example calling this function:\n+\n+```rust\n+// examples/ex.rs\n+fn main() {\n+  a_crate::a_func();\n+}\n+```\n+\n+Then this code snippet will be included in the documentation for `a_func`.\n+\n+## How to read scraped examples\n+\n+Scraped examples are shown as blocks of code from a given file. The relevant item will be highlighted. If the file is larger than a couple lines, only a small window will be shown which you can expand by clicking &varr; in the top-right. If a file contains multiple instances of an item, you can use the &pr; and &sc; buttons to toggle through each instance.\n+\n+If there is more than one file that contains examples, then you should click \"More examples\" to see these examples.\n+\n+\n+## How Rustdoc scrapes examples\n+\n+When you run `cargo doc`, Rustdoc will analyze all the crates that match Cargo's `--examples` filter for instances of items that occur in the crates being documented. Then Rustdoc will include the source code of these instances in the generated documentation.\n+\n+Rustdoc has a few techniques to ensure this doesn't overwhelm documentation readers, and that it doesn't blow up the page size:\n+\n+1. For a given item, a maximum of 5 examples are included in the page. The remaining examples are just links to source code.\n+2. Only one example is shown by default, and the remaining examples are hidden behind a toggle.\n+3. For a given file that contains examples, only the item containing the examples will be included in the generated documentation."}, {"sha": "1837e4a3b650ab53efc57d674e75344d9f56441d", "filename": "src/librustdoc/html/static_files.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1416d528aa17623c15d51839a5cfeee7bfdbc35/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1416d528aa17623c15d51839a5cfeee7bfdbc35/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs?ref=d1416d528aa17623c15d51839a5cfeee7bfdbc35", "patch": "@@ -39,6 +39,8 @@ crate static STORAGE_JS: &str = include_str!(\"static/js/storage.js\");\n /// --scrape-examples flag that inserts automatically-found examples of usages of items.\n crate static SCRAPE_EXAMPLES_JS: &str = include_str!(\"static/js/scrape-examples.js\");\n \n+crate static SCRAPE_EXAMPLES_HELP_MD: &str = include_str!(\"static/scrape-examples-help.md\");\n+\n /// The file contents of `brush.svg`, the icon used for the theme-switch button.\n crate static BRUSH_SVG: &[u8] = include_bytes!(\"static/images/brush.svg\");\n "}]}