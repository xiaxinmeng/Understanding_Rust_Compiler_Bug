{"sha": "8aae6ca44a1bea64e2be3f2ce5a4581bb65d43ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhYWU2Y2E0NGExYmVhNjRlMmJlM2YyY2U1YTQ1ODFiYjY1ZDQzZWY=", "commit": {"author": {"name": "Tom Tromey", "email": "tom@tromey.com", "date": "2018-09-05T19:05:46Z"}, "committer": {"name": "Tom Tromey", "email": "tom@tromey.com", "date": "2018-09-07T15:13:47Z"}, "message": "Have rust-lldb look for the rust-enabled lldb\n\nWe're shipping a rust-enabled lldb, but the \"lldb\" executable is not\ninstalled into the \"bin\" directory by rustup.  See the discussion in\nhttps://github.com/rust-lang-nursery/rustup.rs/pull/1492 for\nbackground on this decision.  There, we agreed to have rust-lldb\nprefer the rust-enabled lldb if it is installed.\n\nThis patch changes dist.rs to put lldb into rustlib, following what\nwas done for the other LLVM tools in #53955, and then fixes rust-lldb\nto prefer that lldb, if it exists.\n\nSee issue #48168", "tree": {"sha": "b93cad0355aa897267c1abbe30589986c0777826", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b93cad0355aa897267c1abbe30589986c0777826"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8aae6ca44a1bea64e2be3f2ce5a4581bb65d43ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8aae6ca44a1bea64e2be3f2ce5a4581bb65d43ef", "html_url": "https://github.com/rust-lang/rust/commit/8aae6ca44a1bea64e2be3f2ce5a4581bb65d43ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8aae6ca44a1bea64e2be3f2ce5a4581bb65d43ef/comments", "author": {"login": "tromey", "id": 1557670, "node_id": "MDQ6VXNlcjE1NTc2NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tromey", "html_url": "https://github.com/tromey", "followers_url": "https://api.github.com/users/tromey/followers", "following_url": "https://api.github.com/users/tromey/following{/other_user}", "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}", "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tromey/subscriptions", "organizations_url": "https://api.github.com/users/tromey/orgs", "repos_url": "https://api.github.com/users/tromey/repos", "events_url": "https://api.github.com/users/tromey/events{/privacy}", "received_events_url": "https://api.github.com/users/tromey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tromey", "id": 1557670, "node_id": "MDQ6VXNlcjE1NTc2NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tromey", "html_url": "https://github.com/tromey", "followers_url": "https://api.github.com/users/tromey/followers", "following_url": "https://api.github.com/users/tromey/following{/other_user}", "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}", "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tromey/subscriptions", "organizations_url": "https://api.github.com/users/tromey/orgs", "repos_url": "https://api.github.com/users/tromey/repos", "events_url": "https://api.github.com/users/tromey/events{/privacy}", "received_events_url": "https://api.github.com/users/tromey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7366752a6164dd8e004f32c1a40f0e04a61bcbb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7366752a6164dd8e004f32c1a40f0e04a61bcbb2", "html_url": "https://github.com/rust-lang/rust/commit/7366752a6164dd8e004f32c1a40f0e04a61bcbb2"}], "stats": {"total": 33, "additions": 21, "deletions": 12}, "files": [{"sha": "2d94704fda7d600f847f918b6bdc871b0f2d996d", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8aae6ca44a1bea64e2be3f2ce5a4581bb65d43ef/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aae6ca44a1bea64e2be3f2ce5a4581bb65d43ef/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=8aae6ca44a1bea64e2be3f2ce5a4581bb65d43ef", "patch": "@@ -2056,7 +2056,8 @@ impl Step for Lldb {\n         drop(fs::remove_dir_all(&image));\n \n         // Prepare the image directory\n-        let dst = image.join(\"bin\");\n+        let root = image.join(\"lib/rustlib\").join(&*target);\n+        let dst = root.join(\"bin\");\n         t!(fs::create_dir_all(&dst));\n         for program in &[\"lldb\", \"lldb-argdumper\", \"lldb-mi\", \"lldb-server\"] {\n             let exe = bindir.join(exe(program, &target));\n@@ -2065,7 +2066,7 @@ impl Step for Lldb {\n \n         // The libraries.\n         let libdir = builder.llvm_out(target).join(\"lib\");\n-        let dst = image.join(\"lib\");\n+        let dst = root.join(\"lib\");\n         t!(fs::create_dir_all(&dst));\n         for entry in t!(fs::read_dir(&libdir)) {\n             let entry = entry.unwrap();\n@@ -2093,7 +2094,7 @@ impl Step for Lldb {\n             let entry = t!(entry);\n             if let Ok(name) = entry.file_name().into_string() {\n                 if name.starts_with(\"python\") {\n-                    let dst = image.join(libdir_name)\n+                    let dst = root.join(libdir_name)\n                         .join(entry.file_name());\n                     t!(fs::create_dir_all(&dst));\n                     builder.cp_r(&entry.path(), &dst);"}, {"sha": "6ed8210349e1727210e95b6f066ef48ae08778b6", "filename": "src/etc/rust-lldb", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8aae6ca44a1bea64e2be3f2ce5a4581bb65d43ef/src%2Fetc%2Frust-lldb", "raw_url": "https://github.com/rust-lang/rust/raw/8aae6ca44a1bea64e2be3f2ce5a4581bb65d43ef/src%2Fetc%2Frust-lldb", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Frust-lldb?ref=8aae6ca44a1bea64e2be3f2ce5a4581bb65d43ef", "patch": "@@ -12,27 +12,35 @@\n # Exit if anything fails\n set -e\n \n-LLDB_VERSION=`lldb --version 2>/dev/null | head -1 | cut -d. -f1`\n+# Find out where to look for the pretty printer Python module\n+RUSTC_SYSROOT=`rustc --print sysroot`\n+\n+# Find the host triple so we can find lldb in rustlib.\n+host=`rustc -vV | sed -n -e 's/^host: //p'`\n+\n+lldb=lldb\n+if [ -f \"$RUSTC_SYSROOT/lib/rustlib/$host/bin/lldb\" ]; then\n+    lldb=\"$RUSTC_SYSROOT/lib/rustlib/$host/bin/lldb\"\n+else\n+    LLDB_VERSION=`\"$lldb\" --version 2>/dev/null | head -1 | cut -d. -f1`\n \n-if [ \"$LLDB_VERSION\" = \"lldb-350\" ]\n-then\n-    echo \"***\"\n+    if [ \"$LLDB_VERSION\" = \"lldb-350\" ]\n+    then\n+        echo \"***\"\n \techo \\\n \"WARNING: This version of LLDB has known issues with Rust and cannot \\\n display the contents of local variables!\"\n-    echo \"***\"\n+        echo \"***\"\n+    fi\n fi\n \n-# Find out where to look for the pretty printer Python module\n-RUSTC_SYSROOT=`rustc --print sysroot`\n-\n # Prepare commands that will be loaded before any file on the command line has been loaded\n script_import=\"command script import \\\"$RUSTC_SYSROOT/lib/rustlib/etc/lldb_rust_formatters.py\\\"\"\n category_definition=\"type summary add --no-value --python-function lldb_rust_formatters.print_val -x \\\".*\\\" --category Rust\"\n category_enable=\"type category enable Rust\"\n \n # Call LLDB with the commands added to the argument list\n-exec lldb --one-line-before-file=\"$script_import\" \\\n+exec \"$lldb\" --one-line-before-file=\"$script_import\" \\\n     --one-line-before-file=\"$category_definition\" \\\n     --one-line-before-file=\"$category_enable\" \\\n     \"$@\""}]}