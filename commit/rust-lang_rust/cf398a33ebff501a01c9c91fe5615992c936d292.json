{"sha": "cf398a33ebff501a01c9c91fe5615992c936d292", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmMzk4YTMzZWJmZjUwMWEwMWM5YzkxZmU1NjE1OTkyYzkzNmQyOTI=", "commit": {"author": {"name": "root", "email": "aszenz@gmail.com", "date": "2020-06-26T19:40:09Z"}, "committer": {"name": "root", "email": "aszenz@gmail.com", "date": "2020-06-26T19:40:09Z"}, "message": "removes unnecessary tidy ignore", "tree": {"sha": "86421236b73521b7afde0530549c0b96d3a90973", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86421236b73521b7afde0530549c0b96d3a90973"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf398a33ebff501a01c9c91fe5615992c936d292", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf398a33ebff501a01c9c91fe5615992c936d292", "html_url": "https://github.com/rust-lang/rust/commit/cf398a33ebff501a01c9c91fe5615992c936d292", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf398a33ebff501a01c9c91fe5615992c936d292/comments", "author": {"login": "aszenz", "id": 25319264, "node_id": "MDQ6VXNlcjI1MzE5MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/25319264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aszenz", "html_url": "https://github.com/aszenz", "followers_url": "https://api.github.com/users/aszenz/followers", "following_url": "https://api.github.com/users/aszenz/following{/other_user}", "gists_url": "https://api.github.com/users/aszenz/gists{/gist_id}", "starred_url": "https://api.github.com/users/aszenz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aszenz/subscriptions", "organizations_url": "https://api.github.com/users/aszenz/orgs", "repos_url": "https://api.github.com/users/aszenz/repos", "events_url": "https://api.github.com/users/aszenz/events{/privacy}", "received_events_url": "https://api.github.com/users/aszenz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aszenz", "id": 25319264, "node_id": "MDQ6VXNlcjI1MzE5MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/25319264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aszenz", "html_url": "https://github.com/aszenz", "followers_url": "https://api.github.com/users/aszenz/followers", "following_url": "https://api.github.com/users/aszenz/following{/other_user}", "gists_url": "https://api.github.com/users/aszenz/gists{/gist_id}", "starred_url": "https://api.github.com/users/aszenz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aszenz/subscriptions", "organizations_url": "https://api.github.com/users/aszenz/orgs", "repos_url": "https://api.github.com/users/aszenz/repos", "events_url": "https://api.github.com/users/aszenz/events{/privacy}", "received_events_url": "https://api.github.com/users/aszenz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15e81beb474235d100995f3bcc72d15086a8e29e", "url": "https://api.github.com/repos/rust-lang/rust/commits/15e81beb474235d100995f3bcc72d15086a8e29e", "html_url": "https://github.com/rust-lang/rust/commit/15e81beb474235d100995f3bcc72d15086a8e29e"}], "stats": {"total": 14, "additions": 2, "deletions": 12}, "files": [{"sha": "472cedeaa73aacd978beb4c24200aa6c5d2c8846", "filename": "src/librustc_middle/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cf398a33ebff501a01c9c91fe5615992c936d292/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf398a33ebff501a01c9c91fe5615992c936d292/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fmod.rs?ref=cf398a33ebff501a01c9c91fe5615992c936d292", "patch": "@@ -2,8 +2,6 @@\n //!\n //! [rustc dev guide]: https://rustc-dev-guide.rust-lang.org/mir/index.html\n \n-// ignore-tidy-filelength\n-\n use crate::mir::interpret::{GlobalAlloc, Scalar};\n use crate::mir::visit::MirVisitable;\n use crate::ty::adjustment::PointerCast;\n@@ -299,11 +297,7 @@ impl<'tcx> Body<'tcx> {\n     pub fn temps_iter<'a>(&'a self) -> impl Iterator<Item = Local> + 'a {\n         (self.arg_count + 1..self.local_decls.len()).filter_map(move |index| {\n             let local = Local::new(index);\n-            if self.local_decls[local].is_user_variable() {\n-                None\n-            } else {\n-                Some(local)\n-            }\n+            if self.local_decls[local].is_user_variable() { None } else { Some(local) }\n         })\n     }\n \n@@ -1190,11 +1184,7 @@ impl<'tcx> BasicBlockData<'tcx> {\n     }\n \n     pub fn visitable(&self, index: usize) -> &dyn MirVisitable<'tcx> {\n-        if index < self.statements.len() {\n-            &self.statements[index]\n-        } else {\n-            &self.terminator\n-        }\n+        if index < self.statements.len() { &self.statements[index] } else { &self.terminator }\n     }\n }\n "}]}