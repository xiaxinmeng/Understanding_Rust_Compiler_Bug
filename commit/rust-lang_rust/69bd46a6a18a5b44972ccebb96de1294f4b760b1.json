{"sha": "69bd46a6a18a5b44972ccebb96de1294f4b760b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5YmQ0NmE2YTE4YTViNDQ5NzJjY2ViYjk2ZGUxMjk0ZjRiNzYwYjE=", "commit": {"author": {"name": "Adam Perry", "email": "lol@anp.lol", "date": "2020-03-22T23:59:02Z"}, "committer": {"name": "Adam Perry", "email": "lol@anp.lol", "date": "2020-03-23T00:21:18Z"}, "message": "Remove special-casing from TyCtxt::impl_of_method.\n\nWe can do this now that opt_associated_item doesn't have any panicking paths.", "tree": {"sha": "750fee1d0dc3e61ab68b0d7e1b89d652e7890c72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/750fee1d0dc3e61ab68b0d7e1b89d652e7890c72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69bd46a6a18a5b44972ccebb96de1294f4b760b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69bd46a6a18a5b44972ccebb96de1294f4b760b1", "html_url": "https://github.com/rust-lang/rust/commit/69bd46a6a18a5b44972ccebb96de1294f4b760b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69bd46a6a18a5b44972ccebb96de1294f4b760b1/comments", "author": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97da6dae41dc7fe5597c2cd858b1ac86548cec16", "url": "https://api.github.com/repos/rust-lang/rust/commits/97da6dae41dc7fe5597c2cd858b1ac86548cec16", "html_url": "https://github.com/rust-lang/rust/commit/97da6dae41dc7fe5597c2cd858b1ac86548cec16"}], "stats": {"total": 14, "additions": 2, "deletions": 12}, "files": [{"sha": "e7316ea763e8a7acb9bc01012196fe7900031890", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/69bd46a6a18a5b44972ccebb96de1294f4b760b1/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69bd46a6a18a5b44972ccebb96de1294f4b760b1/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=69bd46a6a18a5b44972ccebb96de1294f4b760b1", "patch": "@@ -35,7 +35,7 @@ use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::sync::{self, par_iter, Lrc, ParallelIterator};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, CtorOf, DefKind, Namespace, Res};\n-use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, LocalDefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n+use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, LocalDefId, CRATE_DEF_INDEX};\n use rustc_hir::{Constness, GlobMap, Node, TraitMap};\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_macros::HashStable;\n@@ -3054,17 +3054,7 @@ impl<'tcx> TyCtxt<'tcx> {\n     /// If the given defid describes a method belonging to an impl, returns the\n     /// `DefId` of the impl that the method belongs to; otherwise, returns `None`.\n     pub fn impl_of_method(self, def_id: DefId) -> Option<DefId> {\n-        let item = if def_id.krate != LOCAL_CRATE {\n-            if let Some(DefKind::AssocFn) = self.def_kind(def_id) {\n-                Some(self.associated_item(def_id))\n-            } else {\n-                None\n-            }\n-        } else {\n-            self.opt_associated_item(def_id)\n-        };\n-\n-        item.and_then(|trait_item| match trait_item.container {\n+        self.opt_associated_item(def_id).and_then(|trait_item| match trait_item.container {\n             TraitContainer(_) => None,\n             ImplContainer(def_id) => Some(def_id),\n         })"}]}