{"sha": "175db95b3d98b1874b9d49a5e79a0755aed3e8fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3NWRiOTViM2Q5OGIxODc0YjlkNDlhNWU3OWEwNzU1YWVkM2U4ZmE=", "commit": {"author": {"name": "Baoshan Pang", "email": "baoshan.pang@windriver.com", "date": "2019-10-07T16:59:08Z"}, "committer": {"name": "Baoshan", "email": "pangbw@gmail.com", "date": "2019-10-09T01:57:17Z"}, "message": "add checking (r == 0)", "tree": {"sha": "38c5725adb3d94f0cc585758524a5d943da74e6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38c5725adb3d94f0cc585758524a5d943da74e6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/175db95b3d98b1874b9d49a5e79a0755aed3e8fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/175db95b3d98b1874b9d49a5e79a0755aed3e8fa", "html_url": "https://github.com/rust-lang/rust/commit/175db95b3d98b1874b9d49a5e79a0755aed3e8fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/175db95b3d98b1874b9d49a5e79a0755aed3e8fa/comments", "author": {"login": "bpangWR", "id": 53950092, "node_id": "MDQ6VXNlcjUzOTUwMDky", "avatar_url": "https://avatars.githubusercontent.com/u/53950092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpangWR", "html_url": "https://github.com/bpangWR", "followers_url": "https://api.github.com/users/bpangWR/followers", "following_url": "https://api.github.com/users/bpangWR/following{/other_user}", "gists_url": "https://api.github.com/users/bpangWR/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpangWR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpangWR/subscriptions", "organizations_url": "https://api.github.com/users/bpangWR/orgs", "repos_url": "https://api.github.com/users/bpangWR/repos", "events_url": "https://api.github.com/users/bpangWR/events{/privacy}", "received_events_url": "https://api.github.com/users/bpangWR/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BaoshanPang", "id": 3380860, "node_id": "MDQ6VXNlcjMzODA4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3380860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BaoshanPang", "html_url": "https://github.com/BaoshanPang", "followers_url": "https://api.github.com/users/BaoshanPang/followers", "following_url": "https://api.github.com/users/BaoshanPang/following{/other_user}", "gists_url": "https://api.github.com/users/BaoshanPang/gists{/gist_id}", "starred_url": "https://api.github.com/users/BaoshanPang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BaoshanPang/subscriptions", "organizations_url": "https://api.github.com/users/BaoshanPang/orgs", "repos_url": "https://api.github.com/users/BaoshanPang/repos", "events_url": "https://api.github.com/users/BaoshanPang/events{/privacy}", "received_events_url": "https://api.github.com/users/BaoshanPang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46bf6ad416cf922c410fed11e9f73c03c0015bcd", "url": "https://api.github.com/repos/rust-lang/rust/commits/46bf6ad416cf922c410fed11e9f73c03c0015bcd", "html_url": "https://github.com/rust-lang/rust/commit/46bf6ad416cf922c410fed11e9f73c03c0015bcd"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "19b123f2b6131aab14c9ee14b2f0a7ec780d2c72", "filename": "src/libstd/sys/vxworks/rwlock.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/175db95b3d98b1874b9d49a5e79a0755aed3e8fa/src%2Flibstd%2Fsys%2Fvxworks%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/175db95b3d98b1874b9d49a5e79a0755aed3e8fa/src%2Flibstd%2Fsys%2Fvxworks%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Frwlock.rs?ref=175db95b3d98b1874b9d49a5e79a0755aed3e8fa", "patch": "@@ -25,7 +25,7 @@ impl RWLock {\n         let r = libc::pthread_rwlock_rdlock(self.inner.get());\n         if r == libc::EAGAIN {\n             panic!(\"rwlock maximum reader count exceeded\");\n-        } else if r == libc::EDEADLK || *self.write_locked.get() {\n+        } else if r == libc::EDEADLK || (r == 0 && *self.write_locked.get()) {\n             if r == 0 {\n                 self.raw_unlock();\n             }"}]}