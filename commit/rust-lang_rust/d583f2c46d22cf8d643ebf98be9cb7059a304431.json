{"sha": "d583f2c46d22cf8d643ebf98be9cb7059a304431", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1ODNmMmM0NmQyMmNmOGQ2NDNlYmY5OGJlOWNiNzA1OWEzMDQ0MzE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-12T16:31:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-12T16:31:42Z"}, "message": "Merge #5729\n\n5729: Rename ra_syntax -> syntax\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "9d898eb9600b0c36a74e4f95238f679c683fa566", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d898eb9600b0c36a74e4f95238f679c683fa566"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d583f2c46d22cf8d643ebf98be9cb7059a304431", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfNBluCRBK7hj4Ov3rIwAAdHIIACOt0Ny0SWYW7cAdzO+IXKSl\n1awnfIAjFGDfy7d+kAvNJEf8hddDKmw3NVdKXuMMJDzSOHRX0/k1LSsYufRzx5wz\n+UOMe4BvrVq7TIKnQtcwmeIvq8PBu4OEAoKSBn7Hs/6GRyBuleM39GR95OdcXDcq\nWCC2/VEhZUqRaCTlP3ROF3decCH5Nxk86g0xO2UfUS4+oaehWY1qwxykOazHKgTs\nMa3+c7jqSeAaElEi/5s+G/RRIaqtxBUbTjT9a0l1bZcJMb8D5LeX6kVGfgnjqlmS\n7KNBULz7amRaD5nBiLS6JyjawUGKJeEeroi+grsalHnK2Rc9BD99vuT1Ct411F4=\n=AGpy\n-----END PGP SIGNATURE-----\n", "payload": "tree 9d898eb9600b0c36a74e4f95238f679c683fa566\nparent 3d6889cba72a9d02199f7adaa2ecc69bc30af834\nparent a1c187eef3ba08076aedb5154929f7eda8d1b424\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1597249902 +0000\ncommitter GitHub <noreply@github.com> 1597249902 +0000\n\nMerge #5729\n\n5729: Rename ra_syntax -> syntax\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d583f2c46d22cf8d643ebf98be9cb7059a304431", "html_url": "https://github.com/rust-lang/rust/commit/d583f2c46d22cf8d643ebf98be9cb7059a304431", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d583f2c46d22cf8d643ebf98be9cb7059a304431/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d6889cba72a9d02199f7adaa2ecc69bc30af834", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d6889cba72a9d02199f7adaa2ecc69bc30af834", "html_url": "https://github.com/rust-lang/rust/commit/3d6889cba72a9d02199f7adaa2ecc69bc30af834"}, {"sha": "a1c187eef3ba08076aedb5154929f7eda8d1b424", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1c187eef3ba08076aedb5154929f7eda8d1b424", "html_url": "https://github.com/rust-lang/rust/commit/a1c187eef3ba08076aedb5154929f7eda8d1b424"}], "stats": {"total": 716, "additions": 353, "deletions": 363}, "files": [{"sha": "7c2f752d69aee7356d90a0edd166790f5326512d", "filename": ".gitattributes", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/.gitattributes", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/.gitattributes", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitattributes?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,5 +1,5 @@\n * text=auto eol=lf\n-crates/ra_syntax/test_data/** -text eof=LF\n+crates/syntax/test_data/** -text eof=LF\n # Older git versions try to fix line endings on images, this prevents it.\n *.png binary\n *.jpg binary"}, {"sha": "c95ef002d3ce5bcb70b5ec64a69741b830decd44", "filename": "Cargo.lock", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -933,9 +933,9 @@ dependencies = [\n  \"ra_fmt\",\n  \"ra_hir\",\n  \"ra_ide_db\",\n- \"ra_syntax\",\n  \"rustc-hash\",\n  \"stdx\",\n+ \"syntax\",\n  \"test_utils\",\n  \"text_edit\",\n ]\n@@ -945,8 +945,8 @@ name = \"ra_cfg\"\n version = \"0.1.0\"\n dependencies = [\n  \"ra_mbe\",\n- \"ra_syntax\",\n  \"rustc-hash\",\n+ \"syntax\",\n  \"tt\",\n ]\n \n@@ -956,10 +956,10 @@ version = \"0.1.0\"\n dependencies = [\n  \"profile\",\n  \"ra_cfg\",\n- \"ra_syntax\",\n  \"rustc-hash\",\n  \"salsa\",\n  \"stdx\",\n+ \"syntax\",\n  \"test_utils\",\n  \"tt\",\n  \"vfs\",\n@@ -970,7 +970,7 @@ name = \"ra_fmt\"\n version = \"0.1.0\"\n dependencies = [\n  \"itertools\",\n- \"ra_syntax\",\n+ \"syntax\",\n ]\n \n [[package]]\n@@ -986,9 +986,9 @@ dependencies = [\n  \"ra_hir_def\",\n  \"ra_hir_expand\",\n  \"ra_hir_ty\",\n- \"ra_syntax\",\n  \"rustc-hash\",\n  \"stdx\",\n+ \"syntax\",\n ]\n \n [[package]]\n@@ -1010,10 +1010,10 @@ dependencies = [\n  \"ra_db\",\n  \"ra_hir_expand\",\n  \"ra_mbe\",\n- \"ra_syntax\",\n  \"rustc-hash\",\n  \"smallvec\",\n  \"stdx\",\n+ \"syntax\",\n  \"test_utils\",\n  \"tt\",\n ]\n@@ -1029,8 +1029,8 @@ dependencies = [\n  \"profile\",\n  \"ra_db\",\n  \"ra_mbe\",\n- \"ra_syntax\",\n  \"rustc-hash\",\n+ \"syntax\",\n  \"test_utils\",\n  \"tt\",\n ]\n@@ -1052,11 +1052,11 @@ dependencies = [\n  \"ra_db\",\n  \"ra_hir_def\",\n  \"ra_hir_expand\",\n- \"ra_syntax\",\n  \"rustc-hash\",\n  \"scoped-tls\",\n  \"smallvec\",\n  \"stdx\",\n+ \"syntax\",\n  \"test_utils\",\n  \"tracing\",\n  \"tracing-subscriber\",\n@@ -1081,9 +1081,9 @@ dependencies = [\n  \"ra_hir\",\n  \"ra_ide_db\",\n  \"ra_ssr\",\n- \"ra_syntax\",\n  \"rustc-hash\",\n  \"stdx\",\n+ \"syntax\",\n  \"test_utils\",\n  \"text_edit\",\n ]\n@@ -1099,10 +1099,10 @@ dependencies = [\n  \"profile\",\n  \"ra_db\",\n  \"ra_hir\",\n- \"ra_syntax\",\n  \"rayon\",\n  \"rustc-hash\",\n  \"stdx\",\n+ \"syntax\",\n  \"test_utils\",\n  \"text_edit\",\n ]\n@@ -1113,9 +1113,9 @@ version = \"0.1.0\"\n dependencies = [\n  \"log\",\n  \"parser\",\n- \"ra_syntax\",\n  \"rustc-hash\",\n  \"smallvec\",\n+ \"syntax\",\n  \"test_utils\",\n  \"tt\",\n ]\n@@ -1176,33 +1176,12 @@ dependencies = [\n  \"ra_db\",\n  \"ra_hir\",\n  \"ra_ide_db\",\n- \"ra_syntax\",\n  \"rustc-hash\",\n+ \"syntax\",\n  \"test_utils\",\n  \"text_edit\",\n ]\n \n-[[package]]\n-name = \"ra_syntax\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"arrayvec\",\n- \"expect\",\n- \"itertools\",\n- \"once_cell\",\n- \"parser\",\n- \"rayon\",\n- \"rowan\",\n- \"rustc-ap-rustc_lexer\",\n- \"rustc-hash\",\n- \"serde\",\n- \"smol_str\",\n- \"stdx\",\n- \"test_utils\",\n- \"text_edit\",\n- \"walkdir\",\n-]\n-\n [[package]]\n name = \"rayon\"\n version = \"1.3.1\"\n@@ -1304,12 +1283,12 @@ dependencies = [\n  \"ra_proc_macro_srv\",\n  \"ra_project_model\",\n  \"ra_ssr\",\n- \"ra_syntax\",\n  \"rayon\",\n  \"rustc-hash\",\n  \"serde\",\n  \"serde_json\",\n  \"stdx\",\n+ \"syntax\",\n  \"test_utils\",\n  \"text_edit\",\n  \"threadpool\",\n@@ -1532,6 +1511,27 @@ dependencies = [\n  \"unicode-xid\",\n ]\n \n+[[package]]\n+name = \"syntax\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"arrayvec\",\n+ \"expect\",\n+ \"itertools\",\n+ \"once_cell\",\n+ \"parser\",\n+ \"rayon\",\n+ \"rowan\",\n+ \"rustc-ap-rustc_lexer\",\n+ \"rustc-hash\",\n+ \"serde\",\n+ \"smol_str\",\n+ \"stdx\",\n+ \"test_utils\",\n+ \"text_edit\",\n+ \"walkdir\",\n+]\n+\n [[package]]\n name = \"termcolor\"\n version = \"1.1.0\""}, {"sha": "9dbd2ebc445d916b984624efa64735727a2c6cf2", "filename": "crates/parser/src/grammar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fparser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fparser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -20,7 +20,7 @@\n //!\n //! After adding a new inline-test, run `cargo xtask codegen` to\n //! extract it as a standalone text-fixture into\n-//! `crates/ra_syntax/test_data/parser/`, and run `cargo test` once to\n+//! `crates/syntax/test_data/parser/`, and run `cargo test` once to\n //! create the \"gold\" value.\n //!\n //! Coding convention: rules like `where_clause` always produce either a"}, {"sha": "41e62116f88c4999da37ed5a5f214b8d711f1ee7", "filename": "crates/parser/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fparser%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fparser%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Flib.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -10,7 +10,7 @@\n //!\n //! The actual parsing happens in the `grammar` module.\n //!\n-//! Tests for this crate live in `ra_syntax` crate.\n+//! Tests for this crate live in `syntax` crate.\n \n #[macro_use]\n mod token_set;"}, {"sha": "abc290463a4d66c5f864a2c43ad3f30c8b850917", "filename": "crates/ra_assists/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2FCargo.toml?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -15,7 +15,7 @@ either = \"1.5.3\"\n \n stdx = { path = \"../stdx\" }\n \n-ra_syntax = { path = \"../ra_syntax\" }\n+syntax = { path = \"../syntax\" }\n text_edit = { path = \"../text_edit\" }\n ra_fmt = { path = \"../ra_fmt\" }\n profile = { path = \"../profile\" }"}, {"sha": "217f692a4ed0165b1a09c1654af9e8e6b054e335", "filename": "crates/ra_assists/src/assist_context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassist_context.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -10,7 +10,7 @@ use ra_ide_db::{\n     source_change::{SourceChange, SourceFileEdit},\n     RootDatabase,\n };\n-use ra_syntax::{\n+use syntax::{\n     algo::{self, find_node_at_offset, SyntaxRewriter},\n     AstNode, SourceFile, SyntaxElement, SyntaxKind, SyntaxNode, SyntaxToken, TextRange, TextSize,\n     TokenAtOffset,\n@@ -271,7 +271,7 @@ impl AssistBuilder {\n     }\n     /// Replaces specified `node` of text with a given string, reindenting the\n     /// string to maintain `node`'s existing indent.\n-    // FIXME: remove in favor of ra_syntax::edit::IndentLevel::increase_indent\n+    // FIXME: remove in favor of syntax::edit::IndentLevel::increase_indent\n     pub(crate) fn replace_node_and_indent(\n         &mut self,\n         node: &SyntaxNode,"}, {"sha": "4c41c16d86cd0c3c483659a6aff937059a591940", "filename": "crates/ra_assists/src/ast_transform.rs", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fast_transform.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fast_transform.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fast_transform.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -2,13 +2,13 @@\n use rustc_hash::FxHashMap;\n \n use hir::{HirDisplay, PathResolution, SemanticsScope};\n-use ra_syntax::{\n+use syntax::{\n     algo::SyntaxRewriter,\n     ast::{self, AstNode},\n };\n \n pub trait AstTransform<'a> {\n-    fn get_substitution(&self, node: &ra_syntax::SyntaxNode) -> Option<ra_syntax::SyntaxNode>;\n+    fn get_substitution(&self, node: &syntax::SyntaxNode) -> Option<syntax::SyntaxNode>;\n \n     fn chain_before(self, other: Box<dyn AstTransform<'a> + 'a>) -> Box<dyn AstTransform<'a> + 'a>;\n     fn or<T: AstTransform<'a> + 'a>(self, other: T) -> Box<dyn AstTransform<'a> + 'a>\n@@ -22,7 +22,7 @@ pub trait AstTransform<'a> {\n struct NullTransformer;\n \n impl<'a> AstTransform<'a> for NullTransformer {\n-    fn get_substitution(&self, _node: &ra_syntax::SyntaxNode) -> Option<ra_syntax::SyntaxNode> {\n+    fn get_substitution(&self, _node: &syntax::SyntaxNode) -> Option<syntax::SyntaxNode> {\n         None\n     }\n     fn chain_before(self, other: Box<dyn AstTransform<'a> + 'a>) -> Box<dyn AstTransform<'a> + 'a> {\n@@ -101,10 +101,7 @@ impl<'a> SubstituteTypeParams<'a> {\n             Some(result)\n         }\n     }\n-    fn get_substitution_inner(\n-        &self,\n-        node: &ra_syntax::SyntaxNode,\n-    ) -> Option<ra_syntax::SyntaxNode> {\n+    fn get_substitution_inner(&self, node: &syntax::SyntaxNode) -> Option<syntax::SyntaxNode> {\n         let type_ref = ast::Type::cast(node.clone())?;\n         let path = match &type_ref {\n             ast::Type::PathType(path_type) => path_type.path()?,\n@@ -122,7 +119,7 @@ impl<'a> SubstituteTypeParams<'a> {\n }\n \n impl<'a> AstTransform<'a> for SubstituteTypeParams<'a> {\n-    fn get_substitution(&self, node: &ra_syntax::SyntaxNode) -> Option<ra_syntax::SyntaxNode> {\n+    fn get_substitution(&self, node: &syntax::SyntaxNode) -> Option<syntax::SyntaxNode> {\n         self.get_substitution_inner(node).or_else(|| self.previous.get_substitution(node))\n     }\n     fn chain_before(self, other: Box<dyn AstTransform<'a> + 'a>) -> Box<dyn AstTransform<'a> + 'a> {\n@@ -141,10 +138,7 @@ impl<'a> QualifyPaths<'a> {\n         Self { target_scope, source_scope, previous: Box::new(NullTransformer) }\n     }\n \n-    fn get_substitution_inner(\n-        &self,\n-        node: &ra_syntax::SyntaxNode,\n-    ) -> Option<ra_syntax::SyntaxNode> {\n+    fn get_substitution_inner(&self, node: &syntax::SyntaxNode) -> Option<syntax::SyntaxNode> {\n         // FIXME handle value ns?\n         let from = self.target_scope.module()?;\n         let p = ast::Path::cast(node.clone())?;\n@@ -183,7 +177,7 @@ impl<'a> QualifyPaths<'a> {\n \n pub fn apply<'a, N: AstNode>(transformer: &dyn AstTransform<'a>, node: N) -> N {\n     SyntaxRewriter::from_fn(|element| match element {\n-        ra_syntax::SyntaxElement::Node(n) => {\n+        syntax::SyntaxElement::Node(n) => {\n             let replacement = transformer.get_substitution(&n)?;\n             Some(replacement.into())\n         }\n@@ -193,7 +187,7 @@ pub fn apply<'a, N: AstNode>(transformer: &dyn AstTransform<'a>, node: N) -> N {\n }\n \n impl<'a> AstTransform<'a> for QualifyPaths<'a> {\n-    fn get_substitution(&self, node: &ra_syntax::SyntaxNode) -> Option<ra_syntax::SyntaxNode> {\n+    fn get_substitution(&self, node: &syntax::SyntaxNode) -> Option<syntax::SyntaxNode> {\n         self.get_substitution_inner(node).or_else(|| self.previous.get_substitution(node))\n     }\n     fn chain_before(self, other: Box<dyn AstTransform<'a> + 'a>) -> Box<dyn AstTransform<'a> + 'a> {"}, {"sha": "8757fa33f262e7616b88937c9d2dfebeaeea8ea0", "filename": "crates/ra_assists/src/handlers/add_custom_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_custom_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_custom_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_custom_impl.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,5 +1,5 @@\n use itertools::Itertools;\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, AstNode},\n     Direction, SmolStr,\n     SyntaxKind::{IDENT, WHITESPACE},"}, {"sha": "563cbf505f46ca49f8fcc893be4637692ce5c8d8", "filename": "crates/ra_assists/src/handlers/add_explicit_type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_explicit_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_explicit_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_explicit_type.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,5 +1,5 @@\n use hir::HirDisplay;\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, AstNode, LetStmt, NameOwner},\n     TextRange,\n };"}, {"sha": "81b61ebf8e4bb53fd0d033db3709e501744ba13d", "filename": "crates/ra_assists/src/handlers/add_missing_impl_members.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,5 +1,5 @@\n use hir::HasSource;\n-use ra_syntax::{\n+use syntax::{\n     ast::{\n         self,\n         edit::{self, AstNodeEdit, IndentLevel},"}, {"sha": "8c7ffae3dde166d6bf7fc74c71753e6edec68570", "filename": "crates/ra_assists/src/handlers/add_turbo_fish.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,5 +1,5 @@\n use ra_ide_db::defs::{classify_name_ref, Definition, NameRefClass};\n-use ra_syntax::{ast, AstNode, SyntaxKind, T};\n+use syntax::{ast, AstNode, SyntaxKind, T};\n use test_utils::mark;\n \n use crate::{"}, {"sha": "1a6fdafda2c876098ca7d8bbb5ca76454213be02", "filename": "crates/ra_assists/src/handlers/apply_demorgan.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fapply_demorgan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fapply_demorgan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fapply_demorgan.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,4 +1,4 @@\n-use ra_syntax::ast::{self, AstNode};\n+use syntax::ast::{self, AstNode};\n \n use crate::{utils::invert_boolean_expression, AssistContext, AssistId, AssistKind, Assists};\n "}, {"sha": "e19b197d9e0d5cfedb0bde089b25ef6edae8ed58", "filename": "crates/ra_assists/src/handlers/auto_import.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fauto_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fauto_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fauto_import.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -6,11 +6,11 @@ use hir::{\n     Type,\n };\n use ra_ide_db::{imports_locator, RootDatabase};\n-use ra_syntax::{\n+use rustc_hash::FxHashSet;\n+use syntax::{\n     ast::{self, AstNode},\n     SyntaxNode,\n };\n-use rustc_hash::FxHashSet;\n \n use crate::{\n     utils::insert_use_statement, AssistContext, AssistId, AssistKind, Assists, GroupLabel,"}, {"sha": "d5a68a24c9ebdd2e6b9dfc138f108ee2c0694598", "filename": "crates/ra_assists/src/handlers/change_return_type_to_result.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_return_type_to_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_return_type_to_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_return_type_to_result.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,4 +1,4 @@\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, BlockExpr, Expr, LoopBodyOwner},\n     AstNode, SyntaxNode,\n };"}, {"sha": "32dc053789073514a783b59b59591f7a2dc6fd59", "filename": "crates/ra_assists/src/handlers/change_visibility.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,4 +1,4 @@\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, NameOwner, VisibilityOwner},\n     AstNode,\n     SyntaxKind::{CONST, ENUM, FN, MODULE, STATIC, STRUCT, TRAIT, VISIBILITY},"}, {"sha": "7fd78e9d47052d500b1b09d90d11a38fda1a5bee", "filename": "crates/ra_assists/src/handlers/early_return.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fearly_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fearly_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fearly_return.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,6 +1,6 @@\n use std::{iter::once, ops::RangeInclusive};\n \n-use ra_syntax::{\n+use syntax::{\n     algo::replace_children,\n     ast::{\n         self,"}, {"sha": "cf34ffaf7f71d9e483aa6ddb5770734838857f9e", "filename": "crates/ra_assists/src/handlers/expand_glob_import.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -3,7 +3,7 @@ use ra_ide_db::{\n     defs::{classify_name_ref, Definition, NameRefClass},\n     RootDatabase,\n };\n-use ra_syntax::{algo, ast, match_ast, AstNode, SyntaxNode, SyntaxToken, T};\n+use syntax::{algo, ast, match_ast, AstNode, SyntaxNode, SyntaxToken, T};\n \n use crate::{\n     assist_context::{AssistBuilder, AssistContext, Assists},"}, {"sha": "6e9f2d0fc76bba99af1f72a8fe0aa923a3d0d8cb", "filename": "crates/ra_assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -2,12 +2,12 @@ use hir::{EnumVariant, Module, ModuleDef, Name};\n use ra_db::FileId;\n use ra_fmt::leading_indent;\n use ra_ide_db::{defs::Definition, search::Reference, RootDatabase};\n-use ra_syntax::{\n+use rustc_hash::FxHashSet;\n+use syntax::{\n     algo::find_node_at_offset,\n     ast::{self, ArgListOwner, AstNode, NameOwner, VisibilityOwner},\n     SourceFile, SyntaxNode, TextRange, TextSize,\n };\n-use rustc_hash::FxHashSet;\n \n use crate::{\n     assist_context::AssistBuilder, utils::insert_use_statement, AssistContext, AssistId,"}, {"sha": "d2ae137cdd3a84fd77455b8e06972e20dd49985e", "filename": "crates/ra_assists/src/handlers/extract_variable.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_variable.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,11 +1,11 @@\n-use ra_syntax::{\n+use stdx::format_to;\n+use syntax::{\n     ast::{self, AstNode},\n     SyntaxKind::{\n         BLOCK_EXPR, BREAK_EXPR, CLOSURE_EXPR, COMMENT, LOOP_EXPR, MATCH_ARM, PATH_EXPR, RETURN_EXPR,\n     },\n     SyntaxNode,\n };\n-use stdx::format_to;\n use test_utils::mark;\n \n use crate::{AssistContext, AssistId, AssistKind, Assists};"}, {"sha": "8f6660637275fee7385f4218e81f2cda3b04d950", "filename": "crates/ra_assists/src/handlers/fill_match_arms.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -3,7 +3,7 @@ use std::iter;\n use hir::{Adt, HasSource, ModuleDef, Semantics};\n use itertools::Itertools;\n use ra_ide_db::RootDatabase;\n-use ra_syntax::ast::{self, make, AstNode, MatchArm, NameOwner, Pat};\n+use syntax::ast::{self, make, AstNode, MatchArm, NameOwner, Pat};\n use test_utils::mark;\n \n use crate::{"}, {"sha": "b6cc1a3204caaab6b43078d36ef4347e0768d2ba", "filename": "crates/ra_assists/src/handlers/fix_visibility.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffix_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffix_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffix_visibility.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,6 +1,6 @@\n use hir::{db::HirDatabase, HasSource, HasVisibility, PathResolution};\n use ra_db::FileId;\n-use ra_syntax::{ast, AstNode, TextRange, TextSize};\n+use syntax::{ast, AstNode, TextRange, TextSize};\n \n use crate::{utils::vis_offset, AssistContext, AssistId, AssistKind, Assists};\n use ast::VisibilityOwner;"}, {"sha": "404f06133d7e19f40639815943f047f3e7f7deb3", "filename": "crates/ra_assists/src/handlers/flip_binexpr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fflip_binexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fflip_binexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fflip_binexpr.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,4 +1,4 @@\n-use ra_syntax::ast::{AstNode, BinExpr, BinOp};\n+use syntax::ast::{AstNode, BinExpr, BinOp};\n \n use crate::{AssistContext, AssistId, AssistKind, Assists};\n "}, {"sha": "5c69db53e564af28d329c3cbdab3aaf0db46302b", "filename": "crates/ra_assists/src/handlers/flip_comma.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fflip_comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fflip_comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fflip_comma.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,4 +1,4 @@\n-use ra_syntax::{algo::non_trivia_sibling, Direction, T};\n+use syntax::{algo::non_trivia_sibling, Direction, T};\n \n use crate::{AssistContext, AssistId, AssistKind, Assists};\n "}, {"sha": "347e79b1dadedaae3b10184964f28e68db4fb3b7", "filename": "crates/ra_assists/src/handlers/flip_trait_bound.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fflip_trait_bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fflip_trait_bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fflip_trait_bound.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,4 +1,4 @@\n-use ra_syntax::{\n+use syntax::{\n     algo::non_trivia_sibling,\n     ast::{self, AstNode},\n     Direction, T,"}, {"sha": "314504e15ce37e8ab92ad2ca7f2bae071444469f", "filename": "crates/ra_assists/src/handlers/generate_derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_derive.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,4 +1,4 @@\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, AstNode, AttrsOwner},\n     SyntaxKind::{COMMENT, WHITESPACE},\n     TextSize,"}, {"sha": "302b6b67d49de30c71463a0b09d0e820cacf1489", "filename": "crates/ra_assists/src/handlers/generate_from_impl_for_enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,5 +1,5 @@\n use ra_ide_db::RootDatabase;\n-use ra_syntax::ast::{self, AstNode, NameOwner};\n+use syntax::ast::{self, AstNode, NameOwner};\n use test_utils::mark;\n \n use crate::{utils::FamousDefs, AssistContext, AssistId, AssistKind, Assists};"}, {"sha": "b5df4410197d6b10ac6016375fc10d5e41112d84", "filename": "crates/ra_assists/src/handlers/generate_function.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,14 +1,14 @@\n use hir::HirDisplay;\n use ra_db::FileId;\n-use ra_syntax::{\n+use rustc_hash::{FxHashMap, FxHashSet};\n+use syntax::{\n     ast::{\n         self,\n         edit::{AstNodeEdit, IndentLevel},\n         make, ArgListOwner, AstNode, ModuleItemOwner,\n     },\n     SyntaxKind, SyntaxNode, TextSize,\n };\n-use rustc_hash::{FxHashMap, FxHashSet};\n \n use crate::{\n     assist_config::SnippetCap,"}, {"sha": "9989109b5aefbb7e51b70e0207c58852bb632b66", "filename": "crates/ra_assists/src/handlers/generate_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_impl.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,6 +1,6 @@\n use itertools::Itertools;\n-use ra_syntax::ast::{self, AstNode, GenericParamsOwner, NameOwner};\n use stdx::format_to;\n+use syntax::ast::{self, AstNode, GenericParamsOwner, NameOwner};\n \n use crate::{AssistContext, AssistId, AssistKind, Assists};\n "}, {"sha": "7db10f276863712cb70664733a8096a61272c531", "filename": "crates/ra_assists/src/handlers/generate_new.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,10 +1,10 @@\n use hir::Adt;\n use itertools::Itertools;\n-use ra_syntax::{\n+use stdx::format_to;\n+use syntax::{\n     ast::{self, AstNode, GenericParamsOwner, NameOwner, StructKind, VisibilityOwner},\n     T,\n };\n-use stdx::format_to;\n \n use crate::{AssistContext, AssistId, AssistKind, Assists};\n "}, {"sha": "5315923206d98a18932a15030a3ae7c3ccae11d8", "filename": "crates/ra_assists/src/handlers/inline_local_variable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,5 +1,5 @@\n use ra_ide_db::defs::Definition;\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, AstNode, AstToken},\n     TextRange,\n };"}, {"sha": "5f623e5f7add2db2ce8c413b2e68e3674a981a78", "filename": "crates/ra_assists/src/handlers/introduce_named_lifetime.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fintroduce_named_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fintroduce_named_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fintroduce_named_lifetime.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,8 +1,8 @@\n-use ra_syntax::{\n+use rustc_hash::FxHashSet;\n+use syntax::{\n     ast::{self, GenericParamsOwner, NameOwner},\n     AstNode, SyntaxKind, TextRange, TextSize,\n };\n-use rustc_hash::FxHashSet;\n \n use crate::{assist_context::AssistBuilder, AssistContext, AssistId, AssistKind, Assists};\n "}, {"sha": "f0e04753891836d7cc97133e8323744ec9e46dde", "filename": "crates/ra_assists/src/handlers/invert_if.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finvert_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finvert_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finvert_if.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,4 +1,4 @@\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, AstNode},\n     T,\n };"}, {"sha": "9c5c6eda72b6723d25daa1b4168b3b682cb46a53", "filename": "crates/ra_assists/src/handlers/merge_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,6 +1,6 @@\n use std::iter::successors;\n \n-use ra_syntax::{\n+use syntax::{\n     algo::{neighbor, skip_trivia_token, SyntaxRewriter},\n     ast::{self, edit::AstNodeEdit, make},\n     AstNode, Direction, InsertPosition, SyntaxElement, T,"}, {"sha": "c347eb40efaf2b9d23226386ef837b7e1d87ac9b", "filename": "crates/ra_assists/src/handlers/merge_match_arms.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_match_arms.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,6 +1,6 @@\n use std::iter::successors;\n \n-use ra_syntax::{\n+use syntax::{\n     algo::neighbor,\n     ast::{self, AstNode},\n     Direction,"}, {"sha": "e2e461520dcfff9239bc0d3173962d5c952ab959", "filename": "crates/ra_assists/src/handlers/move_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmove_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmove_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmove_bounds.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,4 +1,4 @@\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, edit::AstNodeEdit, make, AstNode, NameOwner, TypeBoundsOwner},\n     match_ast,\n     SyntaxKind::*,"}, {"sha": "c62ebc306184b47bbf58fca193eedb99a561a9da", "filename": "crates/ra_assists/src/handlers/move_guard.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,4 +1,4 @@\n-use ra_syntax::{\n+use syntax::{\n     ast::{AstNode, IfExpr, MatchArm},\n     SyntaxKind::WHITESPACE,\n };"}, {"sha": "9ddd116e015567ae58a2f67d47dca2c79236c934", "filename": "crates/ra_assists/src/handlers/raw_string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fraw_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fraw_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fraw_string.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,6 +1,6 @@\n use std::borrow::Cow;\n \n-use ra_syntax::{\n+use syntax::{\n     ast::{self, HasQuotes, HasStringValue},\n     AstToken,\n     SyntaxKind::{RAW_STRING, STRING},"}, {"sha": "f3dcca53481a24ba8a9b83f5cecd74f38e9f05fa", "filename": "crates/ra_assists/src/handlers/remove_dbg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fremove_dbg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fremove_dbg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fremove_dbg.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,4 +1,4 @@\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, AstNode},\n     TextRange, TextSize, T,\n };"}, {"sha": "44f41daa92d772bf93fa476043546728f82928d3", "filename": "crates/ra_assists/src/handlers/remove_mut.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fremove_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fremove_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fremove_mut.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,4 +1,4 @@\n-use ra_syntax::{SyntaxKind, TextRange, T};\n+use syntax::{SyntaxKind, TextRange, T};\n \n use crate::{AssistContext, AssistId, AssistKind, Assists};\n "}, {"sha": "013720dfcbe98088f480a8a40bbda49ebee06a09", "filename": "crates/ra_assists/src/handlers/reorder_fields.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freorder_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freorder_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freorder_fields.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -3,7 +3,7 @@ use rustc_hash::FxHashMap;\n \n use hir::{Adt, ModuleDef, PathResolution, Semantics, Struct};\n use ra_ide_db::RootDatabase;\n-use ra_syntax::{algo, ast, match_ast, AstNode, SyntaxKind, SyntaxKind::*, SyntaxNode};\n+use syntax::{algo, ast, match_ast, AstNode, SyntaxKind, SyntaxKind::*, SyntaxNode};\n \n use crate::{AssistContext, AssistId, AssistKind, Assists};\n "}, {"sha": "2442f049b655d45ca91bf0e64e54c26d4ce7aa0d", "filename": "crates/ra_assists/src/handlers/replace_if_let_with_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,5 +1,5 @@\n use ra_fmt::unwrap_trivial_block;\n-use ra_syntax::{\n+use syntax::{\n     ast::{\n         self,\n         edit::{AstNodeEdit, IndentLevel},"}, {"sha": "ed6d0c29be8dc6d75d2f8ddf2f83d0785431a3af", "filename": "crates/ra_assists/src/handlers/replace_let_with_if_let.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_let_with_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_let_with_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_let_with_if_let.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,6 +1,6 @@\n use std::iter::once;\n \n-use ra_syntax::{\n+use syntax::{\n     ast::{\n         self,\n         edit::{AstNodeEdit, IndentLevel},"}, {"sha": "011bf1106d1c771b29618db683d11723f6a76539", "filename": "crates/ra_assists/src/handlers/replace_qualified_name_with_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,5 +1,5 @@\n use hir;\n-use ra_syntax::{algo::SyntaxRewriter, ast, match_ast, AstNode, SmolStr, SyntaxNode};\n+use syntax::{algo::SyntaxRewriter, ast, match_ast, AstNode, SmolStr, SyntaxNode};\n \n use crate::{\n     utils::{find_insert_use_container, insert_use_statement},"}, {"sha": "9705f11b76b5c85df3f7a1213ed18f01d14a5d1e", "filename": "crates/ra_assists/src/handlers/replace_unwrap_with_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_unwrap_with_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_unwrap_with_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_unwrap_with_match.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,6 +1,6 @@\n use std::iter;\n \n-use ra_syntax::{\n+use syntax::{\n     ast::{\n         self,\n         edit::{AstNodeEdit, IndentLevel},"}, {"sha": "15e67eaa19f8f0ee8d09006be9ee102d74f185fb", "filename": "crates/ra_assists/src/handlers/split_import.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fsplit_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fsplit_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fsplit_import.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,6 +1,6 @@\n use std::iter::successors;\n \n-use ra_syntax::{ast, AstNode, T};\n+use syntax::{ast, AstNode, T};\n \n use crate::{AssistContext, AssistId, AssistKind, Assists};\n "}, {"sha": "2879090b86767de478c0662a62f400716578799b", "filename": "crates/ra_assists/src/handlers/unwrap_block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Funwrap_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Fhandlers%2Funwrap_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Funwrap_block.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,5 +1,5 @@\n use ra_fmt::unwrap_trivial_block;\n-use ra_syntax::{\n+use syntax::{\n     ast::{\n         self,\n         edit::{AstNodeEdit, IndentLevel},"}, {"sha": "e2ef561fee20822c9fb039a0262fd4107d5d7e08", "filename": "crates/ra_assists/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Flib.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -20,7 +20,7 @@ pub mod ast_transform;\n use hir::Semantics;\n use ra_db::FileRange;\n use ra_ide_db::{source_change::SourceChange, RootDatabase};\n-use ra_syntax::TextRange;\n+use syntax::TextRange;\n \n pub(crate) use crate::assist_context::{AssistContext, Assists};\n "}, {"sha": "1ae7aaa09bee9bef37d2013e627a9a8b0e89807d", "filename": "crates/ra_assists/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Ftests.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -3,7 +3,7 @@ mod generated;\n use hir::Semantics;\n use ra_db::{fixture::WithFixture, FileId, FileRange, SourceDatabaseExt};\n use ra_ide_db::RootDatabase;\n-use ra_syntax::TextRange;\n+use syntax::TextRange;\n use test_utils::{assert_eq_text, extract_offset, extract_range};\n \n use crate::{handlers::Handler, Assist, AssistConfig, AssistContext, AssistKind, Assists};"}, {"sha": "6d85661c4619fa2d3297fe6b3982b38a69dcab32", "filename": "crates/ra_assists/src/utils.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Futils.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -5,13 +5,13 @@ use std::{iter, ops};\n \n use hir::{Adt, Crate, Enum, ScopeDef, Semantics, Trait, Type};\n use ra_ide_db::RootDatabase;\n-use ra_syntax::{\n+use rustc_hash::FxHashSet;\n+use syntax::{\n     ast::{self, make, NameOwner},\n     AstNode,\n     SyntaxKind::*,\n     SyntaxNode, TextSize, T,\n };\n-use rustc_hash::FxHashSet;\n \n use crate::assist_config::SnippetCap;\n "}, {"sha": "f89c288da45892088c05552dccad3df7e3486bff", "filename": "crates/ra_assists/src/utils/insert_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Futils%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_assists%2Fsrc%2Futils%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Futils%2Finsert_use.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -4,7 +4,7 @@\n \n use either::Either;\n use hir::{self, ModPath};\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, NameOwner, VisibilityOwner},\n     AstNode, Direction, SmolStr,\n     SyntaxKind::{PATH, PATH_SEGMENT},"}, {"sha": "cb0d2b9d734724a0d8e10b1b536176b855d3d055", "filename": "crates/ra_cfg/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_cfg%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_cfg%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cfg%2FCargo.toml?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -11,7 +11,7 @@ doctest = false\n [dependencies]\n rustc-hash = \"1.1.0\"\n \n-ra_syntax = { path = \"../ra_syntax\" }\n+syntax = { path = \"../syntax\" }\n tt = { path = \"../tt\" }\n \n [dev-dependencies]"}, {"sha": "940091465c3f85f1a55910f70d1519b79dad0997", "filename": "crates/ra_cfg/src/cfg_expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_cfg%2Fsrc%2Fcfg_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_cfg%2Fsrc%2Fcfg_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cfg%2Fsrc%2Fcfg_expr.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -4,7 +4,7 @@\n \n use std::slice::Iter as SliceIter;\n \n-use ra_syntax::SmolStr;\n+use syntax::SmolStr;\n \n #[derive(Debug, Clone, PartialEq, Eq)]\n pub enum CfgExpr {\n@@ -87,7 +87,7 @@ mod tests {\n     use super::*;\n \n     use mbe::{ast_to_token_tree, TokenMap};\n-    use ra_syntax::ast::{self, AstNode};\n+    use syntax::ast::{self, AstNode};\n \n     fn get_token_tree_generated(input: &str) -> (tt::Subtree, TokenMap) {\n         let source_file = ast::SourceFile::parse(input).ok().unwrap();"}, {"sha": "7e025143bd435434ba60fb246a4502919c377f37", "filename": "crates/ra_cfg/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_cfg%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_cfg%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cfg%2Fsrc%2Flib.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -2,8 +2,8 @@\n \n mod cfg_expr;\n \n-use ra_syntax::SmolStr;\n use rustc_hash::FxHashSet;\n+use syntax::SmolStr;\n \n pub use cfg_expr::CfgExpr;\n "}, {"sha": "156ea1ee4b5d730d98d21d1e42f0c7b47a77e424", "filename": "crates/ra_db/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_db%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_db%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2FCargo.toml?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -12,7 +12,7 @@ doctest = false\n salsa = \"0.15.2\"\n rustc-hash = \"1.1.0\"\n \n-ra_syntax = { path = \"../ra_syntax\" }\n+syntax = { path = \"../syntax\" }\n ra_cfg = { path = \"../ra_cfg\" }\n profile = { path = \"../profile\" }\n tt = { path = \"../tt\" }"}, {"sha": "12a86349971ceed6ce98a13d80ff05d797b1bc70", "filename": "crates/ra_db/src/input.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Finput.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -9,8 +9,8 @@\n use std::{fmt, iter::FromIterator, ops, str::FromStr, sync::Arc};\n \n use ra_cfg::CfgOptions;\n-use ra_syntax::SmolStr;\n use rustc_hash::{FxHashMap, FxHashSet};\n+use syntax::SmolStr;\n use tt::TokenExpander;\n use vfs::file_set::FileSet;\n "}, {"sha": "73ac243d66bfea64c348f02ad635dcc2a5dc44bd", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -5,8 +5,8 @@ pub mod fixture;\n \n use std::{panic, sync::Arc};\n \n-use ra_syntax::{ast, Parse, SourceFile, TextRange, TextSize};\n use rustc_hash::FxHashSet;\n+use syntax::{ast, Parse, SourceFile, TextRange, TextSize};\n \n pub use crate::{\n     cancellation::Canceled,"}, {"sha": "d42ca62be270a66cd4ab26ee066ed2c81be3775b", "filename": "crates/ra_fmt/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_fmt%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_fmt%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_fmt%2FCargo.toml?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -12,4 +12,4 @@ doctest = false\n [dependencies]\n itertools = \"0.9.0\"\n \n-ra_syntax = { path = \"../ra_syntax\" }\n+syntax = { path = \"../syntax\" }"}, {"sha": "d0bf0593f7a2973c5c0e965655a0c3cf8d151863", "filename": "crates/ra_fmt/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_fmt%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_fmt%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_fmt%2Fsrc%2Flib.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -3,7 +3,7 @@\n use std::iter::successors;\n \n use itertools::Itertools;\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, AstNode, AstToken},\n     SmolStr, SyntaxKind,\n     SyntaxKind::*,"}, {"sha": "ee5622a7d99cb44a3e4fe0b614eff341826c679f", "filename": "crates/ra_hir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2FCargo.toml?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -17,7 +17,7 @@ arrayvec = \"0.5.1\"\n itertools = \"0.9.0\"\n \n stdx = { path = \"../stdx\" }\n-ra_syntax = { path = \"../ra_syntax\" }\n+syntax = { path = \"../syntax\" }\n ra_db = { path = \"../ra_db\" }\n profile = { path = \"../profile\" }\n hir_expand = { path = \"../ra_hir_expand\", package = \"ra_hir_expand\" }"}, {"sha": "98724c1462fce65db17e1cbacf841b5d7d008a18", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -31,12 +31,12 @@ use hir_ty::{\n     InEnvironment, Substs, TraitEnvironment, Ty, TyDefId, TypeCtor,\n };\n use ra_db::{CrateId, Edition, FileId};\n-use ra_syntax::{\n+use rustc_hash::FxHashSet;\n+use stdx::impl_from;\n+use syntax::{\n     ast::{self, AttrsOwner, NameOwner},\n     AstNode,\n };\n-use rustc_hash::FxHashSet;\n-use stdx::impl_from;\n \n use crate::{\n     db::{DefDatabase, HirDatabase},"}, {"sha": "a50d4ff02909b5a57851875a0d55f752dce358a5", "filename": "crates/ra_hir/src/has_source.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir%2Fsrc%2Fhas_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir%2Fsrc%2Fhas_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fhas_source.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -6,7 +6,7 @@ use hir_def::{\n     src::{HasChildSource, HasSource as _},\n     Lookup, VariantId,\n };\n-use ra_syntax::ast;\n+use syntax::ast;\n \n use crate::{\n     db::HirDatabase, Const, Enum, EnumVariant, Field, FieldSource, Function, ImplDef, MacroDef,"}, {"sha": "2e0ef440851534c4e203a13a5dee51276f541841", "filename": "crates/ra_hir/src/semantics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -12,11 +12,11 @@ use hir_expand::{hygiene::Hygiene, name::AsName, ExpansionInfo};\n use hir_ty::associated_type_shorthand_candidates;\n use itertools::Itertools;\n use ra_db::{FileId, FileRange};\n-use ra_syntax::{\n+use rustc_hash::{FxHashMap, FxHashSet};\n+use syntax::{\n     algo::{find_node_at_offset, skip_trivia_token},\n     ast, AstNode, Direction, SyntaxNode, SyntaxToken, TextRange, TextSize,\n };\n-use rustc_hash::{FxHashMap, FxHashSet};\n \n use crate::{\n     db::HirDatabase,"}, {"sha": "ab2fd0957fb1fc7b789f36ed62cca93a67840c78", "filename": "crates/ra_hir/src/semantics/source_to_def.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics%2Fsource_to_def.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -10,12 +10,12 @@ use hir_def::{\n };\n use hir_expand::{name::AsName, AstId, MacroDefKind};\n use ra_db::FileId;\n-use ra_syntax::{\n+use rustc_hash::FxHashMap;\n+use stdx::impl_from;\n+use syntax::{\n     ast::{self, NameOwner},\n     match_ast, AstNode, SyntaxNode,\n };\n-use rustc_hash::FxHashMap;\n-use stdx::impl_from;\n \n use crate::{db::HirDatabase, InFile, MacroDefId};\n "}, {"sha": "6b2de3a06f7c90716209a941bf00161806272bb5", "filename": "crates/ra_hir/src/source_analyzer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -21,7 +21,7 @@ use hir_ty::{\n     diagnostics::{record_literal_missing_fields, record_pattern_missing_fields},\n     InferenceResult, Substs, Ty,\n };\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, AstNode},\n     SyntaxNode, TextRange, TextSize,\n };"}, {"sha": "38129782febdb34726845d0cad98e1bab37edc29", "filename": "crates/ra_hir_def/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2FCargo.toml?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -24,7 +24,7 @@ stdx = { path = \"../stdx\" }\n \n arena = { path = \"../arena\" }\n ra_db = { path = \"../ra_db\" }\n-ra_syntax = { path = \"../ra_syntax\" }\n+syntax = { path = \"../syntax\" }\n profile = { path = \"../profile\" }\n hir_expand = { path = \"../ra_hir_expand\", package = \"ra_hir_expand\" }\n test_utils = { path = \"../test_utils\" }"}, {"sha": "c83219d771ee3b36f26fd708ffb0dc68924cf97c", "filename": "crates/ra_hir_def/src/adt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fadt.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -8,7 +8,7 @@ use hir_expand::{\n     name::{AsName, Name},\n     InFile,\n };\n-use ra_syntax::ast::{self, NameOwner, VisibilityOwner};\n+use syntax::ast::{self, NameOwner, VisibilityOwner};\n use tt::{Delimiter, DelimiterKind, Leaf, Subtree, TokenTree};\n \n use crate::{"}, {"sha": "36dc8b8166e5076675b74b6fbed2126775560f7e", "filename": "crates/ra_hir_def/src/attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fattr.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -6,7 +6,7 @@ use either::Either;\n use hir_expand::{hygiene::Hygiene, AstId, InFile};\n use mbe::ast_to_token_tree;\n use ra_cfg::{CfgExpr, CfgOptions};\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, AstNode, AttrsOwner},\n     SmolStr,\n };"}, {"sha": "7c33966a713afca3933f5dbc8a28a37bf60dd77b", "filename": "crates/ra_hir_def/src/body.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -11,8 +11,8 @@ use either::Either;\n use hir_expand::{ast_id_map::AstIdMap, hygiene::Hygiene, AstId, HirFileId, InFile, MacroDefId};\n use ra_cfg::CfgOptions;\n use ra_db::CrateId;\n-use ra_syntax::{ast, AstNode, AstPtr};\n use rustc_hash::FxHashMap;\n+use syntax::{ast, AstNode, AstPtr};\n use test_utils::mark;\n \n pub(crate) use lower::LowerCtx;"}, {"sha": "a26251cdeb5bbca48ab42fd71c8fceccc34448b5", "filename": "crates/ra_hir_def/src/body/lower.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -10,14 +10,14 @@ use hir_expand::{\n     name::{name, AsName, Name},\n     HirFileId, MacroDefId, MacroDefKind,\n };\n-use ra_syntax::{\n+use rustc_hash::FxHashMap;\n+use syntax::{\n     ast::{\n         self, ArgListOwner, ArrayExprKind, AstChildren, LiteralKind, LoopBodyOwner, NameOwner,\n         SlicePatComponents,\n     },\n     AstNode, AstPtr,\n };\n-use rustc_hash::FxHashMap;\n use test_utils::mark;\n \n use crate::{"}, {"sha": "079f14c298088216d849e0e93e0d01d756673a4e", "filename": "crates/ra_hir_def/src/body/scope.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fbody%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fbody%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Fscope.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -171,7 +171,7 @@ fn compute_expr_scopes(expr: ExprId, body: &Body, scopes: &mut ExprScopes, scope\n mod tests {\n     use hir_expand::{name::AsName, InFile};\n     use ra_db::{fixture::WithFixture, FileId, SourceDatabase};\n-    use ra_syntax::{algo::find_node_at_offset, ast, AstNode};\n+    use syntax::{algo::find_node_at_offset, ast, AstNode};\n     use test_utils::{assert_eq_text, extract_offset, mark};\n \n     use crate::{db::DefDatabase, test_db::TestDB, FunctionId, ModuleDefId};"}, {"sha": "9a8eb4edec7ce8827047f1657fbe9263d9f1df5f", "filename": "crates/ra_hir_def/src/data.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fdata.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -3,7 +3,7 @@\n use std::sync::Arc;\n \n use hir_expand::{name::Name, InFile};\n-use ra_syntax::ast;\n+use syntax::ast;\n \n use crate::{\n     attr::Attrs,"}, {"sha": "a925548b58ca15b19e86fa5cc736061135b7bb89", "filename": "crates/ra_hir_def/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fdb.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -3,7 +3,7 @@ use std::sync::Arc;\n \n use hir_expand::{db::AstDatabase, HirFileId};\n use ra_db::{salsa, CrateId, SourceDatabase, Upcast};\n-use ra_syntax::SmolStr;\n+use syntax::SmolStr;\n \n use crate::{\n     adt::{EnumData, StructData},"}, {"sha": "2e38a978f829273c2d8b5933d59c155d843336c7", "filename": "crates/ra_hir_def/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fdiagnostics.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -3,7 +3,7 @@\n use std::any::Any;\n \n use hir_expand::diagnostics::Diagnostic;\n-use ra_syntax::{ast, AstPtr, SyntaxNodePtr};\n+use syntax::{ast, AstPtr, SyntaxNodePtr};\n \n use hir_expand::{HirFileId, InFile};\n "}, {"sha": "e9a02b11bb60cd28fda131e804df03f907ea5f01", "filename": "crates/ra_hir_def/src/docs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fdocs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fdocs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fdocs.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -6,7 +6,7 @@\n use std::sync::Arc;\n \n use either::Either;\n-use ra_syntax::ast;\n+use syntax::ast;\n \n use crate::{\n     db::DefDatabase,"}, {"sha": "c94b3a36f57c73f9bfe767dc9ae0f4d1d5ad732f", "filename": "crates/ra_hir_def/src/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fexpr.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -14,7 +14,7 @@\n \n use arena::{Idx, RawId};\n use hir_expand::name::Name;\n-use ra_syntax::ast::RangeOp;\n+use syntax::ast::RangeOp;\n \n use crate::{\n     builtin_type::{BuiltinFloat, BuiltinInt},\n@@ -197,7 +197,7 @@ pub enum ArithOp {\n     BitAnd,\n }\n \n-pub use ra_syntax::ast::PrefixOp as UnaryOp;\n+pub use syntax::ast::PrefixOp as UnaryOp;\n #[derive(Debug, Clone, Eq, PartialEq)]\n pub enum Array {\n     ElementList(Vec<ExprId>),"}, {"sha": "5099f417d3d471aa874b8a0b7b7d95c22528cb33", "filename": "crates/ra_hir_def/src/find_path.rs", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Ffind_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Ffind_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Ffind_path.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -294,7 +294,7 @@ fn find_local_import_locations(\n mod tests {\n     use hir_expand::hygiene::Hygiene;\n     use ra_db::fixture::WithFixture;\n-    use ra_syntax::ast::AstNode;\n+    use syntax::ast::AstNode;\n     use test_utils::mark;\n \n     use crate::test_db::TestDB;\n@@ -307,12 +307,9 @@ mod tests {\n     fn check_found_path(ra_fixture: &str, path: &str) {\n         let (db, pos) = TestDB::with_position(ra_fixture);\n         let module = db.module_for_file(pos.file_id);\n-        let parsed_path_file = ra_syntax::SourceFile::parse(&format!(\"use {};\", path));\n-        let ast_path = parsed_path_file\n-            .syntax_node()\n-            .descendants()\n-            .find_map(ra_syntax::ast::Path::cast)\n-            .unwrap();\n+        let parsed_path_file = syntax::SourceFile::parse(&format!(\"use {};\", path));\n+        let ast_path =\n+            parsed_path_file.syntax_node().descendants().find_map(syntax::ast::Path::cast).unwrap();\n         let mod_path = ModPath::from_src(ast_path, &Hygiene::new_unhygienic()).unwrap();\n \n         let crate_def_map = db.crate_def_map(module.krate);\n@@ -441,12 +438,12 @@ mod tests {\n         // already in scope.\n         check_found_path(\n             r#\"\n-            //- /main.rs crate:main deps:ra_syntax\n+            //- /main.rs crate:main deps:syntax\n \n-            use ra_syntax::ast;\n+            use syntax::ast;\n             <|>\n \n-            //- /lib.rs crate:ra_syntax\n+            //- /lib.rs crate:syntax\n             pub mod ast {\n                 pub enum ModuleItem {\n                     A, B, C,\n@@ -458,18 +455,18 @@ mod tests {\n \n         check_found_path(\n             r#\"\n-            //- /main.rs crate:main deps:ra_syntax\n+            //- /main.rs crate:main deps:syntax\n \n             <|>\n \n-            //- /lib.rs crate:ra_syntax\n+            //- /lib.rs crate:syntax\n             pub mod ast {\n                 pub enum ModuleItem {\n                     A, B, C,\n                 }\n             }\n         \"#,\n-            \"ra_syntax::ast::ModuleItem\",\n+            \"syntax::ast::ModuleItem\",\n         );\n     }\n "}, {"sha": "4476f03162023f3e8e111892d8bb29d31cb4d251", "filename": "crates/ra_hir_def/src/generics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fgenerics.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -11,7 +11,7 @@ use hir_expand::{\n     InFile,\n };\n use ra_db::FileId;\n-use ra_syntax::ast::{self, GenericParamsOwner, NameOwner, TypeBoundsOwner};\n+use syntax::ast::{self, GenericParamsOwner, NameOwner, TypeBoundsOwner};\n \n use crate::{\n     body::LowerCtx,"}, {"sha": "431ff30abde8d3590ee960270564db2638a6b4ae", "filename": "crates/ra_hir_def/src/import_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fimport_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fimport_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fimport_map.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -5,9 +5,9 @@ use std::{cmp::Ordering, fmt, hash::BuildHasherDefault, sync::Arc};\n use fst::{self, Streamer};\n use indexmap::{map::Entry, IndexMap};\n use ra_db::CrateId;\n-use ra_syntax::SmolStr;\n use rustc_hash::{FxHashMap, FxHasher};\n use smallvec::SmallVec;\n+use syntax::SmolStr;\n \n use crate::{\n     db::DefDatabase,"}, {"sha": "e14722caebb59875a9dc596e135209f9de73ae83", "filename": "crates/ra_hir_def/src/item_tree.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fitem_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fitem_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fitem_tree.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -22,9 +22,9 @@ use hir_expand::{\n     name::{name, AsName, Name},\n     HirFileId, InFile,\n };\n-use ra_syntax::{ast, match_ast};\n use rustc_hash::FxHashMap;\n use smallvec::SmallVec;\n+use syntax::{ast, match_ast};\n use test_utils::mark;\n \n use crate::{"}, {"sha": "391ab5d3928ab9ca5752cd18284e5c0c25c4bd17", "filename": "crates/ra_hir_def/src/item_tree/lower.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -4,11 +4,11 @@ use std::{collections::hash_map::Entry, mem, sync::Arc};\n \n use arena::map::ArenaMap;\n use hir_expand::{ast_id_map::AstIdMap, hygiene::Hygiene, HirFileId};\n-use ra_syntax::{\n+use smallvec::SmallVec;\n+use syntax::{\n     ast::{self, ModuleItemOwner},\n     SyntaxNode,\n };\n-use smallvec::SmallVec;\n \n use crate::{\n     attr::Attrs,"}, {"sha": "6c843e339a638d45b16c0980aeb60fc9f0402f36", "filename": "crates/ra_hir_def/src/item_tree/tests.rs", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Ftests.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,10 +1,10 @@\n use expect::{expect, Expect};\n use hir_expand::{db::AstDatabase, HirFileId, InFile};\n use ra_db::fixture::WithFixture;\n-use ra_syntax::{ast, AstNode};\n use rustc_hash::FxHashSet;\n use std::sync::Arc;\n use stdx::format_to;\n+use syntax::{ast, AstNode};\n \n use crate::{db::DefDatabase, test_db::TestDB};\n \n@@ -228,31 +228,31 @@ fn smoke() {\n \n             top-level items:\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"attr_on_use\"))] }, input: None }]) }]\n-            Import { path: ModPath { kind: Plain, segments: [Name(Text(\"a\"))] }, alias: None, visibility: RawVisibilityId(\"pub(self)\"), is_glob: false, is_prelude: false, ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Use>(0) }\n+            Import { path: ModPath { kind: Plain, segments: [Name(Text(\"a\"))] }, alias: None, visibility: RawVisibilityId(\"pub(self)\"), is_glob: false, is_prelude: false, ast_id: FileAstId::<syntax::ast::generated::nodes::Use>(0) }\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"attr_on_use\"))] }, input: None }]) }]\n-            Import { path: ModPath { kind: Plain, segments: [Name(Text(\"b\"))] }, alias: None, visibility: RawVisibilityId(\"pub(self)\"), is_glob: true, is_prelude: false, ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Use>(0) }\n+            Import { path: ModPath { kind: Plain, segments: [Name(Text(\"b\"))] }, alias: None, visibility: RawVisibilityId(\"pub(self)\"), is_glob: true, is_prelude: false, ast_id: FileAstId::<syntax::ast::generated::nodes::Use>(0) }\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"ext_crate\"))] }, input: None }]) }]\n-            ExternCrate { path: ModPath { kind: Plain, segments: [Name(Text(\"krate\"))] }, alias: None, visibility: RawVisibilityId(\"pub(self)\"), is_macro_use: false, ast_id: FileAstId::<ra_syntax::ast::generated::nodes::ExternCrate>(1) }\n+            ExternCrate { path: ModPath { kind: Plain, segments: [Name(Text(\"krate\"))] }, alias: None, visibility: RawVisibilityId(\"pub(self)\"), is_macro_use: false, ast_id: FileAstId::<syntax::ast::generated::nodes::ExternCrate>(1) }\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"on_trait\"))] }, input: None }]) }]\n-            Trait { name: Name(Text(\"Tr\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(0), auto: false, items: [TypeAlias(Idx::<TypeAlias>(0)), Const(Idx::<Const>(0)), Function(Idx::<Function>(0)), Function(Idx::<Function>(1))], ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Trait>(2) }\n+            Trait { name: Name(Text(\"Tr\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(0), auto: false, items: [TypeAlias(Idx::<TypeAlias>(0)), Const(Idx::<Const>(0)), Function(Idx::<Function>(0)), Function(Idx::<Function>(1))], ast_id: FileAstId::<syntax::ast::generated::nodes::Trait>(2) }\n             > #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"assoc_ty\"))] }, input: None }]) }]\n-            > TypeAlias { name: Name(Text(\"AssocTy\")), visibility: RawVisibilityId(\"pub(self)\"), bounds: [Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"Tr\"))] }, generic_args: [Some(GenericArgs { args: [Type(Tuple([]))], has_self_type: false, bindings: [] })] })], generic_params: GenericParamsId(4294967295), type_ref: None, ast_id: FileAstId::<ra_syntax::ast::generated::nodes::TypeAlias>(8) }\n+            > TypeAlias { name: Name(Text(\"AssocTy\")), visibility: RawVisibilityId(\"pub(self)\"), bounds: [Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"Tr\"))] }, generic_args: [Some(GenericArgs { args: [Type(Tuple([]))], has_self_type: false, bindings: [] })] })], generic_params: GenericParamsId(4294967295), type_ref: None, ast_id: FileAstId::<syntax::ast::generated::nodes::TypeAlias>(8) }\n             > #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"assoc_const\"))] }, input: None }]) }]\n-            > Const { name: Some(Name(Text(\"CONST\"))), visibility: RawVisibilityId(\"pub(self)\"), type_ref: Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"u8\"))] }, generic_args: [None] }), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Const>(9) }\n+            > Const { name: Some(Name(Text(\"CONST\"))), visibility: RawVisibilityId(\"pub(self)\"), type_ref: Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"u8\"))] }, generic_args: [None] }), ast_id: FileAstId::<syntax::ast::generated::nodes::Const>(9) }\n             > #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"assoc_method\"))] }, input: None }]) }]\n-            > Function { name: Name(Text(\"method\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: true, is_unsafe: false, params: [Reference(Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"Self\"))] }, generic_args: [None] }), Shared)], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(10) }\n+            > Function { name: Name(Text(\"method\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: true, is_unsafe: false, params: [Reference(Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"Self\"))] }, generic_args: [None] }), Shared)], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<syntax::ast::generated::nodes::Fn>(10) }\n             > #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"assoc_dfl_method\"))] }, input: None }]) }]\n-            > Function { name: Name(Text(\"dfl_method\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: true, is_unsafe: false, params: [Reference(Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"Self\"))] }, generic_args: [None] }), Mut)], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(11) }\n+            > Function { name: Name(Text(\"dfl_method\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: true, is_unsafe: false, params: [Reference(Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"Self\"))] }, generic_args: [None] }), Mut)], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<syntax::ast::generated::nodes::Fn>(11) }\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"struct0\"))] }, input: None }]) }]\n-            Struct { name: Name(Text(\"Struct0\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(1), fields: Unit, ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Struct>(3), kind: Unit }\n+            Struct { name: Name(Text(\"Struct0\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(1), fields: Unit, ast_id: FileAstId::<syntax::ast::generated::nodes::Struct>(3), kind: Unit }\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"struct1\"))] }, input: None }]) }]\n-            Struct { name: Name(Text(\"Struct1\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(2), fields: Tuple(IdRange::<ra_hir_def::item_tree::Field>(0..1)), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Struct>(4), kind: Tuple }\n+            Struct { name: Name(Text(\"Struct1\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(2), fields: Tuple(IdRange::<ra_hir_def::item_tree::Field>(0..1)), ast_id: FileAstId::<syntax::ast::generated::nodes::Struct>(4), kind: Tuple }\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"struct2\"))] }, input: None }]) }]\n-            Struct { name: Name(Text(\"Struct2\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(3), fields: Record(IdRange::<ra_hir_def::item_tree::Field>(1..2)), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Struct>(5), kind: Record }\n+            Struct { name: Name(Text(\"Struct2\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(3), fields: Record(IdRange::<ra_hir_def::item_tree::Field>(1..2)), ast_id: FileAstId::<syntax::ast::generated::nodes::Struct>(5), kind: Record }\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"en\"))] }, input: None }]) }]\n-            Enum { name: Name(Text(\"En\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), variants: IdRange::<ra_hir_def::item_tree::Variant>(0..1), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Enum>(6) }\n+            Enum { name: Name(Text(\"En\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), variants: IdRange::<ra_hir_def::item_tree::Variant>(0..1), ast_id: FileAstId::<syntax::ast::generated::nodes::Enum>(6) }\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"un\"))] }, input: None }]) }]\n-            Union { name: Name(Text(\"Un\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), fields: Record(IdRange::<ra_hir_def::item_tree::Field>(3..4)), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Union>(7) }\n+            Union { name: Name(Text(\"Un\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), fields: Record(IdRange::<ra_hir_def::item_tree::Field>(3..4)), ast_id: FileAstId::<syntax::ast::generated::nodes::Union>(7) }\n         \"##]],\n     );\n }\n@@ -274,13 +274,13 @@ fn simple_inner_items() {\n             inner attrs: Attrs { entries: None }\n \n             top-level items:\n-            Impl { generic_params: GenericParamsId(0), target_trait: Some(Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"D\"))] }, generic_args: [None] })), target_type: Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"Response\"))] }, generic_args: [Some(GenericArgs { args: [Type(Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"T\"))] }, generic_args: [None] }))], has_self_type: false, bindings: [] })] }), is_negative: false, items: [Function(Idx::<Function>(1))], ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Impl>(0) }\n-            > Function { name: Name(Text(\"foo\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(1) }\n+            Impl { generic_params: GenericParamsId(0), target_trait: Some(Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"D\"))] }, generic_args: [None] })), target_type: Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"Response\"))] }, generic_args: [Some(GenericArgs { args: [Type(Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"T\"))] }, generic_args: [None] }))], has_self_type: false, bindings: [] })] }), is_negative: false, items: [Function(Idx::<Function>(1))], ast_id: FileAstId::<syntax::ast::generated::nodes::Impl>(0) }\n+            > Function { name: Name(Text(\"foo\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<syntax::ast::generated::nodes::Fn>(1) }\n \n             inner items:\n \n-            for AST FileAstId::<ra_syntax::ast::generated::nodes::Item>(2):\n-            Function { name: Name(Text(\"end\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(1), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(2) }\n+            for AST FileAstId::<syntax::ast::generated::nodes::Item>(2):\n+            Function { name: Name(Text(\"end\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(1), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<syntax::ast::generated::nodes::Fn>(2) }\n \n         \"#]],\n     );\n@@ -303,9 +303,9 @@ fn extern_attrs() {\n \n             top-level items:\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"attr_a\"))] }, input: None }, Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"block_attr\"))] }, input: None }]) }]\n-            Function { name: Name(Text(\"a\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: true, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(1) }\n+            Function { name: Name(Text(\"a\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: true, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<syntax::ast::generated::nodes::Fn>(1) }\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"attr_b\"))] }, input: None }, Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"block_attr\"))] }, input: None }]) }]\n-            Function { name: Name(Text(\"b\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: true, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(2) }\n+            Function { name: Name(Text(\"b\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: true, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<syntax::ast::generated::nodes::Fn>(2) }\n         \"##]],\n     );\n }\n@@ -327,11 +327,11 @@ fn trait_attrs() {\n \n             top-level items:\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"trait_attr\"))] }, input: None }]) }]\n-            Trait { name: Name(Text(\"Tr\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(0), auto: false, items: [Function(Idx::<Function>(0)), Function(Idx::<Function>(1))], ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Trait>(0) }\n+            Trait { name: Name(Text(\"Tr\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(0), auto: false, items: [Function(Idx::<Function>(0)), Function(Idx::<Function>(1))], ast_id: FileAstId::<syntax::ast::generated::nodes::Trait>(0) }\n             > #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"attr_a\"))] }, input: None }]) }]\n-            > Function { name: Name(Text(\"a\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(1) }\n+            > Function { name: Name(Text(\"a\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<syntax::ast::generated::nodes::Fn>(1) }\n             > #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"attr_b\"))] }, input: None }]) }]\n-            > Function { name: Name(Text(\"b\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(2) }\n+            > Function { name: Name(Text(\"b\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<syntax::ast::generated::nodes::Fn>(2) }\n         \"##]],\n     );\n }\n@@ -353,11 +353,11 @@ fn impl_attrs() {\n \n             top-level items:\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"impl_attr\"))] }, input: None }]) }]\n-            Impl { generic_params: GenericParamsId(4294967295), target_trait: None, target_type: Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"Ty\"))] }, generic_args: [None] }), is_negative: false, items: [Function(Idx::<Function>(0)), Function(Idx::<Function>(1))], ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Impl>(0) }\n+            Impl { generic_params: GenericParamsId(4294967295), target_trait: None, target_type: Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"Ty\"))] }, generic_args: [None] }), is_negative: false, items: [Function(Idx::<Function>(0)), Function(Idx::<Function>(1))], ast_id: FileAstId::<syntax::ast::generated::nodes::Impl>(0) }\n             > #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"attr_a\"))] }, input: None }]) }]\n-            > Function { name: Name(Text(\"a\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(1) }\n+            > Function { name: Name(Text(\"a\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<syntax::ast::generated::nodes::Fn>(1) }\n             > #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"attr_b\"))] }, input: None }]) }]\n-            > Function { name: Name(Text(\"b\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(2) }\n+            > Function { name: Name(Text(\"b\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<syntax::ast::generated::nodes::Fn>(2) }\n         \"##]],\n     );\n }\n@@ -408,13 +408,13 @@ fn inner_item_attrs() {\n             inner attrs: Attrs { entries: None }\n \n             top-level items:\n-            Function { name: Name(Text(\"foo\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(0) }\n+            Function { name: Name(Text(\"foo\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<syntax::ast::generated::nodes::Fn>(0) }\n \n             inner items:\n \n-            for AST FileAstId::<ra_syntax::ast::generated::nodes::Item>(1):\n+            for AST FileAstId::<syntax::ast::generated::nodes::Item>(1):\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"on_inner\"))] }, input: None }]) }]\n-            Function { name: Name(Text(\"inner\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(1) }\n+            Function { name: Name(Text(\"inner\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<syntax::ast::generated::nodes::Fn>(1) }\n \n         \"##]],\n     );\n@@ -432,8 +432,8 @@ fn assoc_item_macros() {\n             inner attrs: Attrs { entries: None }\n \n             top-level items:\n-            Impl { generic_params: GenericParamsId(4294967295), target_trait: None, target_type: Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"S\"))] }, generic_args: [None] }), is_negative: false, items: [MacroCall(Idx::<MacroCall>(0))], ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Impl>(0) }\n-            > MacroCall { name: None, path: ModPath { kind: Plain, segments: [Name(Text(\"items\"))] }, is_export: false, is_local_inner: false, is_builtin: false, ast_id: FileAstId::<ra_syntax::ast::generated::nodes::MacroCall>(1) }\n+            Impl { generic_params: GenericParamsId(4294967295), target_trait: None, target_type: Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"S\"))] }, generic_args: [None] }), is_negative: false, items: [MacroCall(Idx::<MacroCall>(0))], ast_id: FileAstId::<syntax::ast::generated::nodes::Impl>(0) }\n+            > MacroCall { name: None, path: ModPath { kind: Plain, segments: [Name(Text(\"items\"))] }, is_export: false, is_local_inner: false, is_builtin: false, ast_id: FileAstId::<syntax::ast::generated::nodes::MacroCall>(1) }\n         \"#]],\n     );\n }"}, {"sha": "40a5d92b5076766c3b21099c626b4d4fde20c15f", "filename": "crates/ra_hir_def/src/keys.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fkeys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fkeys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fkeys.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -3,8 +3,8 @@\n use std::marker::PhantomData;\n \n use hir_expand::{InFile, MacroDefId};\n-use ra_syntax::{ast, AstNode, AstPtr};\n use rustc_hash::FxHashMap;\n+use syntax::{ast, AstNode, AstPtr};\n \n use crate::{\n     dyn_map::{DynMap, Policy},"}, {"sha": "063eadccb2dbd3043ad6bc7d5502a3fac5e97995", "filename": "crates/ra_hir_def/src/lang_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Flang_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Flang_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Flang_item.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -4,8 +4,8 @@\n //! features, such as Fn family of traits.\n use std::sync::Arc;\n \n-use ra_syntax::SmolStr;\n use rustc_hash::FxHashMap;\n+use syntax::SmolStr;\n \n use crate::{\n     db::DefDatabase, AdtId, AttrDefId, CrateId, EnumId, FunctionId, ImplId, ModuleDefId, ModuleId,"}, {"sha": "806ac731f5d6f13d6264a2daaee15b846faf2133", "filename": "crates/ra_hir_def/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Flib.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -58,7 +58,7 @@ use hir_expand::{\n     MacroCallId, MacroCallKind, MacroDefId, MacroDefKind,\n };\n use ra_db::{impl_intern_key, salsa, CrateId};\n-use ra_syntax::ast;\n+use syntax::ast;\n \n use crate::builtin_type::BuiltinType;\n use item_tree::{"}, {"sha": "d26c837cc843f82eb15586f2f97e256bdf0a8a96", "filename": "crates/ra_hir_def/src/nameres.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -59,9 +59,9 @@ use std::sync::Arc;\n use arena::Arena;\n use hir_expand::{diagnostics::DiagnosticSink, name::Name, InFile};\n use ra_db::{CrateId, Edition, FileId};\n-use ra_syntax::ast;\n use rustc_hash::FxHashMap;\n use stdx::format_to;\n+use syntax::ast;\n \n use crate::{\n     db::DefDatabase,\n@@ -288,7 +288,7 @@ pub enum ModuleSource {\n \n mod diagnostics {\n     use hir_expand::diagnostics::DiagnosticSink;\n-    use ra_syntax::{ast, AstPtr};\n+    use syntax::{ast, AstPtr};\n \n     use crate::{db::DefDatabase, diagnostics::UnresolvedModule, nameres::LocalModuleId, AstId};\n "}, {"sha": "f7270ec91c15d78d876a2c26873baad18cffb891", "filename": "crates/ra_hir_def/src/nameres/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -13,8 +13,8 @@ use hir_expand::{\n };\n use ra_cfg::CfgOptions;\n use ra_db::{CrateId, FileId, ProcMacroId};\n-use ra_syntax::ast;\n use rustc_hash::FxHashMap;\n+use syntax::ast;\n use test_utils::mark;\n \n use crate::{"}, {"sha": "316245d6ba75377b11d30a0f442ad9c05efbfe45", "filename": "crates/ra_hir_def/src/nameres/mod_resolution.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fmod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fmod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fmod_resolution.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,7 +1,7 @@\n //! This module resolves `mod foo;` declaration to file.\n use hir_expand::name::Name;\n use ra_db::FileId;\n-use ra_syntax::SmolStr;\n+use syntax::SmolStr;\n \n use crate::{db::DefDatabase, HirFileId};\n "}, {"sha": "1f619787e1d5d47ebb80dfdac83bdcf47222e978", "filename": "crates/ra_hir_def/src/nameres/tests/mod_resolution.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests%2Fmod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests%2Fmod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests%2Fmod_resolution.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -698,7 +698,7 @@ fn unresolved_module_diagnostics() {\n                             ),\n                         ),\n                     ),\n-                    value: FileAstId::<ra_syntax::ast::generated::nodes::Module>(1),\n+                    value: FileAstId::<syntax::ast::generated::nodes::Module>(1),\n                 },\n                 candidate: \"bar.rs\",\n             },"}, {"sha": "88be07c8a771dbc959f0d99521765835895d5610", "filename": "crates/ra_hir_def/src/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fpath.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -13,7 +13,7 @@ use hir_expand::{\n     name::{AsName, Name},\n };\n use ra_db::CrateId;\n-use ra_syntax::ast;\n+use syntax::ast;\n \n use crate::{\n     type_ref::{TypeBound, TypeRef},"}, {"sha": "07b9723ce01b6d2230054fa709217166f5aeaa2f", "filename": "crates/ra_hir_def/src/path/lower.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fpath%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fpath%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fpath%2Flower.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -9,7 +9,7 @@ use hir_expand::{\n     hygiene::Hygiene,\n     name::{name, AsName},\n };\n-use ra_syntax::ast::{self, AstNode, TypeBoundsOwner};\n+use syntax::ast::{self, AstNode, TypeBoundsOwner};\n \n use super::AssociatedTypeBinding;\n use crate::{"}, {"sha": "53cecb05fb2a335b85e6071e63af888e84135b9f", "filename": "crates/ra_hir_def/src/path/lower/lower_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fpath%2Flower%2Flower_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fpath%2Flower%2Flower_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fpath%2Flower%2Flower_use.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -5,7 +5,7 @@ use std::iter;\n \n use either::Either;\n use hir_expand::{hygiene::Hygiene, name::AsName};\n-use ra_syntax::ast::{self, NameOwner};\n+use syntax::ast::{self, NameOwner};\n use test_utils::mark;\n \n use crate::path::{ImportAlias, ModPath, PathKind};"}, {"sha": "1a78c1444c4326bb44fe3185e8a9499dc60b1fc9", "filename": "crates/ra_hir_def/src/type_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Ftype_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Ftype_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Ftype_ref.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,6 +1,6 @@\n //! HIR for references to types. Paths in these are not yet resolved. They can\n //! be directly created from an ast::TypeRef, without further queries.\n-use ra_syntax::ast::{self};\n+use syntax::ast::{self};\n \n use crate::{body::LowerCtx, path::Path};\n "}, {"sha": "e6e0853a30a3ae5c44e3e7f73103817dd18e8861", "filename": "crates/ra_hir_def/src/visibility.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fvisibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_def%2Fsrc%2Fvisibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fvisibility.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,7 +1,7 @@\n //! Defines hir-level representation of visibility (e.g. `pub` and `pub(crate)`).\n \n use hir_expand::{hygiene::Hygiene, InFile};\n-use ra_syntax::ast;\n+use syntax::ast;\n \n use crate::{\n     db::DefDatabase,"}, {"sha": "153a70bdf51f57b6ad892e35899131f7eedfb93d", "filename": "crates/ra_hir_expand/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2FCargo.toml?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -15,7 +15,7 @@ rustc-hash = \"1.0.0\"\n \n arena = { path = \"../arena\" }\n ra_db = { path = \"../ra_db\" }\n-ra_syntax = { path = \"../ra_syntax\" }\n+syntax = { path = \"../syntax\" }\n parser = { path = \"../parser\" }\n profile = { path = \"../profile\" }\n tt = { path = \"../tt\" }"}, {"sha": "f63629b305302202353c2ccbc35909b95763c0a0", "filename": "crates/ra_hir_expand/src/ast_id_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2Fsrc%2Fast_id_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2Fsrc%2Fast_id_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fast_id_map.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -13,7 +13,7 @@ use std::{\n };\n \n use arena::{Arena, Idx};\n-use ra_syntax::{ast, AstNode, AstPtr, SyntaxNode, SyntaxNodePtr};\n+use syntax::{ast, AstNode, AstPtr, SyntaxNode, SyntaxNodePtr};\n \n /// `AstId` points to an AST node in a specific file.\n pub struct FileAstId<N: AstNode> {"}, {"sha": "2d2f8bcb842712c67dd7e7e67c6453f53f26cf7c", "filename": "crates/ra_hir_expand/src/builtin_derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_derive.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -3,7 +3,7 @@\n use log::debug;\n \n use parser::FragmentKind;\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, AstNode, GenericParamsOwner, ModuleItemOwner, NameOwner},\n     match_ast,\n };"}, {"sha": "ae4c8438209553e673881cff19c88c64d75d9024", "filename": "crates/ra_hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -8,7 +8,7 @@ use either::Either;\n use mbe::parse_to_token_tree;\n use parser::FragmentKind;\n use ra_db::FileId;\n-use ra_syntax::ast::{self, AstToken, HasStringValue};\n+use syntax::ast::{self, AstToken, HasStringValue};\n \n macro_rules! register_builtin {\n     ( LAZY: $(($name:ident, $kind: ident) => $expand:ident),* , EAGER: $(($e_name:ident, $e_kind: ident) => $e_expand:ident),*  ) => {\n@@ -427,8 +427,8 @@ mod tests {\n         MacroCallLoc,\n     };\n     use ra_db::{fixture::WithFixture, SourceDatabase};\n-    use ra_syntax::ast::NameOwner;\n     use std::sync::Arc;\n+    use syntax::ast::NameOwner;\n \n     fn expand_builtin_macro(ra_fixture: &str) -> String {\n         let (db, file_id) = TestDB::with_single_file(&ra_fixture);"}, {"sha": "c275f6b017b52cf6ffae290bb1ebd59c3372cac6", "filename": "crates/ra_hir_expand/src/db.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -5,7 +5,7 @@ use std::sync::Arc;\n use mbe::{ExpandResult, MacroRules};\n use parser::FragmentKind;\n use ra_db::{salsa, SourceDatabase};\n-use ra_syntax::{algo::diff, AstNode, GreenNode, Parse, SyntaxKind::*, SyntaxNode};\n+use syntax::{algo::diff, AstNode, GreenNode, Parse, SyntaxKind::*, SyntaxNode};\n \n use crate::{\n     ast_id_map::AstIdMap, BuiltinDeriveExpander, BuiltinFnLikeExpander, EagerCallLoc, EagerMacroId,\n@@ -92,9 +92,9 @@ pub trait AstDatabase: SourceDatabase {\n pub fn expand_hypothetical(\n     db: &dyn AstDatabase,\n     actual_macro_call: MacroCallId,\n-    hypothetical_args: &ra_syntax::ast::TokenTree,\n-    token_to_map: ra_syntax::SyntaxToken,\n-) -> Option<(SyntaxNode, ra_syntax::SyntaxToken)> {\n+    hypothetical_args: &syntax::ast::TokenTree,\n+    token_to_map: syntax::SyntaxToken,\n+) -> Option<(SyntaxNode, syntax::SyntaxToken)> {\n     let macro_file = MacroFile { macro_call_id: actual_macro_call };\n     let (tt, tmap_1) = mbe::syntax_node_to_token_tree(hypothetical_args.syntax()).unwrap();\n     let range =\n@@ -105,7 +105,7 @@ pub fn expand_hypothetical(\n         parse_macro_with_arg(db, macro_file, Some(std::sync::Arc::new((tt, tmap_1))))?;\n     let token_id = macro_def.0.map_id_down(token_id);\n     let range = tmap_2.range_by_token(token_id)?.by_kind(token_to_map.kind())?;\n-    let token = ra_syntax::algo::find_covering_element(&node.syntax_node(), range).into_token()?;\n+    let token = syntax::algo::find_covering_element(&node.syntax_node(), range).into_token()?;\n     Some((node.syntax_node(), token))\n }\n "}, {"sha": "59d35debe331d5f977d71036aaad2d42259d98c8", "filename": "crates/ra_hir_expand/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fdiagnostics.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -16,7 +16,7 @@\n \n use std::{any::Any, fmt};\n \n-use ra_syntax::SyntaxNodePtr;\n+use syntax::SyntaxNodePtr;\n \n use crate::InFile;\n "}, {"sha": "bd3409f973b5e8525b61efc5a9ab34cf9be593e1", "filename": "crates/ra_hir_expand/src/eager.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2Fsrc%2Feager.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2Fsrc%2Feager.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Feager.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -27,8 +27,8 @@ use crate::{\n \n use parser::FragmentKind;\n use ra_db::CrateId;\n-use ra_syntax::{algo::SyntaxRewriter, SyntaxNode};\n use std::sync::Arc;\n+use syntax::{algo::SyntaxRewriter, SyntaxNode};\n \n pub fn expand_eager_macro(\n     db: &dyn AstDatabase,"}, {"sha": "23b5eac2704f33b29a3eaa98b11323d04de91c5b", "filename": "crates/ra_hir_expand/src/hygiene.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2Fsrc%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2Fsrc%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fhygiene.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -4,7 +4,7 @@\n //! this moment, this is horribly incomplete and handles only `$crate`.\n use either::Either;\n use ra_db::CrateId;\n-use ra_syntax::ast;\n+use syntax::ast;\n \n use crate::{\n     db::AstDatabase,"}, {"sha": "af0cc445f7e9e3ef285ab7054105075763c20130", "filename": "crates/ra_hir_expand/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Flib.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -19,7 +19,7 @@ use std::hash::Hash;\n use std::sync::Arc;\n \n use ra_db::{impl_intern_key, salsa, CrateId, FileId};\n-use ra_syntax::{\n+use syntax::{\n     algo,\n     ast::{self, AstNode},\n     SyntaxNode, SyntaxToken, TextSize,"}, {"sha": "4dcaff08853470326e71d76b6188b348bd00874e", "filename": "crates/ra_hir_expand/src/name.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2Fsrc%2Fname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_expand%2Fsrc%2Fname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fname.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -2,7 +2,7 @@\n \n use std::fmt;\n \n-use ra_syntax::{ast, SmolStr};\n+use syntax::{ast, SmolStr};\n \n /// `Name` is a wrapper around string, which is used in hir for both references\n /// and declarations. In theory, names should also carry hygiene info, but we are\n@@ -37,8 +37,8 @@ impl Name {\n         Name(Repr::TupleField(idx))\n     }\n \n-    pub fn new_lifetime(lt: &ra_syntax::SyntaxToken) -> Name {\n-        assert!(lt.kind() == ra_syntax::SyntaxKind::LIFETIME);\n+    pub fn new_lifetime(lt: &syntax::SyntaxToken) -> Name {\n+        assert!(lt.kind() == syntax::SyntaxKind::LIFETIME);\n         Name(Repr::Text(lt.text().clone()))\n     }\n "}, {"sha": "6156e4a854b7e5672049d2b77c000cf6a8990ebf", "filename": "crates/ra_hir_ty/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_ty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_ty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2FCargo.toml?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -23,7 +23,7 @@ hir_expand = { path = \"../ra_hir_expand\", package = \"ra_hir_expand\" }\n arena = { path = \"../arena\" }\n ra_db = { path = \"../ra_db\" }\n profile = { path = \"../profile\" }\n-ra_syntax = { path = \"../ra_syntax\" }\n+syntax = { path = \"../syntax\" }\n test_utils = { path = \"../test_utils\" }\n \n scoped-tls = \"1\""}, {"sha": "bf35d2d0ee089eec1628443eaccb37a9c5003ffb", "filename": "crates/ra_hir_ty/src/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -8,8 +8,8 @@ use std::any::Any;\n use hir_def::DefWithBodyId;\n use hir_expand::diagnostics::{Diagnostic, DiagnosticSink};\n use hir_expand::{name::Name, HirFileId, InFile};\n-use ra_syntax::{ast, AstPtr, SyntaxNodePtr};\n use stdx::format_to;\n+use syntax::{ast, AstPtr, SyntaxNodePtr};\n \n use crate::db::HirDatabase;\n \n@@ -214,8 +214,8 @@ mod tests {\n         diagnostics::{Diagnostic, DiagnosticSinkBuilder},\n     };\n     use ra_db::{fixture::WithFixture, FileId, SourceDatabase, SourceDatabaseExt};\n-    use ra_syntax::{TextRange, TextSize};\n     use rustc_hash::FxHashMap;\n+    use syntax::{TextRange, TextSize};\n \n     use crate::{diagnostics::validate_body, test_db::TestDB};\n "}, {"sha": "fb76e2e4ecf0ee14ced00bb0e6f2e5c8bf179221", "filename": "crates/ra_hir_ty/src/diagnostics/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -4,8 +4,8 @@ use std::sync::Arc;\n \n use hir_def::{path::path, resolver::HasResolver, AdtId, DefWithBodyId};\n use hir_expand::diagnostics::DiagnosticSink;\n-use ra_syntax::{ast, AstPtr};\n use rustc_hash::FxHashSet;\n+use syntax::{ast, AstPtr};\n \n use crate::{\n     db::HirDatabase,"}, {"sha": "03b00b101c2314788f795ad6f7ae4edd3b64d40a", "filename": "crates/ra_hir_ty/src/infer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -31,9 +31,9 @@ use hir_def::{\n     TypeAliasId, VariantId,\n };\n use hir_expand::{diagnostics::DiagnosticSink, name::name};\n-use ra_syntax::SmolStr;\n use rustc_hash::FxHashMap;\n use stdx::impl_from;\n+use syntax::SmolStr;\n \n use super::{\n     primitive::{FloatTy, IntTy},"}, {"sha": "a2f849d02130b4f1a9923f824d7c568618b71f38", "filename": "crates/ra_hir_ty/src/infer/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -11,7 +11,7 @@ use hir_def::{\n     AdtId, AssocContainerId, FieldId, Lookup,\n };\n use hir_expand::name::{name, Name};\n-use ra_syntax::ast::RangeOp;\n+use syntax::ast::RangeOp;\n \n use crate::{\n     autoderef, method_resolution, op,"}, {"sha": "0e2a69eec2a8dd78513420a342ac0fa545e215d6", "filename": "crates/ra_hir_ty/src/test_db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_ty%2Fsrc%2Ftest_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_ty%2Fsrc%2Ftest_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftest_db.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -8,8 +8,8 @@ use std::{\n use hir_def::{db::DefDatabase, ModuleId};\n use hir_expand::db::AstDatabase;\n use ra_db::{salsa, CrateId, FileId, FileLoader, FileLoaderDelegate, SourceDatabase, Upcast};\n-use ra_syntax::TextRange;\n use rustc_hash::{FxHashMap, FxHashSet};\n+use syntax::TextRange;\n use test_utils::extract_annotations;\n \n #[salsa::database("}, {"sha": "5f6f8869ae0a8709c9587ad8c2c3900f790099af", "filename": "crates/ra_hir_ty/src/tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -22,12 +22,12 @@ use hir_def::{\n };\n use hir_expand::{db::AstDatabase, InFile};\n use ra_db::{fixture::WithFixture, FileRange, SourceDatabase, SourceDatabaseExt};\n-use ra_syntax::{\n+use stdx::format_to;\n+use syntax::{\n     algo,\n     ast::{self, AstNode},\n     SyntaxNode,\n };\n-use stdx::format_to;\n \n use crate::{\n     db::HirDatabase, display::HirDisplay, infer::TypeMismatch, test_db::TestDB, InferenceResult, Ty,"}, {"sha": "d887c7a7992107a49f6aba66c0e22eb2fd8d814c", "filename": "crates/ra_hir_ty/src/tests/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -543,7 +543,7 @@ fn bar() -> u32 {0}\n #[test]\n #[ignore]\n fn include_accidentally_quadratic() {\n-    let file = project_dir().join(\"crates/ra_syntax/test_data/accidentally_quadratic\");\n+    let file = project_dir().join(\"crates/syntax/test_data/accidentally_quadratic\");\n     let big_file = fs::read_to_string(file).unwrap();\n     let big_file = vec![big_file; 10].join(\"\\n\");\n "}, {"sha": "8e0fa59178d03ceb13919283d4ae4404792c11d1", "filename": "crates/ra_ide/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2FCargo.toml?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -21,7 +21,7 @@ oorandom = \"11.1.2\"\n \n stdx = { path = \"../stdx\" }\n \n-ra_syntax = { path = \"../ra_syntax\" }\n+syntax = { path = \"../syntax\" }\n text_edit = { path = \"../text_edit\" }\n ra_db = { path = \"../ra_db\" }\n ra_ide_db = { path = \"../ra_ide_db\" }"}, {"sha": "116e6bf83e1519eb6eb2cee2ecce975de0f8cf43", "filename": "crates/ra_ide/src/call_hierarchy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcall_hierarchy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcall_hierarchy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcall_hierarchy.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -4,7 +4,7 @@ use indexmap::IndexMap;\n \n use hir::Semantics;\n use ra_ide_db::RootDatabase;\n-use ra_syntax::{ast, match_ast, AstNode, TextRange};\n+use syntax::{ast, match_ast, AstNode, TextRange};\n \n use crate::{\n     call_info::FnCallNode, display::ToNav, goto_definition, references, FilePosition,"}, {"sha": "703cbc6b433a828fed17b71257d1eea995003d14", "filename": "crates/ra_ide/src/call_info.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcall_info.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -2,11 +2,11 @@\n use either::Either;\n use hir::{Docs, HirDisplay, Semantics, Type};\n use ra_ide_db::RootDatabase;\n-use ra_syntax::{\n+use stdx::format_to;\n+use syntax::{\n     ast::{self, ArgListOwner},\n     match_ast, AstNode, SyntaxNode, SyntaxToken, TextRange, TextSize,\n };\n-use stdx::format_to;\n use test_utils::mark;\n \n use crate::FilePosition;"}, {"sha": "603d935deb76413a0893bf1ed551bd0f1f725868", "filename": "crates/ra_ide/src/completion/complete_attribute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -3,8 +3,8 @@\n //! This module uses a bit of static metadata to provide completions\n //! for built-in attributes.\n \n-use ra_syntax::{ast, AstNode, SyntaxKind};\n use rustc_hash::FxHashSet;\n+use syntax::{ast, AstNode, SyntaxKind};\n \n use crate::completion::{\n     completion_context::CompletionContext,"}, {"sha": "7c63ce58f8932728777893df7b897349830575c2", "filename": "crates/ra_ide/src/completion/complete_fn_param.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,10 +1,10 @@\n //! See `complete_fn_param`.\n \n-use ra_syntax::{\n+use rustc_hash::FxHashMap;\n+use syntax::{\n     ast::{self, ModuleItemOwner},\n     match_ast, AstNode,\n };\n-use rustc_hash::FxHashMap;\n \n use crate::completion::{CompletionContext, CompletionItem, CompletionKind, Completions};\n "}, {"sha": "a80708935ea1badd7e9c123f9aa0f27c896b29b6", "filename": "crates/ra_ide/src/completion/complete_keyword.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,6 +1,6 @@\n //! FIXME: write short doc here\n \n-use ra_syntax::{ast, SyntaxKind};\n+use syntax::{ast, SyntaxKind};\n use test_utils::mark;\n \n use crate::completion::{"}, {"sha": "05e15d4647b9d0a9d50298bab02ee3704a11fe78", "filename": "crates/ra_ide/src/completion/complete_postfix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,6 +1,6 @@\n //! FIXME: write short doc here\n use ra_assists::utils::TryEnum;\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, AstNode},\n     TextRange, TextSize,\n };"}, {"sha": "cb7dd23c187d02387b425ad6ade407bb9ccac288", "filename": "crates/ra_ide/src/completion/complete_qualified_path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_qualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_qualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_qualified_path.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,8 +1,8 @@\n //! Completion of paths, i.e. `some::prefix::<|>`.\n \n use hir::{Adt, HasVisibility, PathResolution, ScopeDef};\n-use ra_syntax::AstNode;\n use rustc_hash::FxHashSet;\n+use syntax::AstNode;\n use test_utils::mark;\n \n use crate::completion::{CompletionContext, Completions};"}, {"sha": "d7edd92cf04ea6501d20e6e17f9bf46a5f0ef0e1", "filename": "crates/ra_ide/src/completion/complete_trait_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -33,7 +33,7 @@\n \n use hir::{self, Docs, HasSource};\n use ra_assists::utils::get_missing_assoc_items;\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, edit, Impl},\n     AstNode, SyntaxKind, SyntaxNode, TextRange, T,\n };"}, {"sha": "824227f310a936647042c38c243bc96899367881", "filename": "crates/ra_ide/src/completion/complete_unqualified_path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,7 +1,7 @@\n //! Completion of names from the current scope, e.g. locals and imported items.\n \n use hir::{Adt, ModuleDef, ScopeDef, Type};\n-use ra_syntax::AstNode;\n+use syntax::AstNode;\n use test_utils::mark;\n \n use crate::completion::{CompletionContext, Completions};"}, {"sha": "b5efb6cd675633ce7a65e1aada7c07dfc8318a85", "filename": "crates/ra_ide/src/completion/completion_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -3,7 +3,7 @@\n use hir::{Semantics, SemanticsScope, Type};\n use ra_db::SourceDatabase;\n use ra_ide_db::RootDatabase;\n-use ra_syntax::{\n+use syntax::{\n     algo::{find_covering_element, find_node_at_offset},\n     ast, match_ast, AstNode, NodeOrToken,\n     SyntaxKind::*,"}, {"sha": "9377cdc577eaec057636c8c84d38d475e8f065f6", "filename": "crates/ra_ide/src/completion/completion_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -3,7 +3,7 @@\n use std::fmt;\n \n use hir::Documentation;\n-use ra_syntax::TextRange;\n+use syntax::TextRange;\n use text_edit::TextEdit;\n \n use crate::completion::completion_config::SnippetCap;"}, {"sha": "ffc97c076a272988958ab6b242c9a53c1ec13231", "filename": "crates/ra_ide/src/completion/patterns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpatterns.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,6 +1,6 @@\n //! Patterns telling us certain facts about current syntax element, they are used in completion context\n \n-use ra_syntax::{\n+use syntax::{\n     algo::non_trivia_sibling,\n     ast::{self, LoopBodyOwner},\n     match_ast, AstNode, Direction, NodeOrToken, SyntaxElement,"}, {"sha": "e1b1ea4ce44cf55d3329fc71dc78a07892d507f4", "filename": "crates/ra_ide/src/completion/presentation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -3,7 +3,7 @@\n \n use hir::{Docs, HasAttrs, HasSource, HirDisplay, ModPath, ScopeDef, StructKind, Type};\n use itertools::Itertools;\n-use ra_syntax::ast::NameOwner;\n+use syntax::ast::NameOwner;\n use test_utils::mark;\n \n use crate::{"}, {"sha": "1452d7e9e54b5cde41216ec3fd558907a8c1f8f1", "filename": "crates/ra_ide/src/completion/test_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Ftest_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fcompletion%2Ftest_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Ftest_utils.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -2,8 +2,8 @@\n \n use hir::Semantics;\n use itertools::Itertools;\n-use ra_syntax::{AstNode, NodeOrToken, SyntaxElement};\n use stdx::{format_to, trim_indent};\n+use syntax::{AstNode, NodeOrToken, SyntaxElement};\n use test_utils::assert_eq_text;\n \n use crate::{"}, {"sha": "18def6115d7f885e4625978ca47173f8dc3cbed7", "filename": "crates/ra_ide/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -10,7 +10,7 @@ use hir::{diagnostics::DiagnosticSinkBuilder, Semantics};\n use itertools::Itertools;\n use ra_db::SourceDatabase;\n use ra_ide_db::RootDatabase;\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, AstNode},\n     SyntaxNode, TextRange, T,\n };"}, {"sha": "efcd631b31b2606263b183192f1775723eb4a1a7", "filename": "crates/ra_ide/src/diagnostics/diagnostics_with_fix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fdiagnostics%2Fdiagnostics_with_fix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fdiagnostics%2Fdiagnostics_with_fix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics%2Fdiagnostics_with_fix.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -12,7 +12,7 @@ use ra_ide_db::{\n     source_change::{FileSystemEdit, SourceFileEdit},\n     RootDatabase,\n };\n-use ra_syntax::{algo, ast, AstNode};\n+use syntax::{algo, ast, AstNode};\n use text_edit::TextEdit;\n \n /// A [Diagnostic] that potentially has a fix available."}, {"sha": "41b5bdc490c086859f74f607a07793b82319a36c", "filename": "crates/ra_ide/src/display.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -4,7 +4,7 @@\n mod navigation_target;\n mod short_label;\n \n-use ra_syntax::{\n+use syntax::{\n     ast::{self, AstNode, AttrsOwner, GenericParamsOwner, NameOwner},\n     SyntaxKind::{ATTR, COMMENT},\n };"}, {"sha": "683088a7484c8d8fb65ac9bd1db81335b2c264e3", "filename": "crates/ra_ide/src/display/navigation_target.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -4,7 +4,7 @@ use either::Either;\n use hir::{original_range, AssocItem, FieldSource, HasSource, InFile, ModuleSource};\n use ra_db::{FileId, SourceDatabase};\n use ra_ide_db::{defs::Definition, RootDatabase};\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, DocCommentsOwner, NameOwner},\n     match_ast, AstNode, SmolStr,\n     SyntaxKind::{self, IDENT_PAT, TYPE_PARAM},"}, {"sha": "ea49d9f970787ba9686d8169a08e7e0b94883dd6", "filename": "crates/ra_ide/src/display/short_label.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fshort_label.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fshort_label.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fshort_label.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,7 +1,7 @@\n //! FIXME: write short doc here\n \n-use ra_syntax::ast::{self, AstNode, NameOwner, VisibilityOwner};\n use stdx::format_to;\n+use syntax::ast::{self, AstNode, NameOwner, VisibilityOwner};\n \n pub(crate) trait ShortLabel {\n     fn short_label(&self) -> Option<String>;"}, {"sha": "c25e068d60f7d79e85f74840d4e2b7115f8b80b1", "filename": "crates/ra_ide/src/expand_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fexpand_macro.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,6 +1,6 @@\n use hir::Semantics;\n use ra_ide_db::RootDatabase;\n-use ra_syntax::{\n+use syntax::{\n     algo::{find_node_at_offset, SyntaxRewriter},\n     ast, AstNode, NodeOrToken, SyntaxKind,\n     SyntaxKind::*,"}, {"sha": "f30df2bff4759e65603a3460c2e105a2ee2a509f", "filename": "crates/ra_ide/src/extend_selection.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -2,7 +2,7 @@ use std::iter::successors;\n \n use hir::Semantics;\n use ra_ide_db::RootDatabase;\n-use ra_syntax::{\n+use syntax::{\n     algo::{self, find_covering_element, skip_trivia_token},\n     ast::{self, AstNode, AstToken},\n     Direction, NodeOrToken,"}, {"sha": "c90247ba658242f1d9aacf5e839b3ee44d8c6622", "filename": "crates/ra_ide/src/file_structure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Ffile_structure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Ffile_structure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ffile_structure.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,4 +1,4 @@\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, AttrsOwner, GenericParamsOwner, NameOwner},\n     match_ast, AstNode, SourceFile, SyntaxKind, SyntaxNode, TextRange, WalkEvent,\n };"}, {"sha": "7523aec55732bdde0eddd88f2314928e3339cd23", "filename": "crates/ra_ide/src/folding_ranges.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Ffolding_ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Ffolding_ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ffolding_ranges.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -2,7 +2,7 @@\n \n use rustc_hash::FxHashSet;\n \n-use ra_syntax::{\n+use syntax::{\n     ast::{self, AstNode, AstToken, VisibilityOwner},\n     Direction, NodeOrToken, SourceFile,\n     SyntaxKind::{self, *},"}, {"sha": "77f374ea2a23114c24e88ebf152b883ebc02e189", "filename": "crates/ra_ide/src/goto_definition.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -3,7 +3,7 @@ use ra_ide_db::{\n     defs::{classify_name, classify_name_ref},\n     symbol_index, RootDatabase,\n };\n-use ra_syntax::{\n+use syntax::{\n     ast::{self},\n     match_ast, AstNode,\n     SyntaxKind::*,\n@@ -101,7 +101,7 @@ pub(crate) fn reference_definition(\n #[cfg(test)]\n mod tests {\n     use ra_db::FileRange;\n-    use ra_syntax::{TextRange, TextSize};\n+    use syntax::{TextRange, TextSize};\n \n     use crate::mock_analysis::MockAnalysis;\n "}, {"sha": "91a8c1dd17a612c13f51590769ee5b7c7176d167", "filename": "crates/ra_ide/src/goto_implementation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fgoto_implementation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fgoto_implementation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_implementation.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,6 +1,6 @@\n use hir::{Crate, ImplDef, Semantics};\n use ra_ide_db::RootDatabase;\n-use ra_syntax::{algo::find_node_at_offset, ast, AstNode};\n+use syntax::{algo::find_node_at_offset, ast, AstNode};\n \n use crate::{display::ToNav, FilePosition, NavigationTarget, RangeInfo};\n "}, {"sha": "3ec2ee59ded064806eb2c6767567f7038e3c20c9", "filename": "crates/ra_ide/src/goto_type_definition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,5 +1,5 @@\n use ra_ide_db::RootDatabase;\n-use ra_syntax::{ast, match_ast, AstNode, SyntaxKind::*, SyntaxToken, TokenAtOffset, T};\n+use syntax::{ast, match_ast, AstNode, SyntaxKind::*, SyntaxToken, TokenAtOffset, T};\n \n use crate::{display::ToNav, FilePosition, NavigationTarget, RangeInfo};\n "}, {"sha": "37e68ff7a5dbc4f30f2c410f110adca7352eae09", "filename": "crates/ra_ide/src/hover.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fhover.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -8,8 +8,8 @@ use ra_ide_db::{\n     defs::{classify_name, classify_name_ref, Definition},\n     RootDatabase,\n };\n-use ra_syntax::{ast, match_ast, AstNode, SyntaxKind::*, SyntaxToken, TokenAtOffset, T};\n use stdx::format_to;\n+use syntax::{ast, match_ast, AstNode, SyntaxKind::*, SyntaxToken, TokenAtOffset, T};\n use test_utils::mark;\n \n use crate::{"}, {"sha": "46ddc528e52f8d259035a406486016385ed2e4a1", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,10 +1,10 @@\n use hir::{Adt, Callable, HirDisplay, Semantics, Type};\n use ra_ide_db::RootDatabase;\n-use ra_syntax::{\n+use stdx::to_lower_snake_case;\n+use syntax::{\n     ast::{self, ArgListOwner, AstNode},\n     match_ast, Direction, NodeOrToken, SmolStr, SyntaxKind, TextRange, T,\n };\n-use stdx::to_lower_snake_case;\n \n use crate::FileId;\n use ast::NameOwner;"}, {"sha": "35cec87f670ab63c01f5b768a61a7e54b76dc4b3", "filename": "crates/ra_ide/src/join_lines.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,6 +1,6 @@\n use itertools::Itertools;\n use ra_fmt::{compute_ws, extract_trivial_expression};\n-use ra_syntax::{\n+use syntax::{\n     algo::{find_covering_element, non_trivia_sibling},\n     ast::{self, AstNode, AstToken},\n     Direction, NodeOrToken, SourceFile,\n@@ -170,7 +170,7 @@ fn is_trailing_comma(left: SyntaxKind, right: SyntaxKind) -> bool {\n \n #[cfg(test)]\n mod tests {\n-    use ra_syntax::SourceFile;\n+    use syntax::SourceFile;\n     use test_utils::{add_cursor, assert_eq_text, extract_offset, extract_range};\n \n     use super::*;\n@@ -437,11 +437,11 @@ fn foo() {\n         // No space after the '{'\n         check_join_lines(\n             r\"\n-<|>use ra_syntax::{\n+<|>use syntax::{\n     TextSize, TextRange,\n };\",\n             r\"\n-<|>use ra_syntax::{TextSize, TextRange,\n+<|>use syntax::{TextSize, TextRange,\n };\",\n         );\n     }\n@@ -451,11 +451,11 @@ fn foo() {\n         // No space after the '}'\n         check_join_lines(\n             r\"\n-use ra_syntax::{\n+use syntax::{\n <|>    TextSize, TextRange\n };\",\n             r\"\n-use ra_syntax::{\n+use syntax::{\n <|>    TextSize, TextRange};\",\n         );\n     }\n@@ -465,11 +465,11 @@ use ra_syntax::{\n         // No space after the '}'\n         check_join_lines(\n             r\"\n-use ra_syntax::{\n+use syntax::{\n <|>    TextSize, TextRange,\n };\",\n             r\"\n-use ra_syntax::{\n+use syntax::{\n <|>    TextSize, TextRange};\",\n         );\n     }\n@@ -478,14 +478,14 @@ use ra_syntax::{\n     fn test_join_lines_use_tree() {\n         check_join_lines(\n             r\"\n-use ra_syntax::{\n+use syntax::{\n     algo::<|>{\n         find_token_at_offset,\n     },\n     ast,\n };\",\n             r\"\n-use ra_syntax::{\n+use syntax::{\n     algo::<|>find_token_at_offset,\n     ast,\n };\","}, {"sha": "20967ba9900ef9869c7b39a0c380dfc4d9750900", "filename": "crates/ra_ide/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Flib.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -56,7 +56,7 @@ use ra_ide_db::{\n     symbol_index::{self, FileSymbol},\n     LineIndexDatabase,\n };\n-use ra_syntax::{SourceFile, TextRange, TextSize};\n+use syntax::{SourceFile, TextRange, TextSize};\n \n use crate::display::ToNav;\n "}, {"sha": "cb6abb0db948c451c5c39b5389761e6d09dbae88", "filename": "crates/ra_ide/src/matching_brace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fmatching_brace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fmatching_brace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fmatching_brace.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,4 +1,4 @@\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, AstNode},\n     SourceFile, SyntaxKind, TextSize, T,\n };"}, {"sha": "69af0c86ad05582d2b4c257f3a2572a0fe23e07a", "filename": "crates/ra_ide/src/parent_module.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fparent_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fparent_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fparent_module.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,7 +1,7 @@\n use hir::Semantics;\n use ra_db::{CrateId, FileId, FilePosition};\n use ra_ide_db::RootDatabase;\n-use ra_syntax::{\n+use syntax::{\n     algo::find_node_at_offset,\n     ast::{self, AstNode},\n };"}, {"sha": "e89dca869ca7decd0fa1ba23e7394153066fdfb2", "filename": "crates/ra_ide/src/references.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -17,7 +17,7 @@ use ra_ide_db::{\n     search::SearchScope,\n     RootDatabase,\n };\n-use ra_syntax::{\n+use syntax::{\n     algo::find_node_at_offset,\n     ast::{self, NameOwner},\n     AstNode, SyntaxKind, SyntaxNode, TextRange, TokenAtOffset,"}, {"sha": "a075618e74ffad646ea830bd5064fa604faba326", "filename": "crates/ra_ide/src/references/rename.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -6,12 +6,12 @@ use ra_ide_db::{\n     defs::{classify_name, classify_name_ref, Definition, NameClass, NameRefClass},\n     RootDatabase,\n };\n-use ra_syntax::{\n+use std::convert::TryInto;\n+use syntax::{\n     algo::find_node_at_offset,\n     ast::{self, NameOwner},\n     lex_single_valid_syntax_kind, match_ast, AstNode, SyntaxKind, SyntaxNode, SyntaxToken,\n };\n-use std::convert::TryInto;\n use test_utils::mark;\n use text_edit::TextEdit;\n "}, {"sha": "54cb3b309443004e8f08658f8267ad4154c4cb8a", "filename": "crates/ra_ide/src/runnables.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Frunnables.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -4,7 +4,7 @@ use hir::{AsAssocItem, Attrs, HirFileId, InFile, Semantics};\n use itertools::Itertools;\n use ra_cfg::CfgExpr;\n use ra_ide_db::RootDatabase;\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, AstNode, AttrsOwner, DocCommentsOwner, ModuleItemOwner, NameOwner},\n     match_ast, SyntaxNode,\n };"}, {"sha": "797ead1adabf86c5b36fa6e30f94331c48d8e5b0", "filename": "crates/ra_ide/src/status.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fstatus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fstatus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fstatus.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -10,8 +10,8 @@ use ra_ide_db::{\n     symbol_index::{LibrarySymbolsQuery, SymbolIndex},\n     RootDatabase,\n };\n-use ra_syntax::{ast, Parse, SyntaxNode};\n use rustc_hash::FxHashMap;\n+use syntax::{ast, Parse, SyntaxNode};\n \n use crate::FileId;\n "}, {"sha": "4b41ceb1dc4d01696887b3082c4b22ea0cab3723", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -9,13 +9,13 @@ use ra_ide_db::{\n     defs::{classify_name, classify_name_ref, Definition, NameClass, NameRefClass},\n     RootDatabase,\n };\n-use ra_syntax::{\n+use rustc_hash::FxHashMap;\n+use syntax::{\n     ast::{self, HasFormatSpecifier},\n     AstNode, AstToken, Direction, NodeOrToken, SyntaxElement,\n     SyntaxKind::*,\n     TextRange, WalkEvent, T,\n };\n-use rustc_hash::FxHashMap;\n \n use crate::FileId;\n "}, {"sha": "418122648a60dc8a156598a1cf2ff704887c5173", "filename": "crates/ra_ide/src/syntax_highlighting/html.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -2,7 +2,7 @@\n \n use oorandom::Rand32;\n use ra_db::SourceDatabase;\n-use ra_syntax::{AstNode, TextRange, TextSize};\n+use syntax::{AstNode, TextRange, TextSize};\n \n use crate::{syntax_highlighting::highlight, FileId, RootDatabase};\n "}, {"sha": "43f4e6feab309290af0ff95039f250de81f3b9fb", "filename": "crates/ra_ide/src/syntax_highlighting/injection.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Finjection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Finjection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Finjection.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -5,7 +5,7 @@ use std::{collections::BTreeMap, convert::TryFrom};\n use ast::{HasQuotes, HasStringValue};\n use hir::Semantics;\n use itertools::Itertools;\n-use ra_syntax::{ast, AstToken, SyntaxNode, SyntaxToken, TextRange, TextSize};\n+use syntax::{ast, AstToken, SyntaxNode, SyntaxToken, TextRange, TextSize};\n \n use crate::{\n     call_info::ActiveParameter, Analysis, Highlight, HighlightModifier, HighlightTag,"}, {"sha": "594f61e85b7c82abf44fa5c2c97639b2840a6ca0", "filename": "crates/ra_ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -135,7 +135,7 @@ fn bar() {\n \n #[test]\n fn accidentally_quadratic() {\n-    let file = project_dir().join(\"crates/ra_syntax/test_data/accidentally_quadratic\");\n+    let file = project_dir().join(\"crates/syntax/test_data/accidentally_quadratic\");\n     let src = fs::read_to_string(file).unwrap();\n \n     let (analysis, file_id) = single_file(&src);"}, {"sha": "d05ff221497f17706a163c477c78848df2e7475e", "filename": "crates/ra_ide/src/syntax_tree.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,6 +1,6 @@\n use ra_db::{FileId, SourceDatabase};\n use ra_ide_db::RootDatabase;\n-use ra_syntax::{\n+use syntax::{\n     algo, AstNode, NodeOrToken, SourceFile,\n     SyntaxKind::{RAW_STRING, STRING},\n     SyntaxToken, TextRange, TextSize,"}, {"sha": "c408b1d52187d12f4526da1429d7e7be01f5389b", "filename": "crates/ra_ide/src/typing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftyping.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -18,7 +18,7 @@ mod on_enter;\n use ra_db::{FilePosition, SourceDatabase};\n use ra_fmt::leading_indent;\n use ra_ide_db::{source_change::SourceFileEdit, RootDatabase};\n-use ra_syntax::{\n+use syntax::{\n     algo::find_node_at_offset,\n     ast::{self, AstToken},\n     AstNode, SourceFile,"}, {"sha": "9cd153f94ab00ca32ab65d52194b5dddc25001da", "filename": "crates/ra_ide/src/typing/on_enter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -3,7 +3,7 @@\n \n use ra_db::{FilePosition, SourceDatabase};\n use ra_ide_db::RootDatabase;\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, AstToken},\n     AstNode, SmolStr, SourceFile,\n     SyntaxKind::*,"}, {"sha": "9ed13a13dbd9dcb6394f8054cbff4438e935eb1a", "filename": "crates/ra_ide_db/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide_db%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide_db%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2FCargo.toml?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -21,7 +21,7 @@ either = \"1.5.3\"\n \n stdx = { path = \"../stdx\" }\n \n-ra_syntax = { path = \"../ra_syntax\" }\n+syntax = { path = \"../syntax\" }\n text_edit = { path = \"../text_edit\" }\n ra_db = { path = \"../ra_db\" }\n profile = { path = \"../profile\" }"}, {"sha": "7b5d6ac491bbdfeebdae6e56c977098772bc8450", "filename": "crates/ra_ide_db/src/defs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -9,7 +9,7 @@ use hir::{\n     db::HirDatabase, Crate, Field, HasVisibility, ImplDef, Local, MacroDef, Module, ModuleDef,\n     Name, PathResolution, Semantics, TypeParam, Visibility,\n };\n-use ra_syntax::{\n+use syntax::{\n     ast::{self, AstNode},\n     match_ast, SyntaxNode,\n };"}, {"sha": "1d0c202915ec1d240f85ec8849ae738f11b4d6a0", "filename": "crates/ra_ide_db/src/imports_locator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide_db%2Fsrc%2Fimports_locator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide_db%2Fsrc%2Fimports_locator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fimports_locator.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -2,7 +2,7 @@\n //! Later, this should be moved away to a separate crate that is accessible from the ra_assists module.\n \n use hir::{Crate, MacroDef, ModuleDef, Semantics};\n-use ra_syntax::{ast, AstNode, SyntaxKind::NAME};\n+use syntax::{ast, AstNode, SyntaxKind::NAME};\n \n use crate::{\n     defs::{classify_name, Definition},"}, {"sha": "a381f7fb8d5e91277cdbe22cfdfdda43f6bf3ca8", "filename": "crates/ra_ide_db/src/line_index.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide_db%2Fsrc%2Fline_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide_db%2Fsrc%2Fline_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fline_index.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -2,9 +2,9 @@\n //! representation.\n use std::iter;\n \n-use ra_syntax::{TextRange, TextSize};\n use rustc_hash::FxHashMap;\n use stdx::partition_point;\n+use syntax::{TextRange, TextSize};\n \n #[derive(Clone, Debug, PartialEq, Eq)]\n pub struct LineIndex {"}, {"sha": "7827cc71cf9f4786ecbdc4710bea145a553433e7", "filename": "crates/ra_ide_db/src/search.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -9,8 +9,8 @@ use std::{convert::TryInto, mem};\n use hir::{DefWithBody, HasSource, Module, ModuleSource, Semantics, Visibility};\n use once_cell::unsync::Lazy;\n use ra_db::{FileId, FileRange, SourceDatabaseExt};\n-use ra_syntax::{ast, match_ast, AstNode, TextRange, TextSize};\n use rustc_hash::FxHashMap;\n+use syntax::{ast, match_ast, AstNode, TextRange, TextSize};\n \n use crate::{\n     defs::{classify_name_ref, Definition, NameRefClass},"}, {"sha": "896092b4675dd84269af5f36e70c7fe1161818d5", "filename": "crates/ra_ide_db/src/symbol_index.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -34,14 +34,14 @@ use ra_db::{\n     salsa::{self, ParallelDatabase},\n     CrateId, FileId, SourceDatabaseExt, SourceRootId,\n };\n-use ra_syntax::{\n+use rayon::prelude::*;\n+use rustc_hash::{FxHashMap, FxHashSet};\n+use syntax::{\n     ast::{self, NameOwner},\n     match_ast, AstNode, Parse, SmolStr, SourceFile,\n     SyntaxKind::{self, *},\n     SyntaxNode, SyntaxNodePtr, TextRange, WalkEvent,\n };\n-use rayon::prelude::*;\n-use rustc_hash::{FxHashMap, FxHashSet};\n \n use crate::RootDatabase;\n "}, {"sha": "4a4be65ebcc8912782f649b261259208f77b4d74", "filename": "crates/ra_mbe/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_mbe%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_mbe%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2FCargo.toml?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -9,7 +9,7 @@ license = \"MIT OR Apache-2.0\"\n doctest = false\n \n [dependencies]\n-ra_syntax = { path = \"../ra_syntax\" }\n+syntax = { path = \"../syntax\" }\n parser = { path = \"../parser\" }\n tt = { path = \"../tt\" }\n rustc-hash = \"1.1.0\""}, {"sha": "1ad8b9f8a580ad03012bf5c3840363cdaa11c951", "filename": "crates/ra_mbe/src/mbe_expander.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -5,8 +5,8 @@\n mod matcher;\n mod transcriber;\n \n-use ra_syntax::SmolStr;\n use rustc_hash::FxHashMap;\n+use syntax::SmolStr;\n \n use crate::{ExpandError, ExpandResult};\n \n@@ -123,7 +123,7 @@ enum Fragment {\n \n #[cfg(test)]\n mod tests {\n-    use ra_syntax::{ast, AstNode};\n+    use syntax::{ast, AstNode};\n \n     use super::*;\n     use crate::ast_to_token_tree;"}, {"sha": "b698b98326d0f6e57fac0ae7b34ff77d37b5842c", "filename": "crates/ra_mbe/src/mbe_expander/matcher.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_mbe%2Fsrc%2Fmbe_expander%2Fmatcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_mbe%2Fsrc%2Fmbe_expander%2Fmatcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fmbe_expander%2Fmatcher.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -10,7 +10,7 @@ use crate::{\n \n use super::ExpandResult;\n use parser::{FragmentKind::*, TreeSink};\n-use ra_syntax::{SmolStr, SyntaxKind};\n+use syntax::{SmolStr, SyntaxKind};\n use tt::buffer::{Cursor, TokenBuffer};\n \n impl Bindings {"}, {"sha": "c9525c5bf204cfb9dc96cf1f9de8488f32da9f19", "filename": "crates/ra_mbe/src/mbe_expander/transcriber.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_mbe%2Fsrc%2Fmbe_expander%2Ftranscriber.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_mbe%2Fsrc%2Fmbe_expander%2Ftranscriber.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fmbe_expander%2Ftranscriber.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,7 +1,7 @@\n //! Transcriber takes a template, like `fn $ident() {}`, a set of bindings like\n //! `$ident => foo`, interpolates variables in the template, to get `fn foo() {}`\n \n-use ra_syntax::SmolStr;\n+use syntax::SmolStr;\n \n use super::ExpandResult;\n use crate::{"}, {"sha": "6b46a1673c38e17e012f26478e42143c4f37483d", "filename": "crates/ra_mbe/src/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_mbe%2Fsrc%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_mbe%2Fsrc%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fparser.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,8 +1,8 @@\n //! Parser recognizes special macro syntax, `$var` and `$(repeat)*`, in token\n //! trees.\n \n-use ra_syntax::SmolStr;\n use smallvec::SmallVec;\n+use syntax::SmolStr;\n \n use crate::{tt_iter::TtIter, ExpandError};\n "}, {"sha": "41461b3150ae17c9d91b7cc161cb29202ae05e94", "filename": "crates/ra_mbe/src/subtree_source.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_mbe%2Fsrc%2Fsubtree_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_mbe%2Fsrc%2Fsubtree_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fsubtree_source.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,8 +1,8 @@\n //! FIXME: write short doc here\n \n use parser::{Token, TokenSource};\n-use ra_syntax::{lex_single_syntax_kind, SmolStr, SyntaxKind, SyntaxKind::*, T};\n use std::cell::{Cell, Ref, RefCell};\n+use syntax::{lex_single_syntax_kind, SmolStr, SyntaxKind, SyntaxKind::*, T};\n use tt::buffer::{Cursor, TokenBuffer};\n \n #[derive(Debug, Clone, Eq, PartialEq)]"}, {"sha": "a8ad917fb880c534faffe1df3baca75febd8122d", "filename": "crates/ra_mbe/src/syntax_bridge.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,13 +1,13 @@\n //! FIXME: write short doc here\n \n use parser::{FragmentKind, ParseError, TreeSink};\n-use ra_syntax::{\n+use rustc_hash::FxHashMap;\n+use syntax::{\n     ast::{self, make::tokens::doc_comment},\n     tokenize, AstToken, Parse, SmolStr, SyntaxKind,\n     SyntaxKind::*,\n     SyntaxNode, SyntaxToken, SyntaxTreeBuilder, TextRange, TextSize, Token as RawToken, T,\n };\n-use rustc_hash::FxHashMap;\n use tt::buffer::{Cursor, TokenBuffer};\n \n use crate::subtree_source::SubtreeTokenSource;\n@@ -176,7 +176,7 @@ fn doc_comment_text(comment: &ast::Comment) -> SmolStr {\n     text.into()\n }\n \n-fn convert_doc_comment(token: &ra_syntax::SyntaxToken) -> Option<Vec<tt::TokenTree>> {\n+fn convert_doc_comment(token: &syntax::SyntaxToken) -> Option<Vec<tt::TokenTree>> {\n     let comment = ast::Comment::cast(token.clone())?;\n     let doc = comment.kind().doc?;\n \n@@ -716,7 +716,7 @@ mod tests {\n     use super::*;\n     use crate::tests::parse_macro;\n     use parser::TokenSource;\n-    use ra_syntax::{\n+    use syntax::{\n         algo::{insert_children, InsertPosition},\n         ast::AstNode,\n     };"}, {"sha": "0796ceee1a7a7306c2004ceea592fa28ee5a22f4", "filename": "crates/ra_mbe/src/tests.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_mbe%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_mbe%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Ftests.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,13 +1,13 @@\n use std::fmt::Write;\n \n use ::parser::FragmentKind;\n-use ra_syntax::{ast, AstNode, NodeOrToken, SyntaxKind::IDENT, SyntaxNode, WalkEvent, T};\n+use syntax::{ast, AstNode, NodeOrToken, SyntaxKind::IDENT, SyntaxNode, WalkEvent, T};\n use test_utils::assert_eq_text;\n \n use super::*;\n \n mod rule_parsing {\n-    use ra_syntax::{ast, AstNode};\n+    use syntax::{ast, AstNode};\n \n     use crate::ast_to_token_tree;\n \n@@ -1698,7 +1698,7 @@ pub(crate) fn parse_to_token_tree_by_syntax(ra_fixture: &str) -> tt::Subtree {\n     parsed\n }\n \n-fn debug_dump_ignore_spaces(node: &ra_syntax::SyntaxNode) -> String {\n+fn debug_dump_ignore_spaces(node: &syntax::SyntaxNode) -> String {\n     let mut level = 0;\n     let mut buf = String::new();\n     macro_rules! indent {\n@@ -1718,7 +1718,7 @@ fn debug_dump_ignore_spaces(node: &ra_syntax::SyntaxNode) -> String {\n                         writeln!(buf, \"{:?}\", node.kind()).unwrap();\n                     }\n                     NodeOrToken::Token(token) => match token.kind() {\n-                        ra_syntax::SyntaxKind::WHITESPACE => {}\n+                        syntax::SyntaxKind::WHITESPACE => {}\n                         _ => {\n                             indent!();\n                             writeln!(buf, \"{:?}\", token.kind()).unwrap();"}, {"sha": "958baa2df733626f1fae6be5eefd7457f29c426e", "filename": "crates/ra_ssr/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ssr%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ssr%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2FCargo.toml?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -12,7 +12,7 @@ doctest = false\n \n [dependencies]\n text_edit = { path = \"../text_edit\" }\n-ra_syntax = { path = \"../ra_syntax\" }\n+syntax = { path = \"../syntax\" }\n ra_db = { path = \"../ra_db\" }\n ra_ide_db = { path = \"../ra_ide_db\" }\n hir = { path = \"../ra_hir\", package = \"ra_hir\" }"}, {"sha": "fb53212a3a5e645e3a46d5a08ce5e0f194538da5", "filename": "crates/ra_ssr/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ssr%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ssr%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Flib.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -21,9 +21,9 @@ use crate::matching::MatchFailureReason;\n use hir::Semantics;\n use ra_db::{FileId, FilePosition, FileRange};\n use ra_ide_db::source_change::SourceFileEdit;\n-use ra_syntax::{ast, AstNode, SyntaxNode, TextRange};\n use resolving::ResolvedRule;\n use rustc_hash::FxHashMap;\n+use syntax::{ast, AstNode, SyntaxNode, TextRange};\n \n // A structured search replace rule. Create by calling `parse` on a str.\n #[derive(Debug)]"}, {"sha": "125bf38951a38f8af12e6866f0ab3e5a95bc24b1", "filename": "crates/ra_ssr/src/matching.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ssr%2Fsrc%2Fmatching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ssr%2Fsrc%2Fmatching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Fmatching.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -8,10 +8,10 @@ use crate::{\n };\n use hir::Semantics;\n use ra_db::FileRange;\n-use ra_syntax::ast::{AstNode, AstToken};\n-use ra_syntax::{ast, SyntaxElement, SyntaxElementChildren, SyntaxKind, SyntaxNode, SyntaxToken};\n use rustc_hash::FxHashMap;\n use std::{cell::Cell, iter::Peekable};\n+use syntax::ast::{AstNode, AstToken};\n+use syntax::{ast, SyntaxElement, SyntaxElementChildren, SyntaxKind, SyntaxNode, SyntaxToken};\n use test_utils::mark;\n \n // Creates a match error. If we're currently attempting to match some code that we thought we were\n@@ -264,7 +264,7 @@ impl<'db, 'sema> Matcher<'db, 'sema> {\n         &self,\n         phase: &mut Phase,\n         pattern: &mut Peekable<PatternIterator>,\n-        code: &ra_syntax::SyntaxToken,\n+        code: &syntax::SyntaxToken,\n     ) -> Result<(), MatchFailed> {\n         phase.record_ignored_comments(code);\n         // Ignore whitespace and comments.\n@@ -444,7 +444,7 @@ impl<'db, 'sema> Matcher<'db, 'sema> {\n         &self,\n         phase: &mut Phase,\n         pattern: &SyntaxNode,\n-        code: &ra_syntax::SyntaxNode,\n+        code: &syntax::SyntaxNode,\n     ) -> Result<(), MatchFailed> {\n         let mut pattern = PatternIterator::new(pattern).peekable();\n         let mut children = code.children_with_tokens();"}, {"sha": "8be570d3cf9a75c8efe5e4b6f52f34bcc33edeaa", "filename": "crates/ra_ssr/src/nester.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ssr%2Fsrc%2Fnester.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ssr%2Fsrc%2Fnester.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Fnester.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -8,8 +8,8 @@\n //! middle match would take the second `foo` from the outer match.\n \n use crate::{Match, SsrMatches};\n-use ra_syntax::SyntaxNode;\n use rustc_hash::FxHashMap;\n+use syntax::SyntaxNode;\n \n pub(crate) fn nest_and_remove_collisions(\n     mut matches: Vec<Match>,"}, {"sha": "9570e96e36eee441bb29da6930e66a1d2cb0f7fc", "filename": "crates/ra_ssr/src/parsing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ssr%2Fsrc%2Fparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ssr%2Fsrc%2Fparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Fparsing.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -7,9 +7,9 @@\n \n use crate::errors::bail;\n use crate::{SsrError, SsrPattern, SsrRule};\n-use ra_syntax::{ast, AstNode, SmolStr, SyntaxKind, SyntaxNode, T};\n use rustc_hash::{FxHashMap, FxHashSet};\n use std::str::FromStr;\n+use syntax::{ast, AstNode, SmolStr, SyntaxKind, SyntaxNode, T};\n use test_utils::mark;\n \n #[derive(Debug)]\n@@ -243,7 +243,7 @@ fn validate_rule(rule: &SsrRule) -> Result<(), SsrError> {\n \n fn tokenize(source: &str) -> Result<Vec<Token>, SsrError> {\n     let mut start = 0;\n-    let (raw_tokens, errors) = ra_syntax::tokenize(source);\n+    let (raw_tokens, errors) = syntax::tokenize(source);\n     if let Some(first_error) = errors.first() {\n         bail!(\"Failed to parse pattern: {}\", first_error);\n     }"}, {"sha": "8f8fe6149a57d45dfe8e57c28f1041721d52be8e", "filename": "crates/ra_ssr/src/replacing.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ssr%2Fsrc%2Freplacing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ssr%2Fsrc%2Freplacing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Freplacing.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -2,9 +2,9 @@\n \n use crate::matching::Var;\n use crate::{resolving::ResolvedRule, Match, SsrMatches};\n-use ra_syntax::ast::{self, AstToken};\n-use ra_syntax::{SyntaxElement, SyntaxKind, SyntaxNode, SyntaxToken, TextRange, TextSize};\n use rustc_hash::{FxHashMap, FxHashSet};\n+use syntax::ast::{self, AstToken};\n+use syntax::{SyntaxElement, SyntaxKind, SyntaxNode, SyntaxToken, TextRange, TextSize};\n use text_edit::TextEdit;\n \n /// Returns a text edit that will replace each match in `matches` with its corresponding replacement\n@@ -92,7 +92,7 @@ impl ReplacementRenderer<'_> {\n     }\n \n     fn render_node(&mut self, node: &SyntaxNode) {\n-        use ra_syntax::ast::AstNode;\n+        use syntax::ast::AstNode;\n         if let Some(mod_path) = self.match_info.rendered_template_paths.get(&node) {\n             self.out.push_str(&mod_path.to_string());\n             // Emit everything except for the segment's name-ref, since we already effectively\n@@ -180,7 +180,7 @@ impl ReplacementRenderer<'_> {\n }\n \n fn parse_as_kind(code: &str, kind: SyntaxKind) -> Option<SyntaxNode> {\n-    use ra_syntax::ast::AstNode;\n+    use syntax::ast::AstNode;\n     if ast::Expr::can_cast(kind) {\n         if let Ok(expr) = ast::Expr::parse(code) {\n             return Some(expr.syntax().clone());"}, {"sha": "7e7585c8bbed3ef55bef3a58ceab4e764f8236bf", "filename": "crates/ra_ssr/src/resolving.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ssr%2Fsrc%2Fresolving.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ssr%2Fsrc%2Fresolving.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Fresolving.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -4,8 +4,8 @@ use crate::errors::error;\n use crate::{parsing, SsrError};\n use parsing::Placeholder;\n use ra_db::FilePosition;\n-use ra_syntax::{ast, SmolStr, SyntaxKind, SyntaxNode, SyntaxToken};\n use rustc_hash::FxHashMap;\n+use syntax::{ast, SmolStr, SyntaxKind, SyntaxNode, SyntaxToken};\n use test_utils::mark;\n \n pub(crate) struct ResolutionScope<'db> {\n@@ -70,7 +70,7 @@ struct Resolver<'a, 'db> {\n \n impl Resolver<'_, '_> {\n     fn resolve_pattern_tree(&self, pattern: SyntaxNode) -> Result<ResolvedPattern, SsrError> {\n-        use ra_syntax::{SyntaxElement, T};\n+        use syntax::{SyntaxElement, T};\n         let mut resolved_paths = FxHashMap::default();\n         self.resolve(pattern.clone(), 0, &mut resolved_paths)?;\n         let ufcs_function_calls = resolved_paths\n@@ -108,7 +108,7 @@ impl Resolver<'_, '_> {\n         depth: u32,\n         resolved_paths: &mut FxHashMap<SyntaxNode, ResolvedPath>,\n     ) -> Result<(), SsrError> {\n-        use ra_syntax::ast::AstNode;\n+        use syntax::ast::AstNode;\n         if let Some(path) = ast::Path::cast(node.clone()) {\n             if is_self(&path) {\n                 // Self cannot be resolved like other paths.\n@@ -179,7 +179,7 @@ impl<'db> ResolutionScope<'db> {\n         sema: &hir::Semantics<'db, ra_ide_db::RootDatabase>,\n         resolve_context: FilePosition,\n     ) -> ResolutionScope<'db> {\n-        use ra_syntax::ast::AstNode;\n+        use syntax::ast::AstNode;\n         let file = sema.parse(resolve_context.file_id);\n         // Find a node at the requested position, falling back to the whole file.\n         let node = file"}, {"sha": "e44e14959925cab6513fa80348d12dcaa7606843", "filename": "crates/ra_ssr/src/search.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ssr%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fra_ssr%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Fsearch.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -10,8 +10,8 @@ use ra_ide_db::{\n     defs::Definition,\n     search::{Reference, SearchScope},\n };\n-use ra_syntax::{ast, AstNode, SyntaxKind, SyntaxNode};\n use rustc_hash::FxHashSet;\n+use syntax::{ast, AstNode, SyntaxKind, SyntaxNode};\n use test_utils::mark;\n \n /// A cache for the results of find_usages. This is for when we have multiple patterns that have the"}, {"sha": "86c786e25c46089e7643eebdfebc44d0b88fba4c", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -38,7 +38,7 @@ flycheck = { path = \"../flycheck\" }\n ra_ide = { path = \"../ra_ide\" }\n profile = { path = \"../profile\" }\n ra_project_model = { path = \"../ra_project_model\" }\n-ra_syntax = { path = \"../ra_syntax\" }\n+syntax = { path = \"../syntax\" }\n text_edit = { path = \"../text_edit\" }\n vfs = { path = \"../vfs\" }\n vfs-notify = { path = \"../vfs-notify\" }"}, {"sha": "7929368c0cdb8ead34b8887d9a0a39d52d617e94", "filename": "crates/rust-analyzer/src/cargo_target_spec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Frust-analyzer%2Fsrc%2Fcargo_target_spec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Frust-analyzer%2Fsrc%2Fcargo_target_spec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcargo_target_spec.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -179,7 +179,7 @@ mod tests {\n \n     use mbe::ast_to_token_tree;\n     use ra_cfg::CfgExpr;\n-    use ra_syntax::{\n+    use syntax::{\n         ast::{self, AstNode},\n         SmolStr,\n     };"}, {"sha": "420abaccb93c609b55048269539a7e6013616bd8", "filename": "crates/rust-analyzer/src/cli.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Frust-analyzer%2Fsrc%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Frust-analyzer%2Fsrc%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -11,7 +11,7 @@ use std::io::Read;\n \n use anyhow::Result;\n use ra_ide::Analysis;\n-use ra_syntax::{AstNode, SourceFile};\n+use syntax::{AstNode, SourceFile};\n \n pub use analysis_bench::{BenchCmd, BenchWhat, Position};\n pub use analysis_stats::AnalysisStatsCmd;"}, {"sha": "cfc1b2244030225c311a496f8223ca81f62d0e26", "filename": "crates/rust-analyzer/src/cli/analysis_stats.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -18,10 +18,10 @@ use ra_db::{\n     salsa::{self, ParallelDatabase},\n     SourceDatabaseExt,\n };\n-use ra_syntax::AstNode;\n use rayon::prelude::*;\n use rustc_hash::FxHashSet;\n use stdx::format_to;\n+use syntax::AstNode;\n \n use crate::{\n     cli::{"}, {"sha": "ad88ffdd729f59d6cdee2ddca5518b793636b1b1", "filename": "crates/rust-analyzer/src/from_proto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -3,7 +3,7 @@ use std::convert::TryFrom;\n \n use ra_db::{FileId, FilePosition, FileRange};\n use ra_ide::{AssistKind, LineCol, LineIndex};\n-use ra_syntax::{TextRange, TextSize};\n+use syntax::{TextRange, TextSize};\n use vfs::AbsPathBuf;\n \n use crate::{global_state::GlobalStateSnapshot, Result};"}, {"sha": "86e7833f2f981369c061f063d7d8ec7354efef6a", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -23,10 +23,10 @@ use ra_ide::{\n     RangeInfo, Runnable, RunnableKind, SearchScope, TextEdit,\n };\n use ra_project_model::TargetKind;\n-use ra_syntax::{algo, ast, AstNode, SyntaxKind, TextRange, TextSize};\n use serde::{Deserialize, Serialize};\n use serde_json::to_value;\n use stdx::{format_to, split_once};\n+use syntax::{algo, ast, AstNode, SyntaxKind, TextRange, TextSize};\n \n use crate::{\n     cargo_target_spec::CargoTargetSpec,"}, {"sha": "278819a5c3ffe997738db215ef40949f43dfb637", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -12,7 +12,7 @@ use ra_ide::{\n     Indel, InlayHint, InlayKind, InsertTextFormat, LineIndex, Markup, NavigationTarget,\n     ReferenceAccess, ResolvedAssist, Runnable, Severity, SourceChange, SourceFileEdit, TextEdit,\n };\n-use ra_syntax::{SyntaxKind, TextRange, TextSize};\n+use syntax::{SyntaxKind, TextRange, TextSize};\n \n use crate::{\n     cargo_target_spec::CargoTargetSpec, global_state::GlobalStateSnapshot,"}, {"sha": "47e351f9d1a856778997e236ec439d1c62b3581a", "filename": "crates/syntax/Cargo.toml", "status": "renamed", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2FCargo.toml?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,11 +1,11 @@\n [package]\n-edition = \"2018\"\n-name = \"ra_syntax\"\n-version = \"0.1.0\"\n-authors = [\"rust-analyzer developers\"]\n-license = \"MIT OR Apache-2.0\"\n+name = \"syntax\"\n+version = \"0.0.0\"\n description = \"Comment and whitespace preserving parser for the Rust language\"\n+license = \"MIT OR Apache-2.0\"\n repository = \"https://github.com/rust-analyzer/rust-analyzer\"\n+authors = [\"rust-analyzer developers\"]\n+edition = \"2018\"\n \n [lib]\n doctest = false\n@@ -17,20 +17,19 @@ rustc_lexer = { version = \"671.0.0\", package = \"rustc-ap-rustc_lexer\" }\n rustc-hash = \"1.1.0\"\n arrayvec = \"0.5.1\"\n once_cell = \"1.3.1\"\n-\n-stdx = { path = \"../stdx\" }\n-\n-text_edit = { path = \"../text_edit\" }\n-parser = { path = \"../parser\" }\n-\n # This crate transitively depends on `smol_str` via `rowan`.\n # ideally, `serde` should be enabled by `rust-analyzer`, but we enable it here\n # to reduce number of compilations\n smol_str = { version = \"0.1.15\", features = [\"serde\"] }\n serde = { version = \"1.0.106\", features = [\"derive\"] }\n \n+stdx = { path = \"../stdx\" }\n+text_edit = { path = \"../text_edit\" }\n+parser = { path = \"../parser\" }\n+\n [dev-dependencies]\n-test_utils = { path = \"../test_utils\" }\n-expect = { path = \"../expect\" }\n walkdir = \"2.3.1\"\n rayon = \"1\"\n+\n+test_utils = { path = \"../test_utils\" }\n+expect = { path = \"../expect\" }", "previous_filename": "crates/ra_syntax/Cargo.toml"}, {"sha": "f734abd499ca9cd46fd0659ae4a7eac90c326c85", "filename": "crates/syntax/fuzz/.gitignore", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ffuzz%2F.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ffuzz%2F.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ffuzz%2F.gitignore?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/fuzz/.gitignore"}, {"sha": "32c40d1b95c86955bcb6aada105d76c3f421ea2c", "filename": "crates/syntax/fuzz/Cargo.toml", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ffuzz%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ffuzz%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ffuzz%2FCargo.toml?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -1,6 +1,6 @@\n \n [package]\n-name = \"ra_syntax-fuzz\"\n+name = \"syntax-fuzz\"\n version = \"0.0.1\"\n authors = [\"rust-analyzer developers\"]\n publish = false\n@@ -10,7 +10,7 @@ edition = \"2018\"\n cargo-fuzz = true\n \n [dependencies]\n-ra_syntax = { path = \"..\" }\n+syntax = { path = \"..\" }\n text_edit = { path = \"../../text_edit\" }\n libfuzzer-sys = { git = \"https://github.com/rust-fuzz/libfuzzer-sys.git\" }\n ", "previous_filename": "crates/ra_syntax/fuzz/Cargo.toml"}, {"sha": "386768343bdd2e228bd0756de5f720319d7eecfc", "filename": "crates/syntax/fuzz/fuzz_targets/parser.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ffuzz%2Ffuzz_targets%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ffuzz%2Ffuzz_targets%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ffuzz%2Ffuzz_targets%2Fparser.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -2,7 +2,7 @@\n \n #![no_main]\n use libfuzzer_sys::fuzz_target;\n-use ra_syntax::fuzz::check_parser;\n+use syntax::fuzz::check_parser;\n \n fuzz_target!(|data: &[u8]| {\n     if let Ok(text) = std::str::from_utf8(data) {", "previous_filename": "crates/ra_syntax/fuzz/fuzz_targets/parser.rs"}, {"sha": "5ac99fdafdfe1300f449a70422820e2b22adc2cb", "filename": "crates/syntax/fuzz/fuzz_targets/reparse.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ffuzz%2Ffuzz_targets%2Freparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ffuzz%2Ffuzz_targets%2Freparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ffuzz%2Ffuzz_targets%2Freparse.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -2,7 +2,7 @@\n \n #![no_main]\n use libfuzzer_sys::fuzz_target;\n-use ra_syntax::fuzz::CheckReparse;\n+use syntax::fuzz::CheckReparse;\n \n fuzz_target!(|data: &[u8]| {\n     if let Some(check) = CheckReparse::from_data(data) {", "previous_filename": "crates/ra_syntax/fuzz/fuzz_targets/reparse.rs"}, {"sha": "6254b38ba1c6eb243ad6e2a7f4adf03007437132", "filename": "crates/syntax/src/algo.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Falgo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Falgo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Falgo.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/algo.rs"}, {"sha": "d536bb1e7d63492418248b07e3c3f5db548fd4d5", "filename": "crates/syntax/src/ast.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/ast.rs"}, {"sha": "5ed123f91fe048983811ac0b991723b727c1f99a", "filename": "crates/syntax/src/ast/edit.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast%2Fedit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast%2Fedit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fedit.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/ast/edit.rs"}, {"sha": "f5ba872233f9e7f6fbf60e1b22258d4e9e3546a5", "filename": "crates/syntax/src/ast/expr_ext.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast%2Fexpr_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast%2Fexpr_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fexpr_ext.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/ast/expr_ext.rs"}, {"sha": "4a6f41ee71fa1b43ee61df97e1aedd8120711371", "filename": "crates/syntax/src/ast/generated.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fgenerated.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/ast/generated.rs"}, {"sha": "3d49309d1488eb7b66398e6b83f379b6294a1154", "filename": "crates/syntax/src/ast/generated/nodes.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/ast/generated/nodes.rs"}, {"sha": "abadd0b61c6f3dd7f3c8d0a1004e4a5d878c10f0", "filename": "crates/syntax/src/ast/generated/tokens.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast%2Fgenerated%2Ftokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast%2Fgenerated%2Ftokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fgenerated%2Ftokens.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/ast/generated/tokens.rs"}, {"sha": "254a37fe3e4709d4f343612d82c94b023f55a6cb", "filename": "crates/syntax/src/ast/make.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/ast/make.rs"}, {"sha": "50c1c157d8722131cf3a137f3ceb4ef2edda58ee", "filename": "crates/syntax/src/ast/node_ext.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast%2Fnode_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast%2Fnode_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fnode_ext.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/ast/node_ext.rs"}, {"sha": "c5ef92733d8462e03458b7c36cef1feaffafaf11", "filename": "crates/syntax/src/ast/token_ext.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast%2Ftoken_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast%2Ftoken_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Ftoken_ext.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/ast/token_ext.rs"}, {"sha": "0bdc22d953fcabd696949cdd42d392eef493d554", "filename": "crates/syntax/src/ast/traits.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fast%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Ftraits.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/ast/traits.rs"}, {"sha": "fbb97aa27369e840b0d4fa2ce719e24bc0a47017", "filename": "crates/syntax/src/fuzz.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Ffuzz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Ffuzz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Ffuzz.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/fuzz.rs"}, {"sha": "7f8da66af072dc98dc8f73c2b1f2d54efa336fcb", "filename": "crates/syntax/src/lib.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Flib.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/lib.rs"}, {"sha": "68a39eb2103d0a8679c3f19c9bf9444cf9fd6b51", "filename": "crates/syntax/src/parsing.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fparsing.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/parsing.rs"}, {"sha": "fa3be101622d8a5afb4f5abce01f125c9ce42616", "filename": "crates/syntax/src/parsing/lexer.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fparsing%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fparsing%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fparsing%2Flexer.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/parsing/lexer.rs"}, {"sha": "4149f856a83d30afa145eeece1dd1b3622f65daf", "filename": "crates/syntax/src/parsing/reparsing.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fparsing%2Freparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fparsing%2Freparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fparsing%2Freparsing.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/parsing/reparsing.rs"}, {"sha": "df866dc2b75fbaef22a61e57b53b1434d475b28b", "filename": "crates/syntax/src/parsing/text_token_source.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fparsing%2Ftext_token_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fparsing%2Ftext_token_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fparsing%2Ftext_token_source.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/parsing/text_token_source.rs"}, {"sha": "c1b5f246d11a05c0215c4e1930e4309a08478de3", "filename": "crates/syntax/src/parsing/text_tree_sink.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/parsing/text_tree_sink.rs"}, {"sha": "ca79577471321414ba7da95bfdde01e8f0cb7177", "filename": "crates/syntax/src/ptr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fptr.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/ptr.rs"}, {"sha": "7c4511fece06091ddc60ba427a7c6c52ece63fb8", "filename": "crates/syntax/src/syntax_error.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fsyntax_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fsyntax_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fsyntax_error.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/syntax_error.rs"}, {"sha": "b2abcbfbb361958db65df4f4464619412685ec83", "filename": "crates/syntax/src/syntax_node.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fsyntax_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fsyntax_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fsyntax_node.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/syntax_node.rs"}, {"sha": "ddc71836940c253772d9e98bb6a30b6621b29250", "filename": "crates/syntax/src/tests.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Ftests.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "patch": "@@ -126,7 +126,7 @@ fn self_hosting_parsing() {\n     let files = walkdir::WalkDir::new(dir)\n         .into_iter()\n         .filter_entry(|entry| {\n-            // Get all files which are not in the crates/ra_syntax/test_data folder\n+            // Get all files which are not in the crates/syntax/test_data folder\n             !entry.path().components().any(|component| component.as_os_str() == \"test_data\")\n         })\n         .map(|e| e.unwrap())\n@@ -162,7 +162,7 @@ fn self_hosting_parsing() {\n }\n \n fn test_data_dir() -> PathBuf {\n-    project_dir().join(\"crates/ra_syntax/test_data\")\n+    project_dir().join(\"crates/syntax/test_data\")\n }\n \n fn assert_errors_are_present(errors: &[SyntaxError], path: &Path) {", "previous_filename": "crates/ra_syntax/src/tests.rs"}, {"sha": "2dddaf09a405fab03a475ab3f9fc9b156d90f03b", "filename": "crates/syntax/src/validation.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fvalidation.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/validation.rs"}, {"sha": "ad99014688586d447f12154a5c4730bb21d3b47c", "filename": "crates/syntax/src/validation/block.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fvalidation%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Fsrc%2Fvalidation%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fvalidation%2Fblock.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/src/validation/block.rs"}, {"sha": "428f83a627b2e597ffefe9f77e02abbe675f847b", "filename": "crates/syntax/test_data/accidentally_quadratic", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Faccidentally_quadratic", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Faccidentally_quadratic", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Faccidentally_quadratic?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/accidentally_quadratic"}, {"sha": "ad2823b48f78a0667817300ddcac54c2f6c385e9", "filename": "crates/syntax/test_data/lexer/err/0001_unclosed_char_at_eof.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0001_unclosed_char_at_eof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0001_unclosed_char_at_eof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0001_unclosed_char_at_eof.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0001_unclosed_char_at_eof.rs"}, {"sha": "4d5ad74df571e42ec90ec855e3d8f72bd35a0c4f", "filename": "crates/syntax/test_data/lexer/err/0001_unclosed_char_at_eof.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0001_unclosed_char_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0001_unclosed_char_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0001_unclosed_char_at_eof.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0001_unclosed_char_at_eof.txt"}, {"sha": "e264a4152801b9c0475cc725983039da19f15b2a", "filename": "crates/syntax/test_data/lexer/err/0002_unclosed_char_with_ferris.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0002_unclosed_char_with_ferris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0002_unclosed_char_with_ferris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0002_unclosed_char_with_ferris.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0002_unclosed_char_with_ferris.rs"}, {"sha": "eafdb3c7c912030214a873fff32aaccb3de7d30b", "filename": "crates/syntax/test_data/lexer/err/0002_unclosed_char_with_ferris.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0002_unclosed_char_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0002_unclosed_char_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0002_unclosed_char_with_ferris.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0002_unclosed_char_with_ferris.txt"}, {"sha": "cf74b4dad3b89ec75d72ff183be8e1ed7bc2bee6", "filename": "crates/syntax/test_data/lexer/err/0003_unclosed_char_with_ascii_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0003_unclosed_char_with_ascii_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0003_unclosed_char_with_ascii_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0003_unclosed_char_with_ascii_escape.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0003_unclosed_char_with_ascii_escape.rs"}, {"sha": "cc2b4866a17aabbab14e1c1e9d41b9cc464a3fad", "filename": "crates/syntax/test_data/lexer/err/0003_unclosed_char_with_ascii_escape.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0003_unclosed_char_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0003_unclosed_char_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0003_unclosed_char_with_ascii_escape.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0003_unclosed_char_with_ascii_escape.txt"}, {"sha": "50be91f68524873a1aafa2cdf67cbc7a62cc31a6", "filename": "crates/syntax/test_data/lexer/err/0004_unclosed_char_with_unicode_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0004_unclosed_char_with_unicode_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0004_unclosed_char_with_unicode_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0004_unclosed_char_with_unicode_escape.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0004_unclosed_char_with_unicode_escape.rs"}, {"sha": "a6d422cb3d493ca4b9515460c29f156cfab4fba2", "filename": "crates/syntax/test_data/lexer/err/0004_unclosed_char_with_unicode_escape.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0004_unclosed_char_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0004_unclosed_char_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0004_unclosed_char_with_unicode_escape.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0004_unclosed_char_with_unicode_escape.txt"}, {"sha": "309ecfe4786464210a9aaaf78df6d9d10ae72537", "filename": "crates/syntax/test_data/lexer/err/0005_unclosed_char_with_space.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0005_unclosed_char_with_space.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0005_unclosed_char_with_space.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0005_unclosed_char_with_space.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0005_unclosed_char_with_space.rs"}, {"sha": "47e7baa708a0fb5b9ef5b06f85971e1e19b013a7", "filename": "crates/syntax/test_data/lexer/err/0005_unclosed_char_with_space.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0005_unclosed_char_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0005_unclosed_char_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0005_unclosed_char_with_space.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0005_unclosed_char_with_space.txt"}, {"sha": "6ba258b10932b6a2147c88b623cffa331623b96b", "filename": "crates/syntax/test_data/lexer/err/0006_unclosed_char_with_slash.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0006_unclosed_char_with_slash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0006_unclosed_char_with_slash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0006_unclosed_char_with_slash.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0006_unclosed_char_with_slash.rs"}, {"sha": "511029d80789aa5c8db340c0b405c3f47881fbf4", "filename": "crates/syntax/test_data/lexer/err/0006_unclosed_char_with_slash.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0006_unclosed_char_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0006_unclosed_char_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0006_unclosed_char_with_slash.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0006_unclosed_char_with_slash.txt"}, {"sha": "78bef7e3eb291e0f0826ee0455cbce8dada6990c", "filename": "crates/syntax/test_data/lexer/err/0007_unclosed_char_with_slash_n.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0007_unclosed_char_with_slash_n.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0007_unclosed_char_with_slash_n.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0007_unclosed_char_with_slash_n.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0007_unclosed_char_with_slash_n.rs"}, {"sha": "d2ba5742c67368b475e43a24e76bb7bcfef80a35", "filename": "crates/syntax/test_data/lexer/err/0007_unclosed_char_with_slash_n.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0007_unclosed_char_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0007_unclosed_char_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0007_unclosed_char_with_slash_n.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0007_unclosed_char_with_slash_n.txt"}, {"sha": "a0e722065bd7004922c59f030e495dbd27baafd4", "filename": "crates/syntax/test_data/lexer/err/0008_unclosed_char_with_slash_single_quote.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0008_unclosed_char_with_slash_single_quote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0008_unclosed_char_with_slash_single_quote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0008_unclosed_char_with_slash_single_quote.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0008_unclosed_char_with_slash_single_quote.rs"}, {"sha": "ae9a7f0e2a7780d27ab8899e6863934ebcdbcda6", "filename": "crates/syntax/test_data/lexer/err/0008_unclosed_char_with_slash_single_quote.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0008_unclosed_char_with_slash_single_quote.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0008_unclosed_char_with_slash_single_quote.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0008_unclosed_char_with_slash_single_quote.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0008_unclosed_char_with_slash_single_quote.txt"}, {"sha": "795dc7e25c587d7bc068e2f8b311505b75da2b68", "filename": "crates/syntax/test_data/lexer/err/0009_unclosed_byte_at_eof.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0009_unclosed_byte_at_eof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0009_unclosed_byte_at_eof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0009_unclosed_byte_at_eof.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0009_unclosed_byte_at_eof.rs"}, {"sha": "ff15045920f03f2a648aa6e440abf594a9661e36", "filename": "crates/syntax/test_data/lexer/err/0009_unclosed_byte_at_eof.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0009_unclosed_byte_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0009_unclosed_byte_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0009_unclosed_byte_at_eof.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0009_unclosed_byte_at_eof.txt"}, {"sha": "c9230dc24ea4421b5c88fa4bbb6eb402f7daffa6", "filename": "crates/syntax/test_data/lexer/err/0010_unclosed_byte_with_ferris.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0010_unclosed_byte_with_ferris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0010_unclosed_byte_with_ferris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0010_unclosed_byte_with_ferris.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0010_unclosed_byte_with_ferris.rs"}, {"sha": "34f7bd6d4074fc8a2c53aa141f13525f6ad38e3e", "filename": "crates/syntax/test_data/lexer/err/0010_unclosed_byte_with_ferris.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0010_unclosed_byte_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0010_unclosed_byte_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0010_unclosed_byte_with_ferris.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0010_unclosed_byte_with_ferris.txt"}, {"sha": "d146a8090d185b63ae752335134f55851dd0b539", "filename": "crates/syntax/test_data/lexer/err/0011_unclosed_byte_with_ascii_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0011_unclosed_byte_with_ascii_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0011_unclosed_byte_with_ascii_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0011_unclosed_byte_with_ascii_escape.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0011_unclosed_byte_with_ascii_escape.rs"}, {"sha": "c964d0f00a5e1771d6c85f94e3971c4ec0fd1a92", "filename": "crates/syntax/test_data/lexer/err/0011_unclosed_byte_with_ascii_escape.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0011_unclosed_byte_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0011_unclosed_byte_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0011_unclosed_byte_with_ascii_escape.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0011_unclosed_byte_with_ascii_escape.txt"}, {"sha": "a3dec7c255d0e17d6c55516c6e514bc574e1b083", "filename": "crates/syntax/test_data/lexer/err/0012_unclosed_byte_with_unicode_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0012_unclosed_byte_with_unicode_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0012_unclosed_byte_with_unicode_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0012_unclosed_byte_with_unicode_escape.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0012_unclosed_byte_with_unicode_escape.rs"}, {"sha": "cc65fb86f97396781c433c867efdfbf96fdb2426", "filename": "crates/syntax/test_data/lexer/err/0012_unclosed_byte_with_unicode_escape.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0012_unclosed_byte_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0012_unclosed_byte_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0012_unclosed_byte_with_unicode_escape.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0012_unclosed_byte_with_unicode_escape.txt"}, {"sha": "93b7f9c87c9144783b4a4cf7ba0a093a68e6691d", "filename": "crates/syntax/test_data/lexer/err/0013_unclosed_byte_with_space.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0013_unclosed_byte_with_space.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0013_unclosed_byte_with_space.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0013_unclosed_byte_with_space.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0013_unclosed_byte_with_space.rs"}, {"sha": "800834a144f661fcc7317dcc1c967357fe91fe32", "filename": "crates/syntax/test_data/lexer/err/0013_unclosed_byte_with_space.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0013_unclosed_byte_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0013_unclosed_byte_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0013_unclosed_byte_with_space.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0013_unclosed_byte_with_space.txt"}, {"sha": "abffa5037c0daa68a067eb6bc9f1c9a1b6d0f795", "filename": "crates/syntax/test_data/lexer/err/0014_unclosed_byte_with_slash.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0014_unclosed_byte_with_slash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0014_unclosed_byte_with_slash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0014_unclosed_byte_with_slash.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0014_unclosed_byte_with_slash.rs"}, {"sha": "7b85ee64634063530a2f2310527c39d7200962bf", "filename": "crates/syntax/test_data/lexer/err/0014_unclosed_byte_with_slash.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0014_unclosed_byte_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0014_unclosed_byte_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0014_unclosed_byte_with_slash.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0014_unclosed_byte_with_slash.txt"}, {"sha": "4f46836a935e31ab6b65ad8b185d51b34840b500", "filename": "crates/syntax/test_data/lexer/err/0015_unclosed_byte_with_slash_n.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0015_unclosed_byte_with_slash_n.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0015_unclosed_byte_with_slash_n.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0015_unclosed_byte_with_slash_n.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0015_unclosed_byte_with_slash_n.rs"}, {"sha": "4b9a63117b5ead11e0da686a09da804d265d674e", "filename": "crates/syntax/test_data/lexer/err/0015_unclosed_byte_with_slash_n.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0015_unclosed_byte_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0015_unclosed_byte_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0015_unclosed_byte_with_slash_n.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0015_unclosed_byte_with_slash_n.txt"}, {"sha": "645b641eedb669cc85718c4a33665ac042278bc8", "filename": "crates/syntax/test_data/lexer/err/0016_unclosed_byte_with_slash_single_quote.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0016_unclosed_byte_with_slash_single_quote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0016_unclosed_byte_with_slash_single_quote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0016_unclosed_byte_with_slash_single_quote.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0016_unclosed_byte_with_slash_single_quote.rs"}, {"sha": "fe337f8d3255b99651846fb1f9ce6e80cac162d9", "filename": "crates/syntax/test_data/lexer/err/0016_unclosed_byte_with_slash_single_quote.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0016_unclosed_byte_with_slash_single_quote.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0016_unclosed_byte_with_slash_single_quote.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0016_unclosed_byte_with_slash_single_quote.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0016_unclosed_byte_with_slash_single_quote.txt"}, {"sha": "9d68933c44f13985b9eb19159da6eb3ff0e574bf", "filename": "crates/syntax/test_data/lexer/err/0017_unclosed_string_at_eof.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0017_unclosed_string_at_eof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0017_unclosed_string_at_eof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0017_unclosed_string_at_eof.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0017_unclosed_string_at_eof.rs"}, {"sha": "d11a8d880eaaac70568e15ca8b660643759ab9f0", "filename": "crates/syntax/test_data/lexer/err/0017_unclosed_string_at_eof.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0017_unclosed_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0017_unclosed_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0017_unclosed_string_at_eof.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0017_unclosed_string_at_eof.txt"}, {"sha": "d439b8d2a1d6c12e517bb66ffb3ce05f1e09031b", "filename": "crates/syntax/test_data/lexer/err/0018_unclosed_string_with_ferris.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0018_unclosed_string_with_ferris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0018_unclosed_string_with_ferris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0018_unclosed_string_with_ferris.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0018_unclosed_string_with_ferris.rs"}, {"sha": "167f942d12c843a3c85c8ad490d93572739e02ab", "filename": "crates/syntax/test_data/lexer/err/0018_unclosed_string_with_ferris.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0018_unclosed_string_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0018_unclosed_string_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0018_unclosed_string_with_ferris.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0018_unclosed_string_with_ferris.txt"}, {"sha": "56186a34444f4986761a67a953d4c35cb1bac065", "filename": "crates/syntax/test_data/lexer/err/0019_unclosed_string_with_ascii_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0019_unclosed_string_with_ascii_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0019_unclosed_string_with_ascii_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0019_unclosed_string_with_ascii_escape.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0019_unclosed_string_with_ascii_escape.rs"}, {"sha": "224c653d26dc3bcdb28b1a36d7a82e7157aa5e42", "filename": "crates/syntax/test_data/lexer/err/0019_unclosed_string_with_ascii_escape.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0019_unclosed_string_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0019_unclosed_string_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0019_unclosed_string_with_ascii_escape.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0019_unclosed_string_with_ascii_escape.txt"}, {"sha": "ed24095c3d4fc8904d1726f52167550ad75cadff", "filename": "crates/syntax/test_data/lexer/err/0020_unclosed_string_with_unicode_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0020_unclosed_string_with_unicode_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0020_unclosed_string_with_unicode_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0020_unclosed_string_with_unicode_escape.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0020_unclosed_string_with_unicode_escape.rs"}, {"sha": "48975bbcbc47ef2102b381177a5f91e275d8e5ec", "filename": "crates/syntax/test_data/lexer/err/0020_unclosed_string_with_unicode_escape.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0020_unclosed_string_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0020_unclosed_string_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0020_unclosed_string_with_unicode_escape.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0020_unclosed_string_with_unicode_escape.txt"}, {"sha": "72cdc841fbd787e46735053268635236840e9c64", "filename": "crates/syntax/test_data/lexer/err/0021_unclosed_string_with_space.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0021_unclosed_string_with_space.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0021_unclosed_string_with_space.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0021_unclosed_string_with_space.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0021_unclosed_string_with_space.rs"}, {"sha": "a823cca7a48f1450e45aa3083c305f037832a5bc", "filename": "crates/syntax/test_data/lexer/err/0021_unclosed_string_with_space.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0021_unclosed_string_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0021_unclosed_string_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0021_unclosed_string_with_space.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0021_unclosed_string_with_space.txt"}, {"sha": "00a25840087190c844abad32d4ae185260446822", "filename": "crates/syntax/test_data/lexer/err/0022_unclosed_string_with_slash.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0022_unclosed_string_with_slash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0022_unclosed_string_with_slash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0022_unclosed_string_with_slash.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0022_unclosed_string_with_slash.rs"}, {"sha": "0914f001f5515a3eb471556d702fb7e634ed9e0a", "filename": "crates/syntax/test_data/lexer/err/0022_unclosed_string_with_slash.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0022_unclosed_string_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0022_unclosed_string_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0022_unclosed_string_with_slash.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0022_unclosed_string_with_slash.txt"}, {"sha": "a0c29b8cff7fc6f2b421683f51266c38e2d0cc2f", "filename": "crates/syntax/test_data/lexer/err/0023_unclosed_string_with_slash_n.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0023_unclosed_string_with_slash_n.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0023_unclosed_string_with_slash_n.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0023_unclosed_string_with_slash_n.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0023_unclosed_string_with_slash_n.rs"}, {"sha": "5674b55fdfa8b57213aedd137d9edf9a1d2b2dd5", "filename": "crates/syntax/test_data/lexer/err/0023_unclosed_string_with_slash_n.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0023_unclosed_string_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0023_unclosed_string_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0023_unclosed_string_with_slash_n.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0023_unclosed_string_with_slash_n.txt"}, {"sha": "403c2d6ddc698b0dd413fe92223411cbd8222e98", "filename": "crates/syntax/test_data/lexer/err/0024_unclosed_string_with_slash_double_quote.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0024_unclosed_string_with_slash_double_quote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0024_unclosed_string_with_slash_double_quote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0024_unclosed_string_with_slash_double_quote.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0024_unclosed_string_with_slash_double_quote.rs"}, {"sha": "4c9a774e4664c114bffa9fa79554b0f5e232a43d", "filename": "crates/syntax/test_data/lexer/err/0024_unclosed_string_with_slash_double_quote.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0024_unclosed_string_with_slash_double_quote.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0024_unclosed_string_with_slash_double_quote.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0024_unclosed_string_with_slash_double_quote.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0024_unclosed_string_with_slash_double_quote.txt"}, {"sha": "36f4f432187d6542e917e3ca4f1614907cd6b25b", "filename": "crates/syntax/test_data/lexer/err/0025_unclosed_byte_string_at_eof.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0025_unclosed_byte_string_at_eof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0025_unclosed_byte_string_at_eof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0025_unclosed_byte_string_at_eof.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0025_unclosed_byte_string_at_eof.rs"}, {"sha": "04e6b0aa4f14e16523ba01df267b328125fab98a", "filename": "crates/syntax/test_data/lexer/err/0025_unclosed_byte_string_at_eof.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0025_unclosed_byte_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0025_unclosed_byte_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0025_unclosed_byte_string_at_eof.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0025_unclosed_byte_string_at_eof.txt"}, {"sha": "3c23a03722873d7d2d0c91271a629bce34550ec2", "filename": "crates/syntax/test_data/lexer/err/0026_unclosed_byte_string_with_ferris.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0026_unclosed_byte_string_with_ferris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0026_unclosed_byte_string_with_ferris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0026_unclosed_byte_string_with_ferris.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0026_unclosed_byte_string_with_ferris.rs"}, {"sha": "0576a0609a8bdb006072b4ea1803df7ed026722a", "filename": "crates/syntax/test_data/lexer/err/0026_unclosed_byte_string_with_ferris.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0026_unclosed_byte_string_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0026_unclosed_byte_string_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0026_unclosed_byte_string_with_ferris.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0026_unclosed_byte_string_with_ferris.txt"}, {"sha": "836c112c1572fe38f697b997b159df136cee0503", "filename": "crates/syntax/test_data/lexer/err/0027_unclosed_byte_string_with_ascii_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0027_unclosed_byte_string_with_ascii_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0027_unclosed_byte_string_with_ascii_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0027_unclosed_byte_string_with_ascii_escape.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0027_unclosed_byte_string_with_ascii_escape.rs"}, {"sha": "541a013d853a0295cd123b408e8ca959cd48332f", "filename": "crates/syntax/test_data/lexer/err/0027_unclosed_byte_string_with_ascii_escape.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0027_unclosed_byte_string_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0027_unclosed_byte_string_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0027_unclosed_byte_string_with_ascii_escape.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0027_unclosed_byte_string_with_ascii_escape.txt"}, {"sha": "1c6df1d00e4e65390deb4dc086bd7dc516272241", "filename": "crates/syntax/test_data/lexer/err/0028_unclosed_byte_string_with_unicode_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0028_unclosed_byte_string_with_unicode_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0028_unclosed_byte_string_with_unicode_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0028_unclosed_byte_string_with_unicode_escape.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0028_unclosed_byte_string_with_unicode_escape.rs"}, {"sha": "71b0fb2118ccfaf7d9a31c5f4b9b57acdba64044", "filename": "crates/syntax/test_data/lexer/err/0028_unclosed_byte_string_with_unicode_escape.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0028_unclosed_byte_string_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0028_unclosed_byte_string_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0028_unclosed_byte_string_with_unicode_escape.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0028_unclosed_byte_string_with_unicode_escape.txt"}, {"sha": "d6898541e623c39b25417cceaba0f0324ea5da3e", "filename": "crates/syntax/test_data/lexer/err/0029_unclosed_byte_string_with_space.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0029_unclosed_byte_string_with_space.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0029_unclosed_byte_string_with_space.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0029_unclosed_byte_string_with_space.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0029_unclosed_byte_string_with_space.rs"}, {"sha": "bd5058bc118b7e136d2e96afcfc393b0cb03f031", "filename": "crates/syntax/test_data/lexer/err/0029_unclosed_byte_string_with_space.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0029_unclosed_byte_string_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0029_unclosed_byte_string_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0029_unclosed_byte_string_with_space.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0029_unclosed_byte_string_with_space.txt"}, {"sha": "cce6615381d5e9e22bbfc2f4f04181d2f865dfa5", "filename": "crates/syntax/test_data/lexer/err/0030_unclosed_byte_string_with_slash.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0030_unclosed_byte_string_with_slash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0030_unclosed_byte_string_with_slash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0030_unclosed_byte_string_with_slash.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0030_unclosed_byte_string_with_slash.rs"}, {"sha": "7f94f10ba150819065f67cdcc608131733b47d08", "filename": "crates/syntax/test_data/lexer/err/0030_unclosed_byte_string_with_slash.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0030_unclosed_byte_string_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0030_unclosed_byte_string_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0030_unclosed_byte_string_with_slash.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0030_unclosed_byte_string_with_slash.txt"}, {"sha": "5e680aabb7b1c9c085bb39516429236ae2e685cc", "filename": "crates/syntax/test_data/lexer/err/0031_unclosed_byte_string_with_slash_n.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0031_unclosed_byte_string_with_slash_n.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0031_unclosed_byte_string_with_slash_n.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0031_unclosed_byte_string_with_slash_n.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0031_unclosed_byte_string_with_slash_n.rs"}, {"sha": "9c3c089d72446ff5a684f9dffb2c628b9c11794a", "filename": "crates/syntax/test_data/lexer/err/0031_unclosed_byte_string_with_slash_n.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0031_unclosed_byte_string_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0031_unclosed_byte_string_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0031_unclosed_byte_string_with_slash_n.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0031_unclosed_byte_string_with_slash_n.txt"}, {"sha": "f2ff58ba9a883643b6b8e5d69f75344cbee6e9ad", "filename": "crates/syntax/test_data/lexer/err/0032_unclosed_byte_string_with_slash_double_quote.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0032_unclosed_byte_string_with_slash_double_quote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0032_unclosed_byte_string_with_slash_double_quote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0032_unclosed_byte_string_with_slash_double_quote.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0032_unclosed_byte_string_with_slash_double_quote.rs"}, {"sha": "884b12c8ee060898e0bb847e66c540ed60b3d4bd", "filename": "crates/syntax/test_data/lexer/err/0032_unclosed_byte_string_with_slash_double_quote.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0032_unclosed_byte_string_with_slash_double_quote.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0032_unclosed_byte_string_with_slash_double_quote.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0032_unclosed_byte_string_with_slash_double_quote.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0032_unclosed_byte_string_with_slash_double_quote.txt"}, {"sha": "557c59b625190937a1e56e4d04cd37454fa38b5c", "filename": "crates/syntax/test_data/lexer/err/0033_unclosed_raw_string_at_eof.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0033_unclosed_raw_string_at_eof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0033_unclosed_raw_string_at_eof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0033_unclosed_raw_string_at_eof.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0033_unclosed_raw_string_at_eof.rs"}, {"sha": "6fd59ccc0279ca73f5c2ee7b80485e634eb6c1b0", "filename": "crates/syntax/test_data/lexer/err/0033_unclosed_raw_string_at_eof.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0033_unclosed_raw_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0033_unclosed_raw_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0033_unclosed_raw_string_at_eof.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0033_unclosed_raw_string_at_eof.txt"}, {"sha": "bd046e4bb9148e109cbe00519a49c22f16014928", "filename": "crates/syntax/test_data/lexer/err/0034_unclosed_raw_string_with_ferris.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0034_unclosed_raw_string_with_ferris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0034_unclosed_raw_string_with_ferris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0034_unclosed_raw_string_with_ferris.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0034_unclosed_raw_string_with_ferris.rs"}, {"sha": "8d9ca0e8f12ca35e794bb6cd9594689fd7e17829", "filename": "crates/syntax/test_data/lexer/err/0034_unclosed_raw_string_with_ferris.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0034_unclosed_raw_string_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0034_unclosed_raw_string_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0034_unclosed_raw_string_with_ferris.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0034_unclosed_raw_string_with_ferris.txt"}, {"sha": "5bec883dc7ae19bff364f58ed3b3df038fecd4aa", "filename": "crates/syntax/test_data/lexer/err/0035_unclosed_raw_string_with_ascii_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0035_unclosed_raw_string_with_ascii_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0035_unclosed_raw_string_with_ascii_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0035_unclosed_raw_string_with_ascii_escape.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0035_unclosed_raw_string_with_ascii_escape.rs"}, {"sha": "a906380c718a0dbfbe10d0a1a2010a205ce19699", "filename": "crates/syntax/test_data/lexer/err/0035_unclosed_raw_string_with_ascii_escape.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0035_unclosed_raw_string_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0035_unclosed_raw_string_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0035_unclosed_raw_string_with_ascii_escape.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0035_unclosed_raw_string_with_ascii_escape.txt"}, {"sha": "bf05c39134bd08d95d5094ccfe660bf4a0974de2", "filename": "crates/syntax/test_data/lexer/err/0036_unclosed_raw_string_with_unicode_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0036_unclosed_raw_string_with_unicode_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0036_unclosed_raw_string_with_unicode_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0036_unclosed_raw_string_with_unicode_escape.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0036_unclosed_raw_string_with_unicode_escape.rs"}, {"sha": "5667c614995147e7175e0f23e974644acebf6d89", "filename": "crates/syntax/test_data/lexer/err/0036_unclosed_raw_string_with_unicode_escape.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0036_unclosed_raw_string_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0036_unclosed_raw_string_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0036_unclosed_raw_string_with_unicode_escape.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0036_unclosed_raw_string_with_unicode_escape.txt"}, {"sha": "f104bae4f2cdfdeb47dec924c57bd0215b99dfdd", "filename": "crates/syntax/test_data/lexer/err/0037_unclosed_raw_string_with_space.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0037_unclosed_raw_string_with_space.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0037_unclosed_raw_string_with_space.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0037_unclosed_raw_string_with_space.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0037_unclosed_raw_string_with_space.rs"}, {"sha": "141c8268e8040d20bbb18c3ba888c5a621cc70a1", "filename": "crates/syntax/test_data/lexer/err/0037_unclosed_raw_string_with_space.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0037_unclosed_raw_string_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0037_unclosed_raw_string_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0037_unclosed_raw_string_with_space.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0037_unclosed_raw_string_with_space.txt"}, {"sha": "9242077b8b7c58f62aa24fd4efcaf8f5b1fe2789", "filename": "crates/syntax/test_data/lexer/err/0038_unclosed_raw_string_with_slash.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0038_unclosed_raw_string_with_slash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0038_unclosed_raw_string_with_slash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0038_unclosed_raw_string_with_slash.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0038_unclosed_raw_string_with_slash.rs"}, {"sha": "f61d4cc915e52838d5d0aec060d35b9f1df7035a", "filename": "crates/syntax/test_data/lexer/err/0038_unclosed_raw_string_with_slash.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0038_unclosed_raw_string_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0038_unclosed_raw_string_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0038_unclosed_raw_string_with_slash.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0038_unclosed_raw_string_with_slash.txt"}, {"sha": "db1c16f2ba5ac812292e310602083f67cf77ab56", "filename": "crates/syntax/test_data/lexer/err/0039_unclosed_raw_string_with_slash_n.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0039_unclosed_raw_string_with_slash_n.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0039_unclosed_raw_string_with_slash_n.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0039_unclosed_raw_string_with_slash_n.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0039_unclosed_raw_string_with_slash_n.rs"}, {"sha": "12e2c0fc038a8d7e96cf1cfd7455bd32eed414d2", "filename": "crates/syntax/test_data/lexer/err/0039_unclosed_raw_string_with_slash_n.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0039_unclosed_raw_string_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0039_unclosed_raw_string_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0039_unclosed_raw_string_with_slash_n.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0039_unclosed_raw_string_with_slash_n.txt"}, {"sha": "ae5bae62230856c72a718c0388a90fb420ef2f55", "filename": "crates/syntax/test_data/lexer/err/0040_unclosed_raw_byte_string_at_eof.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0040_unclosed_raw_byte_string_at_eof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0040_unclosed_raw_byte_string_at_eof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0040_unclosed_raw_byte_string_at_eof.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0040_unclosed_raw_byte_string_at_eof.rs"}, {"sha": "fe12cb5fc6da14cda53c264e28b48436c3b975a0", "filename": "crates/syntax/test_data/lexer/err/0040_unclosed_raw_byte_string_at_eof.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0040_unclosed_raw_byte_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0040_unclosed_raw_byte_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0040_unclosed_raw_byte_string_at_eof.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0040_unclosed_raw_byte_string_at_eof.txt"}, {"sha": "9ef01207a173f33d66653c7c452095a885d7d525", "filename": "crates/syntax/test_data/lexer/err/0041_unclosed_raw_byte_string_with_ferris.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0041_unclosed_raw_byte_string_with_ferris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0041_unclosed_raw_byte_string_with_ferris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0041_unclosed_raw_byte_string_with_ferris.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0041_unclosed_raw_byte_string_with_ferris.rs"}, {"sha": "5be2a7861b4a3a341a3585fe04bf9928475b6da1", "filename": "crates/syntax/test_data/lexer/err/0041_unclosed_raw_byte_string_with_ferris.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0041_unclosed_raw_byte_string_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0041_unclosed_raw_byte_string_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0041_unclosed_raw_byte_string_with_ferris.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0041_unclosed_raw_byte_string_with_ferris.txt"}, {"sha": "d50270afe1e1cd85d31c59dd38e72d0b70be8db2", "filename": "crates/syntax/test_data/lexer/err/0042_unclosed_raw_byte_string_with_ascii_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0042_unclosed_raw_byte_string_with_ascii_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0042_unclosed_raw_byte_string_with_ascii_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0042_unclosed_raw_byte_string_with_ascii_escape.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0042_unclosed_raw_byte_string_with_ascii_escape.rs"}, {"sha": "6cbe08d07ed94aa9807a0e90733407517a6934b2", "filename": "crates/syntax/test_data/lexer/err/0042_unclosed_raw_byte_string_with_ascii_escape.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0042_unclosed_raw_byte_string_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0042_unclosed_raw_byte_string_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0042_unclosed_raw_byte_string_with_ascii_escape.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0042_unclosed_raw_byte_string_with_ascii_escape.txt"}, {"sha": "90e299a1a977cab7edf3c3f4ccd891f258e38ef3", "filename": "crates/syntax/test_data/lexer/err/0043_unclosed_raw_byte_string_with_unicode_escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0043_unclosed_raw_byte_string_with_unicode_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0043_unclosed_raw_byte_string_with_unicode_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0043_unclosed_raw_byte_string_with_unicode_escape.rs?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0043_unclosed_raw_byte_string_with_unicode_escape.rs"}, {"sha": "f56a4f98480d2db7f66210152fcc0bc7157d46b3", "filename": "crates/syntax/test_data/lexer/err/0043_unclosed_raw_byte_string_with_unicode_escape.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0043_unclosed_raw_byte_string_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d583f2c46d22cf8d643ebf98be9cb7059a304431/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0043_unclosed_raw_byte_string_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0043_unclosed_raw_byte_string_with_unicode_escape.txt?ref=d583f2c46d22cf8d643ebf98be9cb7059a304431", "previous_filename": "crates/ra_syntax/test_data/lexer/err/0043_unclosed_raw_byte_string_with_unicode_escape.txt"}]}