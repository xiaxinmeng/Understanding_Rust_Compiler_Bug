{"sha": "e23881e1310f7fe02aeeecf3510a80cbac5aa808", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyMzg4MWUxMzEwZjdmZTAyYWVlZWNmMzUxMGE4MGNiYWM1YWE4MDg=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-02-05T10:09:48Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-02-06T18:15:01Z"}, "message": "Rename ctx->cx in needless_continue", "tree": {"sha": "818087e78692df9ba0153f7762052c01db30f5af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/818087e78692df9ba0153f7762052c01db30f5af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e23881e1310f7fe02aeeecf3510a80cbac5aa808", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl48V6UACgkQaTCGhp1Q\nZjdOvA/+PB444wajJeSt5C8vrF+oYCCCDw6mQX1Jmn2adOZRbPWmqkxJcr1AAF3J\nzNTfiR9bz/egFa3zioKg9LBAzpax1sHoz638dZLjMEbSAKjsqVsyM590vgPCJLvJ\ngUFLk8Al0R86koqi+5XIQQIvITtTXg8DaWdQEobUNiXJQSii5v0KKc7V24h3S7kS\n5jO+CqygzHdfCpQz7+2qDJ/4rzVkNQuDCVFUOljqE61LrblFT4vDik9OwJ2NLPRd\n3F1AkEG6yv/upDy1YgYuat/zSp5SHnO1+kHhbj9W3qKEDpHNhXSh4HFrImQK9S3U\nm2Ie0TCSb++mczXEivnF6HRBmXtDZFTNETTta1rvh/bYkRAik1Vg6T6Jx3kqivK5\nEmrh9/0qUdR584eMVjLkYRGyZj2B41mhhtnXIDkZZ5q1Ld9AQTCAwC3gH14L7CZz\n3KkX6+AMy7NDDnLl7Lrvy8OGIoLZzUX2T8i3Un/HUUY+I8+dQAP9smqIaT6rSVez\n9Zwkai9RqSQmRfi9dCy2CGmrNbS2//G9zmpfr4IV8nkjvhMfPhIFC5F796xhR1og\n39/PG4KRiu7rsQm1wAS9ZOSHuJXcO6wumak9qU2gqAsc/reRsw+IAGBLJ2COUeQW\n4mqCSiY7JqUfv3gD7Dsg5cI3Rrs9gx4S6/dCB34lqkA/Whyi3qo=\n=RATY\n-----END PGP SIGNATURE-----", "payload": "tree 818087e78692df9ba0153f7762052c01db30f5af\nparent 4068ff4d8a97cfdd21c717748e75a4839923e231\nauthor flip1995 <hello@philkrones.com> 1580897388 +0100\ncommitter flip1995 <hello@philkrones.com> 1581012901 +0100\n\nRename ctx->cx in needless_continue\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e23881e1310f7fe02aeeecf3510a80cbac5aa808", "html_url": "https://github.com/rust-lang/rust/commit/e23881e1310f7fe02aeeecf3510a80cbac5aa808", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e23881e1310f7fe02aeeecf3510a80cbac5aa808/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4068ff4d8a97cfdd21c717748e75a4839923e231", "url": "https://api.github.com/repos/rust-lang/rust/commits/4068ff4d8a97cfdd21c717748e75a4839923e231", "html_url": "https://github.com/rust-lang/rust/commit/4068ff4d8a97cfdd21c717748e75a4839923e231"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "660aae25f557d829565786241b81f892df65ab4d", "filename": "clippy_lints/src/needless_continue.rs", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/e23881e1310f7fe02aeeecf3510a80cbac5aa808/clippy_lints%2Fsrc%2Fneedless_continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e23881e1310f7fe02aeeecf3510a80cbac5aa808/clippy_lints%2Fsrc%2Fneedless_continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_continue.rs?ref=e23881e1310f7fe02aeeecf3510a80cbac5aa808", "patch": "@@ -119,9 +119,9 @@ declare_clippy_lint! {\n declare_lint_pass!(NeedlessContinue => [NEEDLESS_CONTINUE]);\n \n impl EarlyLintPass for NeedlessContinue {\n-    fn check_expr(&mut self, ctx: &EarlyContext<'_>, expr: &ast::Expr) {\n+    fn check_expr(&mut self, cx: &EarlyContext<'_>, expr: &ast::Expr) {\n         if !expr.span.from_expansion() {\n-            check_and_warn(ctx, expr);\n+            check_and_warn(cx, expr);\n         }\n     }\n }\n@@ -283,39 +283,39 @@ const DROP_ELSE_BLOCK_AND_MERGE_MSG: &str = \"consider dropping the `else` clause\n \n const DROP_ELSE_BLOCK_MSG: &str = \"consider dropping the `else` clause\";\n \n-fn emit_warning<'a>(ctx: &EarlyContext<'_>, data: &'a LintData<'_>, header: &str, typ: LintType) {\n+fn emit_warning<'a>(cx: &EarlyContext<'_>, data: &'a LintData<'_>, header: &str, typ: LintType) {\n     // snip    is the whole *help* message that appears after the warning.\n     // message is the warning message.\n     // expr    is the expression which the lint warning message refers to.\n     let (snip, message, expr) = match typ {\n         LintType::ContinueInsideElseBlock => (\n-            suggestion_snippet_for_continue_inside_else(ctx, data),\n+            suggestion_snippet_for_continue_inside_else(cx, data),\n             MSG_REDUNDANT_ELSE_BLOCK,\n             data.else_expr,\n         ),\n         LintType::ContinueInsideThenBlock => (\n-            suggestion_snippet_for_continue_inside_if(ctx, data),\n+            suggestion_snippet_for_continue_inside_if(cx, data),\n             MSG_ELSE_BLOCK_NOT_NEEDED,\n             data.if_expr,\n         ),\n     };\n     span_lint_and_help(\n-        ctx,\n+        cx,\n         NEEDLESS_CONTINUE,\n         expr.span,\n         message,\n         &format!(\"{}\\n{}\", header, snip),\n     );\n }\n \n-fn suggestion_snippet_for_continue_inside_if<'a>(ctx: &EarlyContext<'_>, data: &'a LintData<'_>) -> String {\n-    let cond_code = snippet(ctx, data.if_cond.span, \"..\");\n+fn suggestion_snippet_for_continue_inside_if<'a>(cx: &EarlyContext<'_>, data: &'a LintData<'_>) -> String {\n+    let cond_code = snippet(cx, data.if_cond.span, \"..\");\n \n-    let continue_code = snippet_block(ctx, data.if_block.span, \"..\", Some(data.if_expr.span));\n+    let continue_code = snippet_block(cx, data.if_block.span, \"..\", Some(data.if_expr.span));\n \n-    let else_code = snippet_block(ctx, data.else_expr.span, \"..\", Some(data.if_expr.span));\n+    let else_code = snippet_block(cx, data.else_expr.span, \"..\", Some(data.if_expr.span));\n \n-    let indent_if = indent_of(ctx, data.if_expr.span).unwrap_or(0);\n+    let indent_if = indent_of(cx, data.if_expr.span).unwrap_or(0);\n     format!(\n         \"{indent}if {} {}\\n{indent}{}\",\n         cond_code,\n@@ -325,24 +325,24 @@ fn suggestion_snippet_for_continue_inside_if<'a>(ctx: &EarlyContext<'_>, data: &\n     )\n }\n \n-fn suggestion_snippet_for_continue_inside_else<'a>(ctx: &EarlyContext<'_>, data: &'a LintData<'_>) -> String {\n-    let cond_code = snippet(ctx, data.if_cond.span, \"..\");\n+fn suggestion_snippet_for_continue_inside_else<'a>(cx: &EarlyContext<'_>, data: &'a LintData<'_>) -> String {\n+    let cond_code = snippet(cx, data.if_cond.span, \"..\");\n \n     // Region B\n-    let block_code = erode_from_back(&snippet_block(ctx, data.if_block.span, \"..\", Some(data.if_expr.span)));\n+    let block_code = erode_from_back(&snippet_block(cx, data.if_block.span, \"..\", Some(data.if_expr.span)));\n \n     // Region C\n     // These is the code in the loop block that follows the if/else construction\n     // we are complaining about. We want to pull all of this code into the\n     // `then` block of the `if` statement.\n     let indent = span_of_first_expr_in_block(data.if_block)\n-        .and_then(|span| indent_of(ctx, span))\n+        .and_then(|span| indent_of(cx, span))\n         .unwrap_or(0);\n     let to_annex = data.block_stmts[data.stmt_idx + 1..]\n         .iter()\n         .map(|stmt| original_sp(stmt.span, DUMMY_SP))\n         .map(|span| {\n-            let snip = snippet_block(ctx, span, \"..\", None).into_owned();\n+            let snip = snippet_block(cx, span, \"..\", None).into_owned();\n             snip.lines()\n                 .map(|line| format!(\"{}{}\", \" \".repeat(indent), line))\n                 .collect::<Vec<_>>()\n@@ -351,7 +351,7 @@ fn suggestion_snippet_for_continue_inside_else<'a>(ctx: &EarlyContext<'_>, data:\n         .collect::<Vec<_>>()\n         .join(\"\\n\");\n \n-    let indent_if = indent_of(ctx, data.if_expr.span).unwrap_or(0);\n+    let indent_if = indent_of(cx, data.if_expr.span).unwrap_or(0);\n     format!(\n         \"{indent_if}if {} {}\\n{indent}// merged code follows:\\n{}\\n{indent_if}}}\",\n         cond_code,\n@@ -362,7 +362,7 @@ fn suggestion_snippet_for_continue_inside_else<'a>(ctx: &EarlyContext<'_>, data:\n     )\n }\n \n-fn check_and_warn<'a>(ctx: &EarlyContext<'_>, expr: &'a ast::Expr) {\n+fn check_and_warn<'a>(cx: &EarlyContext<'_>, expr: &'a ast::Expr) {\n     with_loop_block(expr, |loop_block, label| {\n         for (i, stmt) in loop_block.stmts.iter().enumerate() {\n             with_if_expr(stmt, |if_expr, cond, then_block, else_expr| {\n@@ -376,13 +376,13 @@ fn check_and_warn<'a>(ctx: &EarlyContext<'_>, expr: &'a ast::Expr) {\n                 };\n                 if needless_continue_in_else(else_expr, label) {\n                     emit_warning(\n-                        ctx,\n+                        cx,\n                         data,\n                         DROP_ELSE_BLOCK_AND_MERGE_MSG,\n                         LintType::ContinueInsideElseBlock,\n                     );\n                 } else if is_first_block_stmt_continue(then_block, label) {\n-                    emit_warning(ctx, data, DROP_ELSE_BLOCK_MSG, LintType::ContinueInsideThenBlock);\n+                    emit_warning(cx, data, DROP_ELSE_BLOCK_MSG, LintType::ContinueInsideThenBlock);\n                 }\n             });\n         }"}]}