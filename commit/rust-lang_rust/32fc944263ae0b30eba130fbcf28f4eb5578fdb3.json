{"sha": "32fc944263ae0b30eba130fbcf28f4eb5578fdb3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyZmM5NDQyNjNhZTBiMzBlYmExMzBmYmNmMjhmNGViNTU3OGZkYjM=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-05-15T15:01:27Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-05-21T15:48:34Z"}, "message": "Fix handling of diverging branches in match coercion\n\nFixes #7626.", "tree": {"sha": "779b701955168f7472a5ae7e760cb95c6ca604e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/779b701955168f7472a5ae7e760cb95c6ca604e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32fc944263ae0b30eba130fbcf28f4eb5578fdb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32fc944263ae0b30eba130fbcf28f4eb5578fdb3", "html_url": "https://github.com/rust-lang/rust/commit/32fc944263ae0b30eba130fbcf28f4eb5578fdb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32fc944263ae0b30eba130fbcf28f4eb5578fdb3/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a09079f27aa631b011f6c0703200862d28af81f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a09079f27aa631b011f6c0703200862d28af81f4", "html_url": "https://github.com/rust-lang/rust/commit/a09079f27aa631b011f6c0703200862d28af81f4"}], "stats": {"total": 56, "additions": 52, "deletions": 4}, "files": [{"sha": "4d80b4a082cfa5e644ea25355d4e6ab311aecce3", "filename": "crates/hir_ty/src/infer/coerce.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/32fc944263ae0b30eba130fbcf28f4eb5578fdb3/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32fc944263ae0b30eba130fbcf28f4eb5578fdb3/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs?ref=32fc944263ae0b30eba130fbcf28f4eb5578fdb3", "patch": "@@ -45,6 +45,10 @@ impl<'a> InferenceContext<'a> {\n     ///  - if we were concerned with lifetime subtyping, we'd need to look for a\n     ///    least upper bound.\n     pub(super) fn coerce_merge_branch(&mut self, ty1: &Ty, ty2: &Ty) -> Ty {\n+        let ty1 = self.resolve_ty_shallow(ty1);\n+        let ty1 = ty1.as_ref();\n+        let ty2 = self.resolve_ty_shallow(ty2);\n+        let ty2 = ty2.as_ref();\n         // Special case: two function types. Try to coerce both to\n         // pointers to have a chance at getting a match. See\n         // https://github.com/rust-lang/rust/blob/7b805396bf46dce972692a6846ce2ad8481c5f85/src/librustc_typeck/check/coercion.rs#L877-L916\n@@ -71,12 +75,17 @@ impl<'a> InferenceContext<'a> {\n             }\n         }\n \n-        if self.coerce(ty1, ty2) {\n-            ty2.clone()\n-        } else if self.coerce(ty2, ty1) {\n+        // It might not seem like it, but order is important here: ty1 is our\n+        // \"previous\" type, ty2 is the \"new\" one being added. If the previous\n+        // type is a type variable and the new one is `!`, trying it the other\n+        // way around first would mean we make the type variable `!`, instead of\n+        // just marking it as possibly diverging.\n+        if self.coerce(ty2, ty1) {\n             ty1.clone()\n+        } else if self.coerce(ty1, ty2) {\n+            ty2.clone()\n         } else {\n-            // FIXME record a type mismatch\n+            // TODO record a type mismatch\n             cov_mark::hit!(coerce_merge_fail_fallback);\n             ty1.clone()\n         }"}, {"sha": "bb568ea372eda1f3cf69bbeed33172c9a00a8ece", "filename": "crates/hir_ty/src/tests/coercion.rs", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/32fc944263ae0b30eba130fbcf28f4eb5578fdb3/crates%2Fhir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32fc944263ae0b30eba130fbcf28f4eb5578fdb3/crates%2Fhir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fcoercion.rs?ref=32fc944263ae0b30eba130fbcf28f4eb5578fdb3", "patch": "@@ -873,3 +873,42 @@ fn foo(c: i32) {\n         \"#,\n     )\n }\n+\n+#[test]\n+fn infer_match_diverging_branch_1() {\n+    check_types(\n+        r#\"\n+enum Result<T> { Ok(T), Err }\n+fn parse<T>() -> T { loop {} }\n+\n+fn test() -> i32 {\n+    let a = match parse() {\n+        Ok(val) => val,\n+        Err => return 0,\n+    };\n+    a\n+  //^ i32\n+}\n+        \"#,\n+    )\n+}\n+\n+#[test]\n+fn infer_match_diverging_branch_2() {\n+    // same as 1 except for order of branches\n+    check_types(\n+        r#\"\n+enum Result<T> { Ok(T), Err }\n+fn parse<T>() -> T { loop {} }\n+\n+fn test() -> i32 {\n+    let a = match parse() {\n+        Err => return 0,\n+        Ok(val) => val,\n+    };\n+    a\n+  //^ i32\n+}\n+        \"#,\n+    )\n+}"}]}