{"sha": "fa4edcc8518f1aa58b7b41ed6c1de715f20b5403", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNGVkY2M4NTE4ZjFhYTU4YjdiNDFlZDZjMWRlNzE1ZjIwYjU0MDM=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-16T21:37:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-16T21:37:30Z"}, "message": "Rollup merge of #88030 - fee1-dead:fixme, r=oli-obk\n\nAssign FIXMEs to me and remove obsolete ones\n\nAlso fixed capitalization of documentation\n\nWe also don't need to transform predicates to be non-const since we basically ignore const predicates in non-const contexts.\n\nr? `````@oli-obk`````", "tree": {"sha": "c6286bc014e12e1d6fa63101d1bb3c99f9bb3e80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6286bc014e12e1d6fa63101d1bb3c99f9bb3e80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa4edcc8518f1aa58b7b41ed6c1de715f20b5403", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhGtqaCRBK7hj4Ov3rIwAA+9UIACfPw4ASEwH5K5FlAKatlRSj\ncatfxCrbtQxnnGx8kr6+6npEsn+qz54ZElv1W2HDu0rUN29mxDplUheahwJDgKq3\nqlhPP6ZAJbJg0EijcZi/Dg4FUmvMclHqPW4ynywIRNWaccPMndhF/gQZ4pv3/MJf\nujvs6Y/ASKpn/VM+Kdid2bPvJK3yFo1la/+JeMsqy0nTrv+CieAk3X/UODFOxDQW\nkk84rDQw30jykpCnS/53AowKhoYEg6FOoPftkv/qYUi6HymA6bIcnOQ29tTNzSZI\nVrhR3nLXUwGArlfj6wOo+g+fVC4Om4KXS3RJWWTk8knDssXc3lNlyS6ELqT88D4=\n=3ghu\n-----END PGP SIGNATURE-----\n", "payload": "tree c6286bc014e12e1d6fa63101d1bb3c99f9bb3e80\nparent fe71be7f340160a9aedf66d3cfa78bb4c6e43374\nparent f25d2bd53b939a9f4e5adf5af7e9ebb3787f730a\nauthor Mara Bos <m-ou.se@m-ou.se> 1629149850 +0200\ncommitter GitHub <noreply@github.com> 1629149850 +0200\n\nRollup merge of #88030 - fee1-dead:fixme, r=oli-obk\n\nAssign FIXMEs to me and remove obsolete ones\n\nAlso fixed capitalization of documentation\n\nWe also don't need to transform predicates to be non-const since we basically ignore const predicates in non-const contexts.\n\nr? `````@oli-obk`````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa4edcc8518f1aa58b7b41ed6c1de715f20b5403", "html_url": "https://github.com/rust-lang/rust/commit/fa4edcc8518f1aa58b7b41ed6c1de715f20b5403", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa4edcc8518f1aa58b7b41ed6c1de715f20b5403/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe71be7f340160a9aedf66d3cfa78bb4c6e43374", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe71be7f340160a9aedf66d3cfa78bb4c6e43374", "html_url": "https://github.com/rust-lang/rust/commit/fe71be7f340160a9aedf66d3cfa78bb4c6e43374"}, {"sha": "f25d2bd53b939a9f4e5adf5af7e9ebb3787f730a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f25d2bd53b939a9f4e5adf5af7e9ebb3787f730a", "html_url": "https://github.com/rust-lang/rust/commit/f25d2bd53b939a9f4e5adf5af7e9ebb3787f730a"}], "stats": {"total": 23, "additions": 5, "deletions": 18}, "files": [{"sha": "42333dc29bc7c37ae50cebb27616d19f280fc02b", "filename": "compiler/rustc_infer/src/traits/engine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa4edcc8518f1aa58b7b41ed6c1de715f20b5403/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fengine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa4edcc8518f1aa58b7b41ed6c1de715f20b5403/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fengine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fengine.rs?ref=fa4edcc8518f1aa58b7b41ed6c1de715f20b5403", "patch": "@@ -63,7 +63,7 @@ pub trait TraitEngine<'tcx>: 'tcx {\n         infcx: &InferCtxt<'_, 'tcx>,\n     ) -> Result<(), Vec<FulfillmentError<'tcx>>>;\n \n-    // FIXME this should not provide a default body for chalk as chalk should be updated\n+    // FIXME(fee1-dead) this should not provide a default body for chalk as chalk should be updated\n     fn select_with_constness_where_possible(\n         &mut self,\n         infcx: &InferCtxt<'_, 'tcx>,"}, {"sha": "38dbacbf2ae6ca274fd77613a032d5f9d7d926a8", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa4edcc8518f1aa58b7b41ed6c1de715f20b5403/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa4edcc8518f1aa58b7b41ed6c1de715f20b5403/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=fa4edcc8518f1aa58b7b41ed6c1de715f20b5403", "patch": "@@ -316,7 +316,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n         self.infcx.tcx\n     }\n \n-    /// returns `true` if the predicate is considered `const` to\n+    /// Returns `true` if the predicate is considered `const` to\n     /// this selection context.\n     pub fn is_predicate_const(&self, pred: ty::Predicate<'_>) -> bool {\n         match pred.kind().skip_binder() {"}, {"sha": "bd0acb0e53b6c300b4c3af56071d11cc02497d96", "filename": "compiler/rustc_traits/src/type_op.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fa4edcc8518f1aa58b7b41ed6c1de715f20b5403/compiler%2Frustc_traits%2Fsrc%2Ftype_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa4edcc8518f1aa58b7b41ed6c1de715f20b5403/compiler%2Frustc_traits%2Fsrc%2Ftype_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Ftype_op.rs?ref=fa4edcc8518f1aa58b7b41ed6c1de715f20b5403", "patch": "@@ -6,9 +6,7 @@ use rustc_infer::infer::{InferCtxt, TyCtxtInferExt};\n use rustc_infer::traits::TraitEngineExt as _;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::subst::{GenericArg, Subst, UserSelfTy, UserSubsts};\n-use rustc_middle::ty::{\n-    self, FnSig, Lift, PolyFnSig, PredicateKind, Ty, TyCtxt, TypeFoldable, Variance,\n-};\n+use rustc_middle::ty::{self, FnSig, Lift, PolyFnSig, Ty, TyCtxt, TypeFoldable, Variance};\n use rustc_middle::ty::{ParamEnv, ParamEnvAnd, Predicate, ToPredicate};\n use rustc_span::DUMMY_SP;\n use rustc_trait_selection::infer::InferCtxtBuilderExt;\n@@ -87,16 +85,7 @@ impl AscribeUserTypeCx<'me, 'tcx> {\n         Ok(())\n     }\n \n-    fn prove_predicate(&mut self, mut predicate: Predicate<'tcx>) {\n-        if let PredicateKind::Trait(mut tr) = predicate.kind().skip_binder() {\n-            if let hir::Constness::Const = tr.constness {\n-                // FIXME check if we actually want to prove const predicates inside AscribeUserType\n-                tr.constness = hir::Constness::NotConst;\n-                predicate =\n-                    predicate.kind().rebind(PredicateKind::Trait(tr)).to_predicate(self.tcx());\n-            }\n-        }\n-\n+    fn prove_predicate(&mut self, predicate: Predicate<'tcx>) {\n         self.fulfill_cx.register_predicate_obligation(\n             self.infcx,\n             Obligation::new(ObligationCause::dummy(), self.param_env, predicate),"}, {"sha": "b6ef3eee291fb733b4aa99d7173b238d530a4ba1", "filename": "library/alloc/tests/const_fns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa4edcc8518f1aa58b7b41ed6c1de715f20b5403/library%2Falloc%2Ftests%2Fconst_fns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa4edcc8518f1aa58b7b41ed6c1de715f20b5403/library%2Falloc%2Ftests%2Fconst_fns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fconst_fns.rs?ref=fa4edcc8518f1aa58b7b41ed6c1de715f20b5403", "patch": "@@ -10,7 +10,7 @@ pub const MY_VEC: Vec<usize> = Vec::new();\n #[allow(dead_code)]\n pub const MY_STRING: String = String::new();\n \n-// FIXME remove this struct once we put `K: ?const Ord` on BTreeMap::new.\n+// FIXME(fee1-dead) remove this struct once we put `K: ?const Ord` on BTreeMap::new.\n #[derive(PartialEq, Eq, PartialOrd)]\n pub struct MyType;\n "}, {"sha": "7284c05d5ff166ae00acfbfe0161bb2c2882dd7e", "filename": "library/alloc/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa4edcc8518f1aa58b7b41ed6c1de715f20b5403/library%2Falloc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa4edcc8518f1aa58b7b41ed6c1de715f20b5403/library%2Falloc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Flib.rs?ref=fa4edcc8518f1aa58b7b41ed6c1de715f20b5403", "patch": "@@ -25,8 +25,6 @@\n #![feature(string_remove_matches)]\n #![feature(const_btree_new)]\n #![feature(const_trait_impl)]\n-// FIXME remove this when const_trait_impl is not incomplete anymore\n-#![allow(incomplete_features)]\n \n use std::collections::hash_map::DefaultHasher;\n use std::hash::{Hash, Hasher};"}]}