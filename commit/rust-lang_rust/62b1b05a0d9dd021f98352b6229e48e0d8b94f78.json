{"sha": "62b1b05a0d9dd021f98352b6229e48e0d8b94f78", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyYjFiMDVhMGQ5ZGQwMjFmOTgzNTJiNjIyOWU0OGUwZDhiOTRmNzg=", "commit": {"author": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2018-10-08T18:18:55Z"}, "committer": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2018-10-08T18:18:55Z"}, "message": "Fix remaining tslint suggestions", "tree": {"sha": "92627c1590c7f38b29a6d0d86f1db3d5b7332ad0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92627c1590c7f38b29a6d0d86f1db3d5b7332ad0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62b1b05a0d9dd021f98352b6229e48e0d8b94f78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62b1b05a0d9dd021f98352b6229e48e0d8b94f78", "html_url": "https://github.com/rust-lang/rust/commit/62b1b05a0d9dd021f98352b6229e48e0d8b94f78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/comments", "author": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d62cfccbb8281f33b6f894df07e7316a9d45bfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d62cfccbb8281f33b6f894df07e7316a9d45bfb", "html_url": "https://github.com/rust-lang/rust/commit/4d62cfccbb8281f33b6f894df07e7316a9d45bfb"}], "stats": {"total": 160, "additions": 82, "deletions": 78}, "files": [{"sha": "c7e27781e06a5cc312045d336efeb58ec13eeb01", "filename": "editors/code/src/commands.ts", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4d62cfccbb8281f33b6f894df07e7316a9d45bfb/editors%2Fcode%2Fsrc%2Fcommands.ts", "raw_url": "https://github.com/rust-lang/rust/raw/4d62cfccbb8281f33b6f894df07e7316a9d45bfb/editors%2Fcode%2Fsrc%2Fcommands.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands.ts?ref=4d62cfccbb8281f33b6f894df07e7316a9d45bfb", "patch": "@@ -1,17 +0,0 @@\n-import * as applySourceChange from './commands/apply_source_change';\n-import * as extendSelection from './commands/extend_selection';\n-import * as joinLines from './commands/join_lines';\n-import * as matchingBrace from './commands/matching_brace';\n-import * as parentModule from './commands/parent_module';\n-import * as runnables from './commands/runnables';\n-import * as syntaxTree from './commands/syntaxTree';\n-\n-export {\n-    applySourceChange,\n-    extendSelection,\n-    joinLines,\n-    matchingBrace,\n-    parentModule,\n-    runnables,\n-    syntaxTree,\n-};"}, {"sha": "67765e5a3caaff5bd3a2e084eee852ccfba96a35", "filename": "editors/code/src/commands/apply_source_change.ts", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fcommands%2Fapply_source_change.ts", "raw_url": "https://github.com/rust-lang/rust/raw/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fcommands%2Fapply_source_change.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fapply_source_change.ts?ref=62b1b05a0d9dd021f98352b6229e48e0d8b94f78", "patch": "@@ -18,7 +18,6 @@ export interface SourceChange {\n }\n \n export async function handle(change: SourceChange) {\n-    console.log(`applySOurceChange ${JSON.stringify(change)}`);\n     const wsEdit = new vscode.WorkspaceEdit();\n     for (const sourceEdit of change.sourceFileEdits) {\n         const uri = Server.client.protocol2CodeConverter.asUri(sourceEdit.textDocument.uri);\n@@ -28,17 +27,18 @@ export async function handle(change: SourceChange) {\n     let created;\n     let moved;\n     for (const fsEdit of change.fileSystemEdits) {\n-        if (fsEdit.type == 'createFile') {\n-            const uri = vscode.Uri.parse(fsEdit.uri!);\n-            wsEdit.createFile(uri);\n-            created = uri;\n-        } else if (fsEdit.type == 'moveFile') {\n-            const src = vscode.Uri.parse(fsEdit.src!);\n-            const dst = vscode.Uri.parse(fsEdit.dst!);\n-            wsEdit.renameFile(src, dst);\n-            moved = dst;\n-        } else {\n-            console.error(`unknown op: ${JSON.stringify(fsEdit)}`);\n+        switch (fsEdit.type) {\n+            case 'createFile':\n+                const uri = vscode.Uri.parse(fsEdit.uri!);\n+                wsEdit.createFile(uri);\n+                created = uri;\n+                break;\n+            case 'moveFile':\n+                const src = vscode.Uri.parse(fsEdit.src!);\n+                const dst = vscode.Uri.parse(fsEdit.dst!);\n+                wsEdit.renameFile(src, dst);\n+                moved = dst;\n+                break;\n         }\n     }\n     const toOpen = created || moved;\n@@ -51,7 +51,7 @@ export async function handle(change: SourceChange) {\n         const uri = Server.client.protocol2CodeConverter.asUri(toReveal.textDocument.uri);\n         const position = Server.client.protocol2CodeConverter.asPosition(toReveal.position);\n         const editor = vscode.window.activeTextEditor;\n-        if (!editor || editor.document.uri.toString() != uri.toString()) { return; }\n+        if (!editor || editor.document.uri.toString() !== uri.toString()) { return; }\n         if (!editor.selection.isEmpty) { return; }\n         editor!.selection = new vscode.Selection(position, position);\n     }"}, {"sha": "cdc3d10fb3fd73d4f22a529cc73c9209d00c6515", "filename": "editors/code/src/commands/extend_selection.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fcommands%2Fextend_selection.ts", "raw_url": "https://github.com/rust-lang/rust/raw/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fcommands%2Fextend_selection.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fextend_selection.ts?ref=62b1b05a0d9dd021f98352b6229e48e0d8b94f78", "patch": "@@ -14,7 +14,7 @@ interface ExtendSelectionResult {\n \n export async function handle() {\n     const editor = vscode.window.activeTextEditor;\n-    if (editor == null || editor.document.languageId != 'rust') { return; }\n+    if (editor == null || editor.document.languageId !== 'rust') { return; }\n     const request: ExtendSelectionParams = {\n         selections: editor.selections.map((s) => {\n             return Server.client.code2ProtocolConverter.asRange(s);"}, {"sha": "dfdcd64545b03f2eab0be6d67845e99b4490ea74", "filename": "editors/code/src/commands/index.ts", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "raw_url": "https://github.com/rust-lang/rust/raw/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts?ref=62b1b05a0d9dd021f98352b6229e48e0d8b94f78", "patch": "@@ -0,0 +1,17 @@\n+import * as applySourceChange from './apply_source_change';\n+import * as extendSelection from './extend_selection';\n+import * as joinLines from './join_lines';\n+import * as matchingBrace from './matching_brace';\n+import * as parentModule from './parent_module';\n+import * as runnables from './runnables';\n+import * as syntaxTree from './syntaxTree';\n+\n+export {\n+    applySourceChange,\n+    extendSelection,\n+    joinLines,\n+    matchingBrace,\n+    parentModule,\n+    runnables,\n+    syntaxTree,\n+};"}, {"sha": "526b698ccd20b8cb479522260b79b3583a97d216", "filename": "editors/code/src/commands/join_lines.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fcommands%2Fjoin_lines.ts", "raw_url": "https://github.com/rust-lang/rust/raw/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fcommands%2Fjoin_lines.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fjoin_lines.ts?ref=62b1b05a0d9dd021f98352b6229e48e0d8b94f78", "patch": "@@ -11,7 +11,7 @@ interface JoinLinesParams {\n \n export async function handle() {\n     const editor = vscode.window.activeTextEditor;\n-    if (editor == null || editor.document.languageId != 'rust') { return; }\n+    if (editor == null || editor.document.languageId !== 'rust') { return; }\n     const request: JoinLinesParams = {\n         range: Server.client.code2ProtocolConverter.asRange(editor.selection),\n         textDocument: { uri: editor.document.uri.toString() },"}, {"sha": "a80446a8f58d0ba550bac90e4fa21412451dd887", "filename": "editors/code/src/commands/matching_brace.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fcommands%2Fmatching_brace.ts", "raw_url": "https://github.com/rust-lang/rust/raw/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fcommands%2Fmatching_brace.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fmatching_brace.ts?ref=62b1b05a0d9dd021f98352b6229e48e0d8b94f78", "patch": "@@ -10,7 +10,7 @@ interface FindMatchingBraceParams {\n \n export async function handle() {\n     const editor = vscode.window.activeTextEditor;\n-    if (editor == null || editor.document.languageId != 'rust') { return; }\n+    if (editor == null || editor.document.languageId !== 'rust') { return; }\n     const request: FindMatchingBraceParams = {\n         textDocument: { uri: editor.document.uri.toString() },\n         offsets: editor.selections.map((s) => {"}, {"sha": "d66fb30264d1602d3ae216a8377a4cb3f7ed2073", "filename": "editors/code/src/commands/parent_module.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fcommands%2Fparent_module.ts", "raw_url": "https://github.com/rust-lang/rust/raw/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fcommands%2Fparent_module.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fparent_module.ts?ref=62b1b05a0d9dd021f98352b6229e48e0d8b94f78", "patch": "@@ -5,7 +5,7 @@ import { Server } from '../server';\n \n export async function handle() {\n     const editor = vscode.window.activeTextEditor;\n-    if (editor == null || editor.document.languageId != 'rust') { return; }\n+    if (editor == null || editor.document.languageId !== 'rust') { return; }\n     const request: TextDocumentIdentifier = {\n         uri: editor.document.uri.toString(),\n     };"}, {"sha": "40f590dceb8e3cbc48d4e3576c2f33102a7041e5", "filename": "editors/code/src/commands/runnables.ts", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "raw_url": "https://github.com/rust-lang/rust/raw/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts?ref=62b1b05a0d9dd021f98352b6229e48e0d8b94f78", "patch": "@@ -59,7 +59,7 @@ function createTask(spec: Runnable): vscode.Task {\n let prevRunnable: RunnableQuickPick | undefined;\n export async function handle() {\n     const editor = vscode.window.activeTextEditor;\n-    if (editor == null || editor.document.languageId != 'rust') { return; }\n+    if (editor == null || editor.document.languageId !== 'rust') { return; }\n     const textDocument: lc.TextDocumentIdentifier = {\n         uri: editor.document.uri.toString(),\n     };\n@@ -73,7 +73,7 @@ export async function handle() {\n         items.push(prevRunnable);\n     }\n     for (const r of runnables) {\n-        if (prevRunnable && JSON.stringify(prevRunnable.runnable) == JSON.stringify(r)) {\n+        if (prevRunnable && JSON.stringify(prevRunnable.runnable) === JSON.stringify(r)) {\n             continue;\n         }\n         items.push(new RunnableQuickPick(r));"}, {"sha": "8e2ac4a469ad9f169376ff9a3e28ebefef4f0aee", "filename": "editors/code/src/events.ts", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4d62cfccbb8281f33b6f894df07e7316a9d45bfb/editors%2Fcode%2Fsrc%2Fevents.ts", "raw_url": "https://github.com/rust-lang/rust/raw/4d62cfccbb8281f33b6f894df07e7316a9d45bfb/editors%2Fcode%2Fsrc%2Fevents.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fevents.ts?ref=4d62cfccbb8281f33b6f894df07e7316a9d45bfb", "patch": "@@ -1,7 +0,0 @@\n-import * as changeActiveTextEditor from './events/change_active_text_editor';\n-import * as changeTextDocument from './events/change_text_document';\n-\n-export {\n-    changeActiveTextEditor,\n-    changeTextDocument,\n-};"}, {"sha": "3440aa0c37501e205371b0e5d8bd36dd371f3cf8", "filename": "editors/code/src/events/change_active_text_editor.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fevents%2Fchange_active_text_editor.ts", "raw_url": "https://github.com/rust-lang/rust/raw/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fevents%2Fchange_active_text_editor.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fevents%2Fchange_active_text_editor.ts?ref=62b1b05a0d9dd021f98352b6229e48e0d8b94f78", "patch": "@@ -5,7 +5,7 @@ import { Decoration } from '../highlighting';\n import { Server } from '../server';\n \n export async function handle(editor: TextEditor | undefined) {\n-    if (!Server.config.highlightingOn || !editor || editor.document.languageId != 'rust') { return; }\n+    if (!Server.config.highlightingOn || !editor || editor.document.languageId !== 'rust') { return; }\n     const params: TextDocumentIdentifier = {\n         uri: editor.document.uri.toString(),\n     };"}, {"sha": "b3000e026182c87771ad92fe8167bf65e808fd43", "filename": "editors/code/src/events/change_text_document.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fevents%2Fchange_text_document.ts", "raw_url": "https://github.com/rust-lang/rust/raw/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fevents%2Fchange_text_document.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fevents%2Fchange_text_document.ts?ref=62b1b05a0d9dd021f98352b6229e48e0d8b94f78", "patch": "@@ -5,7 +5,7 @@ import { syntaxTreeUri, TextDocumentContentProvider } from '../commands/syntaxTr\n export function createHandler(textDocumentContentProvider: TextDocumentContentProvider) {\n     return (event: vscode.TextDocumentChangeEvent) => {\n         const doc = event.document;\n-        if (doc.languageId != 'rust') { return; }\n+        if (doc.languageId !== 'rust') { return; }\n         afterLs(() => {\n             textDocumentContentProvider.eventEmitter.fire(syntaxTreeUri);\n         });"}, {"sha": "b570a7a926ab0ff8e9dfb3fda15ee061753ce15d", "filename": "editors/code/src/events/index.ts", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fevents%2Findex.ts", "raw_url": "https://github.com/rust-lang/rust/raw/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fevents%2Findex.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fevents%2Findex.ts?ref=62b1b05a0d9dd021f98352b6229e48e0d8b94f78", "patch": "@@ -0,0 +1,7 @@\n+import * as changeActiveTextEditor from './change_active_text_editor';\n+import * as changeTextDocument from './change_text_document';\n+\n+export {\n+    changeActiveTextEditor,\n+    changeTextDocument,\n+};"}, {"sha": "e2ac4d6290749355db8a728bce5295d16190c586", "filename": "editors/code/src/highlighting.ts", "status": "modified", "additions": 35, "deletions": 31, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "raw_url": "https://github.com/rust-lang/rust/raw/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fhighlighting.ts?ref=62b1b05a0d9dd021f98352b6229e48e0d8b94f78", "patch": "@@ -9,17 +9,42 @@ export interface Decoration {\n }\n \n export class Highlighter {\n-    private decorations: { [index: string]: vscode.TextEditorDecorationType };\n-    constructor() {\n-        this.decorations = {};\n+    private static initDecorations(): Map<string, vscode.TextEditorDecorationType> {\n+        const decor = (color: string) => vscode.window.createTextEditorDecorationType({ color });\n+\n+        const decorations: Iterable<[string, vscode.TextEditorDecorationType]> = [\n+            ['background', decor('#3F3F3F')],\n+            ['error', vscode.window.createTextEditorDecorationType({\n+                borderColor: 'red',\n+                borderStyle: 'none none dashed none',\n+            })],\n+            ['comment', decor('#7F9F7F')],\n+            ['string', decor('#CC9393')],\n+            ['keyword', decor('#F0DFAF')],\n+            ['function', decor('#93E0E3')],\n+            ['parameter', decor('#94BFF3')],\n+            ['builtin', decor('#DD6718')],\n+            ['text', decor('#DCDCCC')],\n+            ['attribute', decor('#BFEBBF')],\n+            ['literal', decor('#DFAF8F')],\n+        ];\n+\n+        return new Map<string, vscode.TextEditorDecorationType>(decorations);\n     }\n \n+    private decorations: (Map<string, vscode.TextEditorDecorationType> | null) = null;\n+\n     public removeHighlights() {\n-        for (const tag in this.decorations) {\n-            this.decorations[tag].dispose();\n+        if (this.decorations == null) {\n+            return;\n         }\n \n-        this.decorations = {};\n+        // Decorations are removed when the object is disposed\n+        for (const decoration of this.decorations.values()) {\n+            decoration.dispose();\n+        }\n+\n+        this.decorations = null;\n     }\n \n     public setHighlights(\n@@ -30,18 +55,17 @@ export class Highlighter {\n         //\n         // Note: decoration objects need to be kept around so we can dispose them\n         // if the user disables syntax highlighting\n-        if (Object.keys(this.decorations).length === 0) {\n-            this.initDecorations();\n+        if (this.decorations == null) {\n+            this.decorations = Highlighter.initDecorations();\n         }\n \n         const byTag: Map<string, vscode.Range[]> = new Map();\n-        for (const tag in this.decorations) {\n+        for (const tag of this.decorations.keys()) {\n             byTag.set(tag, []);\n         }\n \n         for (const d of highlights) {\n             if (!byTag.get(d.tag)) {\n-                console.log(`unknown tag ${d.tag}`);\n                 continue;\n             }\n             byTag.get(d.tag)!.push(\n@@ -50,29 +74,9 @@ export class Highlighter {\n         }\n \n         for (const tag of byTag.keys()) {\n-            const dec: vscode.TextEditorDecorationType = this.decorations[tag];\n+            const dec = this.decorations.get(tag) as vscode.TextEditorDecorationType;\n             const ranges = byTag.get(tag)!;\n             editor.setDecorations(dec, ranges);\n         }\n     }\n-\n-    private initDecorations() {\n-        const decor = (obj: any) => vscode.window.createTextEditorDecorationType({ color: obj });\n-        this.decorations = {\n-            background: decor('#3F3F3F'),\n-            error: vscode.window.createTextEditorDecorationType({\n-                borderColor: 'red',\n-                borderStyle: 'none none dashed none',\n-            }),\n-            comment: decor('#7F9F7F'),\n-            string: decor('#CC9393'),\n-            keyword: decor('#F0DFAF'),\n-            function: decor('#93E0E3'),\n-            parameter: decor('#94BFF3'),\n-            builtin: decor('#DD6718'),\n-            text: decor('#DCDCCC'),\n-            attribute: decor('#BFEBBF'),\n-            literal: decor('#DFAF8F'),\n-        };\n-    }\n }"}, {"sha": "325023e36afbbc7251033a1e8a715aa846f4a64b", "filename": "editors/code/src/server.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fserver.ts", "raw_url": "https://github.com/rust-lang/rust/raw/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Fsrc%2Fserver.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fserver.ts?ref=62b1b05a0d9dd021f98352b6229e48e0d8b94f78", "patch": "@@ -34,7 +34,7 @@ export class Server {\n                 'm/publishDecorations',\n                 (params: PublishDecorationsParams) => {\n                     const targetEditor = vscode.window.visibleTextEditors.find(\n-                        (editor) => editor.document.uri.toString() == params.uri,\n+                        (editor) => editor.document.uri.toString() === params.uri,\n                     );\n                     if (!Server.config.highlightingOn || !targetEditor) { return; }\n                     Server.highlighter.setHighlights("}, {"sha": "ce48dfc95e158c3c5144c7bc5dac0e06dd3ac8b3", "filename": "editors/code/tslint.json", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Ftslint.json", "raw_url": "https://github.com/rust-lang/rust/raw/62b1b05a0d9dd021f98352b6229e48e0d8b94f78/editors%2Fcode%2Ftslint.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Ftslint.json?ref=62b1b05a0d9dd021f98352b6229e48e0d8b94f78", "patch": "@@ -1,5 +1,5 @@\n {\n-    \"defaultSeverity\": \"warning\",\n+    \"defaultSeverity\": \"error\",\n     \"extends\": [\n         \"tslint:recommended\"\n     ],"}]}