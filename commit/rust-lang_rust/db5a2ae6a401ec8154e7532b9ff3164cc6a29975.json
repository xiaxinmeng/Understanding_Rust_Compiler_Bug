{"sha": "db5a2ae6a401ec8154e7532b9ff3164cc6a29975", "node_id": "C_kwDOAAsO6NoAKGRiNWEyYWU2YTQwMWVjODE1NGU3NTMyYjlmZjMxNjRjYzZhMjk5NzU", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-12-07T21:32:03Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-12-07T21:40:25Z"}, "message": "Define c_char using cfg_if rather than repeating 40-line cfg", "tree": {"sha": "ebd7b958f54c2fbb275be9ea5d9f008177367ef2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebd7b958f54c2fbb275be9ea5d9f008177367ef2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db5a2ae6a401ec8154e7532b9ff3164cc6a29975", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmGv1NUACgkQ+boUO5X/\nbYIa9g/8DFBxxqNlla6F7FWQQPR37SQX+aIz7VKODNkNrC9v4uXv1/mH55UGSrDj\nQbDjquB3Zu5wdmSf+qda5oM6RgSlngbAsJCTOk4Mcty78AYUzYp1Iit6s0xTet2+\nRkVSAryCyd74bQ2LvHY4KyzF1mfoKa0km/ak5uYNtx5Erjc7n7BhkcZHWKeEwhtr\nvIBw4yHILbXK9PnXEOkoE1zIZRJvPQq/xHXNgFMuDpam0oQaE04WNMCHFK9jE9D6\n/VMBzSyI/aHUCiKFhJp8JsfMSEAOaxtLqvEYPJpbj+o3meeKBEkr2ZwjZYRSPi2d\nRBr2MUV7s3OiWL+LzlCsNOygeeFYvqa8f0jKH194WIph+6C6nX66e1hvpXCYrcDw\nHTcGT/aKcpFnOCzNaHQwFWRppxQcpHliqqXwwXFhhJjmfr13mOrItK8Wh7Cx7U+e\nbTlppiSVapZPti2L1Gk+LbURdwK3uEWdA6qq/7qai46Y7BK3prKtpqQ8E+fsk5qT\nfLtdVwQXx9xpfj1onjIjNJnfhRCUNsbk+BPClLvXBrwcIqvVUNHYQ7c8LD3WDG8j\nugAV7gxvjnoAlbeNmRlrD3BAyEljF9rCVtxl7Fvzy/ny1vJOcqpwhJpGgXiISzIX\nH+QDbWpnQ5B/xYXbiwIg9sfIKo16Akxa/QWE1c7bsgrf/Gu/TP0=\n=xldf\n-----END PGP SIGNATURE-----", "payload": "tree ebd7b958f54c2fbb275be9ea5d9f008177367ef2\nparent 0b6f079e4987ded15c13a15b734e7cfb8176839f\nauthor David Tolnay <dtolnay@gmail.com> 1638912723 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1638913225 -0800\n\nDefine c_char using cfg_if rather than repeating 40-line cfg\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db5a2ae6a401ec8154e7532b9ff3164cc6a29975", "html_url": "https://github.com/rust-lang/rust/commit/db5a2ae6a401ec8154e7532b9ff3164cc6a29975", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db5a2ae6a401ec8154e7532b9ff3164cc6a29975/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b6f079e4987ded15c13a15b734e7cfb8176839f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b6f079e4987ded15c13a15b734e7cfb8176839f", "html_url": "https://github.com/rust-lang/rust/commit/0b6f079e4987ded15c13a15b734e7cfb8176839f"}], "stats": {"total": 145, "additions": 57, "deletions": 88}, "files": [{"sha": "c439c13938ba411ecf7c1176088ad0b82b96eca7", "filename": "library/std/src/os/raw/mod.rs", "status": "modified", "additions": 57, "deletions": 88, "changes": 145, "blob_url": "https://github.com/rust-lang/rust/blob/db5a2ae6a401ec8154e7532b9ff3164cc6a29975/library%2Fstd%2Fsrc%2Fos%2Fraw%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db5a2ae6a401ec8154e7532b9ff3164cc6a29975/library%2Fstd%2Fsrc%2Fos%2Fraw%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fraw%2Fmod.rs?ref=db5a2ae6a401ec8154e7532b9ff3164cc6a29975", "patch": "@@ -45,94 +45,8 @@ macro_rules! type_alias {\n     }\n }\n \n-type_alias! { \"char.md\", c_char = u8, NonZero_c_char = NonZeroU8;\n-#[doc(cfg(all()))]\n-#[cfg(any(\n-    all(\n-        target_os = \"linux\",\n-        any(\n-            target_arch = \"aarch64\",\n-            target_arch = \"arm\",\n-            target_arch = \"hexagon\",\n-            target_arch = \"powerpc\",\n-            target_arch = \"powerpc64\",\n-            target_arch = \"s390x\",\n-            target_arch = \"riscv64\",\n-            target_arch = \"riscv32\"\n-        )\n-    ),\n-    all(target_os = \"android\", any(target_arch = \"aarch64\", target_arch = \"arm\")),\n-    all(target_os = \"l4re\", target_arch = \"x86_64\"),\n-    all(\n-        target_os = \"freebsd\",\n-        any(\n-            target_arch = \"aarch64\",\n-            target_arch = \"arm\",\n-            target_arch = \"powerpc\",\n-            target_arch = \"powerpc64\",\n-            target_arch = \"riscv64\"\n-        )\n-    ),\n-    all(\n-        target_os = \"netbsd\",\n-        any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"powerpc\")\n-    ),\n-    all(target_os = \"openbsd\", target_arch = \"aarch64\"),\n-    all(\n-        target_os = \"vxworks\",\n-        any(\n-            target_arch = \"aarch64\",\n-            target_arch = \"arm\",\n-            target_arch = \"powerpc64\",\n-            target_arch = \"powerpc\"\n-        )\n-    ),\n-    all(target_os = \"fuchsia\", target_arch = \"aarch64\")\n-))]}\n-type_alias! { \"char.md\", c_char = i8, NonZero_c_char = NonZeroI8;\n-#[doc(cfg(all()))]\n-#[cfg(not(any(\n-    all(\n-        target_os = \"linux\",\n-        any(\n-            target_arch = \"aarch64\",\n-            target_arch = \"arm\",\n-            target_arch = \"hexagon\",\n-            target_arch = \"powerpc\",\n-            target_arch = \"powerpc64\",\n-            target_arch = \"s390x\",\n-            target_arch = \"riscv64\",\n-            target_arch = \"riscv32\"\n-        )\n-    ),\n-    all(target_os = \"android\", any(target_arch = \"aarch64\", target_arch = \"arm\")),\n-    all(target_os = \"l4re\", target_arch = \"x86_64\"),\n-    all(\n-        target_os = \"freebsd\",\n-        any(\n-            target_arch = \"aarch64\",\n-            target_arch = \"arm\",\n-            target_arch = \"powerpc\",\n-            target_arch = \"powerpc64\",\n-            target_arch = \"riscv64\"\n-        )\n-    ),\n-    all(\n-        target_os = \"netbsd\",\n-        any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"powerpc\")\n-    ),\n-    all(target_os = \"openbsd\", target_arch = \"aarch64\"),\n-    all(\n-        target_os = \"vxworks\",\n-        any(\n-            target_arch = \"aarch64\",\n-            target_arch = \"arm\",\n-            target_arch = \"powerpc64\",\n-            target_arch = \"powerpc\"\n-        )\n-    ),\n-    all(target_os = \"fuchsia\", target_arch = \"aarch64\")\n-)))]}\n+type_alias! { \"char.md\", c_char = c_char_definition::c_char, NonZero_c_char = c_char_definition::NonZero_c_char;\n+#[doc(cfg(all()))] }\n type_alias! { \"schar.md\", c_schar = i8, NonZero_c_schar = NonZeroI8; }\n type_alias! { \"uchar.md\", c_uchar = u8, NonZero_c_uchar = NonZeroU8; }\n type_alias! { \"short.md\", c_short = i16, NonZero_c_short = NonZeroI16; }\n@@ -180,3 +94,58 @@ pub type c_ptrdiff_t = isize;\n /// platforms where this is not the case.\n #[unstable(feature = \"c_size_t\", issue = \"88345\")]\n pub type c_ssize_t = isize;\n+\n+mod c_char_definition {\n+    cfg_if::cfg_if! {\n+        // These are the targets on which c_char is unsigned.\n+        if #[cfg(any(\n+            all(\n+                target_os = \"linux\",\n+                any(\n+                    target_arch = \"aarch64\",\n+                    target_arch = \"arm\",\n+                    target_arch = \"hexagon\",\n+                    target_arch = \"powerpc\",\n+                    target_arch = \"powerpc64\",\n+                    target_arch = \"s390x\",\n+                    target_arch = \"riscv64\",\n+                    target_arch = \"riscv32\"\n+                )\n+            ),\n+            all(target_os = \"android\", any(target_arch = \"aarch64\", target_arch = \"arm\")),\n+            all(target_os = \"l4re\", target_arch = \"x86_64\"),\n+            all(\n+                target_os = \"freebsd\",\n+                any(\n+                    target_arch = \"aarch64\",\n+                    target_arch = \"arm\",\n+                    target_arch = \"powerpc\",\n+                    target_arch = \"powerpc64\",\n+                    target_arch = \"riscv64\"\n+                )\n+            ),\n+            all(\n+                target_os = \"netbsd\",\n+                any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"powerpc\")\n+            ),\n+            all(target_os = \"openbsd\", target_arch = \"aarch64\"),\n+            all(\n+                target_os = \"vxworks\",\n+                any(\n+                    target_arch = \"aarch64\",\n+                    target_arch = \"arm\",\n+                    target_arch = \"powerpc64\",\n+                    target_arch = \"powerpc\"\n+                )\n+            ),\n+            all(target_os = \"fuchsia\", target_arch = \"aarch64\")\n+        ))] {\n+            pub type c_char = u8;\n+            pub type NonZero_c_char = core::num::NonZeroU8;\n+        } else {\n+            // On every other target, c_char is signed.\n+            pub type c_char = i8;\n+            pub type NonZero_c_char = core::num::NonZeroI8;\n+        }\n+    }\n+}"}]}