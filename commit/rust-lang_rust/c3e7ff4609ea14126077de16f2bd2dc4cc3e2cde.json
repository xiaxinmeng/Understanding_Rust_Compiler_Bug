{"sha": "c3e7ff4609ea14126077de16f2bd2dc4cc3e2cde", "node_id": "C_kwDOAAsO6NoAKGMzZTdmZjQ2MDllYTE0MTI2MDc3ZGUxNmYyYmQyZGM0Y2MzZTJjZGU", "commit": {"author": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2023-05-07T23:33:58Z"}, "committer": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2023-05-10T00:34:16Z"}, "message": "Adopt the measureme output naming strategy from rustc", "tree": {"sha": "faceb9ed4e9d1746a3f457a3b766e38863d90c94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/faceb9ed4e9d1746a3f457a3b766e38863d90c94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3e7ff4609ea14126077de16f2bd2dc4cc3e2cde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3e7ff4609ea14126077de16f2bd2dc4cc3e2cde", "html_url": "https://github.com/rust-lang/rust/commit/c3e7ff4609ea14126077de16f2bd2dc4cc3e2cde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3e7ff4609ea14126077de16f2bd2dc4cc3e2cde/comments", "author": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84f80f1fc9f89c8abbbbcbe55cc0bd1d0ae21c28", "url": "https://api.github.com/repos/rust-lang/rust/commits/84f80f1fc9f89c8abbbbcbe55cc0bd1d0ae21c28", "html_url": "https://github.com/rust-lang/rust/commit/84f80f1fc9f89c8abbbbcbe55cc0bd1d0ae21c28"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "b91efae3bcbacae6663c7f96863b868091e1d986", "filename": "src/tools/miri/src/machine.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c3e7ff4609ea14126077de16f2bd2dc4cc3e2cde/src%2Ftools%2Fmiri%2Fsrc%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3e7ff4609ea14126077de16f2bd2dc4cc3e2cde/src%2Ftools%2Fmiri%2Fsrc%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fmachine.rs?ref=c3e7ff4609ea14126077de16f2bd2dc4cc3e2cde", "patch": "@@ -4,6 +4,8 @@\n use std::borrow::Cow;\n use std::cell::RefCell;\n use std::fmt;\n+use std::path::Path;\n+use std::process;\n \n use rand::rngs::StdRng;\n use rand::SeedableRng;\n@@ -498,7 +500,17 @@ impl<'mir, 'tcx> MiriMachine<'mir, 'tcx> {\n         let layouts =\n             PrimitiveLayouts::new(layout_cx).expect(\"Couldn't get layouts of primitive types\");\n         let profiler = config.measureme_out.as_ref().map(|out| {\n-            measureme::Profiler::new(out).expect(\"Couldn't create `measureme` profiler\")\n+            let crate_name = layout_cx\n+                .tcx\n+                .sess\n+                .opts\n+                .crate_name\n+                .clone()\n+                .unwrap_or_else(|| \"unknown-crate\".to_string());\n+            let pid = process::id();\n+            let filename = format!(\"{crate_name}-{pid:07}\");\n+            let path = Path::new(out).join(filename);\n+            measureme::Profiler::new(path).expect(\"Couldn't create `measureme` profiler\")\n         });\n         let rng = StdRng::seed_from_u64(config.seed.unwrap_or(0));\n         let borrow_tracker = config.borrow_tracker.map(|bt| bt.instantiate_global_state(config));"}]}