{"sha": "a3782671cf1e190ffa470128a53329177b2c9a2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzNzgyNjcxY2YxZTE5MGZmYTQ3MDEyOGE1MzMyOTE3N2IyYzlhMmY=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-03-23T01:21:51Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-03-24T01:07:26Z"}, "message": "Remove several dead `-Z` options.", "tree": {"sha": "60e43ab1b9c6386fc8452eb7ed054c6b9be55c22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60e43ab1b9c6386fc8452eb7ed054c6b9be55c22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3782671cf1e190ffa470128a53329177b2c9a2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3782671cf1e190ffa470128a53329177b2c9a2f", "html_url": "https://github.com/rust-lang/rust/commit/a3782671cf1e190ffa470128a53329177b2c9a2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3782671cf1e190ffa470128a53329177b2c9a2f/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa432597ea463f3c9cae4a8116154f9dc0114858", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa432597ea463f3c9cae4a8116154f9dc0114858", "html_url": "https://github.com/rust-lang/rust/commit/fa432597ea463f3c9cae4a8116154f9dc0114858"}], "stats": {"total": 10, "additions": 0, "deletions": 10}, "files": [{"sha": "935b1e00ed662cbfd0f132e54160d55a5f65d2d0", "filename": "src/librustc_interface/tests.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a3782671cf1e190ffa470128a53329177b2c9a2f/src%2Flibrustc_interface%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3782671cf1e190ffa470128a53329177b2c9a2f/src%2Flibrustc_interface%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Ftests.rs?ref=a3782671cf1e190ffa470128a53329177b2c9a2f", "patch": "@@ -560,8 +560,6 @@ fn test_debugging_options_tracking_hash() {\n     assert_eq!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n     opts.debugging_opts.keep_hygiene_data = true;\n     assert_eq!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n-    opts.debugging_opts.keep_ast = true;\n-    assert_eq!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n     opts.debugging_opts.print_mono_items = Some(String::from(\"abc\"));\n     assert_eq!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n     opts.debugging_opts.dump_mir = Some(String::from(\"abc\"));"}, {"sha": "f4d4c09536817c67ebcf2ff1da113c599d2ab234", "filename": "src/librustc_session/options.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a3782671cf1e190ffa470128a53329177b2c9a2f/src%2Flibrustc_session%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3782671cf1e190ffa470128a53329177b2c9a2f/src%2Flibrustc_session%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Foptions.rs?ref=a3782671cf1e190ffa470128a53329177b2c9a2f", "patch": "@@ -793,8 +793,6 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"enable incremental compilation (experimental)\"),\n     incremental_info: bool = (false, parse_bool, [UNTRACKED],\n         \"print high-level information about incremental reuse (or the lack thereof)\"),\n-    incremental_dump_hash: bool = (false, parse_bool, [UNTRACKED],\n-        \"dump hash information in textual format to stdout\"),\n     incremental_verify_ich: bool = (false, parse_bool, [UNTRACKED],\n         \"verify incr. comp. hashes of green query instances\"),\n     incremental_ignore_spans: bool = (false, parse_bool, [UNTRACKED],\n@@ -819,8 +817,6 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"don't generate DWARF address ranges that give faster lookups\"),\n     keep_hygiene_data: bool = (false, parse_bool, [UNTRACKED],\n         \"don't clear the hygiene data after analysis\"),\n-    keep_ast: bool = (false, parse_bool, [UNTRACKED],\n-        \"keep the AST after lowering it to HIR\"),\n     show_span: Option<String> = (None, parse_opt_string, [TRACKED],\n         \"show spans for compiler debugging (expr|pat|ty)\"),\n     print_type_sizes: bool = (false, parse_bool, [UNTRACKED],\n@@ -855,8 +851,6 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"print some statistics about AST and HIR\"),\n     always_encode_mir: bool = (false, parse_bool, [TRACKED],\n         \"encode MIR of all functions into the crate metadata\"),\n-    json_rendered: Option<String> = (None, parse_opt_string, [UNTRACKED],\n-        \"describes how to render the `rendered` field of json diagnostics\"),\n     unleash_the_miri_inside_of_you: bool = (false, parse_bool, [TRACKED],\n         \"take the breaks off const evaluation. NOTE: this is unsound\"),\n     osx_rpath_install_name: bool = (false, parse_bool, [TRACKED],\n@@ -887,8 +881,6 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"emit diagnostics rather than buffering (breaks NLL error downgrading, sorting).\"),\n     polonius: bool = (false, parse_bool, [UNTRACKED],\n         \"enable polonius-based borrow-checker\"),\n-    codegen_time_graph: bool = (false, parse_bool, [UNTRACKED],\n-        \"generate a graphical HTML report of time spent in codegen and LLVM\"),\n     thinlto: Option<bool> = (None, parse_opt_bool, [TRACKED],\n         \"enable ThinLTO when possible\"),\n     inline_in_all_cgus: Option<bool> = (None, parse_opt_bool, [TRACKED],"}]}