{"sha": "cf26120fbb2d541797b473ab59cdf9c0efb5c002", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmMjYxMjBmYmIyZDU0MTc5N2I0NzNhYjU5Y2RmOWMwZWZiNWMwMDI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-30T12:09:34Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-30T12:10:42Z"}, "message": "rename did -> def_id", "tree": {"sha": "06a6e5b455c93d14cc76810ed858b518a1e440ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06a6e5b455c93d14cc76810ed858b518a1e440ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf26120fbb2d541797b473ab59cdf9c0efb5c002", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf26120fbb2d541797b473ab59cdf9c0efb5c002", "html_url": "https://github.com/rust-lang/rust/commit/cf26120fbb2d541797b473ab59cdf9c0efb5c002", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf26120fbb2d541797b473ab59cdf9c0efb5c002/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41c36fabefbf20351a9c8263a17131e15b19d35a", "url": "https://api.github.com/repos/rust-lang/rust/commits/41c36fabefbf20351a9c8263a17131e15b19d35a", "html_url": "https://github.com/rust-lang/rust/commit/41c36fabefbf20351a9c8263a17131e15b19d35a"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "dae5f1b8cd25444d25270d8c58485ce3d3556b5b", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cf26120fbb2d541797b473ab59cdf9c0efb5c002/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf26120fbb2d541797b473ab59cdf9c0efb5c002/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=cf26120fbb2d541797b473ab59cdf9c0efb5c002", "patch": "@@ -1183,11 +1183,11 @@ fn collect_miri<'a, 'tcx>(\n ) {\n     let alloc_kind = tcx.alloc_map.lock().get(alloc_id);\n     match alloc_kind {\n-        Some(GlobalAlloc::Static(did)) => {\n-            let instance = Instance::mono(tcx, did);\n+        Some(GlobalAlloc::Static(def_id)) => {\n+            let instance = Instance::mono(tcx, def_id);\n             if should_monomorphize_locally(tcx, &instance) {\n-                trace!(\"collecting static {:?}\", did);\n-                output.push(MonoItem::Static(did));\n+                trace!(\"collecting static {:?}\", def_id);\n+                output.push(MonoItem::Static(def_id));\n             }\n         }\n         Some(GlobalAlloc::Memory(alloc)) => {\n@@ -1263,7 +1263,7 @@ fn collect_const<'a, 'tcx>(\n                 collect_miri(tcx, id, output);\n             }\n         }\n-        ConstValue::Unevaluated(did, substs) => {\n+        ConstValue::Unevaluated(def_id, substs) => {\n             let param_env = ty::ParamEnv::reveal_all();\n             let substs = tcx.subst_and_normalize_erasing_regions(\n                 param_substs,\n@@ -1272,7 +1272,7 @@ fn collect_const<'a, 'tcx>(\n             );\n             let instance = ty::Instance::resolve(tcx,\n                                                 param_env,\n-                                                did,\n+                                                def_id,\n                                                 substs).unwrap();\n \n             let cid = GlobalId {\n@@ -1283,7 +1283,7 @@ fn collect_const<'a, 'tcx>(\n                 Ok(val) => collect_const(tcx, val, param_substs, output),\n                 Err(ErrorHandled::Reported) => {},\n                 Err(ErrorHandled::TooGeneric) => span_bug!(\n-                    tcx.def_span(did), \"collection encountered polymorphic constant\",\n+                    tcx.def_span(def_id), \"collection encountered polymorphic constant\",\n                 ),\n             }\n         }"}]}