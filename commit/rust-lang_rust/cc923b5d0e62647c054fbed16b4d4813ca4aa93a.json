{"sha": "cc923b5d0e62647c054fbed16b4d4813ca4aa93a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjOTIzYjVkMGU2MjY0N2MwNTRmYmVkMTZiNGQ0ODEzY2E0YWE5M2E=", "commit": {"author": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-10T14:40:40Z"}, "committer": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T15:22:32Z"}, "message": "clean tests/ui/block_in_if_condition.rs\n\nCleaning the empty lines for clarity.", "tree": {"sha": "dee8e97f169c0232ec2c1551cba6a9da3efece69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dee8e97f169c0232ec2c1551cba6a9da3efece69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc923b5d0e62647c054fbed16b4d4813ca4aa93a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc923b5d0e62647c054fbed16b4d4813ca4aa93a", "html_url": "https://github.com/rust-lang/rust/commit/cc923b5d0e62647c054fbed16b4d4813ca4aa93a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc923b5d0e62647c054fbed16b4d4813ca4aa93a/comments", "author": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c9d9d9f6cf3230013d70b60a4d15c04534adcb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c9d9d9f6cf3230013d70b60a4d15c04534adcb2", "html_url": "https://github.com/rust-lang/rust/commit/0c9d9d9f6cf3230013d70b60a4d15c04534adcb2"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "648327717155b6fc51e4a328e6bcb08077aa27d1", "filename": "tests/ui/block_in_if_condition.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cc923b5d0e62647c054fbed16b4d4813ca4aa93a/tests%2Fui%2Fblock_in_if_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc923b5d0e62647c054fbed16b4d4813ca4aa93a/tests%2Fui%2Fblock_in_if_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblock_in_if_condition.rs?ref=cc923b5d0e62647c054fbed16b4d4813ca4aa93a", "patch": "@@ -56,13 +56,10 @@ fn pred_test() {\n     // inside a closure that the condition is using.  same principle applies.  add some extra\n     // expressions to make sure linter isn't confused by them.\n     if v == 3 && sky == \"blue\" && predicate(|x| { let target = 3; x == target }, v) {\n-\n     }\n \n     if predicate(|x| { let target = 3; x == target }, v) {\n-\n     }\n-\n }\n \n fn condition_is_normal() -> i32 {"}, {"sha": "fb7f11798633fcb6154352908e8c2f7ac423b71d", "filename": "tests/ui/block_in_if_condition.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cc923b5d0e62647c054fbed16b4d4813ca4aa93a/tests%2Fui%2Fblock_in_if_condition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc923b5d0e62647c054fbed16b4d4813ca4aa93a/tests%2Fui%2Fblock_in_if_condition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblock_in_if_condition.stderr?ref=cc923b5d0e62647c054fbed16b4d4813ca4aa93a", "patch": "@@ -45,15 +45,15 @@ error: in an 'if' condition, avoid complex blocks or closures with blocks; inste\n    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: in an 'if' condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a 'let'\n-  --> $DIR/block_in_if_condition.rs:62:22\n+  --> $DIR/block_in_if_condition.rs:61:22\n    |\n-62 |     if predicate(|x| { let target = 3; x == target }, v) {\n+61 |     if predicate(|x| { let target = 3; x == target }, v) {\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: this boolean expression can be simplified\n-  --> $DIR/block_in_if_condition.rs:70:8\n+  --> $DIR/block_in_if_condition.rs:67:8\n    |\n-70 |     if true && x == 3 {\n+67 |     if true && x == 3 {\n    |        ^^^^^^^^^^^^^^ help: try `x == 3`\n    |\n note: lint level defined here"}]}