{"sha": "3b1e7b1fc9853497140f7f5371882234f0295893", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiMWU3YjFmYzk4NTM0OTcxNDBmN2Y1MzcxODgyMjM0ZjAyOTU4OTM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-08-22T18:52:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-22T18:52:51Z"}, "message": "Rollup merge of #87166 - de-vri-es:show-discriminant-before-overflow, r=jackh726\n\nShow discriminant before overflow in diagnostic for duplicate values.\n\nThis PR adds the value before overflow for explicit discriminant values in the error for duplicate discriminant values.\nI found it rather confusing to see only the overflowed value.\n\nIt only does this for literals, since overflows in const evaluated arithmetic are already a hard error.\n\nThis is my first PR to the compiler, so please let me know if the implementation can be improved :)\n\nBefore:\n![image](https://user-images.githubusercontent.com/786213/125850097-bf5fb7e0-d800-4386-a738-c30f41822964.png)\n\nAfter:\n![image](https://user-images.githubusercontent.com/786213/125850120-e2bb765d-ad86-4888-a6cb-dec34fba3fea.png)", "tree": {"sha": "ac00ffb1283c9807767e2dd2ebac82f4bd6b64eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac00ffb1283c9807767e2dd2ebac82f4bd6b64eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b1e7b1fc9853497140f7f5371882234f0295893", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhIp0DCRBK7hj4Ov3rIwAAM5AIAAXAvEYMrnoO6s96bE4tFxj1\nqrSC7xdn3HDmsetGoqIFv83zWwqpaSALpstisrfJT4diZ4CmF2Dgh69PcxRvrxmu\nqP6H9Sjv05lhhJwmJUZLe73D8KE/lTzJUi62awttD4p7kzJgz0t/eZOVtg7AFkbv\nspY4O0rDxpW/nyyRLjFomhzw+XXyYEOHd7/ojPXKEDAaBmYTRHF20j7vJQSXUbqG\n5qn6FU3itm7Z1p70zqFY6mbP4S3RKr5/ctg2rmJzj8UGd+F+1U5MFlSytW2XLqjI\nVJ1s9OI039VTc+/an6bSEistFeEhmRuVqC1JwRT62WQ7HjC7gAi+q8K+kcfNW5Q=\n=iK7c\n-----END PGP SIGNATURE-----\n", "payload": "tree ac00ffb1283c9807767e2dd2ebac82f4bd6b64eb\nparent 2627db6a3cc4115cc3ff7a1597eb44347acb0c54\nparent 4c0ff4db80d2c6cb4dc204f65f34ce2246e27bfe\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1629658371 +0200\ncommitter GitHub <noreply@github.com> 1629658371 +0200\n\nRollup merge of #87166 - de-vri-es:show-discriminant-before-overflow, r=jackh726\n\nShow discriminant before overflow in diagnostic for duplicate values.\n\nThis PR adds the value before overflow for explicit discriminant values in the error for duplicate discriminant values.\nI found it rather confusing to see only the overflowed value.\n\nIt only does this for literals, since overflows in const evaluated arithmetic are already a hard error.\n\nThis is my first PR to the compiler, so please let me know if the implementation can be improved :)\n\nBefore:\n![image](https://user-images.githubusercontent.com/786213/125850097-bf5fb7e0-d800-4386-a738-c30f41822964.png)\n\nAfter:\n![image](https://user-images.githubusercontent.com/786213/125850120-e2bb765d-ad86-4888-a6cb-dec34fba3fea.png)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b1e7b1fc9853497140f7f5371882234f0295893", "html_url": "https://github.com/rust-lang/rust/commit/3b1e7b1fc9853497140f7f5371882234f0295893", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b1e7b1fc9853497140f7f5371882234f0295893/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2627db6a3cc4115cc3ff7a1597eb44347acb0c54", "url": "https://api.github.com/repos/rust-lang/rust/commits/2627db6a3cc4115cc3ff7a1597eb44347acb0c54", "html_url": "https://github.com/rust-lang/rust/commit/2627db6a3cc4115cc3ff7a1597eb44347acb0c54"}, {"sha": "4c0ff4db80d2c6cb4dc204f65f34ce2246e27bfe", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c0ff4db80d2c6cb4dc204f65f34ce2246e27bfe", "html_url": "https://github.com/rust-lang/rust/commit/4c0ff4db80d2c6cb4dc204f65f34ce2246e27bfe"}], "stats": {"total": 60, "additions": 52, "deletions": 8}, "files": [{"sha": "aae9518ad5140b22b47c8b881156800e48fdeacf", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/3b1e7b1fc9853497140f7f5371882234f0295893/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b1e7b1fc9853497140f7f5371882234f0295893/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=3b1e7b1fc9853497140f7f5371882234f0295893", "patch": "@@ -1413,15 +1413,17 @@ fn check_enum<'tcx>(\n                 Some(ref expr) => tcx.hir().span(expr.hir_id),\n                 None => v.span,\n             };\n+            let display_discr = display_discriminant_value(tcx, v, discr.val);\n+            let display_discr_i = display_discriminant_value(tcx, variant_i, disr_vals[i].val);\n             struct_span_err!(\n                 tcx.sess,\n                 span,\n                 E0081,\n                 \"discriminant value `{}` already exists\",\n-                disr_vals[i]\n+                discr.val,\n             )\n-            .span_label(i_span, format!(\"first use of `{}`\", disr_vals[i]))\n-            .span_label(span, format!(\"enum already has `{}`\", disr_vals[i]))\n+            .span_label(i_span, format!(\"first use of {}\", display_discr_i))\n+            .span_label(span, format!(\"enum already has {}\", display_discr))\n             .emit();\n         }\n         disr_vals.push(discr);\n@@ -1431,6 +1433,25 @@ fn check_enum<'tcx>(\n     check_transparent(tcx, sp, def);\n }\n \n+/// Format an enum discriminant value for use in a diagnostic message.\n+fn display_discriminant_value<'tcx>(\n+    tcx: TyCtxt<'tcx>,\n+    variant: &hir::Variant<'_>,\n+    evaluated: u128,\n+) -> String {\n+    if let Some(expr) = &variant.disr_expr {\n+        let body = &tcx.hir().body(expr.body).value;\n+        if let hir::ExprKind::Lit(lit) = &body.kind {\n+            if let rustc_ast::LitKind::Int(lit_value, _int_kind) = &lit.node {\n+                if evaluated != *lit_value {\n+                    return format!(\"`{}` (overflowed from `{}`)\", evaluated, lit_value);\n+                }\n+            }\n+        }\n+    }\n+    format!(\"`{}`\", evaluated)\n+}\n+\n pub(super) fn check_type_params_are_used<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     generics: &ty::Generics,"}, {"sha": "473a0ad6f7a1384b6c4f5b3815548442048bbed2", "filename": "src/test/ui/enum/enum-discrim-autosizing.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3b1e7b1fc9853497140f7f5371882234f0295893/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-autosizing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b1e7b1fc9853497140f7f5371882234f0295893/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-autosizing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-autosizing.rs?ref=3b1e7b1fc9853497140f7f5371882234f0295893", "patch": "@@ -4,8 +4,10 @@\n // so force the repr.\n #[cfg_attr(not(target_pointer_width = \"32\"), repr(i32))]\n enum Eu64 {\n-    Au64 = 0,\n-    Bu64 = 0x8000_0000_0000_0000 //~ERROR already exists\n+    Au64 = 0, //~NOTE first use of `0`\n+    Bu64 = 0x8000_0000_0000_0000\n+    //~^ ERROR discriminant value `0` already exists\n+    //~| NOTE enum already has `0` (overflowed from `9223372036854775808`)\n }\n \n fn main() {}"}, {"sha": "a0f39098a2e98dcac51b194fa3b0b3b72446b766", "filename": "src/test/ui/enum/enum-discrim-autosizing.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b1e7b1fc9853497140f7f5371882234f0295893/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-autosizing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b1e7b1fc9853497140f7f5371882234f0295893/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-autosizing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-autosizing.stderr?ref=3b1e7b1fc9853497140f7f5371882234f0295893", "patch": "@@ -4,7 +4,7 @@ error[E0081]: discriminant value `0` already exists\n LL |     Au64 = 0,\n    |            - first use of `0`\n LL |     Bu64 = 0x8000_0000_0000_0000\n-   |            ^^^^^^^^^^^^^^^^^^^^^ enum already has `0`\n+   |            ^^^^^^^^^^^^^^^^^^^^^ enum already has `0` (overflowed from `9223372036854775808`)\n \n error: aborting due to previous error\n "}, {"sha": "255e05ced19f722c3fee9a576ab8fe9b6d607741", "filename": "src/test/ui/error-codes/E0081.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3b1e7b1fc9853497140f7f5371882234f0295893/src%2Ftest%2Fui%2Ferror-codes%2FE0081.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b1e7b1fc9853497140f7f5371882234f0295893/src%2Ftest%2Fui%2Ferror-codes%2FE0081.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0081.rs?ref=3b1e7b1fc9853497140f7f5371882234f0295893", "patch": "@@ -1,9 +1,20 @@\n enum Enum {\n     P = 3,\n+    //~^ NOTE first use of `3`\n     X = 3,\n     //~^ ERROR discriminant value `3` already exists\n+    //~| NOTE enum already has `3`\n     Y = 5\n }\n \n+#[repr(u8)]\n+enum EnumOverflowRepr {\n+    P = 257,\n+    //~^ NOTE first use of `1` (overflowed from `257`)\n+    X = 513,\n+    //~^ ERROR discriminant value `1` already exists\n+    //~| NOTE enum already has `1` (overflowed from `513`)\n+}\n+\n fn main() {\n }"}, {"sha": "9b279bb0214c6eb129223aea0f73bab42face8e1", "filename": "src/test/ui/error-codes/E0081.stderr", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3b1e7b1fc9853497140f7f5371882234f0295893/src%2Ftest%2Fui%2Ferror-codes%2FE0081.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b1e7b1fc9853497140f7f5371882234f0295893/src%2Ftest%2Fui%2Ferror-codes%2FE0081.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0081.stderr?ref=3b1e7b1fc9853497140f7f5371882234f0295893", "patch": "@@ -1,11 +1,21 @@\n error[E0081]: discriminant value `3` already exists\n-  --> $DIR/E0081.rs:3:9\n+  --> $DIR/E0081.rs:4:9\n    |\n LL |     P = 3,\n    |         - first use of `3`\n+LL |\n LL |     X = 3,\n    |         ^ enum already has `3`\n \n-error: aborting due to previous error\n+error[E0081]: discriminant value `1` already exists\n+  --> $DIR/E0081.rs:14:9\n+   |\n+LL |     P = 257,\n+   |         --- first use of `1` (overflowed from `257`)\n+LL |\n+LL |     X = 513,\n+   |         ^^^ enum already has `1` (overflowed from `513`)\n+\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0081`."}]}