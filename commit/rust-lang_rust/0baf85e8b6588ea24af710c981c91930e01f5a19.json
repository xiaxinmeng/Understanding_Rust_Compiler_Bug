{"sha": "0baf85e8b6588ea24af710c981c91930e01f5a19", "node_id": "C_kwDOAAsO6NoAKDBiYWY4NWU4YjY1ODhlYTI0YWY3MTBjOTgxYzkxOTMwZTAxZjVhMTk", "commit": {"author": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-04-06T23:04:15Z"}, "committer": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-04-08T15:59:59Z"}, "message": "remove some uses of visit_all_item_likes in incremental, metadata and interface crates\n\nSigned-off-by: Miguel Guarniz <mi9uel9@gmail.com>", "tree": {"sha": "dd8b7d16c9116b81bb9a977fddbaf5605782da99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd8b7d16c9116b81bb9a977fddbaf5605782da99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0baf85e8b6588ea24af710c981c91930e01f5a19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0baf85e8b6588ea24af710c981c91930e01f5a19", "html_url": "https://github.com/rust-lang/rust/commit/0baf85e8b6588ea24af710c981c91930e01f5a19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0baf85e8b6588ea24af710c981c91930e01f5a19/comments", "author": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b73b4de982a16e8819e804cb648ff3ea63d22028", "url": "https://api.github.com/repos/rust-lang/rust/commits/b73b4de982a16e8819e804cb648ff3ea63d22028", "html_url": "https://github.com/rust-lang/rust/commit/b73b4de982a16e8819e804cb648ff3ea63d22028"}], "stats": {"total": 71, "additions": 64, "deletions": 7}, "files": [{"sha": "49697be51ebd42d6d42cadd2f68dd24e0743604f", "filename": "compiler/rustc_incremental/src/persist/dirty_clean.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0baf85e8b6588ea24af710c981c91930e01f5a19/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0baf85e8b6588ea24af710c981c91930e01f5a19/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fdirty_clean.rs?ref=0baf85e8b6588ea24af710c981c91930e01f5a19", "patch": "@@ -147,7 +147,28 @@ pub fn check_dirty_clean_annotations(tcx: TyCtxt<'_>) {\n \n     tcx.dep_graph.with_ignore(|| {\n         let mut dirty_clean_visitor = DirtyCleanVisitor { tcx, checked_attrs: Default::default() };\n-        tcx.hir().visit_all_item_likes(&mut dirty_clean_visitor);\n+\n+        let crate_items = tcx.hir_crate_items(());\n+\n+        for id in crate_items.items() {\n+            let item = tcx.hir().item(id);\n+            dirty_clean_visitor.check_item(item.def_id, item.span);\n+        }\n+\n+        for id in crate_items.trait_items() {\n+            let item = tcx.hir().trait_item(id);\n+            dirty_clean_visitor.check_item(item.def_id, item.span);\n+        }\n+\n+        for id in crate_items.impl_items() {\n+            let item = tcx.hir().impl_item(id);\n+            dirty_clean_visitor.check_item(item.def_id, item.span);\n+        }\n+\n+        for id in crate_items.foreign_items() {\n+            let item = tcx.hir().foreign_item(id);\n+            dirty_clean_visitor.check_item(item.def_id, item.span);\n+        }\n \n         let mut all_attrs = FindAllAttrs { tcx, found_attrs: vec![] };\n         tcx.hir().walk_attributes(&mut all_attrs);"}, {"sha": "d0b895643c524bb7759dcf17b7c4f6d42a00f75a", "filename": "compiler/rustc_interface/src/proc_macro_decls.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0baf85e8b6588ea24af710c981c91930e01f5a19/compiler%2Frustc_interface%2Fsrc%2Fproc_macro_decls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0baf85e8b6588ea24af710c981c91930e01f5a19/compiler%2Frustc_interface%2Fsrc%2Fproc_macro_decls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fproc_macro_decls.rs?ref=0baf85e8b6588ea24af710c981c91930e01f5a19", "patch": "@@ -7,7 +7,14 @@ use rustc_span::symbol::sym;\n \n fn proc_macro_decls_static(tcx: TyCtxt<'_>, (): ()) -> Option<LocalDefId> {\n     let mut finder = Finder { tcx, decls: None };\n-    tcx.hir().visit_all_item_likes(&mut finder);\n+\n+    for id in tcx.hir().items() {\n+        let item = tcx.hir().item(id);\n+        let attrs = finder.tcx.hir().attrs(item.hir_id());\n+        if finder.tcx.sess.contains_name(attrs, sym::rustc_proc_macro_decls) {\n+            finder.decls = Some(item.hir_id());\n+        }\n+    }\n \n     finder.decls.map(|id| tcx.hir().local_def_id(id))\n }"}, {"sha": "cb961d4d60506b31eaf20aa86f648f39f31e3cec", "filename": "compiler/rustc_metadata/src/foreign_modules.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0baf85e8b6588ea24af710c981c91930e01f5a19/compiler%2Frustc_metadata%2Fsrc%2Fforeign_modules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0baf85e8b6588ea24af710c981c91930e01f5a19/compiler%2Frustc_metadata%2Fsrc%2Fforeign_modules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fforeign_modules.rs?ref=0baf85e8b6588ea24af710c981c91930e01f5a19", "patch": "@@ -4,9 +4,16 @@ use rustc_middle::ty::TyCtxt;\n use rustc_session::cstore::ForeignModule;\n \n crate fn collect(tcx: TyCtxt<'_>) -> Vec<ForeignModule> {\n-    let mut collector = Collector { modules: Vec::new() };\n-    tcx.hir().visit_all_item_likes(&mut collector);\n-    collector.modules\n+    let mut modules = Vec::new();\n+    for id in tcx.hir().items() {\n+        let item = tcx.hir().item(id);\n+        let hir::ItemKind::ForeignMod { items, .. } = item.kind else {\n+            continue;\n+        };\n+        let foreign_items = items.iter().map(|it| it.id.def_id.to_def_id()).collect();\n+        modules.push(ForeignModule { foreign_items, def_id: id.def_id.to_def_id() });\n+    }\n+    modules\n }\n \n struct Collector {"}, {"sha": "547c4876cb811abe2ddc75a38ce26a788ed5d60b", "filename": "compiler/rustc_metadata/src/native_libs.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0baf85e8b6588ea24af710c981c91930e01f5a19/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0baf85e8b6588ea24af710c981c91930e01f5a19/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs?ref=0baf85e8b6588ea24af710c981c91930e01f5a19", "patch": "@@ -15,7 +15,10 @@ use rustc_target::spec::abi::Abi;\n \n crate fn collect(tcx: TyCtxt<'_>) -> Vec<NativeLib> {\n     let mut collector = Collector { tcx, libs: Vec::new() };\n-    tcx.hir().visit_all_item_likes(&mut collector);\n+    for id in tcx.hir().items() {\n+        let item = tcx.hir().item(id);\n+        collector.visit_item(item);\n+    }\n     collector.process_command_line();\n     collector.libs\n }"}, {"sha": "6ad7a342bdceeb6edcbae3eb2581f77bf892fb4f", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0baf85e8b6588ea24af710c981c91930e01f5a19/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0baf85e8b6588ea24af710c981c91930e01f5a19/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=0baf85e8b6588ea24af710c981c91930e01f5a19", "patch": "@@ -1784,7 +1784,11 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n         empty_proc_macro!(self);\n         let tcx = self.tcx;\n         let mut visitor = ImplsVisitor { tcx, impls: FxHashMap::default() };\n-        tcx.hir().visit_all_item_likes(&mut visitor);\n+\n+        for id in tcx.hir().items() {\n+            let item = tcx.hir().item(id);\n+            visitor.visit_item(item);\n+        }\n \n         let mut all_impls: Vec<_> = visitor.impls.into_iter().collect();\n "}, {"sha": "039e9953814691fd0eea2bb15c6f4ee1c42b2aa6", "filename": "compiler/rustc_middle/src/hir/mod.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0baf85e8b6588ea24af710c981c91930e01f5a19/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0baf85e8b6588ea24af710c981c91930e01f5a19/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmod.rs?ref=0baf85e8b6588ea24af710c981c91930e01f5a19", "patch": "@@ -45,6 +45,21 @@ pub struct ModuleItems {\n     foreign_items: Box<[ForeignItemId]>,\n }\n \n+impl ModuleItems {\n+    pub fn items(&self) -> impl Iterator<Item = ItemId> {\n+        self.items.to_vec().into_iter()\n+    }\n+    pub fn trait_items(&self) -> impl Iterator<Item = TraitItemId> {\n+        self.trait_items.to_vec().into_iter()\n+    }\n+    pub fn impl_items(&self) -> impl Iterator<Item = ImplItemId> {\n+        self.impl_items.to_vec().into_iter()\n+    }\n+    pub fn foreign_items(&self) -> impl Iterator<Item = ForeignItemId> {\n+        self.foreign_items.to_vec().into_iter()\n+    }\n+}\n+\n impl<'tcx> TyCtxt<'tcx> {\n     #[inline(always)]\n     pub fn hir(self) -> map::Map<'tcx> {"}]}