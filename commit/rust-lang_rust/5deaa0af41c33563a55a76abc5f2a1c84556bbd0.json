{"sha": "5deaa0af41c33563a55a76abc5f2a1c84556bbd0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkZWFhMGFmNDFjMzM1NjNhNTVhNzZhYmM1ZjJhMWM4NDU1NmJiZDA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-04T02:48:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-04T02:48:29Z"}, "message": "Rollup merge of #61497 - Mark-Simulacrum:codegen-units-std-num-cpus, r=alexcrichton\n\nTreat 0 as special value for codegen-units-std\n\nFixes #57669", "tree": {"sha": "853379d18fb3b95cc08c365b0eda32430c1cea4d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/853379d18fb3b95cc08c365b0eda32430c1cea4d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5deaa0af41c33563a55a76abc5f2a1c84556bbd0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc9dv9CRBK7hj4Ov3rIwAAdHIIACKeB61SRal77VgkonFxJeiJ\n2ZlHitJ3TSezJfVv1dRQZExJwVfsvxXrBG92QaV6FRSKLKjXqFh7Sl7+A9KrXWZV\nMFJe07u+p34TV7oqKz9H+v3YZtlM0NQnloPvfj/viT8UHqMpMJotrFylf7+327pU\nhQasOZUbPbbh2OBnEPawcN8gnyrbE1iErBTxwPvmfouILkuMT6AxyvcBdoMcrUwB\nbVCjjUFV2jSHkI9MVmdYAZuVKH5zskM275wL2+9htEsF9wLQaXhyEUYZItYObQ7r\nxwzR3yp1K6wOKyOlT/EWZO8eKTb/rUcB6naRUq7h4cQzqhcsKS/JTjsVt8T83OI=\n=i1zA\n-----END PGP SIGNATURE-----\n", "payload": "tree 853379d18fb3b95cc08c365b0eda32430c1cea4d\nparent 6ad6ef235581e9db4fd5160880b98eedbdc2d488\nparent 5ce3c8137b4d29481038d4b322f6db28d946d648\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1559616509 +0200\ncommitter GitHub <noreply@github.com> 1559616509 +0200\n\nRollup merge of #61497 - Mark-Simulacrum:codegen-units-std-num-cpus, r=alexcrichton\n\nTreat 0 as special value for codegen-units-std\n\nFixes #57669\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5deaa0af41c33563a55a76abc5f2a1c84556bbd0", "html_url": "https://github.com/rust-lang/rust/commit/5deaa0af41c33563a55a76abc5f2a1c84556bbd0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5deaa0af41c33563a55a76abc5f2a1c84556bbd0/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ad6ef235581e9db4fd5160880b98eedbdc2d488", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ad6ef235581e9db4fd5160880b98eedbdc2d488", "html_url": "https://github.com/rust-lang/rust/commit/6ad6ef235581e9db4fd5160880b98eedbdc2d488"}, {"sha": "5ce3c8137b4d29481038d4b322f6db28d946d648", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ce3c8137b4d29481038d4b322f6db28d946d648", "html_url": "https://github.com/rust-lang/rust/commit/5ce3c8137b4d29481038d4b322f6db28d946d648"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "edeb07fda1d59d923dc1f32403568ac927c57806", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5deaa0af41c33563a55a76abc5f2a1c84556bbd0/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5deaa0af41c33563a55a76abc5f2a1c84556bbd0/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=5deaa0af41c33563a55a76abc5f2a1c84556bbd0", "patch": "@@ -11,7 +11,6 @@ use std::process;\n use std::cmp;\n \n use build_helper::t;\n-use num_cpus;\n use toml;\n use serde::Deserialize;\n use crate::cache::{INTERNER, Interned};\n@@ -401,7 +400,7 @@ impl Config {\n         config.rustc_error_format = flags.rustc_error_format;\n         config.on_fail = flags.on_fail;\n         config.stage = flags.stage;\n-        config.jobs = flags.jobs;\n+        config.jobs = flags.jobs.map(threads_from_config);\n         config.cmd = flags.cmd;\n         config.incremental = flags.incremental;\n         config.dry_run = flags.dry_run;\n@@ -583,13 +582,8 @@ impl Config {\n \n             set(&mut config.rust_codegen_backends_dir, rust.codegen_backends_dir.clone());\n \n-            match rust.codegen_units {\n-                Some(0) => config.rust_codegen_units = Some(num_cpus::get() as u32),\n-                Some(n) => config.rust_codegen_units = Some(n),\n-                None => {}\n-            }\n-\n-            config.rust_codegen_units_std = rust.codegen_units_std;\n+            config.rust_codegen_units = rust.codegen_units.map(threads_from_config);\n+            config.rust_codegen_units_std = rust.codegen_units_std.map(threads_from_config);\n         }\n \n         if let Some(ref t) = toml.target {\n@@ -688,3 +682,10 @@ fn set<T>(field: &mut T, val: Option<T>) {\n         *field = v;\n     }\n }\n+\n+fn threads_from_config(v: u32) -> u32 {\n+    match v {\n+        0 => num_cpus::get() as u32,\n+        n => n,\n+    }\n+}"}]}