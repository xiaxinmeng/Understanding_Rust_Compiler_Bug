{"sha": "5e75001c596991d63729b41769164197db6fc5c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlNzUwMDFjNTk2OTkxZDYzNzI5YjQxNzY5MTY0MTk3ZGI2ZmM1Yzg=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-12-27T04:05:56Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-12-27T04:36:02Z"}, "message": "Point at correct span for arguments in format strings\n\nWhen a format string has escaped whitespace characters format\narguments were shifted by one per each escaped character. Account\nfor these escaped characters when synthesizing the spans.\n\nFix #55155.", "tree": {"sha": "2f5339c9d148bfbd43497a3a81414032de2dd74d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f5339c9d148bfbd43497a3a81414032de2dd74d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e75001c596991d63729b41769164197db6fc5c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e75001c596991d63729b41769164197db6fc5c8", "html_url": "https://github.com/rust-lang/rust/commit/5e75001c596991d63729b41769164197db6fc5c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e75001c596991d63729b41769164197db6fc5c8/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1bad57fa59a8069a6ebb05cd6a2ae73c88b2e98", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1bad57fa59a8069a6ebb05cd6a2ae73c88b2e98", "html_url": "https://github.com/rust-lang/rust/commit/a1bad57fa59a8069a6ebb05cd6a2ae73c88b2e98"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "32ae878909f30676a76a4738b20400611f19148d", "filename": "src/libfmt_macros/lib.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5e75001c596991d63729b41769164197db6fc5c8/src%2Flibfmt_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e75001c596991d63729b41769164197db6fc5c8/src%2Flibfmt_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfmt_macros%2Flib.rs?ref=5e75001c596991d63729b41769164197db6fc5c8", "patch": "@@ -144,7 +144,7 @@ pub struct Parser<'a> {\n     /// `Some(raw count)` when the string is \"raw\", used to position spans correctly\n     style: Option<usize>,\n     /// Start and end byte offset of every successfully parsed argument\n-    pub arg_places: Vec<(usize, usize)>,\n+    pub arg_places: Vec<(SpanIndex, SpanIndex)>,\n     /// Characters that need to be shifted\n     skips: Vec<usize>,\n     /// Span offset of the last opening brace seen, used for error reporting\n@@ -154,7 +154,7 @@ pub struct Parser<'a> {\n }\n \n #[derive(Clone, Copy, Debug)]\n-pub struct SpanIndex(usize);\n+pub struct SpanIndex(pub usize);\n \n impl SpanIndex {\n     pub fn unwrap(self) -> usize {\n@@ -166,7 +166,6 @@ impl<'a> Iterator for Parser<'a> {\n     type Item = Piece<'a>;\n \n     fn next(&mut self) -> Option<Piece<'a>> {\n-        let raw = self.raw();\n         if let Some(&(pos, c)) = self.cur.peek() {\n             match c {\n                 '{' => {\n@@ -180,7 +179,7 @@ impl<'a> Iterator for Parser<'a> {\n                     } else {\n                         let arg = self.argument();\n                         if let Some(arg_pos) = self.must_consume('}').map(|end| {\n-                            (pos + raw + 1, end + raw + 2)\n+                            (self.to_span_index(pos), self.to_span_index(end + 1))\n                         }) {\n                             self.arg_places.push(arg_pos);\n                         }"}, {"sha": "17e692d1d32b080e2a0f48a57a59ae4cc02931a9", "filename": "src/libsyntax_ext/format.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5e75001c596991d63729b41769164197db6fc5c8/src%2Flibsyntax_ext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e75001c596991d63729b41769164197db6fc5c8/src%2Flibsyntax_ext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat.rs?ref=5e75001c596991d63729b41769164197db6fc5c8", "patch": "@@ -861,7 +861,9 @@ pub fn expand_preparsed_format_args(ecx: &mut ExtCtxt,\n     }\n \n     let arg_spans = parser.arg_places.iter()\n-        .map(|&(start, end)| fmt.span.from_inner_byte_pos(start, end))\n+        .map(|&(parse::SpanIndex(start), parse::SpanIndex(end))| {\n+            fmt.span.from_inner_byte_pos(start, end)\n+        })\n         .collect();\n \n     let mut cx = Context {"}, {"sha": "3c6c15c06bb2ae3bc77f82f19c1596291a489819", "filename": "src/test/ui/fmt/format-string-error-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e75001c596991d63729b41769164197db6fc5c8/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e75001c596991d63729b41769164197db6fc5c8/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.rs?ref=5e75001c596991d63729b41769164197db6fc5c8", "patch": "@@ -67,4 +67,6 @@ raw  { \\n\n     asdf}\n     \", asdf=1);\n     //~^^ ERROR invalid format string\n+    println!(\"\\t{}\");\n+    //~^ ERROR 1 positional argument in format string\n }"}, {"sha": "face0bc0f5f68efd3d3c4ec3df46f74788314770", "filename": "src/test/ui/fmt/format-string-error-2.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5e75001c596991d63729b41769164197db6fc5c8/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5e75001c596991d63729b41769164197db6fc5c8/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.stderr?ref=5e75001c596991d63729b41769164197db6fc5c8", "patch": "@@ -133,5 +133,11 @@ LL |     asdf}\n    |\n    = note: if you intended to print `{`, you can escape it using `{{`\n \n-error: aborting due to 13 previous errors\n+error: 1 positional argument in format string, but no arguments were given\n+  --> $DIR/format-string-error-2.rs:70:17\n+   |\n+LL |     println!(\"/t{}\");\n+   |                 ^^\n+\n+error: aborting due to 14 previous errors\n "}]}