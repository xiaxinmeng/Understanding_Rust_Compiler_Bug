{"sha": "42796e11c5187be4e2ad962db17f333a52c3a88a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyNzk2ZTExYzUxODdiZTRlMmFkOTYyZGIxN2YzMzNhNTJjM2E4OGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-01T21:30:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-01T21:30:24Z"}, "message": "Auto merge of #5401 - dtolnay:option, r=Manishearth\n\nDowngrade option_option to pedantic\n\nBased on a search of my work codebase (\\>500k lines) for `Option<Option<`, it looks like a bunch of reasonable uses to me. The documented motivation for this lint is:\n\n> an optional optional value is logically the same thing as an optional value but has an unneeded extra level of wrapping\n\nwhich seems a bit bogus in practice. For example a typical usage would look like:\n\n```rust\nlet mut host: Option<String> = None;\nlet mut port: Option<i32> = None;\nlet mut payload: Option<Option<String>> = None;\n\nfor each field {\n    match field.name {\n        \"host\" => host = Some(...),\n        \"port\" => port = Some(...),\n        \"payload\" => payload = Some(...), // can be null or string\n        _ => return error,\n    }\n}\n\nlet host = host.ok_or(...)?;\nlet port = port.ok_or(...)?;\nlet payload = payload.ok_or(...)?;\ndo_thing(host, port, payload)\n```\n\nThis lint seems to fit right in with the pedantic group; I don't think linting on occurrences of `Option<Option<T>>` by default is justified.\n\n---\n\nchangelog: Remove option_option from default set of enabled lints", "tree": {"sha": "9c90acdedaf26870647399242b2cc26bba147445", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c90acdedaf26870647399242b2cc26bba147445"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42796e11c5187be4e2ad962db17f333a52c3a88a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42796e11c5187be4e2ad962db17f333a52c3a88a", "html_url": "https://github.com/rust-lang/rust/commit/42796e11c5187be4e2ad962db17f333a52c3a88a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42796e11c5187be4e2ad962db17f333a52c3a88a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "326b22048a6305d7c918b748be1c081468917ac6", "url": "https://api.github.com/repos/rust-lang/rust/commits/326b22048a6305d7c918b748be1c081468917ac6", "html_url": "https://github.com/rust-lang/rust/commit/326b22048a6305d7c918b748be1c081468917ac6"}, {"sha": "f6e8da81f184efb4036db16940ef3bfc84a29984", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6e8da81f184efb4036db16940ef3bfc84a29984", "html_url": "https://github.com/rust-lang/rust/commit/f6e8da81f184efb4036db16940ef3bfc84a29984"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "4235cd40a22eb555395bc576c869c298d9c64846", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/42796e11c5187be4e2ad962db17f333a52c3a88a/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42796e11c5187be4e2ad962db17f333a52c3a88a/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=42796e11c5187be4e2ad962db17f333a52c3a88a", "patch": "@@ -1125,6 +1125,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&types::CAST_SIGN_LOSS),\n         LintId::of(&types::INVALID_UPCAST_COMPARISONS),\n         LintId::of(&types::LINKEDLIST),\n+        LintId::of(&types::OPTION_OPTION),\n         LintId::of(&unicode::NON_ASCII_LITERAL),\n         LintId::of(&unicode::UNICODE_NOT_NFC),\n         LintId::of(&unused_self::UNUSED_SELF),\n@@ -1375,7 +1376,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&types::FN_TO_NUMERIC_CAST_WITH_TRUNCATION),\n         LintId::of(&types::IMPLICIT_HASHER),\n         LintId::of(&types::LET_UNIT_VALUE),\n-        LintId::of(&types::OPTION_OPTION),\n         LintId::of(&types::TYPE_COMPLEXITY),\n         LintId::of(&types::UNIT_ARG),\n         LintId::of(&types::UNIT_CMP),\n@@ -1565,7 +1565,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&transmute::TRANSMUTE_PTR_TO_REF),\n         LintId::of(&types::BORROWED_BOX),\n         LintId::of(&types::CHAR_LIT_AS_U8),\n-        LintId::of(&types::OPTION_OPTION),\n         LintId::of(&types::TYPE_COMPLEXITY),\n         LintId::of(&types::UNIT_ARG),\n         LintId::of(&types::UNNECESSARY_CAST),"}, {"sha": "7fae477b83274a822aaccfe476284e6b9abd4d92", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42796e11c5187be4e2ad962db17f333a52c3a88a/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42796e11c5187be4e2ad962db17f333a52c3a88a/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=42796e11c5187be4e2ad962db17f333a52c3a88a", "patch": "@@ -108,7 +108,7 @@ declare_clippy_lint! {\n     /// }\n     /// ```\n     pub OPTION_OPTION,\n-    complexity,\n+    pedantic,\n     \"usage of `Option<Option<T>>`\"\n }\n "}, {"sha": "9d135beae4f32f6422c1c52c4182a51174bec134", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42796e11c5187be4e2ad962db17f333a52c3a88a/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42796e11c5187be4e2ad962db17f333a52c3a88a/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=42796e11c5187be4e2ad962db17f333a52c3a88a", "patch": "@@ -1566,7 +1566,7 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n     },\n     Lint {\n         name: \"option_option\",\n-        group: \"complexity\",\n+        group: \"pedantic\",\n         desc: \"usage of `Option<Option<T>>`\",\n         deprecation: None,\n         module: \"types\","}, {"sha": "904c50e14039a4067cce2899b7b1f5a7e7232fb0", "filename": "tests/ui/option_option.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42796e11c5187be4e2ad962db17f333a52c3a88a/tests%2Fui%2Foption_option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42796e11c5187be4e2ad962db17f333a52c3a88a/tests%2Fui%2Foption_option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_option.rs?ref=42796e11c5187be4e2ad962db17f333a52c3a88a", "patch": "@@ -1,3 +1,5 @@\n+#![deny(clippy::option_option)]\n+\n fn input(_: Option<Option<u8>>) {}\n \n fn output() -> Option<Option<u8>> {"}, {"sha": "79db186d7ea77128aef51c329c99711a4f0e8752", "filename": "tests/ui/option_option.stderr", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/42796e11c5187be4e2ad962db17f333a52c3a88a/tests%2Fui%2Foption_option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/42796e11c5187be4e2ad962db17f333a52c3a88a/tests%2Fui%2Foption_option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_option.stderr?ref=42796e11c5187be4e2ad962db17f333a52c3a88a", "patch": "@@ -1,55 +1,59 @@\n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n-  --> $DIR/option_option.rs:1:13\n+  --> $DIR/option_option.rs:3:13\n    |\n LL | fn input(_: Option<Option<u8>>) {}\n    |             ^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D clippy::option-option` implied by `-D warnings`\n+note: the lint level is defined here\n+  --> $DIR/option_option.rs:1:9\n+   |\n+LL | #![deny(clippy::option_option)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^\n \n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n-  --> $DIR/option_option.rs:3:16\n+  --> $DIR/option_option.rs:5:16\n    |\n LL | fn output() -> Option<Option<u8>> {\n    |                ^^^^^^^^^^^^^^^^^^\n \n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n-  --> $DIR/option_option.rs:7:27\n+  --> $DIR/option_option.rs:9:27\n    |\n LL | fn output_nested() -> Vec<Option<Option<u8>>> {\n    |                           ^^^^^^^^^^^^^^^^^^\n \n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n-  --> $DIR/option_option.rs:12:30\n+  --> $DIR/option_option.rs:14:30\n    |\n LL | fn output_nested_nested() -> Option<Option<Option<u8>>> {\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n-  --> $DIR/option_option.rs:17:8\n+  --> $DIR/option_option.rs:19:8\n    |\n LL |     x: Option<Option<u8>>,\n    |        ^^^^^^^^^^^^^^^^^^\n \n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n-  --> $DIR/option_option.rs:21:23\n+  --> $DIR/option_option.rs:23:23\n    |\n LL |     fn struct_fn() -> Option<Option<u8>> {\n    |                       ^^^^^^^^^^^^^^^^^^\n \n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n-  --> $DIR/option_option.rs:27:22\n+  --> $DIR/option_option.rs:29:22\n    |\n LL |     fn trait_fn() -> Option<Option<u8>>;\n    |                      ^^^^^^^^^^^^^^^^^^\n \n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n-  --> $DIR/option_option.rs:31:11\n+  --> $DIR/option_option.rs:33:11\n    |\n LL |     Tuple(Option<Option<u8>>),\n    |           ^^^^^^^^^^^^^^^^^^\n \n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n-  --> $DIR/option_option.rs:32:17\n+  --> $DIR/option_option.rs:34:17\n    |\n LL |     Struct { x: Option<Option<u8>> },\n    |                 ^^^^^^^^^^^^^^^^^^"}]}