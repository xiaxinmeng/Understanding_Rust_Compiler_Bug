{"sha": "8149bb14117123a0135eb255283508974976973a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxNDliYjE0MTE3MTIzYTAxMzVlYjI1NTI4MzUwODk3NDk3Njk3M2E=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-13T01:45:20Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-13T01:45:41Z"}, "message": "Zero LMA/VMA of debug sections in elf. Closes #148.", "tree": {"sha": "9a8e540af05a22d3fd5731dda5689588f248c690", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a8e540af05a22d3fd5731dda5689588f248c690"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8149bb14117123a0135eb255283508974976973a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8149bb14117123a0135eb255283508974976973a", "html_url": "https://github.com/rust-lang/rust/commit/8149bb14117123a0135eb255283508974976973a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8149bb14117123a0135eb255283508974976973a/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e376852e709844d67f94430d9dc954d5be722b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e376852e709844d67f94430d9dc954d5be722b4", "html_url": "https://github.com/rust-lang/rust/commit/4e376852e709844d67f94430d9dc954d5be722b4"}], "stats": {"total": 147, "additions": 42, "deletions": 105}, "files": [{"sha": "406508e4b5e8285d4763d7119baea26edfcc8630", "filename": "src/boot/be/elf.ml", "status": "modified", "additions": 42, "deletions": 105, "changes": 147, "blob_url": "https://github.com/rust-lang/rust/blob/8149bb14117123a0135eb255283508974976973a/src%2Fboot%2Fbe%2Felf.ml", "raw_url": "https://github.com/rust-lang/rust/raw/8149bb14117123a0135eb255283508974976973a/src%2Fboot%2Fbe%2Felf.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fbe%2Felf.ml?ref=8149bb14117123a0135eb255283508974976973a", "patch": "@@ -169,15 +169,16 @@ type sh_flags =\n \n \n let section_header\n+    ?(sh_link:int64 option=None)\n+    ?(sh_info:int64 option=None)\n+    ?(zero_sh_addr:bool=false)\n+    ?(sh_flags:sh_flags list=[])\n+    ?(section_fixup:fixup option=None)\n+    ?(sh_addralign:int64=1L)\n+    ?(sh_entsize:int64=0L)\n     ~(shstring_table_fixup:fixup)\n     ~(shname_string_fixup:fixup)\n-    ~(sh_type:sh_type)\n-    ~(sh_flags:sh_flags list)\n-    ~(section_fixup:fixup option)\n-    ~(sh_addralign:int64)\n-    ~(sh_entsize:int64)\n-    ~(sh_link:int64 option)\n-    ~(sh_info:int64 option)\n+    (sh_type:sh_type)\n     : frag =\n   SEQ\n     [|\n@@ -202,9 +203,12 @@ let section_header\n                                  SHF_WRITE -> 0x1L\n                                | SHF_ALLOC -> 0x2L\n                                | SHF_EXECINSTR -> 0x4L) sh_flags)));\n-      WORD (TY_u32, (match section_fixup with\n-                         None -> (IMM 0L)\n-                       | Some s -> (M_POS s)));\n+      WORD (TY_u32,\n+            if zero_sh_addr\n+            then IMM 0L\n+            else (match section_fixup with\n+                      None -> (IMM 0L)\n+                    | Some s -> (M_POS s)));\n       WORD (TY_u32, (match section_fixup with\n                          None -> (IMM 0L)\n                        | Some s -> (F_POS s)));\n@@ -693,169 +697,129 @@ let elf32_linux_x86_file\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: null_section_name_fixup\n-           ~sh_type: SHT_NULL\n-           ~sh_flags: []\n            ~section_fixup: None\n            ~sh_addralign: 0L\n-           ~sh_entsize: 0L\n-           ~sh_link: None\n-           ~sh_info: None);\n+           SHT_NULL);\n \n         (* .interp *)\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: interp_section_name_fixup\n-           ~sh_type: SHT_PROGBITS\n            ~sh_flags: [ SHF_ALLOC ]\n            ~section_fixup: (Some interp_section_fixup)\n-           ~sh_addralign: 1L\n-           ~sh_entsize: 0L\n-           ~sh_link: None\n-           ~sh_info: None);\n+           SHT_PROGBITS);\n \n         (* .text *)\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: text_section_name_fixup\n-           ~sh_type: SHT_PROGBITS\n            ~sh_flags: [ SHF_ALLOC; SHF_EXECINSTR ]\n            ~section_fixup: (Some text_section_fixup)\n            ~sh_addralign: 32L\n-           ~sh_entsize: 0L\n-           ~sh_link: None\n-           ~sh_info: None);\n+           SHT_PROGBITS);\n \n         (* .rodata *)\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: rodata_section_name_fixup\n-           ~sh_type: SHT_PROGBITS\n            ~sh_flags: [ SHF_ALLOC ]\n            ~section_fixup: (Some rodata_section_fixup)\n            ~sh_addralign: 32L\n-           ~sh_entsize: 0L\n-           ~sh_link: None\n-           ~sh_info: None);\n+           SHT_PROGBITS);\n \n         (* .dynsym *)\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: dynsym_section_name_fixup\n-           ~sh_type: SHT_DYNSYM\n            ~sh_flags: [ SHF_ALLOC ]\n            ~section_fixup: (Some dynsym_section_fixup)\n            ~sh_addralign: 4L\n            ~sh_entsize: elf32_symsize\n            ~sh_link: (Some dynstrndx)\n-           ~sh_info: None );\n+           SHT_DYNSYM);\n \n         (* .dynstr *)\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: dynstr_section_name_fixup\n-           ~sh_type: SHT_STRTAB\n            ~sh_flags: [ SHF_ALLOC ]\n            ~section_fixup: (Some dynstr_section_fixup)\n-           ~sh_addralign: 1L\n-           ~sh_entsize: 0L\n-           ~sh_link: None\n-           ~sh_info: None);\n+           SHT_STRTAB);\n \n         (* .hash *)\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: hash_section_name_fixup\n-           ~sh_type: SHT_PROGBITS\n            ~sh_flags: [ SHF_ALLOC ]\n            ~section_fixup: (Some hash_section_fixup)\n            ~sh_addralign: 4L\n            ~sh_entsize: 4L\n-           ~sh_link: (Some dynsymndx)\n-           ~sh_info: None);\n+           SHT_PROGBITS);\n \n         (* .plt *)\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: plt_section_name_fixup\n-           ~sh_type: SHT_PROGBITS\n            ~sh_flags: [ SHF_ALLOC; SHF_EXECINSTR ]\n            ~section_fixup: (Some plt_section_fixup)\n            ~sh_addralign: 4L\n-           ~sh_entsize: 0L\n-           ~sh_link: None\n-           ~sh_info: None);\n+           SHT_PROGBITS);\n \n         (* .got.plt *)\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: got_plt_section_name_fixup\n-           ~sh_type: SHT_PROGBITS\n            ~sh_flags: [ SHF_ALLOC; SHF_WRITE ]\n            ~section_fixup: (Some got_plt_section_fixup)\n            ~sh_addralign: 4L\n-           ~sh_entsize: 0L\n-           ~sh_link: None\n-           ~sh_info: None);\n+           SHT_PROGBITS);\n \n         (* .rela.plt *)\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: rela_plt_section_name_fixup\n-           ~sh_type: SHT_RELA\n            ~sh_flags: [ SHF_ALLOC ]\n            ~section_fixup: (Some rela_plt_section_fixup)\n            ~sh_addralign: 4L\n            ~sh_entsize: elf32_rela_entsz\n            ~sh_link: (Some dynsymndx)\n-           ~sh_info: (Some pltndx));\n+           ~sh_info: (Some pltndx)\n+           SHT_RELA);\n \n         (* .data *)\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: data_section_name_fixup\n-           ~sh_type: SHT_PROGBITS\n            ~sh_flags: [ SHF_ALLOC; SHF_WRITE ]\n            ~section_fixup: (Some data_section_fixup)\n            ~sh_addralign: 32L\n-           ~sh_entsize: 0L\n-           ~sh_link: None\n-           ~sh_info: None);\n+           SHT_PROGBITS);\n \n         (* .bss *)\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: bss_section_name_fixup\n-           ~sh_type: SHT_NOBITS\n            ~sh_flags: [ SHF_ALLOC; SHF_WRITE ]\n            ~section_fixup: (Some bss_section_fixup)\n            ~sh_addralign: 32L\n-           ~sh_entsize: 0L\n-           ~sh_link: None\n-           ~sh_info: None);\n+           SHT_NOBITS);\n \n         (* .dynamic *)\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: dynamic_section_name_fixup\n-           ~sh_type: SHT_DYNAMIC\n            ~sh_flags: [ SHF_ALLOC; SHF_WRITE ]\n            ~section_fixup: (Some dynamic_section_fixup)\n            ~sh_addralign: 8L\n-           ~sh_entsize: 0L\n            ~sh_link: (Some dynstrndx)\n-           ~sh_info: None);\n+           SHT_DYNAMIC);\n \n         (* .shstrtab *)\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: shstrtab_section_name_fixup\n-           ~sh_type: SHT_STRTAB\n-           ~sh_flags: []\n            ~section_fixup: (Some shstrtab_section_fixup)\n-           ~sh_addralign: 1L\n-           ~sh_entsize: 0L\n-           ~sh_link: None\n-           ~sh_info: None);\n+           SHT_STRTAB);\n \n (* \n    FIXME: uncomment the dwarf section headers as you make use of them;\n@@ -869,91 +833,64 @@ let elf32_linux_x86_file\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: debug_aranges_section_name_fixup\n-           ~sh_type: SHT_PROGBITS\n-           ~sh_flags: []\n            ~section_fixup: (Some sem.Semant.ctxt_debug_aranges_fixup)\n            ~sh_addralign: 8L\n-           ~sh_entsize: 0L\n-           ~sh_link: None\n-           ~sh_info: None);\n+           ~zero_sh_addr: true\n+           SHT_PROGBITS);\n *)\n         (* .debug_pubnames *)\n (*\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: debug_pubnames_section_name_fixup\n-           ~sh_type: SHT_PROGBITS\n-           ~sh_flags: []\n            ~section_fixup: (Some sem.Semant.ctxt_debug_pubnames_fixup)\n-           ~sh_addralign: 1L\n-           ~sh_entsize: 0L\n-           ~sh_link: None\n-           ~sh_info: None);\n+           ~zero_sh_addr: true\n+           SHT_PROGBITS);\n *)\n \n         (* .debug_info *)\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: debug_info_section_name_fixup\n-           ~sh_type: SHT_PROGBITS\n-           ~sh_flags: []\n            ~section_fixup: (Some sem.Semant.ctxt_debug_info_fixup)\n-           ~sh_addralign: 1L\n-           ~sh_entsize: 0L\n-           ~sh_link: None\n-           ~sh_info: None);\n+           ~zero_sh_addr: true\n+           SHT_PROGBITS);\n \n         (* .debug_abbrev *)\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: debug_abbrev_section_name_fixup\n-           ~sh_type: SHT_PROGBITS\n-           ~sh_flags: []\n            ~section_fixup: (Some sem.Semant.ctxt_debug_abbrev_fixup)\n-           ~sh_addralign: 1L\n-           ~sh_entsize: 0L\n-           ~sh_link: None\n-           ~sh_info: None);\n+           ~zero_sh_addr: true\n+           SHT_PROGBITS);\n \n         (* .debug_line *)\n (*\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: debug_line_section_name_fixup\n-           ~sh_type: SHT_PROGBITS\n-           ~sh_flags: []\n            ~section_fixup: (Some sem.Semant.ctxt_debug_line_fixup)\n-           ~sh_addralign: 1L\n-           ~sh_entsize: 0L\n-           ~sh_link: None\n-           ~sh_info: None);\n+           ~zero_sh_addr: true\n+           SHT_PROGBITS);\n *)\n \n         (* .debug_frame *)\n (*\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: debug_frame_section_name_fixup\n-           ~sh_type: SHT_PROGBITS\n-           ~sh_flags: []\n            ~section_fixup: (Some sem.Semant.ctxt_debug_frame_fixup)\n            ~sh_addralign: 4L\n-           ~sh_entsize: 0L\n-           ~sh_link: None\n-           ~sh_info: None);\n+           ~zero_sh_addr: true\n+           SHT_PROGBITS);\n *)\n \n         (* .note.rust *)\n         (section_header\n            ~shstring_table_fixup: shstrtab_section_fixup\n            ~shname_string_fixup: note_rust_section_name_fixup\n-           ~sh_type: SHT_NOTE\n-           ~sh_flags: []\n            ~section_fixup: (Some note_rust_section_fixup)\n-           ~sh_addralign: 1L\n-           ~sh_entsize: 0L\n-           ~sh_link: None\n-           ~sh_info: None);\n+           SHT_NOTE);\n \n       |]\n   in"}]}