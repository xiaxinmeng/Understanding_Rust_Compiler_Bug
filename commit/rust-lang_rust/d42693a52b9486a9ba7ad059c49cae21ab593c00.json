{"sha": "d42693a52b9486a9ba7ad059c49cae21ab593c00", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0MjY5M2E1MmI5NDg2YTliYTdhZDA1OWM0OWNhZTIxYWI1OTNjMDA=", "commit": {"author": {"name": "Piotr Czarnecki", "email": "pioczarn@gmail.com", "date": "2015-08-13T16:48:34Z"}, "committer": {"name": "Piotr Czarnecki", "email": "pioczarn@gmail.com", "date": "2016-01-05T10:02:43Z"}, "message": "TypedArena implements Send", "tree": {"sha": "112f78a61589c1414592a75854737f2df21b3d46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/112f78a61589c1414592a75854737f2df21b3d46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d42693a52b9486a9ba7ad059c49cae21ab593c00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d42693a52b9486a9ba7ad059c49cae21ab593c00", "html_url": "https://github.com/rust-lang/rust/commit/d42693a52b9486a9ba7ad059c49cae21ab593c00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d42693a52b9486a9ba7ad059c49cae21ab593c00/comments", "author": {"login": "pczarn", "id": 3356767, "node_id": "MDQ6VXNlcjMzNTY3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3356767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pczarn", "html_url": "https://github.com/pczarn", "followers_url": "https://api.github.com/users/pczarn/followers", "following_url": "https://api.github.com/users/pczarn/following{/other_user}", "gists_url": "https://api.github.com/users/pczarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pczarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pczarn/subscriptions", "organizations_url": "https://api.github.com/users/pczarn/orgs", "repos_url": "https://api.github.com/users/pczarn/repos", "events_url": "https://api.github.com/users/pczarn/events{/privacy}", "received_events_url": "https://api.github.com/users/pczarn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pczarn", "id": 3356767, "node_id": "MDQ6VXNlcjMzNTY3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3356767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pczarn", "html_url": "https://github.com/pczarn", "followers_url": "https://api.github.com/users/pczarn/followers", "following_url": "https://api.github.com/users/pczarn/following{/other_user}", "gists_url": "https://api.github.com/users/pczarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pczarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pczarn/subscriptions", "organizations_url": "https://api.github.com/users/pczarn/orgs", "repos_url": "https://api.github.com/users/pczarn/repos", "events_url": "https://api.github.com/users/pczarn/events{/privacy}", "received_events_url": "https://api.github.com/users/pczarn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "803e9ae67b770d8500c4ab5862e988d29118356a", "url": "https://api.github.com/repos/rust-lang/rust/commits/803e9ae67b770d8500c4ab5862e988d29118356a", "html_url": "https://github.com/rust-lang/rust/commit/803e9ae67b770d8500c4ab5862e988d29118356a"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "851a864a73bde8712c582b67e3ceff0c99429fd0", "filename": "src/libarena/lib.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d42693a52b9486a9ba7ad059c49cae21ab593c00/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d42693a52b9486a9ba7ad059c49cae21ab593c00/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=d42693a52b9486a9ba7ad059c49cae21ab593c00", "patch": "@@ -45,7 +45,7 @@ extern crate alloc;\n use std::cell::{Cell, RefCell};\n use std::cmp;\n use std::intrinsics;\n-use std::marker;\n+use std::marker::{PhantomData, Send};\n use std::mem;\n use std::ptr;\n use std::raw;\n@@ -103,7 +103,7 @@ pub struct Arena<'longer_than_self> {\n     head: RefCell<Chunk>,\n     copy_head: RefCell<Chunk>,\n     chunks: RefCell<Vec<Chunk>>,\n-    _marker: marker::PhantomData<*mut &'longer_than_self ()>,\n+    _marker: PhantomData<*mut &'longer_than_self ()>,\n }\n \n impl<'a> Arena<'a> {\n@@ -118,7 +118,7 @@ impl<'a> Arena<'a> {\n             head: RefCell::new(chunk(initial_size, false)),\n             copy_head: RefCell::new(chunk(initial_size, true)),\n             chunks: RefCell::new(Vec::new()),\n-            _marker: marker::PhantomData,\n+            _marker: PhantomData,\n         }\n     }\n }\n@@ -382,7 +382,7 @@ pub struct TypedArena<T> {\n \n     /// Marker indicating that dropping the arena causes its owned\n     /// instances of `T` to be dropped.\n-    _own: marker::PhantomData<T>,\n+    _own: PhantomData<T>,\n }\n \n struct TypedArenaChunk<T> {\n@@ -452,7 +452,7 @@ impl<T> TypedArena<T> {\n                 ptr: Cell::new(chunk.start()),\n                 end: Cell::new(chunk.end()),\n                 chunks: RefCell::new(vec![chunk]),\n-                _own: marker::PhantomData,\n+                _own: PhantomData,\n             }\n         }\n     }\n@@ -531,6 +531,8 @@ impl<T> Drop for TypedArena<T> {\n     }\n }\n \n+unsafe impl<T: Send> Send for TypedArena<T> {}\n+\n #[cfg(test)]\n mod tests {\n     extern crate test;"}]}