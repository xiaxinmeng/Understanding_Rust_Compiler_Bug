{"sha": "5bd8692e9d6a78b115d44f805c972839e80af79b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViZDg2OTJlOWQ2YTc4YjExNWQ0NGY4MDVjOTcyODM5ZTgwYWY3OWI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-12-29T03:36:35Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-12-29T03:36:35Z"}, "message": "test: Fix a bunch of compile-fail tests. rs=bustage", "tree": {"sha": "a8d191fa6f0b4e829deb39cb7849a6d5f7af4ff7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8d191fa6f0b4e829deb39cb7849a6d5f7af4ff7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5bd8692e9d6a78b115d44f805c972839e80af79b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5bd8692e9d6a78b115d44f805c972839e80af79b", "html_url": "https://github.com/rust-lang/rust/commit/5bd8692e9d6a78b115d44f805c972839e80af79b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5bd8692e9d6a78b115d44f805c972839e80af79b/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b92ea8dc78c095db5cac7244c86747b4009faac3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b92ea8dc78c095db5cac7244c86747b4009faac3", "html_url": "https://github.com/rust-lang/rust/commit/b92ea8dc78c095db5cac7244c86747b4009faac3"}], "stats": {"total": 35, "additions": 17, "deletions": 18}, "files": [{"sha": "4e9e3688ecdbf2dd1a845818fb72b046211409b4", "filename": "src/test/auxiliary/noexporttypelib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5bd8692e9d6a78b115d44f805c972839e80af79b/src%2Ftest%2Fauxiliary%2Fnoexporttypelib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bd8692e9d6a78b115d44f805c972839e80af79b/src%2Ftest%2Fauxiliary%2Fnoexporttypelib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fnoexporttypelib.rs?ref=5bd8692e9d6a78b115d44f805c972839e80af79b", "patch": "@@ -8,7 +8,5 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[legacy_exports];\n-export foo;\n type oint = Option<int>;\n-fn foo() -> oint { Some(3) }\n+pub fn foo() -> oint { Some(3) }"}, {"sha": "b21114d9222c3f218ebc657f85be291a2cee239a", "filename": "src/test/compile-fail/borrowck-autoref-3261.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5bd8692e9d6a78b115d44f805c972839e80af79b/src%2Ftest%2Fcompile-fail%2Fborrowck-autoref-3261.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bd8692e9d6a78b115d44f805c972839e80af79b/src%2Ftest%2Fcompile-fail%2Fborrowck-autoref-3261.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-autoref-3261.rs?ref=5bd8692e9d6a78b115d44f805c972839e80af79b", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use either::*;\n+use core::either::*;\n enum X = Either<(uint,uint),fn()>;\n impl &X {\n     fn with(blk: fn(x: &Either<(uint,uint),fn()>)) {\n@@ -26,4 +26,4 @@ fn main() {\n             _ => fail\n         }\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "2a64666d94ca671a0b4bcb796353a462744f9d54", "filename": "src/test/compile-fail/issue-1697.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5bd8692e9d6a78b115d44f805c972839e80af79b/src%2Ftest%2Fcompile-fail%2Fissue-1697.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bd8692e9d6a78b115d44f805c972839e80af79b/src%2Ftest%2Fcompile-fail%2Fissue-1697.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-1697.rs?ref=5bd8692e9d6a78b115d44f805c972839e80af79b", "patch": "@@ -10,8 +10,7 @@\n \n // Testing that we don't fail abnormally after hitting the errors\n \n-use unresolved::*; //~ ERROR unresolved name\n-//~^ ERROR failed to resolve import\n+use unresolved::*; //~ ERROR unresolved import\n \n fn main() {\n }"}, {"sha": "0b63ae5b1bad3947eedcde2f77b0ee7cc7ef304f", "filename": "src/test/compile-fail/issue-2766-a.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5bd8692e9d6a78b115d44f805c972839e80af79b/src%2Ftest%2Fcompile-fail%2Fissue-2766-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bd8692e9d6a78b115d44f805c972839e80af79b/src%2Ftest%2Fcompile-fail%2Fissue-2766-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2766-a.rs?ref=5bd8692e9d6a78b115d44f805c972839e80af79b", "patch": "@@ -8,16 +8,17 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-mod stream {\n-    #[legacy_exports];\n-    enum Stream<T: Owned> { send(T, server::Stream<T>), }\n-    mod server {\n-        #[legacy_exports];\n+pub mod stream {\n+    pub enum Stream<T: Owned> { send(T, ::stream::server::Stream<T>), }\n+    pub mod server {\n+        use core::option;\n+        use core::pipes;\n+\n         impl<T: Owned> Stream<T> {\n-            fn recv() -> extern fn(+v: Stream<T>) -> stream::Stream<T> {\n+            pub fn recv() -> extern fn(+v: Stream<T>) -> ::stream::Stream<T> {\n               // resolve really should report just one error here.\n               // Change the test case when it changes.\n-              fn recv(+pipe: Stream<T>) -> stream::Stream<T> { //~ ERROR attempt to use a type argument out of scope\n+              pub fn recv(+pipe: Stream<T>) -> ::stream::Stream<T> { //~ ERROR attempt to use a type argument out of scope\n                 //~^ ERROR use of undeclared type name\n                 //~^^ ERROR attempt to use a type argument out of scope\n                 //~^^^ ERROR use of undeclared type name\n@@ -26,7 +27,8 @@ mod stream {\n                 recv\n             }\n         }\n-        type Stream<T: Owned> = pipes::RecvPacket<stream::Stream<T>>;\n+\n+        pub type Stream<T: Owned> = pipes::RecvPacket<::stream::Stream<T>>;\n     }\n }\n "}, {"sha": "e64d651dab2b460f45542a397af03110e753fc20", "filename": "src/test/compile-fail/name-clash-nullary.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5bd8692e9d6a78b115d44f805c972839e80af79b/src%2Ftest%2Fcompile-fail%2Fname-clash-nullary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bd8692e9d6a78b115d44f805c972839e80af79b/src%2Ftest%2Fcompile-fail%2Fname-clash-nullary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fname-clash-nullary.rs?ref=5bd8692e9d6a78b115d44f805c972839e80af79b", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // error-pattern:declaration of `None` shadows\n-use option::*;\n+use core::option::*;\n \n fn main() {\n   let None: int = 42;"}, {"sha": "7dc3c247ea48e5db9de04b2670b2e6d01d7c8687", "filename": "src/test/compile-fail/no-capture-arc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5bd8692e9d6a78b115d44f805c972839e80af79b/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bd8692e9d6a78b115d44f805c972839e80af79b/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs?ref=5bd8692e9d6a78b115d44f805c972839e80af79b", "patch": "@@ -12,7 +12,7 @@\n \n extern mod std;\n use std::arc;\n-use oldcomm::*;\n+use core::oldcomm::*;\n \n fn main() {\n     let v = ~[1, 2, 3, 4, 5, 6, 7, 8, 9, 10];"}, {"sha": "8a7c37649d2edf6c126195a0174e09216721e282", "filename": "src/test/compile-fail/no-reuse-move-arc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5bd8692e9d6a78b115d44f805c972839e80af79b/src%2Ftest%2Fcompile-fail%2Fno-reuse-move-arc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bd8692e9d6a78b115d44f805c972839e80af79b/src%2Ftest%2Fcompile-fail%2Fno-reuse-move-arc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-reuse-move-arc.rs?ref=5bd8692e9d6a78b115d44f805c972839e80af79b", "patch": "@@ -10,7 +10,7 @@\n \n extern mod std;\n use std::arc;\n-use oldcomm::*;\n+use core::oldcomm::*;\n \n fn main() {\n     let v = ~[1, 2, 3, 4, 5, 6, 7, 8, 9, 10];"}]}