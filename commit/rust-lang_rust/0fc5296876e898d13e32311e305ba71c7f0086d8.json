{"sha": "0fc5296876e898d13e32311e305ba71c7f0086d8", "node_id": "C_kwDOAAsO6NoAKDBmYzUyOTY4NzZlODk4ZDEzZTMyMzExZTMwNWJhNzFjN2YwMDg2ZDg", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-07-12T13:29:32Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-07-12T13:29:32Z"}, "message": "remove outdated comment", "tree": {"sha": "c72a5494d546244719bf5ece691723b274c907c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c72a5494d546244719bf5ece691723b274c907c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fc5296876e898d13e32311e305ba71c7f0086d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fc5296876e898d13e32311e305ba71c7f0086d8", "html_url": "https://github.com/rust-lang/rust/commit/0fc5296876e898d13e32311e305ba71c7f0086d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fc5296876e898d13e32311e305ba71c7f0086d8/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baefd42861b948510e2a2ede067f8fcaf475249b", "url": "https://api.github.com/repos/rust-lang/rust/commits/baefd42861b948510e2a2ede067f8fcaf475249b", "html_url": "https://github.com/rust-lang/rust/commit/baefd42861b948510e2a2ede067f8fcaf475249b"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "578e1d00cf9ef406ec4520f20555aa8f7a0c7297", "filename": "compiler/rustc_trait_selection/src/traits/query/type_op/mod.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0fc5296876e898d13e32311e305ba71c7f0086d8/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Ftype_op%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fc5296876e898d13e32311e305ba71c7f0086d8/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Ftype_op%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Ftype_op%2Fmod.rs?ref=0fc5296876e898d13e32311e305ba71c7f0086d8", "patch": "@@ -155,14 +155,14 @@ where\n             }\n         }\n \n-        // Promote the final query-region-constraints into a\n-        // (optional) ref-counted vector:\n-        let region_constraints = if region_constraints.is_empty() {\n-            None\n-        } else {\n-            Some(&*infcx.tcx.arena.alloc(region_constraints))\n-        };\n-\n-        Ok(TypeOpOutput { output, constraints: region_constraints, error_info })\n+        Ok(TypeOpOutput {\n+            output,\n+            constraints: if region_constraints.is_empty() {\n+                None\n+            } else {\n+                Some(infcx.tcx.arena.alloc(region_constraints))\n+            },\n+            error_info,\n+        })\n     }\n }"}]}