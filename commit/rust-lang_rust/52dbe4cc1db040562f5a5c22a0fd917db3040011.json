{"sha": "52dbe4cc1db040562f5a5c22a0fd917db3040011", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyZGJlNGNjMWRiMDQwNTYyZjVhNWMyMmEwZmQ5MTdkYjMwNDAwMTE=", "commit": {"author": {"name": "Josh Matthews", "email": "josh@joshmatthews.net", "date": "2011-12-19T06:36:37Z"}, "committer": {"name": "Josh Matthews", "email": "josh@joshmatthews.net", "date": "2011-12-19T06:36:37Z"}, "message": "Fix merge error and rebasing changes for debug information.", "tree": {"sha": "198254f755cc47fdf6459df2f369c3988e5d8d80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/198254f755cc47fdf6459df2f369c3988e5d8d80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52dbe4cc1db040562f5a5c22a0fd917db3040011", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52dbe4cc1db040562f5a5c22a0fd917db3040011", "html_url": "https://github.com/rust-lang/rust/commit/52dbe4cc1db040562f5a5c22a0fd917db3040011", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52dbe4cc1db040562f5a5c22a0fd917db3040011/comments", "author": {"login": "jdm", "id": 27658, "node_id": "MDQ6VXNlcjI3NjU4", "avatar_url": "https://avatars.githubusercontent.com/u/27658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdm", "html_url": "https://github.com/jdm", "followers_url": "https://api.github.com/users/jdm/followers", "following_url": "https://api.github.com/users/jdm/following{/other_user}", "gists_url": "https://api.github.com/users/jdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdm/subscriptions", "organizations_url": "https://api.github.com/users/jdm/orgs", "repos_url": "https://api.github.com/users/jdm/repos", "events_url": "https://api.github.com/users/jdm/events{/privacy}", "received_events_url": "https://api.github.com/users/jdm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdm", "id": 27658, "node_id": "MDQ6VXNlcjI3NjU4", "avatar_url": "https://avatars.githubusercontent.com/u/27658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdm", "html_url": "https://github.com/jdm", "followers_url": "https://api.github.com/users/jdm/followers", "following_url": "https://api.github.com/users/jdm/following{/other_user}", "gists_url": "https://api.github.com/users/jdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdm/subscriptions", "organizations_url": "https://api.github.com/users/jdm/orgs", "repos_url": "https://api.github.com/users/jdm/repos", "events_url": "https://api.github.com/users/jdm/events{/privacy}", "received_events_url": "https://api.github.com/users/jdm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df6052c4f88fbc9118411967d236576ae45d7dc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/df6052c4f88fbc9118411967d236576ae45d7dc5", "html_url": "https://github.com/rust-lang/rust/commit/df6052c4f88fbc9118411967d236576ae45d7dc5"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "0d0eb08698961f1225332612d509bc03ceb59e89", "filename": "src/comp/middle/ast_map.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/52dbe4cc1db040562f5a5c22a0fd917db3040011/src%2Fcomp%2Fmiddle%2Fast_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52dbe4cc1db040562f5a5c22a0fd917db3040011/src%2Fcomp%2Fmiddle%2Fast_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fast_map.rs?ref=52dbe4cc1db040562f5a5c22a0fd917db3040011", "patch": "@@ -73,6 +73,7 @@ fn map_item(cx: ctx, i: @item) {\n       }\n       item_impl(_, _, ms) {\n         for m in ms { cx.map.insert(m.node.id, node_method(m)); }\n+      }\n       item_res(_, dtor_id, _, ctor_id) {\n         cx.map.insert(ctor_id, node_res_ctor(i));\n         cx.map.insert(dtor_id, node_item(i));"}, {"sha": "6478a1a1e67561f0351c5889fd8b09711f88da99", "filename": "src/comp/middle/debuginfo.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/52dbe4cc1db040562f5a5c22a0fd917db3040011/src%2Fcomp%2Fmiddle%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52dbe4cc1db040562f5a5c22a0fd917db3040011/src%2Fcomp%2Fmiddle%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fdebuginfo.rs?ref=52dbe4cc1db040562f5a5c22a0fd917db3040011", "patch": "@@ -1,8 +1,10 @@\n-import std::{vec, str, option, unsafe, fs, sys, ctypes};\n+import core::{vec, str, option, sys, ctypes, unsafe};\n+import std::fs;\n import std::map::hashmap;\n import lib::llvm::llvm;\n import lib::llvm::llvm::ValueRef;\n import middle::trans_common::*;\n+import middle::trans_build::B;\n import middle::ty;\n import syntax::{ast, codemap};\n import ast::ty;\n@@ -66,7 +68,7 @@ fn llunused() -> ValueRef {\n     lli32(0x0)\n }\n fn llnull() -> ValueRef unsafe {\n-    unsafe::reinterpret_cast(std::ptr::null::<ValueRef>())\n+    unsafe::reinterpret_cast(ptr::null::<ValueRef>())\n }\n \n fn add_named_metadata(cx: @crate_ctxt, name: str, val: ValueRef) {\n@@ -621,7 +623,7 @@ fn create_local_var(bcx: @block_ctxt, local: @ast::local)\n     }\n \n     let name = alt local.node.pat.node {\n-      ast::pat_bind(ident) { ident }\n+      ast::pat_bind(ident, _) { ident /*XXX deal with optional node binding */ }\n     };\n     let loc = codemap::lookup_char_pos(cx.sess.get_codemap(),\n                                        local.span.lo);\n@@ -727,7 +729,7 @@ fn create_function(fcx: @fn_ctxt) -> @metadata<subprogram_md> {\n       }\n       ast_map::node_expr(expr) {\n         alt expr.node {\n-          ast::expr_fn(f) {\n+          ast::expr_fn(f, _) {\n             (dbg_cx.names.next(\"fn\"), f.decl.output, expr.id)\n           }\n         }"}, {"sha": "43cb0c3f39d45ae00fb7afeb647ecd461ea12f57", "filename": "src/comp/middle/trans_closure.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/52dbe4cc1db040562f5a5c22a0fd917db3040011/src%2Fcomp%2Fmiddle%2Ftrans_closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52dbe4cc1db040562f5a5c22a0fd917db3040011/src%2Fcomp%2Fmiddle%2Ftrans_closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_closure.rs?ref=52dbe4cc1db040562f5a5c22a0fd917db3040011", "patch": "@@ -336,6 +336,7 @@ fn trans_expr_fn(bcx: @block_ctxt, f: ast::_fn, sp: span,\n     let sub_cx = extend_path(bcx.fcx.lcx, ccx.names.next(\"anon\"));\n     let s = mangle_internal_name_by_path(ccx, sub_cx.path);\n     let llfn = decl_internal_cdecl_fn(ccx.llmod, s, llfnty);\n+    register_fn(ccx, sp, sub_cx.path, \"anon fn\", [], id);\n \n     let trans_closure_env = lambda(ck: ty::closure_kind) -> ValueRef {\n         let upvars = get_freevars(ccx.tcx, id);"}, {"sha": "a320b2aa41fbe3f944bad33780626d65d1b11e6f", "filename": "src/llvm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fllvm?ref=52dbe4cc1db040562f5a5c22a0fd917db3040011", "patch": "@@ -1 +1 @@\n-Subproject commit 80c896f8ad46f5c3fb777c32c0c71d58a4bdb1e7\n+Subproject commit a320b2aa41fbe3f944bad33780626d65d1b11e6f"}]}