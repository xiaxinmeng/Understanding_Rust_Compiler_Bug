{"sha": "2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiNGYyOGU1MzFiN2ZhOWFkNmRkM2NkMTRjZDk1M2E3YmJmOGIzMjY=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-10-06T02:31:43Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-10-08T22:53:42Z"}, "message": "Misc fixups", "tree": {"sha": "1aeb4ee3af659f18d795669f46088da7df3ee946", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1aeb4ee3af659f18d795669f46088da7df3ee946"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326", "html_url": "https://github.com/rust-lang/rust/commit/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d81f785441799edfbd005304a7ff56089a258c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d81f785441799edfbd005304a7ff56089a258c6", "html_url": "https://github.com/rust-lang/rust/commit/3d81f785441799edfbd005304a7ff56089a258c6"}], "stats": {"total": 80, "additions": 54, "deletions": 26}, "files": [{"sha": "dd96ea0460be8a48b2b39505c0d61f6cba9674fc", "filename": "src/librustc/middle/astencode.rs", "status": "modified", "additions": 31, "deletions": 6, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastencode.rs?ref=2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326", "patch": "@@ -54,8 +54,9 @@ use serialize::EncoderHelpers;\n \n #[cfg(test)] use std::io::Cursor;\n #[cfg(test)] use syntax::parse;\n+#[cfg(test)] use syntax::ast::NodeId;\n #[cfg(test)] use rustc_front::print::pprust;\n-#[cfg(test)] use rustc_front::lowering::lower_item;\n+#[cfg(test)] use rustc_front::lowering::{lower_item, LoweringContext};\n \n struct DecodeContext<'a, 'b, 'tcx: 'a> {\n     tcx: &'a ty::ctxt<'tcx>,\n@@ -1374,6 +1375,22 @@ impl FakeExtCtxt for parse::ParseSess {\n     fn parse_sess(&self) -> &parse::ParseSess { self }\n }\n \n+#[cfg(test)]\n+struct FakeNodeIdAssigner;\n+\n+#[cfg(test)]\n+// It should go without sayingt that this may give unexpected results. Avoid\n+// lowering anything which needs new nodes.\n+impl NodeIdAssigner for FakeNodeIdAssigner {\n+    fn next_node_id(&self) -> NodeId {\n+        0\n+    }\n+\n+    fn peek_node_id(&self) -> NodeId {\n+        0\n+    }\n+}\n+\n #[cfg(test)]\n fn mk_ctxt() -> parse::ParseSess {\n     parse::ParseSess::new()\n@@ -1392,23 +1409,29 @@ fn roundtrip(in_item: P<hir::Item>) {\n #[test]\n fn test_basic() {\n     let cx = mk_ctxt();\n-    roundtrip(lower_item(&quote_item!(&cx,\n+    let fnia = FakeNodeIdAssigner;\n+    let lcx = LoweringContext::new(&fnia, None);\n+    roundtrip(lower_item(&lcx, &quote_item!(&cx,\n         fn foo() {}\n     ).unwrap()));\n }\n \n #[test]\n fn test_smalltalk() {\n     let cx = mk_ctxt();\n-    roundtrip(lower_item(&quote_item!(&cx,\n+    let fnia = FakeNodeIdAssigner;\n+    let lcx = LoweringContext::new(&fnia, None);\n+    roundtrip(lower_item(&lcx, &quote_item!(&cx,\n         fn foo() -> isize { 3 + 4 } // first smalltalk program ever executed.\n     ).unwrap()));\n }\n \n #[test]\n fn test_more() {\n     let cx = mk_ctxt();\n-    roundtrip(lower_item(&quote_item!(&cx,\n+    let fnia = FakeNodeIdAssigner;\n+    let lcx = LoweringContext::new(&fnia, None);\n+    roundtrip(lower_item(&lcx, &quote_item!(&cx,\n         fn foo(x: usize, y: usize) -> usize {\n             let z = x + y;\n             return z;\n@@ -1425,10 +1448,12 @@ fn test_simplification() {\n             return alist {eq_fn: eq_int, data: Vec::new()};\n         }\n     ).unwrap();\n-    let hir_item = lower_item(&item);\n+    let fnia = FakeNodeIdAssigner;\n+    let lcx = LoweringContext::new(&fnia, None);\n+    let hir_item = lower_item(&lcx, &item);\n     let item_in = InlinedItemRef::Item(&hir_item);\n     let item_out = simplify_ast(item_in);\n-    let item_exp = InlinedItem::Item(lower_item(&quote_item!(&cx,\n+    let item_exp = InlinedItem::Item(lower_item(&lcx, &quote_item!(&cx,\n         fn new_int_alist<B>() -> alist<isize, B> {\n             return alist {eq_fn: eq_int, data: Vec::new()};\n         }"}, {"sha": "619fcd3406cbca662e53bfd3ac41116251b2a7a8", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326", "patch": "@@ -112,7 +112,7 @@ pub fn compile_input(sess: Session,\n \n         let expanded_crate = assign_node_ids(&sess, expanded_crate);\n         // Lower ast -> hir.\n-        let lcx = LoweringContext::new(&sess, &expanded_crate);\n+        let lcx = LoweringContext::new(&sess, Some(&expanded_crate));\n         let mut hir_forest = time(sess.time_passes(),\n                                   \"lowering ast -> hir\",\n                                   || hir_map::Forest::new(lower_crate(&lcx, &expanded_crate)));"}, {"sha": "4e198a44b94831848ffde0c9758e8c70585b3b65", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326", "patch": "@@ -670,7 +670,7 @@ pub fn pretty_print_input(sess: Session,\n     // There is some twisted, god-forsaken tangle of lifetimes here which makes\n     // the ordering of stuff super-finicky.\n     let mut hir_forest;\n-    let lcx = LoweringContext::new(&sess, &krate);\n+    let lcx = LoweringContext::new(&sess, Some(&krate));\n     let arenas = ty::CtxtArenas::new();\n     let ast_map = if compute_ast_map {\n         hir_forest = hir_map::Forest::new(lower_crate(&lcx, &krate));"}, {"sha": "0c83851ba002ab6f2813fe29aa18588190ee846f", "filename": "src/librustc_driver/test.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326", "patch": "@@ -38,7 +38,7 @@ use syntax::diagnostic::{Level, RenderSpan, Bug, Fatal, Error, Warning, Note, He\n use syntax::parse::token;\n use syntax::feature_gate::UnstableFeatures;\n \n-use rustc_front::lowering::lower_crate;\n+use rustc_front::lowering::{lower_crate, LoweringContext};\n use rustc_front::hir;\n \n struct Env<'a, 'tcx: 'a> {\n@@ -124,7 +124,8 @@ fn test_env<F>(source_string: &str,\n                     .expect(\"phase 2 aborted\");\n \n     let krate = driver::assign_node_ids(&sess, krate);\n-    let mut hir_forest = hir_map::Forest::new(lower_crate(&krate));\n+    let lcx = LoweringContext::new(&sess, Some(&krate));\n+    let mut hir_forest = hir_map::Forest::new(lower_crate(&lcx, &krate));\n     let arenas = ty::CtxtArenas::new();\n     let ast_map = driver::make_map(&sess, &mut hir_forest);\n     let krate = ast_map.krate();\n@@ -135,7 +136,7 @@ fn test_env<F>(source_string: &str,\n         resolve::resolve_crate(&sess, &ast_map, resolve::MakeGlobMap::No);\n     let named_region_map = resolve_lifetime::krate(&sess, krate, &def_map);\n     let region_map = region::resolve_crate(&sess, krate);\n-    ty::ctxt::create_and_enter(sess,\n+    ty::ctxt::create_and_enter(&sess,\n                                &arenas,\n                                def_map,\n                                named_region_map,"}, {"sha": "244d59887d73398f293130ba2e9c0b8c3ea30cfa", "filename": "src/librustc_front/lowering.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326/src%2Flibrustc_front%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326/src%2Flibrustc_front%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2Flowering.rs?ref=2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326", "patch": "@@ -80,14 +80,16 @@ pub struct LoweringContext<'a> {\n }\n \n impl<'a, 'hir> LoweringContext<'a> {\n-    pub fn new(id_assigner: &'a NodeIdAssigner, c: &Crate) -> LoweringContext<'a> {\n-        let crate_root = if std_inject::no_core(c) {\n-            None\n-        } else if std_inject::no_std(c) {\n-            Some(\"core\")\n-        } else {\n-            Some(\"std\")\n-        };\n+    pub fn new(id_assigner: &'a NodeIdAssigner, c: Option<&Crate>) -> LoweringContext<'a> {\n+        let crate_root = c.and_then(|c| {\n+            if std_inject::no_core(c) {\n+                None\n+            } else if std_inject::no_std(c) {\n+                Some(\"core\")\n+            } else {\n+                Some(\"std\")\n+            }\n+        });\n \n         LoweringContext {\n             crate_root: crate_root,"}, {"sha": "b3ec10a8941dc753e69b3f72344cecfbdb2ba5bd", "filename": "src/librustc_typeck/coherence/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs?ref=2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326", "patch": "@@ -38,7 +38,6 @@ use std::cell::RefCell;\n use std::rc::Rc;\n use syntax::codemap::Span;\n use syntax::parse::token;\n-use syntax::ast::NodeIdAssigner;\n use util::nodemap::{DefIdMap, FnvHashMap};\n use rustc::front::map as hir_map;\n use rustc::front::map::NodeItem;"}, {"sha": "776917d6724d82632fb002eeebee8ce1f487edec", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326", "patch": "@@ -135,7 +135,7 @@ pub fn run_core(search_paths: SearchPaths, cfgs: Vec<String>, externs: Externs,\n \n     let krate = driver::assign_node_ids(&sess, krate);\n     // Lower ast -> hir.\n-    let lcx = LoweringContext::new(&sess, &krate);\n+    let lcx = LoweringContext::new(&sess, Some(&krate));\n     let mut hir_forest = hir_map::Forest::new(lower_crate(&lcx, &krate));\n     let arenas = ty::CtxtArenas::new();\n     let hir_map = driver::make_map(&sess, &mut hir_forest);"}, {"sha": "87e1d8a0392461bc89b7ebdda4241c8e3d66a983", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326", "patch": "@@ -83,7 +83,7 @@ pub fn run(input: &str,\n                                                      \"rustdoc-test\", None)\n         .expect(\"phase_2_configure_and_expand aborted in rustdoc!\");\n     let krate = driver::assign_node_ids(&sess, krate);\n-    let lcx = LoweringContext::new(&sess, &krate);\n+    let lcx = LoweringContext::new(&sess, Some(&krate));\n     let krate = lower_crate(&lcx, &krate);\n \n     let opts = scrape_test_config(&krate);"}, {"sha": "bad0afe79d69189da14ba3730f36ad0dbff1ba21", "filename": "src/test/run-make/execution-engine/test.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs?ref=2b4f28e531b7fa9ad6dd3cd14cd953a7bbf8b326", "patch": "@@ -31,7 +31,7 @@ use rustc::middle::ty;\n use rustc::session::config::{self, basic_options, build_configuration, Input, Options};\n use rustc::session::build_session;\n use rustc_driver::driver;\n-use rustc_front::lowering::lower_crate;\n+use rustc_front::lowering::{lower_crate, LoweringContext};\n use rustc_resolve::MakeGlobMap;\n use libc::c_void;\n \n@@ -223,12 +223,13 @@ fn compile_program(input: &str, sysroot: PathBuf)\n             .expect(\"phase_2 returned `None`\");\n \n         let krate = driver::assign_node_ids(&sess, krate);\n-        let mut hir_forest = ast_map::Forest::new(lower_crate(&krate));\n+        let lcx = LoweringContext::new(&sess, Some(&krate));\n+        let mut hir_forest = ast_map::Forest::new(lower_crate(&lcx, &krate));\n         let arenas = ty::CtxtArenas::new();\n         let ast_map = driver::make_map(&sess, &mut hir_forest);\n \n         driver::phase_3_run_analysis_passes(\n-            sess, ast_map, &arenas, id, MakeGlobMap::No, |tcx, analysis| {\n+            &sess, ast_map, &arenas, id, MakeGlobMap::No, |tcx, analysis| {\n \n             let trans = driver::phase_4_translate_to_llvm(tcx, analysis);\n \n@@ -246,7 +247,7 @@ fn compile_program(input: &str, sysroot: PathBuf)\n             let modp = llmod as usize;\n \n             (modp, deps)\n-        }).1\n+        })\n     }).unwrap();\n \n     match handle.join() {"}]}