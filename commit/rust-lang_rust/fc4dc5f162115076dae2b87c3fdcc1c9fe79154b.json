{"sha": "fc4dc5f162115076dae2b87c3fdcc1c9fe79154b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjNGRjNWYxNjIxMTUwNzZkYWUyYjg3YzNmZGNjMWM5ZmU3OTE1NGI=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-09-25T00:29:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-25T00:29:51Z"}, "message": "Rollup merge of #77164 - fusion-engineering-forks:no-more-funny-underscores, r=Mark-Simulacrum\n\nRemove workaround for deref issue that no longer exists.\n\nThe double underscores were used to work around issue #12808, which was solved in 2016.", "tree": {"sha": "4bdc96f0581223bc393dca89f8e5fa9000fdd6fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bdc96f0581223bc393dca89f8e5fa9000fdd6fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc4dc5f162115076dae2b87c3fdcc1c9fe79154b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfbTn/CRBK7hj4Ov3rIwAAdHIIAFMTyoh/LSL5eyJQenrapish\nJ0nm9QUqeOdUFqMQmTYdp3SlEZQBa9qh6Mh6dhr+9piXk3VdKd9VyL5UDnWesJRP\nixOgio+NubCuftZ7pTY/fHAqGuFmQX/dH404mvGzKdx2cBkcDQbwCqt/mTDKNyuu\n2BcrlX5TVvsNqztlVaxVTMPQmxYnUradAwGzshJWQyeR9VHkja8+c0cchzAbGgEY\nRiNWs4eZd8m2ouCOQ27UulmWIQjlQ+Zra4jsobpFrXSjzwCJUEOCKHf/WtdIxpsM\npH7NehdxZPXSlzNHV92N4YVeTcPB1Q3Rbw+552hFsf0ieuRhbMiCDik/Sl/ejhc=\n=qG1Y\n-----END PGP SIGNATURE-----\n", "payload": "tree 4bdc96f0581223bc393dca89f8e5fa9000fdd6fa\nparent b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5\nparent 13dc237037c8ef66423639c622d6018f1cf9a37e\nauthor Jonas Schievink <jonasschievink@gmail.com> 1600993791 +0200\ncommitter GitHub <noreply@github.com> 1600993791 +0200\n\nRollup merge of #77164 - fusion-engineering-forks:no-more-funny-underscores, r=Mark-Simulacrum\n\nRemove workaround for deref issue that no longer exists.\n\nThe double underscores were used to work around issue #12808, which was solved in 2016.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc4dc5f162115076dae2b87c3fdcc1c9fe79154b", "html_url": "https://github.com/rust-lang/rust/commit/fc4dc5f162115076dae2b87c3fdcc1c9fe79154b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc4dc5f162115076dae2b87c3fdcc1c9fe79154b/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5", "html_url": "https://github.com/rust-lang/rust/commit/b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5"}, {"sha": "13dc237037c8ef66423639c622d6018f1cf9a37e", "url": "https://api.github.com/repos/rust-lang/rust/commits/13dc237037c8ef66423639c622d6018f1cf9a37e", "html_url": "https://github.com/rust-lang/rust/commit/13dc237037c8ef66423639c622d6018f1cf9a37e"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "162eab2388d554e905c684bcd7ad4b2948f8a6aa", "filename": "library/std/src/sys_common/remutex.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fc4dc5f162115076dae2b87c3fdcc1c9fe79154b/library%2Fstd%2Fsrc%2Fsys_common%2Fremutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc4dc5f162115076dae2b87c3fdcc1c9fe79154b/library%2Fstd%2Fsrc%2Fsys_common%2Fremutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fremutex.rs?ref=fc4dc5f162115076dae2b87c3fdcc1c9fe79154b", "patch": "@@ -37,9 +37,7 @@ impl<T> RefUnwindSafe for ReentrantMutex<T> {}\n /// guarded data.\n #[must_use = \"if unused the ReentrantMutex will immediately unlock\"]\n pub struct ReentrantMutexGuard<'a, T: 'a> {\n-    // funny underscores due to how Deref currently works (it disregards field\n-    // privacy).\n-    __lock: &'a ReentrantMutex<T>,\n+    lock: &'a ReentrantMutex<T>,\n }\n \n impl<T> !marker::Send for ReentrantMutexGuard<'_, T> {}\n@@ -129,23 +127,23 @@ impl<T: fmt::Debug + 'static> fmt::Debug for ReentrantMutex<T> {\n \n impl<'mutex, T> ReentrantMutexGuard<'mutex, T> {\n     fn new(lock: &'mutex ReentrantMutex<T>) -> ReentrantMutexGuard<'mutex, T> {\n-        ReentrantMutexGuard { __lock: lock }\n+        ReentrantMutexGuard { lock }\n     }\n }\n \n impl<T> Deref for ReentrantMutexGuard<'_, T> {\n     type Target = T;\n \n     fn deref(&self) -> &T {\n-        &self.__lock.data\n+        &self.lock.data\n     }\n }\n \n impl<T> Drop for ReentrantMutexGuard<'_, T> {\n     #[inline]\n     fn drop(&mut self) {\n         unsafe {\n-            self.__lock.inner.unlock();\n+            self.lock.inner.unlock();\n         }\n     }\n }"}]}