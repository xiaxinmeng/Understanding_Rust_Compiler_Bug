{"sha": "5b5df0fa17a36ab1a182313c2cb4db0799b9249f", "node_id": "C_kwDOAAsO6NoAKDViNWRmMGZhMTdhMzZhYjFhMTgyMzEzYzJjYjRkYjA3OTliOTI0OWY", "commit": {"author": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-12-03T01:00:09Z"}, "committer": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-12-03T01:00:09Z"}, "message": "Remove incorrect newline from float cast suggestion", "tree": {"sha": "4574799aef07d2d6852fa1aa413752147829859c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4574799aef07d2d6852fa1aa413752147829859c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b5df0fa17a36ab1a182313c2cb4db0799b9249f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b5df0fa17a36ab1a182313c2cb4db0799b9249f", "html_url": "https://github.com/rust-lang/rust/commit/5b5df0fa17a36ab1a182313c2cb4db0799b9249f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b5df0fa17a36ab1a182313c2cb4db0799b9249f/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5038e20999eef35260b070189883edc2a8a34b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5038e20999eef35260b070189883edc2a8a34b2", "html_url": "https://github.com/rust-lang/rust/commit/e5038e20999eef35260b070189883edc2a8a34b2"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "b210c78cae007989d7ea08f895bebc42dab1da13", "filename": "compiler/rustc_typeck/src/check/demand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b5df0fa17a36ab1a182313c2cb4db0799b9249f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b5df0fa17a36ab1a182313c2cb4db0799b9249f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs?ref=5b5df0fa17a36ab1a182313c2cb4db0799b9249f", "patch": "@@ -1223,7 +1223,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     // Missing try_into implementation for `{integer}` to `{float}`\n                     err.multipart_suggestion_verbose(\n                         &format!(\n-                            \"{}, producing the floating point representation of the integer,\n+                            \"{}, producing the floating point representation of the integer, \\\n                                  rounded if necessary\",\n                             cast_msg,\n                         ),"}, {"sha": "b8f2d88ab4957e9fb246700d708eab9f34528959", "filename": "src/test/ui/numeric/numeric-cast.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5b5df0fa17a36ab1a182313c2cb4db0799b9249f/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5b5df0fa17a36ab1a182313c2cb4db0799b9249f/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-cast.stderr?ref=5b5df0fa17a36ab1a182313c2cb4db0799b9249f", "patch": "@@ -994,8 +994,8 @@ error[E0308]: mismatched types\n LL |     foo::<f64>(x_usize);\n    |                ^^^^^^^ expected `f64`, found `usize`\n    |\n-help: you can cast a `usize` to an `f64`, producing the floating point representation of the integer,\n-   |                                              rounded if necessary\n+help: you can cast a `usize` to an `f64`, producing the floating point representation of the integer, rounded if necessary\n+   |\n LL |     foo::<f64>(x_usize as f64);\n    |                        ++++++\n \n@@ -1005,8 +1005,8 @@ error[E0308]: mismatched types\n LL |     foo::<f64>(x_u64);\n    |                ^^^^^ expected `f64`, found `u64`\n    |\n-help: you can cast a `u64` to an `f64`, producing the floating point representation of the integer,\n-   |                                              rounded if necessary\n+help: you can cast a `u64` to an `f64`, producing the floating point representation of the integer, rounded if necessary\n+   |\n LL |     foo::<f64>(x_u64 as f64);\n    |                      ++++++\n \n@@ -1115,8 +1115,8 @@ error[E0308]: mismatched types\n LL |     foo::<f32>(x_usize);\n    |                ^^^^^^^ expected `f32`, found `usize`\n    |\n-help: you can cast a `usize` to an `f32`, producing the floating point representation of the integer,\n-   |                                              rounded if necessary\n+help: you can cast a `usize` to an `f32`, producing the floating point representation of the integer, rounded if necessary\n+   |\n LL |     foo::<f32>(x_usize as f32);\n    |                        ++++++\n \n@@ -1126,8 +1126,8 @@ error[E0308]: mismatched types\n LL |     foo::<f32>(x_u64);\n    |                ^^^^^ expected `f32`, found `u64`\n    |\n-help: you can cast a `u64` to an `f32`, producing the floating point representation of the integer,\n-   |                                              rounded if necessary\n+help: you can cast a `u64` to an `f32`, producing the floating point representation of the integer, rounded if necessary\n+   |\n LL |     foo::<f32>(x_u64 as f32);\n    |                      ++++++\n \n@@ -1137,8 +1137,8 @@ error[E0308]: mismatched types\n LL |     foo::<f32>(x_u32);\n    |                ^^^^^ expected `f32`, found `u32`\n    |\n-help: you can cast a `u32` to an `f32`, producing the floating point representation of the integer,\n-   |                                              rounded if necessary\n+help: you can cast a `u32` to an `f32`, producing the floating point representation of the integer, rounded if necessary\n+   |\n LL |     foo::<f32>(x_u32 as f32);\n    |                      ++++++\n "}]}