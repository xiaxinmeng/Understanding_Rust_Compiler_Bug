{"sha": "00dfc32cadbf0c971a976273843361d83012497b", "node_id": "C_kwDOAAsO6NoAKDAwZGZjMzJjYWRiZjBjOTcxYTk3NjI3Mzg0MzM2MWQ4MzAxMjQ5N2I", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-24T05:38:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-24T05:38:56Z"}, "message": "Rollup merge of #102175 - oli-obk:miri_subtree_cleanup, r=jyn514\n\nAlso require other subtrees to always build successfully\n\nr? ``@jyn514``", "tree": {"sha": "321cb600c1f2a7109d124257f9a9c0431bf9caa5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/321cb600c1f2a7109d124257f9a9c0431bf9caa5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00dfc32cadbf0c971a976273843361d83012497b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjLpfwCRBK7hj4Ov3rIwAALboIAKOw3Roo+xKAd5kqdfW5pQ0n\nYfQIXwTKpMYwpZiGmzWXEM7St3iF65XsZiK2H3zdQIZ3ERP3OwtUBBHioXpd8cus\ntQuMfk0aMXQX9yDZBWHDkTIyKjz7Zh2W89r4IBAUI06RCnXpAGWEKQsoHbPbtQUB\nRh7CY1MVFWMHNJORIW7dJZiYHL/ER8oI3QaaNeG/PgdzKRF2rPBdR7k4cfLP6J+T\nnYTO9Pwxs8F8K38uWKKN+oIFvveIAa4os84A8uGsMt1d5Qz326bdT1K/wpSOGUp2\nTf8xuhDUPOX5MJW32DIFhttnXSG1n1Ceb/BjXKGh5XOeg1IfszcX2v90AFcyXbg=\n=uLEI\n-----END PGP SIGNATURE-----\n", "payload": "tree 321cb600c1f2a7109d124257f9a9c0431bf9caa5\nparent a842357d37b0c043ccfeccc568cbf597d217d887\nparent 7ed999b616a7be1014af93760c4f8fc5851eef76\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1663997936 +0200\ncommitter GitHub <noreply@github.com> 1663997936 +0200\n\nRollup merge of #102175 - oli-obk:miri_subtree_cleanup, r=jyn514\n\nAlso require other subtrees to always build successfully\n\nr? ``@jyn514``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00dfc32cadbf0c971a976273843361d83012497b", "html_url": "https://github.com/rust-lang/rust/commit/00dfc32cadbf0c971a976273843361d83012497b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00dfc32cadbf0c971a976273843361d83012497b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a842357d37b0c043ccfeccc568cbf597d217d887", "url": "https://api.github.com/repos/rust-lang/rust/commits/a842357d37b0c043ccfeccc568cbf597d217d887", "html_url": "https://github.com/rust-lang/rust/commit/a842357d37b0c043ccfeccc568cbf597d217d887"}, {"sha": "7ed999b616a7be1014af93760c4f8fc5851eef76", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ed999b616a7be1014af93760c4f8fc5851eef76", "html_url": "https://github.com/rust-lang/rust/commit/7ed999b616a7be1014af93760c4f8fc5851eef76"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "e92c4669a24383ed25e7a02789902e24ca2da05a", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/00dfc32cadbf0c971a976273843361d83012497b/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00dfc32cadbf0c971a976273843361d83012497b/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=00dfc32cadbf0c971a976273843361d83012497b", "patch": "@@ -1424,7 +1424,7 @@ impl Step for Extended {\n \n         let xform = |p: &Path| {\n             let mut contents = t!(fs::read_to_string(p));\n-            for tool in &[\"rust-demangler\", \"rust-analyzer\", \"rustfmt\"] {\n+            for tool in &[\"rust-demangler\"] {\n                 if !built_tools.contains(tool) {\n                     contents = filter(&contents, tool);\n                 }\n@@ -1465,7 +1465,8 @@ impl Step for Extended {\n             prepare(\"rust-analysis\");\n             prepare(\"clippy\");\n             prepare(\"miri\");\n-            for tool in &[\"rust-docs\", \"rust-demangler\", \"rust-analyzer\"] {\n+            prepare(\"rust-analyzer\");\n+            for tool in &[\"rust-docs\", \"rust-demangler\"] {\n                 if built_tools.contains(tool) {\n                     prepare(tool);\n                 }\n@@ -1525,7 +1526,8 @@ impl Step for Extended {\n             prepare(\"rust-std\");\n             prepare(\"clippy\");\n             prepare(\"miri\");\n-            for tool in &[\"rust-demangler\", \"rust-analyzer\"] {\n+            prepare(\"rust-analyzer\");\n+            for tool in &[\"rust-demangler\"] {\n                 if built_tools.contains(tool) {\n                     prepare(tool);\n                 }\n@@ -1609,25 +1611,23 @@ impl Step for Extended {\n                     .arg(\"-out\")\n                     .arg(exe.join(\"StdGroup.wxs\")),\n             );\n-            if built_tools.contains(\"rust-analyzer\") {\n-                builder.run(\n-                    Command::new(&heat)\n-                        .current_dir(&exe)\n-                        .arg(\"dir\")\n-                        .arg(\"rust-analyzer\")\n-                        .args(&heat_flags)\n-                        .arg(\"-cg\")\n-                        .arg(\"RustAnalyzerGroup\")\n-                        .arg(\"-dr\")\n-                        .arg(\"RustAnalyzer\")\n-                        .arg(\"-var\")\n-                        .arg(\"var.RustAnalyzerDir\")\n-                        .arg(\"-out\")\n-                        .arg(exe.join(\"RustAnalyzerGroup.wxs\"))\n-                        .arg(\"-t\")\n-                        .arg(etc.join(\"msi/remove-duplicates.xsl\")),\n-                );\n-            }\n+            builder.run(\n+                Command::new(&heat)\n+                    .current_dir(&exe)\n+                    .arg(\"dir\")\n+                    .arg(\"rust-analyzer\")\n+                    .args(&heat_flags)\n+                    .arg(\"-cg\")\n+                    .arg(\"RustAnalyzerGroup\")\n+                    .arg(\"-dr\")\n+                    .arg(\"RustAnalyzer\")\n+                    .arg(\"-var\")\n+                    .arg(\"var.RustAnalyzerDir\")\n+                    .arg(\"-out\")\n+                    .arg(exe.join(\"RustAnalyzerGroup.wxs\"))\n+                    .arg(\"-t\")\n+                    .arg(etc.join(\"msi/remove-duplicates.xsl\")),\n+            );\n             builder.run(\n                 Command::new(&heat)\n                     .current_dir(&exe)"}]}