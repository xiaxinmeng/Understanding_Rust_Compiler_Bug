{"sha": "08a00eb0da303f82057174ab79d5b079d762bb61", "node_id": "C_kwDOAAsO6NoAKDA4YTAwZWIwZGEzMDNmODIwNTcxNzRhYjc5ZDViMDc5ZDc2MmJiNjE", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-31T22:44:20Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-05T04:20:29Z"}, "message": "Address review comments.", "tree": {"sha": "8f291559805ceb4d0610357fdcd01fe563bd5d66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f291559805ceb4d0610357fdcd01fe563bd5d66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08a00eb0da303f82057174ab79d5b079d762bb61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08a00eb0da303f82057174ab79d5b079d762bb61", "html_url": "https://github.com/rust-lang/rust/commit/08a00eb0da303f82057174ab79d5b079d762bb61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08a00eb0da303f82057174ab79d5b079d762bb61/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb0ae3c446e21002324f030efdfcdd80d1242450", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb0ae3c446e21002324f030efdfcdd80d1242450", "html_url": "https://github.com/rust-lang/rust/commit/bb0ae3c446e21002324f030efdfcdd80d1242450"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "22245692d138b1010eb9d892b34e2c8b9a682970", "filename": "compiler/rustc_ast_lowering/src/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08a00eb0da303f82057174ab79d5b079d762bb61/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08a00eb0da303f82057174ab79d5b079d762bb61/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs?ref=08a00eb0da303f82057174ab79d5b079d762bb61", "patch": "@@ -1783,7 +1783,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n             self.arena.alloc(hir::Path {\n                 span: self.lower_span(span),\n                 res,\n-                segments: arena_vec![self; hir::PathSegment::from_ident(ident, hir_id, res)],\n+                segments: arena_vec![self; hir::PathSegment::new(ident, hir_id, res)],\n             }),\n         ));\n "}, {"sha": "8ca52269d6e104f97c17f75f7e037dd65141e501", "filename": "compiler/rustc_ast_lowering/src/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08a00eb0da303f82057174ab79d5b079d762bb61/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08a00eb0da303f82057174ab79d5b079d762bb61/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs?ref=08a00eb0da303f82057174ab79d5b079d762bb61", "patch": "@@ -1438,7 +1438,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                     res,\n                     segments: self\n                         .arena\n-                        .alloc_from_iter([hir::PathSegment::from_ident(ident, hir_id, res)]),\n+                        .alloc_from_iter([hir::PathSegment::new(ident, hir_id, res)]),\n                 });\n                 let ty_id = self.next_id();\n                 let bounded_ty ="}, {"sha": "5832bf91790880c69f4d404c3006d871111e3026", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/08a00eb0da303f82057174ab79d5b079d762bb61/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08a00eb0da303f82057174ab79d5b079d762bb61/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=08a00eb0da303f82057174ab79d5b079d762bb61", "patch": "@@ -1267,7 +1267,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                     None,\n                     self.arena.alloc(hir::Path {\n                         res,\n-                        segments: arena_vec![self; hir::PathSegment::from_ident(\n+                        segments: arena_vec![self; hir::PathSegment::new(\n                             Ident::with_dummy_span(kw::SelfUpper),\n                             hir_id,\n                             res\n@@ -2203,7 +2203,8 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n             self.arena.alloc(hir::Path {\n                 span: self.lower_span(span),\n                 res,\n-                segments: arena_vec![self; hir::PathSegment::from_ident(self.lower_ident(ident), hir_id, res)],\n+                segments:\n+                    arena_vec![self; hir::PathSegment::new(self.lower_ident(ident), hir_id, res)],\n             }),\n         ));\n "}, {"sha": "87ccf5861e1c0ed7c63b2f347ca0dc5b70b70611", "filename": "compiler/rustc_ast_lowering/src/pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08a00eb0da303f82057174ab79d5b079d762bb61/compiler%2Frustc_ast_lowering%2Fsrc%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08a00eb0da303f82057174ab79d5b079d762bb61/compiler%2Frustc_ast_lowering%2Fsrc%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fpat.rs?ref=08a00eb0da303f82057174ab79d5b079d762bb61", "patch": "@@ -262,7 +262,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                     self.arena.alloc(hir::Path {\n                         span: self.lower_span(ident.span),\n                         res,\n-                        segments: arena_vec![self; hir::PathSegment::from_ident(self.lower_ident(ident), hir_id, res)],\n+                        segments: arena_vec![self; hir::PathSegment::new(self.lower_ident(ident), hir_id, res)],\n                     }),\n             ))\n             }"}, {"sha": "b395917cd7ab6f74324acdd7d0f172a3c921efdf", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/08a00eb0da303f82057174ab79d5b079d762bb61/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08a00eb0da303f82057174ab79d5b079d762bb61/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=08a00eb0da303f82057174ab79d5b079d762bb61", "patch": "@@ -202,9 +202,7 @@ impl Path<'_> {\n pub struct PathSegment<'hir> {\n     /// The identifier portion of this path segment.\n     pub ident: Ident,\n-\n     pub hir_id: HirId,\n-\n     pub res: Res,\n \n     /// Type/lifetime parameters attached to this path. They come in\n@@ -223,12 +221,12 @@ pub struct PathSegment<'hir> {\n \n impl<'hir> PathSegment<'hir> {\n     /// Converts an identifier to the corresponding segment.\n-    pub fn from_ident(ident: Ident, hir_id: HirId, res: Res) -> PathSegment<'hir> {\n+    pub fn new(ident: Ident, hir_id: HirId, res: Res) -> PathSegment<'hir> {\n         PathSegment { ident, hir_id, res, infer_args: true, args: None }\n     }\n \n     pub fn invalid() -> Self {\n-        Self::from_ident(Ident::empty(), HirId::INVALID, Res::Err)\n+        Self::new(Ident::empty(), HirId::INVALID, Res::Err)\n     }\n \n     pub fn args(&self) -> &GenericArgs<'hir> {"}, {"sha": "d95ade594fbbeae01d39f5337b53d52f88793fcc", "filename": "compiler/rustc_save_analysis/src/dump_visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08a00eb0da303f82057174ab79d5b079d762bb61/compiler%2Frustc_save_analysis%2Fsrc%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08a00eb0da303f82057174ab79d5b079d762bb61/compiler%2Frustc_save_analysis%2Fsrc%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_save_analysis%2Fsrc%2Fdump_visitor.rs?ref=08a00eb0da303f82057174ab79d5b079d762bb61", "patch": "@@ -914,7 +914,7 @@ impl<'tcx> DumpVisitor<'tcx> {\n                 | Res::SelfTy { .. } => {\n                     self.dump_path_segment_ref(\n                         id,\n-                        &hir::PathSegment::from_ident(ident, hir::HirId::INVALID, Res::Err),\n+                        &hir::PathSegment::new(ident, hir::HirId::INVALID, Res::Err),\n                     );\n                 }\n                 def => {"}]}