{"sha": "708536bb470721e582c85e800f8ccca568cdfc7c", "node_id": "C_kwDOAAsO6NoAKDcwODUzNmJiNDcwNzIxZTU4MmM4NWU4MDBmOGNjY2E1NjhjZGZjN2M", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-03-05T19:18:58Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-03-05T19:18:58Z"}, "message": "Remove -Zverbose.", "tree": {"sha": "aedde3c08ee4d9a8e68f92ee0aafb9c45b8d7cde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aedde3c08ee4d9a8e68f92ee0aafb9c45b8d7cde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/708536bb470721e582c85e800f8ccca568cdfc7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/708536bb470721e582c85e800f8ccca568cdfc7c", "html_url": "https://github.com/rust-lang/rust/commit/708536bb470721e582c85e800f8ccca568cdfc7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/708536bb470721e582c85e800f8ccca568cdfc7c/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc1a861558a49013fb6af5e4c36450a3b96ddc03", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc1a861558a49013fb6af5e4c36450a3b96ddc03", "html_url": "https://github.com/rust-lang/rust/commit/fc1a861558a49013fb6af5e4c36450a3b96ddc03"}], "stats": {"total": 261, "additions": 125, "deletions": 136}, "files": [{"sha": "225f80ed41b471453802b24e2749c11c9090c328", "filename": "tests/mir-opt/sroa/lifetimes.foo.ScalarReplacementOfAggregates.diff", "status": "modified", "additions": 124, "deletions": 135, "changes": 259, "blob_url": "https://github.com/rust-lang/rust/blob/708536bb470721e582c85e800f8ccca568cdfc7c/tests%2Fmir-opt%2Fsroa%2Flifetimes.foo.ScalarReplacementOfAggregates.diff", "raw_url": "https://github.com/rust-lang/rust/raw/708536bb470721e582c85e800f8ccca568cdfc7c/tests%2Fmir-opt%2Fsroa%2Flifetimes.foo.ScalarReplacementOfAggregates.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fsroa%2Flifetimes.foo.ScalarReplacementOfAggregates.diff?ref=708536bb470721e582c85e800f8ccca568cdfc7c", "patch": "@@ -4,222 +4,211 @@\n   fn foo() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/lifetimes.rs:+0:18: +0:18\n       let _1: Foo<T>;                      // in scope 0 at $DIR/lifetimes.rs:+1:9: +1:12\n-      let mut _2: std::result::Result<std::boxed::Box<(dyn std::fmt::Display + ReErased)>, <T as Err>::Err>; // in scope 0 at $DIR/lifetimes.rs:+2:12: +2:31\n-      let mut _3: std::boxed::Box<(dyn std::fmt::Display + ReErased)>; // in scope 0 at $DIR/lifetimes.rs:+2:15: +2:30\n+      let mut _2: std::result::Result<std::boxed::Box<dyn std::fmt::Display>, <T as Err>::Err>; // in scope 0 at $DIR/lifetimes.rs:+2:12: +2:31\n+      let mut _3: std::boxed::Box<dyn std::fmt::Display>; // in scope 0 at $DIR/lifetimes.rs:+2:15: +2:30\n       let mut _4: std::boxed::Box<u32>;    // in scope 0 at $DIR/lifetimes.rs:+2:15: +2:30\n       let mut _7: isize;                   // in scope 0 at $DIR/lifetimes.rs:+9:12: +9:17\n       let _9: ();                          // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n       let _10: ();                         // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _11: std::fmt::Arguments<ReErased>; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _12: &ReErased [&ReErased str]; // in scope 0 at $DIR/lifetimes.rs:+10:19: +10:28\n-      let mut _13: &ReErased [&ReErased str; Const(Value(Leaf(0x0000000000000003)): usize)]; // in scope 0 at $DIR/lifetimes.rs:+10:19: +10:28\n-      let _14: &ReErased [&ReErased str; Const(Value(Leaf(0x0000000000000003)): usize)]; // in scope 0 at $DIR/lifetimes.rs:+10:19: +10:28\n-      let _15: [&ReErased str; Const(Value(Leaf(0x0000000000000003)): usize)]; // in scope 0 at $DIR/lifetimes.rs:+10:19: +10:28\n-      let mut _16: &ReErased [core::fmt::ArgumentV1<ReErased>]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _17: &ReErased [core::fmt::ArgumentV1<ReErased>; Const(Value(Leaf(0x0000000000000002)): usize)]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let _18: &ReErased [core::fmt::ArgumentV1<ReErased>; Const(Value(Leaf(0x0000000000000002)): usize)]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let _19: [core::fmt::ArgumentV1<ReErased>; Const(Value(Leaf(0x0000000000000002)): usize)]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _20: core::fmt::ArgumentV1<ReErased>; // in scope 0 at $DIR/lifetimes.rs:+10:21: +10:22\n-      let mut _21: &ReErased std::boxed::Box<(dyn std::fmt::Display + ReErased)>; // in scope 0 at $DIR/lifetimes.rs:+10:21: +10:22\n-      let _22: &ReErased std::boxed::Box<(dyn std::fmt::Display + ReErased)>; // in scope 0 at $DIR/lifetimes.rs:+10:21: +10:22\n-      let mut _23: core::fmt::ArgumentV1<ReErased>; // in scope 0 at $DIR/lifetimes.rs:+10:25: +10:26\n-      let mut _24: &ReErased u32;          // in scope 0 at $DIR/lifetimes.rs:+10:25: +10:26\n-      let _25: &ReErased u32;              // in scope 0 at $DIR/lifetimes.rs:+10:25: +10:26\n+      let mut _11: std::fmt::Arguments<'_>; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n+      let mut _12: &[&str];                // in scope 0 at $DIR/lifetimes.rs:+10:19: +10:28\n+      let mut _13: &[&str; 3];             // in scope 0 at $DIR/lifetimes.rs:+10:19: +10:28\n+      let _14: &[&str; 3];                 // in scope 0 at $DIR/lifetimes.rs:+10:19: +10:28\n+      let _15: [&str; 3];                  // in scope 0 at $DIR/lifetimes.rs:+10:19: +10:28\n+      let mut _16: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n+      let mut _17: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n+      let _18: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n+      let _19: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n+      let mut _20: core::fmt::ArgumentV1<'_>; // in scope 0 at $DIR/lifetimes.rs:+10:21: +10:22\n+      let mut _21: &std::boxed::Box<dyn std::fmt::Display>; // in scope 0 at $DIR/lifetimes.rs:+10:21: +10:22\n+      let _22: &std::boxed::Box<dyn std::fmt::Display>; // in scope 0 at $DIR/lifetimes.rs:+10:21: +10:22\n+      let mut _23: core::fmt::ArgumentV1<'_>; // in scope 0 at $DIR/lifetimes.rs:+10:25: +10:26\n+      let mut _24: &u32;                   // in scope 0 at $DIR/lifetimes.rs:+10:25: +10:26\n+      let _25: &u32;                       // in scope 0 at $DIR/lifetimes.rs:+10:25: +10:26\n       let mut _27: bool;                   // in scope 0 at $DIR/lifetimes.rs:+12:1: +12:2\n       let mut _28: isize;                  // in scope 0 at $DIR/lifetimes.rs:+12:1: +12:2\n       let mut _29: isize;                  // in scope 0 at $DIR/lifetimes.rs:+12:1: +12:2\n       let mut _30: isize;                  // in scope 0 at $DIR/lifetimes.rs:+12:1: +12:2\n-+     let _31: std::result::Result<std::boxed::Box<(dyn std::fmt::Display + ReErased)>, <T as Err>::Err>; // in scope 0 at $DIR/lifetimes.rs:+1:9: +1:12\n++     let _31: std::result::Result<std::boxed::Box<dyn std::fmt::Display>, <T as Err>::Err>; // in scope 0 at $DIR/lifetimes.rs:+1:9: +1:12\n +     let _32: u32;                        // in scope 0 at $DIR/lifetimes.rs:+1:9: +1:12\n       scope 1 {\n -         debug foo => _1;                 // in scope 1 at $DIR/lifetimes.rs:+1:9: +1:12\n +         debug foo => Foo<T>{ .0 => _31, .1 => _32, }; // in scope 1 at $DIR/lifetimes.rs:+1:9: +1:12\n-          let _5: std::result::Result<std::boxed::Box<(dyn std::fmt::Display + ReErased)>, <T as Err>::Err>; // in scope 1 at $DIR/lifetimes.rs:+6:9: +6:10\n+          let _5: std::result::Result<std::boxed::Box<dyn std::fmt::Display>, <T as Err>::Err>; // in scope 1 at $DIR/lifetimes.rs:+6:9: +6:10\n           scope 2 {\n               debug x => _5;               // in scope 2 at $DIR/lifetimes.rs:+6:9: +6:10\n               let _6: u32;                 // in scope 2 at $DIR/lifetimes.rs:+7:9: +7:10\n               scope 3 {\n                   debug y => _6;           // in scope 3 at $DIR/lifetimes.rs:+7:9: +7:10\n                   scope 4 {\n                       debug x => _8;       // in scope 4 at $DIR/lifetimes.rs:+9:15: +9:16\n-                      let _8: std::boxed::Box<(dyn std::fmt::Display + ReErased)>; // in scope 4 at $DIR/lifetimes.rs:+9:15: +9:16\n-                      let mut _26: &ReErased [&ReErased str; Const(Value(Leaf(0x0000000000000003)): usize)]; // in scope 4 at $DIR/lifetimes.rs:+10:19: +10:28\n+                      let _8: std::boxed::Box<dyn std::fmt::Display>; // in scope 4 at $DIR/lifetimes.rs:+9:15: +9:16\n+                      let mut _26: &[&str; 3]; // in scope 4 at $DIR/lifetimes.rs:+10:19: +10:28\n                   }\n               }\n           }\n       }\n   \n       bb0: {\n-          _27 = const ConstValue(Scalar(0x00): bool); // bb0[0]: scope 0 at $DIR/lifetimes.rs:+1:9: +1:12\n--         StorageLive(_1);                 // bb0[1]: scope 0 at $DIR/lifetimes.rs:+1:9: +1:12\n--         StorageLive(_2);                 // bb0[2]: scope 0 at $DIR/lifetimes.rs:+2:12: +2:31\n--         StorageLive(_3);                 // bb0[3]: scope 0 at $DIR/lifetimes.rs:+2:15: +2:30\n--         StorageLive(_4);                 // bb0[4]: scope 0 at $DIR/lifetimes.rs:+2:15: +2:30\n--         _4 = ConstValue(ZeroSized: fn(u32) -> Box<u32> {Box::<u32>::new})(const ConstValue(Scalar(0x00000005): u32)) -> bb1; // bb0[5]: scope 0 at $DIR/lifetimes.rs:+2:15: +2:30\n-+         StorageLive(_31);                // bb0[1]: scope 0 at $DIR/lifetimes.rs:+1:9: +1:12\n-+         StorageLive(_32);                // bb0[2]: scope 0 at $DIR/lifetimes.rs:+1:9: +1:12\n-+         nop;                             // bb0[3]: scope 0 at $DIR/lifetimes.rs:+1:9: +1:12\n-+         StorageLive(_2);                 // bb0[4]: scope 0 at $DIR/lifetimes.rs:+2:12: +2:31\n-+         StorageLive(_3);                 // bb0[5]: scope 0 at $DIR/lifetimes.rs:+2:15: +2:30\n-+         StorageLive(_4);                 // bb0[6]: scope 0 at $DIR/lifetimes.rs:+2:15: +2:30\n-+         _4 = ConstValue(ZeroSized: fn(u32) -> Box<u32> {Box::<u32>::new})(const ConstValue(Scalar(0x00000005): u32)) -> bb1; // bb0[7]: scope 0 at $DIR/lifetimes.rs:+2:15: +2:30\n+          _27 = const false;               // scope 0 at $DIR/lifetimes.rs:+1:9: +1:12\n+-         StorageLive(_1);                 // scope 0 at $DIR/lifetimes.rs:+1:9: +1:12\n++         StorageLive(_31);                // scope 0 at $DIR/lifetimes.rs:+1:9: +1:12\n++         StorageLive(_32);                // scope 0 at $DIR/lifetimes.rs:+1:9: +1:12\n++         nop;                             // scope 0 at $DIR/lifetimes.rs:+1:9: +1:12\n+          StorageLive(_2);                 // scope 0 at $DIR/lifetimes.rs:+2:12: +2:31\n+          StorageLive(_3);                 // scope 0 at $DIR/lifetimes.rs:+2:15: +2:30\n+          StorageLive(_4);                 // scope 0 at $DIR/lifetimes.rs:+2:15: +2:30\n+          _4 = Box::<u32>::new(const 5_u32) -> bb1; // scope 0 at $DIR/lifetimes.rs:+2:15: +2:30\n                                            // mir::Constant\n                                            // + span: $DIR/lifetimes.rs:19:15: 19:23\n                                            // + user_ty: UserType(1)\n                                            // + literal: Const { ty: fn(u32) -> Box<u32> {Box::<u32>::new}, val: Value(<ZST>) }\n       }\n   \n       bb1: {\n-          _3 = move _4 as std::boxed::Box<(dyn std::fmt::Display + ReErased)> (Pointer(Unsize)); // bb1[0]: scope 0 at $DIR/lifetimes.rs:+2:15: +2:30\n-          StorageDead(_4);                 // bb1[1]: scope 0 at $DIR/lifetimes.rs:+2:29: +2:30\n-          _2 = Result::<Box<(dyn std::fmt::Display + ReErased)>, <T as Err>::Err>::Ok(move _3); // bb1[2]: scope 0 at $DIR/lifetimes.rs:+2:12: +2:31\n-          StorageDead(_3);                 // bb1[3]: scope 0 at $DIR/lifetimes.rs:+2:30: +2:31\n--         _1 = Foo::<T> { x: move _2, y: const ConstValue(Scalar(0x00000007): u32) }; // bb1[4]: scope 0 at $DIR/lifetimes.rs:+1:23: +4:6\n--         StorageDead(_2);                 // bb1[5]: scope 0 at $DIR/lifetimes.rs:+4:5: +4:6\n--         StorageLive(_5);                 // bb1[6]: scope 1 at $DIR/lifetimes.rs:+6:9: +6:10\n--         _27 = const ConstValue(Scalar(0x01): bool); // bb1[7]: scope 1 at $DIR/lifetimes.rs:+6:13: +6:18\n--         _5 = move (_1.0: std::result::Result<std::boxed::Box<(dyn std::fmt::Display + ReErased)>, <T as Err>::Err>); // bb1[8]: scope 1 at $DIR/lifetimes.rs:+6:13: +6:18\n--         StorageLive(_6);                 // bb1[9]: scope 2 at $DIR/lifetimes.rs:+7:9: +7:10\n--         _6 = (_1.1: u32);                // bb1[10]: scope 2 at $DIR/lifetimes.rs:+7:13: +7:18\n--         _7 = discriminant(_5);           // bb1[11]: scope 4 at $DIR/lifetimes.rs:+9:12: +9:17\n--         switchInt(move _7) -> [0: bb2, otherwise: bb7]; // bb1[12]: scope 4 at $DIR/lifetimes.rs:+9:12: +9:17\n-+         _31 = move _2;                   // bb1[4]: scope 0 at $DIR/lifetimes.rs:+1:23: +4:6\n-+         _32 = const ConstValue(Scalar(0x00000007): u32); // bb1[5]: scope 0 at $DIR/lifetimes.rs:+1:23: +4:6\n-+         nop;                             // bb1[6]: scope 0 at $DIR/lifetimes.rs:+1:23: +4:6\n-+         StorageDead(_2);                 // bb1[7]: scope 0 at $DIR/lifetimes.rs:+4:5: +4:6\n-+         StorageLive(_5);                 // bb1[8]: scope 1 at $DIR/lifetimes.rs:+6:9: +6:10\n-+         _27 = const ConstValue(Scalar(0x01): bool); // bb1[9]: scope 1 at $DIR/lifetimes.rs:+6:13: +6:18\n-+         _5 = move _31;                   // bb1[10]: scope 1 at $DIR/lifetimes.rs:+6:13: +6:18\n-+         StorageLive(_6);                 // bb1[11]: scope 2 at $DIR/lifetimes.rs:+7:9: +7:10\n-+         _6 = _32;                        // bb1[12]: scope 2 at $DIR/lifetimes.rs:+7:13: +7:18\n-+         _7 = discriminant(_5);           // bb1[13]: scope 4 at $DIR/lifetimes.rs:+9:12: +9:17\n-+         switchInt(move _7) -> [0: bb2, otherwise: bb7]; // bb1[14]: scope 4 at $DIR/lifetimes.rs:+9:12: +9:17\n+          _3 = move _4 as std::boxed::Box<dyn std::fmt::Display> (Pointer(Unsize)); // scope 0 at $DIR/lifetimes.rs:+2:15: +2:30\n+          StorageDead(_4);                 // scope 0 at $DIR/lifetimes.rs:+2:29: +2:30\n+          _2 = Result::<Box<dyn std::fmt::Display>, <T as Err>::Err>::Ok(move _3); // scope 0 at $DIR/lifetimes.rs:+2:12: +2:31\n+          StorageDead(_3);                 // scope 0 at $DIR/lifetimes.rs:+2:30: +2:31\n+-         _1 = Foo::<T> { x: move _2, y: const 7_u32 }; // scope 0 at $DIR/lifetimes.rs:+1:23: +4:6\n++         _31 = move _2;                   // scope 0 at $DIR/lifetimes.rs:+1:23: +4:6\n++         _32 = const 7_u32;               // scope 0 at $DIR/lifetimes.rs:+1:23: +4:6\n++         nop;                             // scope 0 at $DIR/lifetimes.rs:+1:23: +4:6\n+          StorageDead(_2);                 // scope 0 at $DIR/lifetimes.rs:+4:5: +4:6\n+          StorageLive(_5);                 // scope 1 at $DIR/lifetimes.rs:+6:9: +6:10\n+          _27 = const true;                // scope 1 at $DIR/lifetimes.rs:+6:13: +6:18\n+-         _5 = move (_1.0: std::result::Result<std::boxed::Box<dyn std::fmt::Display>, <T as Err>::Err>); // scope 1 at $DIR/lifetimes.rs:+6:13: +6:18\n++         _5 = move _31;                   // scope 1 at $DIR/lifetimes.rs:+6:13: +6:18\n+          StorageLive(_6);                 // scope 2 at $DIR/lifetimes.rs:+7:9: +7:10\n+-         _6 = (_1.1: u32);                // scope 2 at $DIR/lifetimes.rs:+7:13: +7:18\n++         _6 = _32;                        // scope 2 at $DIR/lifetimes.rs:+7:13: +7:18\n+          _7 = discriminant(_5);           // scope 4 at $DIR/lifetimes.rs:+9:12: +9:17\n+          switchInt(move _7) -> [0: bb2, otherwise: bb7]; // scope 4 at $DIR/lifetimes.rs:+9:12: +9:17\n       }\n   \n       bb2: {\n-          StorageLive(_8);                 // bb2[0]: scope 4 at $DIR/lifetimes.rs:+9:15: +9:16\n-          _27 = const ConstValue(Scalar(0x00): bool); // bb2[1]: scope 4 at $DIR/lifetimes.rs:+9:15: +9:16\n-          _8 = move ((_5 as Ok).0: std::boxed::Box<(dyn std::fmt::Display + ReErased)>); // bb2[2]: scope 4 at $DIR/lifetimes.rs:+9:15: +9:16\n-          StorageLive(_9);                 // bb2[3]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_10);                // bb2[4]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_11);                // bb2[5]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_12);                // bb2[6]: scope 4 at $DIR/lifetimes.rs:+10:19: +10:28\n-          StorageLive(_13);                // bb2[7]: scope 4 at $DIR/lifetimes.rs:+10:19: +10:28\n-          StorageLive(_14);                // bb2[8]: scope 4 at $DIR/lifetimes.rs:+10:19: +10:28\n-          _26 = const _;                   // bb2[9]: scope 4 at $DIR/lifetimes.rs:+10:19: +10:28\n+          StorageLive(_8);                 // scope 4 at $DIR/lifetimes.rs:+9:15: +9:16\n+          _27 = const false;               // scope 4 at $DIR/lifetimes.rs:+9:15: +9:16\n+          _8 = move ((_5 as Ok).0: std::boxed::Box<dyn std::fmt::Display>); // scope 4 at $DIR/lifetimes.rs:+9:15: +9:16\n+          StorageLive(_9);                 // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageLive(_10);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageLive(_11);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageLive(_12);                // scope 4 at $DIR/lifetimes.rs:+10:19: +10:28\n+          StorageLive(_13);                // scope 4 at $DIR/lifetimes.rs:+10:19: +10:28\n+          StorageLive(_14);                // scope 4 at $DIR/lifetimes.rs:+10:19: +10:28\n+          _26 = const _;                   // scope 4 at $DIR/lifetimes.rs:+10:19: +10:28\n                                            // mir::Constant\n                                            // + span: $DIR/lifetimes.rs:27:19: 27:28\n-                                           // + literal: Const { ty: &ReErased [&ReErased str; Const(Value(Leaf(0x0000000000000003)): usize)], val: Unevaluated(foo, [T], Some(promoted[0])) }\n-          _14 = &ReErased (*_26);          // bb2[10]: scope 4 at $DIR/lifetimes.rs:+10:19: +10:28\n-          _13 = &ReErased (*_14);          // bb2[11]: scope 4 at $DIR/lifetimes.rs:+10:19: +10:28\n-          _12 = move _13 as &ReErased [&ReErased str] (Pointer(Unsize)); // bb2[12]: scope 4 at $DIR/lifetimes.rs:+10:19: +10:28\n-          StorageDead(_13);                // bb2[13]: scope 4 at $DIR/lifetimes.rs:+10:27: +10:28\n-          StorageLive(_16);                // bb2[14]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_17);                // bb2[15]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_18);                // bb2[16]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_19);                // bb2[17]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_20);                // bb2[18]: scope 4 at $DIR/lifetimes.rs:+10:21: +10:22\n-          StorageLive(_21);                // bb2[19]: scope 4 at $DIR/lifetimes.rs:+10:21: +10:22\n-          StorageLive(_22);                // bb2[20]: scope 4 at $DIR/lifetimes.rs:+10:21: +10:22\n-          _22 = &ReErased _8;              // bb2[21]: scope 4 at $DIR/lifetimes.rs:+10:21: +10:22\n-          _21 = &ReErased (*_22);          // bb2[22]: scope 4 at $DIR/lifetimes.rs:+10:21: +10:22\n-          _20 = ConstValue(ZeroSized: for<Region(BrNamed(DefId(2:49824 ~ core[0bcc]::fmt::{impl#3}::new_display::'b), 'b))> fn(&ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(2:49824 ~ core[0bcc]::fmt::{impl#3}::new_display::'b), 'b) }) Box<(dyn std::fmt::Display + ReErased)>) -> core::fmt::ArgumentV1<ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(2:49824 ~ core[0bcc]::fmt::{impl#3}::new_display::'b), 'b) })> {core::fmt::ArgumentV1::<ReErased>::new_display::<Box<(dyn std::fmt::Display + ReErased)>>})(move _21) -> bb3; // bb2[23]: scope 4 at $DIR/lifetimes.rs:+10:21: +10:22\n+                                           // + literal: Const { ty: &[&str; 3], val: Unevaluated(foo, [T], Some(promoted[0])) }\n+          _14 = &(*_26);                   // scope 4 at $DIR/lifetimes.rs:+10:19: +10:28\n+          _13 = &(*_14);                   // scope 4 at $DIR/lifetimes.rs:+10:19: +10:28\n+          _12 = move _13 as &[&str] (Pointer(Unsize)); // scope 4 at $DIR/lifetimes.rs:+10:19: +10:28\n+          StorageDead(_13);                // scope 4 at $DIR/lifetimes.rs:+10:27: +10:28\n+          StorageLive(_16);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageLive(_17);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageLive(_18);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageLive(_19);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageLive(_20);                // scope 4 at $DIR/lifetimes.rs:+10:21: +10:22\n+          StorageLive(_21);                // scope 4 at $DIR/lifetimes.rs:+10:21: +10:22\n+          StorageLive(_22);                // scope 4 at $DIR/lifetimes.rs:+10:21: +10:22\n+          _22 = &_8;                       // scope 4 at $DIR/lifetimes.rs:+10:21: +10:22\n+          _21 = &(*_22);                   // scope 4 at $DIR/lifetimes.rs:+10:21: +10:22\n+          _20 = core::fmt::ArgumentV1::<'_>::new_display::<Box<dyn std::fmt::Display>>(move _21) -> bb3; // scope 4 at $DIR/lifetimes.rs:+10:21: +10:22\n                                            // mir::Constant\n                                            // + span: $DIR/lifetimes.rs:27:21: 27:22\n                                            // + user_ty: UserType(4)\n-                                           // + literal: Const { ty: for<Region(BrNamed(DefId(2:49824 ~ core[0bcc]::fmt::{impl#3}::new_display::'b), 'b))> fn(&ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(2:49824 ~ core[0bcc]::fmt::{impl#3}::new_display::'b), 'b) }) Box<(dyn std::fmt::Display + ReErased)>) -> core::fmt::ArgumentV1<ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(2:49824 ~ core[0bcc]::fmt::{impl#3}::new_display::'b), 'b) })> {core::fmt::ArgumentV1::<ReErased>::new_display::<Box<(dyn std::fmt::Display + ReErased)>>}, val: Value(<ZST>) }\n+                                           // + literal: Const { ty: for<'b> fn(&'b Box<dyn std::fmt::Display>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<Box<dyn std::fmt::Display>>}, val: Value(<ZST>) }\n       }\n   \n       bb3: {\n-          StorageDead(_21);                // bb3[0]: scope 4 at $DIR/lifetimes.rs:+10:21: +10:22\n-          StorageLive(_23);                // bb3[1]: scope 4 at $DIR/lifetimes.rs:+10:25: +10:26\n-          StorageLive(_24);                // bb3[2]: scope 4 at $DIR/lifetimes.rs:+10:25: +10:26\n-          StorageLive(_25);                // bb3[3]: scope 4 at $DIR/lifetimes.rs:+10:25: +10:26\n-          _25 = &ReErased _6;              // bb3[4]: scope 4 at $DIR/lifetimes.rs:+10:25: +10:26\n-          _24 = &ReErased (*_25);          // bb3[5]: scope 4 at $DIR/lifetimes.rs:+10:25: +10:26\n-          _23 = ConstValue(ZeroSized: for<Region(BrNamed(DefId(2:49824 ~ core[0bcc]::fmt::{impl#3}::new_display::'b), 'b))> fn(&ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(2:49824 ~ core[0bcc]::fmt::{impl#3}::new_display::'b), 'b) }) u32) -> core::fmt::ArgumentV1<ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(2:49824 ~ core[0bcc]::fmt::{impl#3}::new_display::'b), 'b) })> {core::fmt::ArgumentV1::<ReErased>::new_display::<u32>})(move _24) -> bb4; // bb3[6]: scope 4 at $DIR/lifetimes.rs:+10:25: +10:26\n+          StorageDead(_21);                // scope 4 at $DIR/lifetimes.rs:+10:21: +10:22\n+          StorageLive(_23);                // scope 4 at $DIR/lifetimes.rs:+10:25: +10:26\n+          StorageLive(_24);                // scope 4 at $DIR/lifetimes.rs:+10:25: +10:26\n+          StorageLive(_25);                // scope 4 at $DIR/lifetimes.rs:+10:25: +10:26\n+          _25 = &_6;                       // scope 4 at $DIR/lifetimes.rs:+10:25: +10:26\n+          _24 = &(*_25);                   // scope 4 at $DIR/lifetimes.rs:+10:25: +10:26\n+          _23 = core::fmt::ArgumentV1::<'_>::new_display::<u32>(move _24) -> bb4; // scope 4 at $DIR/lifetimes.rs:+10:25: +10:26\n                                            // mir::Constant\n                                            // + span: $DIR/lifetimes.rs:27:25: 27:26\n                                            // + user_ty: UserType(5)\n-                                           // + literal: Const { ty: for<Region(BrNamed(DefId(2:49824 ~ core[0bcc]::fmt::{impl#3}::new_display::'b), 'b))> fn(&ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(2:49824 ~ core[0bcc]::fmt::{impl#3}::new_display::'b), 'b) }) u32) -> core::fmt::ArgumentV1<ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(2:49824 ~ core[0bcc]::fmt::{impl#3}::new_display::'b), 'b) })> {core::fmt::ArgumentV1::<ReErased>::new_display::<u32>}, val: Value(<ZST>) }\n+                                           // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u32>}, val: Value(<ZST>) }\n       }\n   \n       bb4: {\n-          StorageDead(_24);                // bb4[0]: scope 4 at $DIR/lifetimes.rs:+10:25: +10:26\n-          _19 = [move _20, move _23];      // bb4[1]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_23);                // bb4[2]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_20);                // bb4[3]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _18 = &ReErased _19;             // bb4[4]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _17 = &ReErased (*_18);          // bb4[5]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _16 = move _17 as &ReErased [core::fmt::ArgumentV1<ReErased>] (Pointer(Unsize)); // bb4[6]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_17);                // bb4[7]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _11 = ConstValue(ZeroSized: fn(&ReErased [&ReStatic str], &ReErased [core::fmt::ArgumentV1<ReErased>]) -> Arguments<ReErased> {Arguments::<ReErased>::new_v1})(move _12, move _16) -> bb5; // bb4[8]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageDead(_24);                // scope 4 at $DIR/lifetimes.rs:+10:25: +10:26\n+          _19 = [move _20, move _23];      // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageDead(_23);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageDead(_20);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          _18 = &_19;                      // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          _17 = &(*_18);                   // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          _16 = move _17 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageDead(_17);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          _11 = Arguments::<'_>::new_v1(move _12, move _16) -> bb5; // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n                                            // + user_ty: UserType(3)\n-                                           // + literal: Const { ty: fn(&ReErased [&ReStatic str], &ReErased [core::fmt::ArgumentV1<ReErased>]) -> Arguments<ReErased> {Arguments::<ReErased>::new_v1}, val: Value(<ZST>) }\n+                                           // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }\n       }\n   \n       bb5: {\n-          StorageDead(_16);                // bb5[0]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_12);                // bb5[1]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _10 = ConstValue(ZeroSized: for<Region(BrNamed(DefId(1:13237 ~ std[b4ed]::io::stdio::_eprint::'_), '_))> fn(Arguments<ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(1:13237 ~ std[b4ed]::io::stdio::_eprint::'_), '_) })>) {_eprint})(move _11) -> bb6; // bb5[2]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageDead(_16);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageDead(_12);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          _10 = _eprint(move _11) -> bb6;  // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n-                                           // + literal: Const { ty: for<Region(BrNamed(DefId(1:13237 ~ std[b4ed]::io::stdio::_eprint::'_), '_))> fn(Arguments<ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(1:13237 ~ std[b4ed]::io::stdio::_eprint::'_), '_) })>) {_eprint}, val: Value(<ZST>) }\n+                                           // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_eprint}, val: Value(<ZST>) }\n       }\n   \n       bb6: {\n-          StorageDead(_11);                // bb6[0]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_25);                // bb6[1]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_22);                // bb6[2]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_19);                // bb6[3]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_18);                // bb6[4]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_14);                // bb6[5]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_10);                // bb6[6]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _9 = const ConstValue(ZeroSized: ()); // bb6[7]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_9);                 // bb6[8]: scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _0 = const ConstValue(ZeroSized: ()); // bb6[9]: scope 4 at $DIR/lifetimes.rs:+9:22: +11:6\n-          drop(_8) -> bb8;                 // bb6[10]: scope 3 at $DIR/lifetimes.rs:+11:5: +11:6\n+          StorageDead(_11);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageDead(_25);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageDead(_22);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageDead(_19);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageDead(_18);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageDead(_14);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageDead(_10);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          _9 = const ();                   // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageDead(_9);                 // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          _0 = const ();                   // scope 4 at $DIR/lifetimes.rs:+9:22: +11:6\n+          drop(_8) -> bb8;                 // scope 3 at $DIR/lifetimes.rs:+11:5: +11:6\n       }\n   \n       bb7: {\n-          _0 = const ConstValue(ZeroSized: ()); // bb7[0]: scope 3 at $DIR/lifetimes.rs:+11:6: +11:6\n-          goto -> bb9;                     // bb7[1]: scope 3 at $DIR/lifetimes.rs:+9:5: +11:6\n+          _0 = const ();                   // scope 3 at $DIR/lifetimes.rs:+11:6: +11:6\n+          goto -> bb9;                     // scope 3 at $DIR/lifetimes.rs:+9:5: +11:6\n       }\n   \n       bb8: {\n-          StorageDead(_8);                 // bb8[0]: scope 3 at $DIR/lifetimes.rs:+11:5: +11:6\n-          goto -> bb9;                     // bb8[1]: scope 3 at $DIR/lifetimes.rs:+9:5: +11:6\n+          StorageDead(_8);                 // scope 3 at $DIR/lifetimes.rs:+11:5: +11:6\n+          goto -> bb9;                     // scope 3 at $DIR/lifetimes.rs:+9:5: +11:6\n       }\n   \n       bb9: {\n-          StorageDead(_6);                 // bb9[0]: scope 2 at $DIR/lifetimes.rs:+12:1: +12:2\n-          _28 = discriminant(_5);          // bb9[1]: scope 1 at $DIR/lifetimes.rs:+12:1: +12:2\n-          switchInt(move _28) -> [0: bb11, otherwise: bb13]; // bb9[2]: scope 1 at $DIR/lifetimes.rs:+12:1: +12:2\n+          StorageDead(_6);                 // scope 2 at $DIR/lifetimes.rs:+12:1: +12:2\n+          _28 = discriminant(_5);          // scope 1 at $DIR/lifetimes.rs:+12:1: +12:2\n+          switchInt(move _28) -> [0: bb11, otherwise: bb13]; // scope 1 at $DIR/lifetimes.rs:+12:1: +12:2\n       }\n   \n       bb10: {\n-          _27 = const ConstValue(Scalar(0x00): bool); // bb10[0]: scope 1 at $DIR/lifetimes.rs:+12:1: +12:2\n-          StorageDead(_5);                 // bb10[1]: scope 1 at $DIR/lifetimes.rs:+12:1: +12:2\n--         StorageDead(_1);                 // bb10[2]: scope 0 at $DIR/lifetimes.rs:+12:1: +12:2\n--         return;                          // bb10[3]: scope 0 at $DIR/lifetimes.rs:+12:2: +12:2\n-+         StorageDead(_31);                // bb10[2]: scope 0 at $DIR/lifetimes.rs:+12:1: +12:2\n-+         StorageDead(_32);                // bb10[3]: scope 0 at $DIR/lifetimes.rs:+12:1: +12:2\n-+         nop;                             // bb10[4]: scope 0 at $DIR/lifetimes.rs:+12:1: +12:2\n-+         return;                          // bb10[5]: scope 0 at $DIR/lifetimes.rs:+12:2: +12:2\n+          _27 = const false;               // scope 1 at $DIR/lifetimes.rs:+12:1: +12:2\n+          StorageDead(_5);                 // scope 1 at $DIR/lifetimes.rs:+12:1: +12:2\n+-         StorageDead(_1);                 // scope 0 at $DIR/lifetimes.rs:+12:1: +12:2\n++         StorageDead(_31);                // scope 0 at $DIR/lifetimes.rs:+12:1: +12:2\n++         StorageDead(_32);                // scope 0 at $DIR/lifetimes.rs:+12:1: +12:2\n++         nop;                             // scope 0 at $DIR/lifetimes.rs:+12:1: +12:2\n+          return;                          // scope 0 at $DIR/lifetimes.rs:+12:2: +12:2\n       }\n   \n       bb11: {\n-          switchInt(_27) -> [0: bb10, otherwise: bb12]; // bb11[0]: scope 1 at $DIR/lifetimes.rs:+12:1: +12:2\n+          switchInt(_27) -> [0: bb10, otherwise: bb12]; // scope 1 at $DIR/lifetimes.rs:+12:1: +12:2\n       }\n   \n       bb12: {\n-          drop(((_5 as Ok).0: std::boxed::Box<(dyn std::fmt::Display + ReErased)>)) -> bb10; // bb12[0]: scope 1 at $DIR/lifetimes.rs:+12:1: +12:2\n+          drop(((_5 as Ok).0: std::boxed::Box<dyn std::fmt::Display>)) -> bb10; // scope 1 at $DIR/lifetimes.rs:+12:1: +12:2\n       }\n   \n       bb13: {\n-          drop(_5) -> bb10;                // bb13[0]: scope 1 at $DIR/lifetimes.rs:+12:1: +12:2\n+          drop(_5) -> bb10;                // scope 1 at $DIR/lifetimes.rs:+12:1: +12:2\n       }\n   }\n   "}, {"sha": "2356d212f3fb4135abb8cd100676e82b22790d48", "filename": "tests/mir-opt/sroa/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/708536bb470721e582c85e800f8ccca568cdfc7c/tests%2Fmir-opt%2Fsroa%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/708536bb470721e582c85e800f8ccca568cdfc7c/tests%2Fmir-opt%2Fsroa%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fsroa%2Flifetimes.rs?ref=708536bb470721e582c85e800f8ccca568cdfc7c", "patch": "@@ -1,5 +1,5 @@\n // unit-test: ScalarReplacementOfAggregates\n-// compile-flags: -Zverbose -Cpanic=abort\n+// compile-flags: -Cpanic=abort\n // no-prefer-dynamic\n \n trait Err {"}]}