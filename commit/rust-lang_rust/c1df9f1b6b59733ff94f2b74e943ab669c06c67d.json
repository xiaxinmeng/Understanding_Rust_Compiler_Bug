{"sha": "c1df9f1b6b59733ff94f2b74e943ab669c06c67d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxZGY5ZjFiNmI1OTczM2ZmOTRmMmI3NGU5NDNhYjY2OWMwNmM2N2Q=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-02-14T05:25:41Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-02-14T05:25:41Z"}, "message": "Add basic usage example", "tree": {"sha": "bb55c69b95c32f9566e4e6a0264af1fef03bc827", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb55c69b95c32f9566e4e6a0264af1fef03bc827"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1df9f1b6b59733ff94f2b74e943ab669c06c67d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1df9f1b6b59733ff94f2b74e943ab669c06c67d", "html_url": "https://github.com/rust-lang/rust/commit/c1df9f1b6b59733ff94f2b74e943ab669c06c67d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1df9f1b6b59733ff94f2b74e943ab669c06c67d/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfb027965334e168b50cf5a8940e8f6c671caba4", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfb027965334e168b50cf5a8940e8f6c671caba4", "html_url": "https://github.com/rust-lang/rust/commit/bfb027965334e168b50cf5a8940e8f6c671caba4"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "d5e5b4ca16c1b5437f010fe5e12876c74f5f7538", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c1df9f1b6b59733ff94f2b74e943ab669c06c67d/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1df9f1b6b59733ff94f2b74e943ab669c06c67d/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=c1df9f1b6b59733ff94f2b74e943ab669c06c67d", "patch": "@@ -1535,6 +1535,21 @@ pub trait Iterator {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n+    /// ```\n+    /// let mut words = vec![\"hello\", \"world\", \"of\", \"Rust\"].into_iter();\n+    ///\n+    /// // Take the first two words.\n+    /// let hello_world: Vec<_> = words.by_ref().take(2).collect();\n+    /// assert_eq!(hello_world, vec![\"hello\", \"world\"]);\n+    ///\n+    /// // Collect the rest of the words.\n+    /// // We can only do this because we used `by_ref` earlier.\n+    /// let of_rust: Vec<_> = words.collect();\n+    /// assert_eq!(of_rust, vec![\"of\", \"Rust\"]);\n+    /// ```\n+    ///\n     /// This demonstrates a use case that needs `by_ref`:\n     ///\n     /// ```compile_fail,E0382"}]}