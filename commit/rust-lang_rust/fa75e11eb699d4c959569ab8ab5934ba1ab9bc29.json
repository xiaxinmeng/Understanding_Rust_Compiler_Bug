{"sha": "fa75e11eb699d4c959569ab8ab5934ba1ab9bc29", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNzVlMTFlYjY5OWQ0Yzk1OTU2OWFiOGFiNTkzNGJhMWFiOWJjMjk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-21T08:46:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-21T08:46:42Z"}, "message": "Merge #6967\n\n6967: Correctly parse legacy trait objects with leading ForType r=matklad a=Veykril\n\nFixes #1422\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "faf5a87b4470c4c5c9b08e3e0646dcce94ae3c27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/faf5a87b4470c4c5c9b08e3e0646dcce94ae3c27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa75e11eb699d4c959569ab8ab5934ba1ab9bc29", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf4GDyCRBK7hj4Ov3rIwAAdHIIAAiiFu2wYmfKgHaE2wOCjD7j\ncQF/9LneuRx+GAnyPjddyEnkIf5uVgDWsQna2QA/26OCAxUmQyVsXE9biPIzwL94\n91SAo7MwtYL/0XRMe/2oDDzySoD4mPksKcHmEv6MiKeK2lYA6W8/GyY8UEAmsDvZ\n6eEK4MikatotSqofwrKuQM+pLFO7h9miDJr5DChxBgiD/PCnqoFEPWHXeKYzboNZ\ndiTDK9Yk9pBCxf/IGunfDdjrhLudLix0XYQsHsVr2aEHqEPAW5pfVubohzF9B2n0\nojvdJyAkBgb2e7MKqx92JW/2FNOMNdgvoQof6n5q/EXuHUrtRzU/1sTCyhcJEBY=\n=nOI8\n-----END PGP SIGNATURE-----\n", "payload": "tree faf5a87b4470c4c5c9b08e3e0646dcce94ae3c27\nparent c3d21ea05a1d1e1a88a983773fd821f6f6470264\nparent 3ea4d4385053bb4b0da87de57aac3563e085a0e3\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1608540402 +0000\ncommitter GitHub <noreply@github.com> 1608540402 +0000\n\nMerge #6967\n\n6967: Correctly parse legacy trait objects with leading ForType r=matklad a=Veykril\n\nFixes #1422\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa75e11eb699d4c959569ab8ab5934ba1ab9bc29", "html_url": "https://github.com/rust-lang/rust/commit/fa75e11eb699d4c959569ab8ab5934ba1ab9bc29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa75e11eb699d4c959569ab8ab5934ba1ab9bc29/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3d21ea05a1d1e1a88a983773fd821f6f6470264", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3d21ea05a1d1e1a88a983773fd821f6f6470264", "html_url": "https://github.com/rust-lang/rust/commit/c3d21ea05a1d1e1a88a983773fd821f6f6470264"}, {"sha": "3ea4d4385053bb4b0da87de57aac3563e085a0e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ea4d4385053bb4b0da87de57aac3563e085a0e3", "html_url": "https://github.com/rust-lang/rust/commit/3ea4d4385053bb4b0da87de57aac3563e085a0e3"}], "stats": {"total": 72, "additions": 63, "deletions": 9}, "files": [{"sha": "4aeccd193c18e1a2e89ee96c0f220dfdcdd27ab4", "filename": "crates/parser/src/grammar/type_params.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa75e11eb699d4c959569ab8ab5934ba1ab9bc29/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa75e11eb699d4c959569ab8ab5934ba1ab9bc29/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_params.rs?ref=fa75e11eb699d4c959569ab8ab5934ba1ab9bc29", "patch": "@@ -113,7 +113,7 @@ fn type_bound(p: &mut Parser) -> bool {\n     p.eat(T![?]);\n     match p.current() {\n         LIFETIME_IDENT => lifetime(p),\n-        T![for] => types::for_type(p),\n+        T![for] => types::for_type(p, false),\n         _ if paths::is_use_path_start(p) => types::path_type_(p, false),\n         _ => {\n             m.abandon(p);"}, {"sha": "94cbf7d85a0a5315ced6ffedf6a940dd8ab7b9af", "filename": "crates/parser/src/grammar/types.rs", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fa75e11eb699d4c959569ab8ab5934ba1ab9bc29/crates%2Fparser%2Fsrc%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa75e11eb699d4c959569ab8ab5934ba1ab9bc29/crates%2Fparser%2Fsrc%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Ftypes.rs?ref=fa75e11eb699d4c959569ab8ab5934ba1ab9bc29", "patch": "@@ -44,7 +44,7 @@ fn type_with_bounds_cond(p: &mut Parser, allow_bounds: bool) {\n         T![&] => ref_type(p),\n         T![_] => infer_type(p),\n         T![fn] | T![unsafe] | T![extern] => fn_ptr_type(p),\n-        T![for] => for_type(p),\n+        T![for] => for_type(p, allow_bounds),\n         T![impl] => impl_trait_type(p),\n         T![dyn] => dyn_trait_type(p),\n         // Some path types are not allowed to have bounds (no plus)\n@@ -227,7 +227,7 @@ pub(super) fn for_binder(p: &mut Parser) {\n // type A = for<'a> fn() -> ();\n // type B = for<'a> unsafe extern \"C\" fn(&'a ()) -> ();\n // type Obj = for<'a> PartialEq<&'a i32>;\n-pub(super) fn for_type(p: &mut Parser) {\n+pub(super) fn for_type(p: &mut Parser, allow_bounds: bool) {\n     assert!(p.at(T![for]));\n     let m = p.start();\n     for_binder(p);\n@@ -240,7 +240,13 @@ pub(super) fn for_type(p: &mut Parser) {\n         }\n     }\n     type_no_bounds(p);\n-    m.complete(p, FOR_TYPE);\n+    let completed = m.complete(p, FOR_TYPE);\n+\n+    // test no_dyn_trait_leading_for\n+    // type A = for<'a> Test<'a> + Send;\n+    if allow_bounds {\n+        opt_type_bounds_as_dyn_trait_type(p, completed);\n+    }\n }\n \n // test impl_trait_type\n@@ -290,7 +296,7 @@ fn path_or_macro_type_(p: &mut Parser, allow_bounds: bool) {\n     let path = m.complete(p, kind);\n \n     if allow_bounds {\n-        opt_path_type_bounds_as_dyn_trait_type(p, path);\n+        opt_type_bounds_as_dyn_trait_type(p, path);\n     }\n }\n \n@@ -304,19 +310,23 @@ pub(super) fn path_type_(p: &mut Parser, allow_bounds: bool) {\n     // fn foo() -> Box<dyn T + 'f> {}\n     let path = m.complete(p, PATH_TYPE);\n     if allow_bounds {\n-        opt_path_type_bounds_as_dyn_trait_type(p, path);\n+        opt_type_bounds_as_dyn_trait_type(p, path);\n     }\n }\n \n-/// This turns a parsed PATH_TYPE optionally into a DYN_TRAIT_TYPE\n+/// This turns a parsed PATH_TYPE or FOR_TYPE optionally into a DYN_TRAIT_TYPE\n /// with a TYPE_BOUND_LIST\n-fn opt_path_type_bounds_as_dyn_trait_type(p: &mut Parser, path_type_marker: CompletedMarker) {\n+fn opt_type_bounds_as_dyn_trait_type(p: &mut Parser, type_marker: CompletedMarker) {\n+    assert!(matches!(\n+        type_marker.kind(),\n+        SyntaxKind::PATH_TYPE | SyntaxKind::FOR_TYPE | SyntaxKind::MACRO_CALL\n+    ));\n     if !p.at(T![+]) {\n         return;\n     }\n \n     // First create a TYPE_BOUND from the completed PATH_TYPE\n-    let m = path_type_marker.precede(p).complete(p, TYPE_BOUND);\n+    let m = type_marker.precede(p).complete(p, TYPE_BOUND);\n \n     // Next setup a marker for the TYPE_BOUND_LIST\n     let m = m.precede(p);"}, {"sha": "edfcb288ce66a8804344d34271ec88bf70e1910a", "filename": "crates/syntax/test_data/parser/inline/ok/0154_no_dyn_trait_leading_for.rast", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/fa75e11eb699d4c959569ab8ab5934ba1ab9bc29/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_no_dyn_trait_leading_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/fa75e11eb699d4c959569ab8ab5934ba1ab9bc29/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_no_dyn_trait_leading_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_no_dyn_trait_leading_for.rast?ref=fa75e11eb699d4c959569ab8ab5934ba1ab9bc29", "patch": "@@ -0,0 +1,43 @@\n+SOURCE_FILE@0..34\n+  TYPE_ALIAS@0..33\n+    TYPE_KW@0..4 \"type\"\n+    WHITESPACE@4..5 \" \"\n+    NAME@5..6\n+      IDENT@5..6 \"A\"\n+    WHITESPACE@6..7 \" \"\n+    EQ@7..8 \"=\"\n+    WHITESPACE@8..9 \" \"\n+    DYN_TRAIT_TYPE@9..32\n+      TYPE_BOUND_LIST@9..32\n+        TYPE_BOUND@9..25\n+          FOR_TYPE@9..25\n+            FOR_KW@9..12 \"for\"\n+            GENERIC_PARAM_LIST@12..16\n+              L_ANGLE@12..13 \"<\"\n+              LIFETIME_PARAM@13..15\n+                LIFETIME@13..15\n+                  LIFETIME_IDENT@13..15 \"\\'a\"\n+              R_ANGLE@15..16 \">\"\n+            WHITESPACE@16..17 \" \"\n+            PATH_TYPE@17..25\n+              PATH@17..25\n+                PATH_SEGMENT@17..25\n+                  NAME_REF@17..21\n+                    IDENT@17..21 \"Test\"\n+                  GENERIC_ARG_LIST@21..25\n+                    L_ANGLE@21..22 \"<\"\n+                    LIFETIME_ARG@22..24\n+                      LIFETIME@22..24\n+                        LIFETIME_IDENT@22..24 \"\\'a\"\n+                    R_ANGLE@24..25 \">\"\n+        WHITESPACE@25..26 \" \"\n+        PLUS@26..27 \"+\"\n+        WHITESPACE@27..28 \" \"\n+        TYPE_BOUND@28..32\n+          PATH_TYPE@28..32\n+            PATH@28..32\n+              PATH_SEGMENT@28..32\n+                NAME_REF@28..32\n+                  IDENT@28..32 \"Send\"\n+    SEMICOLON@32..33 \";\"\n+  WHITESPACE@33..34 \"\\n\""}, {"sha": "47a71fd1915a9eff4787dbd27d796b92a859ef6f", "filename": "crates/syntax/test_data/parser/inline/ok/0154_no_dyn_trait_leading_for.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fa75e11eb699d4c959569ab8ab5934ba1ab9bc29/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_no_dyn_trait_leading_for.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa75e11eb699d4c959569ab8ab5934ba1ab9bc29/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_no_dyn_trait_leading_for.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_no_dyn_trait_leading_for.rs?ref=fa75e11eb699d4c959569ab8ab5934ba1ab9bc29", "patch": "@@ -0,0 +1 @@\n+type A = for<'a> Test<'a> + Send;"}]}