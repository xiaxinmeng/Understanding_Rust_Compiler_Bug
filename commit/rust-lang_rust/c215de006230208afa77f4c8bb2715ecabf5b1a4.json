{"sha": "c215de006230208afa77f4c8bb2715ecabf5b1a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyMTVkZTAwNjIzMDIwOGFmYTc3ZjRjOGJiMjcxNWVjYWJmNWIxYTQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-23T22:22:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-23T22:22:39Z"}, "message": "Rollup merge of #66673 - petrochenkov:toresolve, r=Centril\n\nMove def collector from `rustc` to `rustc_resolve`\n\nIt's used only from `rustc_resolve`, so we can move it there, thus reducing the size of `rustc` (https://github.com/rust-lang/rust/issues/65031).\n\nIt's quite possible that we can merge the def collector pass into the \"build reduced graph\" pass (they are always run together and do similar things), but it's some larger work.\n\nr? @eddyb", "tree": {"sha": "eeb5b6401c97decfd3ebb19f12bddf916712c95d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eeb5b6401c97decfd3ebb19f12bddf916712c95d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c215de006230208afa77f4c8bb2715ecabf5b1a4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd2bEvCRBK7hj4Ov3rIwAAdHIIAEj6mKJKqOoFxF5SlvAan7MF\nfFfrCPkyqPcrcjb5wkS6edmz+HyJfcR798vHbEJbxdIUmI4+bqebOrzGk7sxOjzr\n62HSEb0pRCduewZuHExNLeUQGU2oOGBCNZho3WypGhOLcOPO33cg5iMzAnV55S//\n38yAhROZYxoebC36HnPSSpVICa1g7NCiqZh36gAsAvc1Tfka6FcozLxYOd+jYeZR\nTiyGvm1bb4ncp2Sns0kgymbA6K8aG9SUH56O2UOCtRg4YvX83/fdVEZvhbCtaal1\nylvxXFcWkhRi/2vODf2T/vYdfOFX2DcLSrr3TWQaQ8zGiEmTVVamESJkvEdruk8=\n=3rK+\n-----END PGP SIGNATURE-----\n", "payload": "tree eeb5b6401c97decfd3ebb19f12bddf916712c95d\nparent 0bb06cbea920d9a314071c0c2446ffa49055292e\nparent bbbdbb0e44bb4cea653584017acce4bcda158939\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1574547759 +0100\ncommitter GitHub <noreply@github.com> 1574547759 +0100\n\nRollup merge of #66673 - petrochenkov:toresolve, r=Centril\n\nMove def collector from `rustc` to `rustc_resolve`\n\nIt's used only from `rustc_resolve`, so we can move it there, thus reducing the size of `rustc` (https://github.com/rust-lang/rust/issues/65031).\n\nIt's quite possible that we can merge the def collector pass into the \"build reduced graph\" pass (they are always run together and do similar things), but it's some larger work.\n\nr? @eddyb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c215de006230208afa77f4c8bb2715ecabf5b1a4", "html_url": "https://github.com/rust-lang/rust/commit/c215de006230208afa77f4c8bb2715ecabf5b1a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c215de006230208afa77f4c8bb2715ecabf5b1a4/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bb06cbea920d9a314071c0c2446ffa49055292e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bb06cbea920d9a314071c0c2446ffa49055292e", "html_url": "https://github.com/rust-lang/rust/commit/0bb06cbea920d9a314071c0c2446ffa49055292e"}, {"sha": "bbbdbb0e44bb4cea653584017acce4bcda158939", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbbdbb0e44bb4cea653584017acce4bcda158939", "html_url": "https://github.com/rust-lang/rust/commit/bbbdbb0e44bb4cea653584017acce4bcda158939"}], "stats": {"total": 46, "additions": 29, "deletions": 17}, "files": [{"sha": "91b4971cd92be1016c988fe903d6a04be1ecdfdc", "filename": "src/librustc/hir/map/definitions.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c215de006230208afa77f4c8bb2715ecabf5b1a4/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c215de006230208afa77f4c8bb2715ecabf5b1a4/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs?ref=c215de006230208afa77f4c8bb2715ecabf5b1a4", "patch": "@@ -105,7 +105,7 @@ pub struct Definitions {\n     /// we know what parent node that fragment should be attached to thanks to this table.\n     invocation_parents: FxHashMap<ExpnId, DefIndex>,\n     /// Indices of unnamed struct or variant fields with unresolved attributes.\n-    pub(super) placeholder_field_indices: NodeMap<usize>,\n+    placeholder_field_indices: NodeMap<usize>,\n }\n \n /// A unique identifier that we can use to lookup a definition\n@@ -535,6 +535,15 @@ impl Definitions {\n         let old_parent = self.invocation_parents.insert(invoc_id, parent);\n         assert!(old_parent.is_none(), \"parent `DefIndex` is reset for an invocation\");\n     }\n+\n+    pub fn placeholder_field_index(&self, node_id: ast::NodeId) -> usize {\n+        self.placeholder_field_indices[&node_id]\n+    }\n+\n+    pub fn set_placeholder_field_index(&mut self, node_id: ast::NodeId, index: usize) {\n+        let old_index = self.placeholder_field_indices.insert(node_id, index);\n+        assert!(old_index.is_none(), \"placeholder field index is reset for a node ID\");\n+    }\n }\n \n impl DefPathData {"}, {"sha": "fc754c5e675e60edd5e44209947a302be28b8559", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c215de006230208afa77f4c8bb2715ecabf5b1a4/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c215de006230208afa77f4c8bb2715ecabf5b1a4/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=c215de006230208afa77f4c8bb2715ecabf5b1a4", "patch": "@@ -1,5 +1,4 @@\n use self::collector::NodeCollector;\n-pub use self::def_collector::DefCollector;\n pub use self::definitions::{\n     Definitions, DefKey, DefPath, DefPathData, DisambiguatedDefPathData, DefPathHash\n };\n@@ -25,7 +24,6 @@ use syntax_pos::{Span, DUMMY_SP};\n \n pub mod blocks;\n mod collector;\n-mod def_collector;\n pub mod definitions;\n mod hir_id_validator;\n "}, {"sha": "a178c603a462bcfe2bcc1ecbad4f0ceb67a839f5", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c215de006230208afa77f4c8bb2715ecabf5b1a4/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c215de006230208afa77f4c8bb2715ecabf5b1a4/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=c215de006230208afa77f4c8bb2715ecabf5b1a4", "patch": "@@ -5,6 +5,7 @@\n //! unexpanded macros in the fragment are visited and registered.\n //! Imports are also considered items and placed into modules here, but not resolved yet.\n \n+use crate::def_collector::collect_definitions;\n use crate::macros::{LegacyBinding, LegacyScope};\n use crate::resolve_imports::ImportDirective;\n use crate::resolve_imports::ImportDirectiveSubclass::{self, GlobImport, SingleImport};\n@@ -16,7 +17,6 @@ use crate::{ResolutionError, Determinacy, PathResult, CrateLint};\n use rustc::bug;\n use rustc::hir::def::{self, *};\n use rustc::hir::def_id::{CRATE_DEF_INDEX, LOCAL_CRATE, DefId};\n-use rustc::hir::map::DefCollector;\n use rustc::ty;\n use rustc::middle::cstore::CrateStore;\n use rustc_metadata::cstore::LoadedMacro;\n@@ -167,8 +167,7 @@ impl<'a> Resolver<'a> {\n         fragment: &AstFragment,\n         parent_scope: ParentScope<'a>,\n     ) -> LegacyScope<'a> {\n-        let mut def_collector = DefCollector::new(&mut self.definitions, parent_scope.expansion);\n-        fragment.visit_with(&mut def_collector);\n+        collect_definitions(&mut self.definitions, fragment, parent_scope.expansion);\n         let mut visitor = BuildReducedGraphVisitor { r: self, parent_scope };\n         fragment.visit_with(&mut visitor);\n         visitor.parent_scope.legacy"}, {"sha": "414ea6e9aa1b506f24c59044701dc30a69d6f45d", "filename": "src/librustc_resolve/def_collector.rs", "status": "renamed", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/c215de006230208afa77f4c8bb2715ecabf5b1a4/src%2Flibrustc_resolve%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c215de006230208afa77f4c8bb2715ecabf5b1a4/src%2Flibrustc_resolve%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdef_collector.rs?ref=c215de006230208afa77f4c8bb2715ecabf5b1a4", "patch": "@@ -1,26 +1,31 @@\n-use crate::hir::map::definitions::*;\n-use crate::hir::def_id::DefIndex;\n-\n+use log::debug;\n+use rustc::hir::map::definitions::*;\n+use rustc::hir::def_id::DefIndex;\n use syntax::ast::*;\n use syntax::visit;\n use syntax::symbol::{kw, sym};\n use syntax::token::{self, Token};\n+use syntax_expand::expand::AstFragment;\n use syntax_pos::hygiene::ExpnId;\n use syntax_pos::Span;\n \n+crate fn collect_definitions(\n+    definitions: &mut Definitions,\n+    fragment: &AstFragment,\n+    expansion: ExpnId,\n+) {\n+    let parent_def = definitions.invocation_parent(expansion);\n+    fragment.visit_with(&mut DefCollector { definitions, parent_def, expansion });\n+}\n+\n /// Creates `DefId`s for nodes in the AST.\n-pub struct DefCollector<'a> {\n+struct DefCollector<'a> {\n     definitions: &'a mut Definitions,\n     parent_def: DefIndex,\n     expansion: ExpnId,\n }\n \n impl<'a> DefCollector<'a> {\n-    pub fn new(definitions: &'a mut Definitions, expansion: ExpnId) -> Self {\n-        let parent_def = definitions.invocation_parent(expansion);\n-        DefCollector { definitions, parent_def, expansion }\n-    }\n-\n     fn create_def(&mut self,\n                   node_id: NodeId,\n                   data: DefPathData,\n@@ -82,7 +87,7 @@ impl<'a> DefCollector<'a> {\n                 .or_else(|| index.map(sym::integer))\n                 .unwrap_or_else(|| {\n                     let node_id = NodeId::placeholder_from_expn_id(self.expansion);\n-                    sym::integer(self.definitions.placeholder_field_indices[&node_id])\n+                    sym::integer(self.definitions.placeholder_field_index(node_id))\n                 });\n             let def = self.create_def(field.id, DefPathData::ValueNs(name), field.span);\n             self.with_parent(def, |this| visit::walk_struct_field(this, field));\n@@ -186,7 +191,7 @@ impl<'a> visit::Visitor<'a> for DefCollector<'a> {\n         for (index, field) in data.fields().iter().enumerate() {\n             self.collect_field(field, Some(index));\n             if field.is_placeholder && field.ident.is_none() {\n-                self.definitions.placeholder_field_indices.insert(field.id, index);\n+                self.definitions.set_placeholder_field_index(field.id, index);\n             }\n         }\n     }", "previous_filename": "src/librustc/hir/map/def_collector.rs"}, {"sha": "347b72885657adaf4fdeb7c224da3e64fce25cd6", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c215de006230208afa77f4c8bb2715ecabf5b1a4/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c215de006230208afa77f4c8bb2715ecabf5b1a4/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=c215de006230208afa77f4c8bb2715ecabf5b1a4", "patch": "@@ -68,6 +68,7 @@ use rustc_error_codes::*;\n \n type Res = def::Res<NodeId>;\n \n+mod def_collector;\n mod diagnostics;\n mod late;\n mod macros;"}]}