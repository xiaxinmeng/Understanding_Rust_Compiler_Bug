{"sha": "35db5e99f6f982f4257e88d13cbecca250b05efe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1ZGI1ZTk5ZjZmOTgyZjQyNTdlODhkMTNjYmVjY2EyNTBiMDVlZmU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-25T13:33:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-25T13:33:07Z"}, "message": "Merge #8990\n\n8990: feat: Also do goto implementation on assoc consts r=lnicola a=lf-\n\nI forgot to put this into #8988, sorry.\r\n\r\nGoto implementation on a const on the trait will go to the\r\nimplementations with their respective definitions of the const, if\r\npresent.\n\nCo-authored-by: Jade <software@lfcode.ca>", "tree": {"sha": "3ee52859ea2d4c288e08841999f61d317ac59476", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ee52859ea2d4c288e08841999f61d317ac59476"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35db5e99f6f982f4257e88d13cbecca250b05efe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgrPyTCRBK7hj4Ov3rIwAArasIAD0nDXAr3LUacddsZzI1jv/v\nPmkJ2OZ5qMjryY2MT137M1M9JOno7U/AqH5j4ir3NfDj3mgGsl8uMUPq8AHyGvRF\nwZOUUtMXDaXvbtn3eGlmOOeEo89cBKQRO81yPI1UjduZ6I10hWULrClJL8sRpjSo\n07k2xPwKbFQAmhArc/zwk0U575wZYjL/l7j2I/6oPvxB4GTMGOVDFaB9HqjAIe/w\n/UUULpjvitPq5jhqgEBS71fvq8e2i3oyWfyFDuH+MUE6PXS2b4Wu3hhWY2+cA0z6\n7Z7ZOi4lxtP+AEDEWMhY1J9J7vZbCpzqZ6lWqKp7/YCNjuHO0Qhj9j+ppy8aYLI=\n=0unP\n-----END PGP SIGNATURE-----\n", "payload": "tree 3ee52859ea2d4c288e08841999f61d317ac59476\nparent 33fdd512e318f86ccd66b84ce6128c03eb44cf77\nparent 0292efd363584fc4be50b1b1240fbbe990e2ebf1\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1621949587 +0000\ncommitter GitHub <noreply@github.com> 1621949587 +0000\n\nMerge #8990\n\n8990: feat: Also do goto implementation on assoc consts r=lnicola a=lf-\n\nI forgot to put this into #8988, sorry.\r\n\r\nGoto implementation on a const on the trait will go to the\r\nimplementations with their respective definitions of the const, if\r\npresent.\n\nCo-authored-by: Jade <software@lfcode.ca>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35db5e99f6f982f4257e88d13cbecca250b05efe", "html_url": "https://github.com/rust-lang/rust/commit/35db5e99f6f982f4257e88d13cbecca250b05efe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35db5e99f6f982f4257e88d13cbecca250b05efe/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33fdd512e318f86ccd66b84ce6128c03eb44cf77", "url": "https://api.github.com/repos/rust-lang/rust/commits/33fdd512e318f86ccd66b84ce6128c03eb44cf77", "html_url": "https://github.com/rust-lang/rust/commit/33fdd512e318f86ccd66b84ce6128c03eb44cf77"}, {"sha": "0292efd363584fc4be50b1b1240fbbe990e2ebf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0292efd363584fc4be50b1b1240fbbe990e2ebf1", "html_url": "https://github.com/rust-lang/rust/commit/0292efd363584fc4be50b1b1240fbbe990e2ebf1"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "43356a94edf4f3ac62179fa82ac8c89fb9f889fa", "filename": "crates/ide/src/goto_implementation.rs", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/35db5e99f6f982f4257e88d13cbecca250b05efe/crates%2Fide%2Fsrc%2Fgoto_implementation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35db5e99f6f982f4257e88d13cbecca250b05efe/crates%2Fide%2Fsrc%2Fgoto_implementation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_implementation.rs?ref=35db5e99f6f982f4257e88d13cbecca250b05efe", "patch": "@@ -53,7 +53,13 @@ pub(crate) fn goto_implementation(\n             let assoc = f.as_assoc_item(sema.db)?;\n             let name = assoc.name(sema.db)?;\n             let trait_ = assoc.containing_trait(sema.db)?;\n-            impls_for_trait_fn(&sema, trait_, name)\n+            impls_for_trait_item(&sema, trait_, name)\n+        }\n+        hir::ModuleDef::Const(c) => {\n+            let assoc = c.as_assoc_item(sema.db)?;\n+            let name = assoc.name(sema.db)?;\n+            let trait_ = assoc.containing_trait(sema.db)?;\n+            impls_for_trait_item(&sema, trait_, name)\n         }\n         _ => return None,\n     };\n@@ -71,7 +77,7 @@ fn impls_for_trait(sema: &Semantics<RootDatabase>, trait_: hir::Trait) -> Vec<Na\n         .collect()\n }\n \n-fn impls_for_trait_fn(\n+fn impls_for_trait_item(\n     sema: &Semantics<RootDatabase>,\n     trait_: hir::Trait,\n     fun_name: hir::Name,\n@@ -303,6 +309,24 @@ impl Tr for S {\n         println!(\"Hello, world!\");\n     }\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn goto_implementation_trait_assoc_const() {\n+        check(\n+            r#\"\n+trait Tr {\n+    const C$0: usize;\n+}\n+\n+struct S;\n+\n+impl Tr for S {\n+    const C: usize = 4;\n+        //^\n+}\n \"#,\n         );\n     }"}]}