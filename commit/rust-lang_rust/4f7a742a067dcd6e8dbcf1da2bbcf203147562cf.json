{"sha": "4f7a742a067dcd6e8dbcf1da2bbcf203147562cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmN2E3NDJhMDY3ZGNkNmU4ZGJjZjFkYTJiYmNmMjAzMTQ3NTYyY2Y=", "commit": {"author": {"name": "Jed Estep", "email": "aje@jhu.edu", "date": "2013-06-25T19:08:47Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-06-26T22:08:56Z"}, "message": "deque iterator", "tree": {"sha": "3d201195c535b6da3669d81058d1e29704aefec0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d201195c535b6da3669d81058d1e29704aefec0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f7a742a067dcd6e8dbcf1da2bbcf203147562cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f7a742a067dcd6e8dbcf1da2bbcf203147562cf", "html_url": "https://github.com/rust-lang/rust/commit/4f7a742a067dcd6e8dbcf1da2bbcf203147562cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f7a742a067dcd6e8dbcf1da2bbcf203147562cf/comments", "author": {"login": "jedestep", "id": 1072527, "node_id": "MDQ6VXNlcjEwNzI1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1072527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedestep", "html_url": "https://github.com/jedestep", "followers_url": "https://api.github.com/users/jedestep/followers", "following_url": "https://api.github.com/users/jedestep/following{/other_user}", "gists_url": "https://api.github.com/users/jedestep/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedestep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedestep/subscriptions", "organizations_url": "https://api.github.com/users/jedestep/orgs", "repos_url": "https://api.github.com/users/jedestep/repos", "events_url": "https://api.github.com/users/jedestep/events{/privacy}", "received_events_url": "https://api.github.com/users/jedestep/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4621cab6859ee0f8ddacea0ece98e4a4c00d5a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4621cab6859ee0f8ddacea0ece98e4a4c00d5a6", "html_url": "https://github.com/rust-lang/rust/commit/f4621cab6859ee0f8ddacea0ece98e4a4c00d5a6"}], "stats": {"total": 95, "additions": 95, "deletions": 0}, "files": [{"sha": "2aacf9089829625782672c4b3efcd3f74510dced", "filename": "src/libextra/deque.rs", "status": "modified", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/rust-lang/rust/blob/4f7a742a067dcd6e8dbcf1da2bbcf203147562cf/src%2Flibextra%2Fdeque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f7a742a067dcd6e8dbcf1da2bbcf203147562cf/src%2Flibextra%2Fdeque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fdeque.rs?ref=4f7a742a067dcd6e8dbcf1da2bbcf203147562cf", "patch": "@@ -153,6 +153,101 @@ impl<T> Deque<T> {\n     pub fn reserve_at_least(&mut self, n: uint) {\n         vec::reserve_at_least(&mut self.elts, n);\n     }\n+\n+    /// Front-to-back iterator.\n+    pub fn iter<'a>(&'a self) -> DequeIterator<'a, T> {\n+\tDequeIterator { iter: self.elts.iter() }\n+    }\n+    \n+    /// Front-to-back iterator which returns mutable values.\n+    pub fn mut_iter<'a>(&'a mut self) -> DequeMutIterator<'a, T> {\n+\tDequeMutIterator { iter: self.elts.mut_iter() }\n+    }\n+\n+    /// Back-to-front iterator.\n+    pub fn rev_iter<'a>(&'a self) -> DequeRevIterator<'a, T> {\n+\tDequeRevIterator { iter: self.elts.rev_iter() }\n+    }\n+\n+    /// Back-to-front iterator which returns mutable values.\n+    pub fn mut_rev_iter<'a>(&'a mut self) -> DequeMutRevIterator<'a, T> {\n+\tDequeMutRevIterator { iter: self.elts.mut_rev_iter() }\n+    }\n+}\n+\n+/// Deque iterator\n+pub struct DequeIterator<'self, T> {\n+\tpriv iter: vec::VecIterator<'self, Option<T>>\n+}\n+\n+/// Deque reverse iterator\n+pub struct DequeRevIterator<'self, T> {\n+\tpriv iter: vec::VecRevIterator<'self, Option<T>>\n+}\n+/// Deque mutable iterator\n+pub struct DequeMutIterator<'self, T> {\n+\tpriv iter: vec::VecMutIterator<'self, Option<T>>\n+}\n+\n+/// Deque mutable reverse iterator\n+pub struct DequeMutRevIterator<'self, T> {\n+\tpriv iter: vec::VecMutRevIterator<'self, Option<T>>\n+}\n+\n+/// Iterator visiting elements of the deque from front to back\n+impl<'self, T> Iterator<&'self T> for DequeIterator<'self, T> {\n+\t#[inline]\n+\tfn next(&mut self) -> Option<&'self T> {\n+\t\tfor self.iter.advance |elt| {\n+\t\t\tmatch elt {\n+\t\t\t\t&Some(ref e) => return Some(e),\n+\t\t\t\t&None => {},\n+\t\t\t}\n+\t\t}\n+\t\tNone\n+\t}\n+}\n+\n+/// Iterator visiting elements of the deque mutably from front to back\n+impl<'self, T> Iterator<&'self mut T> for DequeMutIterator<'self, T> {\n+\t#[inline]\n+\tfn next(&mut self) -> Option<&'self mut T> {\n+\t\tfor self.iter.advance |elt| {\n+\t\t\tmatch elt {\n+\t\t\t\t&Some(ref mut e) => return Some(e),\n+\t\t\t\t&None => {},\n+\t\t\t}\n+\t\t}\n+\t\tNone\n+\t}\n+}\n+\n+/// Iterator visiting elements of the deque from back to front\n+impl<'self, T> Iterator<&'self T> for DequeRevIterator<'self, T> {\n+\t#[inline]\n+\tfn next(&mut self) -> Option<&'self T> {\n+\t\tfor self.iter.advance |elt| {\n+\t\t\tmatch elt {\n+\t\t\t\t&Some(ref e) => return Some(e),\n+\t\t\t\t&None => {},\n+\t\t\t}\n+\t\t}\n+\t\tNone\n+\t}\n+}\n+\n+/// Iterator visiting elements of the deque mutably from back to front\n+impl<'self, T> Iterator<&'self mut T> for DequeMutRevIterator<'self, T> {\n+\t#[inline]\n+\tfn next(&mut self) -> Option<&'self mut T> {\n+\t\tfor self.iter.advance |elt| {\n+\t\t\tmatch elt {\n+\t\t\t\t&Some(ref mut e) => return Some(e),\n+\t\t\t\t&None => {},\n+\t\t\t}\n+\t\t}\n+\t\tNone\n+\t}\n }\n \n /// Grow is only called on full elts, so nelts is also len(elts), unlike"}]}