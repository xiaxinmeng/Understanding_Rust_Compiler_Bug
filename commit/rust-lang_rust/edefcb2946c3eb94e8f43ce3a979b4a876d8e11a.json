{"sha": "edefcb2946c3eb94e8f43ce3a979b4a876d8e11a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkZWZjYjI5NDZjM2ViOTRlOGY0M2NlM2E5NzliNGE4NzZkOGUxMWE=", "commit": {"author": {"name": "James Cowgill", "email": "james410@cowgill.org.uk", "date": "2017-05-31T14:53:35Z"}, "committer": {"name": "James Cowgill", "email": "james410@cowgill.org.uk", "date": "2017-06-01T09:32:11Z"}, "message": "Don't byteswap Fingerprints when encoding\n\nByteswapping Fingerprints when encoding is unnessesary and breaks if\nthe Fingerprint is later decoded on a machine with different endianness\nto the one it was encoded on. Fix by removing the Encodable and\nDecodable implementations and use the ones derived from RustcEncodable\nand RustcDecodable.\n\nFixes #42239", "tree": {"sha": "798e9d1e8587927b5c8326f53b195a8057db88af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/798e9d1e8587927b5c8326f53b195a8057db88af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edefcb2946c3eb94e8f43ce3a979b4a876d8e11a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edefcb2946c3eb94e8f43ce3a979b4a876d8e11a", "html_url": "https://github.com/rust-lang/rust/commit/edefcb2946c3eb94e8f43ce3a979b4a876d8e11a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edefcb2946c3eb94e8f43ce3a979b4a876d8e11a/comments", "author": {"login": "jcowgill", "id": 1226825, "node_id": "MDQ6VXNlcjEyMjY4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1226825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcowgill", "html_url": "https://github.com/jcowgill", "followers_url": "https://api.github.com/users/jcowgill/followers", "following_url": "https://api.github.com/users/jcowgill/following{/other_user}", "gists_url": "https://api.github.com/users/jcowgill/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcowgill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcowgill/subscriptions", "organizations_url": "https://api.github.com/users/jcowgill/orgs", "repos_url": "https://api.github.com/users/jcowgill/repos", "events_url": "https://api.github.com/users/jcowgill/events{/privacy}", "received_events_url": "https://api.github.com/users/jcowgill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jcowgill", "id": 1226825, "node_id": "MDQ6VXNlcjEyMjY4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1226825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcowgill", "html_url": "https://github.com/jcowgill", "followers_url": "https://api.github.com/users/jcowgill/followers", "following_url": "https://api.github.com/users/jcowgill/following{/other_user}", "gists_url": "https://api.github.com/users/jcowgill/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcowgill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcowgill/subscriptions", "organizations_url": "https://api.github.com/users/jcowgill/orgs", "repos_url": "https://api.github.com/users/jcowgill/repos", "events_url": "https://api.github.com/users/jcowgill/events{/privacy}", "received_events_url": "https://api.github.com/users/jcowgill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f89d8d184490ecb3cf91f7b6bb7296d649f931ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/f89d8d184490ecb3cf91f7b6bb7296d649f931ba", "html_url": "https://github.com/rust-lang/rust/commit/f89d8d184490ecb3cf91f7b6bb7296d649f931ba"}], "stats": {"total": 20, "additions": 1, "deletions": 19}, "files": [{"sha": "8308c756c0532f1ecaddea56bc018e671a857ff2", "filename": "src/librustc/ich/fingerprint.rs", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/edefcb2946c3eb94e8f43ce3a979b4a876d8e11a/src%2Flibrustc%2Fich%2Ffingerprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edefcb2946c3eb94e8f43ce3a979b4a876d8e11a/src%2Flibrustc%2Fich%2Ffingerprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Ffingerprint.rs?ref=edefcb2946c3eb94e8f43ce3a979b4a876d8e11a", "patch": "@@ -8,12 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use rustc_serialize::{Encodable, Decodable, Encoder, Decoder};\n use rustc_data_structures::stable_hasher;\n use std::mem;\n use std::slice;\n \n-#[derive(Eq, PartialEq, Ord, PartialOrd, Hash, Debug, Clone, Copy)]\n+#[derive(Eq, PartialEq, Ord, PartialOrd, Hash, Debug, Clone, Copy, RustcEncodable, RustcDecodable)]\n pub struct Fingerprint(u64, u64);\n \n impl Fingerprint {\n@@ -37,23 +36,6 @@ impl Fingerprint {\n     }\n }\n \n-impl Encodable for Fingerprint {\n-    #[inline]\n-    fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {\n-        s.emit_u64(self.0.to_le())?;\n-        s.emit_u64(self.1.to_le())\n-    }\n-}\n-\n-impl Decodable for Fingerprint {\n-    #[inline]\n-    fn decode<D: Decoder>(d: &mut D) -> Result<Fingerprint, D::Error> {\n-        let _0 = u64::from_le(d.read_u64()?);\n-        let _1 = u64::from_le(d.read_u64()?);\n-        Ok(Fingerprint(_0, _1))\n-    }\n-}\n-\n impl ::std::fmt::Display for Fingerprint {\n     fn fmt(&self, formatter: &mut ::std::fmt::Formatter) -> Result<(), ::std::fmt::Error> {\n         write!(formatter, \"{:x}-{:x}\", self.0, self.1)"}]}