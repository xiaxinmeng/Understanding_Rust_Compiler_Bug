{"sha": "4f92d8fb52ba335abae39bdd38e72ff42cd37bb2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmOTJkOGZiNTJiYTMzNWFiYWUzOWJkZDM4ZTcyZmY0MmNkMzdiYjI=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-15T21:23:20Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-01-18T00:54:12Z"}, "message": "make intersection O(n+m) instead of O(n*log(m))", "tree": {"sha": "3a8f58a622b4e7c6f093b230755b599e44f3f1ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a8f58a622b4e7c6f093b230755b599e44f3f1ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f92d8fb52ba335abae39bdd38e72ff42cd37bb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f92d8fb52ba335abae39bdd38e72ff42cd37bb2", "html_url": "https://github.com/rust-lang/rust/commit/4f92d8fb52ba335abae39bdd38e72ff42cd37bb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f92d8fb52ba335abae39bdd38e72ff42cd37bb2/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fb49088b35ae82c290ed112cdc87b71986d3d7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fb49088b35ae82c290ed112cdc87b71986d3d7e", "html_url": "https://github.com/rust-lang/rust/commit/9fb49088b35ae82c290ed112cdc87b71986d3d7e"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "1524a7ce4dc0f1310c3880f13ffbc4712416f8ce", "filename": "src/libstd/treemap.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/4f92d8fb52ba335abae39bdd38e72ff42cd37bb2/src%2Flibstd%2Ftreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f92d8fb52ba335abae39bdd38e72ff42cd37bb2/src%2Flibstd%2Ftreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftreemap.rs?ref=4f92d8fb52ba335abae39bdd38e72ff42cd37bb2", "patch": "@@ -338,10 +338,24 @@ impl <T: Ord> TreeSet<T> {\n \n     /// Visit the values (in-order) representing the intersection\n     pure fn intersection(&self, other: &TreeSet<T>, f: fn(&T) -> bool) {\n-        // FIXME: this is a naive O(n*log(m)) implementation, could be O(n + m)\n-        for self.each |x| {\n-            if other.contains(x) {\n-                if !f(x) { break }\n+        let mut x = self.iter();\n+        let mut y = other.iter();\n+\n+        unsafe { // purity workaround\n+            let mut a = x.next();\n+            let mut b = y.next();\n+\n+            while a.is_some() && b.is_some() {\n+                let a1 = a.unwrap();\n+                let b1 = b.unwrap();\n+                if a1 < b1 {\n+                    a = x.next();\n+                } else {\n+                    if !(b1 < a1) {\n+                        if !f(a1) { return }\n+                    }\n+                    b = y.next();\n+                }\n             }\n         }\n     }"}]}