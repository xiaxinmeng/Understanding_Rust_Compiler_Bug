{"sha": "20a71b25c0af2b27e9152911479d45f941b2a97e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwYTcxYjI1YzBhZjJiMjdlOTE1MjkxMTQ3OWQ0NWY5NDFiMmE5N2U=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-09-27T18:19:03Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-09-27T19:03:28Z"}, "message": "rustc: Use a special filename for macros 1.1\n\nThis \"special filename\" is surrounded by `<>` to ensure that\n`FileMap::is_real_file` returns `false`. This way the \"files\" parsed here aren't\nemitted as dep info `.d` files and don't confuse Cargo about non-existent files.\n\nCloses #36625", "tree": {"sha": "5ccb2eeb4ffc2e03739aa68eca860232ac438fbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ccb2eeb4ffc2e03739aa68eca860232ac438fbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20a71b25c0af2b27e9152911479d45f941b2a97e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20a71b25c0af2b27e9152911479d45f941b2a97e", "html_url": "https://github.com/rust-lang/rust/commit/20a71b25c0af2b27e9152911479d45f941b2a97e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20a71b25c0af2b27e9152911479d45f941b2a97e/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea65ab6c7e96bf38c291ed7192137e6b96772687", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea65ab6c7e96bf38c291ed7192137e6b96772687", "html_url": "https://github.com/rust-lang/rust/commit/ea65ab6c7e96bf38c291ed7192137e6b96772687"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "1f3b705671db789c6c47cf676d967a1304e675db", "filename": "src/librustc_macro/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20a71b25c0af2b27e9152911479d45f941b2a97e/src%2Flibrustc_macro%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20a71b25c0af2b27e9152911479d45f941b2a97e/src%2Flibrustc_macro%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macro%2Flib.rs?ref=20a71b25c0af2b27e9152911479d45f941b2a97e", "patch": "@@ -139,7 +139,7 @@ impl FromStr for TokenStream {\n         __internal::with_parse_sess(|sess| {\n             let src = src.to_string();\n             let cfg = Vec::new();\n-            let name = \"rustc-macro source code\".to_string();\n+            let name = \"<rustc-macro source code>\".to_string();\n             let mut parser = parse::new_parser_from_source_str(sess, cfg, name,\n                                                                src);\n             let mut ret = TokenStream { inner: Vec::new() };"}, {"sha": "d27b5d0f3c436f95f05a6aebbfec42e01dc5a8e5", "filename": "src/test/run-make/rustc-macro-dep-files/Makefile", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/20a71b25c0af2b27e9152911479d45f941b2a97e/src%2Ftest%2Frun-make%2Frustc-macro-dep-files%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/20a71b25c0af2b27e9152911479d45f941b2a97e/src%2Ftest%2Frun-make%2Frustc-macro-dep-files%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustc-macro-dep-files%2FMakefile?ref=20a71b25c0af2b27e9152911479d45f941b2a97e", "patch": "@@ -0,0 +1,6 @@\n+-include ../tools.mk\n+\n+all:\n+\t$(RUSTC) foo.rs\n+\t$(RUSTC) bar.rs --emit dep-info\n+\tgrep \"rustc-macro source\" $(TMPDIR)/bar.d && exit 1 || exit 0"}, {"sha": "dac652797e67cb02ef563b97e0a7973af2eeebf7", "filename": "src/test/run-make/rustc-macro-dep-files/bar.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/20a71b25c0af2b27e9152911479d45f941b2a97e/src%2Ftest%2Frun-make%2Frustc-macro-dep-files%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20a71b25c0af2b27e9152911479d45f941b2a97e/src%2Ftest%2Frun-make%2Frustc-macro-dep-files%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustc-macro-dep-files%2Fbar.rs?ref=20a71b25c0af2b27e9152911479d45f941b2a97e", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_macro)]\n+\n+#[macro_use]\n+extern crate foo;\n+\n+#[derive(A)]\n+struct A;\n+\n+fn main() {\n+    let _b = B;\n+}"}, {"sha": "c302ca824d0dc01cffb69f44df39c7ddbfc6f995", "filename": "src/test/run-make/rustc-macro-dep-files/foo.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/20a71b25c0af2b27e9152911479d45f941b2a97e/src%2Ftest%2Frun-make%2Frustc-macro-dep-files%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20a71b25c0af2b27e9152911479d45f941b2a97e/src%2Ftest%2Frun-make%2Frustc-macro-dep-files%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustc-macro-dep-files%2Ffoo.rs?ref=20a71b25c0af2b27e9152911479d45f941b2a97e", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"rustc-macro\"]\n+#![feature(rustc_macro)]\n+#![feature(rustc_macro_lib)]\n+\n+extern crate rustc_macro;\n+\n+use rustc_macro::TokenStream;\n+\n+#[rustc_macro_derive(A)]\n+pub fn derive(input: TokenStream) -> TokenStream {\n+    let input = input.to_string();\n+    assert!(input.contains(\"struct A;\"));\n+    \"struct B;\".parse().unwrap()\n+}"}]}