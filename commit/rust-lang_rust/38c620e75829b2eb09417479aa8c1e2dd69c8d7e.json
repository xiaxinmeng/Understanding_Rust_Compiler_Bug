{"sha": "38c620e75829b2eb09417479aa8c1e2dd69c8d7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4YzYyMGU3NTgyOWIyZWIwOTQxNzQ3OWFhOGMxZTJkZDY5YzhkN2U=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-10-18T05:14:47Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-10-22T17:47:08Z"}, "message": "add feature gate for managed boxes\n\nI'll flip this on after doing a snapshot. This syntax may or may not\nstay around, and managed boxes are currently not very useful. They have\nthe same overall performance characteristics as `std::rc::Rc`, but are\nsignificantly slower, allocate larger boxes and hold onto the memory\nbeyond when it is needed due to lacking move semantics.\n\nThere are currently two useful aspects of the type:\n\n* the dereference sugar, which we should implement for `Rc`\n* the annihilator freeing cycles at the end of the task", "tree": {"sha": "88c400a1fd269df8181c608c68779f43287e6d15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88c400a1fd269df8181c608c68779f43287e6d15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38c620e75829b2eb09417479aa8c1e2dd69c8d7e", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38c620e75829b2eb09417479aa8c1e2dd69c8d7e", "html_url": "https://github.com/rust-lang/rust/commit/38c620e75829b2eb09417479aa8c1e2dd69c8d7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38c620e75829b2eb09417479aa8c1e2dd69c8d7e/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd8c7cf61239d4f23868b8765207026f602a79db", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd8c7cf61239d4f23868b8765207026f602a79db", "html_url": "https://github.com/rust-lang/rust/commit/cd8c7cf61239d4f23868b8765207026f602a79db"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "000dea12b0736e5af23221a604e6cd98b1a544a4", "filename": "src/librustc/front/feature_gate.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/38c620e75829b2eb09417479aa8c1e2dd69c8d7e/src%2Flibrustc%2Ffront%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c620e75829b2eb09417479aa8c1e2dd69c8d7e/src%2Flibrustc%2Ffront%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ffeature_gate.rs?ref=38c620e75829b2eb09417479aa8c1e2dd69c8d7e", "patch": "@@ -35,6 +35,7 @@ static KNOWN_FEATURES: &'static [(&'static str, Status)] = &[\n     (\"struct_variant\", Active),\n     (\"once_fns\", Active),\n     (\"asm\", Active),\n+    (\"managed_boxes\", Active),\n \n     // These are used to test this portion of the compiler, they don't actually\n     // mean anything\n@@ -137,6 +138,15 @@ impl Visitor<()> for Context {\n                                    experimental and likely to be removed\");\n \n             },\n+            // NOTE: enable after snapshot\n+            ast::ty_box(_) if false => {\n+                self.gate_feature(\"managed_boxes\", t.span, \"The managed box syntax may be replaced \\\n+                                                            by a library type, and a garbage \\\n+                                                            collector is not yet implemented. \\\n+                                                            Consider using the `std::rc` module \\\n+                                                            as it performs much better as a \\\n+                                                            reference counting implementation.\");\n+            }\n             _ => {}\n         }\n "}]}