{"sha": "a3371560ee465fb3a1d142b1f2672770887d3dd8", "node_id": "C_kwDOAAsO6NoAKGEzMzcxNTYwZWU0NjVmYjNhMWQxNDJiMWYyNjcyNzcwODg3ZDNkZDg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-24T07:42:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-24T07:42:36Z"}, "message": "Rollup merge of #104772 - GuillaumeGomez:small-accessibility-improvement, r=notriddle\n\nSmall accessibility improvements\n\nFrom this [reddit post](https://www.reddit.com/r/rust/comments/z1gyz7/accessible_documentation/), I started to check a bit how to improve accessibility and how we could add test for it.\n\nSo these two fixes come from the use of the [pa11y tool](https://github.com/pa11y/pa11y). To make it work, I had to update its puppeteer version to the last one but otherwise it seems to be quite nice. I didn't fix all the errors it reported because they were about colors. To get the same result as mine, you can use this config:\n\n```json\n{\n    \"ignore\": [\n\t\"WCAG2AA.Principle1.Guideline1_4.1_4_3.G18.Fail\",\n\t\"WCAG2AA.Principle3.Guideline3_2.3_2_2.H32.2\"\n     ]\n}\n```\n\nI think trying to improve accessibility is something we should definitely aim for. I'll try to integrate a tool to enforce this check (very likely `pa11y`) directly into the CI.\n\ncc ``@jsha``\nr? ``@notriddle``", "tree": {"sha": "f811cf77d1ecdd6b33f807717853ffc7e2f150d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f811cf77d1ecdd6b33f807717853ffc7e2f150d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3371560ee465fb3a1d142b1f2672770887d3dd8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjfyBsCRBK7hj4Ov3rIwAApUwIAEjQk9Z7H/2gO4Nd5rrnStkF\n86ePRvRtVmOg74qFZkmOaxQ+Iv5DD8b6iAg8QiHVPv1pMr9Z5P4tZP2mGQ3fXbBW\nq9vs9vNWcYTv5csJ9YDuYPYzvgkngua//NK8orai7DNu66RUgQqkB0IcoIIfCloW\npl5ffQ5ZWXkNROGSZGZ+wVlITXJo+PMOxNi0M6oZ3dzow5Ow2d/KT3rPiyS1SysN\nNyt8/Jr/pWKfKnsFATbqg1LNxRWUwIGTYZoB6At0DOSqAXo9l/8cNxbmd1ptcFMu\ng/M5g8ns6hwX26rBDKyHm3sdmZsvheNtjdOX3aoNxi0jG2D7yINDL7HTaWKNlr0=\n=01P6\n-----END PGP SIGNATURE-----\n", "payload": "tree f811cf77d1ecdd6b33f807717853ffc7e2f150d3\nparent 84ff4ab5a238558a009e1cc6f375b0922053b95b\nparent aa73e29799456739128734b773d019c412d840c1\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1669275756 +0100\ncommitter GitHub <noreply@github.com> 1669275756 +0100\n\nRollup merge of #104772 - GuillaumeGomez:small-accessibility-improvement, r=notriddle\n\nSmall accessibility improvements\n\nFrom this [reddit post](https://www.reddit.com/r/rust/comments/z1gyz7/accessible_documentation/), I started to check a bit how to improve accessibility and how we could add test for it.\n\nSo these two fixes come from the use of the [pa11y tool](https://github.com/pa11y/pa11y). To make it work, I had to update its puppeteer version to the last one but otherwise it seems to be quite nice. I didn't fix all the errors it reported because they were about colors. To get the same result as mine, you can use this config:\n\n```json\n{\n    \"ignore\": [\n\t\"WCAG2AA.Principle1.Guideline1_4.1_4_3.G18.Fail\",\n\t\"WCAG2AA.Principle3.Guideline3_2.3_2_2.H32.2\"\n     ]\n}\n```\n\nI think trying to improve accessibility is something we should definitely aim for. I'll try to integrate a tool to enforce this check (very likely `pa11y`) directly into the CI.\n\ncc ``@jsha``\nr? ``@notriddle``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3371560ee465fb3a1d142b1f2672770887d3dd8", "html_url": "https://github.com/rust-lang/rust/commit/a3371560ee465fb3a1d142b1f2672770887d3dd8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3371560ee465fb3a1d142b1f2672770887d3dd8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84ff4ab5a238558a009e1cc6f375b0922053b95b", "url": "https://api.github.com/repos/rust-lang/rust/commits/84ff4ab5a238558a009e1cc6f375b0922053b95b", "html_url": "https://github.com/rust-lang/rust/commit/84ff4ab5a238558a009e1cc6f375b0922053b95b"}, {"sha": "aa73e29799456739128734b773d019c412d840c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa73e29799456739128734b773d019c412d840c1", "html_url": "https://github.com/rust-lang/rust/commit/aa73e29799456739128734b773d019c412d840c1"}], "stats": {"total": 34, "additions": 16, "deletions": 18}, "files": [{"sha": "ef28e2a855a04cc353c849c6d6ab18e982cf02d7", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a3371560ee465fb3a1d142b1f2672770887d3dd8/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3371560ee465fb3a1d142b1f2672770887d3dd8/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=a3371560ee465fb3a1d142b1f2672770887d3dd8", "patch": "@@ -1071,7 +1071,7 @@ fn write_impl_section_heading(w: &mut Buffer, title: &str, id: &str) {\n         w,\n         \"<h2 id=\\\"{id}\\\" class=\\\"small-section-header\\\">\\\n             {title}\\\n-            <a href=\\\"#{id}\\\" class=\\\"anchor\\\"></a>\\\n+            <a href=\\\"#{id}\\\" class=\\\"anchor\\\">\u00a7</a>\\\n          </h2>\"\n     );\n }\n@@ -1536,7 +1536,7 @@ fn render_impl(\n                     render_rightside(w, cx, item, containing_item, render_mode);\n                     if trait_.is_some() {\n                         // Anchors are only used on trait impls.\n-                        write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n+                        write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\">\u00a7</a>\", id);\n                     }\n                     w.write_str(\"<h4 class=\\\"code-header\\\">\");\n                     render_assoc_item(\n@@ -1562,7 +1562,7 @@ fn render_impl(\n                 render_rightside(w, cx, item, containing_item, render_mode);\n                 if trait_.is_some() {\n                     // Anchors are only used on trait impls.\n-                    write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n+                    write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\">\u00a7</a>\", id);\n                 }\n                 w.write_str(\"<h4 class=\\\"code-header\\\">\");\n                 assoc_const(\n@@ -1587,7 +1587,7 @@ fn render_impl(\n                 write!(w, \"<section id=\\\"{}\\\" class=\\\"{}{}\\\">\", id, item_type, in_trait_class);\n                 if trait_.is_some() {\n                     // Anchors are only used on trait impls.\n-                    write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n+                    write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\">\u00a7</a>\", id);\n                 }\n                 w.write_str(\"<h4 class=\\\"code-header\\\">\");\n                 assoc_type(\n@@ -1613,7 +1613,7 @@ fn render_impl(\n                 );\n                 if trait_.is_some() {\n                     // Anchors are only used on trait impls.\n-                    write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n+                    write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\">\u00a7</a>\", id);\n                 }\n                 w.write_str(\"<h4 class=\\\"code-header\\\">\");\n                 assoc_type(\n@@ -1846,7 +1846,7 @@ pub(crate) fn render_impl_summary(\n     };\n     write!(w, \"<section id=\\\"{}\\\" class=\\\"impl has-srclink\\\"{}>\", id, aliases);\n     render_rightside(w, cx, &i.impl_item, containing_item, RenderMode::Normal);\n-    write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n+    write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\">\u00a7</a>\", id);\n     write!(w, \"<h3 class=\\\"code-header\\\">\");\n \n     if let Some(use_absolute) = use_absolute {"}, {"sha": "0f9b3b15c77ff15ce58acb69ec5e8c7d72797914", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a3371560ee465fb3a1d142b1f2672770887d3dd8/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3371560ee465fb3a1d142b1f2672770887d3dd8/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=a3371560ee465fb3a1d142b1f2672770887d3dd8", "patch": "@@ -717,7 +717,7 @@ fn item_trait(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n         write!(\n             w,\n             \"<h2 id=\\\"{0}\\\" class=\\\"small-section-header\\\">\\\n-                {1}<a href=\\\"#{0}\\\" class=\\\"anchor\\\"></a>\\\n+                {1}<a href=\\\"#{0}\\\" class=\\\"anchor\\\">\u00a7</a>\\\n              </h2>{2}\",\n             id, title, extra_content\n         )\n@@ -1147,7 +1147,7 @@ fn item_union(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean:\n         write!(\n             w,\n             \"<h2 id=\\\"fields\\\" class=\\\"fields small-section-header\\\">\\\n-                Fields<a href=\\\"#fields\\\" class=\\\"anchor\\\"></a>\\\n+                Fields<a href=\\\"#fields\\\" class=\\\"anchor\\\">\u00a7</a>\\\n             </h2>\"\n         );\n         for (field, ty) in fields {\n@@ -1156,7 +1156,7 @@ fn item_union(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean:\n             write!(\n                 w,\n                 \"<span id=\\\"{id}\\\" class=\\\"{shortty} small-section-header\\\">\\\n-                     <a href=\\\"#{id}\\\" class=\\\"anchor field\\\"></a>\\\n+                     <a href=\\\"#{id}\\\" class=\\\"anchor field\\\">\u00a7</a>\\\n                      <code>{name}: {ty}</code>\\\n                  </span>\",\n                 id = id,\n@@ -1262,7 +1262,7 @@ fn item_enum(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, e: &clean::\n         write!(\n             w,\n             \"<h2 id=\\\"variants\\\" class=\\\"variants small-section-header\\\">\\\n-                Variants{}<a href=\\\"#variants\\\" class=\\\"anchor\\\"></a>\\\n+                Variants{}<a href=\\\"#variants\\\" class=\\\"anchor\\\">\u00a7</a>\\\n             </h2>\",\n             document_non_exhaustive_header(it)\n         );\n@@ -1273,7 +1273,7 @@ fn item_enum(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, e: &clean::\n             write!(\n                 w,\n                 \"<section id=\\\"{id}\\\" class=\\\"variant\\\">\\\n-                    <a href=\\\"#{id}\\\" class=\\\"anchor\\\"></a>\",\n+                    <a href=\\\"#{id}\\\" class=\\\"anchor\\\">\u00a7</a>\",\n                 id = id,\n             );\n             render_stability_since_raw_with_extra(\n@@ -1325,7 +1325,7 @@ fn item_enum(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, e: &clean::\n                                 w,\n                                 \"<div class=\\\"sub-variant-field\\\">\\\n                                  <span id=\\\"{id}\\\" class=\\\"small-section-header\\\">\\\n-                                     <a href=\\\"#{id}\\\" class=\\\"anchor field\\\"></a>\\\n+                                     <a href=\\\"#{id}\\\" class=\\\"anchor field\\\">\u00a7</a>\\\n                                      <code>{f}:&nbsp;{t}</code>\\\n                                  </span>\",\n                                 id = id,\n@@ -1477,7 +1477,7 @@ fn item_struct(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean\n             write!(\n                 w,\n                 \"<h2 id=\\\"fields\\\" class=\\\"fields small-section-header\\\">\\\n-                     {}{}<a href=\\\"#fields\\\" class=\\\"anchor\\\"></a>\\\n+                     {}{}<a href=\\\"#fields\\\" class=\\\"anchor\\\">\u00a7</a>\\\n                  </h2>\",\n                 if s.ctor_kind.is_none() { \"Fields\" } else { \"Tuple Fields\" },\n                 document_non_exhaustive_header(it)\n@@ -1490,7 +1490,7 @@ fn item_struct(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean\n                 write!(\n                     w,\n                     \"<span id=\\\"{id}\\\" class=\\\"{item_type} small-section-header\\\">\\\n-                         <a href=\\\"#{id}\\\" class=\\\"anchor field\\\"></a>\\\n+                         <a href=\\\"#{id}\\\" class=\\\"anchor field\\\">\u00a7</a>\\\n                          <code>{name}: {ty}</code>\\\n                      </span>\",\n                     item_type = ItemType::StructField,\n@@ -1908,7 +1908,7 @@ fn document_type_layout(w: &mut Buffer, cx: &Context<'_>, ty_def_id: DefId) {\n     writeln!(\n         w,\n         \"<h2 id=\\\"layout\\\" class=\\\"small-section-header\\\"> \\\n-        Layout<a href=\\\"#layout\\\" class=\\\"anchor\\\"></a></h2>\"\n+        Layout<a href=\\\"#layout\\\" class=\\\"anchor\\\">\u00a7</a></h2>\"\n     );\n     writeln!(w, \"<div class=\\\"docblock\\\">\");\n "}, {"sha": "e0a4f2364b682e526ef994c8c9cb106d96f5069e", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a3371560ee465fb3a1d142b1f2672770887d3dd8/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/a3371560ee465fb3a1d142b1f2672770887d3dd8/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=a3371560ee465fb3a1d142b1f2672770887d3dd8", "patch": "@@ -730,9 +730,6 @@ a {\n h2.small-section-header > .anchor {\n \tpadding-right: 6px;\n }\n-.anchor::before {\n-\tcontent: '\u00a7';\n-}\n \n .main-heading a:hover,\n .example-wrap > pre.rust a:hover,"}, {"sha": "aa3bf827db4bf5d0c60ab36e98c133105fef4040", "filename": "src/librustdoc/html/templates/page.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a3371560ee465fb3a1d142b1f2672770887d3dd8/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "raw_url": "https://github.com/rust-lang/rust/raw/a3371560ee465fb3a1d142b1f2672770887d3dd8/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html?ref=a3371560ee465fb3a1d142b1f2672770887d3dd8", "patch": "@@ -115,6 +115,7 @@ <h2></h2> {#- -#}\n                     <input {# -#}\n                         class=\"search-input\" {# -#}\n                         name=\"search\" {# -#}\n+                        aria-label=\"Run search in the documentation\" {# -#}\n                         autocomplete=\"off\" {# -#}\n                         spellcheck=\"false\" {# -#}\n                         placeholder=\"Click or press \u2018S\u2019 to search, \u2018?\u2019 for more options\u2026\" {# -#}"}]}