{"sha": "5847cf0367287d89377c57a431f38419ec1db008", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4NDdjZjAzNjcyODdkODkzNzdjNTdhNDMxZjM4NDE5ZWMxZGIwMDg=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-01-25T10:33:05Z"}, "committer": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-01-26T05:53:37Z"}, "message": "(TEMPORARY) Break something by making io::mem_buffer_str UTF-8 safe", "tree": {"sha": "a02ccc05a5fed589ced0a0dbe42d19624cd3c59c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a02ccc05a5fed589ced0a0dbe42d19624cd3c59c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5847cf0367287d89377c57a431f38419ec1db008", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5847cf0367287d89377c57a431f38419ec1db008", "html_url": "https://github.com/rust-lang/rust/commit/5847cf0367287d89377c57a431f38419ec1db008", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5847cf0367287d89377c57a431f38419ec1db008/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fec36de94e02e9c7c6fec05a2aea32bfbdc2f0f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/fec36de94e02e9c7c6fec05a2aea32bfbdc2f0f8", "html_url": "https://github.com/rust-lang/rust/commit/fec36de94e02e9c7c6fec05a2aea32bfbdc2f0f8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5cc08813d6abc344a746b90922796b5caead633a", "filename": "src/libstd/io.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5847cf0367287d89377c57a431f38419ec1db008/src%2Flibstd%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5847cf0367287d89377c57a431f38419ec1db008/src%2Flibstd%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio.rs?ref=5847cf0367287d89377c57a431f38419ec1db008", "patch": "@@ -463,7 +463,7 @@ fn mem_buffer_writer(b: mem_buffer) -> writer { b as writer }\n fn mem_buffer_buf(b: mem_buffer) -> [u8] { vec::from_mut(b.buf) }\n fn mem_buffer_str(b: mem_buffer) -> str {\n    let b_ = vec::from_mut(b.buf);\n-   str::unsafe_from_bytes(b_)\n+   str::from_bytes(b_)\n }\n \n // Utility functions"}]}