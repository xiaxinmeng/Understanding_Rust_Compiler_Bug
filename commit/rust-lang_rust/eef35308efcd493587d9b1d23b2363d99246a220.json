{"sha": "eef35308efcd493587d9b1d23b2363d99246a220", "node_id": "C_kwDOAAsO6NoAKGVlZjM1MzA4ZWZjZDQ5MzU4N2Q5YjFkMjNiMjM2M2Q5OTI0NmEyMjA", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2022-01-12T03:19:52Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2022-01-15T01:16:55Z"}, "message": "initial revert", "tree": {"sha": "55a249c53194f5715979b366abfff40c56dd4a98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55a249c53194f5715979b366abfff40c56dd4a98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eef35308efcd493587d9b1d23b2363d99246a220", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eef35308efcd493587d9b1d23b2363d99246a220", "html_url": "https://github.com/rust-lang/rust/commit/eef35308efcd493587d9b1d23b2363d99246a220", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eef35308efcd493587d9b1d23b2363d99246a220/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "409276cf55a666932524d9d9dd9e0a0329364db3", "url": "https://api.github.com/repos/rust-lang/rust/commits/409276cf55a666932524d9d9dd9e0a0329364db3", "html_url": "https://github.com/rust-lang/rust/commit/409276cf55a666932524d9d9dd9e0a0329364db3"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "0c06c77472b9170e41ed462026877e374355542f", "filename": "src/constant.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eef35308efcd493587d9b1d23b2363d99246a220/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eef35308efcd493587d9b1d23b2363d99246a220/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=eef35308efcd493587d9b1d23b2363d99246a220", "patch": "@@ -129,11 +129,13 @@ pub(crate) fn codegen_constant<'tcx>(\n     };\n     let const_val = match const_.val {\n         ConstKind::Value(const_val) => const_val,\n-        ConstKind::Unevaluated(uv) if fx.tcx.is_static(uv.def.did) => {\n-            assert!(uv.substs(fx.tcx).is_empty());\n-            assert!(uv.promoted.is_none());\n+        ConstKind::Unevaluated(ty::Unevaluated { def, substs, promoted })\n+            if fx.tcx.is_static(def.did) =>\n+        {\n+            assert!(substs.is_empty());\n+            assert!(promoted.is_none());\n \n-            return codegen_static_ref(fx, uv.def.did, fx.layout_of(const_.ty)).to_cvalue(fx);\n+            return codegen_static_ref(fx, def.did, fx.layout_of(const_.ty)).to_cvalue(fx);\n         }\n         ConstKind::Unevaluated(unevaluated) => {\n             match fx.tcx.const_eval_resolve(ParamEnv::reveal_all(), unevaluated, None) {"}]}