{"sha": "fba0d04d306462b25f7768b39756e7f82fc92318", "node_id": "C_kwDOAAsO6NoAKGZiYTBkMDRkMzA2NDYyYjI1Zjc3NjhiMzk3NTZlN2Y4MmZjOTIzMTg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-19T16:38:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-19T16:38:34Z"}, "message": "Rollup merge of #91895 - pitaj:91867-monomorphize, r=Aaron1011\n\nRemove `in_band_lifetimes` for `rustc_monomorphize`\n\n#91867", "tree": {"sha": "ab998f21afe9274bd4dc01000285ae637c69b4e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab998f21afe9274bd4dc01000285ae637c69b4e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fba0d04d306462b25f7768b39756e7f82fc92318", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhv2ALCRBK7hj4Ov3rIwAA234IABlqY/KDLv3HayciKojoBB5r\n1ddv2e6Xv8crGhe/gNa1HTmrOvc9kQ1vQSpd5cilvyOcHM+3YnesdQ++btdwdbC8\n2Agr6ph4q8uOmQPdRgycTZEcQcTVSZ+6BFyzoJ29gm4babLdZRyC8zaPY0MC63r/\nv4+C8xvV1rC3S2bpFGAEj7DbTRAcQ6ccf+8Gg//IqmfCksrg2EwrPg1P4w1Ys2k/\noO8ucUpqP3vEFpEiCVlq6c+UV9j/dpewT48QwpEwNil77JL/kbI9mI9BYDmGZT2R\neK6IMcvce5C8E6+OpAOl0XioSIRTsc3l36V1AJ7xkAP+3uepB0Oye/3HYghXmWQ=\n=/0H7\n-----END PGP SIGNATURE-----\n", "payload": "tree ab998f21afe9274bd4dc01000285ae637c69b4e8\nparent d576f7d42d4bbcb3e028e3bf451398690b2e0b1f\nparent f0b714258fb01a2523c094d344f0993a006a8ab4\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639931914 +0100\ncommitter GitHub <noreply@github.com> 1639931914 +0100\n\nRollup merge of #91895 - pitaj:91867-monomorphize, r=Aaron1011\n\nRemove `in_band_lifetimes` for `rustc_monomorphize`\n\n#91867\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fba0d04d306462b25f7768b39756e7f82fc92318", "html_url": "https://github.com/rust-lang/rust/commit/fba0d04d306462b25f7768b39756e7f82fc92318", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fba0d04d306462b25f7768b39756e7f82fc92318/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d576f7d42d4bbcb3e028e3bf451398690b2e0b1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d576f7d42d4bbcb3e028e3bf451398690b2e0b1f", "html_url": "https://github.com/rust-lang/rust/commit/d576f7d42d4bbcb3e028e3bf451398690b2e0b1f"}, {"sha": "f0b714258fb01a2523c094d344f0993a006a8ab4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0b714258fb01a2523c094d344f0993a006a8ab4", "html_url": "https://github.com/rust-lang/rust/commit/f0b714258fb01a2523c094d344f0993a006a8ab4"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "b1fa9041342a6e3744c3daa4e7c0714f344c7ad0", "filename": "compiler/rustc_monomorphize/src/collector.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fba0d04d306462b25f7768b39756e7f82fc92318/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fba0d04d306462b25f7768b39756e7f82fc92318/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs?ref=fba0d04d306462b25f7768b39756e7f82fc92318", "patch": "@@ -498,7 +498,7 @@ fn record_accesses<'a, 'tcx: 'a>(\n /// the user's terminal with thousands of lines of type-name.\n ///\n /// If the type name is longer than before+after, it will be written to a file.\n-fn shrunk_instance_name(\n+fn shrunk_instance_name<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     instance: &Instance<'tcx>,\n     before: usize,\n@@ -1145,7 +1145,7 @@ struct RootCollector<'a, 'tcx> {\n     entry_fn: Option<(DefId, EntryFnType)>,\n }\n \n-impl ItemLikeVisitor<'v> for RootCollector<'_, 'v> {\n+impl<'v> ItemLikeVisitor<'v> for RootCollector<'_, 'v> {\n     fn visit_item(&mut self, item: &'v hir::Item<'v>) {\n         match item.kind {\n             hir::ItemKind::ExternCrate(..)\n@@ -1225,7 +1225,7 @@ impl ItemLikeVisitor<'v> for RootCollector<'_, 'v> {\n     fn visit_foreign_item(&mut self, _foreign_item: &'v hir::ForeignItem<'v>) {}\n }\n \n-impl RootCollector<'_, 'v> {\n+impl<'v> RootCollector<'_, 'v> {\n     fn is_root(&self, def_id: LocalDefId) -> bool {\n         !item_requires_monomorphization(self.tcx, def_id)\n             && match self.mode {"}, {"sha": "21ac174ba90b771a4de495d4e2820c18d0c5b671", "filename": "compiler/rustc_monomorphize/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fba0d04d306462b25f7768b39756e7f82fc92318/compiler%2Frustc_monomorphize%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fba0d04d306462b25f7768b39756e7f82fc92318/compiler%2Frustc_monomorphize%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Flib.rs?ref=fba0d04d306462b25f7768b39756e7f82fc92318", "patch": "@@ -3,7 +3,6 @@\n #![feature(crate_visibility_modifier)]\n #![feature(control_flow_enum)]\n #![feature(let_else)]\n-#![feature(in_band_lifetimes)]\n #![recursion_limit = \"256\"]\n \n #[macro_use]"}, {"sha": "516c9a9259d4fe17624e245b327b71e5b643961b", "filename": "compiler/rustc_monomorphize/src/partitioning/default.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fba0d04d306462b25f7768b39756e7f82fc92318/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fba0d04d306462b25f7768b39756e7f82fc92318/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fdefault.rs?ref=fba0d04d306462b25f7768b39756e7f82fc92318", "patch": "@@ -378,7 +378,7 @@ fn fallback_cgu_name(name_builder: &mut CodegenUnitNameBuilder<'_>) -> Symbol {\n     name_builder.build_cgu_name(LOCAL_CRATE, &[\"fallback\"], Some(\"cgu\"))\n }\n \n-fn mono_item_linkage_and_visibility(\n+fn mono_item_linkage_and_visibility<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     mono_item: &MonoItem<'tcx>,\n     can_be_internalized: &mut bool,\n@@ -393,7 +393,7 @@ fn mono_item_linkage_and_visibility(\n \n type CguNameCache = FxHashMap<(DefId, bool), Symbol>;\n \n-fn mono_item_visibility(\n+fn mono_item_visibility<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     mono_item: &MonoItem<'tcx>,\n     can_be_internalized: &mut bool,"}, {"sha": "6084cdda22768f7bf06ed30ba53a3ccbc7905063", "filename": "compiler/rustc_monomorphize/src/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fba0d04d306462b25f7768b39756e7f82fc92318/compiler%2Frustc_monomorphize%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fba0d04d306462b25f7768b39756e7f82fc92318/compiler%2Frustc_monomorphize%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Futil.rs?ref=fba0d04d306462b25f7768b39756e7f82fc92318", "patch": "@@ -7,7 +7,7 @@ use std::io::prelude::*;\n ///\n /// During the same compile all closures dump the information in the same file\n /// \"closure_profile_XXXXX.csv\", which is created in the directory where the compiler is invoked.\n-crate fn dump_closure_profile(tcx: TyCtxt<'tcx>, closure_instance: Instance<'tcx>) {\n+crate fn dump_closure_profile<'tcx>(tcx: TyCtxt<'tcx>, closure_instance: Instance<'tcx>) {\n     let mut file = if let Ok(file) = OpenOptions::new()\n         .create(true)\n         .append(true)"}]}