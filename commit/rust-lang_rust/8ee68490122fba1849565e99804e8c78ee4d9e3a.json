{"sha": "8ee68490122fba1849565e99804e8c78ee4d9e3a", "node_id": "C_kwDOAAsO6NoAKDhlZTY4NDkwMTIyZmJhMTg0OTU2NWU5OTgwNGU4Yzc4ZWU0ZDllM2E", "commit": {"author": {"name": "Hiroki6", "email": "hirokifujino0108@gmail.com", "date": "2022-08-21T21:43:16Z"}, "committer": {"name": "Hiroki6", "email": "hirokifujino0108@gmail.com", "date": "2022-08-21T21:44:43Z"}, "message": "rustfmt", "tree": {"sha": "de478bd629637fb72eaba06370f04a6ab6988c1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de478bd629637fb72eaba06370f04a6ab6988c1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ee68490122fba1849565e99804e8c78ee4d9e3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ee68490122fba1849565e99804e8c78ee4d9e3a", "html_url": "https://github.com/rust-lang/rust/commit/8ee68490122fba1849565e99804e8c78ee4d9e3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ee68490122fba1849565e99804e8c78ee4d9e3a/comments", "author": {"login": "Hiroki6", "id": 11785972, "node_id": "MDQ6VXNlcjExNzg1OTcy", "avatar_url": "https://avatars.githubusercontent.com/u/11785972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hiroki6", "html_url": "https://github.com/Hiroki6", "followers_url": "https://api.github.com/users/Hiroki6/followers", "following_url": "https://api.github.com/users/Hiroki6/following{/other_user}", "gists_url": "https://api.github.com/users/Hiroki6/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hiroki6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hiroki6/subscriptions", "organizations_url": "https://api.github.com/users/Hiroki6/orgs", "repos_url": "https://api.github.com/users/Hiroki6/repos", "events_url": "https://api.github.com/users/Hiroki6/events{/privacy}", "received_events_url": "https://api.github.com/users/Hiroki6/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Hiroki6", "id": 11785972, "node_id": "MDQ6VXNlcjExNzg1OTcy", "avatar_url": "https://avatars.githubusercontent.com/u/11785972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hiroki6", "html_url": "https://github.com/Hiroki6", "followers_url": "https://api.github.com/users/Hiroki6/followers", "following_url": "https://api.github.com/users/Hiroki6/following{/other_user}", "gists_url": "https://api.github.com/users/Hiroki6/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hiroki6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hiroki6/subscriptions", "organizations_url": "https://api.github.com/users/Hiroki6/orgs", "repos_url": "https://api.github.com/users/Hiroki6/repos", "events_url": "https://api.github.com/users/Hiroki6/events{/privacy}", "received_events_url": "https://api.github.com/users/Hiroki6/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b073fe2537bfd59abb9cb7631768e808312f3fda", "url": "https://api.github.com/repos/rust-lang/rust/commits/b073fe2537bfd59abb9cb7631768e808312f3fda", "html_url": "https://github.com/rust-lang/rust/commit/b073fe2537bfd59abb9cb7631768e808312f3fda"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "550d9b9d7b55a132d9a7f12180335c36805ac687", "filename": "src/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8ee68490122fba1849565e99804e8c78ee4d9e3a/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee68490122fba1849565e99804e8c78ee4d9e3a/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=8ee68490122fba1849565e99804e8c78ee4d9e3a", "patch": "@@ -85,28 +85,28 @@ pub use crate::concurrency::data_race::{\n     EvalContextExt as DataRaceEvalContextExt,\n };\n pub use crate::diagnostics::{\n-    EvalContextExt as DiagnosticsEvalContextExt, NonHaltingDiagnostic, register_diagnostic,\n-    report_error, TerminationInfo,\n+    register_diagnostic, report_error, EvalContextExt as DiagnosticsEvalContextExt,\n+    NonHaltingDiagnostic, TerminationInfo,\n };\n pub use crate::eval::{\n-    AlignmentCheck, BacktraceStyle, create_ecx, eval_entry, IsolatedOp, MiriConfig, RejectOpWith,\n+    create_ecx, eval_entry, AlignmentCheck, BacktraceStyle, IsolatedOp, MiriConfig, RejectOpWith,\n };\n pub use crate::helpers::{CurrentSpan, EvalContextExt as HelpersEvalContextExt};\n pub use crate::intptrcast::ProvenanceMode;\n pub use crate::machine::{\n     AllocExtra, Evaluator, FrameData, MiriEvalContext, MiriEvalContextExt, MiriMemoryKind,\n-    NUM_CPUS, PAGE_SIZE, Provenance, ProvenanceExtra, STACK_ADDR, STACK_SIZE,\n+    Provenance, ProvenanceExtra, NUM_CPUS, PAGE_SIZE, STACK_ADDR, STACK_SIZE,\n };\n pub use crate::mono_hash_map::MonoHashMap;\n pub use crate::operator::EvalContextExt as OperatorEvalContextExt;\n pub use crate::range_map::RangeMap;\n pub use crate::stacked_borrows::{\n     CallId, EvalContextExt as StackedBorEvalContextExt, Item, Permission, SbTag, Stack, Stacks,\n };\n-pub use concurrency::sync::{CondvarId, EvalContextExt as SyncEvalContextExt, MutexId, RwLockId};\n pub use crate::thread::{\n     EvalContextExt as ThreadsEvalContextExt, SchedulingAction, ThreadId, ThreadManager, ThreadState,\n };\n+pub use concurrency::sync::{CondvarId, EvalContextExt as SyncEvalContextExt, MutexId, RwLockId};\n /// Insert rustc arguments at the beginning of the argument list that Miri wants to be\n /// set per default, for maximal validation power.\n pub const MIRI_DEFAULT_ARGS: &[&str] = &["}]}