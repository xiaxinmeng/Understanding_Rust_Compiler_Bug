{"sha": "f0d3df39cbe1a3afaaabddbc5764b4057c713dd5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwZDNkZjM5Y2JlMWEzYWZhYWFiZGRiYzU3NjRiNDA1N2M3MTNkZDU=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2019-01-15T20:53:37Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2019-01-17T14:26:43Z"}, "message": "Use a faster early exit during region expansion\n\nTurns out that the equality check for regions is rather expensive, and\nthe current early exit check works in such a way, that the comparison is\neven done twice. As we only really care about the case of equal scopes,\nwe can perform a faster, more specialized check and move it up one\nlevel, so we can eventually skip the additional full comparison as well.", "tree": {"sha": "0482535c1592d9380dd00819fb48dee4d93e56c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0482535c1592d9380dd00819fb48dee4d93e56c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0d3df39cbe1a3afaaabddbc5764b4057c713dd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0d3df39cbe1a3afaaabddbc5764b4057c713dd5", "html_url": "https://github.com/rust-lang/rust/commit/f0d3df39cbe1a3afaaabddbc5764b4057c713dd5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0d3df39cbe1a3afaaabddbc5764b4057c713dd5/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33e6df4b62237af312bf6e3f40a97f5bdc94949a", "url": "https://api.github.com/repos/rust-lang/rust/commits/33e6df4b62237af312bf6e3f40a97f5bdc94949a", "html_url": "https://github.com/rust-lang/rust/commit/33e6df4b62237af312bf6e3f40a97f5bdc94949a"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "24ead37403138ffd6ab6e6d362781665d1b2685a", "filename": "src/librustc/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f0d3df39cbe1a3afaaabddbc5764b4057c713dd5/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0d3df39cbe1a3afaaabddbc5764b4057c713dd5/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=f0d3df39cbe1a3afaaabddbc5764b4057c713dd5", "patch": "@@ -236,6 +236,14 @@ impl<'cx, 'gcx, 'tcx> LexicalResolver<'cx, 'gcx, 'tcx> {\n \n         match *b_data {\n             VarValue::Value(cur_region) => {\n+                // Identical scopes can show up quite often, if the fixed point\n+                // iteration converges slowly, skip them\n+                if let (ReScope(a_scope), ReScope(cur_scope)) = (a_region, cur_region) {\n+                    if a_scope == cur_scope {\n+                        return false;\n+                    }\n+                }\n+\n                 let mut lub = self.lub_concrete_regions(a_region, cur_region);\n                 if lub == cur_region {\n                     return false;\n@@ -275,12 +283,6 @@ impl<'cx, 'gcx, 'tcx> LexicalResolver<'cx, 'gcx, 'tcx> {\n     fn lub_concrete_regions(&self, a: Region<'tcx>, b: Region<'tcx>) -> Region<'tcx> {\n         let tcx = self.tcx();\n \n-        // Equal scopes can show up quite often, if the fixed point\n-        // iteration converges slowly, skip them\n-        if a == b {\n-            return a;\n-        }\n-\n         match (a, b) {\n             (&ty::ReClosureBound(..), _)\n             | (_, &ty::ReClosureBound(..))"}]}