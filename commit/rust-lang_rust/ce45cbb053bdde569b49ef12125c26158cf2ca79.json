{"sha": "ce45cbb053bdde569b49ef12125c26158cf2ca79", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlNDVjYmIwNTNiZGRlNTY5YjQ5ZWYxMjEyNWMyNjE1OGNmMmNhNzk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-10T15:20:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-10T15:20:17Z"}, "message": "Auto merge of #52191 - SimonSapin:alloc_error_handler, r=alexcrichton\n\nImplement #[alloc_error_handler]\n\nThis to-be-stable attribute is equivalent to `#[lang = \"oom\"]`. It is required when using the `alloc` crate without the `std` crate. It is called by `handle_alloc_error`, which is in turned called by \"infallible\" allocations APIs such as `Vec::push`.", "tree": {"sha": "90e2ca421a883b698803526f7e2c1a20a018e3b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90e2ca421a883b698803526f7e2c1a20a018e3b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce45cbb053bdde569b49ef12125c26158cf2ca79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce45cbb053bdde569b49ef12125c26158cf2ca79", "html_url": "https://github.com/rust-lang/rust/commit/ce45cbb053bdde569b49ef12125c26158cf2ca79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce45cbb053bdde569b49ef12125c26158cf2ca79/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc491526dd0b5d8c8c25faa6400599e08ede1907", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc491526dd0b5d8c8c25faa6400599e08ede1907", "html_url": "https://github.com/rust-lang/rust/commit/fc491526dd0b5d8c8c25faa6400599e08ede1907"}, {"sha": "239ec7d2dce9c19de16c9ee64addbb834119397c", "url": "https://api.github.com/repos/rust-lang/rust/commits/239ec7d2dce9c19de16c9ee64addbb834119397c", "html_url": "https://github.com/rust-lang/rust/commit/239ec7d2dce9c19de16c9ee64addbb834119397c"}], "stats": {"total": 261, "additions": 253, "deletions": 8}, "files": [{"sha": "b6ac248b79f8666331ab77c82d7aa9d311b188ff", "filename": "src/libcore/alloc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Flibcore%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Flibcore%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc.rs?ref=ce45cbb053bdde569b49ef12125c26158cf2ca79", "patch": "@@ -48,6 +48,7 @@ fn size_align<T>() -> (usize, usize) {\n /// use specific allocators with looser requirements.)\n #[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\n #[derive(Copy, Clone, Debug, PartialEq, Eq)]\n+#[cfg_attr(not(stage0), lang = \"alloc_layout\")]\n pub struct Layout {\n     // size of the requested block of memory, measured in bytes.\n     size_: usize,"}, {"sha": "42775e3a1837ff4f63d1e62fb2185efec8afd8d8", "filename": "src/librustc/middle/dead.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Flibrustc%2Fmiddle%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Flibrustc%2Fmiddle%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdead.rs?ref=ce45cbb053bdde569b49ef12125c26158cf2ca79", "patch": "@@ -288,7 +288,17 @@ impl<'a, 'tcx> Visitor<'tcx> for MarkSymbolVisitor<'a, 'tcx> {\n fn has_allow_dead_code_or_lang_attr(tcx: TyCtxt,\n                                     id: ast::NodeId,\n                                     attrs: &[ast::Attribute]) -> bool {\n-    if attr::contains_name(attrs, \"lang\") || attr::contains_name(attrs, \"panic_implementation\") {\n+    if attr::contains_name(attrs, \"lang\") {\n+        return true;\n+    }\n+\n+    // (To be) stable attribute for #[lang = \"panic_impl\"]\n+    if attr::contains_name(attrs, \"panic_implementation\") {\n+        return true;\n+    }\n+\n+    // (To be) stable attribute for #[lang = \"oom\"]\n+    if attr::contains_name(attrs, \"alloc_error_handler\") {\n         return true;\n     }\n "}, {"sha": "6c1ef851cbeca6fe4e2abac010e76a84c9602571", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=ce45cbb053bdde569b49ef12125c26158cf2ca79", "patch": "@@ -187,6 +187,8 @@ pub fn extract(attrs: &[ast::Attribute]) -> Option<(Symbol, Span)> {\n             }\n         } else if attribute.check_name(\"panic_implementation\") {\n             return Some((Symbol::intern(\"panic_impl\"), attribute.span))\n+        } else if attribute.check_name(\"alloc_error_handler\") {\n+            return Some((Symbol::intern(\"oom\"), attribute.span))\n         }\n     }\n \n@@ -308,6 +310,7 @@ language_item_table! {\n     BoxFreeFnLangItem,               \"box_free\",                box_free_fn;\n     DropInPlaceFnLangItem,           \"drop_in_place\",           drop_in_place_fn;\n     OomLangItem,                     \"oom\",                     oom;\n+    AllocLayoutLangItem,             \"alloc_layout\",            alloc_layout;\n \n     StartFnLangItem,                 \"start\",                   start_fn;\n "}, {"sha": "d8570b43fbe276dc32d86cf4baaa582cb0915da7", "filename": "src/librustc/middle/weak_lang_items.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs?ref=ce45cbb053bdde569b49ef12125c26158cf2ca79", "patch": "@@ -115,6 +115,9 @@ fn verify<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n             if lang_items::$item == lang_items::PanicImplLangItem {\n                 tcx.sess.err(&format!(\"`#[panic_implementation]` function required, \\\n                                         but not found\"));\n+            } else if lang_items::$item == lang_items::OomLangItem {\n+                tcx.sess.err(&format!(\"`#[alloc_error_handler]` function required, \\\n+                                        but not found\"));\n             } else {\n                 tcx.sess.err(&format!(\"language item required, but not found: `{}`\",\n                                         stringify!($name)));"}, {"sha": "c7ad3398873eabc00e12491b7ad70d74bd629a54", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=ce45cbb053bdde569b49ef12125c26158cf2ca79", "patch": "@@ -1182,7 +1182,54 @@ fn check_fn<'a, 'gcx, 'tcx>(inherited: &'a Inherited<'a, 'gcx, 'tcx>,\n                 fcx.tcx.sess.err(\"language item required, but not found: `panic_info`\");\n             }\n         }\n+    }\n+\n+    // Check that a function marked as `#[alloc_error_handler]` has signature `fn(Layout) -> !`\n+    if let Some(alloc_error_handler_did) = fcx.tcx.lang_items().oom() {\n+        if alloc_error_handler_did == fcx.tcx.hir.local_def_id(fn_id) {\n+            if let Some(alloc_layout_did) = fcx.tcx.lang_items().alloc_layout() {\n+                if declared_ret_ty.sty != ty::TyNever {\n+                    fcx.tcx.sess.span_err(\n+                        decl.output.span(),\n+                        \"return type should be `!`\",\n+                    );\n+                }\n+\n+                let inputs = fn_sig.inputs();\n+                let span = fcx.tcx.hir.span(fn_id);\n+                if inputs.len() == 1 {\n+                    let arg_is_alloc_layout = match inputs[0].sty {\n+                        ty::TyAdt(ref adt, _) => {\n+                            adt.did == alloc_layout_did\n+                        },\n+                        _ => false,\n+                    };\n+\n+                    if !arg_is_alloc_layout {\n+                        fcx.tcx.sess.span_err(\n+                            decl.inputs[0].span,\n+                            \"argument should be `Layout`\",\n+                        );\n+                    }\n \n+                    if let Node::NodeItem(item) = fcx.tcx.hir.get(fn_id) {\n+                        if let Item_::ItemFn(_, _, ref generics, _) = item.node {\n+                            if !generics.params.is_empty() {\n+                                fcx.tcx.sess.span_err(\n+                                    span,\n+                                    \"`#[alloc_error_handler]` function should have no type \\\n+                                     parameters\",\n+                                );\n+                            }\n+                        }\n+                    }\n+                } else {\n+                    fcx.tcx.sess.span_err(span, \"function should have one argument\");\n+                }\n+            } else {\n+                fcx.tcx.sess.err(\"language item required, but not found: `alloc_layout`\");\n+            }\n+        }\n     }\n \n     (fcx, gen_ty)"}, {"sha": "8db365cd21d67938be2bbca12cfee14a3fded4cd", "filename": "src/libstd/alloc.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Flibstd%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Flibstd%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Falloc.rs?ref=ce45cbb053bdde569b49ef12125c26158cf2ca79", "patch": "@@ -125,9 +125,10 @@ fn default_alloc_error_hook(layout: Layout) {\n \n #[cfg(not(test))]\n #[doc(hidden)]\n-#[lang = \"oom\"]\n+#[cfg_attr(stage0, lang = \"oom\")]\n+#[cfg_attr(not(stage0), alloc_error_handler)]\n #[unstable(feature = \"alloc_internals\", issue = \"0\")]\n-pub extern fn rust_oom(layout: Layout) -> ! {\n+pub fn rust_oom(layout: Layout) -> ! {\n     let hook = HOOK.load(Ordering::SeqCst);\n     let hook: fn(Layout) = if hook.is_null() {\n         default_alloc_error_hook"}, {"sha": "fec14b8d67d359c0322a449439e000878fe99d60", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=ce45cbb053bdde569b49ef12125c26158cf2ca79", "patch": "@@ -233,8 +233,9 @@\n // std is implemented with unstable features, many of which are internal\n // compiler details that will never be stable\n #![feature(alloc)]\n-#![feature(allocator_api)]\n+#![feature(alloc_error_handler)]\n #![feature(alloc_system)]\n+#![feature(allocator_api)]\n #![feature(allocator_internals)]\n #![feature(allow_internal_unsafe)]\n #![feature(allow_internal_unstable)]"}, {"sha": "e70d93ae85a1d1dca16bd4708a03cb80a1b44964", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=ce45cbb053bdde569b49ef12125c26158cf2ca79", "patch": "@@ -481,6 +481,9 @@ declare_features! (\n \n     // Allows async and await syntax\n     (active, async_await, \"1.28.0\", Some(50547), None),\n+\n+    // #[alloc_error_handler]\n+    (active, alloc_error_handler, \"1.29.0\", Some(51540), None),\n );\n \n declare_features! (\n@@ -1083,6 +1086,11 @@ pub const BUILTIN_ATTRIBUTES: &'static [(&'static str, AttributeType, AttributeG\n                            \"#[panic_implementation] is an unstable feature\",\n                            cfg_fn!(panic_implementation))),\n \n+    (\"alloc_error_handler\", Normal, Gated(Stability::Unstable,\n+                           \"alloc_error_handler\",\n+                           \"#[alloc_error_handler] is an unstable feature\",\n+                           cfg_fn!(alloc_error_handler))),\n+\n     // Crate level attributes\n     (\"crate_name\", CrateLevel, Ungated),\n     (\"crate_type\", CrateLevel, Ungated),"}, {"sha": "e398f16a065bd186c4b46a2ac3c5777d14e05114", "filename": "src/test/compile-fail/alloc-error-handler-bad-signature-1.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Ftest%2Fcompile-fail%2Falloc-error-handler-bad-signature-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Ftest%2Fcompile-fail%2Falloc-error-handler-bad-signature-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Falloc-error-handler-bad-signature-1.rs?ref=ce45cbb053bdde569b49ef12125c26158cf2ca79", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:-C panic=abort\n+\n+#![feature(alloc_error_handler, panic_implementation)]\n+#![no_std]\n+#![no_main]\n+\n+use core::alloc::Layout;\n+\n+#[alloc_error_handler]\n+fn oom(\n+    info: &Layout, //~ ERROR argument should be `Layout`\n+) -> () //~ ERROR return type should be `!`\n+{\n+    loop {}\n+}\n+\n+#[panic_implementation]\n+fn panic(_: &core::panic::PanicInfo) -> ! { loop {} }"}, {"sha": "4fee9d27e51759275aea4dcbdd5cd77216413fae", "filename": "src/test/compile-fail/alloc-error-handler-bad-signature-2.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Ftest%2Fcompile-fail%2Falloc-error-handler-bad-signature-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Ftest%2Fcompile-fail%2Falloc-error-handler-bad-signature-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Falloc-error-handler-bad-signature-2.rs?ref=ce45cbb053bdde569b49ef12125c26158cf2ca79", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:-C panic=abort\n+\n+#![feature(alloc_error_handler, panic_implementation)]\n+#![no_std]\n+#![no_main]\n+\n+struct Layout;\n+\n+#[alloc_error_handler]\n+fn oom(\n+    info: Layout, //~ ERROR argument should be `Layout`\n+) { //~ ERROR return type should be `!`\n+    loop {}\n+}\n+\n+#[panic_implementation]\n+fn panic(_: &core::panic::PanicInfo) -> ! { loop {} }"}, {"sha": "828a78055d5f2ca21edae22a5db2c7d1117d0bc0", "filename": "src/test/compile-fail/alloc-error-handler-bad-signature-3.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Ftest%2Fcompile-fail%2Falloc-error-handler-bad-signature-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Ftest%2Fcompile-fail%2Falloc-error-handler-bad-signature-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Falloc-error-handler-bad-signature-3.rs?ref=ce45cbb053bdde569b49ef12125c26158cf2ca79", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:-C panic=abort\n+\n+#![feature(alloc_error_handler, panic_implementation)]\n+#![no_std]\n+#![no_main]\n+\n+struct Layout;\n+\n+#[alloc_error_handler]\n+fn oom() -> ! { //~ ERROR function should have one argument\n+    loop {}\n+}\n+\n+#[panic_implementation]\n+fn panic(_: &core::panic::PanicInfo) -> ! { loop {} }"}, {"sha": "66691af2d0325209013104f9a04c4efe61f54bfe", "filename": "src/test/compile-fail/feature-gate-alloc-error-handler.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Ftest%2Fcompile-fail%2Ffeature-gate-alloc-error-handler.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Ftest%2Fcompile-fail%2Ffeature-gate-alloc-error-handler.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-alloc-error-handler.rs?ref=ce45cbb053bdde569b49ef12125c26158cf2ca79", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:-C panic=abort\n+\n+#![no_std]\n+#![no_main]\n+\n+use core::alloc::Layout;\n+\n+#[alloc_error_handler] //~ ERROR #[alloc_error_handler] is an unstable feature (see issue #51540)\n+fn oom(info: Layout) -> ! {\n+    loop {}\n+}"}, {"sha": "453602b800b5e546d7cecb9d7e4069885a04a8dd", "filename": "src/test/run-make-fulldeps/issue-51671/app.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Ftest%2Frun-make-fulldeps%2Fissue-51671%2Fapp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Ftest%2Frun-make-fulldeps%2Fissue-51671%2Fapp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fissue-51671%2Fapp.rs?ref=ce45cbb053bdde569b49ef12125c26158cf2ca79", "patch": "@@ -14,6 +14,7 @@\n #![no_main]\n #![no_std]\n \n+use core::alloc::Layout;\n use core::panic::PanicInfo;\n \n #[panic_implementation]\n@@ -25,4 +26,6 @@ fn panic(_: &PanicInfo) -> ! {\n fn eh() {}\n \n #[lang = \"oom\"]\n-fn oom() {}\n+fn oom(_: Layout) -> ! {\n+    loop {}\n+}"}, {"sha": "5f6b60a5a8d99458fe1c109601aa9026f62fa6dc", "filename": "src/test/run-pass/default-alloc-error-hook.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Ftest%2Frun-pass%2Fdefault-alloc-error-hook.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Ftest%2Frun-pass%2Fdefault-alloc-error-hook.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdefault-alloc-error-hook.rs?ref=ce45cbb053bdde569b49ef12125c26158cf2ca79", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-cloudabi no processes\n+// ignore-emscripten no processes\n+\n+use std::alloc::{Layout, handle_alloc_error};\n+use std::env;\n+use std::process::Command;\n+use std::str;\n+\n+fn main() {\n+    if env::args().len() > 1 {\n+        handle_alloc_error(Layout::new::<[u8; 42]>())\n+    }\n+\n+    let me = env::current_exe().unwrap();\n+    let output = Command::new(&me).arg(\"next\").output().unwrap();\n+    assert!(!output.status.success(), \"{:?} is a success\", output.status);\n+    assert_eq!(str::from_utf8(&output.stderr).unwrap(), \"memory allocation of 42 bytes failed\");\n+}"}, {"sha": "3842d48f8fab110a759979429c8963adbf8e3435", "filename": "src/test/ui/missing-alloc_error_handler.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Ftest%2Fui%2Fmissing-alloc_error_handler.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Ftest%2Fui%2Fmissing-alloc_error_handler.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing-alloc_error_handler.rs?ref=ce45cbb053bdde569b49ef12125c26158cf2ca79", "patch": "@@ -0,0 +1,33 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -C panic=abort\n+// no-prefer-dynamic\n+\n+#![no_std]\n+#![crate_type = \"staticlib\"]\n+#![feature(panic_implementation, alloc_error_handler, alloc)]\n+\n+#[panic_implementation]\n+fn panic(_: &core::panic::PanicInfo) -> ! {\n+    loop {}\n+}\n+\n+extern crate alloc;\n+\n+#[global_allocator]\n+static A: MyAlloc = MyAlloc;\n+\n+struct MyAlloc;\n+\n+unsafe impl core::alloc::GlobalAlloc for MyAlloc {\n+    unsafe fn alloc(&self, _: core::alloc::Layout) -> *mut u8 { 0 as _ }\n+    unsafe fn dealloc(&self, _: *mut u8, _: core::alloc::Layout) {}\n+}"}, {"sha": "5489b2cbbfad8317303f18cff246d6b8490e6fe4", "filename": "src/test/ui/missing-alloc_error_handler.stderr", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Ftest%2Fui%2Fmissing-alloc_error_handler.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Ftest%2Fui%2Fmissing-alloc_error_handler.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing-alloc_error_handler.stderr?ref=ce45cbb053bdde569b49ef12125c26158cf2ca79", "patch": "@@ -0,0 +1,4 @@\n+error: `#[alloc_error_handler]` function required, but not found\n+\n+error: aborting due to previous error\n+"}, {"sha": "c949dcb635aad5ccbc0bf998cb06531515e109b1", "filename": "src/test/ui/missing-allocator.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Ftest%2Fui%2Fmissing-allocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce45cbb053bdde569b49ef12125c26158cf2ca79/src%2Ftest%2Fui%2Fmissing-allocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing-allocator.rs?ref=ce45cbb053bdde569b49ef12125c26158cf2ca79", "patch": "@@ -13,14 +13,16 @@\n \n #![no_std]\n #![crate_type = \"staticlib\"]\n-#![feature(panic_implementation, lang_items, alloc)]\n+#![feature(panic_implementation, alloc_error_handler, alloc)]\n \n #[panic_implementation]\n fn panic(_: &core::panic::PanicInfo) -> ! {\n     loop {}\n }\n \n-#[lang = \"oom\"]\n-fn oom() {}\n+#[alloc_error_handler]\n+fn oom(_: core::alloc::Layout) -> ! {\n+    loop {}\n+}\n \n extern crate alloc;"}]}