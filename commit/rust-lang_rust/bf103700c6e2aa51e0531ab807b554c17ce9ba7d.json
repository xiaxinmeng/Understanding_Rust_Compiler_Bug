{"sha": "bf103700c6e2aa51e0531ab807b554c17ce9ba7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMTAzNzAwYzZlMmFhNTFlMDUzMWFiODA3YjU1NGMxN2NlOWJhN2Q=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-08-03T18:22:22Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-08-09T16:00:25Z"}, "message": "Move SVH structure to data structures", "tree": {"sha": "f124d81af68202044d3b30ce04258a0399c035da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f124d81af68202044d3b30ce04258a0399c035da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf103700c6e2aa51e0531ab807b554c17ce9ba7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf103700c6e2aa51e0531ab807b554c17ce9ba7d", "html_url": "https://github.com/rust-lang/rust/commit/bf103700c6e2aa51e0531ab807b554c17ce9ba7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b73535f1e9c46a698527fab51b1cc9fad3f53412", "url": "https://api.github.com/repos/rust-lang/rust/commits/b73535f1e9c46a698527fab51b1cc9fad3f53412", "html_url": "https://github.com/rust-lang/rust/commit/b73535f1e9c46a698527fab51b1cc9fad3f53412"}], "stats": {"total": 47, "additions": 31, "deletions": 16}, "files": [{"sha": "3934475bea90c88c8d65212f9a607a1fe6022b09", "filename": "src/librustc/hir/map/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs?ref=bf103700c6e2aa51e0531ab807b554c17ce9ba7d", "patch": "@@ -12,7 +12,7 @@ use super::*;\n use dep_graph::{DepGraph, DepKind, DepNodeIndex};\n use hir::def_id::{LOCAL_CRATE, CrateNum};\n use hir::intravisit::{Visitor, NestedVisitorMap};\n-use hir::svh::Svh;\n+use rustc_data_structures::svh::Svh;\n use ich::Fingerprint;\n use middle::cstore::CrateStore;\n use session::CrateDisambiguator;"}, {"sha": "81897322b6f6be6bb01c8233eaa58b3fa564dc0b", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=bf103700c6e2aa51e0531ab807b554c17ce9ba7d", "patch": "@@ -22,14 +22,14 @@ use hir::def_id::{CRATE_DEF_INDEX, DefId, LocalDefId, DefIndexAddressSpace};\n use middle::cstore::CrateStore;\n \n use rustc_target::spec::abi::Abi;\n+use rustc_data_structures::svh::Svh;\n use syntax::ast::{self, Name, NodeId, CRATE_NODE_ID};\n use syntax::codemap::Spanned;\n use syntax::ext::base::MacroKind;\n use syntax_pos::{Span, DUMMY_SP};\n \n use hir::*;\n use hir::print::Nested;\n-use hir::svh::Svh;\n use util::nodemap::FxHashMap;\n \n use std::io;"}, {"sha": "521499e4766892f6207664365a0093a47f0e0d7b", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=bf103700c6e2aa51e0531ab807b554c17ce9ba7d", "patch": "@@ -70,7 +70,6 @@ pub mod lowering;\n pub mod map;\n pub mod pat_util;\n pub mod print;\n-pub mod svh;\n \n /// A HirId uniquely identifies a node in the HIR of the current crate. It is\n /// composed of the `owner`, which is the DefIndex of the directly enclosing"}, {"sha": "b91a9644b211a3a73d3bc75c917c3c9978b78443", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=bf103700c6e2aa51e0531ab807b554c17ce9ba7d", "patch": "@@ -25,7 +25,7 @@\n use hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use hir::map as hir_map;\n use hir::map::definitions::{DefKey, DefPathTable};\n-use hir::svh::Svh;\n+use rustc_data_structures::svh::Svh;\n use ty::{self, TyCtxt};\n use session::{Session, CrateDisambiguator};\n use session::search_paths::PathKind;"}, {"sha": "6c5713d233a8fc295134e171b5df6bdbd00728b3", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=bf103700c6e2aa51e0531ab807b554c17ce9ba7d", "patch": "@@ -18,7 +18,7 @@ use hir::{map as hir_map, FreevarMap, TraitMap};\n use hir::def::{Def, CtorKind, ExportMap};\n use hir::def_id::{CrateNum, DefId, LocalDefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use hir::map::DefPathData;\n-use hir::svh::Svh;\n+use rustc_data_structures::svh::Svh;\n use ich::Fingerprint;\n use ich::StableHashingContext;\n use infer::canonical::Canonical;"}, {"sha": "ef22ebef9d7d4867fd5c79443f48d0f973854d8f", "filename": "src/librustc/ty/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs?ref=bf103700c6e2aa51e0531ab807b554c17ce9ba7d", "patch": "@@ -13,7 +13,7 @@ use errors::DiagnosticBuilder;\n use hir::def_id::{CrateNum, DefId, DefIndex};\n use hir::def::{Def, Export};\n use hir::{self, TraitCandidate, ItemLocalId, CodegenFnAttrs};\n-use hir::svh::Svh;\n+use rustc_data_structures::svh::Svh;\n use infer::canonical::{self, Canonical};\n use lint;\n use middle::borrowck::BorrowCheckResult;"}, {"sha": "a0d88ccae0f135d1ec0263b62b534bbbb2fa7031", "filename": "src/librustc_codegen_utils/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc_codegen_utils%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc_codegen_utils%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flink.rs?ref=bf103700c6e2aa51e0531ab807b554c17ce9ba7d", "patch": "@@ -11,7 +11,7 @@\n use rustc::session::config::{self, OutputFilenames, Input, OutputType};\n use rustc::session::Session;\n use rustc::middle::cstore::LinkMeta;\n-use rustc::hir::svh::Svh;\n+use rustc_data_structures::svh::Svh;\n use std::path::{Path, PathBuf};\n use syntax::{ast, attr};\n use syntax_pos::Span;"}, {"sha": "b8c21afc386e9aaf0917b8fb1babb9ca93a0e0f6", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=bf103700c6e2aa51e0531ab807b554c17ce9ba7d", "patch": "@@ -46,13 +46,15 @@ extern crate stable_deref_trait;\n extern crate rustc_rayon as rayon;\n extern crate rustc_rayon_core as rayon_core;\n extern crate rustc_hash;\n+extern crate serialize;\n \n // See librustc_cratesio_shim/Cargo.toml for a comment explaining this.\n #[allow(unused_extern_crates)]\n extern crate rustc_cratesio_shim;\n \n pub use rustc_serialize::hex::ToHex;\n \n+pub mod svh;\n pub mod accumulate_vec;\n pub mod array_vec;\n pub mod base_n;"}, {"sha": "94f132562b5ea460cadae948fb116de58e46e0d6", "filename": "src/librustc_data_structures/svh.rs", "status": "renamed", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc_data_structures%2Fsvh.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc_data_structures%2Fsvh.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fsvh.rs?ref=bf103700c6e2aa51e0531ab807b554c17ce9ba7d", "patch": "@@ -19,6 +19,8 @@ use std::fmt;\n use std::hash::{Hash, Hasher};\n use serialize::{Encodable, Decodable, Encoder, Decoder};\n \n+use stable_hasher;\n+\n #[derive(Copy, Clone, PartialEq, Eq, Debug)]\n pub struct Svh {\n     hash: u64,\n@@ -67,6 +69,16 @@ impl Decodable for Svh {\n     }\n }\n \n-impl_stable_hash_for!(struct Svh {\n-    hash\n-});\n+impl<T> stable_hasher::HashStable<T> for Svh {\n+    #[inline]\n+    fn hash_stable<W: stable_hasher::StableHasherResult>(\n+        &self,\n+        ctx: &mut T,\n+        hasher: &mut stable_hasher::StableHasher<W>\n+    ) {\n+        let Svh {\n+            hash\n+        } = *self;\n+        hash.hash_stable(ctx, hasher);\n+    }\n+}", "previous_filename": "src/librustc/hir/svh.rs"}, {"sha": "65bc7f3f8565f41df01c6dc7a6e9a9db56e9ce8a", "filename": "src/librustc_incremental/persist/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc_incremental%2Fpersist%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc_incremental%2Fpersist%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Ffs.rs?ref=bf103700c6e2aa51e0531ab807b554c17ce9ba7d", "patch": "@@ -114,11 +114,11 @@\n //! unsupported file system and emit a warning in that case. This is not yet\n //! implemented.\n \n-use rustc::hir::svh::Svh;\n use rustc::session::{Session, CrateDisambiguator};\n use rustc::util::fs as fs_util;\n use rustc_data_structures::{flock, base_n};\n use rustc_data_structures::fx::{FxHashSet, FxHashMap};\n+use rustc_data_structures::svh::Svh;\n \n use std::fs as std_fs;\n use std::io;"}, {"sha": "d3b70933e2cd416a25d816865d5816805c3e9ed9", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=bf103700c6e2aa51e0531ab807b554c17ce9ba7d", "patch": "@@ -16,7 +16,7 @@ use schema::CrateRoot;\n use rustc_data_structures::sync::{Lrc, RwLock, Lock};\n \n use rustc::hir::def_id::{CrateNum, CRATE_DEF_INDEX};\n-use rustc::hir::svh::Svh;\n+use rustc_data_structures::svh::Svh;\n use rustc::middle::allocator::AllocatorKind;\n use rustc::middle::cstore::DepKind;\n use rustc::mir::interpret::AllocDecodingState;"}, {"sha": "4926da3b880e768276df764e7390d9c8a371bd45", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=bf103700c6e2aa51e0531ab807b554c17ce9ba7d", "patch": "@@ -30,6 +30,7 @@ use rustc::hir::map::{DefKey, DefPath, DefPathHash};\n use rustc::hir::map::blocks::FnLikeNode;\n use rustc::hir::map::definitions::DefPathTable;\n use rustc::util::nodemap::DefIdMap;\n+use rustc_data_structures::svh::Svh;\n \n use std::any::Any;\n use rustc_data_structures::sync::Lrc;\n@@ -515,7 +516,7 @@ impl CrateStore for cstore::CStore {\n         self.get_crate_data(cnum).root.disambiguator\n     }\n \n-    fn crate_hash_untracked(&self, cnum: CrateNum) -> hir::svh::Svh\n+    fn crate_hash_untracked(&self, cnum: CrateNum) -> Svh\n     {\n         self.get_crate_data(cnum).root.hash\n     }"}, {"sha": "52777e5f6b90df7452eabe701565dcdcae660e83", "filename": "src/librustc_metadata/locator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc_metadata%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc_metadata%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flocator.rs?ref=bf103700c6e2aa51e0531ab807b554c17ce9ba7d", "patch": "@@ -226,7 +226,7 @@ use cstore::{MetadataRef, MetadataBlob};\n use creader::Library;\n use schema::{METADATA_HEADER, rustc_version};\n \n-use rustc::hir::svh::Svh;\n+use rustc_data_structures::svh::Svh;\n use rustc::middle::cstore::MetadataLoader;\n use rustc::session::{config, Session};\n use rustc::session::filesearch::{FileSearch, FileMatches, FileDoesntMatch};"}, {"sha": "781652e1985d6fe6304815861c775932adb0a8d2", "filename": "src/librustc_metadata/schema.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc_metadata%2Fschema.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf103700c6e2aa51e0531ab807b554c17ce9ba7d/src%2Flibrustc_metadata%2Fschema.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fschema.rs?ref=bf103700c6e2aa51e0531ab807b554c17ce9ba7d", "patch": "@@ -20,6 +20,7 @@ use rustc::mir;\n use rustc::session::CrateDisambiguator;\n use rustc::ty::{self, Ty, ReprOptions};\n use rustc_target::spec::{PanicStrategy, TargetTriple};\n+use rustc_data_structures::svh::Svh;\n \n use rustc_serialize as serialize;\n use syntax::{ast, attr};\n@@ -187,7 +188,7 @@ pub struct CrateRoot {\n     pub name: Symbol,\n     pub triple: TargetTriple,\n     pub extra_filename: String,\n-    pub hash: hir::svh::Svh,\n+    pub hash: Svh,\n     pub disambiguator: CrateDisambiguator,\n     pub panic_strategy: PanicStrategy,\n     pub edition: Edition,\n@@ -223,7 +224,7 @@ pub struct CrateRoot {\n #[derive(RustcEncodable, RustcDecodable)]\n pub struct CrateDep {\n     pub name: ast::Name,\n-    pub hash: hir::svh::Svh,\n+    pub hash: Svh,\n     pub kind: DepKind,\n     pub extra_filename: String,\n }"}]}