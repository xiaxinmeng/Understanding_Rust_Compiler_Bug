{"sha": "72ca844ca7d9debbb849eb3aa16c5c4df14d1293", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyY2E4NDRjYTdkOWRlYmJiODQ5ZWIzYWExNmM1YzRkZjE0ZDEyOTM=", "commit": {"author": {"name": "Taylor Cramer", "email": "cramertj@google.com", "date": "2019-06-26T17:23:27Z"}, "committer": {"name": "Taylor Cramer", "email": "cramertj@google.com", "date": "2019-06-26T17:40:06Z"}, "message": "Add regression test for MIR drop generation in async loops\n\nFixes #61986.", "tree": {"sha": "4ede211f6c0fcced808a590de1d9bd29728303d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ede211f6c0fcced808a590de1d9bd29728303d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72ca844ca7d9debbb849eb3aa16c5c4df14d1293", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72ca844ca7d9debbb849eb3aa16c5c4df14d1293", "html_url": "https://github.com/rust-lang/rust/commit/72ca844ca7d9debbb849eb3aa16c5c4df14d1293", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72ca844ca7d9debbb849eb3aa16c5c4df14d1293/comments", "author": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3e2cec29225a46298ec4ebf082f34ebd7cfeecf", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3e2cec29225a46298ec4ebf082f34ebd7cfeecf", "html_url": "https://github.com/rust-lang/rust/commit/d3e2cec29225a46298ec4ebf082f34ebd7cfeecf"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "da8b22bc104bf0ee4f582f25e48febe1d5618908", "filename": "src/test/ui/async-await/issues/issue-61986.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/72ca844ca7d9debbb849eb3aa16c5c4df14d1293/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-61986.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72ca844ca7d9debbb849eb3aa16c5c4df14d1293/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-61986.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-61986.rs?ref=72ca844ca7d9debbb849eb3aa16c5c4df14d1293", "patch": "@@ -0,0 +1,21 @@\n+// compile-pass\n+// edition:2018\n+//\n+// Tests that we properly handle StorageDead/StorageLives for temporaries\n+// created in async loop bodies.\n+\n+#![feature(async_await)]\n+\n+async fn bar() -> Option<()> {\n+    Some(())\n+}\n+\n+async fn listen() {\n+    while let Some(_) = bar().await {\n+        String::new();\n+    }\n+}\n+\n+fn main() {\n+    listen();\n+}"}]}