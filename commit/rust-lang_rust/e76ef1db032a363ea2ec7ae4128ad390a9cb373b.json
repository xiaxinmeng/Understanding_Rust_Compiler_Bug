{"sha": "e76ef1db032a363ea2ec7ae4128ad390a9cb373b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3NmVmMWRiMDMyYTM2M2VhMmVjN2FlNDEyOGFkMzkwYTljYjM3M2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-07T11:00:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-07T11:00:09Z"}, "message": "Auto merge of #4339 - phansch:rustfix_needless_bool, r=flip1995\n\nAdd run-rustfix for needless_bool lint\n\nThis splits up the needless_bool tests into `fixable.rs` and\n`simple.rs`. `simple.rs` contains the code that triggers the lint\ndiagnostic without a suggestion.\n\nchangelog: none\n\ncc #3630", "tree": {"sha": "6a0948601ae331ba8cbd707aa53d75580f56dfeb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a0948601ae331ba8cbd707aa53d75580f56dfeb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e76ef1db032a363ea2ec7ae4128ad390a9cb373b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e76ef1db032a363ea2ec7ae4128ad390a9cb373b", "html_url": "https://github.com/rust-lang/rust/commit/e76ef1db032a363ea2ec7ae4128ad390a9cb373b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e76ef1db032a363ea2ec7ae4128ad390a9cb373b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "286d528a453e0a5abb28d1ff26e91e92b139afef", "url": "https://api.github.com/repos/rust-lang/rust/commits/286d528a453e0a5abb28d1ff26e91e92b139afef", "html_url": "https://github.com/rust-lang/rust/commit/286d528a453e0a5abb28d1ff26e91e92b139afef"}, {"sha": "39c8f84f3b4b7006d3263817d99735ed45422ccd", "url": "https://api.github.com/repos/rust-lang/rust/commits/39c8f84f3b4b7006d3263817d99735ed45422ccd", "html_url": "https://github.com/rust-lang/rust/commit/39c8f84f3b4b7006d3263817d99735ed45422ccd"}], "stats": {"total": 321, "additions": 221, "deletions": 100}, "files": [{"sha": "567dbc54100a64943337b9c02c390dd7801f7804", "filename": "tests/ui/needless_bool/fixable.fixed", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/e76ef1db032a363ea2ec7ae4128ad390a9cb373b/tests%2Fui%2Fneedless_bool%2Ffixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e76ef1db032a363ea2ec7ae4128ad390a9cb373b/tests%2Fui%2Fneedless_bool%2Ffixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool%2Ffixable.fixed?ref=e76ef1db032a363ea2ec7ae4128ad390a9cb373b", "patch": "@@ -0,0 +1,98 @@\n+// run-rustfix\n+\n+#![warn(clippy::needless_bool)]\n+#![allow(\n+    unused,\n+    dead_code,\n+    clippy::no_effect,\n+    clippy::if_same_then_else,\n+    clippy::needless_return\n+)]\n+\n+use std::cell::Cell;\n+\n+macro_rules! bool_comparison_trigger {\n+    ($($i:ident: $def:expr, $stb:expr );+  $(;)*) => (\n+\n+        #[derive(Clone)]\n+        pub struct Trigger {\n+            $($i: (Cell<bool>, bool, bool)),+\n+        }\n+\n+        #[allow(dead_code)]\n+        impl Trigger {\n+            pub fn trigger(&self, key: &str) -> bool {\n+                $(\n+                    if let stringify!($i) = key {\n+                        return self.$i.1 && self.$i.2 == $def;\n+                    }\n+                 )+\n+                false\n+            }\n+        }\n+    )\n+}\n+\n+fn main() {\n+    let x = true;\n+    let y = false;\n+    x;\n+    !x;\n+    !(x && y);\n+    if x {\n+        x\n+    } else {\n+        false\n+    }; // would also be questionable, but we don't catch this yet\n+    bool_ret3(x);\n+    bool_ret4(x);\n+    bool_ret5(x, x);\n+    bool_ret6(x, x);\n+    needless_bool(x);\n+    needless_bool2(x);\n+    needless_bool3(x);\n+}\n+\n+fn bool_ret3(x: bool) -> bool {\n+    return x;\n+}\n+\n+fn bool_ret4(x: bool) -> bool {\n+    return !x;\n+}\n+\n+fn bool_ret5(x: bool, y: bool) -> bool {\n+    return x && y;\n+}\n+\n+fn bool_ret6(x: bool, y: bool) -> bool {\n+    return !(x && y);\n+}\n+\n+fn needless_bool(x: bool) {\n+    if x {};\n+}\n+\n+fn needless_bool2(x: bool) {\n+    if !x {};\n+}\n+\n+fn needless_bool3(x: bool) {\n+    bool_comparison_trigger! {\n+        test_one:   false, false;\n+        test_three: false, false;\n+        test_two:   true, true;\n+    }\n+\n+    if x {};\n+    if !x {};\n+}\n+\n+fn needless_bool_in_the_suggestion_wraps_the_predicate_of_if_else_statement_in_brackets() {\n+    let b = false;\n+    let returns_bool = || false;\n+\n+    let x = if b {\n+        true\n+    } else { !returns_bool() };\n+}"}, {"sha": "10126ad4dbb15aacd70053938e9e267dd42510ba", "filename": "tests/ui/needless_bool/fixable.rs", "status": "renamed", "additions": 13, "deletions": 40, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/e76ef1db032a363ea2ec7ae4128ad390a9cb373b/tests%2Fui%2Fneedless_bool%2Ffixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e76ef1db032a363ea2ec7ae4128ad390a9cb373b/tests%2Fui%2Fneedless_bool%2Ffixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool%2Ffixable.rs?ref=e76ef1db032a363ea2ec7ae4128ad390a9cb373b", "patch": "@@ -1,5 +1,13 @@\n+// run-rustfix\n+\n #![warn(clippy::needless_bool)]\n-#![allow(unused, dead_code, clippy::no_effect)]\n+#![allow(\n+    unused,\n+    dead_code,\n+    clippy::no_effect,\n+    clippy::if_same_then_else,\n+    clippy::needless_return\n+)]\n \n use std::cell::Cell;\n \n@@ -25,20 +33,9 @@ macro_rules! bool_comparison_trigger {\n     )\n }\n \n-#[allow(clippy::if_same_then_else)]\n fn main() {\n     let x = true;\n     let y = false;\n-    if x {\n-        true\n-    } else {\n-        true\n-    };\n-    if x {\n-        false\n-    } else {\n-        false\n-    };\n     if x {\n         true\n     } else {\n@@ -59,45 +56,31 @@ fn main() {\n     } else {\n         false\n     }; // would also be questionable, but we don't catch this yet\n-    bool_ret(x);\n-    bool_ret2(x);\n     bool_ret3(x);\n-    bool_ret5(x, x);\n     bool_ret4(x);\n+    bool_ret5(x, x);\n     bool_ret6(x, x);\n     needless_bool(x);\n     needless_bool2(x);\n     needless_bool3(x);\n }\n \n-#[allow(clippy::if_same_then_else, clippy::needless_return)]\n-fn bool_ret(x: bool) -> bool {\n+fn bool_ret3(x: bool) -> bool {\n     if x {\n         return true;\n     } else {\n-        return true;\n+        return false;\n     };\n }\n \n-#[allow(clippy::if_same_then_else, clippy::needless_return)]\n-fn bool_ret2(x: bool) -> bool {\n+fn bool_ret4(x: bool) -> bool {\n     if x {\n         return false;\n     } else {\n-        return false;\n-    };\n-}\n-\n-#[allow(clippy::needless_return)]\n-fn bool_ret3(x: bool) -> bool {\n-    if x {\n         return true;\n-    } else {\n-        return false;\n     };\n }\n \n-#[allow(clippy::needless_return)]\n fn bool_ret5(x: bool, y: bool) -> bool {\n     if x && y {\n         return true;\n@@ -106,16 +89,6 @@ fn bool_ret5(x: bool, y: bool) -> bool {\n     };\n }\n \n-#[allow(clippy::needless_return)]\n-fn bool_ret4(x: bool) -> bool {\n-    if x {\n-        return false;\n-    } else {\n-        return true;\n-    };\n-}\n-\n-#[allow(clippy::needless_return)]\n fn bool_ret6(x: bool, y: bool) -> bool {\n     if x && y {\n         return false;", "previous_filename": "tests/ui/needless_bool.rs"}, {"sha": "25abfb2a472b621130483c7eb5629ef7f946fab1", "filename": "tests/ui/needless_bool/fixable.stderr", "status": "renamed", "additions": 20, "deletions": 60, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/e76ef1db032a363ea2ec7ae4128ad390a9cb373b/tests%2Fui%2Fneedless_bool%2Ffixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e76ef1db032a363ea2ec7ae4128ad390a9cb373b/tests%2Fui%2Fneedless_bool%2Ffixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool%2Ffixable.stderr?ref=e76ef1db032a363ea2ec7ae4128ad390a9cb373b", "patch": "@@ -1,37 +1,17 @@\n-error: this if-then-else expression will always return true\n-  --> $DIR/needless_bool.rs:32:5\n-   |\n-LL | /     if x {\n-LL | |         true\n-LL | |     } else {\n-LL | |         true\n-LL | |     };\n-   | |_____^\n-   |\n-   = note: `-D clippy::needless-bool` implied by `-D warnings`\n-\n-error: this if-then-else expression will always return false\n-  --> $DIR/needless_bool.rs:37:5\n-   |\n-LL | /     if x {\n-LL | |         false\n-LL | |     } else {\n-LL | |         false\n-LL | |     };\n-   | |_____^\n-\n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:42:5\n+  --> $DIR/fixable.rs:39:5\n    |\n LL | /     if x {\n LL | |         true\n LL | |     } else {\n LL | |         false\n LL | |     };\n    | |_____^ help: you can reduce it to: `x`\n+   |\n+   = note: `-D clippy::needless-bool` implied by `-D warnings`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:47:5\n+  --> $DIR/fixable.rs:44:5\n    |\n LL | /     if x {\n LL | |         false\n@@ -41,7 +21,7 @@ LL | |     };\n    | |_____^ help: you can reduce it to: `!x`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:52:5\n+  --> $DIR/fixable.rs:49:5\n    |\n LL | /     if x && y {\n LL | |         false\n@@ -50,38 +30,28 @@ LL | |         true\n LL | |     };\n    | |_____^ help: you can reduce it to: `!(x && y)`\n \n-error: this if-then-else expression will always return true\n-  --> $DIR/needless_bool.rs:75:5\n+error: this if-then-else expression returns a bool literal\n+  --> $DIR/fixable.rs:69:5\n    |\n LL | /     if x {\n LL | |         return true;\n LL | |     } else {\n-LL | |         return true;\n-LL | |     };\n-   | |_____^\n-\n-error: this if-then-else expression will always return false\n-  --> $DIR/needless_bool.rs:84:5\n-   |\n-LL | /     if x {\n-LL | |         return false;\n-LL | |     } else {\n LL | |         return false;\n LL | |     };\n-   | |_____^\n+   | |_____^ help: you can reduce it to: `return x`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:93:5\n+  --> $DIR/fixable.rs:77:5\n    |\n LL | /     if x {\n-LL | |         return true;\n-LL | |     } else {\n LL | |         return false;\n+LL | |     } else {\n+LL | |         return true;\n LL | |     };\n-   | |_____^ help: you can reduce it to: `return x`\n+   | |_____^ help: you can reduce it to: `return !x`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:102:5\n+  --> $DIR/fixable.rs:85:5\n    |\n LL | /     if x && y {\n LL | |         return true;\n@@ -91,17 +61,7 @@ LL | |     };\n    | |_____^ help: you can reduce it to: `return x && y`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:111:5\n-   |\n-LL | /     if x {\n-LL | |         return false;\n-LL | |     } else {\n-LL | |         return true;\n-LL | |     };\n-   | |_____^ help: you can reduce it to: `return !x`\n-\n-error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:120:5\n+  --> $DIR/fixable.rs:93:5\n    |\n LL | /     if x && y {\n LL | |         return false;\n@@ -111,33 +71,33 @@ LL | |     };\n    | |_____^ help: you can reduce it to: `return !(x && y)`\n \n error: equality checks against true are unnecessary\n-  --> $DIR/needless_bool.rs:128:8\n+  --> $DIR/fixable.rs:101:8\n    |\n LL |     if x == true {};\n    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n    |\n    = note: `-D clippy::bool-comparison` implied by `-D warnings`\n \n error: equality checks against false can be replaced by a negation\n-  --> $DIR/needless_bool.rs:132:8\n+  --> $DIR/fixable.rs:105:8\n    |\n LL |     if x == false {};\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: equality checks against true are unnecessary\n-  --> $DIR/needless_bool.rs:142:8\n+  --> $DIR/fixable.rs:115:8\n    |\n LL |     if x == true {};\n    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: equality checks against false can be replaced by a negation\n-  --> $DIR/needless_bool.rs:143:8\n+  --> $DIR/fixable.rs:116:8\n    |\n LL |     if x == false {};\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:152:12\n+  --> $DIR/fixable.rs:125:12\n    |\n LL |       } else if returns_bool() {\n    |  ____________^\n@@ -147,5 +107,5 @@ LL | |         true\n LL | |     };\n    | |_____^ help: you can reduce it to: `{ !returns_bool() }`\n \n-error: aborting due to 16 previous errors\n+error: aborting due to 12 previous errors\n ", "previous_filename": "tests/ui/needless_bool.stderr"}, {"sha": "e9f1428fc3a43b5ff407062cbfe9639fefaef47a", "filename": "tests/ui/needless_bool/simple.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/e76ef1db032a363ea2ec7ae4128ad390a9cb373b/tests%2Fui%2Fneedless_bool%2Fsimple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e76ef1db032a363ea2ec7ae4128ad390a9cb373b/tests%2Fui%2Fneedless_bool%2Fsimple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool%2Fsimple.rs?ref=e76ef1db032a363ea2ec7ae4128ad390a9cb373b", "patch": "@@ -0,0 +1,46 @@\n+#![warn(clippy::needless_bool)]\n+#![allow(\n+    unused,\n+    dead_code,\n+    clippy::no_effect,\n+    clippy::if_same_then_else,\n+    clippy::needless_return\n+)]\n+\n+fn main() {\n+    let x = true;\n+    let y = false;\n+    if x {\n+        true\n+    } else {\n+        true\n+    };\n+    if x {\n+        false\n+    } else {\n+        false\n+    };\n+    if x {\n+        x\n+    } else {\n+        false\n+    }; // would also be questionable, but we don't catch this yet\n+    bool_ret(x);\n+    bool_ret2(x);\n+}\n+\n+fn bool_ret(x: bool) -> bool {\n+    if x {\n+        return true;\n+    } else {\n+        return true;\n+    };\n+}\n+\n+fn bool_ret2(x: bool) -> bool {\n+    if x {\n+        return false;\n+    } else {\n+        return false;\n+    };\n+}"}, {"sha": "c57a8a042fb88f95bf2374332034e9d4b5c26591", "filename": "tests/ui/needless_bool/simple.stderr", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/e76ef1db032a363ea2ec7ae4128ad390a9cb373b/tests%2Fui%2Fneedless_bool%2Fsimple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e76ef1db032a363ea2ec7ae4128ad390a9cb373b/tests%2Fui%2Fneedless_bool%2Fsimple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool%2Fsimple.stderr?ref=e76ef1db032a363ea2ec7ae4128ad390a9cb373b", "patch": "@@ -0,0 +1,44 @@\n+error: this if-then-else expression will always return true\n+  --> $DIR/simple.rs:13:5\n+   |\n+LL | /     if x {\n+LL | |         true\n+LL | |     } else {\n+LL | |         true\n+LL | |     };\n+   | |_____^\n+   |\n+   = note: `-D clippy::needless-bool` implied by `-D warnings`\n+\n+error: this if-then-else expression will always return false\n+  --> $DIR/simple.rs:18:5\n+   |\n+LL | /     if x {\n+LL | |         false\n+LL | |     } else {\n+LL | |         false\n+LL | |     };\n+   | |_____^\n+\n+error: this if-then-else expression will always return true\n+  --> $DIR/simple.rs:33:5\n+   |\n+LL | /     if x {\n+LL | |         return true;\n+LL | |     } else {\n+LL | |         return true;\n+LL | |     };\n+   | |_____^\n+\n+error: this if-then-else expression will always return false\n+  --> $DIR/simple.rs:41:5\n+   |\n+LL | /     if x {\n+LL | |         return false;\n+LL | |     } else {\n+LL | |         return false;\n+LL | |     };\n+   | |_____^\n+\n+error: aborting due to 4 previous errors\n+"}]}