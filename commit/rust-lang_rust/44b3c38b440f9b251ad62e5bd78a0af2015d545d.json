{"sha": "44b3c38b440f9b251ad62e5bd78a0af2015d545d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0YjNjMzhiNDQwZjliMjUxYWQ2MmU1YmQ3OGEwYWYyMDE1ZDU0NWQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-22T16:34:48Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-22T16:34:48Z"}, "message": "make sure raw ptrs only have to be valid as far as they are used", "tree": {"sha": "db30e28ed2c3af0097ce8454342d930d88da9e11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db30e28ed2c3af0097ce8454342d930d88da9e11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44b3c38b440f9b251ad62e5bd78a0af2015d545d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44b3c38b440f9b251ad62e5bd78a0af2015d545d", "html_url": "https://github.com/rust-lang/rust/commit/44b3c38b440f9b251ad62e5bd78a0af2015d545d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44b3c38b440f9b251ad62e5bd78a0af2015d545d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26bb4f79dc4897b3ddbae196f793c7ee3cecdeab", "url": "https://api.github.com/repos/rust-lang/rust/commits/26bb4f79dc4897b3ddbae196f793c7ee3cecdeab", "html_url": "https://github.com/rust-lang/rust/commit/26bb4f79dc4897b3ddbae196f793c7ee3cecdeab"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "8639a289363bad4560d30cf8b2c5910bfc5304f3", "filename": "tests/run-pass/deref_partially_dangling_raw.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/44b3c38b440f9b251ad62e5bd78a0af2015d545d/tests%2Frun-pass%2Fderef_partially_dangling_raw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44b3c38b440f9b251ad62e5bd78a0af2015d545d/tests%2Frun-pass%2Fderef_partially_dangling_raw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fderef_partially_dangling_raw.rs?ref=44b3c38b440f9b251ad62e5bd78a0af2015d545d", "patch": "@@ -0,0 +1,9 @@\n+// Deref a raw ptr to access a field of a large struct, where the field\n+// is allocated but not the entire struct is.\n+// For now, we want to allow this.\n+\n+fn main() {\n+    let x = (1, 1);\n+    let xptr = &x as *const _ as *const (i32, i32, i32);\n+    let _val = unsafe { (*xptr).1 };\n+}"}]}