{"sha": "34a654caa3640b606316169ebb57e4236e35f57a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0YTY1NGNhYTM2NDBiNjA2MzE2MTY5ZWJiNTdlNDIzNmUzNWY1N2E=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-08-10T10:22:28Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-08-20T09:37:32Z"}, "message": "bootstrap: Allow to invoke cargo with the Usage: rustc [OPTIONS] INPUT\n\nOptions:\n    -h, --help          Display this message\n        --cfg SPEC      Configure the compilation environment\n    -L [KIND=]PATH      Add a directory to the library search path. The\n                        optional KIND can be one of dependency, crate, native,\n                        framework or all (the default).\n    -l [KIND=]NAME      Link the generated crate(s) to the specified native\n                        library NAME. The optional KIND can be one of static,\n                        dylib, or framework. If omitted, dylib is assumed.\n        --crate-type [bin|lib|rlib|dylib|cdylib|staticlib|proc-macro]\n                        Comma separated list of types of crates for the\n                        compiler to emit\n        --crate-name NAME\n                        Specify the name of the crate being built\n        --emit [asm|llvm-bc|llvm-ir|obj|metadata|link|dep-info|mir]\n                        Comma separated list of types of output for the\n                        compiler to emit\n        --print [crate-name|file-names|sysroot|cfg|target-list|target-cpus|target-features|relocation-models|code-models|tls-models|target-spec-json|native-static-libs]\n                        Comma separated list of compiler information to print\n                        on stdout\n    -g                  Equivalent to -C debuginfo=2\n    -O                  Equivalent to -C opt-level=2\n    -o FILENAME         Write output to <filename>\n        --out-dir DIR   Write output to compiler-chosen filename in <dir>\n        --explain OPT   Provide a detailed explanation of an error message\n        --test          Build a test harness\n        --target TARGET Target triple for which the code is compiled\n    -W, --warn OPT      Set lint warnings\n    -A, --allow OPT     Set lint allowed\n    -D, --deny OPT      Set lint denied\n    -F, --forbid OPT    Set lint forbidden\n        --cap-lints LEVEL\n                        Set the most restrictive lint level. More restrictive\n                        lints are capped at this level\n    -C, --codegen OPT[=VALUE]\n                        Set a codegen option\n    -V, --version       Print version info and exit\n    -v, --verbose       Use verbose output\n\nAdditional help:\n    -C help             Print codegen options\n    -W help             Print 'lint' options and default settings\n    --help -v           Print the full set of options rustc accepts command.", "tree": {"sha": "4d12f73dbd6898024757efd0079905e1a646bd11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d12f73dbd6898024757efd0079905e1a646bd11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34a654caa3640b606316169ebb57e4236e35f57a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34a654caa3640b606316169ebb57e4236e35f57a", "html_url": "https://github.com/rust-lang/rust/commit/34a654caa3640b606316169ebb57e4236e35f57a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34a654caa3640b606316169ebb57e4236e35f57a/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80e27cdd02e86dc1a35b1695049a42a09586320d", "url": "https://api.github.com/repos/rust-lang/rust/commits/80e27cdd02e86dc1a35b1695049a42a09586320d", "html_url": "https://github.com/rust-lang/rust/commit/80e27cdd02e86dc1a35b1695049a42a09586320d"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "5c287f25e26bc6321a7411772c8905fc9436df6f", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/34a654caa3640b606316169ebb57e4236e35f57a/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34a654caa3640b606316169ebb57e4236e35f57a/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=34a654caa3640b606316169ebb57e4236e35f57a", "patch": "@@ -827,7 +827,7 @@ impl<'a> Builder<'a> {\n         if let Some(ref error_format) = self.config.rustc_error_format {\n             cargo.env(\"RUSTC_ERROR_FORMAT\", error_format);\n         }\n-        if cmd != \"build\" && cmd != \"check\" && want_rustdoc {\n+        if cmd != \"build\" && cmd != \"check\" && cmd != \"rustc\" && want_rustdoc {\n             cargo.env(\"RUSTDOC_LIBDIR\", self.sysroot_libdir(compiler, self.config.build));\n         }\n \n@@ -988,7 +988,7 @@ impl<'a> Builder<'a> {\n             }\n         }\n \n-        if cmd == \"build\"\n+        if (cmd == \"build\" || cmd == \"rustc\")\n             && mode == Mode::Std\n             && self.config.extended\n             && compiler.is_final_stage(self)"}]}