{"sha": "9cd96e4f02a32f04277cfa4c6f065295e9d1cffd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljZDk2ZTRmMDJhMzJmMDQyNzdjZmE0YzZmMDY1Mjk1ZTlkMWNmZmQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-02-13T07:53:36Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-02-15T22:18:00Z"}, "message": "mk: Base the install target on prepare.mk", "tree": {"sha": "e9efe46d0b57e2dc910486975803f410da48d00f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9efe46d0b57e2dc910486975803f410da48d00f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cd96e4f02a32f04277cfa4c6f065295e9d1cffd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cd96e4f02a32f04277cfa4c6f065295e9d1cffd", "html_url": "https://github.com/rust-lang/rust/commit/9cd96e4f02a32f04277cfa4c6f065295e9d1cffd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cd96e4f02a32f04277cfa4c6f065295e9d1cffd/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cd8bdc969b53bc34746ace674edd8d0d32c0fde", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cd8bdc969b53bc34746ace674edd8d0d32c0fde", "html_url": "https://github.com/rust-lang/rust/commit/4cd8bdc969b53bc34746ace674edd8d0d32c0fde"}], "stats": {"total": 163, "additions": 26, "deletions": 137}, "files": [{"sha": "c9a0aa22e13e97ac6e5bd49305895a5108ca0253", "filename": "mk/install.mk", "status": "modified", "additions": 24, "deletions": 137, "changes": 161, "blob_url": "https://github.com/rust-lang/rust/blob/9cd96e4f02a32f04277cfa4c6f065295e9d1cffd/mk%2Finstall.mk", "raw_url": "https://github.com/rust-lang/rust/raw/9cd96e4f02a32f04277cfa4c6f065295e9d1cffd/mk%2Finstall.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Finstall.mk?ref=9cd96e4f02a32f04277cfa4c6f065295e9d1cffd", "patch": "@@ -12,117 +12,33 @@\n # For consistency it might be desirable for stageN to be an exact\n # mirror of the installation directory structure.\n \n-# Installation macros.\n-# For INSTALL,\n-# $(1) is the source dirctory\n-# $(2) is the destination directory\n-# $(3) is the filename/libname-glob\n-ifdef VERBOSE\n- INSTALL = install -m755 $(1)/$(3) $(DESTDIR)$(2)/$(3)\n-else\n- INSTALL = $(Q)$(call E, install: $(DESTDIR)$(2)/$(3)) && install -m755 $(1)/$(3) $(DESTDIR)$(2)/$(3)\n-endif\n-\n-# For MK_INSTALL_DIR\n-# $(1) is the directory to create\n-MK_INSTALL_DIR = (umask 022 && mkdir -p $(DESTDIR)$(1))\n-\n-# For INSTALL_LIB,\n-# Target-specific $(LIB_SOURCE_DIR) is the source directory\n-# Target-specific $(LIB_DESTIN_DIR) is the destination directory\n-# $(1) is the filename/libname-glob\n-ifdef VERBOSE\n- DO_INSTALL_LIB = install -m644 `ls -drt1 $(LIB_SOURCE_DIR)/$(1) | tail -1` $(DESTDIR)$(LIB_DESTIN_DIR)/\n-else\n- DO_INSTALL_LIB = $(Q)$(call E, install_lib: $(DESTDIR)$(LIB_DESTIN_DIR)/$(1)) &&                    \\\n-\t       install -m644 `ls -drt1 $(LIB_SOURCE_DIR)/$(1) | tail -1` $(DESTDIR)$(LIB_DESTIN_DIR)/\n-endif\n-\n-# Target-specific $(LIB_SOURCE_DIR) is the source directory\n-# Target-specific $(LIB_DESTIN_DIR) is the destination directory\n-# $(1) is the filename/libname-glob\n-define INSTALL_LIB\n-  $(if $(filter-out 1,$(words $(wildcard $(LIB_SOURCE_DIR)/$(1)))),        \\\n-       $(error Aborting install because more than one library matching     \\\n-               $(1) is present in build tree $(LIB_SOURCE_DIR):            \\\n-               $(wildcard $(LIB_SOURCE_DIR)/$(1))))\n-  $(Q)LIB_NAME=\"$(notdir $(lastword $(wildcard $(LIB_SOURCE_DIR)/$(1))))\"; \\\n-  MATCHES=\"$(filter-out %$(notdir $(lastword $(wildcard $(LIB_SOURCE_DIR)/$(1)))),\\\n-                        $(wildcard $(LIB_DESTIN_DIR)/$(1)))\";              \\\n-  if [ -n \"$$MATCHES\" ]; then                                              \\\n-    echo \"warning: one or libraries matching Rust library '$(1)'\" &&       \\\n-    echo \"  (other than '$$LIB_NAME' itself) already present\"     &&       \\\n-    echo \"  at destination $(LIB_DESTIN_DIR):\"                    &&       \\\n-    echo $$MATCHES ;                                                       \\\n-  fi\n-  $(call DO_INSTALL_LIB,$(1))\n-endef\n-\n # The stage we install from\n ISTAGE = 2\n \n+install: PREPARE_HOST=$(CFG_BUILD)\n+install: PREPARE_TARGETS=$(CFG_BUILD)\n+install: PREPARE_STAGE=$(ISTAGE)\n+install: PREPARE_DIR_CMD=$(DEFAULT_PREPARE_DIR_CMD)\n+install: PREPARE_BIN_CMD=$(DEFAULT_PREPARE_BIN_CMD)\n+install: PREPARE_LIB_CMD=$(DEFAULT_PREPARE_LIB_CMD)\n+install: PREPARE_MAN_CMD=$(DEFAULT_PREPARE_MAN_CMD)\n+install: PREPARE_SOURCE_DIR=$(PREPARE_HOST)/stage$(PREPARE_STAGE)\n+install: PREPARE_SOURCE_BIN_DIR=$(PREPARE_SOURCE_DIR)/bin\n+install: PREPARE_SOURCE_LIB_DIR=$(PREPARE_SOURCE_DIR)/$(CFG_LIBDIR_RELATIVE)\n+install: PREPARE_SOURCE_MAN_DIR=$(S)/man\n+install: PREPARE_DEST_BIN_DIR=$(CFG_PREFIX)/bin\n+install: PREPARE_DEST_LIB_DIR=$(CFG_LIBDIR)\n+install: PREPARE_DEST_MAN_DIR=$(CFG_MANDIR)/man1\n+install: prepare-everything\n+\n+\n+# Uninstall code\n+\n PREFIX_ROOT = $(CFG_PREFIX)\n PREFIX_BIN = $(PREFIX_ROOT)/bin\n PREFIX_LIB = $(CFG_LIBDIR)\n \n-INSTALL_TOOLS := $(filter-out compiletest, $(TOOLS))\n-\n-define INSTALL_PREPARE_N\n-  # $(1) is the target triple\n-  # $(2) is the host triple\n-\n-# T{B,L} == Target {Bin, Lib} for stage ${ISTAGE}\n-TB$(1)$(2) = $$(TBIN$$(ISTAGE)_T_$(1)_H_$(2))\n-TL$(1)$(2) = $$(TLIB$$(ISTAGE)_T_$(1)_H_$(2))\n-\n-# PT{R,B,L} == Prefix Target {Root, Bin, Lib}\n-PTR$(1)$(2) = $$(PREFIX_LIB)/$(CFG_RUSTLIBDIR)/$(1)\n-PTB$(1)$(2) = $$(PTR$(1)$(2))/bin\n-PTL$(1)$(2) = $$(PTR$(1)$(2))/lib\n-\n-endef\n-\n-$(foreach target,$(CFG_TARGET), \\\n- $(eval $(call INSTALL_PREPARE_N,$(target),$(CFG_BUILD))))\n-\n-define INSTALL_TARGET_N\n-install-target-$(1)-host-$(2): LIB_SOURCE_DIR=$$(TL$(1)$(2))\n-install-target-$(1)-host-$(2): LIB_DESTIN_DIR=$$(PTL$(1)$(2))\n-install-target-$(1)-host-$(2):\t\t\t\t\t\t\\\n-\t    $$(TSREQ$$(ISTAGE)_T_$(1)_H_$(2))\t\t\t\t\\\n-\t    $$(SREQ$$(ISTAGE)_T_$(1)_H_$(2))\n-\t$$(Q)$$(call MK_INSTALL_DIR,$$(PTL$(1)$(2)))\n-\t$$(Q)$$(foreach crate,$$(TARGET_CRATES),\\\n-\t\t$$(call INSTALL_LIB,$$(call CFG_LIB_GLOB_$(1),$$(crate)));\\\n-\t\t$$(call INSTALL_LIB,$$(call CFG_RLIB_GLOB,$$(crate)));)\n-\t$$(Q)$$(call INSTALL_LIB,libmorestack.a)\n-\t$$(Q)$$(call INSTALL_LIB,libcompiler-rt.a)\n-\n-endef\n-\n-define INSTALL_HOST_N\n-\n-install-target-$(1)-host-$(2): LIB_SOURCE_DIR=$$(TL$(1)$(2))\n-install-target-$(1)-host-$(2): LIB_DESTIN_DIR=$$(PTL$(1)$(2))\n-install-target-$(1)-host-$(2): $$(CSREQ$$(ISTAGE)_T_$(1)_H_$(2))\n-\t$$(Q)$$(call MK_INSTALL_DIR,$$(PTL$(1)$(2)))\n-\t$$(Q)$$(foreach crate,$$(CRATES),\\\n-\t    $$(call INSTALL_LIB,$$(call CFG_LIB_GLOB_$(1),$$(crate)));)\n-\t$$(Q)$$(foreach crate,$$(TARGET_CRATES),\\\n-\t    $$(call INSTALL_LIB,$$(call CFG_RLIB_GLOB,$$(crate)));)\n-\t$$(Q)$$(call INSTALL_LIB,libmorestack.a)\n-\t$$(Q)$$(call INSTALL_LIB,libcompiler-rt.a)\n-endef\n-\n-$(foreach target,$(CFG_TARGET), \\\n- $(if $(findstring $(target), $(CFG_BUILD)), \\\n-  $(eval $(call INSTALL_HOST_N,$(target),$(CFG_BUILD))), \\\n-  $(eval $(call INSTALL_TARGET_N,$(target),$(CFG_BUILD)))))\n-\n-INSTALL_TARGET_RULES = $(foreach target,$(CFG_TARGET), \\\n- install-target-$(target)-host-$(CFG_BUILD))\n-\n-install: all install-host install-targets\n+INSTALL_TOOLS := $(PREPARE_TOOLS)\n \n # Shorthand for build/stageN/bin\n HB = $(HBIN$(ISTAGE)_H_$(CFG_BUILD))\n@@ -134,39 +50,6 @@ PHB = $(PREFIX_BIN)\n # Shorthand for the prefix bin directory\n PHL = $(PREFIX_LIB)\n \n-install-host%: LIB_SOURCE_DIR=$(HL)\n-install-host%: LIB_DESTIN_DIR=$(PHL)\n-install-host:\t\t\t\t\t\t\t\t    \\\n-\t    install-host-prep\t\t\t\t\t\t    \\\n-\t    $(foreach tool,$(INSTALL_TOOLS),install-host-tool-$(tool))\n-\n-install-host-prep: $(CSREQ$(ISTAGE)_T_$(CFG_BUILD)_H_$(CFG_BUILD))\n-\t$(Q)$(call MK_INSTALL_DIR,$(PREFIX_BIN))\n-\t$(Q)$(call MK_INSTALL_DIR,$(PREFIX_LIB))\n-\t$(Q)$(call MK_INSTALL_DIR,$(CFG_MANDIR)/man1)\n-\n-define INSTALL_HOST_TOOL\n-install-host-tool-$(1):\t\t\t\t\t\t\t    \\\n-\t    $$(foreach dep,$$(TOOL_DEPS_$(1)),install-host-lib-$$(dep))\t    \\\n-\t    $$(CSREQ$$(ISTAGE)_T_$$(CFG_BUILD)_H_$$(CFG_BUILD))\n-\t$$(Q)$$(call INSTALL,$$(HB2),$$(PHB),$(1)$$(X_$$(CFG_BUILD)))\n-\t$$(Q)$$(call INSTALL,$$(S)/man,$$(CFG_MANDIR)/man1,$(1).1)\n-endef\n-\n-$(foreach tool,$(INSTALL_TOOLS),$(eval $(call INSTALL_HOST_TOOL,$(tool))))\n-\n-define INSTALL_HOST_LIB\n-install-host-lib-$(1):\t\t\t\t\t\t\t    \\\n-\t    $$(foreach dep,$$(RUST_DEPS_$(1)),install-host-lib-$$(dep))\t    \\\n-\t    $$(CSREQ$$(ISTAGE)_T_$$(CFG_BUILD)_H_$$(CFG_BUILD))\n-\t$$(Q)$$(call INSTALL_LIB,$$(call CFG_LIB_GLOB_$$(CFG_BUILD),$(1)))\n-endef\n-\n-$(foreach lib,$(CRATES),$(eval $(call INSTALL_HOST_LIB,$(lib))))\n-\n-install-targets: $(INSTALL_TARGET_RULES)\n-\n-\n HOST_LIB_FROM_HL_GLOB = \\\n   $(patsubst $(HL)/%,$(PHL)/%,$(wildcard $(HL)/$(1)))\n \n@@ -188,6 +71,10 @@ endef\n \n $(foreach lib,$(CRATES),$(eval $(call UNINSTALL_LIB,$(lib))))\n \n+\n+# Android runtime setup\n+# FIXME: This probably belongs somewhere else\n+\n # target platform specific variables\n # for arm-linux-androidabi\n define DEF_ADB_DEVICE_STATUS"}, {"sha": "7757287cd543d2166e4041519474b35a7f1659df", "filename": "mk/prepare.mk", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cd96e4f02a32f04277cfa4c6f065295e9d1cffd/mk%2Fprepare.mk", "raw_url": "https://github.com/rust-lang/rust/raw/9cd96e4f02a32f04277cfa4c6f065295e9d1cffd/mk%2Fprepare.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fprepare.mk?ref=9cd96e4f02a32f04277cfa4c6f065295e9d1cffd", "patch": "@@ -36,6 +36,8 @@ prepare-base: PREPARE_DEST_LIB_DIR=$(PREPARE_DEST_DIR)/$(CFG_LIBDIR_RELATIVE)\n prepare-base: PREPARE_DEST_MAN_DIR=$(PREPARE_DEST_DIR)/man1\n prepare-base: prepare-host prepare-targets\n \n+prepare-everything: prepare-host prepare-targets\n+\n DEFAULT_PREPARE_DIR_CMD = umask 022 && mkdir -p\n DEFAULT_PREPARE_BIN_CMD = install -m755\n DEFAULT_PREPARE_LIB_CMD = install -m644"}]}