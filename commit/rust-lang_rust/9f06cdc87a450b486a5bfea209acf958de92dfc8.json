{"sha": "9f06cdc87a450b486a5bfea209acf958de92dfc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmMDZjZGM4N2E0NTBiNDg2YTViZmVhMjA5YWNmOTU4ZGU5MmRmYzg=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-22T16:19:19Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-22T16:19:19Z"}, "message": "Explain Ref problems", "tree": {"sha": "ce2ab37c142b60901ca1f773d5a9e862ccbc4c7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce2ab37c142b60901ca1f773d5a9e862ccbc4c7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f06cdc87a450b486a5bfea209acf958de92dfc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f06cdc87a450b486a5bfea209acf958de92dfc8", "html_url": "https://github.com/rust-lang/rust/commit/9f06cdc87a450b486a5bfea209acf958de92dfc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f06cdc87a450b486a5bfea209acf958de92dfc8/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7269a884c91d539c6e6ec275a6d9ef6d6bd5f142", "url": "https://api.github.com/repos/rust-lang/rust/commits/7269a884c91d539c6e6ec275a6d9ef6d6bd5f142", "html_url": "https://github.com/rust-lang/rust/commit/7269a884c91d539c6e6ec275a6d9ef6d6bd5f142"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "ec1a5fdb4288f6166722f65031cd79b7e6eb699f", "filename": "src/mono_hash_map.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9f06cdc87a450b486a5bfea209acf958de92dfc8/src%2Fmono_hash_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f06cdc87a450b486a5bfea209acf958de92dfc8/src%2Fmono_hash_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmono_hash_map.rs?ref=9f06cdc87a450b486a5bfea209acf958de92dfc8", "patch": "@@ -20,7 +20,12 @@ pub struct MonoHashMap<K: Hash + Eq, V>(RefCell<FxHashMap<K, Box<V>>>);\n impl<K: Hash + Eq, V> MonoHashMap<K, V> {\n     /// This function exists for priroda to be able to iterate over all evaluator memory\n     ///\n-    /// The memory of constants does not show up in this list.\n+    /// The function is somewhat roundabout with the closure argument because internally the\n+    /// `MonoHashMap` uses a `RefCell`. When iterating over the `HashMap` inside the `RefCell`,\n+    /// we need to keep a borrow to the `HashMap` inside the iterator. The borrow is only alive\n+    /// as long as the `Ref` returned by `RefCell::borrow()` is alive. So we can't return the\n+    /// iterator, as that would drop the `Ref`. We can't return both, as it's not possible in Rust\n+    /// to have a struct/tuple with a field that refers to another field.\n     pub fn iter<T>(&self, f: impl FnOnce(&mut dyn Iterator<Item=(&K, &V)>) -> T) -> T {\n         f(&mut self.0.borrow().iter().map(|(k, v)| (k, &**v)))\n     }"}]}