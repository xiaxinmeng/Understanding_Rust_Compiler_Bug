{"sha": "713ca7d5402fb33ea1ac4f34a50618d60156d1d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxM2NhN2Q1NDAyZmIzM2VhMWFjNGYzNGE1MDYxOGQ2MDE1NmQxZDM=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-22T22:11:36Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-22T22:11:36Z"}, "message": "std: mark two helper functions #[inline].\n\n`str::utf8_char_width` and `char::from_u32` are tiny, which means it's a\nbig performance hit to call them in a tight loop outside libstd.", "tree": {"sha": "d7a4f340fa451b07a6f80e457341e11c404fa049", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7a4f340fa451b07a6f80e457341e11c404fa049"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/713ca7d5402fb33ea1ac4f34a50618d60156d1d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/713ca7d5402fb33ea1ac4f34a50618d60156d1d3", "html_url": "https://github.com/rust-lang/rust/commit/713ca7d5402fb33ea1ac4f34a50618d60156d1d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/713ca7d5402fb33ea1ac4f34a50618d60156d1d3/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56cf237ee24df51acc05634c962cd20a66477fa4", "url": "https://api.github.com/repos/rust-lang/rust/commits/56cf237ee24df51acc05634c962cd20a66477fa4", "html_url": "https://github.com/rust-lang/rust/commit/56cf237ee24df51acc05634c962cd20a66477fa4"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "1ec89d1850f0e77e6af93a081322c16e9748b1d4", "filename": "src/libstd/char.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/713ca7d5402fb33ea1ac4f34a50618d60156d1d3/src%2Flibstd%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/713ca7d5402fb33ea1ac4f34a50618d60156d1d3/src%2Flibstd%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fchar.rs?ref=713ca7d5402fb33ea1ac4f34a50618d60156d1d3", "patch": "@@ -69,6 +69,7 @@ static TAG_FOUR_B: uint = 240u;\n pub static MAX: char = '\\U0010ffff';\n \n /// Convert from `u32` to a character.\n+#[inline]\n pub fn from_u32(i: u32) -> Option<char> {\n     // catch out-of-bounds and surrogates\n     if (i > MAX as u32) || (i >= 0xD800 && i <= 0xDFFF) {"}, {"sha": "ecd297b72a41b61debfc6d3c7cc3c01b2dc90d98", "filename": "src/libstd/str.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/713ca7d5402fb33ea1ac4f34a50618d60156d1d3/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/713ca7d5402fb33ea1ac4f34a50618d60156d1d3/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=713ca7d5402fb33ea1ac4f34a50618d60156d1d3", "patch": "@@ -1061,6 +1061,7 @@ static UTF8_CHAR_WIDTH: [u8, ..256] = [\n ];\n \n /// Given a first byte, determine how many bytes are in this UTF-8 character\n+#[inline]\n pub fn utf8_char_width(b: u8) -> uint {\n     return UTF8_CHAR_WIDTH[b] as uint;\n }"}]}