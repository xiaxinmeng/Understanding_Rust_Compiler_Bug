{"sha": "2a8ff209f68f9b6ae8be746b4fcd94afe97984e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhOGZmMjA5ZjY4ZjliNmFlOGJlNzQ2YjRmY2Q5NGFmZTk3OTg0ZTM=", "commit": {"author": {"name": "Ayaz Hafiz", "email": "ayaz.hafiz.1@gmail.com", "date": "2020-05-10T17:11:36Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2020-10-02T00:12:22Z"}, "message": "fixup! Preserve and format type aliases in extern blocks", "tree": {"sha": "9c7d994ea11ac411dad813cb1f71e0764c71f8f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c7d994ea11ac411dad813cb1f71e0764c71f8f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a8ff209f68f9b6ae8be746b4fcd94afe97984e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a8ff209f68f9b6ae8be746b4fcd94afe97984e3", "html_url": "https://github.com/rust-lang/rust/commit/2a8ff209f68f9b6ae8be746b4fcd94afe97984e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a8ff209f68f9b6ae8be746b4fcd94afe97984e3/comments", "author": {"login": "ayazhafiz", "id": 20735482, "node_id": "MDQ6VXNlcjIwNzM1NDgy", "avatar_url": "https://avatars.githubusercontent.com/u/20735482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayazhafiz", "html_url": "https://github.com/ayazhafiz", "followers_url": "https://api.github.com/users/ayazhafiz/followers", "following_url": "https://api.github.com/users/ayazhafiz/following{/other_user}", "gists_url": "https://api.github.com/users/ayazhafiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayazhafiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayazhafiz/subscriptions", "organizations_url": "https://api.github.com/users/ayazhafiz/orgs", "repos_url": "https://api.github.com/users/ayazhafiz/repos", "events_url": "https://api.github.com/users/ayazhafiz/events{/privacy}", "received_events_url": "https://api.github.com/users/ayazhafiz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92ab76cfa7eae26f525d36ea1d7b08b267b804cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/92ab76cfa7eae26f525d36ea1d7b08b267b804cc", "html_url": "https://github.com/rust-lang/rust/commit/92ab76cfa7eae26f525d36ea1d7b08b267b804cc"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1e2eac0c74b619ab4e18dfd1de031b95a8d4c186", "filename": "src/items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a8ff209f68f9b6ae8be746b4fcd94afe97984e3/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a8ff209f68f9b6ae8be746b4fcd94afe97984e3/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=2a8ff209f68f9b6ae8be746b4fcd94afe97984e3", "patch": "@@ -3059,7 +3059,7 @@ impl Rewrite for ast::ForeignItem {\n         // FIXME: this may be a faulty span from libsyntax.\n         let span = mk_sp(self.span.lo(), self.span.hi() - BytePos(1));\n \n-        let item_str: String = match self.kind {\n+        let item_str = match self.kind {\n             ast::ForeignItemKind::Fn(_, ref fn_sig, ref generics, _) => rewrite_fn_base(\n                 context,\n                 shape.indent,"}]}