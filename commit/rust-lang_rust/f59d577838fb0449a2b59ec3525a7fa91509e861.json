{"sha": "f59d577838fb0449a2b59ec3525a7fa91509e861", "node_id": "C_kwDOAAsO6NoAKGY1OWQ1Nzc4MzhmYjA0NDlhMmI1OWVjMzUyNWE3ZmE5MTUwOWU4NjE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-28T09:59:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-28T09:59:20Z"}, "message": "Auto merge of #112001 - saethlin:enable-matchbranchsimplification, r=cjgillot\n\nEnable MatchBranchSimplification\n\nThis pass is one of the small number of benefits from `-Zmir-opt-level=3` that has motivated rustc_codegen_cranelift to use it:\n\nhttps://github.com/rust-lang/rust/blob/19ed0aade60e1c1038fe40554bcd9d01b717effa/compiler/rustc_codegen_cranelift/build_system/build_sysroot.rs#L244-L246\n\nCranelift's motivation for this is _runtime_ performance improvements in debug builds. Lifting this pass all the way to `-Zmir-opt-level=1` seems to come without significant perf overhead, so that's what I'm suggesting here.", "tree": {"sha": "e2e75787426055813a5e54321e91d9f6bef4d6ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2e75787426055813a5e54321e91d9f6bef4d6ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f59d577838fb0449a2b59ec3525a7fa91509e861", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f59d577838fb0449a2b59ec3525a7fa91509e861", "html_url": "https://github.com/rust-lang/rust/commit/f59d577838fb0449a2b59ec3525a7fa91509e861", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f59d577838fb0449a2b59ec3525a7fa91509e861/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddad0576caf8d0515ed453e04b468977c7d3dfc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddad0576caf8d0515ed453e04b468977c7d3dfc1", "html_url": "https://github.com/rust-lang/rust/commit/ddad0576caf8d0515ed453e04b468977c7d3dfc1"}, {"sha": "7e04c93493a2f9b4d508e6bbf08227407683d666", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e04c93493a2f9b4d508e6bbf08227407683d666", "html_url": "https://github.com/rust-lang/rust/commit/7e04c93493a2f9b4d508e6bbf08227407683d666"}], "stats": {"total": 57, "additions": 50, "deletions": 7}, "files": [{"sha": "6eb4849827447a7d772017e2b140c8d8bf8ffeca", "filename": "compiler/rustc_mir_transform/src/match_branches.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f59d577838fb0449a2b59ec3525a7fa91509e861/compiler%2Frustc_mir_transform%2Fsrc%2Fmatch_branches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f59d577838fb0449a2b59ec3525a7fa91509e861/compiler%2Frustc_mir_transform%2Fsrc%2Fmatch_branches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fmatch_branches.rs?ref=f59d577838fb0449a2b59ec3525a7fa91509e861", "patch": "@@ -41,7 +41,7 @@ pub struct MatchBranchSimplification;\n \n impl<'tcx> MirPass<'tcx> for MatchBranchSimplification {\n     fn is_enabled(&self, sess: &rustc_session::Session) -> bool {\n-        sess.mir_opt_level() >= 3\n+        sess.mir_opt_level() >= 1\n     }\n \n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n@@ -62,7 +62,12 @@ impl<'tcx> MirPass<'tcx> for MatchBranchSimplification {\n                     ..\n                 } if targets.iter().len() == 1 => {\n                     let (value, target) = targets.iter().next().unwrap();\n-                    if target == targets.otherwise() {\n+                    // We require that this block and the two possible target blocks all be\n+                    // distinct.\n+                    if target == targets.otherwise()\n+                        || bb_idx == target\n+                        || bb_idx == targets.otherwise()\n+                    {\n                         continue;\n                     }\n                     (discr, value, target, targets.otherwise())"}, {"sha": "88d2091de0f52d961dfb1c8266ffc6542d763295", "filename": "compiler/rustc_trait_selection/src/traits/fulfill.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f59d577838fb0449a2b59ec3525a7fa91509e861/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f59d577838fb0449a2b59ec3525a7fa91509e861/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs?ref=f59d577838fb0449a2b59ec3525a7fa91509e861", "patch": "@@ -116,6 +116,7 @@ impl<'a, 'tcx> FulfillmentContext<'tcx> {\n }\n \n impl<'tcx> TraitEngine<'tcx> for FulfillmentContext<'tcx> {\n+    #[inline]\n     fn register_predicate_obligation(\n         &mut self,\n         infcx: &InferCtxt<'tcx>,"}, {"sha": "0b9ca29ceddc922b6c35a044f7e2797999084c00", "filename": "tests/mir-opt/simplify_locals_fixedpoint.foo.SimplifyLocals-final.diff", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f59d577838fb0449a2b59ec3525a7fa91509e861/tests%2Fmir-opt%2Fsimplify_locals_fixedpoint.foo.SimplifyLocals-final.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f59d577838fb0449a2b59ec3525a7fa91509e861/tests%2Fmir-opt%2Fsimplify_locals_fixedpoint.foo.SimplifyLocals-final.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fsimplify_locals_fixedpoint.foo.SimplifyLocals-final.diff?ref=f59d577838fb0449a2b59ec3525a7fa91509e861", "patch": "@@ -8,8 +8,6 @@\n       let mut _3: std::option::Option<T>;  // in scope 0 at $DIR/simplify_locals_fixedpoint.rs:+1:51: +1:68\n       let mut _4: isize;                   // in scope 0 at $DIR/simplify_locals_fixedpoint.rs:+1:22: +1:26\n       let mut _5: isize;                   // in scope 0 at $DIR/simplify_locals_fixedpoint.rs:+1:13: +1:20\n--     let mut _7: bool;                    // in scope 0 at $DIR/simplify_locals_fixedpoint.rs:+2:12: +2:20\n--     let mut _8: u8;                      // in scope 0 at $DIR/simplify_locals_fixedpoint.rs:+2:12: +2:13\n       scope 1 {\n           debug a => _6;                   // in scope 1 at $DIR/simplify_locals_fixedpoint.rs:+1:18: +1:19\n           let _6: u8;                      // in scope 1 at $DIR/simplify_locals_fixedpoint.rs:+1:18: +1:19\n@@ -34,10 +32,9 @@\n       }\n   \n       bb2: {\n+          StorageLive(_6);                 // scope 1 at $DIR/simplify_locals_fixedpoint.rs:+1:18: +1:19\n           _6 = (((_1.0: std::option::Option<u8>) as Some).0: u8); // scope 1 at $DIR/simplify_locals_fixedpoint.rs:+1:18: +1:19\n--         StorageLive(_7);                 // scope 1 at $DIR/simplify_locals_fixedpoint.rs:+2:12: +2:20\n--         _7 = Gt(_6, const 42_u8);        // scope 1 at $DIR/simplify_locals_fixedpoint.rs:+2:12: +2:20\n--         StorageDead(_7);                 // scope 1 at $DIR/simplify_locals_fixedpoint.rs:+4:9: +4:10\n+          StorageDead(_6);                 // scope 0 at $DIR/simplify_locals_fixedpoint.rs:+5:5: +5:6\n           goto -> bb3;                     // scope 0 at $DIR/simplify_locals_fixedpoint.rs:+1:5: +5:6\n       }\n   "}, {"sha": "6678e4b3bd2e31ea653cd019cb202cf2631839ee", "filename": "tests/mir-opt/switch_to_self.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f59d577838fb0449a2b59ec3525a7fa91509e861/tests%2Fmir-opt%2Fswitch_to_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f59d577838fb0449a2b59ec3525a7fa91509e861/tests%2Fmir-opt%2Fswitch_to_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fswitch_to_self.rs?ref=f59d577838fb0449a2b59ec3525a7fa91509e861", "patch": "@@ -0,0 +1,21 @@\n+// Test that MatchBranchSimplification doesn't ICE on a SwitchInt where\n+// one of the targets is the block that the SwitchInt terminates.\n+#![crate_type = \"lib\"]\n+#![feature(core_intrinsics, custom_mir)]\n+use std::intrinsics::mir::*;\n+\n+// EMIT_MIR switch_to_self.test.MatchBranchSimplification.diff\n+#[custom_mir(dialect = \"runtime\", phase = \"post-cleanup\")]\n+pub fn test(x: bool) {\n+    mir!(\n+        {\n+            Goto(bb0)\n+        }\n+        bb0 = {\n+            match x { false => bb0, _ => bb1 }\n+        }\n+        bb1 = {\n+            match x { false => bb0, _ => bb1 }\n+        }\n+    )\n+}"}, {"sha": "b0a4f9f018848743d8390d51c5e6afc00ac5c6b0", "filename": "tests/mir-opt/switch_to_self.test.MatchBranchSimplification.diff", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f59d577838fb0449a2b59ec3525a7fa91509e861/tests%2Fmir-opt%2Fswitch_to_self.test.MatchBranchSimplification.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f59d577838fb0449a2b59ec3525a7fa91509e861/tests%2Fmir-opt%2Fswitch_to_self.test.MatchBranchSimplification.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fswitch_to_self.test.MatchBranchSimplification.diff?ref=f59d577838fb0449a2b59ec3525a7fa91509e861", "patch": "@@ -0,0 +1,19 @@\n+- // MIR for `test` before MatchBranchSimplification\n++ // MIR for `test` after MatchBranchSimplification\n+  \n+  fn test(_1: bool) -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/switch_to_self.rs:+0:22: +0:22\n+  \n+      bb0: {\n+          goto -> bb1;                     // scope 0 at $DIR/switch_to_self.rs:+3:13: +3:22\n+      }\n+  \n+      bb1: {\n+          switchInt(_1) -> [0: bb1, otherwise: bb2]; // scope 0 at $DIR/switch_to_self.rs:+6:13: +6:47\n+      }\n+  \n+      bb2: {\n+          switchInt(_1) -> [0: bb1, otherwise: bb2]; // scope 0 at $DIR/switch_to_self.rs:+9:13: +9:47\n+      }\n+  }\n+  "}]}