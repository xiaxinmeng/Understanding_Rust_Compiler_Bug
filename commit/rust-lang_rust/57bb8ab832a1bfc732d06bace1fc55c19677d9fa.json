{"sha": "57bb8ab832a1bfc732d06bace1fc55c19677d9fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3YmI4YWI4MzJhMWJmYzczMmQwNmJhY2UxZmM1NWMxOTY3N2Q5ZmE=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-12-26T01:20:35Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-12-26T20:35:53Z"}, "message": "rustc_trans: support ZST indexing involving uninhabited types.", "tree": {"sha": "926b82fe0970ffdbfa32033b6fbf6e8ff6c6906b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/926b82fe0970ffdbfa32033b6fbf6e8ff6c6906b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57bb8ab832a1bfc732d06bace1fc55c19677d9fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57bb8ab832a1bfc732d06bace1fc55c19677d9fa", "html_url": "https://github.com/rust-lang/rust/commit/57bb8ab832a1bfc732d06bace1fc55c19677d9fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57bb8ab832a1bfc732d06bace1fc55c19677d9fa/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "269827ced91bb2b702d4cb62e3e164b225f73157", "url": "https://api.github.com/repos/rust-lang/rust/commits/269827ced91bb2b702d4cb62e3e164b225f73157", "html_url": "https://github.com/rust-lang/rust/commit/269827ced91bb2b702d4cb62e3e164b225f73157"}], "stats": {"total": 53, "additions": 50, "deletions": 3}, "files": [{"sha": "05af48761a1679d87c54a0422b3a71e04980658c", "filename": "src/librustc_trans/mir/operand.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/57bb8ab832a1bfc732d06bace1fc55c19677d9fa/src%2Flibrustc_trans%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57bb8ab832a1bfc732d06bace1fc55c19677d9fa/src%2Flibrustc_trans%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Foperand.rs?ref=57bb8ab832a1bfc732d06bace1fc55c19677d9fa", "patch": "@@ -267,9 +267,22 @@ impl<'a, 'tcx> MirContext<'a, 'tcx> {\n \n         // Moves out of scalar and scalar pair fields are trivial.\n         if let &mir::Place::Projection(ref proj) = place {\n-            if let mir::ProjectionElem::Field(ref f, _) = proj.elem {\n-                if let Some(o) = self.maybe_trans_consume_direct(bcx, &proj.base) {\n-                    return Some(o.extract_field(bcx, f.index()));\n+            if let Some(o) = self.maybe_trans_consume_direct(bcx, &proj.base) {\n+                match proj.elem {\n+                    mir::ProjectionElem::Field(ref f, _) => {\n+                        return Some(o.extract_field(bcx, f.index()));\n+                    }\n+                    mir::ProjectionElem::Index(_) |\n+                    mir::ProjectionElem::ConstantIndex { .. } => {\n+                        // ZSTs don't require any actual memory access.\n+                        // FIXME(eddyb) deduplicate this with the identical\n+                        // checks in `trans_consume` and `extract_field`.\n+                        let elem = o.layout.field(bcx.ccx, 0);\n+                        if elem.is_zst() {\n+                            return Some(OperandRef::new_zst(bcx.ccx, elem));\n+                        }\n+                    }\n+                    _ => {}\n                 }\n             }\n         }"}, {"sha": "d864d55c93972140775283ab64eedf5722f41314", "filename": "src/test/run-pass/issue-46855.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/57bb8ab832a1bfc732d06bace1fc55c19677d9fa/src%2Ftest%2Frun-pass%2Fissue-46855.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57bb8ab832a1bfc732d06bace1fc55c19677d9fa/src%2Ftest%2Frun-pass%2Fissue-46855.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-46855.rs?ref=57bb8ab832a1bfc732d06bace1fc55c19677d9fa", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Zmir-opt-level=1\n+\n+#![feature(slice_patterns)]\n+\n+use std::mem;\n+\n+#[derive(Copy, Clone)]\n+enum Never {}\n+\n+union Foo {\n+    a: u64,\n+    b: Never\n+}\n+\n+fn foo(xs: [(Never, u32); 1]) -> u32 { xs[0].1 }\n+\n+fn bar([(_, x)]: [(Never, u32); 1]) -> u32 { x }\n+\n+fn main() {\n+    println!(\"{}\", mem::size_of::<Foo>());\n+\n+    let f = [Foo { a: 42 }, Foo { a: 10 }];\n+    println!(\"{:?}\", unsafe { f[0].a });\n+}"}]}