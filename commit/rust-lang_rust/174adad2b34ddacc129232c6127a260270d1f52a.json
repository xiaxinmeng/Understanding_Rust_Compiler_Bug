{"sha": "174adad2b34ddacc129232c6127a260270d1f52a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3NGFkYWQyYjM0ZGRhY2MxMjkyMzJjNjEyN2EyNjAyNzBkMWY1MmE=", "commit": {"author": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-27T03:51:21Z"}, "committer": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-27T21:26:36Z"}, "message": "Use DLL_THREAD_DETACH when calling windows TLS destructor.", "tree": {"sha": "edb86ef6065ff3c314572e791e1f6a3f3e8e81fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edb86ef6065ff3c314572e791e1f6a3f3e8e81fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/174adad2b34ddacc129232c6127a260270d1f52a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/174adad2b34ddacc129232c6127a260270d1f52a", "html_url": "https://github.com/rust-lang/rust/commit/174adad2b34ddacc129232c6127a260270d1f52a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/174adad2b34ddacc129232c6127a260270d1f52a/comments", "author": null, "committer": null, "parents": [{"sha": "d9e18ada39b52518c70df7801be564e58f4e8a66", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9e18ada39b52518c70df7801be564e58f4e8a66", "html_url": "https://github.com/rust-lang/rust/commit/d9e18ada39b52518c70df7801be564e58f4e8a66"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "eb8c99b72f6f1c51266f6d7db48a8cb55a3c20d0", "filename": "src/shims/tls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/174adad2b34ddacc129232c6127a260270d1f52a/src%2Fshims%2Ftls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/174adad2b34ddacc129232c6127a260270d1f52a/src%2Fshims%2Ftls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ftls.rs?ref=174adad2b34ddacc129232c6127a260270d1f52a", "patch": "@@ -213,7 +213,7 @@ trait EvalContextPrivExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let thread_callback = this.memory.get_fn(thread_callback.not_undef()?)?.as_instance()?;\n \n         // The signature of this function is `unsafe extern \"system\" fn(h: c::LPVOID, dwReason: c::DWORD, pv: c::LPVOID)`.\n-        let reason = this.eval_path_scalar(&[\"std\", \"sys\", \"windows\", \"c\", \"DLL_PROCESS_DETACH\"])?;\n+        let reason = this.eval_path_scalar(&[\"std\", \"sys\", \"windows\", \"c\", \"DLL_THREAD_DETACH\"])?;\n         let ret_place = MPlaceTy::dangling(this.machine.layouts.unit, this).into();\n         this.call_function(\n             thread_callback,"}]}