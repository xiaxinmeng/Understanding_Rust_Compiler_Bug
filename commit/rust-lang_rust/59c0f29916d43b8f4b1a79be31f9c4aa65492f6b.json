{"sha": "59c0f29916d43b8f4b1a79be31f9c4aa65492f6b", "node_id": "C_kwDOAAsO6NoAKDU5YzBmMjk5MTZkNDNiOGY0YjFhNzliZTMxZjljNGFhNjU0OTJmNmI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-28T00:11:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-28T00:11:32Z"}, "message": "Auto merge of #8519 - tysg:redundant-modulo, r=giraffate\n\nCheck if lhs < rhs in modulos in `identity_op`\n\nFixes #8508\n\nchangelog: [`identity_op`] now checks for modulos, e.g. `1 % 3`", "tree": {"sha": "ad35037a396c039d5101b693e1c17afd019fe637", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad35037a396c039d5101b693e1c17afd019fe637"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59c0f29916d43b8f4b1a79be31f9c4aa65492f6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59c0f29916d43b8f4b1a79be31f9c4aa65492f6b", "html_url": "https://github.com/rust-lang/rust/commit/59c0f29916d43b8f4b1a79be31f9c4aa65492f6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59c0f29916d43b8f4b1a79be31f9c4aa65492f6b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ebe766695e66a97775e4992d3d08f74ce2a7270", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ebe766695e66a97775e4992d3d08f74ce2a7270", "html_url": "https://github.com/rust-lang/rust/commit/8ebe766695e66a97775e4992d3d08f74ce2a7270"}, {"sha": "52b563b28361d49eb455725f319500f7afa362d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/52b563b28361d49eb455725f319500f7afa362d9", "html_url": "https://github.com/rust-lang/rust/commit/52b563b28361d49eb455725f319500f7afa362d9"}], "stats": {"total": 119, "additions": 90, "deletions": 29}, "files": [{"sha": "4d6bef89bea7f09cbbfa8f618b4d26b871e371b6", "filename": "clippy_lints/src/identity_op.rs", "status": "modified", "additions": 27, "deletions": 10, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/59c0f29916d43b8f4b1a79be31f9c4aa65492f6b/clippy_lints%2Fsrc%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59c0f29916d43b8f4b1a79be31f9c4aa65492f6b/clippy_lints%2Fsrc%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_op.rs?ref=59c0f29916d43b8f4b1a79be31f9c4aa65492f6b", "patch": "@@ -5,7 +5,7 @@ use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n \n-use clippy_utils::consts::{constant_simple, Constant};\n+use clippy_utils::consts::{constant_full_int, constant_simple, Constant, FullInt};\n use clippy_utils::diagnostics::span_lint;\n use clippy_utils::{clip, unsext};\n \n@@ -54,6 +54,7 @@ impl<'tcx> LateLintPass<'tcx> for IdentityOp {\n                     check(cx, left, -1, e.span, right.span);\n                     check(cx, right, -1, e.span, left.span);\n                 },\n+                BinOpKind::Rem => check_remainder(cx, left, right, e.span, left.span),\n                 _ => (),\n             }\n         }\n@@ -70,6 +71,18 @@ fn is_allowed(cx: &LateContext<'_>, cmp: BinOp, left: &Expr<'_>, right: &Expr<'_\n             && constant_simple(cx, cx.typeck_results(), left) == Some(Constant::Int(1)))\n }\n \n+fn check_remainder(cx: &LateContext<'_>, left: &Expr<'_>, right: &Expr<'_>, span: Span, arg: Span) {\n+    let lhs_const = constant_full_int(cx, cx.typeck_results(), left);\n+    let rhs_const = constant_full_int(cx, cx.typeck_results(), right);\n+    if match (lhs_const, rhs_const) {\n+        (Some(FullInt::S(lv)), Some(FullInt::S(rv))) => lv.abs() < rv.abs(),\n+        (Some(FullInt::U(lv)), Some(FullInt::U(rv))) => lv < rv,\n+        _ => return,\n+    } {\n+        span_ineffective_operation(cx, span, arg);\n+    }\n+}\n+\n fn check(cx: &LateContext<'_>, e: &Expr<'_>, m: i8, span: Span, arg: Span) {\n     if let Some(Constant::Int(v)) = constant_simple(cx, cx.typeck_results(), e).map(Constant::peel_refs) {\n         let check = match *cx.typeck_results().expr_ty(e).peel_refs().kind() {\n@@ -83,15 +96,19 @@ fn check(cx: &LateContext<'_>, e: &Expr<'_>, m: i8, span: Span, arg: Span) {\n             1 => v == 1,\n             _ => unreachable!(),\n         } {\n-            span_lint(\n-                cx,\n-                IDENTITY_OP,\n-                span,\n-                &format!(\n-                    \"the operation is ineffective. Consider reducing it to `{}`\",\n-                    snippet(cx, arg, \"..\")\n-                ),\n-            );\n+            span_ineffective_operation(cx, span, arg);\n         }\n     }\n }\n+\n+fn span_ineffective_operation(cx: &LateContext<'_>, span: Span, arg: Span) {\n+    span_lint(\n+        cx,\n+        IDENTITY_OP,\n+        span,\n+        &format!(\n+            \"the operation is ineffective. Consider reducing it to `{}`\",\n+            snippet(cx, arg, \"..\")\n+        ),\n+    );\n+}"}, {"sha": "edc3fe1aec13a556fa0c8c2121a1639553c57952", "filename": "tests/ui/identity_op.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/59c0f29916d43b8f4b1a79be31f9c4aa65492f6b/tests%2Fui%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59c0f29916d43b8f4b1a79be31f9c4aa65492f6b/tests%2Fui%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_op.rs?ref=59c0f29916d43b8f4b1a79be31f9c4aa65492f6b", "patch": "@@ -66,4 +66,13 @@ fn main() {\n     let b = a << 0; // no error: non-integer\n \n     1 * Meter; // no error: non-integer\n+\n+    2 % 3;\n+    -2 % 3;\n+    2 % -3 + x;\n+    -2 % -3 + x;\n+    x + 1 % 3;\n+    (x + 1) % 3; // no error\n+    4 % 3; // no error\n+    4 % -3; // no error\n }"}, {"sha": "706f01a3dd6c403b245ca8568cdb624def8f943a", "filename": "tests/ui/identity_op.stderr", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/59c0f29916d43b8f4b1a79be31f9c4aa65492f6b/tests%2Fui%2Fidentity_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59c0f29916d43b8f4b1a79be31f9c4aa65492f6b/tests%2Fui%2Fidentity_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_op.stderr?ref=59c0f29916d43b8f4b1a79be31f9c4aa65492f6b", "patch": "@@ -78,5 +78,35 @@ error: the operation is ineffective. Consider reducing it to `x`\n LL |     x >> &0;\n    |     ^^^^^^^\n \n-error: aborting due to 13 previous errors\n+error: the operation is ineffective. Consider reducing it to `2`\n+  --> $DIR/identity_op.rs:70:5\n+   |\n+LL |     2 % 3;\n+   |     ^^^^^\n+\n+error: the operation is ineffective. Consider reducing it to `-2`\n+  --> $DIR/identity_op.rs:71:5\n+   |\n+LL |     -2 % 3;\n+   |     ^^^^^^\n+\n+error: the operation is ineffective. Consider reducing it to `2`\n+  --> $DIR/identity_op.rs:72:5\n+   |\n+LL |     2 % -3 + x;\n+   |     ^^^^^^\n+\n+error: the operation is ineffective. Consider reducing it to `-2`\n+  --> $DIR/identity_op.rs:73:5\n+   |\n+LL |     -2 % -3 + x;\n+   |     ^^^^^^^\n+\n+error: the operation is ineffective. Consider reducing it to `1`\n+  --> $DIR/identity_op.rs:74:9\n+   |\n+LL |     x + 1 % 3;\n+   |         ^^^^^\n+\n+error: aborting due to 18 previous errors\n "}, {"sha": "3ebe46bc5be7c5b8b4108f4477b70663a5734b38", "filename": "tests/ui/modulo_arithmetic_integral_const.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/59c0f29916d43b8f4b1a79be31f9c4aa65492f6b/tests%2Fui%2Fmodulo_arithmetic_integral_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59c0f29916d43b8f4b1a79be31f9c4aa65492f6b/tests%2Fui%2Fmodulo_arithmetic_integral_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodulo_arithmetic_integral_const.rs?ref=59c0f29916d43b8f4b1a79be31f9c4aa65492f6b", "patch": "@@ -1,5 +1,10 @@\n #![warn(clippy::modulo_arithmetic)]\n-#![allow(clippy::no_effect, clippy::unnecessary_operation, clippy::modulo_one)]\n+#![allow(\n+    clippy::no_effect,\n+    clippy::unnecessary_operation,\n+    clippy::modulo_one,\n+    clippy::identity_op\n+)]\n \n fn main() {\n     // Lint when both sides are const and of the opposite sign"}, {"sha": "11b5f77461ba2e93b94779543f77b8770ffbf440", "filename": "tests/ui/modulo_arithmetic_integral_const.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/59c0f29916d43b8f4b1a79be31f9c4aa65492f6b/tests%2Fui%2Fmodulo_arithmetic_integral_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59c0f29916d43b8f4b1a79be31f9c4aa65492f6b/tests%2Fui%2Fmodulo_arithmetic_integral_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodulo_arithmetic_integral_const.stderr?ref=59c0f29916d43b8f4b1a79be31f9c4aa65492f6b", "patch": "@@ -1,5 +1,5 @@\n error: you are using modulo operator on constants with different signs: `-1 % 2`\n-  --> $DIR/modulo_arithmetic_integral_const.rs:6:5\n+  --> $DIR/modulo_arithmetic_integral_const.rs:11:5\n    |\n LL |     -1 % 2;\n    |     ^^^^^^\n@@ -9,7 +9,7 @@ LL |     -1 % 2;\n    = note: or consider using `rem_euclid` or similar function\n \n error: you are using modulo operator on constants with different signs: `1 % -2`\n-  --> $DIR/modulo_arithmetic_integral_const.rs:7:5\n+  --> $DIR/modulo_arithmetic_integral_const.rs:12:5\n    |\n LL |     1 % -2;\n    |     ^^^^^^\n@@ -18,7 +18,7 @@ LL |     1 % -2;\n    = note: or consider using `rem_euclid` or similar function\n \n error: you are using modulo operator on constants with different signs: `-1 % 3`\n-  --> $DIR/modulo_arithmetic_integral_const.rs:8:5\n+  --> $DIR/modulo_arithmetic_integral_const.rs:13:5\n    |\n LL |     (1 - 2) % (1 + 2);\n    |     ^^^^^^^^^^^^^^^^^\n@@ -27,7 +27,7 @@ LL |     (1 - 2) % (1 + 2);\n    = note: or consider using `rem_euclid` or similar function\n \n error: you are using modulo operator on constants with different signs: `3 % -1`\n-  --> $DIR/modulo_arithmetic_integral_const.rs:9:5\n+  --> $DIR/modulo_arithmetic_integral_const.rs:14:5\n    |\n LL |     (1 + 2) % (1 - 2);\n    |     ^^^^^^^^^^^^^^^^^\n@@ -36,7 +36,7 @@ LL |     (1 + 2) % (1 - 2);\n    = note: or consider using `rem_euclid` or similar function\n \n error: you are using modulo operator on constants with different signs: `-35 % 300000`\n-  --> $DIR/modulo_arithmetic_integral_const.rs:10:5\n+  --> $DIR/modulo_arithmetic_integral_const.rs:15:5\n    |\n LL |     35 * (7 - 4 * 2) % (-500 * -600);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -45,7 +45,7 @@ LL |     35 * (7 - 4 * 2) % (-500 * -600);\n    = note: or consider using `rem_euclid` or similar function\n \n error: you are using modulo operator on constants with different signs: `-1 % 2`\n-  --> $DIR/modulo_arithmetic_integral_const.rs:12:5\n+  --> $DIR/modulo_arithmetic_integral_const.rs:17:5\n    |\n LL |     -1i8 % 2i8;\n    |     ^^^^^^^^^^\n@@ -54,7 +54,7 @@ LL |     -1i8 % 2i8;\n    = note: or consider using `rem_euclid` or similar function\n \n error: you are using modulo operator on constants with different signs: `1 % -2`\n-  --> $DIR/modulo_arithmetic_integral_const.rs:13:5\n+  --> $DIR/modulo_arithmetic_integral_const.rs:18:5\n    |\n LL |     1i8 % -2i8;\n    |     ^^^^^^^^^^\n@@ -63,7 +63,7 @@ LL |     1i8 % -2i8;\n    = note: or consider using `rem_euclid` or similar function\n \n error: you are using modulo operator on constants with different signs: `-1 % 2`\n-  --> $DIR/modulo_arithmetic_integral_const.rs:14:5\n+  --> $DIR/modulo_arithmetic_integral_const.rs:19:5\n    |\n LL |     -1i16 % 2i16;\n    |     ^^^^^^^^^^^^\n@@ -72,7 +72,7 @@ LL |     -1i16 % 2i16;\n    = note: or consider using `rem_euclid` or similar function\n \n error: you are using modulo operator on constants with different signs: `1 % -2`\n-  --> $DIR/modulo_arithmetic_integral_const.rs:15:5\n+  --> $DIR/modulo_arithmetic_integral_const.rs:20:5\n    |\n LL |     1i16 % -2i16;\n    |     ^^^^^^^^^^^^\n@@ -81,7 +81,7 @@ LL |     1i16 % -2i16;\n    = note: or consider using `rem_euclid` or similar function\n \n error: you are using modulo operator on constants with different signs: `-1 % 2`\n-  --> $DIR/modulo_arithmetic_integral_const.rs:16:5\n+  --> $DIR/modulo_arithmetic_integral_const.rs:21:5\n    |\n LL |     -1i32 % 2i32;\n    |     ^^^^^^^^^^^^\n@@ -90,7 +90,7 @@ LL |     -1i32 % 2i32;\n    = note: or consider using `rem_euclid` or similar function\n \n error: you are using modulo operator on constants with different signs: `1 % -2`\n-  --> $DIR/modulo_arithmetic_integral_const.rs:17:5\n+  --> $DIR/modulo_arithmetic_integral_const.rs:22:5\n    |\n LL |     1i32 % -2i32;\n    |     ^^^^^^^^^^^^\n@@ -99,7 +99,7 @@ LL |     1i32 % -2i32;\n    = note: or consider using `rem_euclid` or similar function\n \n error: you are using modulo operator on constants with different signs: `-1 % 2`\n-  --> $DIR/modulo_arithmetic_integral_const.rs:18:5\n+  --> $DIR/modulo_arithmetic_integral_const.rs:23:5\n    |\n LL |     -1i64 % 2i64;\n    |     ^^^^^^^^^^^^\n@@ -108,7 +108,7 @@ LL |     -1i64 % 2i64;\n    = note: or consider using `rem_euclid` or similar function\n \n error: you are using modulo operator on constants with different signs: `1 % -2`\n-  --> $DIR/modulo_arithmetic_integral_const.rs:19:5\n+  --> $DIR/modulo_arithmetic_integral_const.rs:24:5\n    |\n LL |     1i64 % -2i64;\n    |     ^^^^^^^^^^^^\n@@ -117,7 +117,7 @@ LL |     1i64 % -2i64;\n    = note: or consider using `rem_euclid` or similar function\n \n error: you are using modulo operator on constants with different signs: `-1 % 2`\n-  --> $DIR/modulo_arithmetic_integral_const.rs:20:5\n+  --> $DIR/modulo_arithmetic_integral_const.rs:25:5\n    |\n LL |     -1i128 % 2i128;\n    |     ^^^^^^^^^^^^^^\n@@ -126,7 +126,7 @@ LL |     -1i128 % 2i128;\n    = note: or consider using `rem_euclid` or similar function\n \n error: you are using modulo operator on constants with different signs: `1 % -2`\n-  --> $DIR/modulo_arithmetic_integral_const.rs:21:5\n+  --> $DIR/modulo_arithmetic_integral_const.rs:26:5\n    |\n LL |     1i128 % -2i128;\n    |     ^^^^^^^^^^^^^^\n@@ -135,7 +135,7 @@ LL |     1i128 % -2i128;\n    = note: or consider using `rem_euclid` or similar function\n \n error: you are using modulo operator on constants with different signs: `-1 % 2`\n-  --> $DIR/modulo_arithmetic_integral_const.rs:22:5\n+  --> $DIR/modulo_arithmetic_integral_const.rs:27:5\n    |\n LL |     -1isize % 2isize;\n    |     ^^^^^^^^^^^^^^^^\n@@ -144,7 +144,7 @@ LL |     -1isize % 2isize;\n    = note: or consider using `rem_euclid` or similar function\n \n error: you are using modulo operator on constants with different signs: `1 % -2`\n-  --> $DIR/modulo_arithmetic_integral_const.rs:23:5\n+  --> $DIR/modulo_arithmetic_integral_const.rs:28:5\n    |\n LL |     1isize % -2isize;\n    |     ^^^^^^^^^^^^^^^^"}]}