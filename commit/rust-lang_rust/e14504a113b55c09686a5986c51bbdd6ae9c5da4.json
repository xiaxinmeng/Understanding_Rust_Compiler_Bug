{"sha": "e14504a113b55c09686a5986c51bbdd6ae9c5da4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxNDUwNGExMTNiNTVjMDk2ODZhNTk4NmM1MWJiZGQ2YWU5YzVkYTQ=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-04-10T11:52:25Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-04-16T22:52:14Z"}, "message": "Add tests for `pub(restricted)`", "tree": {"sha": "6e4994ab0ea9415d855f41243c290fbb5a077dc7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e4994ab0ea9415d855f41243c290fbb5a077dc7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e14504a113b55c09686a5986c51bbdd6ae9c5da4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e14504a113b55c09686a5986c51bbdd6ae9c5da4", "html_url": "https://github.com/rust-lang/rust/commit/e14504a113b55c09686a5986c51bbdd6ae9c5da4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e14504a113b55c09686a5986c51bbdd6ae9c5da4/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "daec3fe4e6bd4af52e551c1e09ae345a80b42452", "url": "https://api.github.com/repos/rust-lang/rust/commits/daec3fe4e6bd4af52e551c1e09ae345a80b42452", "html_url": "https://github.com/rust-lang/rust/commit/daec3fe4e6bd4af52e551c1e09ae345a80b42452"}], "stats": {"total": 205, "additions": 205, "deletions": 0}, "files": [{"sha": "b1c88ce6ce55c796d731e41b910353d7b3bbf2fa", "filename": "src/test/auxiliary/pub_restricted.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/e14504a113b55c09686a5986c51bbdd6ae9c5da4/src%2Ftest%2Fauxiliary%2Fpub_restricted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e14504a113b55c09686a5986c51bbdd6ae9c5da4/src%2Ftest%2Fauxiliary%2Fpub_restricted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fpub_restricted.rs?ref=e14504a113b55c09686a5986c51bbdd6ae9c5da4", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(pub_restricted)]\n+\n+pub(crate) struct Crate;\n+#[derive(Default)]\n+pub struct Universe {\n+    pub x: i32,\n+    pub(crate) y: i32\n+}\n+\n+impl Universe {\n+    pub fn f(&self) {}\n+    pub(crate) fn g(&self) {}\n+}"}, {"sha": "53ae439867f9883726f8b68e8482affadcd1d139", "filename": "src/test/compile-fail/privacy/restricted/feature-gate.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/e14504a113b55c09686a5986c51bbdd6ae9c5da4/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ffeature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e14504a113b55c09686a5986c51bbdd6ae9c5da4/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ffeature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ffeature-gate.rs?ref=e14504a113b55c09686a5986c51bbdd6ae9c5da4", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub(crate) //~ ERROR experimental\n+mod foo {}\n+\n+pub(self) //~ ERROR experimental\n+mod bar {}\n+\n+struct S {\n+    pub(self) x: i32, //~ ERROR experimental\n+}\n+impl S {\n+    pub(self) fn f() {} //~ ERROR experimental\n+}\n+extern {\n+    pub(self) fn f(); //~ ERROR experimental\n+}"}, {"sha": "4e2a69cb79e1945aa9e9a6fe076aace0c8140866", "filename": "src/test/compile-fail/privacy/restricted/lookup-ignores-private.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/e14504a113b55c09686a5986c51bbdd6ae9c5da4/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Flookup-ignores-private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e14504a113b55c09686a5986c51bbdd6ae9c5da4/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Flookup-ignores-private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Flookup-ignores-private.rs?ref=e14504a113b55c09686a5986c51bbdd6ae9c5da4", "patch": "@@ -0,0 +1,44 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_attrs, pub_restricted)]\n+#![allow(warnings)]\n+\n+mod foo {\n+    pub use foo::bar::S;\n+    mod bar {\n+        #[derive(Default)]\n+        pub struct S {\n+            pub(foo) x: i32,\n+        }\n+        impl S {\n+            pub(foo) fn f(&self) -> i32 { 0 }\n+        }\n+\n+        pub struct S2 {\n+            pub(crate) x: bool,\n+        }\n+        impl S2 {\n+            pub(crate) fn f(&self) -> bool { false }\n+        }\n+\n+        impl ::std::ops::Deref for S {\n+            type Target = S2;\n+            fn deref(&self) -> &S2 { unimplemented!() }\n+        }\n+    }\n+}\n+\n+#[rustc_error]\n+fn main() { //~ ERROR compilation successful\n+    let s = foo::S::default();\n+    let _: bool = s.x;\n+    let _: bool = s.f();\n+}"}, {"sha": "f8e7e6283a0afe26a7c19cd52fdaffe1c0272c02", "filename": "src/test/compile-fail/privacy/restricted/private-in-public.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e14504a113b55c09686a5986c51bbdd6ae9c5da4/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Fprivate-in-public.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e14504a113b55c09686a5986c51bbdd6ae9c5da4/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Fprivate-in-public.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Fprivate-in-public.rs?ref=e14504a113b55c09686a5986c51bbdd6ae9c5da4", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(pub_restricted)]\n+\n+mod foo {\n+    struct Priv;\n+    mod bar {\n+        use foo::Priv;\n+        pub(super) fn f(_: Priv) {}\n+        pub(crate) fn f(_: Priv) {} //~ ERROR private\n+    }\n+}"}, {"sha": "e254e005656c10267149a8cadc2be0bed39a69af", "filename": "src/test/compile-fail/privacy/restricted/struct-literal-field.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/e14504a113b55c09686a5986c51bbdd6ae9c5da4/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Fstruct-literal-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e14504a113b55c09686a5986c51bbdd6ae9c5da4/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Fstruct-literal-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Fstruct-literal-field.rs?ref=e14504a113b55c09686a5986c51bbdd6ae9c5da4", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(pub_restricted)]\n+#![deny(private_in_public)]\n+#![allow(warnings)]\n+\n+mod foo {\n+    pub mod bar {\n+        pub struct S {\n+            pub(foo) x: i32,\n+        }\n+    }\n+\n+    fn f() {\n+        use foo::bar::S;\n+        S { x: 0 }; // ok\n+    }\n+}\n+\n+fn main() {\n+    use foo::bar::S;\n+    S { x: 0 }; //~ ERROR private\n+}"}, {"sha": "3e1bb7666229c60fbedea94abd1b0b7f5f2eb04c", "filename": "src/test/compile-fail/privacy/restricted/test.rs", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/e14504a113b55c09686a5986c51bbdd6ae9c5da4/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e14504a113b55c09686a5986c51bbdd6ae9c5da4/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftest.rs?ref=e14504a113b55c09686a5986c51bbdd6ae9c5da4", "patch": "@@ -0,0 +1,62 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:pub_restricted.rs\n+\n+#![feature(pub_restricted)]\n+#![deny(private_in_public)]\n+#![allow(warnings)]\n+extern crate pub_restricted;\n+\n+mod foo {\n+    pub mod bar {\n+        pub(super) fn f() {}\n+        #[derive(Default)]\n+        pub struct S {\n+            pub(super) x: i32,\n+        }\n+        impl S {\n+            pub(super) fn f(&self) {}\n+            pub(super) fn g() {}\n+        }\n+    }\n+    fn f() {\n+        use foo::bar::S;\n+        pub(self) use foo::bar::f; // ok\n+        pub(super) use foo::bar::f as g; //~ ERROR cannot be reexported\n+        S::default().x; // ok\n+        S::default().f(); // ok\n+        S::g(); // ok\n+    }\n+}\n+\n+fn f() {\n+    use foo::bar::S;\n+    use foo::bar::f; //~ ERROR private\n+    S::default().x; //~ ERROR private\n+    S::default().f(); //~ ERROR private\n+    S::g(); //~ ERROR private\n+}\n+\n+fn main() {\n+    use pub_restricted::Universe;\n+    use pub_restricted::Crate; //~ ERROR private\n+\n+    let u = Universe::default();\n+    let _ = u.x;\n+    let _ = u.y; //~ ERROR private\n+    u.f();\n+    u.g(); //~ ERROR private\n+}\n+\n+mod pathological {\n+    pub(bad::path) mod m1 {} //~ ERROR failed to resolve module path\n+    pub(foo) mod m2 {} //~ ERROR visibilities can only be restricted to ancestor modules\n+}"}]}