{"sha": "957dedb11d521af6f831e33d94394998fd21968d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1N2RlZGIxMWQ1MjFhZjZmODMxZTMzZDk0Mzk0OTk4ZmQyMTk2OGQ=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-08-24T19:42:39Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-08-24T20:09:02Z"}, "message": "Fix unused_unit false positive\n\nFixes #4076", "tree": {"sha": "567bc7bd7dddcb8fd8eb1d86eee3069a1aae40ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/567bc7bd7dddcb8fd8eb1d86eee3069a1aae40ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/957dedb11d521af6f831e33d94394998fd21968d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEEj4U0bmbiMSg/mWqvgqphyqETl+YFAl1hmV8QHGRldkBwaGFu\nc2NoLm5ldAAKCRCCqmHKoROX5nPXEADPn9xDMacShrTibKEU/Z/m09SDIbcQ5yvG\nImiiGuoRflm6P23zkqTZoQFSE4rFHtyzmrZ6i2V2m9cZi1SLtpLjkT02MDgq60Ah\nBD+R4eeYF0Y3R5ZVfWFD+cXsRVytoMSIL21K30YXw8kYf7agS4iQD97DGADA6zRx\nFDjOtlT2naNqvJ8Ql+ogXdpsa2B2ap5hViE380Em1tsmV6qTdjw8HxZW55jBnVs4\nyQHgbGRQ+Wjo07deXW2j2FPUS8kUyOj1a/mewo6JzmGGDgQEOSF2duv1YLySDxwX\nijYxoZAlwSgvWSU7jjklcmIVtBdLx3ZkW6KwJrAGHBE06cZ9H/qtjsql0vasqFZN\ndyAE2XJirnfr4v3DQVu86zppngV062z1E00mE7DGUssL4GLLtvF9LznTgngnx3wY\nl5S4iO2aTRDxrh1IBR9Xi2rSxkxoWW4dYKiNTe1/apkYvQCacah4afUzz59fX/kp\nRdrA1L/Rg1ZxxJZ/8HOIXRuv1KsvitOwHuumDWHlksp3tVuE2tY3c5vs2P5sWsnX\noR/qfowqfKo0r1gyCCb6m2qT7uIfxk+tCluDCKNaGojsuxgYpnJeVeL6LcFwkTkS\nVP1x1DjYD/uCHIbpQ6qQjxtJa/zmlyORtEIwWDKlArNrT3ssh60SpuV1G5z4RfQr\nZ2O6AoWA0w==\n=MrUt\n-----END PGP SIGNATURE-----", "payload": "tree 567bc7bd7dddcb8fd8eb1d86eee3069a1aae40ab\nparent 56f51b35e8b4252aa0d10e9ac3d26e4b821e12a0\nauthor Philipp Hansch <dev@phansch.net> 1566675759 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1566677342 +0200\n\nFix unused_unit false positive\n\nFixes #4076\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/957dedb11d521af6f831e33d94394998fd21968d", "html_url": "https://github.com/rust-lang/rust/commit/957dedb11d521af6f831e33d94394998fd21968d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/957dedb11d521af6f831e33d94394998fd21968d/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56f51b35e8b4252aa0d10e9ac3d26e4b821e12a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/56f51b35e8b4252aa0d10e9ac3d26e4b821e12a0", "html_url": "https://github.com/rust-lang/rust/commit/56f51b35e8b4252aa0d10e9ac3d26e4b821e12a0"}], "stats": {"total": 44, "additions": 36, "deletions": 8}, "files": [{"sha": "e864518ee598c1e5e5a8f62c389aacbec3e4abd6", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/957dedb11d521af6f831e33d94394998fd21968d/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dedb11d521af6f831e33d94394998fd21968d/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=957dedb11d521af6f831e33d94394998fd21968d", "patch": "@@ -277,7 +277,7 @@ impl EarlyLintPass for Return {\n         if_chain! {\n             if let Some(ref stmt) = block.stmts.last();\n             if let ast::StmtKind::Expr(ref expr) = stmt.node;\n-            if is_unit_expr(expr) && !expr.span.from_expansion();\n+            if is_unit_expr(expr) && !stmt.span.from_expansion();\n             then {\n                 let sp = expr.span;\n                 span_lint_and_then(cx, UNUSED_UNIT, sp, \"unneeded unit expression\", |db| {"}, {"sha": "17c1a5de597343d2796cd834b946ab8359f0e9e6", "filename": "tests/ui/unused_unit.fixed", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/957dedb11d521af6f831e33d94394998fd21968d/tests%2Fui%2Funused_unit.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/957dedb11d521af6f831e33d94394998fd21968d/tests%2Fui%2Funused_unit.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.fixed?ref=957dedb11d521af6f831e33d94394998fd21968d", "patch": "@@ -10,6 +10,7 @@\n #![rustfmt::skip]\n \n #![deny(clippy::unused_unit)]\n+#![allow(dead_code)]\n \n struct Unitter;\n impl Unitter {\n@@ -42,3 +43,16 @@ fn main() {\n     }\n     return;\n }\n+\n+// https://github.com/rust-lang/rust-clippy/issues/4076\n+fn foo() {\n+    macro_rules! foo {\n+        (recv($r:expr) -> $res:pat => $body:expr) => {\n+            $body\n+        }\n+    }\n+\n+    foo! {\n+        recv(rx) -> _x => ()\n+    }\n+}"}, {"sha": "e04c525733752a2fe7a172b7c3705ef78ec620b2", "filename": "tests/ui/unused_unit.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/957dedb11d521af6f831e33d94394998fd21968d/tests%2Fui%2Funused_unit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957dedb11d521af6f831e33d94394998fd21968d/tests%2Fui%2Funused_unit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.rs?ref=957dedb11d521af6f831e33d94394998fd21968d", "patch": "@@ -10,6 +10,7 @@\n #![rustfmt::skip]\n \n #![deny(clippy::unused_unit)]\n+#![allow(dead_code)]\n \n struct Unitter;\n impl Unitter {\n@@ -43,3 +44,16 @@ fn main() {\n     }\n     return();\n }\n+\n+// https://github.com/rust-lang/rust-clippy/issues/4076\n+fn foo() {\n+    macro_rules! foo {\n+        (recv($r:expr) -> $res:pat => $body:expr) => {\n+            $body\n+        }\n+    }\n+\n+    foo! {\n+        recv(rx) -> _x => ()\n+    }\n+}"}, {"sha": "6ef6dc4f5d6c5cc20e58a8644bb1865106f1bef9", "filename": "tests/ui/unused_unit.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/957dedb11d521af6f831e33d94394998fd21968d/tests%2Fui%2Funused_unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/957dedb11d521af6f831e33d94394998fd21968d/tests%2Fui%2Funused_unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.stderr?ref=957dedb11d521af6f831e33d94394998fd21968d", "patch": "@@ -1,5 +1,5 @@\n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:18:59\n+  --> $DIR/unused_unit.rs:19:59\n    |\n LL |       pub fn get_unit<F: Fn() -> (), G>(&self, f: F, _g: G) ->\n    |  ___________________________________________________________^\n@@ -13,37 +13,37 @@ LL | #![deny(clippy::unused_unit)]\n    |         ^^^^^^^^^^^^^^^^^^^\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:28:19\n+  --> $DIR/unused_unit.rs:29:19\n    |\n LL |     fn into(self) -> () {\n    |                   ^^^^^ help: remove the `-> ()`\n \n error: unneeded unit expression\n-  --> $DIR/unused_unit.rs:29:9\n+  --> $DIR/unused_unit.rs:30:9\n    |\n LL |         ()\n    |         ^^ help: remove the final `()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:33:18\n+  --> $DIR/unused_unit.rs:34:18\n    |\n LL | fn return_unit() -> () { () }\n    |                  ^^^^^ help: remove the `-> ()`\n \n error: unneeded unit expression\n-  --> $DIR/unused_unit.rs:33:26\n+  --> $DIR/unused_unit.rs:34:26\n    |\n LL | fn return_unit() -> () { () }\n    |                          ^^ help: remove the final `()`\n \n error: unneeded `()`\n-  --> $DIR/unused_unit.rs:42:14\n+  --> $DIR/unused_unit.rs:43:14\n    |\n LL |         break();\n    |              ^^ help: remove the `()`\n \n error: unneeded `()`\n-  --> $DIR/unused_unit.rs:44:11\n+  --> $DIR/unused_unit.rs:45:11\n    |\n LL |     return();\n    |           ^^ help: remove the `()`"}]}