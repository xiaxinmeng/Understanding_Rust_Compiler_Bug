{"sha": "ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjYmE0M2RmODFkNWJkYTM3YzllNGQyMzFhZDQ0NDNlNmYzYTdlNDQ=", "commit": {"author": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2019-01-09T14:15:18Z"}, "committer": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2019-01-09T14:15:18Z"}, "message": "Merge remote-tracking branch 'upstream/master'", "tree": {"sha": "efe674e2d5ae721f38fa8558385e0a2f12997227", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efe674e2d5ae721f38fa8558385e0a2f12997227"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "html_url": "https://github.com/rust-lang/rust/commit/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/comments", "author": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9f71cc32497ee4e3cbc7d9795bcf358a9268c13", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9f71cc32497ee4e3cbc7d9795bcf358a9268c13", "html_url": "https://github.com/rust-lang/rust/commit/f9f71cc32497ee4e3cbc7d9795bcf358a9268c13"}, {"sha": "664c7797f6bfddf9f5e67474c2fd8017f91d7110", "url": "https://api.github.com/repos/rust-lang/rust/commits/664c7797f6bfddf9f5e67474c2fd8017f91d7110", "html_url": "https://github.com/rust-lang/rust/commit/664c7797f6bfddf9f5e67474c2fd8017f91d7110"}], "stats": {"total": 174562, "additions": 33961, "deletions": 140601}, "files": [{"sha": "67e0dd8e795bb596d66fa4eda1899b06543270c7", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -13,6 +13,7 @@ __pycache__/\n .settings/\n .valgrindrc\n .vscode/\n+.favorites.json\n /*-*-*-*/\n /*-*-*/\n /Makefile"}, {"sha": "c4763612dbf3cc85d8682775b79d3297e6ec8c69", "filename": ".gitmodules", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/.gitmodules", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/.gitmodules", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitmodules?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -41,9 +41,6 @@\n [submodule \"src/tools/lld\"]\n \tpath = src/tools/lld\n \turl = https://github.com/rust-lang/lld.git\n-[submodule \"src/libbacktrace\"]\n-\tpath = src/libbacktrace\n-\turl = https://github.com/rust-lang-nursery/libbacktrace.git\n [submodule \"src/tools/lldb\"]\n \tpath = src/tools/lldb\n \turl = https://github.com/rust-lang-nursery/lldb.git"}, {"sha": "c4efa88460325cafdb42f84d15e1e8938f97cfc4", "filename": ".travis.yml", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,6 +1,6 @@\n language: shell\n sudo: required\n-dist: trusty\n+dist: xenial\n services:\n   - docker\n addons:\n@@ -248,6 +248,15 @@ before_script:\n           # Enable core dump on Linux.\n           sudo sh -c 'echo \"/checkout/obj/cores/core.%p.%E\" > /proc/sys/kernel/core_pattern';\n       fi\n+  - >\n+      if [ \"$IMAGE\" = mingw-check ]; then\n+        # verify the publish_toolstate script works.\n+        git clone --depth=1 https://github.com/rust-lang-nursery/rust-toolstate.git;\n+        cd rust-toolstate;\n+        python2.7 \"$TRAVIS_BUILD_DIR/src/tools/publish_toolstate.py\" \"$(git rev-parse HEAD)\" \"$(git log --format=%s -n1 HEAD)\" \"\" \"\";\n+        cd ..;\n+        rm -rf rust-toolstate;\n+      fi\n \n # Log time information from this machine and an external machine for insight into possible\n # clock drift. Timezones don't matter since relative deltas give all the necessary info."}, {"sha": "ece8dedb0aed7aa74e271336d83aa2cbd35a49e9", "filename": "CODE_OF_CONDUCT.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/CODE_OF_CONDUCT.md", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/CODE_OF_CONDUCT.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CODE_OF_CONDUCT.md?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -35,6 +35,6 @@ And if someone takes issue with something you said or did, resist the urge to be\n \n The enforcement policies listed above apply to all official Rust venues; including official IRC channels (#rust, #rust-internals, #rust-tools, #rust-libs, #rustc, #rust-beginners, #rust-docs, #rust-community, #rust-lang, and #cargo); GitHub repositories under rust-lang, rust-lang-nursery, and rust-lang-deprecated; and all forums under rust-lang.org (users.rust-lang.org, internals.rust-lang.org). For other projects adopting the Rust Code of Conduct, please contact the maintainers of those projects for enforcement. If you wish to use this code of conduct for your own project, consider explicitly mentioning your moderation policy or making a copy with your own moderation policy so as to avoid confusion.\n \n-*Adapted from the [Node.js Policy on Trolling](http://blog.izs.me/post/30036893703/policy-on-trolling) as well as the [Contributor Covenant v1.3.0](https://www.contributor-covenant.org/version/1/3/0/).*\n+*Adapted from the [Node.js Policy on Trolling](https://blog.izs.me/2012/08/policy-on-trolling) as well as the [Contributor Covenant v1.3.0](https://www.contributor-covenant.org/version/1/3/0/).*\n \n [mod_team]: https://www.rust-lang.org/team.html#Moderation-team"}, {"sha": "6596c5a3d9aff0e5f450ba05c826cb34bcabf3b4", "filename": "COPYRIGHT", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/COPYRIGHT", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/COPYRIGHT", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/COPYRIGHT?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -229,35 +229,3 @@ their own copyright notices and license terms:\n     NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n     USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n     OF SUCH DAMAGE.  */\n-\n-* jemalloc, under src/jemalloc:\n-\n-    Copyright (C) 2002-2014 Jason Evans\n-    <jasone@canonware.com>. All rights reserved.\n-    Copyright (C) 2007-2012 Mozilla Foundation.\n-    All rights reserved.\n-    Copyright (C) 2009-2014 Facebook, Inc.\n-    All rights reserved.\n-\n-    Redistribution and use in source and binary forms, with or without\n-    modification, are permitted provided that the following conditions are met:\n-    1. Redistributions of source code must retain the above copyright notice(s),\n-       this list of conditions and the following disclaimer.\n-    2. Redistributions in binary form must reproduce the above copyright notice(s),\n-       this list of conditions and the following disclaimer in the documentation\n-       and/or other materials provided with the distribution.\n-\n-    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER(S)\n-    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,\n-    INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n-    MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n-    DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER(S)\n-    BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n-    EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n-    LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n-    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n-    HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER\n-    IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n-    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n-    USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n-    OF SUCH DAMAGE."}, {"sha": "1fde5ac8cb15a25e813549b416b275ba528255c4", "filename": "Cargo.lock", "status": "modified", "additions": 177, "deletions": 163, "changes": 340, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -15,9 +15,10 @@ dependencies = [\n name = \"alloc\"\n version = \"0.0.0\"\n dependencies = [\n- \"compiler_builtins 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n  \"rand 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_xorshift 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -74,7 +75,7 @@ name = \"atty\"\n version = \"0.2.11\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -84,20 +85,22 @@ name = \"backtrace\"\n version = \"0.3.11\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"backtrace-sys 0.1.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"backtrace-sys 0.1.27 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-demangle 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"backtrace-sys\"\n-version = \"0.1.24\"\n+version = \"0.1.27\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-std-workspace-core 1.0.0\",\n ]\n \n [[package]]\n@@ -133,11 +136,11 @@ dependencies = [\n  \"filetime 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"getopts 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num_cpus 1.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"petgraph 0.4.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pretty_assertions 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"time 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -153,7 +156,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n name = \"build-manifest\"\n version = \"0.1.0\"\n dependencies = [\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"toml 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -191,6 +194,7 @@ version = \"0.34.0\"\n dependencies = [\n  \"atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"bufstream 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"bytesize 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core-foundation 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -205,8 +209,8 @@ dependencies = [\n  \"flate2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"fs2 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"fwdansi 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"git2 0.7.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"git2-curl 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"git2 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"git2-curl 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"glob 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"hex 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"home 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -215,21 +219,20 @@ dependencies = [\n  \"jobserver 0.1.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazycell 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libgit2-sys 0.7.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libgit2-sys 0.7.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"miow 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num_cpus 1.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"opener 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"openssl 0.10.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"openssl 0.10.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pretty_env_logger 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"proptest 0.8.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-workspace-hack 1.0.0\",\n- \"rustfix 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustfix 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"same-file 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_ignored 0.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"shell-escape 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -239,6 +242,7 @@ dependencies = [\n  \"toml 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"url_serde 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -249,7 +253,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"error-chain 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -270,7 +274,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"chalk-engine\"\n-version = \"0.8.0\"\n+version = \"0.9.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"chalk-macros 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -318,14 +322,14 @@ dependencies = [\n  \"clippy-mini-macro-test 0.2.0\",\n  \"clippy_dev 0.0.1\",\n  \"clippy_lints 0.0.212\",\n- \"compiletest_rs 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiletest_rs 0.3.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"derive-new 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-workspace-hack 1.0.0\",\n- \"rustc_tools_util 0.1.0\",\n+ \"rustc_tools_util 0.1.1\",\n  \"semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -357,7 +361,7 @@ dependencies = [\n  \"quine-mc_cluskey 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex-syntax 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smallvec 0.6.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"toml 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -402,12 +406,12 @@ name = \"commoncrypto-sys\"\n version = \"0.2.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"compiler_builtins\"\n-version = \"0.1.2\"\n+version = \"0.1.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -423,30 +427,32 @@ dependencies = [\n  \"filetime 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"getopts 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"miow 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustfix 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustfix 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"walkdir 2.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"compiletest_rs\"\n-version = \"0.3.17\"\n+version = \"0.3.18\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"diff 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"filetime 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"getopts 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"miow 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustfix 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"tempfile 3.0.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -466,7 +472,7 @@ version = \"0.6.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"core-foundation-sys 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -480,7 +486,7 @@ version = \"0.22.0\"\n dependencies = [\n  \"curl 0.4.19 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"failure 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -578,7 +584,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"commoncrypto 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"hex 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"openssl 0.10.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"openssl 0.10.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -589,9 +595,9 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"curl-sys 0.4.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"openssl-probe 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"openssl-sys 0.9.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"openssl-sys 0.9.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"schannel 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"socket2 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -603,18 +609,18 @@ version = \"0.4.15\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libnghttp2-sys 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libz-sys 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"openssl-sys 0.9.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"openssl-sys 0.9.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pkg-config 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"vcpkg 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"datafrog\"\n-version = \"0.1.0\"\n+version = \"2.0.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -653,7 +659,7 @@ name = \"directories\"\n version = \"1.0.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -662,8 +668,8 @@ name = \"dlmalloc\"\n version = \"0.1.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"compiler_builtins 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-std-workspace-core 1.0.0\",\n ]\n \n@@ -679,7 +685,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"strum 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -772,7 +778,7 @@ version = \"0.2.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -787,7 +793,7 @@ version = \"1.0.6\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"crc32fast 1.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libz-sys 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"miniz-sys 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"miniz_oxide_c_api 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -817,10 +823,10 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"fortanix-sgx-abi\"\n-version = \"0.3.1\"\n+version = \"0.3.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"compiler_builtins 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-std-workspace-core 1.0.0\",\n ]\n \n@@ -829,7 +835,7 @@ name = \"fs2\"\n version = \"0.4.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -890,25 +896,25 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"git2\"\n-version = \"0.7.5\"\n+version = \"0.8.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libgit2-sys 0.7.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libgit2-sys 0.7.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"openssl-probe 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"openssl-sys 0.9.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"openssl-sys 0.9.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"git2-curl\"\n-version = \"0.8.2\"\n+version = \"0.9.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"curl 0.4.19 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"git2 0.7.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"git2 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -945,7 +951,7 @@ dependencies = [\n  \"pest_derive 1.0.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1073,15 +1079,15 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"fs_extra 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"jobserver\"\n version = \"0.1.12\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -1093,12 +1099,12 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"jsonrpc-core\"\n-version = \"8.0.1\"\n+version = \"9.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"log 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -1120,7 +1126,7 @@ dependencies = [\n  \"bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num-derive 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num-traits 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1144,23 +1150,23 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"libc\"\n-version = \"0.2.45\"\n+version = \"0.2.46\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"rustc-std-workspace-core 1.0.0\",\n ]\n \n [[package]]\n name = \"libgit2-sys\"\n-version = \"0.7.10\"\n+version = \"0.7.11\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"curl-sys 0.4.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libssh2-sys 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libz-sys 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"openssl-sys 0.9.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"openssl-sys 0.9.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pkg-config 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1170,7 +1176,7 @@ version = \"0.1.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1179,9 +1185,9 @@ version = \"0.2.11\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libz-sys 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"openssl-sys 0.9.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"openssl-sys 0.9.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pkg-config 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"vcpkg 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -1192,7 +1198,7 @@ version = \"1.0.25\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pkg-config 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"vcpkg 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -1210,14 +1216,6 @@ dependencies = [\n  \"scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"log\"\n-version = \"0.3.9\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"log\"\n version = \"0.4.6\"\n@@ -1241,7 +1239,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"filetime 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pkg-config 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1267,7 +1265,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"phf 0.7.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"phf_codegen 0.7.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"string_cache 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1299,7 +1297,7 @@ dependencies = [\n  \"open 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pulldown-cmark 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"shlex 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1314,7 +1312,7 @@ version = \"2.1.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1323,7 +1321,7 @@ name = \"memmap\"\n version = \"0.6.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1346,7 +1344,7 @@ version = \"0.1.11\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1364,7 +1362,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"crc 1.8.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"miniz_oxide 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1384,10 +1382,12 @@ dependencies = [\n  \"byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cargo_metadata 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"colored 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"compiletest_rs 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiletest_rs 0.3.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"directories 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"env_logger 0.5.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"env_logger 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-workspace-hack 1.0.0\",\n+ \"rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"vergen 3.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1433,7 +1433,7 @@ name = \"num_cpus\"\n version = \"1.8.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1453,15 +1453,15 @@ dependencies = [\n \n [[package]]\n name = \"openssl\"\n-version = \"0.10.15\"\n+version = \"0.10.16\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"foreign-types 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"openssl-sys 0.9.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"openssl-sys 0.9.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1479,11 +1479,11 @@ dependencies = [\n \n [[package]]\n name = \"openssl-sys\"\n-version = \"0.9.39\"\n+version = \"0.9.40\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"openssl-src 111.1.0+1.1.1a (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pkg-config 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"vcpkg 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1519,19 +1519,19 @@ dependencies = [\n name = \"panic_abort\"\n version = \"0.0.0\"\n dependencies = [\n- \"compiler_builtins 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"panic_unwind\"\n version = \"0.0.0\"\n dependencies = [\n  \"alloc 0.0.0\",\n- \"compiler_builtins 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unwind 0.0.0\",\n ]\n \n@@ -1549,7 +1549,7 @@ name = \"parking_lot_core\"\n version = \"0.3.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand 0.5.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smallvec 0.6.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1625,10 +1625,10 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"polonius-engine\"\n-version = \"0.5.0\"\n+version = \"0.6.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"datafrog 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"datafrog 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -1682,7 +1682,7 @@ name = \"profiler_builtins\"\n version = \"0.0.0\"\n dependencies = [\n  \"cc 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"compiler_builtins 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n ]\n \n@@ -1774,7 +1774,7 @@ version = \"0.4.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1785,7 +1785,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_core 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -1797,7 +1797,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_chacha 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1879,7 +1879,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"crossbeam-deque 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num_cpus 1.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -1961,10 +1961,12 @@ dependencies = [\n  \"cargo_metadata 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"clippy_lints 0.0.212\",\n  \"crossbeam-channel 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"difference 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"env_logger 0.5.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"failure 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"home 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"jsonrpc-core 8.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"jsonrpc-core 9.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"languageserver-types 0.51.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1982,11 +1984,12 @@ dependencies = [\n  \"rls-vfs 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-workspace-hack 1.0.0\",\n- \"rustc_tools_util 0.1.0\",\n+ \"rustc_tools_util 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustfmt-nightly 1.0.1\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"tempfile 3.0.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"toml 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"walkdir 2.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2019,7 +2022,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"rls-span 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -2034,7 +2037,7 @@ version = \"0.4.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -2063,15 +2066,15 @@ dependencies = [\n  \"backtrace 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"chalk-engine 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"chalk-engine 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"flate2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"fmt_macros 0.0.0\",\n  \"graphviz 0.0.0\",\n  \"jobserver 0.1.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"polonius-engine 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"polonius-engine 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-rayon 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-rayon-core 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc_apfloat 0.0.0\",\n@@ -2198,7 +2201,7 @@ name = \"rustc-demangle\"\n version = \"0.1.10\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"compiler_builtins 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-std-workspace-core 1.0.0\",\n ]\n \n@@ -2214,6 +2217,7 @@ dependencies = [\n name = \"rustc-main\"\n version = \"0.0.0\"\n dependencies = [\n+ \"jemalloc-sys 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc_codegen_ssa 0.0.0\",\n  \"rustc_driver 0.0.0\",\n  \"rustc_target 0.0.0\",\n@@ -2235,7 +2239,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"crossbeam-deque 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num_cpus 1.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -2256,8 +2260,11 @@ dependencies = [\n name = \"rustc-workspace-hack\"\n version = \"1.0.0\"\n dependencies = [\n+ \"byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand 0.5.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smallvec 0.6.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"syn 0.15.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2294,7 +2301,7 @@ dependencies = [\n  \"alloc 0.0.0\",\n  \"build_helper 0.1.0\",\n  \"cmake 0.1.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"compiler_builtins 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n ]\n \n@@ -2330,7 +2337,7 @@ dependencies = [\n  \"bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cc 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"jobserver 0.1.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"memmap 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num_cpus 1.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2400,7 +2407,6 @@ dependencies = [\n  \"arena 0.0.0\",\n  \"env_logger 0.5.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"graphviz 0.0.0\",\n- \"jemalloc-sys 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc 0.0.0\",\n  \"rustc-rayon 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2489,7 +2495,7 @@ dependencies = [\n  \"alloc 0.0.0\",\n  \"build_helper 0.1.0\",\n  \"cmake 0.1.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"compiler_builtins 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n ]\n \n@@ -2522,7 +2528,7 @@ dependencies = [\n  \"graphviz 0.0.0\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log_settings 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"polonius-engine 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"polonius-engine 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc 0.0.0\",\n  \"rustc_apfloat 0.0.0\",\n  \"rustc_data_structures 0.0.0\",\n@@ -2541,7 +2547,7 @@ dependencies = [\n  \"alloc 0.0.0\",\n  \"build_helper 0.1.0\",\n  \"cmake 0.1.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"compiler_builtins 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n ]\n \n@@ -2629,14 +2635,19 @@ dependencies = [\n \n [[package]]\n name = \"rustc_tools_util\"\n-version = \"0.1.0\"\n+version = \"0.1.1\"\n+\n+[[package]]\n+name = \"rustc_tools_util\"\n+version = \"0.1.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"rustc_traits\"\n version = \"0.0.0\"\n dependencies = [\n  \"bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"chalk-engine 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"chalk-engine 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"graphviz 0.0.0\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc 0.0.0\",\n@@ -2654,7 +2665,7 @@ dependencies = [\n  \"alloc 0.0.0\",\n  \"build_helper 0.1.0\",\n  \"cmake 0.1.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"compiler_builtins 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n ]\n \n@@ -2705,12 +2716,12 @@ dependencies = [\n \n [[package]]\n name = \"rustfix\"\n-version = \"0.4.2\"\n+version = \"0.4.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"failure 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -2736,7 +2747,7 @@ dependencies = [\n  \"rustc-ap-syntax 306.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-ap-syntax_pos 306.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-workspace-hack 1.0.0\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"term 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2793,7 +2804,7 @@ version = \"0.9.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -2803,8 +2814,11 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"serde\"\n-version = \"1.0.81\"\n+version = \"1.0.82\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n \n [[package]]\n name = \"serde_derive\"\n@@ -2821,7 +2835,7 @@ name = \"serde_ignored\"\n version = \"0.0.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -2831,7 +2845,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"itoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ryu 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -2870,7 +2884,7 @@ version = \"0.3.8\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -2885,13 +2899,13 @@ name = \"std\"\n version = \"0.0.0\"\n dependencies = [\n  \"alloc 0.0.0\",\n- \"build_helper 0.1.0\",\n+ \"backtrace-sys 0.1.27 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cc 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"compiler_builtins 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n  \"dlmalloc 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"fortanix-sgx-abi 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"fortanix-sgx-abi 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"panic_abort 0.0.0\",\n  \"panic_unwind 0.0.0\",\n  \"profiler_builtins 0.0.0\",\n@@ -2913,7 +2927,7 @@ dependencies = [\n  \"new_debug_unreachable 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"phf_shared 0.7.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"precomputed-hash 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"string_cache_codegen 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"string_cache_shared 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -3042,7 +3056,7 @@ version = \"0.4.20\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"filetime 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"xattr 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -3053,7 +3067,7 @@ version = \"3.0.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"remove_dir_all 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -3096,7 +3110,7 @@ name = \"termion\"\n version = \"1.5.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -3130,7 +3144,7 @@ dependencies = [\n name = \"tidy\"\n version = \"0.1.0\"\n dependencies = [\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -3140,7 +3154,7 @@ name = \"time\"\n version = \"0.1.40\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -3150,7 +3164,7 @@ name = \"toml\"\n version = \"0.4.10\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -3228,9 +3242,9 @@ dependencies = [\n name = \"unwind\"\n version = \"0.0.0\"\n dependencies = [\n- \"compiler_builtins 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -3248,7 +3262,7 @@ name = \"url_serde\"\n version = \"0.2.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -3297,7 +3311,7 @@ name = \"wait-timeout\"\n version = \"0.1.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -3361,7 +3375,7 @@ name = \"xattr\"\n version = \"0.2.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -3386,7 +3400,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum assert_cli 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"98589b0e465a6c510d95fceebd365bb79bedece7f6e18a480897f2015f85ec51\"\n \"checksum atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9a7d5b8723950951411ee34d271d99dddcc2035a16ab25310ea2c8cfd4369652\"\n \"checksum backtrace 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"18b65ea1161bfb2dd6da6fade5edd4dbd08fba85012123dd333d2fd1b90b2782\"\n-\"checksum backtrace-sys 0.1.24 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c66d56ac8dabd07f6aacdaf633f4b8262f5b3601a810a0dcddffd5c22c69daa0\"\n+\"checksum backtrace-sys 0.1.27 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6ea90dd7b012b3d1a2cb6bec16670a0db2c95d4e931e84f4047e0460c1b34c8d\"\n \"checksum bit-set 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6f1efcc46c18245a69c38fcc5cc650f16d3a59d034f3106e9ed63748f695730a\"\n \"checksum bit-vec 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4440d5cb623bb7390ae27fec0bb6c61111969860f8e3ae198bfa0663645e67cf\"\n \"checksum bitflags 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4efd02e230a02e18f92fc2735f44597385ed02ad8f831e7c1c1156ee5e1ab3a5\"\n@@ -3399,7 +3413,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum cargo_metadata 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7d8dfe3adeb30f7938e6c1dd5327f29235d8ada3e898aeb08c343005ec2915a2\"\n \"checksum cc 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f159dfd43363c4d08055a07703eb7a3406b0dac4d0584d96965a3262db3c9d16\"\n \"checksum cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"082bb9b28e00d3c9d39cc03e64ce4cea0f1bb9b3fde493f0cbc008472d22bdf4\"\n-\"checksum chalk-engine 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6749eb72e7d4355d944a99f15fbaea701b978c18c5e184a025fcde942b0c9779\"\n+\"checksum chalk-engine 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"17ec698a6f053a23bfbe646d9f2fde4b02abc19125595270a99e6f44ae0bdd1a\"\n \"checksum chalk-macros 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"295635afd6853aa9f20baeb7f0204862440c0fe994c5a253d5f479dac41d047e\"\n \"checksum chrono 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"45912881121cb26fad7c38c17ba7daa18764771836b34fab7d3fbd93ed633878\"\n \"checksum clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b957d88f4b6a63b9d70d5f454ac8011819c6efa7727858f458ab71c756ce2d3e\"\n@@ -3408,8 +3422,8 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum colored 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b0aa3473e85a3161b59845d6096b289bb577874cafeaf75ea1b1beaa6572c7fc\"\n \"checksum commoncrypto 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d056a8586ba25a1e4d61cb090900e495952c7886786fc55f909ab2f819b69007\"\n \"checksum commoncrypto-sys 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1fed34f46747aa73dfaa578069fd8279d2818ade2b55f38f22a9401c7f4083e2\"\n-\"checksum compiler_builtins 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8ad611263b9f31bdb66e66227d3b781600fd1e68d5deee29b23f5e2ac9cb4892\"\n-\"checksum compiletest_rs 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)\" = \"89747fe073b7838343bd2c2445e7a7c2e0d415598f8925f0fa9205b9cdfc48cb\"\n+\"checksum compiler_builtins 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bd14d75a16b6c836c62350e2e8c85495ed8e13df30a7298c574cb1ee4cdac7bc\"\n+\"checksum compiletest_rs 0.3.18 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0d76d4322a40f6b0db7259d4f2c8a65ed8b0d84fce0bbc61b98cf47f8ec6eec3\"\n \"checksum core-foundation 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4e2640d6d0bf22e82bed1b73c6aef8d5dd31e5abe6666c57e6d45e2649f4f887\"\n \"checksum core-foundation-sys 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e7ca8a5221364ef15ce201e8ed2f609fc312682a8f4e0e3d4aa5879764e0fa3b\"\n \"checksum crc 1.8.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d663548de7f5cca343f1e0a48d14dcfb0e9eb4e079ec58883b7251539fa10aeb\"\n@@ -3424,7 +3438,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum crypto-hash 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"09de9ee0fc255ace04c7fa0763c9395a945c37c8292bb554f8d48361d1dcf1b4\"\n \"checksum curl 0.4.19 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c7c9d851c825e0c033979d4516c9173bc19a78a96eb4d6ae51d4045440eafa16\"\n \"checksum curl-sys 0.4.15 (registry+https://github.com/rust-lang/crates.io-index)\" = \"721c204978be2143fab0a84b708c49d79d1f6100b8785610f456043a90708870\"\n-\"checksum datafrog 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"16d724bf4ffe77cdceeecd461009b5f8d9e23c5d645d68bedb4586bf43e7e142\"\n+\"checksum datafrog 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a0afaad2b26fa326569eb264b1363e8ae3357618c43982b3f285f0774ce76b69\"\n \"checksum derive-new 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6ca414e896ae072546f4d789f452daaecf60ddee4c9df5dc6d5936d769e3d87c\"\n \"checksum derive_more 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3f57d78cf3bd45270dad4e70c21ec77a960b36c7a841ff9db76aaa775a8fb871\"\n \"checksum diff 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3c2b69f912779fbb121ceb775d74d51e915af17aaebc38d28a592843a2dd0a3a\"\n@@ -3447,7 +3461,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2fad85553e09a6f881f739c29f0b00b0f01357c743266d478b68951ce23285f3\"\n \"checksum foreign-types 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1\"\n \"checksum foreign-types-shared 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b\"\n-\"checksum fortanix-sgx-abi 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"26105e20b4c3f7a319db1376b54ac9a46e5761e949405553375095d05a0cee4d\"\n+\"checksum fortanix-sgx-abi 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3f8cbee5e872cf7db61a999a041f9bc4706ca7bf7df4cb914f53fabb1c1bc550\"\n \"checksum fs2 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9564fc758e15025b46aa6643b1b77d047d1a56a1aea6e01002ac0c7026876213\"\n \"checksum fs_extra 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5f2a4a2034423744d2cc7ca2068453168dcdb82c438419e639a26bd87839c674\"\n \"checksum fst 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d94485a00b1827b861dd9d1a2cc9764f9044d4c535514c0760a5a2012ef3399f\"\n@@ -3457,8 +3471,8 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1a70b146671de62ec8c8ed572219ca5d594d9b06c0b364d5e67b722fc559b48c\"\n \"checksum fwdansi 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"34dd4c507af68d37ffef962063dfa1944ce0dd4d5b82043dbab1dabe088610c3\"\n \"checksum getopts 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b900c08c1939860ce8b54dc6a89e26e00c04c380fd0e09796799bd7f12861e05\"\n-\"checksum git2 0.7.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"591f8be1674b421644b6c030969520bc3fa12114d2eb467471982ed3e9584e71\"\n-\"checksum git2-curl 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0173e317f8ba21f3fff0f71549fead5e42e67961dbd402bf69f42775f3cc78b4\"\n+\"checksum git2 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c7339329bfa14a00223244311560d11f8f489b453fb90092af97f267a6090ab0\"\n+\"checksum git2-curl 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d58551e903ed7e2d6fe3a2f3c7efa3a784ec29b19d0fbb035aaf0497c183fbdd\"\n \"checksum glob 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8be18de09a56b60ed0edf84bc9df007e30040691af7acd1c41874faac5895bfb\"\n \"checksum globset 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4743617a7464bbda3c8aec8558ff2f9429047e025771037df561d383337ff865\"\n \"checksum handlebars 0.32.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d89ec99d1594f285d4590fc32bac5f75cdab383f1123d504d27862c644a807dd\"\n@@ -3477,19 +3491,18 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum jemalloc-sys 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bfc62c8e50e381768ce8ee0428ee53741929f7ebd73e4d83f669bcf7693e00ae\"\n \"checksum jobserver 0.1.12 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dd80e58f77e0cdea53ba96acc5e04479e5ffc5d869626a6beafe50fed867eace\"\n \"checksum json 0.11.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9ad0485404155f45cce53a40d4b2d6ac356418300daed05273d9e26f91c390be\"\n-\"checksum jsonrpc-core 8.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ddf83704f4e79979a424d1082dd2c1e52683058056c9280efa19ac5f6bc9033c\"\n+\"checksum jsonrpc-core 9.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4e9cbeda300803d381390fb65e8158437728c39e6987ed23bee82728b73511a7\"\n \"checksum kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d\"\n \"checksum languageserver-types 0.51.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"68de833188ada4e175d04a028f03f244f6370eedbcc75a05604d47d925933f69\"\n \"checksum lazy_static 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"76f033c7ad61445c5b347c7382dd1237847eb1bce590fe50365dcb33d546be73\"\n \"checksum lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a374c89b9db55895453a74c1e38861d9deec0b01b405a82516e9d5de4820dea1\"\n \"checksum lazycell 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b294d6fa9ee409a054354afc4352b0b9ef7ca222c69b8812cbea9e7d2bf3783f\"\n-\"checksum libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2d2857ec59fadc0773853c664d2d18e7198e83883e7060b63c924cb077bd5c74\"\n-\"checksum libgit2-sys 0.7.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4916b5addc78ec36cc309acfcdf0b9f9d97ab7b84083118b248709c5b7029356\"\n+\"checksum libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\" = \"023a4cd09b2ff695f9734c1934145a315594b7986398496841c7031a5a1bbdbd\"\n+\"checksum libgit2-sys 0.7.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"48441cb35dc255da8ae72825689a95368bf510659ae1ad55dc4aa88cb1789bf1\"\n \"checksum libnghttp2-sys 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d75d7966bda4730b722d1eab8e668df445368a24394bae9fc1e8dc0ab3dbe4f4\"\n \"checksum libssh2-sys 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"126a1f4078368b163bfdee65fbab072af08a1b374a5551b21e87ade27b1fbf9d\"\n \"checksum libz-sys 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2eb5e43362e38e2bca2fd5f5134c4d4564a23a5c28e9b95411652021a8675ebe\"\n \"checksum lock_api 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"949826a5ccf18c1b3a7c3d57692778d21768b79e46eb9dd07bfc4c2160036c54\"\n-\"checksum log 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e19e8d5c34a3e0e2223db8e060f9e8264aeeb5c5fc64a4ee9965c062211c024b\"\n \"checksum log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c84ec4b527950aa83a329754b01dbe3f58361d1c5efacd1f6d68c494d08a17c6\"\n \"checksum log_settings 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"19af41f0565d7c19b2058153ad0b42d4d5ce89ec4dbf06ed6741114a8b63e7cd\"\n \"checksum lzma-sys 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d1eaa027402541975218bb0eec67d6b0412f6233af96e0d096d31dbdfd22e614\"\n@@ -3515,10 +3528,10 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum num_cpus 1.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c51a3322e4bca9d212ad9a158a02abc6934d005490c054a2778df73a70aa0a30\"\n \"checksum open 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c281318d992e4432cfa799969467003d05921582a7489a8325e37f8a450d5113\"\n \"checksum opener 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"04b1d6b086d9b3009550f9b6f81b10ad9428cf14f404b8e1a3a06f6f012c8ec9\"\n-\"checksum openssl 0.10.15 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5e1309181cdcbdb51bc3b6bedb33dfac2a83b3d585033d3f6d9e22e8c1928613\"\n+\"checksum openssl 0.10.16 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ec7bd7ca4cce6dbdc77e7c1230682740d307d1218a87fb0349a571272be749f9\"\n \"checksum openssl-probe 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"77af24da69f9d9341038eba93a073b1fdaaa1b788221b00a69bce9e762cb32de\"\n \"checksum openssl-src 111.1.0+1.1.1a (registry+https://github.com/rust-lang/crates.io-index)\" = \"26bb632127731bf4ac49bf86a5dde12d2ca0918c2234fc39d79d4da2ccbc6da7\"\n-\"checksum openssl-sys 0.9.39 (registry+https://github.com/rust-lang/crates.io-index)\" = \"278c1ad40a89aa1e741a1eed089a2f60b18fab8089c3139b542140fc7d674106\"\n+\"checksum openssl-sys 0.9.40 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1bb974e77de925ef426b6bc82fce15fd45bdcbeb5728bffcfc7cdeeb7ce1c2d6\"\n \"checksum ordermap 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a86ed3f5f244b372d6b1a00b72ef7f8876d0bc6a78a4c9985c53614041512063\"\n \"checksum ordslice 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dd20eec3dbe4376829cb7d80ae6ac45e0a766831dca50202ff2d40db46a8a024\"\n \"checksum owning_ref 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cdf84f41639e037b484f93433aa3897863b561ed65c6e59c7073d7c561710f37\"\n@@ -3534,7 +3547,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum phf_generator 0.7.22 (registry+https://github.com/rust-lang/crates.io-index)\" = \"05a079dd052e7b674d21cb31cbb6c05efd56a2cd2827db7692e2f1a507ebd998\"\n \"checksum phf_shared 0.7.22 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c2261d544c2bb6aa3b10022b0be371b9c7c64f762ef28c6f5d4f1ef6d97b5930\"\n \"checksum pkg-config 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)\" = \"676e8eb2b1b4c9043511a9b7bea0915320d7e502b0a079fb03f9635a5252b18c\"\n-\"checksum polonius-engine 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a5b6b0a7f5f4278b991ffd14abce1d01b013121ad297460237ef0a2f08d43201\"\n+\"checksum polonius-engine 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2490c396085801abf88df91758bad806b0890354f0875d624e62ecf0579a8145\"\n \"checksum precomputed-hash 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"925383efa346730478fb4838dbe9137d2a47675ad789c546d150a6e1dd4ab31c\"\n \"checksum pretty_assertions 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3a029430f0d744bc3d15dd474d591bed2402b645d024583082b9f63bb936dac6\"\n \"checksum pretty_env_logger 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"df8b3f4e0475def7d9c2e5de8e5a1306949849761e107b360d03e98eafaffd61\"\n@@ -3588,8 +3601,9 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum rustc-rayon 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8c6d5a683c6ba4ed37959097e88d71c9e8e26659a3cb5be8b389078e7ad45306\"\n \"checksum rustc-rayon-core 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"40f06724db71e18d68b3b946fdf890ca8c921d9edccc1404fdfdb537b0d12649\"\n \"checksum rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dcf128d1287d2ea9d80910b5f1120d0b8eede3fbf1abe91c40d39ea7d51e6fda\"\n+\"checksum rustc_tools_util 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b3c5a95edfa0c893236ae4778bb7c4752760e4c0d245e19b5eff33c5aa5eb9dc\"\n \"checksum rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"138e3e0acb6c9fb258b19b67cb8abd63c00679d2851805ea151465464fe9030a\"\n-\"checksum rustfix 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"756567f00f7d89c9f89a5c401b8b1caaa122e27240b9eaadd0bb52ee0b680b1b\"\n+\"checksum rustfix 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"af7c21531a91512a4a51b490be6ba1c8eff34fdda0dc5bf87dc28d86748aac56\"\n \"checksum rusty-fork 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9591f190d2852720b679c21f66ad929f9f1d7bb09d1193c26167586029d8489c\"\n \"checksum ryu 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"eb9e9b8cde282a9fe6a42dd4681319bfb63f121b8a8ee9439c6f4107e58a46f7\"\n \"checksum same-file 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8f20c4be53a8a1ff4c1f1b2bd14570d2f634628709752f0702ecdd2b3f9a5267\"\n@@ -3598,7 +3612,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"94258f53601af11e6a49f722422f6e3425c52b06245a5cf9bc09908b174f5e27\"\n \"checksum semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403\"\n \"checksum semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3\"\n-\"checksum serde 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c91eb5b0190ae87b4e2e39cbba6e3bed3ac6186935fe265f0426156c4c49961b\"\n+\"checksum serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6fa52f19aee12441d5ad11c9a00459122bd8f98707cadf9778c540674f1935b6\"\n \"checksum serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\" = \"477b13b646f5b5b56fc95bedfc3b550d12141ce84f466f6c44b9a17589923885\"\n \"checksum serde_ignored 0.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"190e9765dcedb56be63b6e0993a006c7e3b071a016a304736e4a315dc01fb142\"\n \"checksum serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c37ccd6be3ed1fdf419ee848f7c758eb31b054d7cd3ae3600e3bae0adf569811\""}, {"sha": "cb3c0ee194fe2e4f0a3cab2b46be70b7bf9ec1ef", "filename": "Cargo.toml", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -25,7 +25,6 @@ members = [\n   \"src/tools/rustdoc-themes\",\n ]\n exclude = [\n-  \"src/tools/rls/test_data\",\n   \"build\",\n   # HACK(eddyb) This hardcodes the fact that our CI uses `/checkout/obj`.\n   \"obj\",\n@@ -71,4 +70,3 @@ rustc-std-workspace-core = { path = 'src/tools/rustc-std-workspace-core' }\n \n [patch.\"https://github.com/rust-lang/rust-clippy\"]\n clippy_lints = { path = \"src/tools/clippy/clippy_lints\" }\n-rustc_tools_util = { path = \"src/tools/clippy/rustc_tools_util\" }"}, {"sha": "7eb5e8067eda2d1e30d9e6ff10e8648042bf8201", "filename": "README.md", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -186,18 +186,15 @@ fetch snapshots, and an OS that can execute the available snapshot binaries.\n \n Snapshot binaries are currently built and tested on several platforms:\n \n-| Platform / Architecture        | x86 | x86_64 |\n-|--------------------------------|-----|--------|\n-| Windows (7, 8, Server 2008 R2) | \u2713   | \u2713      |\n-| Linux (2.6.18 or later)        | \u2713   | \u2713      |\n-| OSX (10.7 Lion or later)       | \u2713   | \u2713      |\n+| Platform / Architecture  | x86 | x86_64 |\n+|--------------------------|-----|--------|\n+| Windows (7, 8, 10, ...)  | \u2713   | \u2713      |\n+| Linux (2.6.18 or later)  | \u2713   | \u2713      |\n+| OSX (10.7 Lion or later) | \u2713   | \u2713      |\n \n You may find that other platforms work, but these are our officially\n supported build environments that are most likely to work.\n \n-Rust currently needs between 600MiB and 1.5GiB of RAM to build, depending on platform.\n-If it hits swap, it will take a very long time to build.\n-\n There is more advice about hacking on Rust in [CONTRIBUTING.md].\n \n [CONTRIBUTING.md]: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"}, {"sha": "c68d358b6a67e03a8469a65b59b042bdb45da5de", "filename": "config.toml.example", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -90,6 +90,12 @@\n # with clang-cl, so this is special in that it only compiles LLVM with clang-cl\n #clang-cl = '/path/to/clang-cl.exe'\n \n+# Use libc++ when building LLVM instead of libstdc++. This is the default on\n+# platforms already use libc++ as the default C++ library, but this option\n+# allows you to use libc++ even on platforms when it's not. You need to ensure\n+# that your host compiler ships with libc++.\n+#use-libcxx = true\n+\n # =============================================================================\n # General build configuration options\n # =============================================================================\n@@ -171,7 +177,7 @@\n \n # Installs chosen set of extended tools if enables. By default builds all.\n # If chosen tool failed to build the installation fails.\n-#tools = [\"cargo\", \"rls\", \"rustfmt\", \"analysis\", \"src\"]\n+#tools = [\"cargo\", \"rls\", \"clippy\", \"rustfmt\", \"analysis\", \"src\"]\n \n # Verbosity level: 0 == not verbose, 1 == verbose, 2 == very verbose\n #verbose = 0"}, {"sha": "5e3625eb22e522f4a4edb679d4340eef5857556b", "filename": "src/bootstrap/bin/llvm-config-wrapper.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fbin%2Fllvm-config-wrapper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fbin%2Fllvm-config-wrapper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Fllvm-config-wrapper.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n // The sheer existence of this file is an awful hack. See the comments in\n // `src/bootstrap/native.rs` for why this is needed when compiling LLD.\n "}, {"sha": "8ddce5c247db65e83f7ba2f158b2e76428a94fde", "filename": "src/bootstrap/bin/main.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Fmain.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! rustbuild, the Rust build system\n //!\n //! This is the entry point for the build system used to compile the `rustc`"}, {"sha": "a0c75cd9e9476ac1dd715c4c6acdab24d46a8532", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Shim which is passed to Cargo as \"rustc\" when running the bootstrap.\n //!\n //! This shim will take care of some various tasks that our build process"}, {"sha": "dec74e60c71f3523348a506f1bac18d0ec05a5e7", "filename": "src/bootstrap/bin/rustdoc.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustdoc.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Shim which is passed to Cargo as \"rustdoc\" when running the bootstrap.\n //!\n //! See comments in `src/bootstrap/rustc.rs` for more information."}, {"sha": "f9e14d1ff6d30f9785a93b4a097b44e01675bc06", "filename": "src/bootstrap/bin/sccache-plus-cl.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fbin%2Fsccache-plus-cl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fbin%2Fsccache-plus-cl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Fsccache-plus-cl.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n extern crate cc;\n \n use std::env;"}, {"sha": "f3dbae6909a4d0d8add289e5eba224b6b7a73640", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2015-2016 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n from __future__ import absolute_import, division, print_function\n import argparse\n import contextlib\n@@ -681,7 +671,7 @@ def update_submodule(self, module, checked_out, recorded_submodules):\n         run([\"git\", \"submodule\", \"-q\", \"sync\", module],\n             cwd=self.rust_root, verbose=self.verbose)\n         run([\"git\", \"submodule\", \"update\",\n-            \"--init\", \"--recursive\", module],\n+            \"--init\", \"--recursive\", \"--progress\", module],\n             cwd=self.rust_root, verbose=self.verbose)\n         run([\"git\", \"reset\", \"-q\", \"--hard\"],\n             cwd=module_path, verbose=self.verbose)"}, {"sha": "689298f32d03c445ef73ba27cb2f71b269a3c15f", "filename": "src/bootstrap/bootstrap_test.py", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fbootstrap_test.py", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fbootstrap_test.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap_test.py?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2015-2016 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n \"\"\"Bootstrap tests\"\"\"\n \n from __future__ import absolute_import, division, print_function"}, {"sha": "9c58f5b179fd8b2afdadd48d4e4c31137b8157e1", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::any::Any;\n use std::cell::{Cell, RefCell};\n use std::collections::BTreeSet;\n@@ -459,6 +449,7 @@ impl<'a> Builder<'a> {\n                 dist::Rls,\n                 dist::Rustfmt,\n                 dist::Clippy,\n+                dist::Miri,\n                 dist::LlvmTools,\n                 dist::Lldb,\n                 dist::Extended,\n@@ -471,6 +462,7 @@ impl<'a> Builder<'a> {\n                 install::Rls,\n                 install::Rustfmt,\n                 install::Clippy,\n+                install::Miri,\n                 install::Analysis,\n                 install::Src,\n                 install::Rustc"}, {"sha": "ea8bc657a57aa9fbea4716e92d65638ca4cd8f26", "filename": "src/bootstrap/cache.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcache.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::any::{Any, TypeId};\n use std::borrow::Borrow;\n use std::cell::RefCell;"}, {"sha": "37844759c7b9a611000cb30cc331b54bc393ccd2", "filename": "src/bootstrap/cc_detect.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fcc_detect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fcc_detect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcc_detect.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! C-compiler probing and detection.\n //!\n //! This module will fill out the `cc` and `cxx` maps of `Build` by looking for"}, {"sha": "63741b9b677b4bf307ea3b57751f9b6679749d5e", "filename": "src/bootstrap/channel.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fchannel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fchannel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fchannel.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Build configuration for Rust's release channels.\n //!\n //! Implements the stable/beta/nightly channel distinctions by setting various"}, {"sha": "cc539d4c89571b0b371f3f3c3ea784c1997bc533", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Implementation of compiling the compiler and standard library, in \"check\" mode.\n \n use crate::compile::{run_cargo, std_cargo, test_cargo, rustc_cargo, rustc_cargo_env,\n@@ -48,7 +38,6 @@ impl Step for Std {\n         builder.info(&format!(\"Checking std artifacts ({} -> {})\", &compiler.host, target));\n         run_cargo(builder,\n                   &mut cargo,\n-                  vec![],\n                   &libstd_stamp(builder, compiler, target),\n                   true);\n \n@@ -95,7 +84,6 @@ impl Step for Rustc {\n         builder.info(&format!(\"Checking compiler artifacts ({} -> {})\", &compiler.host, target));\n         run_cargo(builder,\n                   &mut cargo,\n-                  vec![],\n                   &librustc_stamp(builder, compiler, target),\n                   true);\n \n@@ -146,7 +134,6 @@ impl Step for CodegenBackend {\n         let _folder = builder.fold_output(|| format!(\"stage{}-rustc_codegen_llvm\", compiler.stage));\n         run_cargo(builder,\n                   &mut cargo,\n-                  vec![],\n                   &codegen_backend_stamp(builder, compiler, target, backend),\n                   true);\n     }\n@@ -184,7 +171,6 @@ impl Step for Test {\n         builder.info(&format!(\"Checking test artifacts ({} -> {})\", &compiler.host, target));\n         run_cargo(builder,\n                   &mut cargo,\n-                  vec![],\n                   &libtest_stamp(builder, compiler, target),\n                   true);\n \n@@ -232,7 +218,6 @@ impl Step for Rustdoc {\n         println!(\"Checking rustdoc artifacts ({} -> {})\", &compiler.host, target);\n         run_cargo(builder,\n                   &mut cargo,\n-                  vec![],\n                   &rustdoc_stamp(builder, compiler, target),\n                   true);\n "}, {"sha": "74a2b7e4aa98b46126f2015bff522b63899c9bfe", "filename": "src/bootstrap/clean.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fclean.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Implementation of `make clean` in rustbuild.\n //!\n //! Responsible for cleaning out a build directory of all old and stale"}, {"sha": "8bc7c5838edda381d21fe5b4a40b9c7da2d9ebe6", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 11, "deletions": 51, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Implementation of compiling various phases of the compiler and standard\n //! library.\n //!\n@@ -29,6 +19,7 @@ use build_helper::{output, mtime, up_to_date};\n use filetime::FileTime;\n use serde_json;\n \n+use crate::dist;\n use crate::util::{exe, libdir, is_dylib};\n use crate::{Compiler, Mode, GitRepo};\n use crate::native;\n@@ -114,7 +105,6 @@ impl Step for Std {\n                 &compiler.host, target));\n         run_cargo(builder,\n                   &mut cargo,\n-                  vec![],\n                   &libstd_stamp(builder, compiler, target),\n                   false);\n \n@@ -375,7 +365,6 @@ impl Step for Test {\n                 &compiler.host, target));\n         run_cargo(builder,\n                   &mut cargo,\n-                  vec![],\n                   &libtest_stamp(builder, compiler, target),\n                   false);\n \n@@ -503,7 +492,6 @@ impl Step for Rustc {\n                  compiler.stage, &compiler.host, target));\n         run_cargo(builder,\n                   &mut cargo,\n-                  vec![],\n                   &librustc_stamp(builder, compiler, target),\n                   false);\n \n@@ -646,47 +634,18 @@ impl Step for CodegenBackend {\n \n         let out_dir = builder.cargo_out(compiler, Mode::Codegen, target);\n \n-        let mut cargo = builder.cargo(compiler, Mode::Codegen, target, \"rustc\");\n+        let mut cargo = builder.cargo(compiler, Mode::Codegen, target, \"build\");\n         cargo.arg(\"--manifest-path\")\n             .arg(builder.src.join(\"src/librustc_codegen_llvm/Cargo.toml\"));\n         rustc_cargo_env(builder, &mut cargo);\n \n         let features = build_codegen_backend(&builder, &mut cargo, &compiler, target, backend);\n \n-        let mut cargo_tails_args = vec![];\n-\n-        if builder.config.llvm_thin_lto {\n-            cargo_tails_args.push(\"--\".to_string());\n-\n-            let num_jobs = builder.jobs();\n-\n-            if !target.contains(\"msvc\") {\n-                // Here we assume that the linker is clang. If it's not, there'll\n-                // be linker errors.\n-                cargo_tails_args.push(\"-Clink-arg=-fuse-ld=lld\".to_string());\n-                cargo_tails_args.push(\"-Clink-arg=-flto=thin\".to_string());\n-\n-                if builder.config.llvm_optimize {\n-                    cargo_tails_args.push(\"-Clink-arg=-O2\".to_string());\n-                }\n-\n-                // Let's make LLD respect the `-j` option.\n-                let num_jobs_arg = format!(\"-Clink-arg=-Wl,--thinlto-jobs={}\", num_jobs);\n-                cargo_tails_args.push(num_jobs_arg);\n-            } else {\n-                // Here we assume that the linker is lld-link.exe. lld-link.exe\n-                // does not need the extra arguments except for num_jobs\n-                let num_jobs_arg = format!(\"-Clink-arg=/opt:lldltojobs={}\", num_jobs);\n-                cargo_tails_args.push(num_jobs_arg);\n-            }\n-        }\n-\n         let tmp_stamp = out_dir.join(\".tmp.stamp\");\n \n         let _folder = builder.fold_output(|| format!(\"stage{}-rustc_codegen_llvm\", compiler.stage));\n         let files = run_cargo(builder,\n                               cargo.arg(\"--features\").arg(features),\n-                              cargo_tails_args,\n                               &tmp_stamp,\n                               false);\n         if builder.config.dry_run {\n@@ -759,9 +718,14 @@ pub fn build_codegen_backend(builder: &Builder,\n                                          \"libstdc++.a\");\n                 cargo.env(\"LLVM_STATIC_STDCPP\", file);\n             }\n-            if builder.config.llvm_link_shared {\n+            if builder.config.llvm_link_shared ||\n+                (builder.config.llvm_thin_lto && backend != \"emscripten\")\n+            {\n                 cargo.env(\"LLVM_LINK_SHARED\", \"1\");\n             }\n+            if builder.config.llvm_use_libcxx {\n+                cargo.env(\"LLVM_USE_LIBCXX\", \"1\");\n+            }\n         }\n         _ => panic!(\"unknown backend: {}\", backend),\n     }\n@@ -999,6 +963,8 @@ impl Step for Assemble {\n             copy_lld_to_sysroot(builder, target_compiler, &lld_install);\n         }\n \n+        dist::maybe_install_llvm_dylib(builder, target_compiler.host, &sysroot);\n+\n         // Link the compiler binary itself into place\n         let out_dir = builder.cargo_out(build_compiler, Mode::Rustc, host);\n         let rustc = out_dir.join(exe(\"rustc_binary\", &*host));\n@@ -1025,7 +991,6 @@ pub fn add_to_sysroot(builder: &Builder, sysroot_dst: &Path, stamp: &Path) {\n \n pub fn run_cargo(builder: &Builder,\n                  cargo: &mut Command,\n-                 tail_args: Vec<String>,\n                  stamp: &Path,\n                  is_check: bool)\n     -> Vec<PathBuf>\n@@ -1048,7 +1013,7 @@ pub fn run_cargo(builder: &Builder,\n     // files we need to probe for later.\n     let mut deps = Vec::new();\n     let mut toplevel = Vec::new();\n-    let ok = stream_cargo(builder, cargo, tail_args, &mut |msg| {\n+    let ok = stream_cargo(builder, cargo, &mut |msg| {\n         let filenames = match msg {\n             CargoMessage::CompilerArtifact { filenames, .. } => filenames,\n             _ => return,\n@@ -1173,7 +1138,6 @@ pub fn run_cargo(builder: &Builder,\n pub fn stream_cargo(\n     builder: &Builder,\n     cargo: &mut Command,\n-    tail_args: Vec<String>,\n     cb: &mut dyn FnMut(CargoMessage),\n ) -> bool {\n     if builder.config.dry_run {\n@@ -1184,10 +1148,6 @@ pub fn stream_cargo(\n     cargo.arg(\"--message-format\").arg(\"json\")\n          .stdout(Stdio::piped());\n \n-    for arg in tail_args {\n-        cargo.arg(arg);\n-    }\n-\n     builder.verbose(&format!(\"running: {:?}\", cargo));\n     let mut child = match cargo.spawn() {\n         Ok(child) => child,"}, {"sha": "9421817ae6d8e644583263bb49bda30bb240fa15", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Serialized configuration of a build.\n //!\n //! This module implements parsing `config.toml` configuration files to tweak\n@@ -92,6 +82,8 @@ pub struct Config {\n     pub lldb_enabled: bool,\n     pub llvm_tools_enabled: bool,\n \n+    pub llvm_use_libcxx: bool,\n+\n     // rust codegen options\n     pub rust_optimize: bool,\n     pub rust_codegen_units: Option<u32>,\n@@ -262,6 +254,7 @@ struct Llvm {\n     link_shared: Option<bool>,\n     version_suffix: Option<String>,\n     clang_cl: Option<String>,\n+    use_libcxx: Option<bool>,\n }\n \n #[derive(Deserialize, Default, Clone)]\n@@ -523,6 +516,7 @@ impl Config {\n             config.llvm_link_jobs = llvm.link_jobs;\n             config.llvm_version_suffix = llvm.version_suffix.clone();\n             config.llvm_clang_cl = llvm.clang_cl.clone();\n+            set(&mut config.llvm_use_libcxx, llvm.use_libcxx);\n         }\n \n         if let Some(ref rust) = toml.rust {"}, {"sha": "b0c3c9702498dcbb20dee72d2fc23d6900c73197", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env python\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n # ignore-tidy-linelength\n \n@@ -71,6 +62,7 @@ def v(*args):\n o(\"lld\", \"rust.lld\", \"build lld\")\n o(\"lldb\", \"rust.lldb\", \"build lldb\")\n o(\"missing-tools\", \"dist.missing-tools\", \"allow failures when building tools\")\n+o(\"use-libcxx\", \"llvm.use_libcxx\", \"build LLVM with libc++\")\n \n # Optimization and debugging options. These may be overridden by the release\n # channel, etc."}, {"sha": "3f9a093149423344e7d59a3d3d79da2b06f68992", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 137, "deletions": 19, "changes": 156, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Implementation of the various distribution aspects of the compiler.\n //!\n //! This module is responsible for creating tarballs of the standard library,\n@@ -42,6 +32,8 @@ pub fn pkgname(builder: &Builder, component: &str) -> String {\n         format!(\"{}-{}\", component, builder.rls_package_vers())\n     } else if component == \"clippy\" {\n         format!(\"{}-{}\", component, builder.clippy_package_vers())\n+    } else if component == \"miri\" {\n+        format!(\"{}-{}\", component, builder.miri_package_vers())\n     } else if component == \"rustfmt\" {\n         format!(\"{}-{}\", component, builder.rustfmt_package_vers())\n     } else if component == \"llvm-tools\" {\n@@ -681,10 +673,18 @@ impl Step for Std {\n         let mut src = builder.sysroot_libdir(compiler, target).to_path_buf();\n         src.pop(); // Remove the trailing /lib folder from the sysroot_libdir\n         builder.cp_filtered(&src, &dst, &|path| {\n-            let name = path.file_name().and_then(|s| s.to_str());\n-            name != Some(builder.config.rust_codegen_backends_dir.as_str()) &&\n-                name != Some(\"bin\")\n-\n+            if let Some(name) = path.file_name().and_then(|s| s.to_str()) {\n+                if name == builder.config.rust_codegen_backends_dir.as_str() {\n+                    return false\n+                }\n+                if name == \"bin\" {\n+                    return false\n+                }\n+                if name.contains(\"LLVM\") {\n+                    return false\n+                }\n+            }\n+            true\n         });\n \n         let mut cmd = rust_installer(builder);\n@@ -858,7 +858,6 @@ impl Step for Src {\n         let std_src_dirs = [\n             \"src/build_helper\",\n             \"src/liballoc\",\n-            \"src/libbacktrace\",\n             \"src/libcore\",\n             \"src/libpanic_abort\",\n             \"src/libpanic_unwind\",\n@@ -1278,6 +1277,90 @@ impl Step for Clippy {\n     }\n }\n \n+#[derive(Debug, PartialOrd, Ord, Copy, Clone, Hash, PartialEq, Eq)]\n+pub struct Miri {\n+    pub stage: u32,\n+    pub target: Interned<String>,\n+}\n+\n+impl Step for Miri {\n+    type Output = Option<PathBuf>;\n+    const ONLY_HOSTS: bool = true;\n+\n+    fn should_run(run: ShouldRun) -> ShouldRun {\n+        run.path(\"miri\")\n+    }\n+\n+    fn make_run(run: RunConfig) {\n+        run.builder.ensure(Miri {\n+            stage: run.builder.top_stage,\n+            target: run.target,\n+        });\n+    }\n+\n+    fn run(self, builder: &Builder) -> Option<PathBuf> {\n+        let stage = self.stage;\n+        let target = self.target;\n+        assert!(builder.config.extended);\n+\n+        builder.info(&format!(\"Dist miri stage{} ({})\", stage, target));\n+        let src = builder.src.join(\"src/tools/miri\");\n+        let release_num = builder.release_num(\"miri\");\n+        let name = pkgname(builder, \"miri\");\n+        let version = builder.miri_info.version(builder, &release_num);\n+\n+        let tmp = tmpdir(builder);\n+        let image = tmp.join(\"miri-image\");\n+        drop(fs::remove_dir_all(&image));\n+        builder.create_dir(&image);\n+\n+        // Prepare the image directory\n+        // We expect miri to build, because we've exited this step above if tool\n+        // state for miri isn't testing.\n+        let miri = builder.ensure(tool::Miri {\n+            compiler: builder.compiler(stage, builder.config.build),\n+            target, extra_features: Vec::new()\n+        }).or_else(|| { missing_tool(\"miri\", builder.build.config.missing_tools); None })?;\n+        let cargomiri = builder.ensure(tool::CargoMiri {\n+            compiler: builder.compiler(stage, builder.config.build),\n+            target, extra_features: Vec::new()\n+        }).or_else(|| { missing_tool(\"cargo miri\", builder.build.config.missing_tools); None })?;\n+\n+        builder.install(&miri, &image.join(\"bin\"), 0o755);\n+        builder.install(&cargomiri, &image.join(\"bin\"), 0o755);\n+        let doc = image.join(\"share/doc/miri\");\n+        builder.install(&src.join(\"README.md\"), &doc, 0o644);\n+        builder.install(&src.join(\"LICENSE-APACHE\"), &doc, 0o644);\n+        builder.install(&src.join(\"LICENSE-MIT\"), &doc, 0o644);\n+\n+        // Prepare the overlay\n+        let overlay = tmp.join(\"miri-overlay\");\n+        drop(fs::remove_dir_all(&overlay));\n+        t!(fs::create_dir_all(&overlay));\n+        builder.install(&src.join(\"README.md\"), &overlay, 0o644);\n+        builder.install(&src.join(\"LICENSE-APACHE\"), &doc, 0o644);\n+        builder.install(&src.join(\"LICENSE-MIT\"), &doc, 0o644);\n+        builder.create(&overlay.join(\"version\"), &version);\n+\n+        // Generate the installer tarball\n+        let mut cmd = rust_installer(builder);\n+        cmd.arg(\"generate\")\n+           .arg(\"--product-name=Rust\")\n+           .arg(\"--rel-manifest-dir=rustlib\")\n+           .arg(\"--success-message=miri-ready-to-serve.\")\n+           .arg(\"--image-dir\").arg(&image)\n+           .arg(\"--work-dir\").arg(&tmpdir(builder))\n+           .arg(\"--output-dir\").arg(&distdir(builder))\n+           .arg(\"--non-installed-overlay\").arg(&overlay)\n+           .arg(format!(\"--package-name={}-{}\", name, target))\n+           .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n+           .arg(\"--component-name=miri-preview\");\n+\n+        builder.run(&mut cmd);\n+        Some(distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target)))\n+    }\n+}\n+\n #[derive(Debug, PartialOrd, Ord, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct Rustfmt {\n     pub stage: u32,\n@@ -1399,6 +1482,7 @@ impl Step for Extended {\n         let rls_installer = builder.ensure(Rls { stage, target });\n         let llvm_tools_installer = builder.ensure(LlvmTools { stage, target });\n         let clippy_installer = builder.ensure(Clippy { stage, target });\n+        let miri_installer = builder.ensure(Miri { stage, target });\n         let lldb_installer = builder.ensure(Lldb { target });\n         let mingw_installer = builder.ensure(Mingw { host: target });\n         let analysis_installer = builder.ensure(Analysis {\n@@ -1437,6 +1521,7 @@ impl Step for Extended {\n         tarballs.push(cargo_installer);\n         tarballs.extend(rls_installer.clone());\n         tarballs.extend(clippy_installer.clone());\n+        tarballs.extend(miri_installer.clone());\n         tarballs.extend(rustfmt_installer.clone());\n         tarballs.extend(llvm_tools_installer);\n         tarballs.extend(lldb_installer);\n@@ -1509,6 +1594,9 @@ impl Step for Extended {\n             if clippy_installer.is_none() {\n                 contents = filter(&contents, \"clippy\");\n             }\n+            if miri_installer.is_none() {\n+                contents = filter(&contents, \"miri\");\n+            }\n             if rustfmt_installer.is_none() {\n                 contents = filter(&contents, \"rustfmt\");\n             }\n@@ -1549,6 +1637,9 @@ impl Step for Extended {\n             if clippy_installer.is_some() {\n                 prepare(\"clippy\");\n             }\n+            if miri_installer.is_some() {\n+                prepare(\"miri\");\n+            }\n \n             // create an 'uninstall' package\n             builder.install(&etc.join(\"pkg/postinstall\"), &pkg.join(\"uninstall\"), 0o755);\n@@ -1579,6 +1670,8 @@ impl Step for Extended {\n                     \"rls-preview\".to_string()\n                 } else if name == \"clippy\" {\n                     \"clippy-preview\".to_string()\n+                } else if name == \"miri\" {\n+                    \"miri-preview\".to_string()\n                 } else {\n                     name.to_string()\n                 };\n@@ -1598,6 +1691,9 @@ impl Step for Extended {\n             if clippy_installer.is_some() {\n                 prepare(\"clippy\");\n             }\n+            if miri_installer.is_some() {\n+                prepare(\"miri\");\n+            }\n             if target.contains(\"windows-gnu\") {\n                 prepare(\"rust-mingw\");\n             }\n@@ -1690,6 +1786,18 @@ impl Step for Extended {\n                                 .arg(\"-out\").arg(exe.join(\"ClippyGroup.wxs\"))\n                                 .arg(\"-t\").arg(etc.join(\"msi/remove-duplicates.xsl\")));\n             }\n+            if miri_installer.is_some() {\n+                builder.run(Command::new(&heat)\n+                                .current_dir(&exe)\n+                                .arg(\"dir\")\n+                                .arg(\"miri\")\n+                                .args(&heat_flags)\n+                                .arg(\"-cg\").arg(\"MiriGroup\")\n+                                .arg(\"-dr\").arg(\"Miri\")\n+                                .arg(\"-var\").arg(\"var.MiriDir\")\n+                                .arg(\"-out\").arg(exe.join(\"MiriGroup.wxs\"))\n+                                .arg(\"-t\").arg(etc.join(\"msi/remove-duplicates.xsl\")));\n+            }\n             builder.run(Command::new(&heat)\n                             .current_dir(&exe)\n                             .arg(\"dir\")\n@@ -1735,6 +1843,9 @@ impl Step for Extended {\n                 if clippy_installer.is_some() {\n                     cmd.arg(\"-dClippyDir=clippy\");\n                 }\n+                if miri_installer.is_some() {\n+                    cmd.arg(\"-dMiriDir=miri\");\n+                }\n                 if target.contains(\"windows-gnu\") {\n                     cmd.arg(\"-dGccDir=rust-mingw\");\n                 }\n@@ -1753,6 +1864,9 @@ impl Step for Extended {\n             if clippy_installer.is_some() {\n                 candle(\"ClippyGroup.wxs\".as_ref());\n             }\n+            if miri_installer.is_some() {\n+                candle(\"MiriGroup.wxs\".as_ref());\n+            }\n             candle(\"AnalysisGroup.wxs\".as_ref());\n \n             if target.contains(\"windows-gnu\") {\n@@ -1785,6 +1899,9 @@ impl Step for Extended {\n             if clippy_installer.is_some() {\n                 cmd.arg(\"ClippyGroup.wixobj\");\n             }\n+            if miri_installer.is_some() {\n+                cmd.arg(\"MiriGroup.wixobj\");\n+            }\n \n             if target.contains(\"windows-gnu\") {\n                 cmd.arg(\"GccGroup.wixobj\");\n@@ -1870,6 +1987,7 @@ impl Step for HashSign {\n         cmd.arg(builder.package_vers(&builder.release_num(\"cargo\")));\n         cmd.arg(builder.package_vers(&builder.release_num(\"rls\")));\n         cmd.arg(builder.package_vers(&builder.release_num(\"clippy\")));\n+        cmd.arg(builder.package_vers(&builder.release_num(\"miri\")));\n         cmd.arg(builder.package_vers(&builder.release_num(\"rustfmt\")));\n         cmd.arg(builder.llvm_tools_package_vers());\n         cmd.arg(builder.lldb_package_vers());\n@@ -1888,13 +2006,13 @@ impl Step for HashSign {\n // LLVM tools are linked dynamically.\n // Note: This function does no yet support Windows but we also don't support\n //       linking LLVM tools dynamically on Windows yet.\n-fn maybe_install_llvm_dylib(builder: &Builder,\n-                            target: Interned<String>,\n-                            image: &Path) {\n+pub fn maybe_install_llvm_dylib(builder: &Builder,\n+                                target: Interned<String>,\n+                                sysroot: &Path) {\n     let src_libdir = builder\n         .llvm_out(target)\n         .join(\"lib\");\n-    let dst_libdir = image.join(\"lib/rustlib\").join(&*target).join(\"lib\");\n+    let dst_libdir = sysroot.join(\"lib/rustlib\").join(&*target).join(\"lib\");\n     t!(fs::create_dir_all(&dst_libdir));\n \n     if target.contains(\"apple-darwin\") {"}, {"sha": "eec193c21f5db3d84eebea0645cd1e91caf55a82", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Documentation generation for rustbuilder.\n //!\n //! This module implements generation for all bits and pieces of documentation"}, {"sha": "0f9a4271ac062e4e367c518dbbc03bd18de03b7b", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Command-line interface of the rustbuild build system.\n //!\n //! This module implements the command-line parsing of the build system which"}, {"sha": "1265fa9eff45bca8485b491edd564def56a28883", "filename": "src/bootstrap/install.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Implementation of the install aspects of the compiler.\n //!\n //! This module is responsible for installing the standard library,\n@@ -42,6 +32,9 @@ pub fn install_rls(builder: &Builder, stage: u32, host: Interned<String>) {\n pub fn install_clippy(builder: &Builder, stage: u32, host: Interned<String>) {\n     install_sh(builder, \"clippy\", \"clippy\", stage, Some(host));\n }\n+pub fn install_miri(builder: &Builder, stage: u32, host: Interned<String>) {\n+    install_sh(builder, \"miri\", \"miri\", stage, Some(host));\n+}\n \n pub fn install_rustfmt(builder: &Builder, stage: u32, host: Interned<String>) {\n     install_sh(builder, \"rustfmt\", \"rustfmt\", stage, Some(host));\n@@ -227,6 +220,14 @@ install!((self, builder, _config),\n             builder.info(&format!(\"skipping Install clippy stage{} ({})\", self.stage, self.target));\n         }\n     };\n+    Miri, \"miri\", Self::should_build(_config), only_hosts: true, {\n+        if builder.ensure(dist::Miri { stage: self.stage, target: self.target }).is_some() ||\n+            Self::should_install(builder) {\n+            install_miri(builder, self.stage, self.target);\n+        } else {\n+            builder.info(&format!(\"skipping Install miri stage{} ({})\", self.stage, self.target));\n+        }\n+    };\n     Rustfmt, \"rustfmt\", Self::should_build(_config), only_hosts: true, {\n         if builder.ensure(dist::Rustfmt { stage: self.stage, target: self.target }).is_some() ||\n             Self::should_install(builder) {"}, {"sha": "df492e0fdfd1c82b7224dfd7056c2db60f31c471", "filename": "src/bootstrap/job.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fjob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fjob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fjob.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Job management on Windows for bootstrapping\n //!\n //! Most of the time when you're running a build system (e.g., make) you expect"}, {"sha": "bddc6362389adcbecd4a1bf41b5f50b7d68862e2", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Implementation of rustbuild, the Rust build system.\n //!\n //! This module, and its descendants, are the implementation of the Rust build\n@@ -263,6 +253,7 @@ pub struct Build {\n     cargo_info: channel::GitInfo,\n     rls_info: channel::GitInfo,\n     clippy_info: channel::GitInfo,\n+    miri_info: channel::GitInfo,\n     rustfmt_info: channel::GitInfo,\n     local_rebuild: bool,\n     fail_fast: bool,\n@@ -384,6 +375,7 @@ impl Build {\n         let cargo_info = channel::GitInfo::new(&config, &src.join(\"src/tools/cargo\"));\n         let rls_info = channel::GitInfo::new(&config, &src.join(\"src/tools/rls\"));\n         let clippy_info = channel::GitInfo::new(&config, &src.join(\"src/tools/clippy\"));\n+        let miri_info = channel::GitInfo::new(&config, &src.join(\"src/tools/miri\"));\n         let rustfmt_info = channel::GitInfo::new(&config, &src.join(\"src/tools/rustfmt\"));\n \n         let mut build = Build {\n@@ -406,6 +398,7 @@ impl Build {\n             cargo_info,\n             rls_info,\n             clippy_info,\n+            miri_info,\n             rustfmt_info,\n             cc: HashMap::new(),\n             cxx: HashMap::new(),\n@@ -1026,6 +1019,11 @@ impl Build {\n         self.package_vers(&self.release_num(\"clippy\"))\n     }\n \n+    /// Returns the value of `package_vers` above for miri\n+    fn miri_package_vers(&self) -> String {\n+        self.package_vers(&self.release_num(\"miri\"))\n+    }\n+\n     /// Returns the value of `package_vers` above for rustfmt\n     fn rustfmt_package_vers(&self) -> String {\n         self.package_vers(&self.release_num(\"rustfmt\"))"}, {"sha": "7fa377f310b4f6f3eebd951345a83558011e5d5c", "filename": "src/bootstrap/metadata.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmetadata.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::collections::HashMap;\n use std::process::Command;\n use std::path::PathBuf;"}, {"sha": "8ff1456f0f47c262871556f9056ca82154a694da", "filename": "src/bootstrap/mk/Makefile.in", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fmk%2FMakefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fmk%2FMakefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmk%2FMakefile.in?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n ifdef VERBOSE\n Q :=\n BOOTSTRAP_ARGS := -v"}, {"sha": "7ddfc385fc0fe9afd8af391d5601d774997657d5", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 8, "deletions": 18, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Compilation of native dependencies like LLVM.\n //!\n //! Native projects like LLVM unfortunately aren't suited just yet for\n@@ -245,7 +235,7 @@ impl Step for Llvm {\n             cfg.define(\"PYTHON_EXECUTABLE\", python);\n         }\n \n-        configure_cmake(builder, target, &mut cfg, false);\n+        configure_cmake(builder, target, &mut cfg);\n \n         // FIXME: we don't actually need to build all LLVM tools and all LLVM\n         //        libraries here, e.g., we just want a few components and a few\n@@ -287,8 +277,7 @@ fn check_llvm_version(builder: &Builder, llvm_config: &Path) {\n \n fn configure_cmake(builder: &Builder,\n                    target: Interned<String>,\n-                   cfg: &mut cmake::Config,\n-                   building_dist_binaries: bool) {\n+                   cfg: &mut cmake::Config) {\n     if builder.config.ninja {\n         cfg.generator(\"Ninja\");\n     }\n@@ -373,10 +362,11 @@ fn configure_cmake(builder: &Builder,\n     cfg.build_arg(\"-j\").build_arg(builder.jobs().to_string());\n     cfg.define(\"CMAKE_C_FLAGS\", builder.cflags(target, GitRepo::Llvm).join(\" \"));\n     let mut cxxflags = builder.cflags(target, GitRepo::Llvm).join(\" \");\n-    if building_dist_binaries {\n-        if builder.config.llvm_static_stdcpp && !target.contains(\"windows\") {\n-            cxxflags.push_str(\" -static-libstdc++\");\n-        }\n+    if builder.config.llvm_static_stdcpp &&\n+        !target.contains(\"windows\") &&\n+        !target.contains(\"netbsd\")\n+    {\n+        cxxflags.push_str(\" -static-libstdc++\");\n     }\n     cfg.define(\"CMAKE_CXX_FLAGS\", cxxflags);\n     if let Some(ar) = builder.ar(target) {\n@@ -441,7 +431,7 @@ impl Step for Lld {\n         t!(fs::create_dir_all(&out_dir));\n \n         let mut cfg = cmake::Config::new(builder.src.join(\"src/tools/lld\"));\n-        configure_cmake(builder, target, &mut cfg, true);\n+        configure_cmake(builder, target, &mut cfg);\n \n         // This is an awful, awful hack. Discovered when we migrated to using\n         // clang-cl to compile LLVM/LLD it turns out that LLD, when built out of"}, {"sha": "fe547a6b151c229bda8408f143448fa7219cf56d", "filename": "src/bootstrap/sanity.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fsanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Fsanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsanity.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Sanity checking performed by rustbuild before actually executing anything.\n //!\n //! This module contains the implementation of ensuring that the build"}, {"sha": "2edc78ebaa94f67d458caf0e6ea9b2e122da0f58", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Implementation of the test-related targets of the build system.\n //!\n //! This file implements the various regression test suites that we execute on\n@@ -293,13 +283,6 @@ impl Step for Rls {\n                                                  SourceType::Submodule,\n                                                  &[]);\n \n-        // Copy `src/tools/rls/test_data` to a writable drive.\n-        let test_workspace_path = builder.out.join(\"rls-test-data\");\n-        let test_data_path = test_workspace_path.join(\"test_data\");\n-        builder.create_dir(&test_data_path);\n-        builder.cp_r(&builder.src.join(\"src/tools/rls/test_data\"), &test_data_path);\n-        cargo.env(\"RLS_TEST_WORKSPACE_DIR\", test_workspace_path);\n-\n         builder.add_rustc_lib_path(compiler, &mut cargo);\n         cargo.arg(\"--\")\n             .args(builder.config.cmd.test_args());"}, {"sha": "9f6db73e6f71389dd2456e234964a23dde40d23f", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::fs;\n use std::env;\n use std::iter;\n@@ -87,12 +77,13 @@ impl Step for ToolBuild {\n         let _folder = builder.fold_output(|| format!(\"stage{}-{}\", compiler.stage, tool));\n         builder.info(&format!(\"Building stage{} tool {} ({})\", compiler.stage, tool, target));\n         let mut duplicates = Vec::new();\n-        let is_expected = compile::stream_cargo(builder, &mut cargo, vec![], &mut |msg| {\n+        let is_expected = compile::stream_cargo(builder, &mut cargo, &mut |msg| {\n             // Only care about big things like the RLS/Cargo for now\n             match tool {\n                 | \"rls\"\n                 | \"cargo\"\n                 | \"clippy-driver\"\n+                | \"miri\"\n                 => {}\n \n                 _ => return,\n@@ -150,7 +141,7 @@ impl Step for ToolBuild {\n         });\n \n         if is_expected && !duplicates.is_empty() {\n-            println!(\"duplicate artfacts found when compiling a tool, this \\\n+            println!(\"duplicate artifacts found when compiling a tool, this \\\n                       typically means that something was recompiled because \\\n                       a transitive dependency has different features activated \\\n                       than in a previous build:\\n\");\n@@ -228,6 +219,7 @@ pub fn prepare_tool_cargo(\n         if path.ends_with(\"cargo\") ||\n             path.ends_with(\"rls\") ||\n             path.ends_with(\"clippy\") ||\n+            path.ends_with(\"miri\") ||\n             path.ends_with(\"rustfmt\")\n         {\n             cargo.env(\"LIBZ_SYS_STATIC\", \"1\");\n@@ -602,6 +594,14 @@ tool_extended!((self, builder),\n         });\n     };\n     Miri, miri, \"src/tools/miri\", \"miri\", {};\n+    CargoMiri, miri, \"src/tools/miri\", \"cargo-miri\", {\n+        // Miri depends on procedural macros (serde), which requires a full host\n+        // compiler to be available, so we need to depend on that.\n+        builder.ensure(compile::Rustc {\n+            compiler: self.compiler,\n+            target: builder.config.build,\n+        });\n+    };\n     Rls, rls, \"src/tools/rls\", \"rls\", {\n         let clippy = builder.ensure(Clippy {\n             compiler: self.compiler,"}, {"sha": "8ff7c09fc299676c64e64cb05f1e54037f85d337", "filename": "src/bootstrap/toolstate.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Ftoolstate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Ftoolstate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftoolstate.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[derive(Copy, Clone, Debug, Deserialize, Serialize, PartialEq, Eq)]\n #[serde(rename_all = \"kebab-case\")]\n /// Whether a tool can be compiled, tested or neither"}, {"sha": "2880f1a084be0bbe0958bb1d779681255cd30ac3", "filename": "src/bootstrap/util.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbootstrap%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Futil.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Various utility functions used throughout rustbuild.\n //!\n //! Simple things like testing the various filesystem operations here and there,"}, {"sha": "5a704e557751de813ea6c12e1d6e7fbd64fda4b5", "filename": "src/build_helper/lib.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbuild_helper%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fbuild_helper%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuild_helper%2Flib.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::fs::File;\n use std::path::{Path, PathBuf};\n use std::process::{Command, Stdio};"}, {"sha": "112d747fe4ed6b50b9f6ce2512a0012184eb834a", "filename": "src/ci/docker/disabled/dist-x86_64-dragonfly/build-toolchain.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-dragonfly%2Fbuild-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-dragonfly%2Fbuild-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-dragonfly%2Fbuild-toolchain.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -ex\n "}, {"sha": "faf30f36a20f9e06fa9c2a58af3c218c3f9a6794", "filename": "src/ci/docker/disabled/dist-x86_64-haiku/build-toolchain.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Fbuild-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Fbuild-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Fbuild-toolchain.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -ex\n "}, {"sha": "e4c9f86d268dc5d9a2442174f8adff58bc18f59b", "filename": "src/ci/docker/disabled/dist-x86_64-haiku/fetch-packages.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Ffetch-packages.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Ffetch-packages.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Ffetch-packages.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n wget http://packages.haiku-os.org/haikuports/master/hpkg/llvm-4.0.1-2-x86_64.hpkg\n wget http://packages.haiku-os.org/haikuports/master/hpkg/llvm_libs-4.0.1-2-x86_64.hpkg"}, {"sha": "83f3a6e5f121685435e6ee7ca0eac6565deda4ac", "filename": "src/ci/docker/disabled/dist-x86_64-haiku/llvm-config.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Fllvm-config.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Fllvm-config.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-haiku%2Fllvm-config.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/bin/sh\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n case $1 in\n --version) echo  4.0.1;;"}, {"sha": "aa938971c702f713e857c159d8bd8b67003ff982", "filename": "src/ci/docker/disabled/wasm32-exp/node.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32-exp%2Fnode.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32-exp%2Fnode.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32-exp%2Fnode.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n path=\"$(dirname $1)\"\n file=\"$(basename $1)\""}, {"sha": "390ba1a1ddf9cfd28f3566c583365e7736742f6f", "filename": "src/ci/docker/dist-aarch64-linux/build-toolchains.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2Fbuild-toolchains.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2Fbuild-toolchains.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2Fbuild-toolchains.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,14 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -ex\n \n hide_output() {"}, {"sha": "2e790b77a96c2c60f636f99800e3ad3a22ea1515", "filename": "src/ci/docker/dist-arm-linux/build-toolchains.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-arm-linux%2Fbuild-toolchains.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-arm-linux%2Fbuild-toolchains.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-arm-linux%2Fbuild-toolchains.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -ex\n "}, {"sha": "a01c2e0eb0a7c8817395273447e7f3edf6eeb594", "filename": "src/ci/docker/dist-armhf-linux/build-toolchains.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Fbuild-toolchains.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Fbuild-toolchains.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Fbuild-toolchains.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -ex\n "}, {"sha": "28f8ba2437b3d2166d19bd7301dcdeec1617f506", "filename": "src/ci/docker/dist-armv7-linux/build-toolchains.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Fbuild-toolchains.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Fbuild-toolchains.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Fbuild-toolchains.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -ex\n "}, {"sha": "d2e39834d6e96317b17984d5c86661410372cbf1", "filename": "src/ci/docker/dist-powerpc-linux/build-powerpc-toolchain.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2Fbuild-powerpc-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2Fbuild-powerpc-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2Fbuild-powerpc-toolchain.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,14 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -ex\n \n hide_output() {"}, {"sha": "f7aa2cd326832b52495d5ea40d3e9891b828251e", "filename": "src/ci/docker/dist-powerpc64-linux/build-powerpc64-toolchain.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fbuild-powerpc64-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fbuild-powerpc64-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fbuild-powerpc64-toolchain.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,14 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -ex\n \n source shared.sh"}, {"sha": "b873569278914e54c8dc3eb7e7871a4c793da72c", "filename": "src/ci/docker/dist-powerpc64-linux/shared.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fshared.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fshared.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fshared.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n hide_output() {\n   set +x\n   on_err=\""}, {"sha": "a01803d9c8f4528ec888e4875f3fffcbe75bab63", "filename": "src/ci/docker/dist-powerpc64le-linux/build-powerpc64le-toolchain.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2Fbuild-powerpc64le-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2Fbuild-powerpc64le-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2Fbuild-powerpc64le-toolchain.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -ex\n "}, {"sha": "b873569278914e54c8dc3eb7e7871a4c793da72c", "filename": "src/ci/docker/dist-powerpc64le-linux/shared.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2Fshared.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2Fshared.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2Fshared.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n hide_output() {\n   set +x\n   on_err=\""}, {"sha": "df9529da8a1628c910d616a77b506d870e74320a", "filename": "src/ci/docker/dist-s390x-linux/build-s390x-toolchain.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fbuild-s390x-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fbuild-s390x-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fbuild-s390x-toolchain.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,14 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -ex\n \n hide_output() {"}, {"sha": "9c7aaef4f436f6cbf5d833a3dc994f0c02183424", "filename": "src/ci/docker/dist-various-1/build-rumprun.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-various-1%2Fbuild-rumprun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-various-1%2Fbuild-rumprun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2Fbuild-rumprun.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,14 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -ex\n \n hide_output() {"}, {"sha": "8d05a046959d8e85abcf076ff0a8d01442a341af", "filename": "src/ci/docker/dist-various-1/install-mips-musl.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-various-1%2Finstall-mips-musl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-various-1%2Finstall-mips-musl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2Finstall-mips-musl.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -ex\n \n mkdir /usr/local/mips-linux-musl"}, {"sha": "2c414744bf47bd1871f9d0b305bf82a43e9cea47", "filename": "src/ci/docker/dist-various-1/install-mipsel-musl.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-various-1%2Finstall-mipsel-musl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-various-1%2Finstall-mipsel-musl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2Finstall-mipsel-musl.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -ex\n \n mkdir /usr/local/mipsel-linux-musl"}, {"sha": "29222ff60f2a0aa1ac2537ac3f84d339f5c2da15", "filename": "src/ci/docker/dist-various-1/install-x86_64-redox.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-various-1%2Finstall-x86_64-redox.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-various-1%2Finstall-x86_64-redox.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2Finstall-x86_64-redox.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,14 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n # ignore-tidy-linelength\n \n set -ex"}, {"sha": "391f9b2fff8894ad9bcb3bad18d196e013cc20cd", "filename": "src/ci/docker/dist-various-2/build-cloudabi-toolchain.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-various-2%2Fbuild-cloudabi-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-various-2%2Fbuild-cloudabi-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-2%2Fbuild-cloudabi-toolchain.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/bin/bash\n-# Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -eux\n "}, {"sha": "ef486075ff9d86185d22c8e731182d8f70d89889", "filename": "src/ci/docker/dist-various-2/build-fuchsia-toolchain.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-various-2%2Fbuild-fuchsia-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-various-2%2Fbuild-fuchsia-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-2%2Fbuild-fuchsia-toolchain.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n # ignore-tidy-linelength\n "}, {"sha": "4b3f284450eaa35a76351d5dc84fd0e1074e78dd", "filename": "src/ci/docker/dist-various-2/build-solaris-toolchain.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-various-2%2Fbuild-solaris-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-various-2%2Fbuild-solaris-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-2%2Fbuild-solaris-toolchain.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -ex\n source shared.sh"}, {"sha": "2b5eccb3189f3e1eb67bca1f2e8b9cf1e196e2d7", "filename": "src/ci/docker/dist-various-2/shared.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-various-2%2Fshared.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-various-2%2Fshared.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-2%2Fshared.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n hide_output() {\n   set +x\n   on_err=\""}, {"sha": "ed0b5c85f7ca9e9706c0b4a376d4c516d79112da", "filename": "src/ci/docker/dist-x86_64-linux/build-binutils.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-binutils.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-binutils.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-binutils.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -ex\n "}, {"sha": "ff5b50123fd37a7e7cff1ebf9fcb8fafcd9a3338", "filename": "src/ci/docker/dist-x86_64-linux/build-clang.sh", "status": "modified", "additions": 14, "deletions": 26, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-clang.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-clang.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-clang.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,43 +1,31 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -ex\n \n source shared.sh\n \n-LLVM=7.0.0\n+# Currently these commits are all tip-of-tree as of 2018-12-16, used to pick up\n+# a fix for rust-lang/rust#56849\n+LLVM=032b00a5404865765cda7db3039f39d54964d8b0\n+LLD=3e4aa4e8671523321af51449e0569f455ef3ad43\n+CLANG=a6b9739069763243020f4ea6fe586bc135fde1f9\n \n mkdir clang\n cd clang\n \n-curl https://releases.llvm.org/$LLVM/llvm-$LLVM.src.tar.xz | \\\n-  xz -d | \\\n-  tar xf -\n-\n-cd llvm-$LLVM.src\n+curl -L https://github.com/llvm-mirror/llvm/archive/$LLVM.tar.gz | \\\n+  tar xzf - --strip-components=1\n \n mkdir -p tools/clang\n-\n-curl https://releases.llvm.org/$LLVM/cfe-$LLVM.src.tar.xz | \\\n-  xz -d | \\\n-  tar xf - -C tools/clang --strip-components=1\n+curl -L https://github.com/llvm-mirror/clang/archive/$CLANG.tar.gz | \\\n+  tar xzf - --strip-components=1 -C tools/clang\n \n mkdir -p tools/lld\n+curl -L https://github.com/llvm-mirror/lld/archive/$LLD.tar.gz | \\\n+  tar zxf - --strip-components=1 -C tools/lld\n \n-curl https://releases.llvm.org/$LLVM/lld-$LLVM.src.tar.xz | \\\n-  xz -d | \\\n-  tar xf - -C tools/lld --strip-components=1\n-\n-mkdir ../clang-build\n-cd ../clang-build\n+mkdir clang-build\n+cd clang-build\n \n # For whatever reason the default set of include paths for clang is different\n # than that of gcc. As a result we need to manually include our sysroot's\n@@ -55,7 +43,7 @@ INC=\"$INC:/rustroot/lib/gcc/x86_64-unknown-linux-gnu/4.8.5/include-fixed\"\n INC=\"$INC:/usr/include\"\n \n hide_output \\\n-    cmake ../llvm-$LLVM.src \\\n+    cmake .. \\\n       -DCMAKE_C_COMPILER=/rustroot/bin/gcc \\\n       -DCMAKE_CXX_COMPILER=/rustroot/bin/g++ \\\n       -DCMAKE_BUILD_TYPE=Release \\"}, {"sha": "84522a7b87a4b194d8f0531b82eb8d636057a959", "filename": "src/ci/docker/dist-x86_64-linux/build-cmake.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-cmake.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-cmake.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-cmake.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -ex\n source shared.sh"}, {"sha": "fb8b63d7920b13fa488092b74517ca855f927bc8", "filename": "src/ci/docker/dist-x86_64-linux/build-curl.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-curl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-curl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-curl.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -ex\n source shared.sh"}, {"sha": "9f3ae55cb3fe63118e868b86a151a2cd90fc7fa3", "filename": "src/ci/docker/dist-x86_64-linux/build-gcc.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-gcc.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-gcc.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-gcc.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,14 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -ex\n \n source shared.sh"}, {"sha": "38fea2a8094b981317fbb565092439bd6ae8d9d4", "filename": "src/ci/docker/dist-x86_64-linux/build-git.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-git.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-git.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-git.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -ex\n source shared.sh"}, {"sha": "b623e53583b5e6c92fcfb92a751864781c286710", "filename": "src/ci/docker/dist-x86_64-linux/build-headers.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-headers.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-headers.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-headers.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -ex\n source shared.sh"}, {"sha": "7e391e21d13eb6f9605c4be497cf27fe2bd87a0b", "filename": "src/ci/docker/dist-x86_64-linux/build-openssl.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-openssl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-openssl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-openssl.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -ex\n source shared.sh"}, {"sha": "a6c3d5cb683a8b8e2fdabfae6e6697d8bd39ca18", "filename": "src/ci/docker/dist-x86_64-linux/build-perl.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-perl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-perl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-perl.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -ex\n source shared.sh"}, {"sha": "c172b9781120d75e2628140c5922e41ebde643d4", "filename": "src/ci/docker/dist-x86_64-linux/build-python.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-python.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-python.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-python.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -ex\n source shared.sh"}, {"sha": "b873569278914e54c8dc3eb7e7871a4c793da72c", "filename": "src/ci/docker/dist-x86_64-linux/shared.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fshared.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fshared.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fshared.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n hide_output() {\n   set +x\n   on_err=\""}, {"sha": "ac92d68a1f501804c5617cf443deaa6bac542bad", "filename": "src/ci/docker/dist-x86_64-netbsd/build-netbsd-toolchain.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2Fbuild-netbsd-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2Fbuild-netbsd-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2Fbuild-netbsd-toolchain.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,14 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n # ignore-tidy-linelength\n \n set -ex"}, {"sha": "24e2dea4ca773bf713e859bca9cb94dcf2585d20", "filename": "src/ci/docker/mingw-check/Dockerfile", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fmingw-check%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fmingw-check%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fmingw-check%2FDockerfile?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -21,4 +21,5 @@ RUN sh /scripts/sccache.sh\n \n ENV RUN_CHECK_WITH_PARALLEL_QUERIES 1\n ENV SCRIPT python2.7 ../x.py check --target=i686-pc-windows-gnu --host=i686-pc-windows-gnu && \\\n-           python2.7 ../x.py build --stage 0 src/tools/build-manifest\n+           python2.7 ../x.py build --stage 0 src/tools/build-manifest && \\\n+           python2.7 ../x.py test --stage 0 src/tools/compiletest"}, {"sha": "ad6188568cff2ce9f87b7b228c3d17816e13974c", "filename": "src/ci/docker/run.sh", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Frun.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -e\n \n@@ -28,10 +19,12 @@ travis_time_start\n \n if [ -f \"$docker_dir/$image/Dockerfile\" ]; then\n     if [ \"$CI\" != \"\" ]; then\n-      cksum=$(find $docker_dir/$image $docker_dir/scripts -type f | \\\n+      hash_key=/tmp/.docker-hash-key.txt\n+      find $docker_dir/$image $docker_dir/scripts -type f | \\\n         sort | \\\n-        xargs cat | \\\n-        sha512sum | \\\n+        xargs cat >> $hash_key\n+      docker --version >> $hash_key\n+      cksum=$(sha512sum $hash_key | \\\n         awk '{print $1}')\n       s3url=\"s3://$SCCACHE_BUCKET/docker/$cksum\"\n       url=\"https://s3-us-west-1.amazonaws.com/$SCCACHE_BUCKET/docker/$cksum\""}, {"sha": "738410c58fcfa21d08817d34b80de8d7e97740aa", "filename": "src/ci/docker/scripts/android-base-apt-get.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fandroid-base-apt-get.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fandroid-base-apt-get.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Fandroid-base-apt-get.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -ex\n \n apt-get update"}, {"sha": "0db30e420e33aaa5627124d086848c72e2ac2602", "filename": "src/ci/docker/scripts/android-ndk.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fandroid-ndk.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fandroid-ndk.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Fandroid-ndk.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -ex\n \n URL=https://dl.google.com/android/repository"}, {"sha": "e06c57fbab90c946a1e6e2c1feaa5924e434e1f0", "filename": "src/ci/docker/scripts/android-sdk.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fandroid-sdk.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fandroid-sdk.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Fandroid-sdk.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -ex\n \n export ANDROID_HOME=/android/sdk"}, {"sha": "09f0d13759c790dc378125aefb4cd156318d9596", "filename": "src/ci/docker/scripts/android-start-emulator.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fandroid-start-emulator.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fandroid-start-emulator.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Fandroid-start-emulator.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/bin/sh\n-# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -ex\n "}, {"sha": "51945fd72adc768fcdfc054b1a6a97b6d1629d65", "filename": "src/ci/docker/scripts/cross-apt-packages.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fcross-apt-packages.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fcross-apt-packages.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Fcross-apt-packages.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n apt-get update && apt-get install -y --no-install-recommends \\\n   automake \\\n   bison \\"}, {"sha": "2773e687ebe6ffde0dad60e0aec94b0d5cbd3227", "filename": "src/ci/docker/scripts/crosstool-ng.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fcrosstool-ng.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fcrosstool-ng.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Fcrosstool-ng.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -ex\n \n url=\"https://github.com/crosstool-ng/crosstool-ng/archive/crosstool-ng-1.22.0.tar.gz\""}, {"sha": "e4a93d7a100920a6941c97bb1e62e095b8b74a83", "filename": "src/ci/docker/scripts/emscripten-wasm.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Femscripten-wasm.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Femscripten-wasm.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Femscripten-wasm.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -ex\n \n hide_output() {"}, {"sha": "d3b1cded6f58908b50167ca101759925fefd3bd5", "filename": "src/ci/docker/scripts/emscripten.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Femscripten.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Femscripten.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Femscripten.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -ex\n \n hide_output() {"}, {"sha": "04483e249257eda46245bedf2233ae1fa561e089", "filename": "src/ci/docker/scripts/freebsd-toolchain.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Ffreebsd-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Ffreebsd-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Ffreebsd-toolchain.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,14 +1,4 @@\n #!/bin/bash\n-# Copyright 2016-2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -eux\n \n arch=$1"}, {"sha": "47cb4158229d3fa84052f8438f794c6655b00c64", "filename": "src/ci/docker/scripts/make3.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fmake3.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fmake3.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Fmake3.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -ex\n \n curl -f https://ftp.gnu.org/gnu/make/make-3.81.tar.gz | tar xzf -"}, {"sha": "116c16b2f35cdd4ce9173816b21930447f7962f8", "filename": "src/ci/docker/scripts/musl.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fmusl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fmusl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Fmusl.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -ex\n \n hide_output() {"}, {"sha": "815b5b04f095ddc68d354d62f0ae7760df6614f5", "filename": "src/ci/docker/scripts/qemu-bare-bones-addentropy.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fqemu-bare-bones-addentropy.c", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fqemu-bare-bones-addentropy.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Fqemu-bare-bones-addentropy.c?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #include <assert.h>\n #include <stdint.h>\n #include <sys/ioctl.h>"}, {"sha": "94d7e600eacd2d01a2bf7bd72726d64b978105d1", "filename": "src/ci/docker/scripts/rustbuild-setup.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Frustbuild-setup.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Frustbuild-setup.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Frustbuild-setup.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -ex\n \n groupadd -r rustbuild && useradd -m -r -g rustbuild rustbuild"}, {"sha": "e05246201dd0c030cbec48ff06b31d5500ab8d9f", "filename": "src/ci/docker/scripts/sccache.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fsccache.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fscripts%2Fsccache.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Fsccache.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n # ignore-tidy-linelength\n \n set -ex"}, {"sha": "0cc0a6329e5bf779060a19762329296fd935c8dd", "filename": "src/ci/docker/x86_64-gnu-tools/checkregression.py", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fcheckregression.py", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fcheckregression.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fcheckregression.py?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,16 +1,6 @@\n #!/usr/bin/env python\n # -*- coding: utf-8 -*-\n \n-# Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n import sys\n import json\n "}, {"sha": "2e5b335950166600d7a34325a5ea64ece48b5309", "filename": "src/ci/docker/x86_64-gnu-tools/checktools.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,15 +1,5 @@\n #!/bin/sh\n \n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -eu\n \n X_PY=\"$1\""}, {"sha": "6364bc2aabf936ed06dfb1e287cf8da1dc2c0004", "filename": "src/ci/docker/x86_64-gnu-tools/repo.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Frepo.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Frepo.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Frepo.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,15 +1,5 @@\n #!/bin/sh\n \n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n # This file provides the function `commit_toolstate_change` for pushing a change\n # to the `rust-toolstate` repository.\n #"}, {"sha": "be2cadbbe6cf279a25a48774fb6a412e42a5baef", "filename": "src/ci/init_repo.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Finit_repo.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Finit_repo.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Finit_repo.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -o errexit\n set -o pipefail"}, {"sha": "b0e1b1651055f6b7788d7c107c76f385d780e585", "filename": "src/ci/run.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/usr/bin/env bash\n-# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n set -e\n "}, {"sha": "4a49f3441a41db2d78d5aaa3038db4382ebf6f3e", "filename": "src/ci/shared.sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fshared.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fci%2Fshared.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fshared.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/bin/false\n-# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n # This file is intended to be sourced with `. shared.sh` or\n # `source shared.sh`, hence the invalid shebang and not being"}, {"sha": "55897e5a3e9069740a8e2f6da15570c9d965865f", "filename": "src/doc/index.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fdoc%2Findex.md", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fdoc%2Findex.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Findex.md?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -107,3 +107,9 @@ Rust. It's also sometimes called \"the 'nomicon.\"\n ## The Unstable Book\n \n [The Unstable Book](unstable-book/index.html) has documentation for unstable features.\n+\n+## The `rustc` Contribution Guide\n+\n+[The `rustc` Guide](https://rust-lang.github.io/rustc-guide/) documents how\n+the compiler works and how to contribute to it. This is useful if you want to build\n+or modify the Rust compiler from source (e.g. to target something non-standard)."}, {"sha": "631f64a11dbae917a06deb289762a70c74455c30", "filename": "src/doc/rust.css", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fdoc%2Frust.css", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fdoc%2Frust.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frust.css?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,15 +1,3 @@\n-/**\n- * Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n- * file at the top-level directory of this distribution and at\n- * http://rust-lang.org/COPYRIGHT.\n- * With elements taken from Bootstrap v3.0.2 (MIT licensed).\n- *\n- * Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n- * http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n- * <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n- * option. This file may not be copied, modified, or distributed\n- * except according to those terms.\n- */\n @font-face {\n \tfont-family: 'Fira Sans';\n \tfont-style: normal;"}, {"sha": "7fbbe686b5bd02b90a9bdd8b3d678cb46f05ee0a", "filename": "src/doc/rustc/src/lints/listing/warn-by-default.md", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flisting%2Fwarn-by-default.md", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flisting%2Fwarn-by-default.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flisting%2Fwarn-by-default.md?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -24,7 +24,7 @@ warning: attempt to add with overflow\n \n ## dead-code\n \n-This lint detects detect unused, unexported items. Some\n+This lint detects unused, unexported items. Some\n example code that triggers this lint:\n \n ```rust\n@@ -44,7 +44,7 @@ warning: function is never used: `foo`\n \n ## deprecated\n \n-This lint detects detects use of deprecated items. Some\n+This lint detects use of deprecated items. Some\n example code that triggers this lint:\n \n ```rust\n@@ -119,7 +119,7 @@ warning: found struct without foreign-function-safe representation annotation in\n \n ## late-bound-lifetime-arguments\n \n-This lint detects detects generic lifetime arguments in path segments with\n+This lint detects generic lifetime arguments in path segments with\n late bound lifetime parameters. Some example code that triggers this lint:\n \n ```rust\n@@ -381,7 +381,7 @@ extern crate macro_crate_test;\n \n ## private-in-public\n \n-This lint detects detect private items in public interfaces not caught by the old implementation. Some\n+This lint detects private items in public interfaces not caught by the old implementation. Some\n example code that triggers this lint:\n \n ```rust,ignore\n@@ -659,7 +659,7 @@ warning: unknown lint: `not_a_real_lint`\n \n ## unreachable-code\n \n-This lint detects detects unreachable code paths. Some example code that\n+This lint detects unreachable code paths. Some example code that\n triggers this lint:\n \n ```rust,no_run\n@@ -681,7 +681,7 @@ warning: unreachable statement\n \n ## unreachable-patterns\n \n-This lint detects detects unreachable patterns. Some\n+This lint detects unreachable patterns. Some\n example code that triggers this lint:\n \n ```rust\n@@ -716,11 +716,11 @@ annotations now.\n \n ## unused-allocation\n \n-This lint detects detects unnecessary allocations that can be eliminated.\n+This lint detects unnecessary allocations that can be eliminated.\n \n ## unused-assignments\n \n-This lint detects detect assignments that will never be read. Some\n+This lint detects assignments that will never be read. Some\n example code that triggers this lint:\n \n ```rust\n@@ -741,7 +741,7 @@ warning: value assigned to `x` is never read\n \n ## unused-attributes\n \n-This lint detects detects attributes that were not used by the compiler. Some\n+This lint detects attributes that were not used by the compiler. Some\n example code that triggers this lint:\n \n ```rust\n@@ -785,7 +785,7 @@ warning: comparison is useless due to type limits\n \n ## unused-doc-comment\n \n-This lint detects detects doc comments that aren't used by rustdoc. Some\n+This lint detects doc comments that aren't used by rustdoc. Some\n example code that triggers this lint:\n \n ```rust\n@@ -831,7 +831,7 @@ warning: unused import: `std::collections::HashMap`\n \n ## unused-macros\n \n-This lint detects detects macros that were not used. Some example code that\n+This lint detects macros that were not used. Some example code that\n triggers this lint:\n \n ```rust\n@@ -884,7 +884,7 @@ warning: unused `std::result::Result` that must be used\n \n ## unused-mut\n \n-This lint detects detect mut variables which don't need to be mutable. Some\n+This lint detects mut variables which don't need to be mutable. Some\n example code that triggers this lint:\n \n ```rust\n@@ -946,7 +946,7 @@ warning: unnecessary `unsafe` block\n \n ## unused-variables\n \n-This lint detects detect variables which are not used in any way. Some\n+This lint detects variables which are not used in any way. Some\n example code that triggers this lint:\n \n ```rust"}, {"sha": "9dcc9f7daa9ff5e62ff24d5cab65bc4886232f1c", "filename": "src/doc/rustc/src/what-is-rustc.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fdoc%2Frustc%2Fsrc%2Fwhat-is-rustc.md", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fdoc%2Frustc%2Fsrc%2Fwhat-is-rustc.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fwhat-is-rustc.md?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -50,7 +50,7 @@ fn main() {\n And a `foo.rs` that had this:\n \n ```rust,ignore\n-fn hello() {\n+pub fn hello() {\n     println!(\"Hello, world!\");\n }\n ```\n@@ -65,4 +65,4 @@ No need to tell `rustc` about `foo.rs`; the `mod` statements give it\n everything that it needs. This is different than how you would use a C\n compiler, where you invoke the compiler on each file, and then link\n everything together. In other words, the *crate* is a translation unit, not a\n-particular module.\n\\ No newline at end of file\n+particular module."}, {"sha": "dcc13f53493f443f051cfa5a88687f4d901f533f", "filename": "src/doc/rustdoc/src/documentation-tests.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -171,7 +171,7 @@ compiles, while only showing the parts that are relevant to that part of your\n explanation.\n \n The `#`-hiding of lines can be prevented by using two consecutive hashes\n-`##`. This only needs to be done with with the first `#` which would've\n+`##`. This only needs to be done with the first `#` which would've\n otherwise caused hiding. If we have a string literal like the following,\n which has a line that starts with a `#`:\n "}, {"sha": "905b06465340a7845e4b445adc67b0cb94fbc475", "filename": "src/doc/rustdoc/src/unstable-features.md", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -402,3 +402,18 @@ Using `index-page` option enables `enable-index-page` option as well.\n ### `--enable-index-page`: generate a default index page for docs\n \n This feature allows the generation of a default index-page which lists the generated crates.\n+\n+### `--static-root-path`: control how static files are loaded in HTML output\n+\n+Using this flag looks like this:\n+\n+```bash\n+$ rustdoc src/lib.rs -Z unstable-options --static-root-path '/cache/'\n+```\n+\n+This flag controls how rustdoc links to its static files on HTML pages. If you're hosting a lot of\n+crates' docs generated by the same version of rustdoc, you can use this flag to cache rustdoc's CSS,\n+JavaScript, and font files in a single location, rather than duplicating it once per \"doc root\"\n+(grouping of crate docs generated into the same output directory, like with `cargo doc`). Per-crate\n+files like the search index will still load from the documentation root, but anything that gets\n+renamed with `--resource-suffix` will load from the given path."}, {"sha": "6365d3e71c61616616519446b001db51c03782b2", "filename": "src/doc/unstable-book/src/language-features/cfg-attr-multi.md", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f9f71cc32497ee4e3cbc7d9795bcf358a9268c13/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fcfg-attr-multi.md", "raw_url": "https://github.com/rust-lang/rust/raw/f9f71cc32497ee4e3cbc7d9795bcf358a9268c13/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fcfg-attr-multi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fcfg-attr-multi.md?ref=f9f71cc32497ee4e3cbc7d9795bcf358a9268c13", "patch": "@@ -1,20 +0,0 @@\n-# `cfg_attr_multi`\n-\n-The tracking issue for this feature is: [#54881]\n-The RFC for this feature is: [#2539]\n-\n-[#54881]: https://github.com/rust-lang/rust/issues/54881\n-[#2539]: https://github.com/rust-lang/rfcs/pull/2539\n-\n-------------------------\n-\n-This feature flag lets you put multiple attributes into a `cfg_attr` attribute.\n-\n-Example:\n-\n-```rust,ignore\n-#[cfg_attr(all(), must_use, optimize)]\n-```\n-\n-Because `cfg_attr` resolves before procedural macros, this does not affect\n-macro resolution at all.\n\\ No newline at end of file"}, {"sha": "46957c00bf95c749961c44af34d0e455871c5967", "filename": "src/doc/unstable-book/src/language-features/non-ascii-idents.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fnon-ascii-idents.md", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fnon-ascii-idents.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fnon-ascii-idents.md?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,8 +1,8 @@\n # `non_ascii_idents`\n \n-The tracking issue for this feature is: [#28979]\n+The tracking issue for this feature is: [#55467]\n \n-[#28979]: https://github.com/rust-lang/rust/issues/28979\n+[#55467]: https://github.com/rust-lang/rust/issues/55467\n \n ------------------------\n "}, {"sha": "1e74652a890f6e48b73aa4016d341921e430fcde", "filename": "src/doc/unstable-book/src/language-features/re-rebalance-coherence.md", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fre-rebalance-coherence.md", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fre-rebalance-coherence.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fre-rebalance-coherence.md?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -0,0 +1,23 @@\n+# `re_rebalance_coherence`\n+\n+The tracking issue for this feature is: [#55437]\n+\n+[#55437]: https://github.com/rust-lang/rust/issues/55437\n+\n+------------------------\n+\n+The `re_rebalance_coherence` feature tweaks the rules regarding which trait\n+impls are allowed in crates.\n+The following rule is used:\n+\n+Given `impl<P1..=Pn> Trait<T1..=Tn> for T0`, an impl is valid only if at\n+least one of the following is true:\n+- `Trait` is a local trait\n+- All of\n+  - At least one of the types `T0..=Tn` must be a local type. Let `Ti` be the\n+    first such type.\n+  - No uncovered type parameters `P1..=Pn` may appear in `T0..Ti` (excluding\n+    `Ti`)\n+\n+\n+See the [RFC](https://github.com/rust-lang/rfcs/blob/master/text/2451-re-rebalancing-coherence.md) for details."}, {"sha": "2dd763d04b0abf6e03e00eb075200a24931f7875", "filename": "src/doc/unstable-book/src/language-features/repr-packed.md", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f9f71cc32497ee4e3cbc7d9795bcf358a9268c13/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Frepr-packed.md", "raw_url": "https://github.com/rust-lang/rust/raw/f9f71cc32497ee4e3cbc7d9795bcf358a9268c13/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Frepr-packed.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Frepr-packed.md?ref=f9f71cc32497ee4e3cbc7d9795bcf358a9268c13", "patch": "@@ -1,8 +0,0 @@\n-# `repr_packed`\n-\n-The tracking issue for this feature is [#33158]\n-\n-[#33158]: https://github.com/rust-lang/rust/issues/33158\n-\n-------------------------\n-"}, {"sha": "bcdeafc4b113717c431d8f833ae20a6a5c54e441", "filename": "src/doc/unstable-book/src/language-features/type-alias-enum-variants.md", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Ftype-alias-enum-variants.md", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Ftype-alias-enum-variants.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Ftype-alias-enum-variants.md?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -0,0 +1,36 @@\n+# `type_alias_enum_variants`\n+\n+The tracking issue for this feature is: [#49683]\n+\n+[#49683]: https://github.com/rust-lang/rust/issues/49683\n+\n+------------------------\n+\n+The `type_alias_enum_variants` feature enables the use of variants on type\n+aliases that refer to enums, as both a constructor and a pattern. That is,\n+it allows for the syntax `EnumAlias::Variant`, which behaves exactly the same\n+as `Enum::Variant` (assuming that `EnumAlias` is an alias for some enum type\n+`Enum`).\n+\n+Note that since `Self` exists as a type alias, this feature also enables the\n+use of the syntax `Self::Variant` within an impl block for an enum type.\n+\n+```rust\n+#![feature(type_alias_enum_variants)]\n+\n+enum Foo {\n+    Bar(i32),\n+    Baz { i: i32 },\n+}\n+\n+type Alias = Foo;\n+\n+fn main() {\n+    let t = Alias::Bar(0);\n+    let t = Alias::Baz { i: 0 };\n+    match t {\n+        Alias::Bar(_i) => {}\n+        Alias::Baz { i: _i } => {}\n+    }\n+}\n+```"}, {"sha": "77dc52a9350706dd3cb7d7b1763b43c03b95ee1f", "filename": "src/etc/cat-and-grep.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fcat-and-grep.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fcat-and-grep.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fcat-and-grep.sh?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,16 +1,6 @@\n #!/bin/sh\n set -eu\n \n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n # Performs `cat` and `grep` simultaneously for `run-make` tests in the Rust CI.\n #\n # This program will read lines from stdin and print them to stdout immediately."}, {"sha": "385ce8efab87bee6cb4447e046e10e8489d07811", "filename": "src/etc/debugger_pretty_printers_common.py", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fdebugger_pretty_printers_common.py", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fdebugger_pretty_printers_common.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fdebugger_pretty_printers_common.py?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n \"\"\"\n This module provides an abstraction layer over common Rust pretty printing\n functionality needed by both GDB and LLDB.\n@@ -352,8 +342,7 @@ def extract_length_ptr_and_cap_from_std_vec(vec_val):\n \n     vec_ptr_val = buf.get_child_at_index(0)\n     capacity = buf.get_child_at_index(1).as_integer()\n-    unique_ptr_val = vec_ptr_val.get_child_at_index(0)\n-    data_ptr = unique_ptr_val.get_child_at_index(0)\n+    data_ptr = vec_ptr_val.get_child_at_index(0)\n     assert data_ptr.type.get_dwarf_type_kind() == DWARF_TYPE_CODE_PTR\n     return (length, data_ptr, capacity)\n \n@@ -370,8 +359,7 @@ def extract_tail_head_ptr_and_cap_from_std_vecdeque(vec_val):\n \n     vec_ptr_val = buf.get_child_at_index(0)\n     capacity = buf.get_child_at_index(1).as_integer()\n-    unique_ptr_val = vec_ptr_val.get_child_at_index(0)\n-    data_ptr = unique_ptr_val.get_child_at_index(0)\n+    data_ptr = vec_ptr_val.get_child_at_index(0)\n     assert data_ptr.type.get_dwarf_type_kind() == DWARF_TYPE_CODE_PTR\n     return (tail, head, data_ptr, capacity)\n "}, {"sha": "2ffaf13dc8f65ace4f08be56206397188159e08b", "filename": "src/etc/dec2flt_table.py", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fdec2flt_table.py", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fdec2flt_table.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fdec2flt_table.py?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,14 +1,4 @@\n #!/usr/bin/env python2.7\n-#\n-# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n \"\"\"\n Generate powers of ten using William Clinger's ``AlgorithmM`` for use in\n@@ -93,16 +83,6 @@ def error(f, e, z):\n     return float(ulp_err)\n \n HEADER = \"\"\"\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Tables of approximations of powers of ten.\n //! DO NOT MODIFY: Generated by `src/etc/dec2flt_table.py`\n \"\"\""}, {"sha": "c551346bb00bfc8c7d8704491f3e7c2647f69df7", "filename": "src/etc/gdb_load_rust_pretty_printers.py", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fgdb_load_rust_pretty_printers.py", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fgdb_load_rust_pretty_printers.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgdb_load_rust_pretty_printers.py?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,12 +1,2 @@\n-# Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n import gdb_rust_pretty_printing\n gdb_rust_pretty_printing.register_printers(gdb.current_objfile())"}, {"sha": "08ae289d60374a51e42db4a7d42be5ee2fbbd97e", "filename": "src/etc/gdb_rust_pretty_printing.py", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fgdb_rust_pretty_printing.py", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fgdb_rust_pretty_printing.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgdb_rust_pretty_printing.py?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n import gdb\n import re\n import sys\n@@ -332,9 +322,7 @@ def children(self):\n \n # Yield each key (and optionally value) from a BoxedNode.\n def children_of_node(boxed_node, height, want_values):\n-    ptr = boxed_node['ptr']['pointer']\n-    # This is written oddly because we don't want to rely on the field name being `__0`.\n-    node_ptr = ptr[ptr.type.fields()[0]]\n+    node_ptr = boxed_node['ptr']['pointer']\n     if height > 0:\n         type_name = str(node_ptr.type.target()).replace('LeafNode', 'InternalNode')\n         node_type = gdb.lookup_type(type_name)"}, {"sha": "3d35ae07fbd682d1d9cc00f4098d5c11d0e5d9fe", "filename": "src/etc/generate-deriving-span-tests.py", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fgenerate-deriving-span-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fgenerate-deriving-span-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgenerate-deriving-span-tests.py?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,14 +1,4 @@\n #!/usr/bin/env python\n-#\n-# Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n \"\"\"\n This script creates a pile of compile-fail tests check that all the\n@@ -25,16 +15,7 @@\n \n YEAR = datetime.datetime.now().year\n \n-TEMPLATE = \"\"\"// Copyright {year} The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n+TEMPLATE = \"\"\"\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n {error_deriving}"}, {"sha": "9936ce71b76bc845764276572295314eb216893b", "filename": "src/etc/generate-keyword-tests.py", "status": "modified", "additions": 2, "deletions": 22, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fgenerate-keyword-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fgenerate-keyword-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgenerate-keyword-tests.py?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,14 +1,5 @@\n #!/usr/bin/env python\n-#\n-# Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n+\n \"\"\"\n This script takes a list of keywords and generates a testcase, that checks\n if using the keyword as identifier fails, for every keyword. The generate\n@@ -24,18 +15,7 @@\n import stat\n \n \n-template = \"\"\"// Copyright %d The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// compile-flags: -Z parse-only\n-\n+template = \"\"\"\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py %s'\n \n fn main() {"}, {"sha": "e8be2b9b53710461734468252c8b1b9e4610e57c", "filename": "src/etc/htmldocck.py", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fhtmldocck.py", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fhtmldocck.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fhtmldocck.py?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,12 +1,5 @@\n-# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n+#!/usr/bin/env python\n+# -*- coding: utf-8 -*-\n \n r\"\"\"\n htmldocck.py is a custom checker script for Rustdoc HTML outputs.\n@@ -108,7 +101,10 @@\n \n \"\"\"\n \n-from __future__ import print_function\n+from __future__ import absolute_import, print_function, unicode_literals\n+\n+import codecs\n+import io\n import sys\n import os.path\n import re\n@@ -120,14 +116,10 @@\n     from HTMLParser import HTMLParser\n from xml.etree import cElementTree as ET\n \n-# &larrb;/&rarrb; are not in HTML 4 but are in HTML 5\n try:\n-    from html.entities import entitydefs\n+    from html.entities import name2codepoint\n except ImportError:\n-    from htmlentitydefs import entitydefs\n-entitydefs['larrb'] = u'\\u21e4'\n-entitydefs['rarrb'] = u'\\u21e5'\n-entitydefs['nbsp'] = ' '\n+    from htmlentitydefs import name2codepoint\n \n # \"void elements\" (no closing tag) from the HTML Standard section 12.1.2\n VOID_ELEMENTS = set(['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen',\n@@ -167,11 +159,11 @@ def handle_data(self, data):\n         self.__builder.data(data)\n \n     def handle_entityref(self, name):\n-        self.__builder.data(entitydefs[name])\n+        self.__builder.data(unichr(name2codepoint[name]))\n \n     def handle_charref(self, name):\n         code = int(name[1:], 16) if name.startswith(('x', 'X')) else int(name, 10)\n-        self.__builder.data(unichr(code).encode('utf-8'))\n+        self.__builder.data(unichr(code))\n \n     def close(self):\n         HTMLParser.close(self)\n@@ -220,11 +212,11 @@ def concat_multi_lines(f):\n     (?<=(?<!\\S)@)(?P<negated>!?)\n     (?P<cmd>[A-Za-z]+(?:-[A-Za-z]+)*)\n     (?P<args>.*)$\n-''', re.X)\n+''', re.X | re.UNICODE)\n \n \n def get_commands(template):\n-    with open(template, 'rU') as f:\n+    with io.open(template, encoding='utf-8') as f:\n         for lineno, line in concat_multi_lines(f):\n             m = LINE_PATTERN.search(line)\n             if not m:\n@@ -236,7 +228,10 @@ def get_commands(template):\n             if args and not args[:1].isspace():\n                 print_err(lineno, line, 'Invalid template syntax')\n                 continue\n-            args = shlex.split(args)\n+            try:\n+                args = shlex.split(args)\n+            except UnicodeEncodeError:\n+                args = [arg.decode('utf-8') for arg in shlex.split(args.encode('utf-8'))]\n             yield Command(negated=negated, cmd=cmd, args=args, lineno=lineno+1, context=line)\n \n \n@@ -290,7 +285,7 @@ def get_file(self, path):\n         if not(os.path.exists(abspath) and os.path.isfile(abspath)):\n             raise FailedCheck('File does not exist {!r}'.format(path))\n \n-        with open(abspath) as f:\n+        with io.open(abspath, encoding='utf-8') as f:\n             data = f.read()\n             self.files[path] = data\n             return data\n@@ -304,9 +299,9 @@ def get_tree(self, path):\n         if not(os.path.exists(abspath) and os.path.isfile(abspath)):\n             raise FailedCheck('File does not exist {!r}'.format(path))\n \n-        with open(abspath) as f:\n+        with io.open(abspath, encoding='utf-8') as f:\n             try:\n-                tree = ET.parse(f, CustomHTMLParser())\n+                tree = ET.fromstringlist(f.readlines(), CustomHTMLParser())\n             except Exception as e:\n                 raise RuntimeError('Cannot parse an HTML file {!r}: {}'.format(path, e))\n             self.trees[path] = tree\n@@ -323,7 +318,7 @@ def check_string(data, pat, regexp):\n     if not pat:\n         return True # special case a presence testing\n     elif regexp:\n-        return re.search(pat, data) is not None\n+        return re.search(pat, data, flags=re.UNICODE) is not None\n     else:\n         data = ' '.join(data.split())\n         pat = ' '.join(pat.split())\n@@ -360,7 +355,7 @@ def check_tree_text(tree, path, pat, regexp):\n                     break\n     except Exception as e:\n         print('Failed to get path \"{}\"'.format(path))\n-        raise e\n+        raise\n     return ret\n \n \n@@ -369,7 +364,12 @@ def get_tree_count(tree, path):\n     return len(tree.findall(path))\n \n def stderr(*args):\n-    print(*args, file=sys.stderr)\n+    if sys.version_info.major < 3:\n+        file = codecs.getwriter('utf-8')(sys.stderr)\n+    else:\n+        file = sys.stderr\n+\n+    print(*args, file=file)\n \n def print_err(lineno, context, err, message=None):\n     global ERR_COUNT"}, {"sha": "6b4c44806740f36bc053c7a6917bea42473106c3", "filename": "src/etc/lldb_batchmode.py", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Flldb_batchmode.py", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Flldb_batchmode.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flldb_batchmode.py?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n # This script allows to use LLDB in a way similar to GDB's batch mode. That is, given a text file\n # containing LLDB commands (one command per line), this script will execute the commands one after\n # the other."}, {"sha": "2c651c90f82eb0fb9d618353fb972101ad48b519", "filename": "src/etc/lldb_rust_formatters.py", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Flldb_rust_formatters.py", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Flldb_rust_formatters.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flldb_rust_formatters.py?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n import lldb\n import re\n import debugger_pretty_printers_common as rustpp"}, {"sha": "fa97131f695f98e82285934ac683b9e703c0ea72", "filename": "src/etc/platform-intrinsics/generator.py", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fplatform-intrinsics%2Fgenerator.py", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fplatform-intrinsics%2Fgenerator.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fplatform-intrinsics%2Fgenerator.py?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n from __future__ import division, print_function\n import json\n import argparse\n@@ -788,16 +778,6 @@ def __init__(self):\n     @staticmethod\n     def open(platform):\n         return '''\\\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n // DO NOT EDIT: autogenerated by etc/platform-intrinsics/generator.py\n // ignore-tidy-linelength\n "}, {"sha": "23ba93da8e52932671db9638f2a1d6f196ac5d18", "filename": "src/etc/rust-gdb", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Frust-gdb", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Frust-gdb", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Frust-gdb?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,14 +1,4 @@\n #!/bin/sh\n-# Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n # Exit if anything fails\n set -e\n "}, {"sha": "08d598cde1c3d1ccb32306eee2650ec886df7f5d", "filename": "src/etc/rust-gdbgui", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Frust-gdbgui", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Frust-gdbgui", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Frust-gdbgui?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/bin/sh\n-# Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n # Exit if anything fails\n set -e"}, {"sha": "424302d495f3eb9d7d9742eb8c359dbdd9c1f0ba", "filename": "src/etc/rust-lldb", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Frust-lldb", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Frust-lldb", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Frust-lldb?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,4 @@\n #!/bin/sh\n-# Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n # Exit if anything fails\n set -e"}, {"sha": "2deb2a03a397646a84dc928f1c35a15a91b5e476", "filename": "src/etc/rust-windbg.cmd", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Frust-windbg.cmd", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Frust-windbg.cmd", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Frust-windbg.cmd?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,16 +1,6 @@\n @echo off\n setlocal\n \n-REM Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-REM file at the top-level directory of this distribution and at\n-REM http://rust-lang.org/COPYRIGHT.\n-REM\n-REM Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-REM http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-REM <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-REM option. This file may not be copied, modified, or distributed\n-REM except according to those terms.\n-\n for /f \"delims=\" %%i in ('rustc --print=sysroot') do set rustc_sysroot=%%i\n \n set rust_etc=%rustc_sysroot%\\lib\\rustlib\\etc"}, {"sha": "9cbad5486b485d908c153f4d21b06319a7f50d6a", "filename": "src/etc/test-float-parse/_common.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2F_common.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2F_common.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Ftest-float-parse%2F_common.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::io;\n use std::io::prelude::*;\n use std::mem::transmute;"}, {"sha": "2d82918aabbdb02f19f4e08025bf4df06a008fa6", "filename": "src/etc/test-float-parse/few-ones.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Ffew-ones.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Ffew-ones.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Ftest-float-parse%2Ffew-ones.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n mod _common;\n \n use _common::validate;"}, {"sha": "9a16d9c60280dca68f67952c1c0316015f0cb7ca", "filename": "src/etc/test-float-parse/huge-pow10.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Fhuge-pow10.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Fhuge-pow10.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Ftest-float-parse%2Fhuge-pow10.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n mod _common;\n \n use _common::validate;"}, {"sha": "55e4f07cd0cc3b8f811f95f55743d07f8e881694", "filename": "src/etc/test-float-parse/long-fractions.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Flong-fractions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Flong-fractions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Ftest-float-parse%2Flong-fractions.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n mod _common;\n \n use std::char;"}, {"sha": "76da818c7091f3671e783d41e747da38c600efd4", "filename": "src/etc/test-float-parse/many-digits.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Fmany-digits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Fmany-digits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Ftest-float-parse%2Fmany-digits.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n extern crate rand;\n \n mod _common;"}, {"sha": "39ad63945cd11b3349a671beb419f7edbd6a7df9", "filename": "src/etc/test-float-parse/rand-f64.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Frand-f64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Frand-f64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Ftest-float-parse%2Frand-f64.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n extern crate rand;\n \n mod _common;"}, {"sha": "852bc77589616a6cc3d2d29e4a8d73ebb3465d20", "filename": "src/etc/test-float-parse/runtests.py", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Fruntests.py", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Fruntests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Ftest-float-parse%2Fruntests.py?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,14 +1,4 @@\n #!/usr/bin/env python2.7\n-#\n-# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n \"\"\"\n Testing dec2flt"}, {"sha": "8b9b6f78ae35aba4f3b48438710c3589644edb29", "filename": "src/etc/test-float-parse/short-decimals.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Fshort-decimals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Fshort-decimals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Ftest-float-parse%2Fshort-decimals.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n mod _common;\n \n use _common::validate;"}, {"sha": "448482c6eb817c16e2c90e0c276ad3c19731cf4b", "filename": "src/etc/test-float-parse/subnorm.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Fsubnorm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Fsubnorm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Ftest-float-parse%2Fsubnorm.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n mod _common;\n \n use std::mem::transmute;"}, {"sha": "43fad5b49eee6988ac5d822228cdfad94a56c45f", "filename": "src/etc/test-float-parse/tiny-pow10.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Ftiny-pow10.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Ftiny-pow10.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Ftest-float-parse%2Ftiny-pow10.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n mod _common;\n \n use _common::validate;"}, {"sha": "3ae62425adf0bab5d0b49ebed0d79be28b491942", "filename": "src/etc/test-float-parse/u32-small.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Fu32-small.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Fu32-small.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Ftest-float-parse%2Fu32-small.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n mod _common;\n \n use _common::validate;"}, {"sha": "1c9bda948ffd3d41f8095adf5a7dd511457d8832", "filename": "src/etc/test-float-parse/u64-pow2.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Fu64-pow2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Ftest-float-parse%2Fu64-pow2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Ftest-float-parse%2Fu64-pow2.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n mod _common;\n \n use _common::validate;"}, {"sha": "2a89c0d321d6a4cb8f5e1f1cd4e588ece33e4fac", "filename": "src/etc/wasm32-shim.js", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fwasm32-shim.js", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fetc%2Fwasm32-shim.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fwasm32-shim.js?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n // This is a small \"shim\" program which is used when wasm32 unit tests are run\n // in this repository. This program is intended to be run in node.js and will\n // load a wasm module into memory, instantiate it with a set of imports, and"}, {"sha": "1feb781b2b39ff4984156ca9fd695b61dcd41da1", "filename": "src/grammar/lexer.l", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fgrammar%2Flexer.l", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fgrammar%2Flexer.l", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Flexer.l?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,14 +1,4 @@\n %{\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #include <stdio.h>\n #include <ctype.h>\n "}, {"sha": "6348190cc140bc8ae496ec99a9000ef4d934c334", "filename": "src/grammar/parser-lalr-main.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fgrammar%2Fparser-lalr-main.c", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fgrammar%2Fparser-lalr-main.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fparser-lalr-main.c?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #include <stdio.h>\n #include <stdarg.h>\n #include <stdlib.h>"}, {"sha": "5585c95a5a63a828558a6a9073b57458d1220fbc", "filename": "src/grammar/parser-lalr.y", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fgrammar%2Fparser-lalr.y", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fgrammar%2Fparser-lalr.y", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fparser-lalr.y?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n %{\n #define YYERROR_VERBOSE\n #define YYSTYPE struct node *"}, {"sha": "4b5a7fb9e10b5c4ce4f6d6f52932787194713d5d", "filename": "src/grammar/testparser.py", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fgrammar%2Ftestparser.py", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fgrammar%2Ftestparser.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Ftestparser.py?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,14 +1,4 @@\n #!/usr/bin/env python\n-#\n-# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n # ignore-tidy-linelength\n "}, {"sha": "297e3dc841e871502e2270c95fdf6565806f0f5a", "filename": "src/grammar/tokens.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fgrammar%2Ftokens.h", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fgrammar%2Ftokens.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Ftokens.h?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n enum Token {\n   SHL = 257, // Parser generators reserve 0-256 for char literals\n   SHR,"}, {"sha": "861c7cecb887943aa3b740f50dbc8511eb314b0e", "filename": "src/liballoc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2FCargo.toml?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -15,6 +15,7 @@ compiler_builtins = { version = \"0.1.0\", features = ['rustc-dep-of-std'] }\n \n [dev-dependencies]\n rand = \"0.6\"\n+rand_xorshift = \"0.1\"\n \n [[test]]\n name = \"collectionstests\""}, {"sha": "096cb51e0d3efe3900c389dbbd023d1ec23e9650", "filename": "src/liballoc/alloc.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Falloc.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014-2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Memory allocation APIs\n \n #![stable(feature = \"alloc_module\", since = \"1.28.0\")]"}, {"sha": "a6f584534d1745c73e3467272c61b6680184705a", "filename": "src/liballoc/benches/btree/map.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbenches%2Fbtree%2Fmap.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,18 +1,7 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-\n use std::iter::Iterator;\n use std::vec::Vec;\n use std::collections::BTreeMap;\n-use rand::{Rng, thread_rng};\n+use rand::{Rng, seq::SliceRandom, thread_rng};\n use test::{Bencher, black_box};\n \n macro_rules! map_insert_rand_bench {\n@@ -78,7 +67,7 @@ macro_rules! map_find_rand_bench {\n                 map.insert(k, k);\n             }\n \n-            rng.shuffle(&mut keys);\n+            keys.shuffle(&mut rng);\n \n             // measure\n             let mut i = 0;"}, {"sha": "4dc2dfd9153e787e883adec24cb054f69f78ae17", "filename": "src/liballoc/benches/btree/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Fbtree%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Fbtree%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbenches%2Fbtree%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,11 +1 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n mod map;"}, {"sha": "08c69ee6e85079aa8abb498f964b64d5a3a7f57e", "filename": "src/liballoc/benches/lib.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbenches%2Flib.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,18 +1,9 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![feature(repr_simd)]\n #![feature(slice_sort_by_cached_key)]\n #![feature(test)]\n \n extern crate rand;\n+extern crate rand_xorshift;\n extern crate test;\n \n mod btree;"}, {"sha": "29c5ad2bc6eb2490430b9962ecfa7d7498810570", "filename": "src/liballoc/benches/linked_list.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbenches%2Flinked_list.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::collections::LinkedList;\n use test::Bencher;\n "}, {"sha": "b9ebd74f7999ad74dadf97b9f694f43ccbda6460", "filename": "src/liballoc/benches/slice.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbenches%2Fslice.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,19 +1,10 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use rand::{thread_rng};\n use std::mem;\n use std::ptr;\n \n-use rand::{Rng, SeedableRng, XorShiftRng};\n+use rand::{Rng, SeedableRng};\n use rand::distributions::{Standard, Alphanumeric};\n+use rand_xorshift::XorShiftRng;\n use test::{Bencher, black_box};\n \n #[bench]"}, {"sha": "7f8661bd9688870c3d3c6c9158f92c6375855fe7", "filename": "src/liballoc/benches/str.rs", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbenches%2Fstr.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use test::{Bencher, black_box};\n \n #[bench]\n@@ -274,11 +264,11 @@ make_test!(split_a_str, s, s.split(\"a\").count());\n make_test!(trim_ascii_char, s, {\n     s.trim_matches(|c: char| c.is_ascii())\n });\n-make_test!(trim_left_ascii_char, s, {\n-    s.trim_left_matches(|c: char| c.is_ascii())\n+make_test!(trim_start_ascii_char, s, {\n+    s.trim_start_matches(|c: char| c.is_ascii())\n });\n-make_test!(trim_right_ascii_char, s, {\n-    s.trim_right_matches(|c: char| c.is_ascii())\n+make_test!(trim_end_ascii_char, s, {\n+    s.trim_end_matches(|c: char| c.is_ascii())\n });\n \n make_test!(find_underscore_char, s, s.find('_'));"}, {"sha": "2933014cb58e918461795f09d8fd0416aaeae670", "filename": "src/liballoc/benches/string.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbenches%2Fstring.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::iter::repeat;\n use test::Bencher;\n "}, {"sha": "590c49f4ef500560349232ce6eefb2670f4c4d0d", "filename": "src/liballoc/benches/vec.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbenches%2Fvec.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use test::Bencher;\n use std::iter::{FromIterator, repeat};\n "}, {"sha": "f7aadbdbd8266f66966392d4494d0cc1dd8eb968", "filename": "src/liballoc/benches/vec_deque.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbenches%2Fvec_deque.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::collections::VecDeque;\n use test::{Bencher, black_box};\n "}, {"sha": "2db8fbe130907fee6c61ef720bffe2b212102a3d", "filename": "src/liballoc/benches/vec_deque_append.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Fvec_deque_append.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fbenches%2Fvec_deque_append.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbenches%2Fvec_deque_append.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,14 +1,4 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![feature(duration_as_u128)]\n+#![cfg_attr(stage0, feature(duration_as_u128))]\n use std::{collections::VecDeque, time::Instant};\n \n const VECDEQUE_LEN: i32 = 100000;"}, {"sha": "603d73100a8b45fabd41b56609c36b3627082ca8", "filename": "src/liballoc/borrow.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fborrow.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! A module for working with borrowed data.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "1c459f5c4250e462c63d86d094b0d21f2e8b5e21", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 81, "deletions": 20, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! A pointer type for heap allocation.\n //!\n //! `Box<T>`, casually referred to as a 'box', provides the simplest form of\n@@ -77,7 +67,9 @@ use core::iter::{Iterator, FromIterator, FusedIterator};\n use core::marker::{Unpin, Unsize};\n use core::mem;\n use core::pin::Pin;\n-use core::ops::{CoerceUnsized, DispatchFromDyn, Deref, DerefMut, Generator, GeneratorState};\n+use core::ops::{\n+    CoerceUnsized, DispatchFromDyn, Deref, DerefMut, Receiver, Generator, GeneratorState\n+};\n use core::ptr::{self, NonNull, Unique};\n use core::task::{LocalWaker, Poll};\n \n@@ -109,9 +101,11 @@ impl<T> Box<T> {\n         box x\n     }\n \n-    #[unstable(feature = \"pin\", issue = \"49150\")]\n+    /// Constructs a new `Pin<Box<T>>`. If `T` does not implement `Unpin`, then\n+    /// `x` will be pinned in memory and unable to be moved.\n+    #[stable(feature = \"pin\", since = \"1.33.0\")]\n     #[inline(always)]\n-    pub fn pinned(x: T) -> Pin<Box<T>> {\n+    pub fn pin(x: T) -> Pin<Box<T>> {\n         (box x).into()\n     }\n }\n@@ -263,6 +257,19 @@ impl<T: ?Sized> Box<T> {\n     {\n         unsafe { &mut *Box::into_raw(b) }\n     }\n+\n+    /// Converts a `Box<T>` into a `Pin<Box<T>>`\n+    ///\n+    /// This conversion does not allocate on the heap and happens in place.\n+    ///\n+    /// This is also available via [`From`].\n+    #[unstable(feature = \"box_into_pin\", issue = \"0\")]\n+    pub fn into_pin(boxed: Box<T>) -> Pin<Box<T>> {\n+        // It's not possible to move or replace the insides of a `Pin<Box<T>>`\n+        // when `T: !Unpin`,  so it's safe to pin it directly without any\n+        // additional requirements.\n+        unsafe { Pin::new_unchecked(boxed) }\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -439,23 +446,48 @@ impl<T: ?Sized + Hasher> Hasher for Box<T> {\n \n #[stable(feature = \"from_for_ptrs\", since = \"1.6.0\")]\n impl<T> From<T> for Box<T> {\n+    /// Converts a generic type `T` into a `Box<T>`\n+    ///\n+    /// The conversion allocates on the heap and moves `t`\n+    /// from the stack into it.\n+    ///\n+    /// # Examples\n+    /// ```rust\n+    /// let x = 5;\n+    /// let boxed = Box::new(5);\n+    ///\n+    /// assert_eq!(Box::from(x), boxed);\n+    /// ```\n     fn from(t: T) -> Self {\n         Box::new(t)\n     }\n }\n \n-#[unstable(feature = \"pin\", issue = \"49150\")]\n-impl<T> From<Box<T>> for Pin<Box<T>> {\n+#[stable(feature = \"pin\", since = \"1.33.0\")]\n+impl<T: ?Sized> From<Box<T>> for Pin<Box<T>> {\n+    /// Converts a `Box<T>` into a `Pin<Box<T>>`\n+    ///\n+    /// This conversion does not allocate on the heap and happens in place.\n     fn from(boxed: Box<T>) -> Self {\n-        // It's not possible to move or replace the insides of a `Pin<Box<T>>`\n-        // when `T: !Unpin`,  so it's safe to pin it directly without any\n-        // additional requirements.\n-        unsafe { Pin::new_unchecked(boxed) }\n+        Box::into_pin(boxed)\n     }\n }\n \n #[stable(feature = \"box_from_slice\", since = \"1.17.0\")]\n impl<'a, T: Copy> From<&'a [T]> for Box<[T]> {\n+    /// Converts a `&[T]` into a `Box<[T]>`\n+    ///\n+    /// This conversion allocates on the heap\n+    /// and performs a copy of `slice`.\n+    ///\n+    /// # Examples\n+    /// ```rust\n+    /// // create a &[u8] which will be used to create a Box<[u8]>\n+    /// let slice: &[u8] = &[104, 101, 108, 108, 111];\n+    /// let boxed_slice: Box<[u8]> = Box::from(slice);\n+    ///\n+    /// println!(\"{:?}\", boxed_slice);\n+    /// ```\n     fn from(slice: &'a [T]) -> Box<[T]> {\n         let mut boxed = unsafe { RawVec::with_capacity(slice.len()).into_box() };\n         boxed.copy_from_slice(slice);\n@@ -465,6 +497,16 @@ impl<'a, T: Copy> From<&'a [T]> for Box<[T]> {\n \n #[stable(feature = \"box_from_slice\", since = \"1.17.0\")]\n impl<'a> From<&'a str> for Box<str> {\n+    /// Converts a `&str` into a `Box<str>`\n+    ///\n+    /// This conversion allocates on the heap\n+    /// and performs a copy of `s`.\n+    ///\n+    /// # Examples\n+    /// ```rust\n+    /// let boxed: Box<str> = Box::from(\"hello\");\n+    /// println!(\"{}\", boxed);\n+    /// ```\n     #[inline]\n     fn from(s: &'a str) -> Box<str> {\n         unsafe { from_boxed_utf8_unchecked(Box::from(s.as_bytes())) }\n@@ -473,6 +515,22 @@ impl<'a> From<&'a str> for Box<str> {\n \n #[stable(feature = \"boxed_str_conv\", since = \"1.19.0\")]\n impl From<Box<str>> for Box<[u8]> {\n+    /// Converts a `Box<str>>` into a `Box<[u8]>`\n+    ///\n+    /// This conversion does not allocate on the heap and happens in place.\n+    ///\n+    /// # Examples\n+    /// ```rust\n+    /// // create a Box<str> which will be used to create a Box<[u8]>\n+    /// let boxed: Box<str> = Box::from(\"hello\");\n+    /// let boxed_str: Box<[u8]> = Box::from(boxed);\n+    ///\n+    /// // create a &[u8] which will be used to create a Box<[u8]>\n+    /// let slice: &[u8] = &[104, 101, 108, 108, 111];\n+    /// let boxed_slice = Box::from(slice);\n+    ///\n+    /// assert_eq!(boxed_slice, boxed_str);\n+    /// ```\n     #[inline]\n     fn from(s: Box<str>) -> Self {\n         unsafe { Box::from_raw(Box::into_raw(s) as *mut [u8]) }\n@@ -583,6 +641,9 @@ impl<T: ?Sized> DerefMut for Box<T> {\n     }\n }\n \n+#[unstable(feature = \"receiver_trait\", issue = \"0\")]\n+impl<T: ?Sized> Receiver for Box<T> {}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<I: Iterator + ?Sized> Iterator for Box<I> {\n     type Item = I::Item;\n@@ -808,7 +869,7 @@ impl<T: ?Sized> AsMut<T> for Box<T> {\n  *  implementation of `Unpin` (where `T: Unpin`) would be valid/safe, and\n  *  could have a method to project a Pin<T> from it.\n  */\n-#[unstable(feature = \"pin\", issue = \"49150\")]\n+#[stable(feature = \"pin\", since = \"1.33.0\")]\n impl<T: ?Sized> Unpin for Box<T> { }\n \n #[unstable(feature = \"generator_trait\", issue = \"43122\")]"}, {"sha": "654eabd0703263d7464480e102a636ac4183cc89", "filename": "src/liballoc/boxed_test.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fboxed_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fboxed_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed_test.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Test for `boxed` mod.\n \n use core::any::Any;"}, {"sha": "ad544e6015e4a5fe3b64d0e4f00914c16749cf40", "filename": "src/liballoc/collections/binary_heap.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! A priority queue implemented with a binary heap.\n //!\n //! Insertion and popping the largest element have `O(log n)` time complexity."}, {"sha": "717650aca9600cd1fa63824d53bf4a0f4846bc75", "filename": "src/liballoc/collections/btree/map.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use core::cmp::Ordering;\n use core::fmt::Debug;\n use core::hash::{Hash, Hasher};\n@@ -97,6 +87,9 @@ use self::Entry::*;\n ///     }\n /// }\n ///\n+/// // Look up the value for a key (will panic if the key is not found).\n+/// println!(\"Movie review: {}\", movie_reviews[\"Office Space\"]);\n+///\n /// // iterate over everything.\n /// for (movie, review) in &movie_reviews {\n ///     println!(\"{}: \\\"{}\\\"\", movie, review);"}, {"sha": "8b7dc07063b626e99d9593805f4658544cefbffa", "filename": "src/liballoc/collections/btree/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fcollections%2Fbtree%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fcollections%2Fbtree%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n mod node;\n mod search;\n pub mod map;"}, {"sha": "f9a21aa95db71c43d2f29e5d97a2a609363c2be5", "filename": "src/liballoc/collections/btree/node.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fcollections%2Fbtree%2Fnode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fcollections%2Fbtree%2Fnode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fnode.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n // This is an attempt at an implementation following the ideal\n //\n // ```"}, {"sha": "9010de7c16ac3f1556990b152902d6cb6f679c9e", "filename": "src/liballoc/collections/btree/search.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fcollections%2Fbtree%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fcollections%2Fbtree%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fsearch.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use core::cmp::Ordering;\n \n use borrow::Borrow;"}, {"sha": "71fec7da9a5ed415a3a8abbb82487616db57ceef", "filename": "src/liballoc/collections/btree/set.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fset.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n // This is pretty much entirely stolen from TreeSet, since BTreeMap has an identical interface\n // to TreeMap\n "}, {"sha": "804a2e9c8873b6df5d21630413c2f4786ade23f3", "filename": "src/liballoc/collections/linked_list.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Flinked_list.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! A doubly-linked list with owned nodes.\n //!\n //! The `LinkedList` allows pushing and popping elements at either end"}, {"sha": "138f5d79bb00849bff3ce6a97a88fc385c7783f2", "filename": "src/liballoc/collections/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fcollections%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fcollections%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Collection types.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "b3f7ef5fd6eccf18c24cea8a383ff80c6a3c55b5", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 113, "deletions": 13, "changes": 126, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! A double-ended queue implemented with a growable ring buffer.\n //!\n //! This queue has `O(1)` amortized inserts and removals from both ends of the\n@@ -1897,8 +1887,6 @@ impl<T> VecDeque<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(vec_resize_with)]\n-    ///\n     /// use std::collections::VecDeque;\n     ///\n     /// let mut buf = VecDeque::new();\n@@ -1917,7 +1905,7 @@ impl<T> VecDeque<T> {\n     /// buf.resize_with(5, || { state += 1; state });\n     /// assert_eq!(buf, [5, 10, 101, 102, 103]);\n     /// ```\n-    #[unstable(feature = \"vec_resize_with\", issue = \"41758\")]\n+    #[stable(feature = \"vec_resize_with\", since = \"1.33.0\")]\n     pub fn resize_with(&mut self, new_len: usize, generator: impl FnMut()->T) {\n         let len = self.len();\n \n@@ -1927,6 +1915,118 @@ impl<T> VecDeque<T> {\n             self.truncate(new_len);\n         }\n     }\n+\n+    /// Rotates the double-ended queue `mid` places to the left.\n+    ///\n+    /// Equivalently,\n+    /// - Rotates item `mid` into the first position.\n+    /// - Pops the first `mid` items and pushes them to the end.\n+    /// - Rotates `len() - mid` places to the right.\n+    ///\n+    /// # Panics\n+    ///\n+    /// If `mid` is greater than `len()`.  Note that `mid == len()`\n+    /// does _not_ panic and is a no-op rotation.\n+    ///\n+    /// # Complexity\n+    ///\n+    /// Takes `O(min(mid, len() - mid))` time and no extra space.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(vecdeque_rotate)]\n+    ///\n+    /// use std::collections::VecDeque;\n+    ///\n+    /// let mut buf: VecDeque<_> = (0..10).collect();\n+    ///\n+    /// buf.rotate_left(3);\n+    /// assert_eq!(buf, [3, 4, 5, 6, 7, 8, 9, 0, 1, 2]);\n+    ///\n+    /// for i in 1..10 {\n+    ///     assert_eq!(i * 3 % 10, buf[0]);\n+    ///     buf.rotate_left(3);\n+    /// }\n+    /// assert_eq!(buf, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n+    /// ```\n+    #[unstable(feature = \"vecdeque_rotate\", issue = \"56686\")]\n+    pub fn rotate_left(&mut self, mid: usize) {\n+        assert!(mid <= self.len());\n+        let k = self.len() - mid;\n+        if mid <= k {\n+            unsafe { self.rotate_left_inner(mid) }\n+        } else {\n+            unsafe { self.rotate_right_inner(k) }\n+        }\n+    }\n+\n+    /// Rotates the double-ended queue `k` places to the right.\n+    ///\n+    /// Equivalently,\n+    /// - Rotates the first item into position `k`.\n+    /// - Pops the last `k` items and pushes them to the front.\n+    /// - Rotates `len() - k` places to the left.\n+    ///\n+    /// # Panics\n+    ///\n+    /// If `k` is greater than `len()`.  Note that `k == len()`\n+    /// does _not_ panic and is a no-op rotation.\n+    ///\n+    /// # Complexity\n+    ///\n+    /// Takes `O(min(k, len() - k))` time and no extra space.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(vecdeque_rotate)]\n+    ///\n+    /// use std::collections::VecDeque;\n+    ///\n+    /// let mut buf: VecDeque<_> = (0..10).collect();\n+    ///\n+    /// buf.rotate_right(3);\n+    /// assert_eq!(buf, [7, 8, 9, 0, 1, 2, 3, 4, 5, 6]);\n+    ///\n+    /// for i in 1..10 {\n+    ///     assert_eq!(0, buf[i * 3 % 10]);\n+    ///     buf.rotate_right(3);\n+    /// }\n+    /// assert_eq!(buf, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n+    /// ```\n+    #[unstable(feature = \"vecdeque_rotate\", issue = \"56686\")]\n+    pub fn rotate_right(&mut self, k: usize) {\n+        assert!(k <= self.len());\n+        let mid = self.len() - k;\n+        if k <= mid {\n+            unsafe { self.rotate_right_inner(k) }\n+        } else {\n+            unsafe { self.rotate_left_inner(mid) }\n+        }\n+    }\n+\n+    // Safety: the following two methods require that the rotation amount\n+    // be less than half the length of the deque.\n+    //\n+    // `wrap_copy` requres that `min(x, cap() - x) + copy_len <= cap()`,\n+    // but than `min` is never more than half the capacity, regardless of x,\n+    // so it's sound to call here because we're calling with something\n+    // less than half the length, which is never above half the capacity.\n+\n+    unsafe fn rotate_left_inner(&mut self, mid: usize) {\n+        debug_assert!(mid * 2 <= self.len());\n+        self.wrap_copy(self.head, self.tail, mid);\n+        self.head = self.wrap_add(self.head, mid);\n+        self.tail = self.wrap_add(self.tail, mid);\n+    }\n+\n+    unsafe fn rotate_right_inner(&mut self, k: usize) {\n+        debug_assert!(k * 2 <= self.len());\n+        self.head = self.wrap_sub(self.head, k);\n+        self.tail = self.wrap_sub(self.tail, k);\n+        self.wrap_copy(self.tail, self.head, k);\n+    }\n }\n \n impl<T: Clone> VecDeque<T> {"}, {"sha": "a1e7533449c699fb7faecb1b481d18ce64e44fb7", "filename": "src/liballoc/fmt.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ffmt.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2013-2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Utilities for formatting and printing `String`s.\n //!\n //! This module contains the runtime support for the [`format!`] syntax extension.\n@@ -37,6 +27,9 @@\n //! will then parse the format string and determine if the list of arguments\n //! provided is suitable to pass to this format string.\n //!\n+//! To convert a single value to a string, use the [`to_string`] method.  This\n+//! will use the [`Display`] formatting trait.\n+//!\n //! ## Positional parameters\n //!\n //! Each formatting argument is allowed to specify which value argument it's\n@@ -497,6 +490,7 @@\n //! [`write!`]: ../../std/macro.write.html\n //! [`Debug`]: trait.Debug.html\n //! [`format!`]: ../../std/macro.format.html\n+//! [`to_string`]: ../../std/string/trait.ToString.html\n //! [`writeln!`]: ../../std/macro.writeln.html\n //! [`write_fmt`]: ../../std/io/trait.Write.html#method.write_fmt\n //! [`std::io::Write`]: ../../std/io/trait.Write.html"}, {"sha": "3050a93ef39a095a3cac9793e548c5ca24253a08", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014-2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! # The Rust core allocation and collections library\n //!\n //! This library provides smart pointers and collections for managing\n@@ -72,6 +62,8 @@\n        test(no_crate_inject, attr(allow(unused_variables), deny(warnings))))]\n #![no_std]\n #![needs_allocator]\n+\n+#![deny(intra_doc_link_resolution_failure)]\n #![deny(missing_debug_implementations)]\n \n #![cfg_attr(not(test), feature(fn_traits))]\n@@ -100,10 +92,10 @@\n #![feature(nll)]\n #![feature(optin_builtin_traits)]\n #![feature(pattern)]\n-#![feature(pin)]\n #![feature(ptr_internals)]\n #![feature(ptr_offset_from)]\n #![feature(rustc_attrs)]\n+#![feature(receiver_trait)]\n #![feature(specialization)]\n #![feature(split_ascii_whitespace)]\n #![feature(staged_api)]"}, {"sha": "db91b07fa71b46b9e919d89db5bda4aed7ef2f8e", "filename": "src/liballoc/macros.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fmacros.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2013-2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n /// Creates a [`Vec`] containing the arguments.\n ///\n /// `vec!` allows `Vec`s to be defined with the same syntax as array expressions.\n@@ -83,9 +73,14 @@ macro_rules! vec {\n /// The same convention is used with [`print!`] and [`write!`] macros,\n /// depending on the intended destination of the string.\n ///\n+/// To convert a single value to a string, use the [`to_string`] method.  This\n+/// will use the [`Display`] formatting trait.\n+///\n /// [fmt]: ../std/fmt/index.html\n /// [`print!`]: ../std/macro.print.html\n /// [`write!`]: ../std/macro.write.html\n+/// [`to_string`]: ../std/string/trait.ToString.html\n+/// [`Display`]: ../std/fmt/trait.Display.html\n ///\n /// # Panics\n ///"}, {"sha": "7cd22095de417b587b233a28a3e42727db708a53", "filename": "src/liballoc/prelude.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fprelude.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The alloc Prelude\n //!\n //! The purpose of this module is to alleviate imports of commonly-used"}, {"sha": "c05452bcf4d5d0c21442869f10ec6f2c2195d41e", "filename": "src/liballoc/raw_vec.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fraw_vec.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![unstable(feature = \"raw_vec_internals\", reason = \"implementation detail\", issue = \"0\")]\n #![doc(hidden)]\n "}, {"sha": "d3a55c59ff69c1e33917ef52c8dba8c9eb65acab", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![allow(deprecated)]\n \n //! Single-threaded reference-counting pointers. 'Rc' stands for 'Reference\n@@ -253,7 +243,7 @@ use core::intrinsics::abort;\n use core::marker;\n use core::marker::{Unpin, Unsize, PhantomData};\n use core::mem::{self, align_of_val, forget, size_of_val};\n-use core::ops::Deref;\n+use core::ops::{Deref, Receiver};\n use core::ops::{CoerceUnsized, DispatchFromDyn};\n use core::pin::Pin;\n use core::ptr::{self, NonNull};\n@@ -325,8 +315,10 @@ impl<T> Rc<T> {\n         }\n     }\n \n-    #[unstable(feature = \"pin\", issue = \"49150\")]\n-    pub fn pinned(value: T) -> Pin<Rc<T>> {\n+    /// Constructs a new `Pin<Rc<T>>`. If `T` does not implement `Unpin`, then\n+    /// `value` will be pinned in memory and unable to be moved.\n+    #[stable(feature = \"pin\", since = \"1.33.0\")]\n+    pub fn pin(value: T) -> Pin<Rc<T>> {\n         unsafe { Pin::new_unchecked(Rc::new(value)) }\n     }\n \n@@ -813,6 +805,9 @@ impl<T: ?Sized> Deref for Rc<T> {\n     }\n }\n \n+#[unstable(feature = \"receiver_trait\", issue = \"0\")]\n+impl<T: ?Sized> Receiver for Rc<T> {}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n unsafe impl<#[may_dangle] T: ?Sized> Drop for Rc<T> {\n     /// Drops the `Rc`.\n@@ -840,6 +835,8 @@ unsafe impl<#[may_dangle] T: ?Sized> Drop for Rc<T> {\n     /// drop(foo);    // Doesn't print anything\n     /// drop(foo2);   // Prints \"dropped!\"\n     /// ```\n+    ///\n+    /// [`Weak`]: ../../std/rc/struct.Weak.html\n     fn drop(&mut self) {\n         unsafe {\n             self.dec_strong();\n@@ -1419,9 +1416,10 @@ impl<T: ?Sized + fmt::Debug> fmt::Debug for Weak<T> {\n #[stable(feature = \"downgraded_weak\", since = \"1.10.0\")]\n impl<T> Default for Weak<T> {\n     /// Constructs a new `Weak<T>`, allocating memory for `T` without initializing\n-    /// it. Calling [`upgrade`][Weak::upgrade] on the return value always gives [`None`].\n+    /// it. Calling [`upgrade`] on the return value always gives [`None`].\n     ///\n     /// [`None`]: ../../std/option/enum.Option.html\n+    /// [`upgrade`]: ../../std/rc/struct.Weak.html#method.upgrade\n     ///\n     /// # Examples\n     ///\n@@ -1928,5 +1926,5 @@ impl<T: ?Sized> AsRef<T> for Rc<T> {\n     }\n }\n \n-#[unstable(feature = \"pin\", issue = \"49150\")]\n+#[stable(feature = \"pin\", since = \"1.33.0\")]\n impl<T: ?Sized> Unpin for Rc<T> { }"}, {"sha": "db19f778617f4880f692351d9fe076513b1a47ed", "filename": "src/liballoc/slice.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fslice.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! A dynamically-sized view into a contiguous sequence, `[T]`.\n //!\n //! *[See also the slice primitive type](../../std/primitive.slice.html).*"}, {"sha": "60d9f1626138e2ba34dfba222617086cbe4057cb", "filename": "src/liballoc/str.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstr.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Unicode string slices.\n //!\n //! *[See also the `str` primitive type](../../std/primitive.str.html).*"}, {"sha": "fa15e9ad9018e120a9621ad4a068dfb6fb680126", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! A UTF-8 encoded, growable string.\n //!\n //! This module contains the [`String`] type, a trait for converting"}, {"sha": "390a079165054abfc049644d5bbcca4948483f80", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n //! Thread-safe reference-counting pointers.\n@@ -24,7 +14,7 @@ use core::fmt;\n use core::cmp::Ordering;\n use core::intrinsics::abort;\n use core::mem::{self, align_of_val, size_of_val};\n-use core::ops::Deref;\n+use core::ops::{Deref, Receiver};\n use core::ops::{CoerceUnsized, DispatchFromDyn};\n use core::pin::Pin;\n use core::ptr::{self, NonNull};\n@@ -303,8 +293,10 @@ impl<T> Arc<T> {\n         Arc { ptr: Box::into_raw_non_null(x), phantom: PhantomData }\n     }\n \n-    #[unstable(feature = \"pin\", issue = \"49150\")]\n-    pub fn pinned(data: T) -> Pin<Arc<T>> {\n+    /// Constructs a new `Pin<Arc<T>>`. If `T` does not implement `Unpin`, then\n+    /// `data` will be pinned in memory and unable to be moved.\n+    #[stable(feature = \"pin\", since = \"1.33.0\")]\n+    pub fn pin(data: T) -> Pin<Arc<T>> {\n         unsafe { Pin::new_unchecked(Arc::new(data)) }\n     }\n \n@@ -767,6 +759,9 @@ impl<T: ?Sized> Deref for Arc<T> {\n     }\n }\n \n+#[unstable(feature = \"receiver_trait\", issue = \"0\")]\n+impl<T: ?Sized> Receiver for Arc<T> {}\n+\n impl<T: Clone> Arc<T> {\n     /// Makes a mutable reference into the given `Arc`.\n     ///\n@@ -952,6 +947,8 @@ unsafe impl<#[may_dangle] T: ?Sized> Drop for Arc<T> {\n     /// drop(foo);    // Doesn't print anything\n     /// drop(foo2);   // Prints \"dropped!\"\n     /// ```\n+    ///\n+    /// [`Weak`]: ../../std/sync/struct.Weak.html\n     #[inline]\n     fn drop(&mut self) {\n         // Because `fetch_sub` is already atomic, we do not need to synchronize\n@@ -1219,10 +1216,11 @@ impl<T: ?Sized> Clone for Weak<T> {\n #[stable(feature = \"downgraded_weak\", since = \"1.10.0\")]\n impl<T> Default for Weak<T> {\n     /// Constructs a new `Weak<T>`, without allocating memory.\n-    /// Calling [`upgrade`][Weak::upgrade] on the return value always\n+    /// Calling [`upgrade`] on the return value always\n     /// gives [`None`].\n     ///\n     /// [`None`]: ../../std/option/enum.Option.html#variant.None\n+    /// [`upgrade`]: ../../std/sync/struct.Weak.html#method.upgrade\n     ///\n     /// # Examples\n     ///\n@@ -2044,5 +2042,5 @@ impl<T: ?Sized> AsRef<T> for Arc<T> {\n     }\n }\n \n-#[unstable(feature = \"pin\", issue = \"49150\")]\n+#[stable(feature = \"pin\", since = \"1.33.0\")]\n impl<T: ?Sized> Unpin for Arc<T> { }"}, {"sha": "604c56dd0176263b023598615411af745705c893", "filename": "src/liballoc/task.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftask.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Types and Traits for working with asynchronous tasks.\n \n pub use core::task::*;"}, {"sha": "2759b1b1cac2769696f43075f2ab6e756318cab1", "filename": "src/liballoc/tests/arc.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Farc.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::any::Any;\n use std::sync::{Arc, Weak};\n use std::cell::RefCell;"}, {"sha": "6af1cf4080947fa83dadd724fc26b6988dc5e7ba", "filename": "src/liballoc/tests/binary_heap.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fbinary_heap.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::cmp;\n use std::collections::BinaryHeap;\n use std::collections::binary_heap::{Drain, PeekMut};"}, {"sha": "05e0bdffaa86b508cb3f42ac89a870bcf6aa4ba6", "filename": "src/liballoc/tests/btree/map.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fbtree%2Fmap.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::collections::BTreeMap;\n use std::collections::btree_map::Entry::{Occupied, Vacant};\n use std::ops::Bound::{self, Excluded, Included, Unbounded};"}, {"sha": "4c704d0f8c28fa7106bc3364133e9c44c57471b5", "filename": "src/liballoc/tests/btree/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fbtree%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fbtree%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fbtree%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n mod map;\n mod set;\n "}, {"sha": "e24c04fd8acb3cd4f58588ea5d45fff96ae00760", "filename": "src/liballoc/tests/btree/set.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fbtree%2Fset.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::collections::BTreeSet;\n \n use std::iter::FromIterator;"}, {"sha": "eb6adb159b0fdfffd593416947a2612088deacf6", "filename": "src/liballoc/tests/cow_str.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fcow_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fcow_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fcow_str.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::borrow::Cow;\n \n // check that Cow<'a, str> implements addition"}, {"sha": "0ad092b4997f42cde9d2068acdeb29c6ecc12ef4", "filename": "src/liballoc/tests/fmt.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Ffmt.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2013-2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::fmt;\n \n #[test]"}, {"sha": "24eea1d2949657f7467f0f479b3ed011354ae6ae", "filename": "src/liballoc/tests/heap.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fheap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fheap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fheap.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::alloc::{Global, Alloc, Layout, System};\n \n /// https://github.com/rust-lang/rust/issues/45955"}, {"sha": "a76fd87a1a92da5bd3b5a523bf49b86c742245d1", "filename": "src/liballoc/tests/lib.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Flib.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,23 +1,14 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![feature(allocator_api)]\n #![feature(box_syntax)]\n #![feature(drain_filter)]\n #![feature(exact_size_is_empty)]\n #![feature(pattern)]\n+#![feature(repeat_generic_slice)]\n #![feature(slice_sort_by_cached_key)]\n #![feature(str_escape)]\n #![feature(try_reserve)]\n #![feature(unboxed_closures)]\n-#![feature(repeat_generic_slice)]\n+#![feature(vecdeque_rotate)]\n \n extern crate core;\n extern crate rand;"}, {"sha": "6e775f9650d120d336e6fbf0e428df9247f1bd6f", "filename": "src/liballoc/tests/linked_list.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Flinked_list.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::collections::LinkedList;\n \n #[test]"}, {"sha": "18f82e804100823bec0e4e9c92dc55e7e444efd4", "filename": "src/liballoc/tests/rc.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Frc.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::any::Any;\n use std::rc::{Rc, Weak};\n use std::cell::RefCell;"}, {"sha": "8ecd17236c048ec8e400031593451a0645fa3cd5", "filename": "src/liballoc/tests/slice.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fslice.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::cell::Cell;\n use std::cmp::Ordering::{Equal, Greater, Less};\n use std::cmp::Ordering;"}, {"sha": "66a1b947a7d3a65d06b15c16989e21966dcafe06", "filename": "src/liballoc/tests/str.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fstr.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::borrow::Cow;\n use std::cmp::Ordering::{Equal, Greater, Less};\n use std::str::from_utf8;"}, {"sha": "8a5bfca8b7db50409858f6965593a152fdb81da3", "filename": "src/liballoc/tests/string.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fstring.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::borrow::Cow;\n use std::collections::CollectionAllocErr::*;\n use std::mem::size_of;"}, {"sha": "0fdcf34c783a8966ce84b62d43acecbac202bab7", "filename": "src/liballoc/tests/vec.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fvec.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::borrow::Cow;\n use std::mem::size_of;\n use std::{usize, isize};"}, {"sha": "76831ba65e3b8ff27f8196565f142b951e385013", "filename": "src/liballoc/tests/vec_deque.rs", "status": "modified", "additions": 134, "deletions": 10, "changes": 144, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Ftests%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fvec_deque.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::collections::VecDeque;\n use std::fmt::Debug;\n use std::collections::vec_deque::{Drain};\n@@ -1309,3 +1299,137 @@ fn test_try_reserve_exact() {\n     }\n \n }\n+\n+#[test]\n+fn test_rotate_nop() {\n+    let mut v: VecDeque<_> = (0..10).collect();\n+    assert_unchanged(&v);\n+\n+    v.rotate_left(0);\n+    assert_unchanged(&v);\n+\n+    v.rotate_left(10);\n+    assert_unchanged(&v);\n+\n+    v.rotate_right(0);\n+    assert_unchanged(&v);\n+\n+    v.rotate_right(10);\n+    assert_unchanged(&v);\n+\n+    v.rotate_left(3);\n+    v.rotate_right(3);\n+    assert_unchanged(&v);\n+\n+    v.rotate_right(3);\n+    v.rotate_left(3);\n+    assert_unchanged(&v);\n+\n+    v.rotate_left(6);\n+    v.rotate_right(6);\n+    assert_unchanged(&v);\n+\n+    v.rotate_right(6);\n+    v.rotate_left(6);\n+    assert_unchanged(&v);\n+\n+    v.rotate_left(3);\n+    v.rotate_left(7);\n+    assert_unchanged(&v);\n+\n+    v.rotate_right(4);\n+    v.rotate_right(6);\n+    assert_unchanged(&v);\n+\n+    v.rotate_left(1);\n+    v.rotate_left(2);\n+    v.rotate_left(3);\n+    v.rotate_left(4);\n+    assert_unchanged(&v);\n+\n+    v.rotate_right(1);\n+    v.rotate_right(2);\n+    v.rotate_right(3);\n+    v.rotate_right(4);\n+    assert_unchanged(&v);\n+\n+    fn assert_unchanged(v: &VecDeque<i32>) {\n+        assert_eq!(v, &[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n+    }\n+}\n+\n+#[test]\n+fn test_rotate_left_parts() {\n+    let mut v: VecDeque<_> = (1..=7).collect();\n+    v.rotate_left(2);\n+    assert_eq!(v.as_slices(), (&[3, 4, 5, 6, 7, 1][..], &[2][..]));\n+    v.rotate_left(2);\n+    assert_eq!(v.as_slices(), (&[5, 6, 7, 1][..], &[2, 3, 4][..]));\n+    v.rotate_left(2);\n+    assert_eq!(v.as_slices(), (&[7, 1][..], &[2, 3, 4, 5, 6][..]));\n+    v.rotate_left(2);\n+    assert_eq!(v.as_slices(), (&[2, 3, 4, 5, 6, 7, 1][..], &[][..]));\n+    v.rotate_left(2);\n+    assert_eq!(v.as_slices(), (&[4, 5, 6, 7, 1, 2][..], &[3][..]));\n+    v.rotate_left(2);\n+    assert_eq!(v.as_slices(), (&[6, 7, 1, 2][..], &[3, 4, 5][..]));\n+    v.rotate_left(2);\n+    assert_eq!(v.as_slices(), (&[1, 2][..], &[3, 4, 5, 6, 7][..]));\n+}\n+\n+#[test]\n+fn test_rotate_right_parts() {\n+    let mut v: VecDeque<_> = (1..=7).collect();\n+    v.rotate_right(2);\n+    assert_eq!(v.as_slices(), (&[6, 7][..], &[1, 2, 3, 4, 5][..]));\n+    v.rotate_right(2);\n+    assert_eq!(v.as_slices(), (&[4, 5, 6, 7][..], &[1, 2, 3][..]));\n+    v.rotate_right(2);\n+    assert_eq!(v.as_slices(), (&[2, 3, 4, 5, 6, 7][..], &[1][..]));\n+    v.rotate_right(2);\n+    assert_eq!(v.as_slices(), (&[7, 1, 2, 3, 4, 5, 6][..], &[][..]));\n+    v.rotate_right(2);\n+    assert_eq!(v.as_slices(), (&[5, 6][..], &[7, 1, 2, 3, 4][..]));\n+    v.rotate_right(2);\n+    assert_eq!(v.as_slices(), (&[3, 4, 5, 6][..], &[7, 1, 2][..]));\n+    v.rotate_right(2);\n+    assert_eq!(v.as_slices(), (&[1, 2, 3, 4, 5, 6][..], &[7][..]));\n+}\n+\n+#[test]\n+fn test_rotate_left_random() {\n+    let shifts = [\n+        6, 1, 0, 11, 12, 1, 11, 7, 9, 3, 6, 1,\n+        4, 0, 5, 1, 3, 1, 12, 8, 3, 1, 11, 11,\n+        9, 4, 12, 3, 12, 9, 11, 1, 7, 9, 7, 2,\n+    ];\n+    let n = 12;\n+    let mut v: VecDeque<_> = (0..n).collect();\n+    let mut total_shift = 0;\n+    for shift in shifts.iter().cloned() {\n+        v.rotate_left(shift);\n+        total_shift += shift;\n+        for i in 0..n {\n+            assert_eq!(v[i], (i + total_shift) % n);\n+        }\n+    }\n+}\n+\n+#[test]\n+fn test_rotate_right_random() {\n+    let shifts = [\n+        6, 1, 0, 11, 12, 1, 11, 7, 9, 3, 6, 1,\n+        4, 0, 5, 1, 3, 1, 12, 8, 3, 1, 11, 11,\n+        9, 4, 12, 3, 12, 9, 11, 1, 7, 9, 7, 2,\n+    ];\n+    let n = 12;\n+    let mut v: VecDeque<_> = (0..n).collect();\n+    let mut total_shift = 0;\n+    for shift in shifts.iter().cloned() {\n+        v.rotate_right(shift);\n+        total_shift += shift;\n+        for i in 0..n {\n+            assert_eq!(v[(i + total_shift) % n], i);\n+        }\n+    }\n+}"}, {"sha": "b69c114ed45948e3b556443faae062105edfc0ff", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! A contiguous growable array type with heap-allocated contents, written\n //! `Vec<T>`.\n //!\n@@ -1241,8 +1231,6 @@ impl<T> Vec<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(vec_resize_with)]\n-    ///\n     /// let mut vec = vec![1, 2, 3];\n     /// vec.resize_with(5, Default::default);\n     /// assert_eq!(vec, [1, 2, 3, 0, 0]);\n@@ -1255,7 +1243,7 @@ impl<T> Vec<T> {\n     ///\n     /// [`resize`]: #method.resize\n     /// [`Clone`]: ../../std/clone/trait.Clone.html\n-    #[unstable(feature = \"vec_resize_with\", issue = \"41758\")]\n+    #[stable(feature = \"vec_resize_with\", since = \"1.33.0\")]\n     pub fn resize_with<F>(&mut self, new_len: usize, f: F)\n         where F: FnMut() -> T\n     {"}, {"sha": "9f9ded51e37ee3fae68e952940e809f2e6d28855", "filename": "src/libarena/lib.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The arena, a fast but limited type of allocator.\n //!\n //! Arenas are a type of allocator that destroy the objects within, all at\n@@ -129,6 +119,11 @@ impl<T> Default for TypedArena<T> {\n }\n \n impl<T> TypedArena<T> {\n+    pub fn in_arena(&self, ptr: *const T) -> bool {\n+        let ptr = ptr as *const T as *mut T;\n+\n+        self.chunks.borrow().iter().any(|chunk| chunk.start() <= ptr && ptr < chunk.end())\n+    }\n     /// Allocates an object in the `TypedArena`, returning a reference to it.\n     #[inline]\n     pub fn alloc(&self, object: T) -> &mut T {"}, {"sha": "f4d02bbdbf8a2c5a31f0801dfef597a86caad9e3", "filename": "src/libbacktrace", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace?ref=f9f71cc32497ee4e3cbc7d9795bcf358a9268c13", "patch": "@@ -1 +0,0 @@\n-Subproject commit f4d02bbdbf8a2c5a31f0801dfef597a86caad9e3"}, {"sha": "66a3094d77d016bf4480d2f302f2e9f47175f772", "filename": "src/libcore/alloc.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Memory allocation APIs\n \n #![stable(feature = \"alloc_module\", since = \"1.28.0\")]"}, {"sha": "6a863ff369a878b7013abf4a948568c1d3668863", "filename": "src/libcore/any.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fany.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! This module implements the `Any` trait, which enables dynamic typing\n //! of any `'static` type through runtime reflection.\n //!"}, {"sha": "3a27a39af4ace2e2f4d1823ffb5cbf9967175685", "filename": "src/libcore/array.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Farray.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Farray.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Farray.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Implementations of things like `Eq` for fixed-length arrays\n //! up to a certain length. Eventually we should able to generalize\n //! to all lengths."}, {"sha": "7a06aa2b0d397236aebb9668fed48b589ada20ed", "filename": "src/libcore/ascii.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fascii.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Operations on ASCII strings and characters.\n //!\n //! Most string operations in Rust act on UTF-8 strings. However, at times it"}, {"sha": "ceb507aad38f429379c5811aeb2d13350032db4b", "filename": "src/libcore/benches/any.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbenches%2Fany.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use core::any::*;\n use test::{Bencher, black_box};\n "}, {"sha": "af934c11715775ef8725713ead53d8867e6dc0c0", "filename": "src/libcore/benches/char/methods.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fchar%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fchar%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbenches%2Fchar%2Fmethods.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use test::Bencher;\n \n const CHARS: [char; 9] = ['0', 'x', '2', '5', 'A', 'f', '7', '8', '9'];"}, {"sha": "9ca51a76847539e8af3c010f6fd9e02264871681", "filename": "src/libcore/benches/char/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fchar%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fchar%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbenches%2Fchar%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,11 +1 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n mod methods;"}, {"sha": "4f2e152b6952693d004e3a806218ad386162b18a", "filename": "src/libcore/benches/hash/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbenches%2Fhash%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,11 +1 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n mod sip;"}, {"sha": "5baba42763e102e5a08b97b381a316a4e97bac5f", "filename": "src/libcore/benches/hash/sip.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fhash%2Fsip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fhash%2Fsip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbenches%2Fhash%2Fsip.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![allow(deprecated)]\n \n use core::hash::*;"}, {"sha": "fe852e42b5cd3721b959734652956a4c100b63b1", "filename": "src/libcore/benches/iter.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbenches%2Fiter.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use core::iter::*;\n use test::{Bencher, black_box};\n "}, {"sha": "5b4971c81dd92a043bb1a62bf4bebfc383b764bf", "filename": "src/libcore/benches/lib.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbenches%2Flib.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![feature(flt2dec)]\n #![feature(test)]\n "}, {"sha": "561a4bee87ad9675851305c3fa797dc853ea36c5", "filename": "src/libcore/benches/num/dec2flt/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fnum%2Fdec2flt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fnum%2Fdec2flt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbenches%2Fnum%2Fdec2flt%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::f64;\n use test::Bencher;\n "}, {"sha": "4153745d0424ad151f9fb41269849602bec9904b", "filename": "src/libcore/benches/num/flt2dec/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fnum%2Fflt2dec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fnum%2Fflt2dec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbenches%2Fnum%2Fflt2dec%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n mod strategy {\n     mod dragon;\n     mod grisu;"}, {"sha": "60660b1da1118c003301174272fd16355150db92", "filename": "src/libcore/benches/num/flt2dec/strategy/dragon.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fnum%2Fflt2dec%2Fstrategy%2Fdragon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fnum%2Fflt2dec%2Fstrategy%2Fdragon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbenches%2Fnum%2Fflt2dec%2Fstrategy%2Fdragon.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::{i16, f64};\n use super::super::*;\n use core::num::flt2dec::strategy::dragon::*;"}, {"sha": "841feba50dd5b749343e63d76c52f9116ce0600e", "filename": "src/libcore/benches/num/flt2dec/strategy/grisu.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fnum%2Fflt2dec%2Fstrategy%2Fgrisu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fnum%2Fflt2dec%2Fstrategy%2Fgrisu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbenches%2Fnum%2Fflt2dec%2Fstrategy%2Fgrisu.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::{i16, f64};\n use super::super::*;\n use core::num::flt2dec::strategy::grisu::*;"}, {"sha": "f5c49ea5bf0d5836592b396d1f95262eb9152618", "filename": "src/libcore/benches/num/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbenches%2Fnum%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n mod flt2dec;\n mod dec2flt;\n "}, {"sha": "80649f33562f2299674c3e936bdbe83ccd37f81b", "filename": "src/libcore/benches/ops.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbenches%2Fops.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use core::ops::*;\n use test::Bencher;\n "}, {"sha": "484753c1a045edfdcf7676eda13d4cf0e0bd38cd", "filename": "src/libcore/benches/slice.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fbenches%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbenches%2Fslice.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use test::black_box;\n use test::Bencher;\n "}, {"sha": "89668dc06505b4cb7689a25ccbe2b4c6270bb356", "filename": "src/libcore/borrow.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fborrow.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! A module for working with borrowed data.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "d57ca13a334e80a9235633a1afaa9ca906cd20e3", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Shareable mutable containers.\n //!\n //! Rust memory safety is based on this rule: Given an object `T`, it is only possible to"}, {"sha": "4a1a236b669f02b54b4049daf1c74f41bbd193ac", "filename": "src/libcore/char/convert.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fchar%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fchar%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar%2Fconvert.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Character conversions.\n \n use convert::TryFrom;"}, {"sha": "510c46cdca0ed22cf8e6687e5324c5fd5b9f4d8c", "filename": "src/libcore/char/decode.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fchar%2Fdecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fchar%2Fdecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar%2Fdecode.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! UTF-8 and UTF-16 decoding iterators\n \n use fmt;"}, {"sha": "fbc9a4a6b8efa8490d0366d68fb531cb8668975c", "filename": "src/libcore/char/methods.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fchar%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fchar%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar%2Fmethods.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! impl char {}\n \n use slice;"}, {"sha": "15e153bdfada223f1bb294b27be8f257dd27e481", "filename": "src/libcore/char/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fchar%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fchar%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! A character type.\n //!\n //! The `char` type represents a single character. More specifically, since"}, {"sha": "ed90b7de26417cb0e82593c355ac52816eb5f9a8", "filename": "src/libcore/clone.rs", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fclone.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The `Clone` trait for types that cannot be 'implicitly copied'.\n //!\n //! In Rust, some simple types are \"implicitly copyable\" and when you\n@@ -63,28 +53,39 @@\n /// This trait can be used with `#[derive]` if all fields are `Clone`. The `derive`d\n /// implementation of [`clone`] calls [`clone`] on each field.\n ///\n+/// For a generic struct, `#[derive]` implements `Clone` conditionally by adding bound `Clone` on\n+/// generic parameters.\n+///\n+/// ```\n+/// // `derive` implements Clone for Reading<T> when T is Clone.\n+/// #[derive(Clone)]\n+/// struct Reading<T> {\n+///     frequency: T,\n+/// }\n+/// ```\n+///\n /// ## How can I implement `Clone`?\n ///\n /// Types that are [`Copy`] should have a trivial implementation of `Clone`. More formally:\n /// if `T: Copy`, `x: T`, and `y: &T`, then `let x = y.clone();` is equivalent to `let x = *y;`.\n /// Manual implementations should be careful to uphold this invariant; however, unsafe code\n /// must not rely on it to ensure memory safety.\n ///\n-/// An example is an array holding more than 32 elements of a type that is `Clone`; the standard\n-/// library only implements `Clone` up until arrays of size 32. In this case, the implementation of\n-/// `Clone` cannot be `derive`d, but can be implemented as:\n+/// An example is a generic struct holding a function pointer. In this case, the\n+/// implementation of `Clone` cannot be `derive`d, but can be implemented as:\n ///\n /// [`Copy`]: ../../std/marker/trait.Copy.html\n /// [`clone`]: trait.Clone.html#tymethod.clone\n ///\n /// ```\n-/// #[derive(Copy)]\n-/// struct Stats {\n-///    frequencies: [i32; 100],\n-/// }\n+/// struct Generate<T>(fn() -> T);\n+///\n+/// impl<T> Copy for Generate<T> {}\n ///\n-/// impl Clone for Stats {\n-///     fn clone(&self) -> Stats { *self }\n+/// impl<T> Clone for Generate<T> {\n+///     fn clone(&self) -> Self {\n+///         *self\n+///     }\n /// }\n /// ```\n ///"}, {"sha": "f420d0d00a4011b07320c7eb0f454d719ee2dba4", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Functionality for ordering and comparison.\n //!\n //! This module defines both [`PartialOrd`] and [`PartialEq`] traits which are used\n@@ -482,9 +472,11 @@ impl<T: Ord> Ord for Reverse<T> {\n /// Then you must define an implementation for `cmp()`. You may find it useful to use\n /// `cmp()` on your type's fields.\n ///\n-/// Implementations of `PartialEq`, `PartialOrd`, and `Ord` *must* agree with each other. It's\n-/// easy to accidentally make them disagree by deriving some of the traits and manually\n-/// implementing others.\n+/// Implementations of `PartialEq`, `PartialOrd`, and `Ord` *must*\n+/// agree with each other. That is, `a.cmp(b) == Ordering::Equal` if\n+/// and only if `a == b` and `Some(a.cmp(b)) == a.partial_cmp(b)` for\n+/// all `a` and `b`. It's easy to accidentally make them disagree by\n+/// deriving some of the traits and manually implementing others.\n ///\n /// Here's an example where you want to sort people by height only, disregarding `id`\n /// and `name`:"}, {"sha": "5bf5c858f865abaf8ad3739c4964a9ea6488fe1e", "filename": "src/libcore/convert.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Traits for conversions between types.\n //!\n //! The traits in this module provide a general way to talk about conversions"}, {"sha": "0e47c2fd0b5d0a2d65f6e1402917e42eea23f193", "filename": "src/libcore/default.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fdefault.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The `Default` trait for types which may have meaningful default values.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "0717a88b6b8f38b0fb46e114d2c9e3d337043164", "filename": "src/libcore/ffi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fffi.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -186,7 +186,7 @@ impl<'a> VaList<'a> {\n                reason = \"the `c_variadic` feature has not been properly tested on \\\n                          all supported platforms\",\n                issue = \"27745\")]\n-    pub unsafe fn copy<F, R>(&mut self, f: F) -> R\n+    pub unsafe fn copy<F, R>(&self, f: F) -> R\n             where F: for<'copy> FnOnce(VaList<'copy>) -> R {\n         #[cfg(any(all(not(target_arch = \"aarch64\"), not(target_arch = \"powerpc\"),\n                       not(target_arch = \"x86_64\")),"}, {"sha": "2525b47f2bde598ff3eda61ee62f2bdf26066022", "filename": "src/libcore/fmt/builders.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Ffmt%2Fbuilders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Ffmt%2Fbuilders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fbuilders.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use fmt;\n \n struct PadAdapter<'a> {"}, {"sha": "20c626cef1b160b1d46fe516d3fdbf7a465daed7", "filename": "src/libcore/fmt/float.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Ffmt%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Ffmt%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Ffloat.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use fmt::{Formatter, Result, LowerExp, UpperExp, Display, Debug};\n use mem::MaybeUninit;\n use num::flt2dec;"}, {"sha": "ec1aeb8a7d1e946abbfc42507d4b841804df6af4", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2013-2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Utilities for formatting and printing strings.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "c7c8fc50efaaeb2cf6caf571310beb09c093a5a0", "filename": "src/libcore/fmt/num.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Ffmt%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Ffmt%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fnum.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Integer and floating-point number formatting\n \n #![allow(deprecated)]"}, {"sha": "826ae36d2d100f7cbc1d0e2b6bc9b805f507986d", "filename": "src/libcore/fmt/rt/v1.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Ffmt%2Frt%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Ffmt%2Frt%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Frt%2Fv1.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! This is an internal module used by the ifmt! runtime. These structures are\n //! emitted to static arrays to precompile format strings ahead of time.\n //!"}, {"sha": "0bc8a0fd26a047b0a0c8073aa8532e8357166093", "filename": "src/libcore/future/future.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Ffuture%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Ffuture%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffuture%2Ffuture.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![unstable(feature = \"futures_api\",\n             reason = \"futures in libcore are unstable\",\n             issue = \"50547\")]\n@@ -120,7 +110,7 @@ impl<'a, F: ?Sized + Future + Unpin> Future for &'a mut F {\n \n impl<P> Future for Pin<P>\n where\n-    P: ops::DerefMut,\n+    P: Unpin + ops::DerefMut,\n     P::Target: Future,\n {\n     type Output = <<P as ops::Deref>::Target as Future>::Output;"}, {"sha": "6693ecbac41fa807e9c70a1b99631cfd6fc416a9", "filename": "src/libcore/future/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Ffuture%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Ffuture%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffuture%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![unstable(feature = \"futures_api\",\n             reason = \"futures in libcore are unstable\",\n             issue = \"50547\")]"}, {"sha": "d5d29c91e03463468f5b96c72777bdb7dd0e993f", "filename": "src/libcore/hash/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhash%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Generic hashing support.\n //!\n //! This module provides a generic way to compute the hash of a value. The"}, {"sha": "3377b831a9daaf2eed112d99bc58493fddeaf053", "filename": "src/libcore/hash/sip.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fhash%2Fsip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fhash%2Fsip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhash%2Fsip.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! An implementation of SipHash.\n \n #![allow(deprecated)]"}, {"sha": "9e57a4ebc991983f58d0a8a9a7fe62bfbe7fcfff", "filename": "src/libcore/hint.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fhint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fhint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhint.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![stable(feature = \"core_hint\", since = \"1.27.0\")]\n \n //! Hints to compiler that affects how code should be emitted or optimized."}, {"sha": "d12800f7124833867749ec9659b43f1347dfa31a", "filename": "src/libcore/internal_macros.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Finternal_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Finternal_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Finternal_macros.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,14 +1,3 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-\n // implements the unary operator \"op &T\"\n // based on \"op T\" where T is expected to be `Copy`able\n macro_rules! forward_ref_unop {"}, {"sha": "4f5310f5285c9956207887de18ae22a5126053bf", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! rustc compiler intrinsics.\n //!\n //! The corresponding definitions are in librustc_codegen_llvm/intrinsic.rs.\n@@ -700,6 +690,11 @@ extern \"rust-intrinsic\" {\n     /// crate it is invoked in.\n     pub fn type_id<T: ?Sized + 'static>() -> u64;\n \n+    /// A guard for unsafe functions that cannot ever be executed if `T` is uninhabited:\n+    /// This will statically either panic, or do nothing.\n+    #[cfg(not(stage0))]\n+    pub fn panic_if_uninhabited<T>();\n+\n     /// Creates a value initialized to zero.\n     ///\n     /// `init` is unsafe because it returns a zeroed-out datum,"}, {"sha": "1ea500858ed1626b324fbac9f2199b9e5be5e485", "filename": "src/libcore/iter/iterator.rs", "status": "modified", "additions": 31, "deletions": 12, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fiter%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fiter%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fiterator.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,18 +1,8 @@\n-// Copyright 2013-2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use cmp::Ordering;\n use ops::Try;\n \n use super::LoopState;\n-use super::{Chain, Cycle, Cloned, Enumerate, Filter, FilterMap, Fuse};\n+use super::{Chain, Cycle, Copied, Cloned, Enumerate, Filter, FilterMap, Fuse};\n use super::{Flatten, FlatMap, flatten_compat};\n use super::{Inspect, Map, Peekable, Scan, Skip, SkipWhile, StepBy, Take, TakeWhile, Rev};\n use super::{Zip, Sum, Product};\n@@ -162,7 +152,7 @@ pub trait Iterator {\n     /// That said, the implementation should provide a correct estimation,\n     /// because otherwise it would be a violation of the trait's protocol.\n     ///\n-    /// The default implementation returns `(0, None)` which is correct for any\n+    /// The default implementation returns `(0, `[`None`]`)` which is correct for any\n     /// iterator.\n     ///\n     /// [`usize`]: ../../std/primitive.usize.html\n@@ -2235,6 +2225,35 @@ pub trait Iterator {\n         (ts, us)\n     }\n \n+    /// Creates an iterator which copies all of its elements.\n+    ///\n+    /// This is useful when you have an iterator over `&T`, but you need an\n+    /// iterator over `T`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// Basic usage:\n+    ///\n+    /// ```\n+    /// #![feature(iter_copied)]\n+    ///\n+    /// let a = [1, 2, 3];\n+    ///\n+    /// let v_cloned: Vec<_> = a.iter().copied().collect();\n+    ///\n+    /// // copied is the same as .map(|&x| x)\n+    /// let v_map: Vec<_> = a.iter().map(|&x| x).collect();\n+    ///\n+    /// assert_eq!(v_cloned, vec![1, 2, 3]);\n+    /// assert_eq!(v_map, vec![1, 2, 3]);\n+    /// ```\n+    #[unstable(feature = \"iter_copied\", issue = \"57127\")]\n+    fn copied<'a, T: 'a>(self) -> Copied<Self>\n+        where Self: Sized + Iterator<Item=&'a T>, T: Copy\n+    {\n+        Copied { it: self }\n+    }\n+\n     /// Creates an iterator which [`clone`]s all of its elements.\n     ///\n     /// This is useful when you have an iterator over `&T`, but you need an"}, {"sha": "03369d6c8f3fd60959ca670a185e8d250a16203b", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 106, "deletions": 10, "changes": 116, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2013-2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Composable external iteration.\n //!\n //! If you've found yourself with a collection of some kind, and needed to\n@@ -429,6 +419,9 @@ impl<I> Iterator for Rev<I> where I: DoubleEndedIterator {\n     #[inline]\n     fn size_hint(&self) -> (usize, Option<usize>) { self.iter.size_hint() }\n \n+    #[inline]\n+    fn nth(&mut self, n: usize) -> Option<<I as Iterator>::Item> { self.iter.nth_back(n) }\n+\n     fn try_fold<B, F, R>(&mut self, init: B, f: F) -> R where\n         Self: Sized, F: FnMut(B, Self::Item) -> R, R: Try<Ok=B>\n     {\n@@ -461,6 +454,9 @@ impl<I> DoubleEndedIterator for Rev<I> where I: DoubleEndedIterator {\n     #[inline]\n     fn next_back(&mut self) -> Option<<I as Iterator>::Item> { self.iter.next() }\n \n+    #[inline]\n+    fn nth_back(&mut self, n: usize) -> Option<<I as Iterator>::Item> { self.iter.nth(n) }\n+\n     fn try_rfold<B, F, R>(&mut self, init: B, f: F) -> R where\n         Self: Sized, F: FnMut(B, Self::Item) -> R, R: Try<Ok=B>\n     {\n@@ -501,6 +497,106 @@ impl<I> FusedIterator for Rev<I>\n unsafe impl<I> TrustedLen for Rev<I>\n     where I: TrustedLen + DoubleEndedIterator {}\n \n+/// An iterator that copies the elements of an underlying iterator.\n+///\n+/// This `struct` is created by the [`copied`] method on [`Iterator`]. See its\n+/// documentation for more.\n+///\n+/// [`copied`]: trait.Iterator.html#method.copied\n+/// [`Iterator`]: trait.Iterator.html\n+#[unstable(feature = \"iter_copied\", issue = \"57127\")]\n+#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]\n+#[derive(Clone, Debug)]\n+pub struct Copied<I> {\n+    it: I,\n+}\n+\n+#[unstable(feature = \"iter_copied\", issue = \"57127\")]\n+impl<'a, I, T: 'a> Iterator for Copied<I>\n+    where I: Iterator<Item=&'a T>, T: Copy\n+{\n+    type Item = T;\n+\n+    fn next(&mut self) -> Option<T> {\n+        self.it.next().copied()\n+    }\n+\n+    fn size_hint(&self) -> (usize, Option<usize>) {\n+        self.it.size_hint()\n+    }\n+\n+    fn try_fold<B, F, R>(&mut self, init: B, mut f: F) -> R where\n+        Self: Sized, F: FnMut(B, Self::Item) -> R, R: Try<Ok=B>\n+    {\n+        self.it.try_fold(init, move |acc, &elt| f(acc, elt))\n+    }\n+\n+    fn fold<Acc, F>(self, init: Acc, mut f: F) -> Acc\n+        where F: FnMut(Acc, Self::Item) -> Acc,\n+    {\n+        self.it.fold(init, move |acc, &elt| f(acc, elt))\n+    }\n+}\n+\n+#[unstable(feature = \"iter_copied\", issue = \"57127\")]\n+impl<'a, I, T: 'a> DoubleEndedIterator for Copied<I>\n+    where I: DoubleEndedIterator<Item=&'a T>, T: Copy\n+{\n+    fn next_back(&mut self) -> Option<T> {\n+        self.it.next_back().copied()\n+    }\n+\n+    fn try_rfold<B, F, R>(&mut self, init: B, mut f: F) -> R where\n+        Self: Sized, F: FnMut(B, Self::Item) -> R, R: Try<Ok=B>\n+    {\n+        self.it.try_rfold(init, move |acc, &elt| f(acc, elt))\n+    }\n+\n+    fn rfold<Acc, F>(self, init: Acc, mut f: F) -> Acc\n+        where F: FnMut(Acc, Self::Item) -> Acc,\n+    {\n+        self.it.rfold(init, move |acc, &elt| f(acc, elt))\n+    }\n+}\n+\n+#[unstable(feature = \"iter_copied\", issue = \"57127\")]\n+impl<'a, I, T: 'a> ExactSizeIterator for Copied<I>\n+    where I: ExactSizeIterator<Item=&'a T>, T: Copy\n+{\n+    fn len(&self) -> usize {\n+        self.it.len()\n+    }\n+\n+    fn is_empty(&self) -> bool {\n+        self.it.is_empty()\n+    }\n+}\n+\n+#[unstable(feature = \"iter_copied\", issue = \"57127\")]\n+impl<'a, I, T: 'a> FusedIterator for Copied<I>\n+    where I: FusedIterator<Item=&'a T>, T: Copy\n+{}\n+\n+#[doc(hidden)]\n+unsafe impl<'a, I, T: 'a> TrustedRandomAccess for Copied<I>\n+    where I: TrustedRandomAccess<Item=&'a T>, T: Copy\n+{\n+    unsafe fn get_unchecked(&mut self, i: usize) -> Self::Item {\n+        *self.it.get_unchecked(i)\n+    }\n+\n+    #[inline]\n+    fn may_have_side_effect() -> bool {\n+        I::may_have_side_effect()\n+    }\n+}\n+\n+#[unstable(feature = \"iter_copied\", issue = \"57127\")]\n+unsafe impl<'a, I, T: 'a> TrustedLen for Copied<I>\n+    where I: TrustedLen<Item=&'a T>,\n+          T: Copy\n+{}\n+\n /// An iterator that clones the elements of an underlying iterator.\n ///\n /// This `struct` is created by the [`cloned`] method on [`Iterator`]. See its"}, {"sha": "66c09a0ddd0fb2c27ae5ba3f095a5ed07d6d1518", "filename": "src/libcore/iter/range.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fiter%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fiter%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Frange.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2013-2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use convert::TryFrom;\n use mem;\n use ops::{self, Add, Sub};"}, {"sha": "2a39089a8a229cc35615dc50f79ca2c2c0b91480", "filename": "src/libcore/iter/sources.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fiter%2Fsources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fiter%2Fsources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fsources.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2013-2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use fmt;\n use marker;\n use usize;"}, {"sha": "e8c6cd8b79c72a2f57da16c12fbd8b0c4ade91a6", "filename": "src/libcore/iter/traits.rs", "status": "modified", "additions": 73, "deletions": 15, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fiter%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fiter%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2013-2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n use ops::{Mul, Add, Try};\n use num::Wrapping;\n \n@@ -427,6 +418,62 @@ pub trait DoubleEndedIterator: Iterator {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn next_back(&mut self) -> Option<Self::Item>;\n \n+    /// Returns the `n`th element from the end of the iterator.\n+    ///\n+    /// This is essentially the reversed version of [`nth`]. Although like most indexing\n+    /// operations, the count starts from zero, so `nth_back(0)` returns the first value fro\n+    /// the end, `nth_back(1)` the second, and so on.\n+    ///\n+    /// Note that all elements between the end and the returned element will be\n+    /// consumed, including the returned element. This also means that calling\n+    /// `nth_back(0)` multiple times on the same iterator will return different\n+    /// elements.\n+    ///\n+    /// `nth_back()` will return [`None`] if `n` is greater than or equal to the length of the\n+    /// iterator.\n+    ///\n+    /// [`None`]: ../../std/option/enum.Option.html#variant.None\n+    /// [`nth`]: ../../std/iter/trait.Iterator.html#method.nth\n+    ///\n+    /// # Examples\n+    ///\n+    /// Basic usage:\n+    ///\n+    /// ```\n+    /// #![feature(iter_nth_back)]\n+    /// let a = [1, 2, 3];\n+    /// assert_eq!(a.iter().nth_back(2), Some(&1));\n+    /// ```\n+    ///\n+    /// Calling `nth_back()` multiple times doesn't rewind the iterator:\n+    ///\n+    /// ```\n+    /// #![feature(iter_nth_back)]\n+    /// let a = [1, 2, 3];\n+    ///\n+    /// let mut iter = a.iter();\n+    ///\n+    /// assert_eq!(iter.nth_back(1), Some(&2));\n+    /// assert_eq!(iter.nth_back(1), None);\n+    /// ```\n+    ///\n+    /// Returning `None` if there are less than `n + 1` elements:\n+    ///\n+    /// ```\n+    /// #![feature(iter_nth_back)]\n+    /// let a = [1, 2, 3];\n+    /// assert_eq!(a.iter().nth_back(10), None);\n+    /// ```\n+    #[inline]\n+    #[unstable(feature = \"iter_nth_back\", issue = \"56995\")]\n+    fn nth_back(&mut self, mut n: usize) -> Option<Self::Item> {\n+        for x in self.rev() {\n+            if n == 0 { return Some(x) }\n+            n -= 1;\n+        }\n+        None\n+    }\n+\n     /// This is the reverse version of [`try_fold()`]: it takes elements\n     /// starting from the back of the iterator.\n     ///\n@@ -461,8 +508,11 @@ pub trait DoubleEndedIterator: Iterator {\n     /// ```\n     #[inline]\n     #[stable(feature = \"iterator_try_fold\", since = \"1.27.0\")]\n-    fn try_rfold<B, F, R>(&mut self, init: B, mut f: F) -> R where\n-        Self: Sized, F: FnMut(B, Self::Item) -> R, R: Try<Ok=B>\n+    fn try_rfold<B, F, R>(&mut self, init: B, mut f: F) -> R\n+    where\n+        Self: Sized,\n+        F: FnMut(B, Self::Item) -> R,\n+        R: Try<Ok=B>\n     {\n         let mut accum = init;\n         while let Some(x) = self.next_back() {\n@@ -524,8 +574,10 @@ pub trait DoubleEndedIterator: Iterator {\n     /// ```\n     #[inline]\n     #[stable(feature = \"iter_rfold\", since = \"1.27.0\")]\n-    fn rfold<B, F>(mut self, accum: B, mut f: F) -> B where\n-        Self: Sized, F: FnMut(B, Self::Item) -> B,\n+    fn rfold<B, F>(mut self, accum: B, mut f: F) -> B\n+    where\n+        Self: Sized,\n+        F: FnMut(B, Self::Item) -> B,\n     {\n         self.try_rfold(accum, move |acc, x| Ok::<B, !>(f(acc, x))).unwrap()\n     }\n@@ -574,7 +626,8 @@ pub trait DoubleEndedIterator: Iterator {\n     /// ```\n     #[inline]\n     #[stable(feature = \"iter_rfind\", since = \"1.27.0\")]\n-    fn rfind<P>(&mut self, mut predicate: P) -> Option<Self::Item> where\n+    fn rfind<P>(&mut self, mut predicate: P) -> Option<Self::Item>\n+    where\n         Self: Sized,\n         P: FnMut(&Self::Item) -> bool\n     {\n@@ -587,7 +640,12 @@ pub trait DoubleEndedIterator: Iterator {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, I: DoubleEndedIterator + ?Sized> DoubleEndedIterator for &'a mut I {\n-    fn next_back(&mut self) -> Option<I::Item> { (**self).next_back() }\n+    fn next_back(&mut self) -> Option<I::Item> {\n+        (**self).next_back()\n+    }\n+    fn nth_back(&mut self, n: usize) -> Option<I::Item> {\n+        (**self).nth_back(n)\n+    }\n }\n \n /// An iterator that knows its exact length."}, {"sha": "890db47b1970091d58b468bf2dedefd2fbf9c01a", "filename": "src/libcore/iter_private.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fiter_private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fiter_private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter_private.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,14 +1,3 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-\n /// An iterator whose items are random accessible efficiently\n ///\n /// # Safety"}, {"sha": "b2cafc4cede2e60d00a25ff272ee4c153bf7cd7d", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! # The Rust Core Library\n //!\n //! The Rust Core Library is the dependency-free[^free] foundation of [The\n@@ -71,6 +61,7 @@\n \n #![no_core]\n #![deny(missing_docs)]\n+#![deny(intra_doc_link_resolution_failure)]\n #![deny(missing_debug_implementations)]\n \n #![feature(allow_internal_unstable)]\n@@ -118,6 +109,8 @@\n #![feature(mips_target_feature)]\n #![feature(aarch64_target_feature)]\n #![feature(wasm_target_feature)]\n+#![feature(avx512_target_feature)]\n+#![cfg_attr(not(stage0), feature(cmpxchg16b_target_feature))]\n #![feature(const_slice_len)]\n #![feature(const_str_as_bytes)]\n #![feature(const_str_len)]\n@@ -129,6 +122,8 @@\n #![feature(reverse_bits)]\n #![feature(non_exhaustive)]\n #![feature(structural_match)]\n+#![feature(abi_unadjusted)]\n+#![cfg_attr(not(stage0), feature(adx_target_feature))]\n \n #[prelude_import]\n #[allow(unused)]\n@@ -224,7 +219,6 @@ pub mod alloc;\n \n // note: does not need to be public\n mod iter_private;\n-mod nonzero;\n mod tuple;\n mod unit;\n "}, {"sha": "2f350df2f5c187bd34a75d0da361be425e83f17d", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n /// Entry point of thread panic, for details, see std::macros\n #[macro_export]\n #[allow_internal_unstable]"}, {"sha": "65752ba032104133d17b6d251dbb730b375ac876", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 6, "deletions": 17, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Primitive traits and types representing basic properties of types.\n //!\n //! Rust types can be classified in various useful ways according to\n@@ -95,7 +85,7 @@ impl<T: ?Sized> !Send for *mut T { }\n     on(parent_trait=\"std::path::Path\", label=\"borrow the `Path` instead\"),\n     message=\"the size for values of type `{Self}` cannot be known at compilation time\",\n     label=\"doesn't have a size known at compile-time\",\n-    note=\"to learn more, visit <https://doc.rust-lang.org/book/second-edition/\\\n+    note=\"to learn more, visit <https://doc.rust-lang.org/book/\\\n           ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\",\n )]\n #[fundamental] // for Default, for example, which requires that `[T]: !Default` be evaluatable\n@@ -621,7 +611,6 @@ unsafe impl<T: ?Sized> Freeze for &mut T {}\n /// So this, for example, can only be done on types implementing `Unpin`:\n ///\n /// ```rust\n-/// #![feature(pin)]\n /// use std::mem::replace;\n /// use std::pin::Pin;\n ///\n@@ -637,23 +626,23 @@ unsafe impl<T: ?Sized> Freeze for &mut T {}\n /// [`replace`]: ../../std/mem/fn.replace.html\n /// [`Pin`]: ../pin/struct.Pin.html\n /// [`pin module`]: ../../std/pin/index.html\n-#[unstable(feature = \"pin\", issue = \"49150\")]\n+#[stable(feature = \"pin\", since = \"1.33.0\")]\n pub auto trait Unpin {}\n \n /// A marker type which does not implement `Unpin`.\n ///\n /// If a type contains a `PhantomPinned`, it will not implement `Unpin` by default.\n-#[unstable(feature = \"pin\", issue = \"49150\")]\n+#[stable(feature = \"pin\", since = \"1.33.0\")]\n #[derive(Debug, Copy, Clone, Eq, PartialEq, Ord, PartialOrd, Hash)]\n pub struct PhantomPinned;\n \n-#[unstable(feature = \"pin\", issue = \"49150\")]\n+#[stable(feature = \"pin\", since = \"1.33.0\")]\n impl !Unpin for PhantomPinned {}\n \n-#[unstable(feature = \"pin\", issue = \"49150\")]\n+#[stable(feature = \"pin\", since = \"1.33.0\")]\n impl<'a, T: ?Sized + 'a> Unpin for &'a T {}\n \n-#[unstable(feature = \"pin\", issue = \"49150\")]\n+#[stable(feature = \"pin\", since = \"1.33.0\")]\n impl<'a, T: ?Sized + 'a> Unpin for &'a mut T {}\n \n /// Implementations of `Copy` for primitive types."}, {"sha": "8fcbb73d9ce462eaa0090ccf9d11ff9a6dba59cd", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 48, "deletions": 10, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Basic functions for dealing with memory.\n //!\n //! This module contains functions for querying the size and alignment of\n@@ -502,6 +492,8 @@ pub const fn needs_drop<T>() -> bool {\n #[rustc_deprecated(since = \"2.0.0\", reason = \"use `mem::MaybeUninit::zeroed` instead\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub unsafe fn zeroed<T>() -> T {\n+    #[cfg(not(stage0))]\n+    intrinsics::panic_if_uninhabited::<T>();\n     intrinsics::init()\n }\n \n@@ -530,6 +522,12 @@ pub unsafe fn zeroed<T>() -> T {\n /// it goes out of scope (and therefore would be dropped). Note that this\n /// includes a `panic` occurring and unwinding the stack suddenly.\n ///\n+/// If you partially initialize an array, you may need to use\n+/// [`ptr::drop_in_place`][drop_in_place] to remove the elements you have fully\n+/// initialized followed by [`mem::forget`][mem_forget] to prevent drop running\n+/// on the array. If a partially allocated array is dropped this will lead to\n+/// undefined behaviour.\n+///\n /// # Examples\n ///\n /// Here's how to safely initialize an array of [`Vec`]s.\n@@ -583,18 +581,53 @@ pub unsafe fn zeroed<T>() -> T {\n /// println!(\"{:?}\", &data[0]);\n /// ```\n ///\n+/// This example shows how to handle partially initialized arrays, which could\n+/// be found in low-level datastructures.\n+///\n+/// ```\n+/// use std::mem;\n+/// use std::ptr;\n+///\n+/// // Count the number of elements we have assigned.\n+/// let mut data_len: usize = 0;\n+/// let mut data: [String; 1000];\n+///\n+/// unsafe {\n+///     data = mem::uninitialized();\n+///\n+///     for elem in &mut data[0..500] {\n+///         ptr::write(elem, String::from(\"hello\"));\n+///         data_len += 1;\n+///     }\n+///\n+///     // For each item in the array, drop if we allocated it.\n+///     for i in &mut data[0..data_len] {\n+///         ptr::drop_in_place(i);\n+///     }\n+/// }\n+/// // Forget the data. If this is allowed to drop, you may see a crash such as:\n+/// // 'mem_uninit_test(2457,0x7fffb55dd380) malloc: *** error for object\n+/// // 0x7ff3b8402920: pointer being freed was not allocated'\n+/// mem::forget(data);\n+/// ```\n+///\n /// [`Vec`]: ../../std/vec/struct.Vec.html\n /// [`vec!`]: ../../std/macro.vec.html\n /// [`Clone`]: ../../std/clone/trait.Clone.html\n /// [ub]: ../../reference/behavior-considered-undefined.html\n /// [write]: ../ptr/fn.write.html\n+/// [drop_in_place]: ../ptr/fn.drop_in_place.html\n+/// [mem_zeroed]: fn.zeroed.html\n+/// [mem_forget]: fn.forget.html\n /// [copy]: ../intrinsics/fn.copy.html\n /// [copy_no]: ../intrinsics/fn.copy_nonoverlapping.html\n /// [`Drop`]: ../ops/trait.Drop.html\n #[inline]\n #[rustc_deprecated(since = \"2.0.0\", reason = \"use `mem::MaybeUninit::uninitialized` instead\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub unsafe fn uninitialized<T>() -> T {\n+    #[cfg(not(stage0))]\n+    intrinsics::panic_if_uninhabited::<T>();\n     intrinsics::uninit()\n }\n \n@@ -984,6 +1017,9 @@ impl<T> ManuallyDrop<T> {\n     ///\n     /// This function semantically moves out the contained value without preventing further usage.\n     /// It is up to the user of this method to ensure that this container is not used again.\n+    ///\n+    /// [`ManuallyDrop::drop`]: #method.drop\n+    /// [`ManuallyDrop::into_inner`]: #method.into_inner\n     #[must_use = \"if you don't need the value, you can use `ManuallyDrop::drop` instead\"]\n     #[unstable(feature = \"manually_drop_take\", issue = \"55422\")]\n     #[inline]\n@@ -1096,6 +1132,8 @@ impl<T> MaybeUninit<T> {\n     #[unstable(feature = \"maybe_uninit\", issue = \"53491\")]\n     #[inline(always)]\n     pub unsafe fn into_inner(self) -> T {\n+        #[cfg(not(stage0))]\n+        intrinsics::panic_if_uninhabited::<T>();\n         ManuallyDrop::into_inner(self.value)\n     }\n "}, {"sha": "a89c6ca60cbea434f1eb023d4b525db292f215dc", "filename": "src/libcore/nonzero.rs", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/f9f71cc32497ee4e3cbc7d9795bcf358a9268c13/src%2Flibcore%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9f71cc32497ee4e3cbc7d9795bcf358a9268c13/src%2Flibcore%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnonzero.rs?ref=f9f71cc32497ee4e3cbc7d9795bcf358a9268c13", "patch": "@@ -1,33 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-//! Exposes the NonZero lang item which provides optimization hints.\n-\n-use ops::{CoerceUnsized, DispatchFromDyn};\n-use marker::Freeze;\n-\n-/// A wrapper type for raw pointers and integers that will never be\n-/// NULL or 0 that might allow certain optimizations.\n-#[rustc_layout_scalar_valid_range_start(1)]\n-#[derive(Copy, Eq, PartialEq, Ord, PartialOrd, Hash)]\n-#[repr(transparent)]\n-pub(crate) struct NonZero<T: Freeze>(pub(crate) T);\n-\n-// Do not call `T::clone` as theoretically it could turn the field into `0`\n-// invalidating `NonZero`'s invariant.\n-impl<T: Copy + Freeze> Clone for NonZero<T> {\n-    fn clone(&self) -> Self {\n-        unsafe { NonZero(self.0) }\n-    }\n-}\n-\n-impl<T: CoerceUnsized<U> + Freeze, U: Freeze> CoerceUnsized<NonZero<U>> for NonZero<T> {}\n-\n-impl<T: DispatchFromDyn<U> + Freeze, U: Freeze> DispatchFromDyn<NonZero<U>> for NonZero<T> {}"}, {"sha": "99a427ba15974d773594b5ea90c1cf971df9ad31", "filename": "src/libcore/num/bignum.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fbignum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fbignum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fbignum.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Custom arbitrary-precision number (bignum) implementation.\n //!\n //! This is designed to avoid the heap allocation at expense of stack memory."}, {"sha": "d56fa9662a99404c9f2b0535564aff463205cd84", "filename": "src/libcore/num/dec2flt/algorithm.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fdec2flt%2Falgorithm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fdec2flt%2Falgorithm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fdec2flt%2Falgorithm.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The various algorithms from the paper.\n \n use cmp::min;"}, {"sha": "58b196a6eac3d18f97bfe4383935edcc8453f7b6", "filename": "src/libcore/num/dec2flt/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fdec2flt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fdec2flt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fdec2flt%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Converting decimal strings into IEEE 754 binary floating point numbers.\n //!\n //! # Problem statement"}, {"sha": "b76c58cc66e6bdeb3dd2a46476c372b05de3b044", "filename": "src/libcore/num/dec2flt/num.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fdec2flt%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fdec2flt%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fdec2flt%2Fnum.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Utility functions for bignums that don't make too much sense to turn into methods.\n \n // FIXME This module's name is a bit unfortunate, since other modules also import `core::num`."}, {"sha": "9e075e43303b6fa0691d4d5bc72377da9bb740a5", "filename": "src/libcore/num/dec2flt/parse.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fdec2flt%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fdec2flt%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fdec2flt%2Fparse.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Validating and decomposing a decimal string of the form:\n //!\n //! `(digits | digits? '.'? digits?) (('e' | 'E') ('+' | '-')? digits)?`"}, {"sha": "6976bd1a0eefd74fa73e0ff64b08dddcabeedab3", "filename": "src/libcore/num/dec2flt/rawfp.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fdec2flt%2Frawfp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fdec2flt%2Frawfp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fdec2flt%2Frawfp.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Bit fiddling on positive IEEE 754 floats. Negative numbers aren't and needn't be handled.\n //! Normal floating point numbers have a canonical representation as (frac, exp) such that the\n //! value is 2<sup>exp</sup> * (1 + sum(frac[N-i] / 2<sup>i</sup>)) where N is the number of bits."}, {"sha": "345ac830aaa77624739032539a946af205a3fa79", "filename": "src/libcore/num/dec2flt/table.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fdec2flt%2Ftable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fdec2flt%2Ftable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fdec2flt%2Ftable.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Tables of approximations of powers of ten.\n //! DO NOT MODIFY: Generated by `src/etc/dec2flt_table.py`\n "}, {"sha": "cdf332989492f564c213a19ae4970e4053419894", "filename": "src/libcore/num/diy_float.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fdiy_float.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fdiy_float.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fdiy_float.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Extended precision \"soft float\", for internal use only.\n \n // This module is only for dec2flt and flt2dec, and only public because of coretests."}, {"sha": "d1bd97552024d504896bcbed4a4d6c758c8328c1", "filename": "src/libcore/num/f32.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Ff32.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! This module provides constants which are specific to the implementation\n //! of the `f32` floating point data type.\n //!"}, {"sha": "8ada5b6756c3855dda6e18b87c00734d15559d16", "filename": "src/libcore/num/f64.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Ff64.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! This module provides constants which are specific to the implementation\n //! of the `f64` floating point data type.\n //!"}, {"sha": "a3bf783976bbda456250914ab21ae17ec318f202", "filename": "src/libcore/num/flt2dec/decoder.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fflt2dec%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fflt2dec%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fflt2dec%2Fdecoder.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Decodes a floating-point value into individual parts and error ranges.\n \n use {f32, f64};"}, {"sha": "50e2f705283832622901a78baaa7a86866b8fe4f", "filename": "src/libcore/num/flt2dec/estimator.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fflt2dec%2Festimator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fflt2dec%2Festimator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fflt2dec%2Festimator.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The exponent estimator.\n \n /// Finds `k_0` such that `10^(k_0-1) < mant * 2^exp <= 10^(k_0+1)`."}, {"sha": "f9b46a12f7fefc43a8aeaaf8ab2ffcd2c8981aab", "filename": "src/libcore/num/flt2dec/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fflt2dec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fflt2dec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fflt2dec%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n /*!\n \n Floating-point number to decimal conversion routines."}, {"sha": "582fe22f85406ef75356de8462fb3af1a8156c80", "filename": "src/libcore/num/flt2dec/strategy/dragon.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fflt2dec%2Fstrategy%2Fdragon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fflt2dec%2Fstrategy%2Fdragon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fflt2dec%2Fstrategy%2Fdragon.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Almost direct (but slightly optimized) Rust translation of Figure 3 of \"Printing\n //! Floating-Point Numbers Quickly and Accurately\"[^1].\n //!"}, {"sha": "aa21fcffa5c615bd33478318e52c2a945b805930", "filename": "src/libcore/num/flt2dec/strategy/grisu.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fflt2dec%2Fstrategy%2Fgrisu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fflt2dec%2Fstrategy%2Fgrisu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fflt2dec%2Fstrategy%2Fgrisu.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Rust adaptation of the Grisu3 algorithm described in \"Printing Floating-Point Numbers Quickly\n //! and Accurately with Integers\"[^1]. It uses about 1KB of precomputed table, and in turn, it's\n //! very quick for most inputs."}, {"sha": "564ed598a882c700dbbf10a09842d0ba5aea26f5", "filename": "src/libcore/num/i128.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fi128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fi128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fi128.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The 128-bit signed integer type.\n //!\n //! *[See also the `i128` primitive type](../../std/primitive.i128.html).*"}, {"sha": "44d6aaef25ba03b074a82204eb42667ad9b62b5e", "filename": "src/libcore/num/i16.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fi16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fi16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fi16.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The 16-bit signed integer type.\n //!\n //! *[See also the `i16` primitive type](../../std/primitive.i16.html).*"}, {"sha": "90a5f89195e3130dc4922fc7701de187ed2b84d5", "filename": "src/libcore/num/i32.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fi32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fi32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fi32.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The 32-bit signed integer type.\n //!\n //! *[See also the `i32` primitive type](../../std/primitive.i32.html).*"}, {"sha": "04a8a9d757915c6f32f21601018162d202837379", "filename": "src/libcore/num/i64.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fi64.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The 64-bit signed integer type.\n //!\n //! *[See also the `i64` primitive type](../../std/primitive.i64.html).*"}, {"sha": "5a52a967cf96d61fe73ddc5915ed4d57ae35c8f8", "filename": "src/libcore/num/i8.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fi8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fi8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fi8.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The 8-bit signed integer type.\n //!\n //! *[See also the `i8` primitive type](../../std/primitive.i8.html).*"}, {"sha": "5c59fe25f6483da175d57676c736bb23b010b47c", "filename": "src/libcore/num/int_macros.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fint_macros.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![doc(hidden)]\n \n macro_rules! int_module {"}, {"sha": "143f8b3b272d6189dc69c1571af9b78dd36aca9e", "filename": "src/libcore/num/isize.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fisize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fisize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fisize.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The pointer-sized signed integer type.\n //!\n //! *[See also the `isize` primitive type](../../std/primitive.isize.html).*"}, {"sha": "97bf582df5a8c7289ce5590fd61d88ccc91fccbb", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 105, "deletions": 93, "changes": 198, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Numeric traits and functions for the built-in numeric types.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -16,7 +6,6 @@ use convert::TryFrom;\n use fmt;\n use intrinsics;\n use mem;\n-use nonzero::NonZero;\n use ops;\n use str::FromStr;\n \n@@ -58,7 +47,8 @@ assert_eq!(size_of::<Option<std::num::\", stringify!($Ty), \">>(), size_of::<\", st\n                 #[stable(feature = \"nonzero\", since = \"1.28.0\")]\n                 #[derive(Copy, Clone, Eq, PartialEq, Ord, PartialOrd, Hash)]\n                 #[repr(transparent)]\n-                pub struct $Ty(NonZero<$Int>);\n+                #[rustc_layout_scalar_valid_range_start(1)]\n+                pub struct $Ty($Int);\n             }\n \n             impl $Ty {\n@@ -70,15 +60,15 @@ assert_eq!(size_of::<Option<std::num::\", stringify!($Ty), \">>(), size_of::<\", st\n                 #[stable(feature = \"nonzero\", since = \"1.28.0\")]\n                 #[inline]\n                 pub const unsafe fn new_unchecked(n: $Int) -> Self {\n-                    $Ty(NonZero(n))\n+                    $Ty(n)\n                 }\n \n                 /// Create a non-zero if the given value is not zero.\n                 #[stable(feature = \"nonzero\", since = \"1.28.0\")]\n                 #[inline]\n                 pub fn new(n: $Int) -> Option<Self> {\n                     if n != 0 {\n-                        Some($Ty(unsafe { NonZero(n) }))\n+                        Some(unsafe { $Ty(n) })\n                     } else {\n                         None\n                     }\n@@ -87,16 +77,16 @@ assert_eq!(size_of::<Option<std::num::\", stringify!($Ty), \">>(), size_of::<\", st\n                 /// Returns the value as a primitive type.\n                 #[stable(feature = \"nonzero\", since = \"1.28.0\")]\n                 #[inline]\n-                pub fn get(self) -> $Int {\n-                    self.0 .0\n+                pub const fn get(self) -> $Int {\n+                    self.0\n                 }\n \n             }\n \n             #[stable(feature = \"from_nonzero\", since = \"1.31.0\")]\n             impl From<$Ty> for $Int {\n                 fn from(nonzero: $Ty) -> Self {\n-                    nonzero.0 .0\n+                    nonzero.0\n                 }\n             }\n \n@@ -673,7 +663,7 @@ $EndFeature, \"\n         }\n \n         doc_comment! {\n-            concat!(\"Checked Euclidean division. Computes `self.div_euc(rhs)`,\n+            concat!(\"Checked Euclidean division. Computes `self.div_euclid(rhs)`,\n returning `None` if `rhs == 0` or the division results in overflow.\n \n # Examples\n@@ -683,17 +673,17 @@ Basic usage:\n ```\n #![feature(euclidean_division)]\n assert_eq!((\", stringify!($SelfT),\n-\"::min_value() + 1).checked_div_euc(-1), Some(\", stringify!($Max), \"));\n-assert_eq!(\", stringify!($SelfT), \"::min_value().checked_div_euc(-1), None);\n-assert_eq!((1\", stringify!($SelfT), \").checked_div_euc(0), None);\n+\"::min_value() + 1).checked_div_euclid(-1), Some(\", stringify!($Max), \"));\n+assert_eq!(\", stringify!($SelfT), \"::min_value().checked_div_euclid(-1), None);\n+assert_eq!((1\", stringify!($SelfT), \").checked_div_euclid(0), None);\n ```\"),\n             #[unstable(feature = \"euclidean_division\", issue = \"49048\")]\n             #[inline]\n-            pub fn checked_div_euc(self, rhs: Self) -> Option<Self> {\n+            pub fn checked_div_euclid(self, rhs: Self) -> Option<Self> {\n                 if rhs == 0 || (self == Self::min_value() && rhs == -1) {\n                     None\n                 } else {\n-                    Some(self.div_euc(rhs))\n+                    Some(self.div_euclid(rhs))\n                 }\n             }\n         }\n@@ -726,8 +716,8 @@ $EndFeature, \"\n         }\n \n         doc_comment! {\n-            concat!(\"Checked Euclidean modulo. Computes `self.mod_euc(rhs)`, returning `None` if\n-`rhs == 0` or the division results in overflow.\n+            concat!(\"Checked Euclidean remainder. Computes `self.rem_euclid(rhs)`, returning `None`\n+if `rhs == 0` or the division results in overflow.\n \n # Examples\n \n@@ -737,17 +727,17 @@ Basic usage:\n #![feature(euclidean_division)]\n use std::\", stringify!($SelfT), \";\n \n-assert_eq!(5\", stringify!($SelfT), \".checked_mod_euc(2), Some(1));\n-assert_eq!(5\", stringify!($SelfT), \".checked_mod_euc(0), None);\n-assert_eq!(\", stringify!($SelfT), \"::MIN.checked_mod_euc(-1), None);\n+assert_eq!(5\", stringify!($SelfT), \".checked_rem_euclid(2), Some(1));\n+assert_eq!(5\", stringify!($SelfT), \".checked_rem_euclid(0), None);\n+assert_eq!(\", stringify!($SelfT), \"::MIN.checked_rem_euclid(-1), None);\n ```\"),\n             #[unstable(feature = \"euclidean_division\", issue = \"49048\")]\n             #[inline]\n-            pub fn checked_mod_euc(self, rhs: Self) -> Option<Self> {\n+            pub fn checked_rem_euclid(self, rhs: Self) -> Option<Self> {\n                 if rhs == 0 || (self == Self::min_value() && rhs == -1) {\n                     None\n                 } else {\n-                    Some(self.mod_euc(rhs))\n+                    Some(self.rem_euclid(rhs))\n                 }\n             }\n         }\n@@ -1089,7 +1079,7 @@ $EndFeature, \"\n         }\n \n         doc_comment! {\n-            concat!(\"Wrapping Euclidean division. Computes `self.div_euc(rhs)`,\n+            concat!(\"Wrapping Euclidean division. Computes `self.div_euclid(rhs)`,\n wrapping around at the boundary of the type.\n \n Wrapping will only occur in `MIN / -1` on a signed type (where `MIN` is the negative minimal value\n@@ -1106,13 +1096,13 @@ Basic usage:\n \n ```\n #![feature(euclidean_division)]\n-assert_eq!(100\", stringify!($SelfT), \".wrapping_div_euc(10), 10);\n-assert_eq!((-128i8).wrapping_div_euc(-1), -128);\n+assert_eq!(100\", stringify!($SelfT), \".wrapping_div_euclid(10), 10);\n+assert_eq!((-128i8).wrapping_div_euclid(-1), -128);\n ```\"),\n             #[unstable(feature = \"euclidean_division\", issue = \"49048\")]\n             #[inline]\n-            pub fn wrapping_div_euc(self, rhs: Self) -> Self {\n-                self.overflowing_div_euc(rhs).0\n+            pub fn wrapping_div_euclid(self, rhs: Self) -> Self {\n+                self.overflowing_div_euclid(rhs).0\n             }\n         }\n \n@@ -1145,8 +1135,8 @@ $EndFeature, \"\n         }\n \n         doc_comment! {\n-            concat!(\"Wrapping Euclidean modulo. Computes `self.mod_euc(rhs)`, wrapping around at the\n-boundary of the type.\n+            concat!(\"Wrapping Euclidean remainder. Computes `self.rem_euclid(rhs)`, wrapping around\n+at the boundary of the type.\n \n Wrapping will only occur in `MIN % -1` on a signed type (where `MIN` is the negative minimal value\n for the type). In this case, this method returns 0.\n@@ -1161,13 +1151,13 @@ Basic usage:\n \n ```\n #![feature(euclidean_division)]\n-assert_eq!(100\", stringify!($SelfT), \".wrapping_mod_euc(10), 0);\n-assert_eq!((-128i8).wrapping_mod_euc(-1), 0);\n+assert_eq!(100\", stringify!($SelfT), \".wrapping_rem_euclid(10), 0);\n+assert_eq!((-128i8).wrapping_rem_euclid(-1), 0);\n ```\"),\n             #[unstable(feature = \"euclidean_division\", issue = \"49048\")]\n             #[inline]\n-            pub fn wrapping_mod_euc(self, rhs: Self) -> Self {\n-                self.overflowing_mod_euc(rhs).0\n+            pub fn wrapping_rem_euclid(self, rhs: Self) -> Self {\n+                self.overflowing_rem_euclid(rhs).0\n             }\n         }\n \n@@ -1442,7 +1432,7 @@ $EndFeature, \"\n         }\n \n         doc_comment! {\n-            concat!(\"Calculates the quotient of Euclidean division `self.div_euc(rhs)`.\n+            concat!(\"Calculates the quotient of Euclidean division `self.div_euclid(rhs)`.\n \n Returns a tuple of the divisor along with a boolean indicating whether an arithmetic overflow would\n occur. If an overflow would occur then `self` is returned.\n@@ -1459,17 +1449,17 @@ Basic usage:\n #![feature(euclidean_division)]\n use std::\", stringify!($SelfT), \";\n \n-assert_eq!(5\", stringify!($SelfT), \".overflowing_div_euc(2), (2, false));\n-assert_eq!(\", stringify!($SelfT), \"::MIN.overflowing_div_euc(-1), (\", stringify!($SelfT),\n+assert_eq!(5\", stringify!($SelfT), \".overflowing_div_euclid(2), (2, false));\n+assert_eq!(\", stringify!($SelfT), \"::MIN.overflowing_div_euclid(-1), (\", stringify!($SelfT),\n \"::MIN, true));\n ```\"),\n             #[inline]\n             #[unstable(feature = \"euclidean_division\", issue = \"49048\")]\n-            pub fn overflowing_div_euc(self, rhs: Self) -> (Self, bool) {\n+            pub fn overflowing_div_euclid(self, rhs: Self) -> (Self, bool) {\n                 if self == Self::min_value() && rhs == -1 {\n                     (self, true)\n                 } else {\n-                    (self.div_euc(rhs), false)\n+                    (self.div_euclid(rhs), false)\n                 }\n             }\n         }\n@@ -1508,7 +1498,7 @@ $EndFeature, \"\n \n \n         doc_comment! {\n-            concat!(\"Calculates the remainder `self.mod_euc(rhs)` by Euclidean division.\n+            concat!(\"Overflowing Euclidean remainder. Calculates `self.rem_euclid(rhs)`.\n \n Returns a tuple of the remainder after dividing along with a boolean indicating whether an\n arithmetic overflow would occur. If an overflow would occur then 0 is returned.\n@@ -1525,16 +1515,16 @@ Basic usage:\n #![feature(euclidean_division)]\n use std::\", stringify!($SelfT), \";\n \n-assert_eq!(5\", stringify!($SelfT), \".overflowing_mod_euc(2), (1, false));\n-assert_eq!(\", stringify!($SelfT), \"::MIN.overflowing_mod_euc(-1), (0, true));\n+assert_eq!(5\", stringify!($SelfT), \".overflowing_rem_euclid(2), (1, false));\n+assert_eq!(\", stringify!($SelfT), \"::MIN.overflowing_rem_euclid(-1), (0, true));\n ```\"),\n             #[unstable(feature = \"euclidean_division\", issue = \"49048\")]\n             #[inline]\n-            pub fn overflowing_mod_euc(self, rhs: Self) -> (Self, bool) {\n+            pub fn overflowing_rem_euclid(self, rhs: Self) -> (Self, bool) {\n                 if self == Self::min_value() && rhs == -1 {\n                     (0, true)\n                 } else {\n-                    (self.mod_euc(rhs), false)\n+                    (self.rem_euclid(rhs), false)\n                 }\n             }\n         }\n@@ -1739,9 +1729,13 @@ $EndFeature, \"\n         doc_comment! {\n             concat!(\"Calculates the quotient of Euclidean division of `self` by `rhs`.\n \n-This computes the integer `n` such that `self = n * rhs + self.mod_euc(rhs)`.\n+This computes the integer `n` such that `self = n * rhs + self.rem_euclid(rhs)`,\n+with `0 <= self.rem_euclid(rhs) < rhs`.\n+\n In other words, the result is `self / rhs` rounded to the integer `n`\n such that `self >= n * rhs`.\n+If `self > 0`, this is equal to round towards zero (the default in Rust);\n+if `self < 0`, this is equal to round towards +/- infinity.\n \n # Panics\n \n@@ -1756,15 +1750,15 @@ Basic usage:\n let a: \", stringify!($SelfT), \" = 7; // or any other integer type\n let b = 4;\n \n-assert_eq!(a.div_euc(b), 1); // 7 >= 4 * 1\n-assert_eq!(a.div_euc(-b), -1); // 7 >= -4 * -1\n-assert_eq!((-a).div_euc(b), -2); // -7 >= 4 * -2\n-assert_eq!((-a).div_euc(-b), 2); // -7 >= -4 * 2\n+assert_eq!(a.div_euclid(b), 1); // 7 >= 4 * 1\n+assert_eq!(a.div_euclid(-b), -1); // 7 >= -4 * -1\n+assert_eq!((-a).div_euclid(b), -2); // -7 >= 4 * -2\n+assert_eq!((-a).div_euclid(-b), 2); // -7 >= -4 * 2\n ```\"),\n             #[unstable(feature = \"euclidean_division\", issue = \"49048\")]\n             #[inline]\n             #[rustc_inherit_overflow_checks]\n-            pub fn div_euc(self, rhs: Self) -> Self {\n+            pub fn div_euclid(self, rhs: Self) -> Self {\n                 let q = self / rhs;\n                 if self % rhs < 0 {\n                     return if rhs > 0 { q - 1 } else { q + 1 }\n@@ -1775,9 +1769,11 @@ assert_eq!((-a).div_euc(-b), 2); // -7 >= -4 * 2\n \n \n         doc_comment! {\n-            concat!(\"Calculates the remainder `self mod rhs` by Euclidean division.\n+            concat!(\"Calculates the least nonnegative remainder of `self (mod rhs)`.\n \n-In particular, the result `n` satisfies `0 <= n < rhs.abs()`.\n+This is done as if by the Euclidean division algorithm -- given\n+`r = self.rem_euclid(rhs)`, `self = rhs * self.div_euclid(rhs) + r`, and\n+`0 <= r < abs(rhs)`.\n \n # Panics\n \n@@ -1792,15 +1788,15 @@ Basic usage:\n let a: \", stringify!($SelfT), \" = 7; // or any other integer type\n let b = 4;\n \n-assert_eq!(a.mod_euc(b), 3);\n-assert_eq!((-a).mod_euc(b), 1);\n-assert_eq!(a.mod_euc(-b), 3);\n-assert_eq!((-a).mod_euc(-b), 1);\n+assert_eq!(a.rem_euclid(b), 3);\n+assert_eq!((-a).rem_euclid(b), 1);\n+assert_eq!(a.rem_euclid(-b), 3);\n+assert_eq!((-a).rem_euclid(-b), 1);\n ```\"),\n             #[unstable(feature = \"euclidean_division\", issue = \"49048\")]\n             #[inline]\n             #[rustc_inherit_overflow_checks]\n-            pub fn mod_euc(self, rhs: Self) -> Self {\n+            pub fn rem_euclid(self, rhs: Self) -> Self {\n                 let r = self % rhs;\n                 if r < 0 {\n                     if rhs < 0 {\n@@ -2611,7 +2607,7 @@ assert_eq!(1\", stringify!($SelfT), \".checked_div(0), None);\", $EndFeature, \"\n         }\n \n         doc_comment! {\n-            concat!(\"Checked Euclidean division. Computes `self.div_euc(rhs)`, returning `None`\n+            concat!(\"Checked Euclidean division. Computes `self.div_euclid(rhs)`, returning `None`\n if `rhs == 0`.\n \n # Examples\n@@ -2620,16 +2616,16 @@ Basic usage:\n \n ```\n #![feature(euclidean_division)]\n-assert_eq!(128\", stringify!($SelfT), \".checked_div(2), Some(64));\n-assert_eq!(1\", stringify!($SelfT), \".checked_div_euc(0), None);\n+assert_eq!(128\", stringify!($SelfT), \".checked_div_euclid(2), Some(64));\n+assert_eq!(1\", stringify!($SelfT), \".checked_div_euclid(0), None);\n ```\"),\n             #[unstable(feature = \"euclidean_division\", issue = \"49048\")]\n             #[inline]\n-            pub fn checked_div_euc(self, rhs: Self) -> Option<Self> {\n+            pub fn checked_div_euclid(self, rhs: Self) -> Option<Self> {\n                 if rhs == 0 {\n                     None\n                 } else {\n-                    Some(self.div_euc(rhs))\n+                    Some(self.div_euclid(rhs))\n                 }\n             }\n         }\n@@ -2659,7 +2655,7 @@ assert_eq!(5\", stringify!($SelfT), \".checked_rem(0), None);\", $EndFeature, \"\n         }\n \n         doc_comment! {\n-            concat!(\"Checked Euclidean modulo. Computes `self.mod_euc(rhs)`, returning `None`\n+            concat!(\"Checked Euclidean modulo. Computes `self.rem_euclid(rhs)`, returning `None`\n if `rhs == 0`.\n \n # Examples\n@@ -2668,16 +2664,16 @@ Basic usage:\n \n ```\n #![feature(euclidean_division)]\n-assert_eq!(5\", stringify!($SelfT), \".checked_mod_euc(2), Some(1));\n-assert_eq!(5\", stringify!($SelfT), \".checked_mod_euc(0), None);\n+assert_eq!(5\", stringify!($SelfT), \".checked_rem_euclid(2), Some(1));\n+assert_eq!(5\", stringify!($SelfT), \".checked_rem_euclid(0), None);\n ```\"),\n             #[unstable(feature = \"euclidean_division\", issue = \"49048\")]\n             #[inline]\n-            pub fn checked_mod_euc(self, rhs: Self) -> Option<Self> {\n+            pub fn checked_rem_euclid(self, rhs: Self) -> Option<Self> {\n                 if rhs == 0 {\n                     None\n                 } else {\n-                    Some(self.mod_euc(rhs))\n+                    Some(self.rem_euclid(rhs))\n                 }\n             }\n         }\n@@ -2965,23 +2961,26 @@ Basic usage:\n         }\n \n         doc_comment! {\n-            concat!(\"Wrapping Euclidean division. Computes `self.div_euc(rhs)`.\n+            concat!(\"Wrapping Euclidean division. Computes `self.div_euclid(rhs)`.\n Wrapped division on unsigned types is just normal division.\n There's no way wrapping could ever happen.\n This function exists, so that all operations\n are accounted for in the wrapping operations.\n+Since, for the positive integers, all common\n+definitions of division are equal, this\n+is exactly equal to `self.wrapping_div(rhs)`.\n \n # Examples\n \n Basic usage:\n \n ```\n #![feature(euclidean_division)]\n-assert_eq!(100\", stringify!($SelfT), \".wrapping_div_euc(10), 10);\n+assert_eq!(100\", stringify!($SelfT), \".wrapping_div_euclid(10), 10);\n ```\"),\n             #[unstable(feature = \"euclidean_division\", issue = \"49048\")]\n             #[inline]\n-            pub fn wrapping_div_euc(self, rhs: Self) -> Self {\n+            pub fn wrapping_div_euclid(self, rhs: Self) -> Self {\n                 self / rhs\n             }\n         }\n@@ -3009,24 +3008,27 @@ Basic usage:\n         }\n \n         doc_comment! {\n-            concat!(\"Wrapping Euclidean modulo. Computes `self.mod_euc(rhs)`.\n+            concat!(\"Wrapping Euclidean modulo. Computes `self.rem_euclid(rhs)`.\n Wrapped modulo calculation on unsigned types is\n just the regular remainder calculation.\n There's no way wrapping could ever happen.\n This function exists, so that all operations\n are accounted for in the wrapping operations.\n+Since, for the positive integers, all common\n+definitions of division are equal, this\n+is exactly equal to `self.wrapping_rem(rhs)`.\n \n # Examples\n \n Basic usage:\n \n ```\n #![feature(euclidean_division)]\n-assert_eq!(100\", stringify!($SelfT), \".wrapping_mod_euc(10), 0);\n+assert_eq!(100\", stringify!($SelfT), \".wrapping_rem_euclid(10), 0);\n ```\"),\n             #[unstable(feature = \"euclidean_division\", issue = \"49048\")]\n             #[inline]\n-            pub fn wrapping_mod_euc(self, rhs: Self) -> Self {\n+            pub fn wrapping_rem_euclid(self, rhs: Self) -> Self {\n                 self % rhs\n             }\n         }\n@@ -3270,12 +3272,15 @@ Basic usage\n         }\n \n         doc_comment! {\n-            concat!(\"Calculates the quotient of Euclidean division `self.div_euc(rhs)`.\n+            concat!(\"Calculates the quotient of Euclidean division `self.div_euclid(rhs)`.\n \n Returns a tuple of the divisor along with a boolean indicating\n whether an arithmetic overflow would occur. Note that for unsigned\n integers overflow never occurs, so the second value is always\n `false`.\n+Since, for the positive integers, all common\n+definitions of division are equal, this\n+is exactly equal to `self.overflowing_div(rhs)`.\n \n # Panics\n \n@@ -3287,11 +3292,11 @@ Basic usage\n \n ```\n #![feature(euclidean_division)]\n-assert_eq!(5\", stringify!($SelfT), \".overflowing_div_euc(2), (2, false));\n+assert_eq!(5\", stringify!($SelfT), \".overflowing_div_euclid(2), (2, false));\n ```\"),\n             #[inline]\n             #[unstable(feature = \"euclidean_division\", issue = \"49048\")]\n-            pub fn overflowing_div_euc(self, rhs: Self) -> (Self, bool) {\n+            pub fn overflowing_div_euclid(self, rhs: Self) -> (Self, bool) {\n                 (self / rhs, false)\n             }\n         }\n@@ -3323,12 +3328,15 @@ Basic usage\n         }\n \n         doc_comment! {\n-            concat!(\"Calculates the remainder `self.mod_euc(rhs)` by Euclidean division.\n+            concat!(\"Calculates the remainder `self.rem_euclid(rhs)` as if by Euclidean division.\n \n Returns a tuple of the modulo after dividing along with a boolean\n indicating whether an arithmetic overflow would occur. Note that for\n unsigned integers overflow never occurs, so the second value is\n always `false`.\n+Since, for the positive integers, all common\n+definitions of division are equal, this operation\n+is exactly equal to `self.overflowing_rem(rhs)`.\n \n # Panics\n \n@@ -3340,11 +3348,11 @@ Basic usage\n \n ```\n #![feature(euclidean_division)]\n-assert_eq!(5\", stringify!($SelfT), \".overflowing_mod_euc(2), (1, false));\n+assert_eq!(5\", stringify!($SelfT), \".overflowing_rem_euclid(2), (1, false));\n ```\"),\n             #[inline]\n             #[unstable(feature = \"euclidean_division\", issue = \"49048\")]\n-            pub fn overflowing_mod_euc(self, rhs: Self) -> (Self, bool) {\n+            pub fn overflowing_rem_euclid(self, rhs: Self) -> (Self, bool) {\n                 (self % rhs, false)\n             }\n         }\n@@ -3511,42 +3519,46 @@ Basic usage:\n             doc_comment! {\n             concat!(\"Performs Euclidean division.\n \n-For unsigned types, this is just the same as `self / rhs`.\n+Since, for the positive integers, all common\n+definitions of division are equal, this\n+is exactly equal to `self / rhs`.\n \n # Examples\n \n Basic usage:\n \n ```\n #![feature(euclidean_division)]\n-assert_eq!(7\", stringify!($SelfT), \".div_euc(4), 1); // or any other integer type\n+assert_eq!(7\", stringify!($SelfT), \".div_euclid(4), 1); // or any other integer type\n ```\"),\n             #[unstable(feature = \"euclidean_division\", issue = \"49048\")]\n             #[inline]\n             #[rustc_inherit_overflow_checks]\n-            pub fn div_euc(self, rhs: Self) -> Self {\n+            pub fn div_euclid(self, rhs: Self) -> Self {\n                 self / rhs\n             }\n         }\n \n \n         doc_comment! {\n-            concat!(\"Calculates the remainder `self mod rhs` by Euclidean division.\n+            concat!(\"Calculates the least remainder of `self (mod rhs)`.\n \n-For unsigned types, this is just the same as `self % rhs`.\n+Since, for the positive integers, all common\n+definitions of division are equal, this\n+is exactly equal to `self % rhs`.\n \n # Examples\n \n Basic usage:\n \n ```\n #![feature(euclidean_division)]\n-assert_eq!(7\", stringify!($SelfT), \".mod_euc(4), 3); // or any other integer type\n+assert_eq!(7\", stringify!($SelfT), \".rem_euclid(4), 3); // or any other integer type\n ```\"),\n             #[unstable(feature = \"euclidean_division\", issue = \"49048\")]\n             #[inline]\n             #[rustc_inherit_overflow_checks]\n-            pub fn mod_euc(self, rhs: Self) -> Self {\n+            pub fn rem_euclid(self, rhs: Self) -> Self {\n                 self % rhs\n             }\n         }"}, {"sha": "7d1aa664de30c52adfd54cc14b47555c7e3f2258", "filename": "src/libcore/num/u128.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fu128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fu128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fu128.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The 128-bit unsigned integer type.\n //!\n //! *[See also the `u128` primitive type](../../std/primitive.u128.html).*"}, {"sha": "34f80abaecc0580df9aae5866933ed5ebceff1e6", "filename": "src/libcore/num/u16.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fu16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fu16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fu16.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The 16-bit unsigned integer type.\n //!\n //! *[See also the `u16` primitive type](../../std/primitive.u16.html).*"}, {"sha": "5fd486f5466085c0a2183f410641d4713c225216", "filename": "src/libcore/num/u32.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fu32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fu32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fu32.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The 32-bit unsigned integer type.\n //!\n //! *[See also the `u32` primitive type](../../std/primitive.u32.html).*"}, {"sha": "044d238aea9be377cd57c8e2fb59605daed2f1fb", "filename": "src/libcore/num/u64.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fu64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fu64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fu64.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The 64-bit unsigned integer type.\n //!\n //! *[See also the `u64` primitive type](../../std/primitive.u64.html).*"}, {"sha": "6747e6a0f6c24f1968d273bcec247e8159568e6f", "filename": "src/libcore/num/u8.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fu8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fu8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fu8.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The 8-bit unsigned integer type.\n //!\n //! *[See also the `u8` primitive type](../../std/primitive.u8.html).*"}, {"sha": "a94b541ddb907962d315c5eabb64d9d63c2ab156", "filename": "src/libcore/num/uint_macros.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fuint_macros.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![doc(hidden)]\n \n macro_rules! uint_module {"}, {"sha": "e3a5239d908dc01bce3acaf6586e00f9053f28ca", "filename": "src/libcore/num/usize.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fusize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fusize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fusize.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The pointer-sized unsigned integer type.\n //!\n //! *[See also the `usize` primitive type](../../std/primitive.usize.html).*"}, {"sha": "50e189c9e3640502fd70f6255aedf3fe1a98cdf8", "filename": "src/libcore/num/wrapping.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fwrapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fnum%2Fwrapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fwrapping.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use super::Wrapping;\n \n use ops::*;"}, {"sha": "7d8bf18d33a017f6b43263fc6b5461f68202fdc0", "filename": "src/libcore/ops/arith.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Farith.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Farith.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Farith.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n /// The addition operator `+`.\n ///\n /// Note that `RHS` is `Self` by default, but this is not mandatory. For"}, {"sha": "2c9bf248633c44f8ec944ee0ce29af7501430c34", "filename": "src/libcore/ops/bit.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Fbit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Fbit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Fbit.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n /// The unary logical negation operator `!`.\n ///\n /// # Examples"}, {"sha": "075c3a084f41dab1e7d02bfc878a729fff7febcc", "filename": "src/libcore/ops/deref.rs", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Fderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Fderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Fderef.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n /// Used for immutable dereferencing operations, like `*v`.\n ///\n /// In addition to being used for explicit dereferencing operations with the\n@@ -37,7 +27,7 @@\n /// [book] as well as the reference sections on [the dereference operator]\n /// [ref-deref-op], [method resolution] and [type coercions].\n ///\n-/// [book]: ../../book/second-edition/ch15-02-deref.html\n+/// [book]: ../../book/ch15-02-deref.html\n /// [`DerefMut`]: trait.DerefMut.html\n /// [more]: #more-on-deref-coercion\n /// [ref-deref-op]: ../../reference/expressions/operator-expr.html#the-dereference-operator\n@@ -127,7 +117,7 @@ impl<T: ?Sized> Deref for &mut T {\n /// [book] as well as the reference sections on [the dereference operator]\n /// [ref-deref-op], [method resolution] and [type coercions].\n ///\n-/// [book]: ../../book/second-edition/ch15-02-deref.html\n+/// [book]: ../../book/ch15-02-deref.html\n /// [`Deref`]: trait.Deref.html\n /// [more]: #more-on-deref-coercion\n /// [ref-deref-op]: ../../reference/expressions/operator-expr.html#the-dereference-operator\n@@ -177,3 +167,19 @@ pub trait DerefMut: Deref {\n impl<T: ?Sized> DerefMut for &mut T {\n     fn deref_mut(&mut self) -> &mut T { *self }\n }\n+\n+/// Indicates that a struct can be used as a method receiver, without the\n+/// `arbitrary_self_types` feature. This is implemented by stdlib pointer types like `Box<T>`,\n+/// `Rc<T>`, `&T`, and `Pin<P>`.\n+#[cfg_attr(not(stage0), lang = \"receiver\")]\n+#[unstable(feature = \"receiver_trait\", issue = \"0\")]\n+#[doc(hidden)]\n+pub trait Receiver {\n+    // Empty.\n+}\n+\n+#[unstable(feature = \"receiver_trait\", issue = \"0\")]\n+impl<T: ?Sized> Receiver for &T {}\n+\n+#[unstable(feature = \"receiver_trait\", issue = \"0\")]\n+impl<T: ?Sized> Receiver for &mut T {}"}, {"sha": "eae63ea2390a8fca59fb9ef4dba0bc9bd2154384", "filename": "src/libcore/ops/drop.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Fdrop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Fdrop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Fdrop.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n /// Used to run some code when a value goes out of scope.\n /// This is sometimes called a 'destructor'.\n ///\n@@ -21,7 +11,7 @@\n /// Refer to [the chapter on `Drop` in *The Rust Programming Language*][book]\n /// for some more elaboration.\n ///\n-/// [book]: ../../book/second-edition/ch15-03-drop.html\n+/// [book]: ../../book/ch15-03-drop.html\n ///\n /// # Examples\n ///"}, {"sha": "3a1d765f7b8164e530262f9db92a867114a53b84", "filename": "src/libcore/ops/function.rs", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Ffunction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Ffunction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Ffunction.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n /// The version of the call operator that takes an immutable receiver.\n ///\n /// Instances of `Fn` can be called repeatedly without mutating state.\n@@ -37,7 +27,7 @@\n /// `Fn(usize, bool) -> usize`). Those interested in the technical details of\n /// this can refer to [the relevant section in the *Rustonomicon*][nomicon].\n ///\n-/// [book]: ../../book/second-edition/ch13-01-closures.html\n+/// [book]: ../../book/ch13-01-closures.html\n /// [`FnMut`]: trait.FnMut.html\n /// [`FnOnce`]: trait.FnOnce.html\n /// [function pointers]: ../../std/primitive.fn.html\n@@ -105,7 +95,7 @@ pub trait Fn<Args> : FnMut<Args> {\n /// `Fn(usize, bool) -> usize`). Those interested in the technical details of\n /// this can refer to [the relevant section in the *Rustonomicon*][nomicon].\n ///\n-/// [book]: ../../book/second-edition/ch13-01-closures.html\n+/// [book]: ../../book/ch13-01-closures.html\n /// [`Fn`]: trait.Fn.html\n /// [`FnOnce`]: trait.FnOnce.html\n /// [function pointers]: ../../std/primitive.fn.html\n@@ -183,7 +173,7 @@ pub trait FnMut<Args> : FnOnce<Args> {\n /// `Fn(usize, bool) -> usize`). Those interested in the technical details of\n /// this can refer to [the relevant section in the *Rustonomicon*][nomicon].\n ///\n-/// [book]: ../../book/second-edition/ch13-01-closures.html\n+/// [book]: ../../book/ch13-01-closures.html\n /// [`Fn`]: trait.Fn.html\n /// [`FnMut`]: trait.FnMut.html\n /// [function pointers]: ../../std/primitive.fn.html"}, {"sha": "1542cd6397e7858990a92260dfc1e8b6f5513998", "filename": "src/libcore/ops/generator.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Fgenerator.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n /// The result of a generator resumption.\n ///\n /// This enum is returned from the `Generator::resume` method and indicates the"}, {"sha": "4f55c68ecd4ae7c4ef4b93fb73dbc92259823e4d", "filename": "src/libcore/ops/index.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Findex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Findex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Findex.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n /// Used for indexing operations (`container[index]`) in immutable contexts.\n ///\n /// `container[index]` is actually syntactic sugar for `*container.index(index)`,"}, {"sha": "0ca64f28ff309eef40a96e96a6a3bf15e30f08e3", "filename": "src/libcore/ops/mod.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Overloadable operators.\n //!\n //! Implementing these traits allows you to overload certain operators.\n@@ -178,6 +168,9 @@ pub use self::bit::{BitAndAssign, BitOrAssign, BitXorAssign, ShlAssign, ShrAssig\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use self::deref::{Deref, DerefMut};\n \n+#[unstable(feature = \"receiver_trait\", issue = \"0\")]\n+pub use self::deref::Receiver;\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use self::drop::Drop;\n "}, {"sha": "815a4cfeed88ec7ba920a98794a2db00adef6912", "filename": "src/libcore/ops/range.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Frange.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use fmt;\n use hash::{Hash, Hasher};\n "}, {"sha": "380bd12131cf6d504e437e192652867ba5b5fcc8", "filename": "src/libcore/ops/try.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Ftry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Ftry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Ftry.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n /// A trait for customizing the behavior of the `?` operator.\n ///\n /// A type implementing `Try` is one that has a canonical way to view it"}, {"sha": "bd95ddf060ee45f72d59e8683a30e003cde4a6aa", "filename": "src/libcore/ops/unsize.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Funsize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fops%2Funsize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Funsize.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use marker::Unsize;\n \n /// Trait that indicates that this is a pointer or a wrapper for one,"}, {"sha": "6d4f4be1a17824ead0498e328b5af34ecd500dba", "filename": "src/libcore/option.rs", "status": "modified", "additions": 76, "deletions": 22, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Optional values.\n //!\n //! Type [`Option`] represents an optional value: every [`Option`]\n@@ -273,7 +263,7 @@ impl<T> Option<T> {\n \n     /// Converts from `Pin<&Option<T>>` to `Option<Pin<&T>>`\n     #[inline]\n-    #[unstable(feature = \"pin\", issue = \"49150\")]\n+    #[stable(feature = \"pin\", since = \"1.33.0\")]\n     pub fn as_pin_ref<'a>(self: Pin<&'a Option<T>>) -> Option<Pin<&'a T>> {\n         unsafe {\n             Pin::get_ref(self).as_ref().map(|x| Pin::new_unchecked(x))\n@@ -282,10 +272,10 @@ impl<T> Option<T> {\n \n     /// Converts from `Pin<&mut Option<T>>` to `Option<Pin<&mut T>>`\n     #[inline]\n-    #[unstable(feature = \"pin\", issue = \"49150\")]\n+    #[stable(feature = \"pin\", since = \"1.33.0\")]\n     pub fn as_pin_mut<'a>(self: Pin<&'a mut Option<T>>) -> Option<Pin<&'a mut T>> {\n         unsafe {\n-            Pin::get_mut_unchecked(self).as_mut().map(|x| Pin::new_unchecked(x))\n+            Pin::get_unchecked_mut(self).as_mut().map(|x| Pin::new_unchecked(x))\n         }\n     }\n \n@@ -884,6 +874,48 @@ impl<T> Option<T> {\n     }\n }\n \n+impl<'a, T: Copy> Option<&'a T> {\n+    /// Maps an `Option<&T>` to an `Option<T>` by copying the contents of the\n+    /// option.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(copied)]\n+    ///\n+    /// let x = 12;\n+    /// let opt_x = Some(&x);\n+    /// assert_eq!(opt_x, Some(&12));\n+    /// let copied = opt_x.copied();\n+    /// assert_eq!(copied, Some(12));\n+    /// ```\n+    #[unstable(feature = \"copied\", issue = \"57126\")]\n+    pub fn copied(self) -> Option<T> {\n+        self.map(|&t| t)\n+    }\n+}\n+\n+impl<'a, T: Copy> Option<&'a mut T> {\n+    /// Maps an `Option<&mut T>` to an `Option<T>` by copying the contents of the\n+    /// option.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(copied)]\n+    ///\n+    /// let mut x = 12;\n+    /// let opt_x = Some(&mut x);\n+    /// assert_eq!(opt_x, Some(&mut 12));\n+    /// let copied = opt_x.copied();\n+    /// assert_eq!(copied, Some(12));\n+    /// ```\n+    #[unstable(feature = \"copied\", issue = \"57126\")]\n+    pub fn copied(self) -> Option<T> {\n+        self.map(|&mut t| t)\n+    }\n+}\n+\n impl<'a, T: Clone> Option<&'a T> {\n     /// Maps an `Option<&T>` to an `Option<T>` by cloning the contents of the\n     /// option.\n@@ -1253,19 +1285,41 @@ impl<A, V: FromIterator<A>> FromIterator<Option<A>> for Option<V> {\n     /// returned. Should no [`None`][Option::None] occur, a container with the\n     /// values of each [`Option`] is returned.\n     ///\n-    /// Here is an example which increments every integer in a vector,\n-    /// checking for overflow:\n+    /// # Examples\n+    ///\n+    /// Here is an example which increments every integer in a vector.\n+    /// `We use the checked variant of `add` that returns `None` when the\n+    /// calculation would result in an overflow.\n     ///\n     /// ```\n-    /// use std::u16;\n+    /// let items = vec![0_u16, 1, 2];\n+    ///\n+    /// let res: Option<Vec<u16>> = items\n+    ///     .iter()\n+    ///     .map(|x| x.checked_add(1))\n+    ///     .collect();\n+    ///\n+    /// assert_eq!(res, Some(vec![1, 2, 3]));\n+    /// ```\n+    ///\n+    /// As you can see, this will return the expected, valid items.\n+    ///\n+    /// Here is another example that tries to subtract one from another list\n+    /// of integers, this time checking for underflow:\n     ///\n-    /// let v = vec![1, 2];\n-    /// let res: Option<Vec<u16>> = v.iter().map(|&x: &u16|\n-    ///     if x == u16::MAX { None }\n-    ///     else { Some(x + 1) }\n-    /// ).collect();\n-    /// assert!(res == Some(vec![2, 3]));\n     /// ```\n+    /// let items = vec![2_u16, 1, 0];\n+    ///\n+    /// let res: Option<Vec<u16>> = items\n+    ///     .iter()\n+    ///     .map(|x| x.checked_sub(1))\n+    ///     .collect();\n+    ///\n+    /// assert_eq!(res, None);\n+    /// ```\n+    ///\n+    /// Since the last element is zero, it would underflow. Thus, the resulting\n+    /// value is `None`.\n     ///\n     /// [`Iterator`]: ../iter/trait.Iterator.html\n     #[inline]"}, {"sha": "1abc0a18a9cc94aaeaa3e77bdd91ad9a559ae0d0", "filename": "src/libcore/panic.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpanic.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Panic support in the standard library.\n \n #![unstable(feature = \"core_panic_info\","}, {"sha": "d9cdb2a2b8a9f1fce0d960a5b962283330a44ab8", "filename": "src/libcore/panicking.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpanicking.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Panic support for libcore\n //!\n //! The core library cannot define panicking, but it does *declare* panicking. This"}, {"sha": "e31ac691e3a3c0ba8c91e5d6bd9f8067a3c2c36a", "filename": "src/libcore/pin.rs", "status": "modified", "additions": 42, "deletions": 46, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpin.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -25,7 +25,7 @@\n //! values.\n //!\n //! However, these restrictions are usually not necessary. Many types are always freely\n-//! movable. These types implement the [`Unpin`] auto-trait, which nullifies the affect\n+//! movable. These types implement the [`Unpin`] auto-trait, which nullifies the effect\n //! of [`Pin`]. For `T: Unpin`, `Pin<Box<T>>` and `Box<T>` function identically, as do\n //! `Pin<&mut T>` and `&mut T`.\n //!\n@@ -36,15 +36,13 @@\n //! are always freely movable, even if the data they point to isn't.\n //!\n //! [`Pin`]: struct.Pin.html\n-//! [`Unpin`]: trait.Unpin.html\n+//! [`Unpin`]: ../../std/marker/trait.Unpin.html\n //! [`swap`]: ../../std/mem/fn.swap.html\n //! [`Box`]: ../../std/boxed/struct.Box.html\n //!\n //! # Examples\n //!\n //! ```rust\n-//! #![feature(pin)]\n-//!\n //! use std::pin::Pin;\n //! use std::marker::PhantomPinned;\n //! use std::ptr::NonNull;\n@@ -72,13 +70,13 @@\n //!             slice: NonNull::dangling(),\n //!             _pin: PhantomPinned,\n //!         };\n-//!         let mut boxed = Box::pinned(res);\n+//!         let mut boxed = Box::pin(res);\n //!\n //!         let slice = NonNull::from(&boxed.data);\n //!         // we know this is safe because modifying a field doesn't move the whole struct\n //!         unsafe {\n //!             let mut_ref: Pin<&mut Self> = Pin::as_mut(&mut boxed);\n-//!             Pin::get_mut_unchecked(mut_ref).slice = slice;\n+//!             Pin::get_unchecked_mut(mut_ref).slice = slice;\n //!         }\n //!         boxed\n //!     }\n@@ -97,14 +95,11 @@\n //! // std::mem::swap(&mut *still_unmoved, &mut *new_unmoved);\n //! ```\n \n-#![unstable(feature = \"pin\", issue = \"49150\")]\n+#![stable(feature = \"pin\", since = \"1.33.0\")]\n \n use fmt;\n-use marker::Sized;\n-use ops::{Deref, DerefMut, CoerceUnsized, DispatchFromDyn};\n-\n-#[doc(inline)]\n-pub use marker::Unpin;\n+use marker::{Sized, Unpin};\n+use ops::{Deref, DerefMut, Receiver, CoerceUnsized, DispatchFromDyn};\n \n /// A pinned pointer.\n ///\n@@ -119,8 +114,9 @@ pub use marker::Unpin;\n //\n // Note: the derives below are allowed because they all only use `&P`, so they\n // cannot move the value behind `pointer`.\n-#[unstable(feature = \"pin\", issue = \"49150\")]\n+#[stable(feature = \"pin\", since = \"1.33.0\")]\n #[fundamental]\n+#[repr(transparent)]\n #[derive(Copy, Clone, Hash, Eq, PartialEq, Ord, PartialOrd)]\n pub struct Pin<P> {\n     pointer: P,\n@@ -132,7 +128,7 @@ where\n {\n     /// Construct a new `Pin` around a pointer to some data of a type that\n     /// implements `Unpin`.\n-    #[unstable(feature = \"pin\", issue = \"49150\")]\n+    #[stable(feature = \"pin\", since = \"1.33.0\")]\n     #[inline(always)]\n     pub fn new(pointer: P) -> Pin<P> {\n         // Safety: the value pointed to is `Unpin`, and so has no requirements\n@@ -154,14 +150,14 @@ impl<P: Deref> Pin<P> {\n     ///\n     /// If `pointer` dereferences to an `Unpin` type, `Pin::new` should be used\n     /// instead.\n-    #[unstable(feature = \"pin\", issue = \"49150\")]\n+    #[stable(feature = \"pin\", since = \"1.33.0\")]\n     #[inline(always)]\n     pub unsafe fn new_unchecked(pointer: P) -> Pin<P> {\n         Pin { pointer }\n     }\n \n     /// Get a pinned shared reference from this pinned pointer.\n-    #[unstable(feature = \"pin\", issue = \"49150\")]\n+    #[stable(feature = \"pin\", since = \"1.33.0\")]\n     #[inline(always)]\n     pub fn as_ref(self: &Pin<P>) -> Pin<&P::Target> {\n         unsafe { Pin::new_unchecked(&*self.pointer) }\n@@ -170,14 +166,14 @@ impl<P: Deref> Pin<P> {\n \n impl<P: DerefMut> Pin<P> {\n     /// Get a pinned mutable reference from this pinned pointer.\n-    #[unstable(feature = \"pin\", issue = \"49150\")]\n+    #[stable(feature = \"pin\", since = \"1.33.0\")]\n     #[inline(always)]\n     pub fn as_mut(self: &mut Pin<P>) -> Pin<&mut P::Target> {\n         unsafe { Pin::new_unchecked(&mut *self.pointer) }\n     }\n \n     /// Assign a new value to the memory behind the pinned reference.\n-    #[unstable(feature = \"pin\", issue = \"49150\")]\n+    #[stable(feature = \"pin\", since = \"1.33.0\")]\n     #[inline(always)]\n     pub fn set(mut self: Pin<P>, value: P::Target)\n     where\n@@ -199,11 +195,11 @@ impl<'a, T: ?Sized> Pin<&'a T> {\n     /// will not move so long as the argument value does not move (for example,\n     /// because it is one of the fields of that value), and also that you do\n     /// not move out of the argument you receive to the interior function.\n-    #[unstable(feature = \"pin\", issue = \"49150\")]\n-    pub unsafe fn map_unchecked<U, F>(this: Pin<&'a T>, func: F) -> Pin<&'a U> where\n+    #[stable(feature = \"pin\", since = \"1.33.0\")]\n+    pub unsafe fn map_unchecked<U, F>(self: Pin<&'a T>, func: F) -> Pin<&'a U> where\n         F: FnOnce(&T) -> &U,\n     {\n-        let pointer = &*this.pointer;\n+        let pointer = &*self.pointer;\n         let new_pointer = func(pointer);\n         Pin::new_unchecked(new_pointer)\n     }\n@@ -215,19 +211,19 @@ impl<'a, T: ?Sized> Pin<&'a T> {\n     /// that lives for as long as the borrow of the `Pin`, not the lifetime of\n     /// the `Pin` itself. This method allows turning the `Pin` into a reference\n     /// with the same lifetime as the original `Pin`.\n-    #[unstable(feature = \"pin\", issue = \"49150\")]\n+    #[stable(feature = \"pin\", since = \"1.33.0\")]\n     #[inline(always)]\n-    pub fn get_ref(this: Pin<&'a T>) -> &'a T {\n-        this.pointer\n+    pub fn get_ref(self: Pin<&'a T>) -> &'a T {\n+        self.pointer\n     }\n }\n \n impl<'a, T: ?Sized> Pin<&'a mut T> {\n     /// Convert this `Pin<&mut T>` into a `Pin<&T>` with the same lifetime.\n-    #[unstable(feature = \"pin\", issue = \"49150\")]\n+    #[stable(feature = \"pin\", since = \"1.33.0\")]\n     #[inline(always)]\n-    pub fn into_ref(this: Pin<&'a mut T>) -> Pin<&'a T> {\n-        Pin { pointer: this.pointer }\n+    pub fn into_ref(self: Pin<&'a mut T>) -> Pin<&'a T> {\n+        Pin { pointer: self.pointer }\n     }\n \n     /// Get a mutable reference to the data inside of this `Pin`.\n@@ -239,12 +235,12 @@ impl<'a, T: ?Sized> Pin<&'a mut T> {\n     /// that lives for as long as the borrow of the `Pin`, not the lifetime of\n     /// the `Pin` itself. This method allows turning the `Pin` into a reference\n     /// with the same lifetime as the original `Pin`.\n-    #[unstable(feature = \"pin\", issue = \"49150\")]\n+    #[stable(feature = \"pin\", since = \"1.33.0\")]\n     #[inline(always)]\n-    pub fn get_mut(this: Pin<&'a mut T>) -> &'a mut T\n+    pub fn get_mut(self: Pin<&'a mut T>) -> &'a mut T\n         where T: Unpin,\n     {\n-        this.pointer\n+        self.pointer\n     }\n \n     /// Get a mutable reference to the data inside of this `Pin`.\n@@ -257,10 +253,10 @@ impl<'a, T: ?Sized> Pin<&'a mut T> {\n     ///\n     /// If the underlying data is `Unpin`, `Pin::get_mut` should be used\n     /// instead.\n-    #[unstable(feature = \"pin\", issue = \"49150\")]\n+    #[stable(feature = \"pin\", since = \"1.33.0\")]\n     #[inline(always)]\n-    pub unsafe fn get_mut_unchecked(this: Pin<&'a mut T>) -> &'a mut T {\n-        this.pointer\n+    pub unsafe fn get_unchecked_mut(self: Pin<&'a mut T>) -> &'a mut T {\n+        self.pointer\n     }\n \n     /// Construct a new pin by mapping the interior value.\n@@ -274,25 +270,25 @@ impl<'a, T: ?Sized> Pin<&'a mut T> {\n     /// will not move so long as the argument value does not move (for example,\n     /// because it is one of the fields of that value), and also that you do\n     /// not move out of the argument you receive to the interior function.\n-    #[unstable(feature = \"pin\", issue = \"49150\")]\n-    pub unsafe fn map_unchecked_mut<U, F>(this: Pin<&'a mut T>, func: F) -> Pin<&'a mut U> where\n+    #[stable(feature = \"pin\", since = \"1.33.0\")]\n+    pub unsafe fn map_unchecked_mut<U, F>(self: Pin<&'a mut T>, func: F) -> Pin<&'a mut U> where\n         F: FnOnce(&mut T) -> &mut U,\n     {\n-        let pointer = Pin::get_mut_unchecked(this);\n+        let pointer = Pin::get_unchecked_mut(self);\n         let new_pointer = func(pointer);\n         Pin::new_unchecked(new_pointer)\n     }\n }\n \n-#[unstable(feature = \"pin\", issue = \"49150\")]\n+#[stable(feature = \"pin\", since = \"1.33.0\")]\n impl<P: Deref> Deref for Pin<P> {\n     type Target = P::Target;\n     fn deref(&self) -> &P::Target {\n         Pin::get_ref(Pin::as_ref(self))\n     }\n }\n \n-#[unstable(feature = \"pin\", issue = \"49150\")]\n+#[stable(feature = \"pin\", since = \"1.33.0\")]\n impl<P: DerefMut> DerefMut for Pin<P>\n where\n     P::Target: Unpin\n@@ -302,21 +298,24 @@ where\n     }\n }\n \n-#[unstable(feature = \"pin\", issue = \"49150\")]\n+#[unstable(feature = \"receiver_trait\", issue = \"0\")]\n+impl<P: Receiver> Receiver for Pin<P> {}\n+\n+#[stable(feature = \"pin\", since = \"1.33.0\")]\n impl<P: fmt::Debug> fmt::Debug for Pin<P> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         fmt::Debug::fmt(&self.pointer, f)\n     }\n }\n \n-#[unstable(feature = \"pin\", issue = \"49150\")]\n+#[stable(feature = \"pin\", since = \"1.33.0\")]\n impl<P: fmt::Display> fmt::Display for Pin<P> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         fmt::Display::fmt(&self.pointer, f)\n     }\n }\n \n-#[unstable(feature = \"pin\", issue = \"49150\")]\n+#[stable(feature = \"pin\", since = \"1.33.0\")]\n impl<P: fmt::Pointer> fmt::Pointer for Pin<P> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         fmt::Pointer::fmt(&self.pointer, f)\n@@ -328,17 +327,14 @@ impl<P: fmt::Pointer> fmt::Pointer for Pin<P> {\n // `Deref<Target=Unpin>` is unsound. Any such impl would probably be unsound\n // for other reasons, though, so we just need to take care not to allow such\n // impls to land in std.\n-#[unstable(feature = \"pin\", issue = \"49150\")]\n+#[stable(feature = \"pin\", since = \"1.33.0\")]\n impl<P, U> CoerceUnsized<Pin<U>> for Pin<P>\n where\n     P: CoerceUnsized<U>,\n {}\n \n-#[unstable(feature = \"pin\", issue = \"49150\")]\n+#[stable(feature = \"pin\", since = \"1.33.0\")]\n impl<'a, P, U> DispatchFromDyn<Pin<U>> for Pin<P>\n where\n     P: DispatchFromDyn<U>,\n {}\n-\n-#[unstable(feature = \"pin\", issue = \"49150\")]\n-impl<P> Unpin for Pin<P> {}"}, {"sha": "51f4acf068580e0a6b042271e2e8ceb137ea1176", "filename": "src/libcore/prelude/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fprelude%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fprelude%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fprelude%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The libcore prelude\n \n #![stable(feature = \"core_prelude\", since = \"1.4.0\")]"}, {"sha": "b53494edbf4013da74868ba1d3c1daee6df9ad70", "filename": "src/libcore/prelude/v1.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fprelude%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fprelude%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fprelude%2Fv1.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! The core prelude\n //!\n //! This module is intended for users of libcore which do not link to libstd as\n@@ -19,7 +9,7 @@\n // Re-exported core operators\n #[stable(feature = \"core_prelude\", since = \"1.4.0\")]\n #[doc(no_inline)]\n-pub use marker::{Copy, Send, Sized, Sync};\n+pub use marker::{Copy, Send, Sized, Sync, Unpin};\n #[stable(feature = \"core_prelude\", since = \"1.4.0\")]\n #[doc(no_inline)]\n pub use ops::{Drop, Fn, FnMut, FnOnce};"}, {"sha": "55a72d7a9a94daffebd36f40971ec297f210ec12", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 17, "deletions": 26, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Manually manage memory through raw pointers.\n //!\n //! *[See also the pointer primitive types](../../std/primitive.pointer.html).*\n@@ -80,7 +70,6 @@ use fmt;\n use hash;\n use marker::{PhantomData, Unsize};\n use mem::{self, MaybeUninit};\n-use nonzero::NonZero;\n \n use cmp::Ordering::{self, Less, Equal, Greater};\n \n@@ -602,7 +591,7 @@ pub unsafe fn read<T>(src: *const T) -> T {\n /// whether `T` is [`Copy`].  If `T` is not [`Copy`], using both the returned\n /// value and the value at `*src` can [violate memory safety][read-ownership].\n ///\n-/// Note that even if `T` has size `0`, the pointer must be non-NULL and properly aligned.\n+/// Note that even if `T` has size `0`, the pointer must be non-NULL.\n ///\n /// [`Copy`]: ../marker/trait.Copy.html\n /// [`read`]: ./fn.read.html\n@@ -770,7 +759,7 @@ pub unsafe fn write<T>(dst: *mut T, src: T) {\n ///\n /// * `dst` must be [valid] for writes.\n ///\n-/// Note that even if `T` has size `0`, the pointer must be non-NULL and properly aligned.\n+/// Note that even if `T` has size `0`, the pointer must be non-NULL.\n ///\n /// [valid]: ../ptr/index.html#safety\n ///\n@@ -2728,8 +2717,9 @@ impl<T: ?Sized> PartialOrd for *mut T {\n                      (if you also use #[may_dangle]), Send, and/or Sync\")]\n #[doc(hidden)]\n #[repr(transparent)]\n+#[rustc_layout_scalar_valid_range_start(1)]\n pub struct Unique<T: ?Sized> {\n-    pointer: NonZero<*const T>,\n+    pointer: *const T,\n     // NOTE: this marker has no consequences for variance, but is necessary\n     // for dropck to understand that we logically own a `T`.\n     //\n@@ -2786,21 +2776,21 @@ impl<T: ?Sized> Unique<T> {\n     ///\n     /// `ptr` must be non-null.\n     pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {\n-        Unique { pointer: NonZero(ptr as _), _marker: PhantomData }\n+        Unique { pointer: ptr as _, _marker: PhantomData }\n     }\n \n     /// Creates a new `Unique` if `ptr` is non-null.\n     pub fn new(ptr: *mut T) -> Option<Self> {\n         if !ptr.is_null() {\n-            Some(Unique { pointer: unsafe { NonZero(ptr as _) }, _marker: PhantomData })\n+            Some(unsafe { Unique { pointer: ptr as _, _marker: PhantomData } })\n         } else {\n             None\n         }\n     }\n \n     /// Acquires the underlying `*mut` pointer.\n     pub fn as_ptr(self) -> *mut T {\n-        self.pointer.0 as *mut T\n+        self.pointer as *mut T\n     }\n \n     /// Dereferences the content.\n@@ -2848,21 +2838,21 @@ impl<T: ?Sized> fmt::Pointer for Unique<T> {\n #[unstable(feature = \"ptr_internals\", issue = \"0\")]\n impl<'a, T: ?Sized> From<&'a mut T> for Unique<T> {\n     fn from(reference: &'a mut T) -> Self {\n-        Unique { pointer: unsafe { NonZero(reference as *mut T) }, _marker: PhantomData }\n+        unsafe { Unique { pointer: reference as *mut T, _marker: PhantomData } }\n     }\n }\n \n #[unstable(feature = \"ptr_internals\", issue = \"0\")]\n impl<'a, T: ?Sized> From<&'a T> for Unique<T> {\n     fn from(reference: &'a T) -> Self {\n-        Unique { pointer: unsafe { NonZero(reference as *const T) }, _marker: PhantomData }\n+        unsafe { Unique { pointer: reference as *const T, _marker: PhantomData } }\n     }\n }\n \n #[unstable(feature = \"ptr_internals\", issue = \"0\")]\n impl<'a, T: ?Sized> From<NonNull<T>> for Unique<T> {\n     fn from(p: NonNull<T>) -> Self {\n-        Unique { pointer: p.pointer, _marker: PhantomData }\n+        unsafe { Unique { pointer: p.pointer, _marker: PhantomData } }\n     }\n }\n \n@@ -2885,8 +2875,9 @@ impl<'a, T: ?Sized> From<NonNull<T>> for Unique<T> {\n /// provide a public API that follows the normal shared XOR mutable rules of Rust.\n #[stable(feature = \"nonnull\", since = \"1.25.0\")]\n #[repr(transparent)]\n+#[rustc_layout_scalar_valid_range_start(1)]\n pub struct NonNull<T: ?Sized> {\n-    pointer: NonZero<*const T>,\n+    pointer: *const T,\n }\n \n /// `NonNull` pointers are not `Send` because the data they reference may be aliased.\n@@ -2928,7 +2919,7 @@ impl<T: ?Sized> NonNull<T> {\n     #[stable(feature = \"nonnull\", since = \"1.25.0\")]\n     #[inline]\n     pub const unsafe fn new_unchecked(ptr: *mut T) -> Self {\n-        NonNull { pointer: NonZero(ptr as _) }\n+        NonNull { pointer: ptr as _ }\n     }\n \n     /// Creates a new `NonNull` if `ptr` is non-null.\n@@ -2946,7 +2937,7 @@ impl<T: ?Sized> NonNull<T> {\n     #[stable(feature = \"nonnull\", since = \"1.25.0\")]\n     #[inline]\n     pub const fn as_ptr(self) -> *mut T {\n-        self.pointer.0 as *mut T\n+        self.pointer as *mut T\n     }\n \n     /// Dereferences the content.\n@@ -3050,22 +3041,22 @@ impl<T: ?Sized> hash::Hash for NonNull<T> {\n impl<T: ?Sized> From<Unique<T>> for NonNull<T> {\n     #[inline]\n     fn from(unique: Unique<T>) -> Self {\n-        NonNull { pointer: unique.pointer }\n+        unsafe { NonNull { pointer: unique.pointer } }\n     }\n }\n \n #[stable(feature = \"nonnull\", since = \"1.25.0\")]\n impl<'a, T: ?Sized> From<&'a mut T> for NonNull<T> {\n     #[inline]\n     fn from(reference: &'a mut T) -> Self {\n-        NonNull { pointer: unsafe { NonZero(reference as *mut T) } }\n+        unsafe { NonNull { pointer: reference as *mut T } }\n     }\n }\n \n #[stable(feature = \"nonnull\", since = \"1.25.0\")]\n impl<'a, T: ?Sized> From<&'a T> for NonNull<T> {\n     #[inline]\n     fn from(reference: &'a T) -> Self {\n-        NonNull { pointer: unsafe { NonZero(reference as *const T) } }\n+        unsafe { NonNull { pointer: reference as *const T } }\n     }\n }"}, {"sha": "155429b0e4f541bd909bf44d5848ce3f2d0adc54", "filename": "src/libcore/raw.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fraw.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![allow(missing_docs)]\n #![unstable(feature = \"raw\", issue = \"27751\")]\n "}, {"sha": "b10d767efb24ee62f2fb3f09317455d20966f250", "filename": "src/libcore/result.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Error handling with the `Result` type.\n //!\n //! [`Result<T, E>`][`Result`] is the type used for returning and propagating"}, {"sha": "0f1bc41dd7ffffcebe702a3340110c91ffa8fc91", "filename": "src/libcore/slice/memchr.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fslice%2Fmemchr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fslice%2Fmemchr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmemchr.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n //\n // Original implementation taken from rust-memchr\n // Copyright 2015 Andrew Gallant, bluss and Nicolas Koch"}, {"sha": "7fdc2acb8cc92e22acb136ae39769233889cbea4", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012-2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Slice management and manipulation.\n //!\n //! For more details see [`std::slice`].\n@@ -877,6 +867,7 @@ impl<T> [T] {\n     /// assert_eq!(iter.remainder(), &['l']);\n     /// ```\n     ///\n+    /// [`chunks`]: #method.chunks\n     /// [`rchunks`]: #method.rchunks\n     /// [`chunks_exact`]: #method.chunks_exact\n     #[stable(feature = \"rchunks\", since = \"1.31.0\")]\n@@ -921,6 +912,7 @@ impl<T> [T] {\n     /// assert_eq!(v, &[0, 2, 2, 1, 1]);\n     /// ```\n     ///\n+    /// [`chunks_mut`]: #method.chunks_mut\n     /// [`rchunks_mut`]: #method.rchunks_mut\n     /// [`chunks_exact_mut`]: #method.chunks_exact_mut\n     #[stable(feature = \"rchunks\", since = \"1.31.0\")]"}]}