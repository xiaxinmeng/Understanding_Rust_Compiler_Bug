{"sha": "aeac5555780cb11cf701a5fa69d66adcaa3e2f4a", "node_id": "C_kwDOAAsO6NoAKGFlYWM1NTU1NzgwY2IxMWNmNzAxYTVmYTY5ZDY2YWRjYWEzZTJmNGE", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-10T17:29:02Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-10T19:22:57Z"}, "message": "Do not see through copies of mutable pointers.", "tree": {"sha": "942d82c68db21bf66b60abb5d4a1cb8e3716adab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/942d82c68db21bf66b60abb5d4a1cb8e3716adab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aeac5555780cb11cf701a5fa69d66adcaa3e2f4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aeac5555780cb11cf701a5fa69d66adcaa3e2f4a", "html_url": "https://github.com/rust-lang/rust/commit/aeac5555780cb11cf701a5fa69d66adcaa3e2f4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aeac5555780cb11cf701a5fa69d66adcaa3e2f4a/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0d4e0237ff708c4d41070ef946679819125a0d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0d4e0237ff708c4d41070ef946679819125a0d5", "html_url": "https://github.com/rust-lang/rust/commit/d0d4e0237ff708c4d41070ef946679819125a0d5"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "38be7b3c7ea2945fcbfabb5c70edda194a7d36ce", "filename": "compiler/rustc_mir_transform/src/ref_prop.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/aeac5555780cb11cf701a5fa69d66adcaa3e2f4a/compiler%2Frustc_mir_transform%2Fsrc%2Fref_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aeac5555780cb11cf701a5fa69d66adcaa3e2f4a/compiler%2Frustc_mir_transform%2Fsrc%2Fref_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fref_prop.rs?ref=aeac5555780cb11cf701a5fa69d66adcaa3e2f4a", "patch": "@@ -208,13 +208,14 @@ fn compute_replacement<'tcx>(\n             // have been visited before.\n             Rvalue::Use(Operand::Copy(place) | Operand::Move(place))\n             | Rvalue::CopyForDeref(place) => {\n-                if let Some(rhs) = place.as_local() {\n+                if let Some(rhs) = place.as_local() && ssa.is_ssa(rhs) {\n                     let target = targets[rhs];\n-                    if matches!(target, Value::Pointer(..)) {\n+                    // Only see through immutable reference and pointers, as we do not know yet if\n+                    // mutable references are fully replaced.\n+                    if !needs_unique && matches!(target, Value::Pointer(..)) {\n                         targets[local] = target;\n-                    } else if ssa.is_ssa(rhs) {\n-                        let refmut = body.local_decls[rhs].ty.is_mutable_ptr();\n-                        targets[local] = Value::Pointer(tcx.mk_place_deref(rhs.into()), refmut);\n+                    } else {\n+                        targets[local] = Value::Pointer(tcx.mk_place_deref(rhs.into()), needs_unique);\n                     }\n                 }\n             }"}, {"sha": "af8ee2411d36dc9cc70fd6aeae4ce43246e40fb9", "filename": "tests/mir-opt/reference_prop.mut_raw_then_mut_shr.ReferencePropagation.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aeac5555780cb11cf701a5fa69d66adcaa3e2f4a/tests%2Fmir-opt%2Freference_prop.mut_raw_then_mut_shr.ReferencePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/aeac5555780cb11cf701a5fa69d66adcaa3e2f4a/tests%2Fmir-opt%2Freference_prop.mut_raw_then_mut_shr.ReferencePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Freference_prop.mut_raw_then_mut_shr.ReferencePropagation.diff?ref=aeac5555780cb11cf701a5fa69d66adcaa3e2f4a", "patch": "@@ -37,14 +37,14 @@\n -         StorageLive(_2);                 // scope 1 at $DIR/reference_prop.rs:+2:9: +2:13\n           _2 = &mut _1;                    // scope 1 at $DIR/reference_prop.rs:+2:16: +2:22\n           StorageLive(_3);                 // scope 2 at $DIR/reference_prop.rs:+3:9: +3:13\n-          StorageLive(_4);                 // scope 2 at $DIR/reference_prop.rs:+3:16: +3:36\n+-         StorageLive(_4);                 // scope 2 at $DIR/reference_prop.rs:+3:16: +3:36\n -         StorageLive(_5);                 // scope 2 at $DIR/reference_prop.rs:+3:16: +3:26\n -         _5 = &mut (*_2);                 // scope 2 at $DIR/reference_prop.rs:+3:16: +3:26\n -         _4 = &raw mut (*_5);             // scope 2 at $DIR/reference_prop.rs:+3:16: +3:26\n +         _4 = &raw mut _1;                // scope 2 at $DIR/reference_prop.rs:+3:16: +3:26\n           _3 = _4;                         // scope 2 at $DIR/reference_prop.rs:+3:16: +3:36\n -         StorageDead(_5);                 // scope 2 at $DIR/reference_prop.rs:+3:36: +3:37\n-          StorageDead(_4);                 // scope 2 at $DIR/reference_prop.rs:+3:36: +3:37\n+-         StorageDead(_4);                 // scope 2 at $DIR/reference_prop.rs:+3:36: +3:37\n           StorageLive(_6);                 // scope 3 at $DIR/reference_prop.rs:+4:9: +4:13\n -         _6 = &(*_2);                     // scope 3 at $DIR/reference_prop.rs:+4:16: +4:22\n +         _6 = &_1;                        // scope 3 at $DIR/reference_prop.rs:+4:16: +4:22"}, {"sha": "2cda2409e8093a87c2799d1918c4183476eadeb1", "filename": "tests/mir-opt/reference_prop.unique_with_copies.ReferencePropagation.diff", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/aeac5555780cb11cf701a5fa69d66adcaa3e2f4a/tests%2Fmir-opt%2Freference_prop.unique_with_copies.ReferencePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/aeac5555780cb11cf701a5fa69d66adcaa3e2f4a/tests%2Fmir-opt%2Freference_prop.unique_with_copies.ReferencePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Freference_prop.unique_with_copies.ReferencePropagation.diff?ref=aeac5555780cb11cf701a5fa69d66adcaa3e2f4a", "patch": "@@ -28,12 +28,11 @@\n           StorageLive(_1);                 // scope 0 at $DIR/reference_prop.rs:+1:9: +1:10\n           StorageLive(_2);                 // scope 0 at $DIR/reference_prop.rs:+2:13: +2:18\n           _2 = const 0_i32;                // scope 0 at $DIR/reference_prop.rs:+2:21: +2:22\n-          StorageLive(_3);                 // scope 2 at $DIR/reference_prop.rs:+3:13: +3:14\n+-         StorageLive(_3);                 // scope 2 at $DIR/reference_prop.rs:+3:13: +3:14\n           _3 = &raw mut _2;                // scope 2 at $DIR/reference_prop.rs:+3:17: +3:27\n           StorageLive(_4);                 // scope 3 at $DIR/reference_prop.rs:+5:9: +5:30\n           StorageLive(_5);                 // scope 4 at $DIR/reference_prop.rs:+5:25: +5:27\n--         _5 = (*_3);                      // scope 4 at $DIR/reference_prop.rs:+5:25: +5:27\n-+         _5 = _2;                         // scope 4 at $DIR/reference_prop.rs:+5:25: +5:27\n+          _5 = (*_3);                      // scope 4 at $DIR/reference_prop.rs:+5:25: +5:27\n           _4 = opaque::<i32>(move _5) -> bb1; // scope 4 at $DIR/reference_prop.rs:+5:18: +5:28\n                                            // mir::Constant\n                                            // + span: $DIR/reference_prop.rs:452:18: 452:24\n@@ -44,11 +43,12 @@\n           StorageDead(_5);                 // scope 4 at $DIR/reference_prop.rs:+5:27: +5:28\n           StorageDead(_4);                 // scope 3 at $DIR/reference_prop.rs:+5:30: +5:31\n           _1 = _3;                         // scope 3 at $DIR/reference_prop.rs:+6:9: +6:10\n-          StorageDead(_3);                 // scope 2 at $DIR/reference_prop.rs:+7:5: +7:6\n+-         StorageDead(_3);                 // scope 2 at $DIR/reference_prop.rs:+7:5: +7:6\n           StorageDead(_2);                 // scope 0 at $DIR/reference_prop.rs:+7:5: +7:6\n           StorageLive(_6);                 // scope 1 at $DIR/reference_prop.rs:+9:5: +9:26\n           StorageLive(_7);                 // scope 5 at $DIR/reference_prop.rs:+9:21: +9:23\n-          _7 = (*_1);                      // scope 5 at $DIR/reference_prop.rs:+9:21: +9:23\n+-         _7 = (*_1);                      // scope 5 at $DIR/reference_prop.rs:+9:21: +9:23\n++         _7 = (*_3);                      // scope 5 at $DIR/reference_prop.rs:+9:21: +9:23\n           _6 = opaque::<i32>(move _7) -> bb2; // scope 5 at $DIR/reference_prop.rs:+9:14: +9:24\n                                            // mir::Constant\n                                            // + span: $DIR/reference_prop.rs:456:14: 456:20"}]}