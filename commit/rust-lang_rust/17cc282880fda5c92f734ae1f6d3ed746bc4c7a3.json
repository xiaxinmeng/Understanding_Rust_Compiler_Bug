{"sha": "17cc282880fda5c92f734ae1f6d3ed746bc4c7a3", "node_id": "C_kwDOAAsO6NoAKDE3Y2MyODI4ODBmZGE1YzkyZjczNGFlMWY2ZDNlZDc0NmJjNGM3YTM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-06-09T06:15:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-09T06:15:55Z"}, "message": "Rollup merge of #112323 - compiler-errors:dont-mention-set-fields, r=WaffleLapkin\n\nDon't mention already-set fields in struct constructor missing field error\n\nFixes #111149", "tree": {"sha": "bb872cbf449a8387148a36133e32a4353cc7d77a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb872cbf449a8387148a36133e32a4353cc7d77a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkgsObCRBK7hj4Ov3rIwAA1JgIAIZv8iY9GroBzRlBPEHLDZFA\nhItSzIjmH4C0slgTt2CF0V7L5m3drzs1qJYef8zx2o35KtODJs65/0lFMYOCIDFk\nNLhL7BPw4SlTtz1NC5shijUFVOYy8/W28SKKiI2rEL8BKl+hDAW/8T64uygEtAqD\nc931Rz+fOo2HS8rUveJXn7hOf+GX2KJJfw4C8tyiy/LlXbxGeLqpCj7hIGZBsXhk\nO23Q2NOGsxCJ4+p7PoJWROux2Sq5f/7UKRCVohiHfAnCFgIxNmZ2ilwG4YUxfy3f\nmF/hUN0E+2F8AU73jd37sXa4W6fCSyimLF/DLAZDQ/s77sGY89B22vda/dHyEGE=\n=NDkL\n-----END PGP SIGNATURE-----\n", "payload": "tree bb872cbf449a8387148a36133e32a4353cc7d77a\nparent 68c8fdaac071432c0a5c149ece5c094449fbe8e0\nparent 140c011ca6659e608833bdc31b66b0f53d11104e\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1686291355 +0200\ncommitter GitHub <noreply@github.com> 1686291355 +0200\n\nRollup merge of #112323 - compiler-errors:dont-mention-set-fields, r=WaffleLapkin\n\nDon't mention already-set fields in struct constructor missing field error\n\nFixes #111149\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3", "html_url": "https://github.com/rust-lang/rust/commit/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68c8fdaac071432c0a5c149ece5c094449fbe8e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/68c8fdaac071432c0a5c149ece5c094449fbe8e0", "html_url": "https://github.com/rust-lang/rust/commit/68c8fdaac071432c0a5c149ece5c094449fbe8e0"}, {"sha": "140c011ca6659e608833bdc31b66b0f53d11104e", "url": "https://api.github.com/repos/rust-lang/rust/commits/140c011ca6659e608833bdc31b66b0f53d11104e", "html_url": "https://github.com/rust-lang/rust/commit/140c011ca6659e608833bdc31b66b0f53d11104e"}], "stats": {"total": 43, "additions": 23, "deletions": 20}, "files": [{"sha": "f03c7ca44ba5fb283510b902a0aed88572b60e7b", "filename": "compiler/rustc_hir_typeck/src/expr.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs?ref=17cc282880fda5c92f734ae1f6d3ed746bc4c7a3", "patch": "@@ -2081,13 +2081,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             },\n             _ => {\n                 // prevent all specified fields from being suggested\n-                let skip_fields = skip_fields.iter().map(|x| x.ident.name);\n-                if let Some(field_name) = self.suggest_field_name(\n-                    variant,\n-                    field.ident.name,\n-                    skip_fields.collect(),\n-                    expr_span,\n-                ) {\n+                let skip_fields: Vec<_> = skip_fields.iter().map(|x| x.ident.name).collect();\n+                if let Some(field_name) =\n+                    self.suggest_field_name(variant, field.ident.name, &skip_fields, expr_span)\n+                {\n                     err.span_suggestion(\n                         field.ident.span,\n                         \"a field with a similar name exists\",\n@@ -2108,9 +2105,13 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                     format!(\"`{ty}` does not have this field\"),\n                                 );\n                             }\n-                            let available_field_names =\n+                            let mut available_field_names =\n                                 self.available_field_names(variant, expr_span);\n-                            if !available_field_names.is_empty() {\n+                            available_field_names\n+                                .retain(|name| skip_fields.iter().all(|skip| name != skip));\n+                            if available_field_names.is_empty() {\n+                                err.note(\"all struct fields are already assigned\");\n+                            } else {\n                                 err.note(format!(\n                                     \"available fields are: {}\",\n                                     self.name_series_display(available_field_names)\n@@ -2130,7 +2131,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         &self,\n         variant: &'tcx ty::VariantDef,\n         field: Symbol,\n-        skip: Vec<Symbol>,\n+        skip: &[Symbol],\n         // The span where stability will be checked\n         span: Span,\n     ) -> Option<Symbol> {\n@@ -2582,7 +2583,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         access_span: Span,\n     ) {\n         if let Some(suggested_field_name) =\n-            self.suggest_field_name(def.non_enum_variant(), field.name, vec![], access_span)\n+            self.suggest_field_name(def.non_enum_variant(), field.name, &[], access_span)\n         {\n             err.span_suggestion(\n                 field.span,"}, {"sha": "b49b15db64cee8501f8b5720568c79a02bde2049", "filename": "tests/ui/async-await/drop-track-bad-field-in-fru.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Fasync-await%2Fdrop-track-bad-field-in-fru.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Fasync-await%2Fdrop-track-bad-field-in-fru.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fdrop-track-bad-field-in-fru.stderr?ref=17cc282880fda5c92f734ae1f6d3ed746bc4c7a3", "patch": "@@ -3,6 +3,8 @@ error[E0559]: variant `Option<_>::None` has no field named `value`\n    |\n LL |     None { value: (), ..Default::default() }.await;\n    |            ^^^^^ `Option<_>::None` does not have this field\n+   |\n+   = note: all struct fields are already assigned\n \n error[E0277]: `Option<_>` is not a future\n   --> $DIR/drop-track-bad-field-in-fru.rs:7:46"}, {"sha": "c20bbce3f24a96004ed3e322714178aca857448d", "filename": "tests/ui/did_you_mean/issue-42599_available_fields_note.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Fdid_you_mean%2Fissue-42599_available_fields_note.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Fdid_you_mean%2Fissue-42599_available_fields_note.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdid_you_mean%2Fissue-42599_available_fields_note.stderr?ref=17cc282880fda5c92f734ae1f6d3ed746bc4c7a3", "patch": "@@ -10,7 +10,7 @@ error[E0560]: struct `Demo` has no field named `egregiously_nonexistent_field`\n LL |             Self { secret_integer: 3, egregiously_nonexistent_field: () }\n    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `Demo` does not have this field\n    |\n-   = note: available fields are: `favorite_integer`, `secret_integer`, `innocently_misspellable`, `another_field`, `yet_another_field` ... and 2 others\n+   = note: available fields are: `favorite_integer`, `innocently_misspellable`, `another_field`, `yet_another_field`, `always_more_fields`, `and_ever`\n \n error[E0609]: no field `inocently_mispellable` on type `Demo`\n   --> $DIR/issue-42599_available_fields_note.rs:32:41"}, {"sha": "bb5ce478ae1a773d83685e72c62a224af40e19ac", "filename": "tests/ui/error-codes/E0560.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Ferror-codes%2FE0560.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Ferror-codes%2FE0560.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferror-codes%2FE0560.stderr?ref=17cc282880fda5c92f734ae1f6d3ed746bc4c7a3", "patch": "@@ -4,7 +4,7 @@ error[E0560]: struct `Simba` has no field named `father`\n LL |     let s = Simba { mother: 1, father: 0 };\n    |                                ^^^^^^ `Simba` does not have this field\n    |\n-   = note: available fields are: `mother`\n+   = note: all struct fields are already assigned\n \n error: aborting due to previous error\n "}, {"sha": "a91e4b31f4bdf800a715252c17a7df41dc0bada6", "filename": "tests/ui/issues/issue-5439.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Fissues%2Fissue-5439.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Fissues%2Fissue-5439.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-5439.stderr?ref=17cc282880fda5c92f734ae1f6d3ed746bc4c7a3", "patch": "@@ -4,7 +4,7 @@ error[E0560]: struct `Foo` has no field named `nonexistent`\n LL |         return Box::new(Foo { nonexistent: self, foo: i });\n    |                               ^^^^^^^^^^^ `Foo` does not have this field\n    |\n-   = note: available fields are: `foo`\n+   = note: all struct fields are already assigned\n \n error: aborting due to previous error\n "}, {"sha": "8c15cb9de9823a4129ce80570c51b14fbace1857", "filename": "tests/ui/proc-macro/span-preservation.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Fproc-macro%2Fspan-preservation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Fproc-macro%2Fspan-preservation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fproc-macro%2Fspan-preservation.stderr?ref=17cc282880fda5c92f734ae1f6d3ed746bc4c7a3", "patch": "@@ -32,7 +32,7 @@ error[E0560]: struct `Foo` has no field named `b`\n LL |     let y = Foo { a: 10, b: 10isize };\n    |                          ^ `Foo` does not have this field\n    |\n-   = note: available fields are: `a`\n+   = note: all struct fields are already assigned\n \n error[E0308]: mismatched types\n   --> $DIR/span-preservation.rs:39:5"}, {"sha": "2b9ba85ddcb88773635aa62250885c926ca67da4", "filename": "tests/ui/structs/struct-field-cfg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Fstructs%2Fstruct-field-cfg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Fstructs%2Fstruct-field-cfg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstructs%2Fstruct-field-cfg.stderr?ref=17cc282880fda5c92f734ae1f6d3ed746bc4c7a3", "patch": "@@ -10,7 +10,7 @@ error[E0560]: struct `Foo` has no field named `absent`\n LL |     let _ = Foo { present: (), #[cfg(all())] absent: () };\n    |                                              ^^^^^^ `Foo` does not have this field\n    |\n-   = note: available fields are: `present`\n+   = note: all struct fields are already assigned\n \n error[E0027]: pattern does not mention field `present`\n   --> $DIR/struct-field-cfg.rs:13:9"}, {"sha": "d89d45b39033a56d2469e03bc135f8e8bb79e856", "filename": "tests/ui/structs/struct-fields-shorthand.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Fstructs%2Fstruct-fields-shorthand.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Fstructs%2Fstruct-fields-shorthand.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstructs%2Fstruct-fields-shorthand.stderr?ref=17cc282880fda5c92f734ae1f6d3ed746bc4c7a3", "patch": "@@ -4,7 +4,7 @@ error[E0560]: struct `Foo` has no field named `z`\n LL |         x, y, z\n    |               ^ `Foo` does not have this field\n    |\n-   = note: available fields are: `x`, `y`\n+   = note: all struct fields are already assigned\n \n error: aborting due to previous error\n "}, {"sha": "9342607ebce2560013835038e343543f43e9ba53", "filename": "tests/ui/structs/struct-fields-too-many.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Fstructs%2Fstruct-fields-too-many.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Fstructs%2Fstruct-fields-too-many.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstructs%2Fstruct-fields-too-many.stderr?ref=17cc282880fda5c92f734ae1f6d3ed746bc4c7a3", "patch": "@@ -4,7 +4,7 @@ error[E0560]: struct `BuildData` has no field named `bar`\n LL |         bar: 0\n    |         ^^^ `BuildData` does not have this field\n    |\n-   = note: available fields are: `foo`\n+   = note: all struct fields are already assigned\n \n error: aborting due to previous error\n "}, {"sha": "1157f0c2ae770bc0bebea3bd19c96f8252fec7b8", "filename": "tests/ui/union/union-fields-2.mirunsafeck.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Funion%2Funion-fields-2.mirunsafeck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Funion%2Funion-fields-2.mirunsafeck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funion%2Funion-fields-2.mirunsafeck.stderr?ref=17cc282880fda5c92f734ae1f6d3ed746bc4c7a3", "patch": "@@ -16,7 +16,7 @@ error[E0560]: union `U` has no field named `c`\n LL |     let u = U { a: 0, b: 1, c: 2 };\n    |                             ^ `U` does not have this field\n    |\n-   = note: available fields are: `a`, `b`\n+   = note: all struct fields are already assigned\n \n error[E0784]: union expressions should have exactly one field\n   --> $DIR/union-fields-2.rs:13:13"}, {"sha": "1157f0c2ae770bc0bebea3bd19c96f8252fec7b8", "filename": "tests/ui/union/union-fields-2.thirunsafeck.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Funion%2Funion-fields-2.thirunsafeck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17cc282880fda5c92f734ae1f6d3ed746bc4c7a3/tests%2Fui%2Funion%2Funion-fields-2.thirunsafeck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funion%2Funion-fields-2.thirunsafeck.stderr?ref=17cc282880fda5c92f734ae1f6d3ed746bc4c7a3", "patch": "@@ -16,7 +16,7 @@ error[E0560]: union `U` has no field named `c`\n LL |     let u = U { a: 0, b: 1, c: 2 };\n    |                             ^ `U` does not have this field\n    |\n-   = note: available fields are: `a`, `b`\n+   = note: all struct fields are already assigned\n \n error[E0784]: union expressions should have exactly one field\n   --> $DIR/union-fields-2.rs:13:13"}]}