{"sha": "254302816122e4372ff403624606c63efa20c937", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1NDMwMjgxNjEyMmU0MzcyZmY0MDM2MjQ2MDZjNjNlZmEyMGM5Mzc=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-29T20:49:59Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-30T18:05:46Z"}, "message": "Drop metadata_encoding_version.", "tree": {"sha": "b422c5dacaaecad68b5b0a7fd769f5729e6e8a30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b422c5dacaaecad68b5b0a7fd769f5729e6e8a30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/254302816122e4372ff403624606c63efa20c937", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/254302816122e4372ff403624606c63efa20c937", "html_url": "https://github.com/rust-lang/rust/commit/254302816122e4372ff403624606c63efa20c937", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/254302816122e4372ff403624606c63efa20c937/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58126042eaee8ab94b111fa7d32104ae974cd339", "url": "https://api.github.com/repos/rust-lang/rust/commits/58126042eaee8ab94b111fa7d32104ae974cd339", "html_url": "https://github.com/rust-lang/rust/commit/58126042eaee8ab94b111fa7d32104ae974cd339"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "9e92954ce221caddf7a5de08c9f38703c40ea3dc", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/254302816122e4372ff403624606c63efa20c937/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/254302816122e4372ff403624606c63efa20c937/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=254302816122e4372ff403624606c63efa20c937", "patch": "@@ -3676,6 +3676,7 @@ dependencies = [\n  \"rustc_incremental\",\n  \"rustc_index\",\n  \"rustc_llvm\",\n+ \"rustc_metadata\",\n  \"rustc_middle\",\n  \"rustc_serialize\",\n  \"rustc_session\","}, {"sha": "637e91f5117d022810c57b03558b127781f0d6c1", "filename": "compiler/rustc_codegen_cranelift/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/254302816122e4372ff403624606c63efa20c937/compiler%2Frustc_codegen_cranelift%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/254302816122e4372ff403624606c63efa20c937/compiler%2Frustc_codegen_cranelift%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Flib.rs?ref=254302816122e4372ff403624606c63efa20c937", "patch": "@@ -14,6 +14,7 @@ extern crate rustc_fs_util;\n extern crate rustc_hir;\n extern crate rustc_incremental;\n extern crate rustc_index;\n+extern crate rustc_metadata;\n extern crate rustc_session;\n extern crate rustc_span;\n extern crate rustc_target;"}, {"sha": "db24bf65eb5a2e015620822b67b81592feeff024", "filename": "compiler/rustc_codegen_cranelift/src/metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/254302816122e4372ff403624606c63efa20c937/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/254302816122e4372ff403624606c63efa20c937/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fmetadata.rs?ref=254302816122e4372ff403624606c63efa20c937", "patch": "@@ -10,7 +10,7 @@ pub(crate) fn write_metadata<O: WriteMetadata>(tcx: TyCtxt<'_>, object: &mut O)\n     use std::io::Write;\n \n     let metadata = tcx.encode_metadata();\n-    let mut compressed = tcx.metadata_encoding_version();\n+    let mut compressed = rustc_metadata::METADATA_HEADER.to_vec();\n     FrameEncoder::new(&mut compressed).write_all(&metadata.raw_data).unwrap();\n \n     object.add_rustc_section("}, {"sha": "d0eb6913accde06efb58127b23ca33a71673dc62", "filename": "compiler/rustc_codegen_llvm/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/254302816122e4372ff403624606c63efa20c937/compiler%2Frustc_codegen_llvm%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/254302816122e4372ff403624606c63efa20c937/compiler%2Frustc_codegen_llvm%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2FCargo.toml?ref=254302816122e4372ff403624606c63efa20c937", "patch": "@@ -27,6 +27,7 @@ rustc_hir = { path = \"../rustc_hir\" }\n rustc_incremental = { path = \"../rustc_incremental\" }\n rustc_index = { path = \"../rustc_index\" }\n rustc_llvm = { path = \"../rustc_llvm\" }\n+rustc_metadata = { path = \"../rustc_metadata\" }\n rustc_session = { path = \"../rustc_session\" }\n rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_target = { path = \"../rustc_target\" }"}, {"sha": "cc3cbea4def5e1bf20876b3eaf24baa539d64aee", "filename": "compiler/rustc_codegen_llvm/src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/254302816122e4372ff403624606c63efa20c937/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/254302816122e4372ff403624606c63efa20c937/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbase.rs?ref=254302816122e4372ff403624606c63efa20c937", "patch": "@@ -63,7 +63,7 @@ pub fn write_compressed_metadata<'tcx>(\n     let section_name = if tcx.sess.target.is_like_osx { \"__DATA,.rustc\" } else { \".rustc\" };\n \n     let (metadata_llcx, metadata_llmod) = (&*llvm_module.llcx, llvm_module.llmod());\n-    let mut compressed = tcx.metadata_encoding_version();\n+    let mut compressed = rustc_metadata::METADATA_HEADER.to_vec();\n     FrameEncoder::new(&mut compressed).write_all(&metadata.raw_data).unwrap();\n \n     let llmeta = common::bytes_in_context(metadata_llcx, &compressed);"}, {"sha": "c5bbb96f777e22861601fcc12896119204b21415", "filename": "compiler/rustc_metadata/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/254302816122e4372ff403624606c63efa20c937/compiler%2Frustc_metadata%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/254302816122e4372ff403624606c63efa20c937/compiler%2Frustc_metadata%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Flib.rs?ref=254302816122e4372ff403624606c63efa20c937", "patch": "@@ -31,3 +31,5 @@ mod rmeta;\n pub mod creader;\n pub mod dynamic_lib;\n pub mod locator;\n+\n+pub use rmeta::METADATA_HEADER;"}, {"sha": "c21c5a8d8dd6ad05b9efb6ca9c8409a584a1aa91", "filename": "compiler/rustc_metadata/src/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/254302816122e4372ff403624606c63efa20c937/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/254302816122e4372ff403624606c63efa20c937/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=254302816122e4372ff403624606c63efa20c937", "patch": "@@ -1,7 +1,7 @@\n use crate::creader::{CStore, LoadedMacro};\n use crate::foreign_modules;\n use crate::native_libs;\n-use crate::rmeta::{self, encoder};\n+use crate::rmeta::encoder;\n \n use rustc_ast as ast;\n use rustc_ast::expand::allocator::AllocatorKind;\n@@ -524,10 +524,6 @@ impl CrateStore for CStore {\n         encoder::encode_metadata(tcx)\n     }\n \n-    fn metadata_encoding_version(&self) -> &[u8] {\n-        rmeta::METADATA_HEADER\n-    }\n-\n     fn allocator_kind(&self) -> Option<AllocatorKind> {\n         self.allocator_kind()\n     }"}, {"sha": "a1819a19097cf09f99e69886d3a62f8c31b3ad3f", "filename": "compiler/rustc_metadata/src/rmeta/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/254302816122e4372ff403624606c63efa20c937/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/254302816122e4372ff403624606c63efa20c937/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs?ref=254302816122e4372ff403624606c63efa20c937", "patch": "@@ -51,7 +51,7 @@ const METADATA_VERSION: u8 = 5;\n /// This header is followed by the position of the `CrateRoot`,\n /// which is encoded as a 32-bit big-endian unsigned integer,\n /// and further followed by the rustc version string.\n-crate const METADATA_HEADER: &[u8; 8] = &[b'r', b'u', b's', b't', 0, 0, 0, METADATA_VERSION];\n+pub const METADATA_HEADER: &[u8; 8] = &[b'r', b'u', b's', b't', 0, 0, 0, METADATA_VERSION];\n \n /// Additional metadata for a `Lazy<T>` where `T` may not be `Sized`,\n /// e.g. for `Lazy<[T]>`, this is the length (count of `T` values)."}, {"sha": "f26177e3409416a2c8a6810b54374bb693b72d05", "filename": "compiler/rustc_middle/src/middle/cstore.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/254302816122e4372ff403624606c63efa20c937/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/254302816122e4372ff403624606c63efa20c937/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fcstore.rs?ref=254302816122e4372ff403624606c63efa20c937", "patch": "@@ -208,7 +208,6 @@ pub trait CrateStore: std::fmt::Debug {\n \n     // utility functions\n     fn encode_metadata(&self, tcx: TyCtxt<'_>) -> EncodedMetadata;\n-    fn metadata_encoding_version(&self) -> &[u8];\n     fn allocator_kind(&self) -> Option<AllocatorKind>;\n }\n "}, {"sha": "6042a8c55bacc952f11803f1ceeaff3631029e25", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/254302816122e4372ff403624606c63efa20c937/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/254302816122e4372ff403624606c63efa20c937/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=254302816122e4372ff403624606c63efa20c937", "patch": "@@ -1268,10 +1268,6 @@ impl<'tcx> TyCtxt<'tcx> {\n         )\n     }\n \n-    pub fn metadata_encoding_version(self) -> Vec<u8> {\n-        self.untracked_resolutions.cstore.metadata_encoding_version().to_vec()\n-    }\n-\n     pub fn encode_metadata(self) -> EncodedMetadata {\n         let _prof_timer = self.prof.verbose_generic_activity(\"generate_crate_metadata\");\n         self.untracked_resolutions.cstore.encode_metadata(self)"}]}