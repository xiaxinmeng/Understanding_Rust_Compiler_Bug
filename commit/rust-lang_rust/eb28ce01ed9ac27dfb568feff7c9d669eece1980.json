{"sha": "eb28ce01ed9ac27dfb568feff7c9d669eece1980", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViMjhjZTAxZWQ5YWMyN2RmYjU2OGZlZmY3YzlkNjY5ZWVjZTE5ODA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-02-04T21:35:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-02-04T21:35:37Z"}, "message": "automated merge", "tree": {"sha": "23d6f90fd57a8ad0f5ad4a42ca3575cbe7be778e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23d6f90fd57a8ad0f5ad4a42ca3575cbe7be778e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb28ce01ed9ac27dfb568feff7c9d669eece1980", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb28ce01ed9ac27dfb568feff7c9d669eece1980", "html_url": "https://github.com/rust-lang/rust/commit/eb28ce01ed9ac27dfb568feff7c9d669eece1980", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb28ce01ed9ac27dfb568feff7c9d669eece1980/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e08a805b306398b316a489f76960569ac19b25b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e08a805b306398b316a489f76960569ac19b25b2", "html_url": "https://github.com/rust-lang/rust/commit/e08a805b306398b316a489f76960569ac19b25b2"}, {"sha": "159568eab51313490ca9faabd67b0e05bc129460", "url": "https://api.github.com/repos/rust-lang/rust/commits/159568eab51313490ca9faabd67b0e05bc129460", "html_url": "https://github.com/rust-lang/rust/commit/159568eab51313490ca9faabd67b0e05bc129460"}], "stats": {"total": 52, "additions": 33, "deletions": 19}, "files": [{"sha": "5e9ccd841957fb578b721f8a0ceb4ec4d58df27e", "filename": "src/libcore/either.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/eb28ce01ed9ac27dfb568feff7c9d669eece1980/src%2Flibcore%2Feither.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb28ce01ed9ac27dfb568feff7c9d669eece1980/src%2Flibcore%2Feither.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Feither.rs?ref=eb28ce01ed9ac27dfb568feff7c9d669eece1980", "patch": "@@ -150,6 +150,23 @@ pub pure fn unwrap_right<T,U>(eith: Either<T,U>) -> U {\n }\n \n impl<T, U> Either<T, U> {\n+    #[inline(always)]\n+    fn either<V>(&self, f_left: fn(&T) -> V, f_right: fn(&U) -> V) -> V {\n+        either(f_left, f_right, self)\n+    }\n+\n+    #[inline(always)]\n+    fn flip(self) -> Either<U, T> { flip(self) }\n+\n+    #[inline(always)]\n+    fn to_result(self) -> Result<U, T> { to_result(self) }\n+\n+    #[inline(always)]\n+    fn is_left(&self) -> bool { is_left(self) }\n+\n+    #[inline(always)]\n+    fn is_right(&self) -> bool { is_right(self) }\n+\n     #[inline(always)]\n     fn unwrap_left(self) -> T { unwrap_left(self) }\n "}, {"sha": "4e6f209e79e7f848573b36a4e3b2442651d9631e", "filename": "src/libcore/prelude.rs", "status": "modified", "additions": 16, "deletions": 19, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/eb28ce01ed9ac27dfb568feff7c9d669eece1980/src%2Flibcore%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb28ce01ed9ac27dfb568feff7c9d669eece1980/src%2Flibcore%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fprelude.rs?ref=eb28ce01ed9ac27dfb568feff7c9d669eece1980", "patch": "@@ -12,40 +12,37 @@\n \n /* Reexported core operators */\n \n+pub use either::{Either, Left, Right};\n pub use kinds::{Const, Copy, Owned, Durable};\n-pub use ops::{Drop};\n pub use ops::{Add, Sub, Mul, Div, Modulo, Neg, Not};\n pub use ops::{BitAnd, BitOr, BitXor};\n+pub use ops::{Drop};\n pub use ops::{Shl, Shr, Index};\n pub use option::{Option, Some, None};\n pub use result::{Result, Ok, Err};\n \n /* Reexported types and traits */\n \n-pub use path::Path;\n+pub use clone::Clone;\n+pub use cmp::{Eq, Ord};\n+pub use container::{Container, Mutable, Map, Set};\n+pub use hash::Hash;\n+pub use iter::{BaseIter, ExtendedIter, EqIter, CopyableIter};\n+pub use iter::{CopyableOrderedIter, CopyableNonstrictIter, Times};\n+pub use num::Num;\n pub use path::GenericPath;\n-pub use path::WindowsPath;\n+pub use path::Path;\n pub use path::PosixPath;\n-\n-pub use tuple::{CopyableTuple, ImmutableTuple, ExtendedTupleOps};\n+pub use path::WindowsPath;\n+pub use pipes::{GenericChan, GenericPort};\n+pub use ptr::Ptr;\n pub use str::{StrSlice, Trimmable};\n-pub use container::{Container, Mutable};\n+pub use to_bytes::IterBytes;\n+pub use to_str::ToStr;\n+pub use tuple::{CopyableTuple, ImmutableTuple, ExtendedTupleOps};\n pub use vec::{CopyableVector, ImmutableVector};\n pub use vec::{ImmutableEqVector, ImmutableCopyableVector};\n pub use vec::{OwnedVector, OwnedCopyableVector};\n-pub use iter::{BaseIter, ExtendedIter, EqIter, CopyableIter};\n-pub use iter::{CopyableOrderedIter, CopyableNonstrictIter, Times};\n-pub use container::{Container, Mutable, Map, Set};\n-pub use pipes::{GenericChan, GenericPort};\n-\n-pub use num::Num;\n-pub use ptr::Ptr;\n-pub use to_str::ToStr;\n-pub use clone::Clone;\n-\n-pub use cmp::{Eq, Ord};\n-pub use hash::Hash;\n-pub use to_bytes::IterBytes;\n \n /* Reexported modules */\n "}]}