{"sha": "c960a043e368c1e89974dbed244a3fdae222109a", "node_id": "C_kwDOAAsO6NoAKGM5NjBhMDQzZTM2OGMxZTg5OTc0ZGJlZDI0NGEzZmRhZTIyMjEwOWE", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-17T19:19:59Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-17T19:19:59Z"}, "message": "Assure everyone that `has_type_flags` is fast", "tree": {"sha": "655c91647f49fc106101f0d0cd5bec4c665aa54e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/655c91647f49fc106101f0d0cd5bec4c665aa54e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c960a043e368c1e89974dbed244a3fdae222109a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c960a043e368c1e89974dbed244a3fdae222109a", "html_url": "https://github.com/rust-lang/rust/commit/c960a043e368c1e89974dbed244a3fdae222109a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c960a043e368c1e89974dbed244a3fdae222109a/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e49122fb1ca87a6c3e3c22abb315fc75cfe8daed", "url": "https://api.github.com/repos/rust-lang/rust/commits/e49122fb1ca87a6c3e3c22abb315fc75cfe8daed", "html_url": "https://github.com/rust-lang/rust/commit/e49122fb1ca87a6c3e3c22abb315fc75cfe8daed"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "1b07f52afca925151da838704662e0822f58d5c4", "filename": "compiler/rustc_middle/src/ty/visit.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c960a043e368c1e89974dbed244a3fdae222109a/compiler%2Frustc_middle%2Fsrc%2Fty%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c960a043e368c1e89974dbed244a3fdae222109a/compiler%2Frustc_middle%2Fsrc%2Fty%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fvisit.rs?ref=c960a043e368c1e89974dbed244a3fdae222109a", "patch": "@@ -33,6 +33,14 @@ pub trait TypeVisitableExt<'tcx>: TypeVisitable<TyCtxt<'tcx>> {\n     }\n \n     fn has_type_flags(&self, flags: TypeFlags) -> bool {\n+        // N.B. Even though this uses a visitor, the visitor does not actually\n+        //      recurse through the whole `TypeVisitable` implementor type.\n+        //\n+        //      Instead it stops on the first \"level\", visiting types, regions,\n+        //      consts and predicates just fetches their type flags.\n+        //\n+        //      Thus this is a lot faster than it might seem and should be\n+        //      optimized to a simple field access.\n         let res =\n             self.visit_with(&mut HasTypeFlagsVisitor { flags }).break_value() == Some(FoundFlags);\n         trace!(?self, ?flags, ?res, \"has_type_flags\");"}]}