{"sha": "47f66e7372e5e020d8c4852b24c01ed6321a2ba5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3ZjY2ZTczNzJlNWUwMjBkOGM0ODUyYjI0YzAxZWQ2MzIxYTJiYTU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-08-14T15:59:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-14T15:59:16Z"}, "message": "Rollup merge of #53290 - whitequark:fix-35741, r=nagisa\n\nMake LLVM emit assembly comments with -Z asm-comments\n\nFixes #35741, and makes `-Z asm-comments` actually do something useful.\n\nBefore:\n```\n\t.section\t.text.main,\"ax\",@progbits\n\t.globl\tmain\n\t.p2align\t4, 0x90\n\t.type\tmain,@function\nmain:\n\t.cfi_startproc\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tmovslq\t%edi, %rax\n\tleaq\t_ZN1t4main17he95a7d4f1843730eE(%rip), %rdi\n\tmovq\t%rsi, (%rsp)\n\tmovq\t%rax, %rsi\n\tmovq\t(%rsp), %rdx\n\tcallq\t_ZN3std2rt10lang_start17h3121da83b2bc3697E\n\tmovl\t%eax, %ecx\n\tmovl\t%ecx, %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end8:\n\t.size\tmain, .Lfunc_end8-main\n\t.cfi_endproc\n```\n\nAfter:\n```\n\t.section\t.text.main,\"ax\",@progbits\n\t.globl\tmain                    # -- Begin function main\n\t.p2align\t4, 0x90\n\t.type\tmain,@function\nmain:                                   # @main\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tmovslq\t%edi, %rax\n\tleaq\t_ZN1t4main17he95a7d4f1843730eE(%rip), %rdi\n\tmovq\t%rsi, (%rsp)            # 8-byte Spill\n\tmovq\t%rax, %rsi\n\tmovq\t(%rsp), %rdx            # 8-byte Reload\n\tcallq\t_ZN3std2rt10lang_start17h3121da83b2bc3697E\n\tmovl\t%eax, %ecx\n\tmovl\t%ecx, %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end8:\n\t.size\tmain, .Lfunc_end8-main\n\t.cfi_endproc\n                                        # -- End function\n```", "tree": {"sha": "3853834a6e426e597000023272855da3ee5526a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3853834a6e426e597000023272855da3ee5526a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47f66e7372e5e020d8c4852b24c01ed6321a2ba5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbcvxUCRBK7hj4Ov3rIwAAdHIIAEbhPaCIk51oMNBKzpVQZbUl\n8uwQFOwTHOPR4RIqvY/GFBWr6N8b6DK5kw83rgQfRpu3z6q+tl6/CjP7tlWAdPh+\n4Ngi9v58qfJ6xDgS8TJXOgo5qB5ePAbhxDkBUYAnhy7DycQjs9d/bVMr4XxGgKm0\nYKPAKJ7zgzG2MBOEuBj7ZnKG3dPZDp8mXgM6c9omd8/ekrAV8U8fAm88HIeALXfx\nk7vENl8cUw6tbn5cinbrcX2aqLagFyT1XhwzkJ7erkiMkRcWbx7fI0DqCqsNMkK6\nro4o0QUFDY9EQPB7K7MMyWIb7lIbgKni6/9xzeUtMP1a4erIqtvvu2m1EQswKKw=\n=IjSv\n-----END PGP SIGNATURE-----\n", "payload": "tree 3853834a6e426e597000023272855da3ee5526a1\nparent e862efa65d24673be1471c2a41f45ed81f52cea1\nparent 66fd1ebfae2fff815f27bf2be19469f40dd99c88\nauthor kennytm <kennytm@gmail.com> 1534262356 +0800\ncommitter GitHub <noreply@github.com> 1534262356 +0800\n\nRollup merge of #53290 - whitequark:fix-35741, r=nagisa\n\nMake LLVM emit assembly comments with -Z asm-comments\n\nFixes #35741, and makes `-Z asm-comments` actually do something useful.\n\nBefore:\n```\n\t.section\t.text.main,\"ax\",@progbits\n\t.globl\tmain\n\t.p2align\t4, 0x90\n\t.type\tmain,@function\nmain:\n\t.cfi_startproc\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tmovslq\t%edi, %rax\n\tleaq\t_ZN1t4main17he95a7d4f1843730eE(%rip), %rdi\n\tmovq\t%rsi, (%rsp)\n\tmovq\t%rax, %rsi\n\tmovq\t(%rsp), %rdx\n\tcallq\t_ZN3std2rt10lang_start17h3121da83b2bc3697E\n\tmovl\t%eax, %ecx\n\tmovl\t%ecx, %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end8:\n\t.size\tmain, .Lfunc_end8-main\n\t.cfi_endproc\n```\n\nAfter:\n```\n\t.section\t.text.main,\"ax\",@progbits\n\t.globl\tmain                    # -- Begin function main\n\t.p2align\t4, 0x90\n\t.type\tmain,@function\nmain:                                   # @main\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tmovslq\t%edi, %rax\n\tleaq\t_ZN1t4main17he95a7d4f1843730eE(%rip), %rdi\n\tmovq\t%rsi, (%rsp)            # 8-byte Spill\n\tmovq\t%rax, %rsi\n\tmovq\t(%rsp), %rdx            # 8-byte Reload\n\tcallq\t_ZN3std2rt10lang_start17h3121da83b2bc3697E\n\tmovl\t%eax, %ecx\n\tmovl\t%ecx, %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end8:\n\t.size\tmain, .Lfunc_end8-main\n\t.cfi_endproc\n                                        # -- End function\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47f66e7372e5e020d8c4852b24c01ed6321a2ba5", "html_url": "https://github.com/rust-lang/rust/commit/47f66e7372e5e020d8c4852b24c01ed6321a2ba5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47f66e7372e5e020d8c4852b24c01ed6321a2ba5/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e862efa65d24673be1471c2a41f45ed81f52cea1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e862efa65d24673be1471c2a41f45ed81f52cea1", "html_url": "https://github.com/rust-lang/rust/commit/e862efa65d24673be1471c2a41f45ed81f52cea1"}, {"sha": "66fd1ebfae2fff815f27bf2be19469f40dd99c88", "url": "https://api.github.com/repos/rust-lang/rust/commits/66fd1ebfae2fff815f27bf2be19469f40dd99c88", "html_url": "https://github.com/rust-lang/rust/commit/66fd1ebfae2fff815f27bf2be19469f40dd99c88"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "d60983d7697b7e4a94fdfd73a36a2eca4f311251", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47f66e7372e5e020d8c4852b24c01ed6321a2ba5/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47f66e7372e5e020d8c4852b24c01ed6321a2ba5/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=47f66e7372e5e020d8c4852b24c01ed6321a2ba5", "patch": "@@ -180,6 +180,8 @@ pub fn target_machine_factory(sess: &Session, find_features: bool)\n     let is_pie_binary = !find_features && is_pie_binary(sess);\n     let trap_unreachable = sess.target.target.options.trap_unreachable;\n \n+    let asm_comments = sess.asm_comments();\n+\n     Arc::new(move || {\n         let tm = unsafe {\n             llvm::LLVMRustCreateTargetMachine(\n@@ -193,6 +195,7 @@ pub fn target_machine_factory(sess: &Session, find_features: bool)\n                 fdata_sections,\n                 trap_unreachable,\n                 singlethread,\n+                asm_comments,\n             )\n         };\n "}, {"sha": "eec8a3a169ced95503e2aa6f240c2a59ed384c46", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47f66e7372e5e020d8c4852b24c01ed6321a2ba5/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47f66e7372e5e020d8c4852b24c01ed6321a2ba5/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=47f66e7372e5e020d8c4852b24c01ed6321a2ba5", "patch": "@@ -1455,7 +1455,8 @@ extern \"C\" {\n                                        FunctionSections: bool,\n                                        DataSections: bool,\n                                        TrapUnreachable: bool,\n-                                       Singlethread: bool)\n+                                       Singlethread: bool,\n+                                       AsmComments: bool)\n                                        -> Option<&'static mut TargetMachine>;\n     pub fn LLVMRustDisposeTargetMachine(T: &'static mut TargetMachine);\n     pub fn LLVMRustAddAnalysisPasses(T: &'a TargetMachine, PM: &PassManager<'a>, M: &'a Module);"}, {"sha": "d9fbd494ab3484ed3f4ae519eb08380291479895", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/47f66e7372e5e020d8c4852b24c01ed6321a2ba5/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/47f66e7372e5e020d8c4852b24c01ed6321a2ba5/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=47f66e7372e5e020d8c4852b24c01ed6321a2ba5", "patch": "@@ -366,7 +366,8 @@ extern \"C\" LLVMTargetMachineRef LLVMRustCreateTargetMachine(\n     bool PositionIndependentExecutable, bool FunctionSections,\n     bool DataSections,\n     bool TrapUnreachable,\n-    bool Singlethread) {\n+    bool Singlethread,\n+    bool AsmComments) {\n \n   auto OptLevel = fromRust(RustOptLevel);\n   auto RM = fromRust(RustReloc);\n@@ -393,6 +394,8 @@ extern \"C\" LLVMTargetMachineRef LLVMRustCreateTargetMachine(\n   }\n   Options.DataSections = DataSections;\n   Options.FunctionSections = FunctionSections;\n+  Options.MCOptions.AsmVerbose = AsmComments;\n+  Options.MCOptions.PreserveAsmComments = AsmComments;\n \n   if (TrapUnreachable) {\n     // Tell LLVM to codegen `unreachable` into an explicit trap instruction."}]}