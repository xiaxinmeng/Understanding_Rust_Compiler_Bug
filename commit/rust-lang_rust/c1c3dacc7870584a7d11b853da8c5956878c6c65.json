{"sha": "c1c3dacc7870584a7d11b853da8c5956878c6c65", "node_id": "C_kwDOAAsO6NoAKGMxYzNkYWNjNzg3MDU4NGE3ZDExYjg1M2RhOGM1OTU2ODc4YzZjNjU", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-29T22:27:50Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-29T22:32:28Z"}, "message": "Generate synthetic impl region even in closure body in associated fn", "tree": {"sha": "29eb9c534ffd9fb4f38d893d91c387669b815b2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29eb9c534ffd9fb4f38d893d91c387669b815b2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1c3dacc7870584a7d11b853da8c5956878c6c65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1c3dacc7870584a7d11b853da8c5956878c6c65", "html_url": "https://github.com/rust-lang/rust/commit/c1c3dacc7870584a7d11b853da8c5956878c6c65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1c3dacc7870584a7d11b853da8c5956878c6c65/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f1a21ae2bd41b3dd335c44f38f29a1fb8712ddc", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f1a21ae2bd41b3dd335c44f38f29a1fb8712ddc", "html_url": "https://github.com/rust-lang/rust/commit/9f1a21ae2bd41b3dd335c44f38f29a1fb8712ddc"}], "stats": {"total": 58, "additions": 53, "deletions": 5}, "files": [{"sha": "4d251cf7ac752ddbe89cfbbc6ee34e1e4d39b842", "filename": "compiler/rustc_borrowck/src/diagnostics/region_name.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c1c3dacc7870584a7d11b853da8c5956878c6c65/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1c3dacc7870584a7d11b853da8c5956878c6c65/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fregion_name.rs?ref=c1c3dacc7870584a7d11b853da8c5956878c6c65", "patch": "@@ -864,15 +864,13 @@ impl<'tcx> MirBorrowckCtxt<'_, 'tcx> {\n         };\n \n         let tcx = self.infcx.tcx;\n-        let body_parent_did = tcx.opt_parent(self.mir_def_id().to_def_id())?;\n-        if tcx.parent(region.def_id) != body_parent_did\n-            || tcx.def_kind(body_parent_did) != DefKind::Impl\n-        {\n+        let region_parent = tcx.parent(region.def_id);\n+        if tcx.def_kind(region_parent) != DefKind::Impl {\n             return None;\n         }\n \n         let mut found = false;\n-        tcx.fold_regions(tcx.type_of(body_parent_did), |r: ty::Region<'tcx>, _| {\n+        tcx.fold_regions(tcx.type_of(region_parent), |r: ty::Region<'tcx>, _| {\n             if *r == ty::ReEarlyBound(region) {\n                 found = true;\n             }"}, {"sha": "37628bff7df4bd1a9df91d38b4602a91e09fc21f", "filename": "src/test/ui/borrowck/issue-102209.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c1c3dacc7870584a7d11b853da8c5956878c6c65/src%2Ftest%2Fui%2Fborrowck%2Fissue-102209.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1c3dacc7870584a7d11b853da8c5956878c6c65/src%2Ftest%2Fui%2Fborrowck%2Fissue-102209.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-102209.rs?ref=c1c3dacc7870584a7d11b853da8c5956878c6c65", "patch": "@@ -0,0 +1,28 @@\n+use std::marker::PhantomData;\n+\n+pub struct NfaBuilder<'brand> {\n+    brand: PhantomData<&'brand mut &'brand mut ()>,\n+}\n+\n+impl NfaBuilder<'_> {\n+    pub fn with<R, F: FnOnce(NfaBuilder<'_>) -> R>(f: F) -> R {\n+        Brand::with(|brand| {\n+            f(Self { brand: brand.lt })\n+            //~^ ERROR lifetime may not live long enough\n+            //~| ERROR lifetime may not live long enough\n+        })\n+    }\n+}\n+\n+#[derive(Clone, Copy)]\n+pub struct Brand<'brand> {\n+    lt: PhantomData<&'brand mut &'brand mut ()>,\n+}\n+\n+impl Brand<'_> {\n+    pub fn with<R, F: FnOnce(Brand<'_>) -> R>(f: F) -> R {\n+        f(Self { lt: PhantomData })\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "351de8217b2348ba37ef9e91c402f0767d0a1e1f", "filename": "src/test/ui/borrowck/issue-102209.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c1c3dacc7870584a7d11b853da8c5956878c6c65/src%2Ftest%2Fui%2Fborrowck%2Fissue-102209.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c1c3dacc7870584a7d11b853da8c5956878c6c65/src%2Ftest%2Fui%2Fborrowck%2Fissue-102209.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-102209.stderr?ref=c1c3dacc7870584a7d11b853da8c5956878c6c65", "patch": "@@ -0,0 +1,22 @@\n+error: lifetime may not live long enough\n+  --> $DIR/issue-102209.rs:10:29\n+   |\n+LL | impl NfaBuilder<'_> {\n+   |                 -- lifetime `'2` appears in the `impl`'s self type\n+LL |     pub fn with<R, F: FnOnce(NfaBuilder<'_>) -> R>(f: F) -> R {\n+LL |         Brand::with(|brand| {\n+   |                      ----- has type `Brand<'1>`\n+LL |             f(Self { brand: brand.lt })\n+   |                             ^^^^^^^^ this usage requires that `'1` must outlive `'2`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/issue-102209.rs:10:29\n+   |\n+LL | impl NfaBuilder<'_> {\n+   |                 -- lifetime `'1` appears in the `impl`'s self type\n+...\n+LL |             f(Self { brand: brand.lt })\n+   |                             ^^^^^^^^ this usage requires that `'1` must outlive `'static`\n+\n+error: aborting due to 2 previous errors\n+"}]}