{"sha": "869dd91d443b10e11d20d93beb9c06cb0fd7ec42", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2OWRkOTFkNDQzYjEwZTExZDIwZDkzYmViOWMwNmNiMGZkN2VjNDI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-01-19T11:15:48Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-01-22T09:54:31Z"}, "message": "Allow function@, value@, macro@", "tree": {"sha": "6d4b4e6545754ea60ebf203587d97bec04359caa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d4b4e6545754ea60ebf203587d97bec04359caa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/869dd91d443b10e11d20d93beb9c06cb0fd7ec42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/869dd91d443b10e11d20d93beb9c06cb0fd7ec42", "html_url": "https://github.com/rust-lang/rust/commit/869dd91d443b10e11d20d93beb9c06cb0fd7ec42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/869dd91d443b10e11d20d93beb9c06cb0fd7ec42/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a1a449220d01dbee0f26b5f1b50a012e6b1bd30", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a1a449220d01dbee0f26b5f1b50a012e6b1bd30", "html_url": "https://github.com/rust-lang/rust/commit/6a1a449220d01dbee0f26b5f1b50a012e6b1bd30"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "1734071f849bcb826e9410dfb8c1909275ed9c06", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/869dd91d443b10e11d20d93beb9c06cb0fd7ec42/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869dd91d443b10e11d20d93beb9c06cb0fd7ec42/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=869dd91d443b10e11d20d93beb9c06cb0fd7ec42", "patch": "@@ -862,13 +862,17 @@ impl Clean<Attributes> for [ast::Attribute] {\n                         kind = PathKind::Type;\n                         link.trim_left_matches(prefix)\n                     } else if let Some(prefix) =\n-                        [\"const@\", \"static@\"].iter()\n-                                           .find(|p| link.starts_with(**p)) {\n+                        [\"const@\", \"static@\",\n+                         \"value@\", \"function@\"].iter()\n+                                               .find(|p| link.starts_with(**p)) {\n                         kind = PathKind::Value;\n                         link.trim_left_matches(prefix)\n                     } else if link.ends_with(\"()\") {\n                         kind = PathKind::Value;\n                         link.trim_right_matches(\"()\")\n+                    } else if link.starts_with(\"macro@\") {\n+                        kind = PathKind::Macro;\n+                        link.trim_left_matches(\"macro@\")\n                     } else if link.ends_with('!') {\n                         kind = PathKind::Macro;\n                         link.trim_right_matches('!')"}]}