{"sha": "aaadc4311ac623a75323611aad5579797616cc02", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhYWRjNDMxMWFjNjIzYTc1MzIzNjExYWFkNTU3OTc5NzYxNmNjMDI=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-25T13:17:20Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-25T13:17:20Z"}, "message": "Merge #640\n\n640: better stats r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "07aa4db38ba212ab1e2af1b791c409e5407ac53b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07aa4db38ba212ab1e2af1b791c409e5407ac53b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aaadc4311ac623a75323611aad5579797616cc02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aaadc4311ac623a75323611aad5579797616cc02", "html_url": "https://github.com/rust-lang/rust/commit/aaadc4311ac623a75323611aad5579797616cc02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aaadc4311ac623a75323611aad5579797616cc02/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "021e691997efc35c983808ee3470a060a3ec3e96", "url": "https://api.github.com/repos/rust-lang/rust/commits/021e691997efc35c983808ee3470a060a3ec3e96", "html_url": "https://github.com/rust-lang/rust/commit/021e691997efc35c983808ee3470a060a3ec3e96"}, {"sha": "8d68b76ba01dcd190e037e4d61a94d4c9d568bdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d68b76ba01dcd190e037e4d61a94d4c9d568bdd", "html_url": "https://github.com/rust-lang/rust/commit/8d68b76ba01dcd190e037e4d61a94d4c9d568bdd"}], "stats": {"total": 116, "additions": 107, "deletions": 9}, "files": [{"sha": "c184ca892479b4c437284fb58cac4da408326d3f", "filename": "crates/ra_ide_api/src/status.rs", "status": "modified", "additions": 48, "deletions": 2, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/aaadc4311ac623a75323611aad5579797616cc02/crates%2Fra_ide_api%2Fsrc%2Fstatus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaadc4311ac623a75323611aad5579797616cc02/crates%2Fra_ide_api%2Fsrc%2Fstatus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fstatus.rs?ref=aaadc4311ac623a75323611aad5579797616cc02", "patch": "@@ -1,3 +1,6 @@\n+use std::fmt;\n+\n+use ra_syntax::AstNode;\n use ra_db::{\n     SourceFileQuery,\n     salsa::{Database, debug::DebugQueryTable},\n@@ -6,10 +9,53 @@ use ra_db::{\n use crate::db::RootDatabase;\n \n pub(crate) fn status(db: &RootDatabase) -> String {\n-    let n_parsed_files = db.query(SourceFileQuery).entries::<Vec<_>>().len();\n+    let file_stats = {\n+        let mut stats = FilesStats::default();\n+        for entry in db.query(SourceFileQuery).entries::<Vec<_>>() {\n+            stats.total += 1;\n+            if let Some(value) = entry.value {\n+                stats.retained += 1;\n+                stats.retained_size = stats\n+                    .retained_size\n+                    .checked_add(value.syntax().memory_size_of_subtree())\n+                    .unwrap();\n+            }\n+        }\n+        stats\n+    };\n     let n_defs = {\n         let interner: &hir::HirInterner = db.as_ref();\n         interner.len()\n     };\n-    format!(\"#n_parsed_files {}\\n#n_defs {}\\n\", n_parsed_files, n_defs)\n+    format!(\"{}\\nn_defs {}\\n\", file_stats, n_defs)\n+}\n+\n+#[derive(Default)]\n+struct FilesStats {\n+    total: usize,\n+    retained: usize,\n+    retained_size: usize,\n+}\n+\n+impl fmt::Display for FilesStats {\n+    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n+        let (size, suff) = human_bytes(self.retained_size);\n+        write!(\n+            fmt,\n+            \"{} parsed_files, {} ({}{}) retained\",\n+            self.total, self.retained, size, suff\n+        )\n+    }\n+}\n+\n+fn human_bytes(bytes: usize) -> (usize, &'static str) {\n+    if bytes < 4096 {\n+        return (bytes, \" bytes\");\n+    }\n+    let kb = bytes / 1024;\n+    if kb < 4096 {\n+        return (kb, \"kb\");\n+    }\n+    let mb = kb / 1024;\n+    (mb, \"mb\")\n }"}, {"sha": "bb46a1990e0666a27a1b68f9f6480596d05a0913", "filename": "editors/code/src/commands/analyzer_status.ts", "status": "modified", "additions": 55, "deletions": 6, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/aaadc4311ac623a75323611aad5579797616cc02/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts", "raw_url": "https://github.com/rust-lang/rust/raw/aaadc4311ac623a75323611aad5579797616cc02/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts?ref=aaadc4311ac623a75323611aad5579797616cc02", "patch": "@@ -1,12 +1,61 @@\n import * as vscode from 'vscode';\n import { Server } from '../server';\n \n+const statusUri = vscode.Uri.parse('ra-lsp-status://status');\n+\n+export class TextDocumentContentProvider\n+    implements vscode.TextDocumentContentProvider {\n+    public eventEmitter = new vscode.EventEmitter<vscode.Uri>();\n+    public syntaxTree: string = 'Not available';\n+\n+    public provideTextDocumentContent(\n+        uri: vscode.Uri\n+    ): vscode.ProviderResult<string> {\n+        const editor = vscode.window.activeTextEditor;\n+        if (editor == null) {\n+            return '';\n+        }\n+        return Server.client.sendRequest<string>('ra/analyzerStatus', null);\n+    }\n+\n+    get onDidChange(): vscode.Event<vscode.Uri> {\n+        return this.eventEmitter.event;\n+    }\n+}\n+\n+let poller: NodeJS.Timer | null = null;\n+\n // Shows status of rust-analyzer (for debugging)\n-export async function handle() {\n-    const status = await Server.client.sendRequest<string>(\n-        'ra/analyzerStatus',\n-        null\n+\n+export function makeCommand(context: vscode.ExtensionContext) {\n+    const textDocumentContentProvider = new TextDocumentContentProvider();\n+    context.subscriptions.push(\n+        vscode.workspace.registerTextDocumentContentProvider(\n+            'ra-lsp-status',\n+            textDocumentContentProvider\n+        )\n     );\n-    const doc = await vscode.workspace.openTextDocument({ content: status });\n-    await vscode.window.showTextDocument(doc, vscode.ViewColumn.Two);\n+\n+    context.subscriptions.push({\n+        dispose() {\n+            if (poller != null) {\n+                clearInterval(poller);\n+            }\n+        }\n+    });\n+\n+    return async function handle() {\n+        if (poller == null) {\n+            poller = setInterval(\n+                () => textDocumentContentProvider.eventEmitter.fire(statusUri),\n+                1000\n+            );\n+        }\n+        const document = await vscode.workspace.openTextDocument(statusUri);\n+        return vscode.window.showTextDocument(\n+            document,\n+            vscode.ViewColumn.Two,\n+            true\n+        );\n+    };\n }"}, {"sha": "3af95c5997dcc9f2534dd70de4b01b159f00a392", "filename": "editors/code/src/extension.ts", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aaadc4311ac623a75323611aad5579797616cc02/editors%2Fcode%2Fsrc%2Fextension.ts", "raw_url": "https://github.com/rust-lang/rust/raw/aaadc4311ac623a75323611aad5579797616cc02/editors%2Fcode%2Fsrc%2Fextension.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fextension.ts?ref=aaadc4311ac623a75323611aad5579797616cc02", "patch": "@@ -45,7 +45,10 @@ export function activate(context: vscode.ExtensionContext) {\n     }\n \n     // Commands are requests from vscode to the language server\n-    registerCommand('ra-lsp.analyzerStatus', commands.analyzerStatus.handle);\n+    registerCommand(\n+        'ra-lsp.analyzerStatus',\n+        commands.analyzerStatus.makeCommand(context)\n+    );\n     registerCommand('ra-lsp.syntaxTree', commands.syntaxTree.handle);\n     registerCommand('ra-lsp.extendSelection', commands.extendSelection.handle);\n     registerCommand('ra-lsp.matchingBrace', commands.matchingBrace.handle);"}]}