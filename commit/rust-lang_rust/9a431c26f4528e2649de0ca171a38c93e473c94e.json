{"sha": "9a431c26f4528e2649de0ca171a38c93e473c94e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhNDMxYzI2ZjQ1MjhlMjY0OWRlMGNhMTcxYTM4YzkzZTQ3M2M5NGU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-11T23:05:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-11T23:05:07Z"}, "message": "Merge #8808\n\n8808: fix: Fix fn proc macro input again r=jonas-schievink a=jonas-schievink\n\nhttps://github.com/rust-analyzer/rust-analyzer/pull/8806 broke the `TokenMap`, so none of the tokens in fn-like proc macro inputs could be related to the output (presumably this is because of the `clone_for_update`).\r\n\r\nThis PR instead just sets `delimiter = None;` after the `TokenMap` and `Subtree` are already created.\r\n\r\nWe should probably have more tests for fn-like proc macros, and consider making the behavior consistent with MBE (which *require* the delimiters to be present).\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "191386e03f2975d927a093cc54bab52f37a7cbdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/191386e03f2975d927a093cc54bab52f37a7cbdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a431c26f4528e2649de0ca171a38c93e473c94e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgmw2jCRBK7hj4Ov3rIwAA7X0IAJYaItG0O+gOFMbmlgJ/bqIK\nCZE25tsSbIW/oYP38+EYdUHGSJnkLWYj7hgiubeLKw+4rrmDci04ixX3NVTomplD\nlM3l0cqY5UqJD41UmH2Cf8ac5/1J3n9mhpL43+MNWU72IeMH2d/tdV+V3sMfxkgR\ntU775xKV7iLkugrqvFgb71o9+VsAIT+43vEQyJ5PL1EsIHBVEuun16HL3Uxl2oW+\nH4uvrJevrnkcDZEFZp/FH5jdPKsBsE7MLCM6H1Rsi32iYwoQvb7l+KxfyJWHMvn2\n1x76VVk6OZsIxgonf91f4sq5GOzRbAF1Dh6/5FzqGFAOhWFUkSMPMROvxqf5E/U=\n=GY03\n-----END PGP SIGNATURE-----\n", "payload": "tree 191386e03f2975d927a093cc54bab52f37a7cbdf\nparent c6e2ba43bbfef80d4ecabbc9edd5be9d058f6db9\nparent e78221bc58a050e8651f5be591561e7adf89c371\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1620774307 +0000\ncommitter GitHub <noreply@github.com> 1620774307 +0000\n\nMerge #8808\n\n8808: fix: Fix fn proc macro input again r=jonas-schievink a=jonas-schievink\n\nhttps://github.com/rust-analyzer/rust-analyzer/pull/8806 broke the `TokenMap`, so none of the tokens in fn-like proc macro inputs could be related to the output (presumably this is because of the `clone_for_update`).\r\n\r\nThis PR instead just sets `delimiter = None;` after the `TokenMap` and `Subtree` are already created.\r\n\r\nWe should probably have more tests for fn-like proc macros, and consider making the behavior consistent with MBE (which *require* the delimiters to be present).\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a431c26f4528e2649de0ca171a38c93e473c94e", "html_url": "https://github.com/rust-lang/rust/commit/9a431c26f4528e2649de0ca171a38c93e473c94e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a431c26f4528e2649de0ca171a38c93e473c94e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6e2ba43bbfef80d4ecabbc9edd5be9d058f6db9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6e2ba43bbfef80d4ecabbc9edd5be9d058f6db9", "html_url": "https://github.com/rust-lang/rust/commit/c6e2ba43bbfef80d4ecabbc9edd5be9d058f6db9"}, {"sha": "e78221bc58a050e8651f5be591561e7adf89c371", "url": "https://api.github.com/repos/rust-lang/rust/commits/e78221bc58a050e8651f5be591561e7adf89c371", "html_url": "https://github.com/rust-lang/rust/commit/e78221bc58a050e8651f5be591561e7adf89c371"}], "stats": {"total": 42, "additions": 12, "deletions": 30}, "files": [{"sha": "c43d382adf65113bc012c592a217d790cae002bd", "filename": "crates/hir_expand/src/db.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9a431c26f4528e2649de0ca171a38c93e473c94e/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a431c26f4528e2649de0ca171a38c93e473c94e/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fdb.rs?ref=9a431c26f4528e2649de0ca171a38c93e473c94e", "patch": "@@ -267,7 +267,16 @@ fn parse_macro_expansion(\n \n fn macro_arg(db: &dyn AstDatabase, id: MacroCallId) -> Option<Arc<(tt::Subtree, mbe::TokenMap)>> {\n     let arg = db.macro_arg_text(id)?;\n-    let (tt, tmap) = mbe::syntax_node_to_token_tree(&SyntaxNode::new_root(arg));\n+    let (mut tt, tmap) = mbe::syntax_node_to_token_tree(&SyntaxNode::new_root(arg));\n+\n+    if let MacroCallId::LazyMacro(id) = id {\n+        let loc: MacroCallLoc = db.lookup_intern_macro(id);\n+        if loc.def.is_proc_macro() {\n+            // proc macros expect their inputs without parentheses, MBEs expect it with them included\n+            tt.delimiter = None;\n+        }\n+    }\n+\n     Some(Arc::new((tt, tmap)))\n }\n "}, {"sha": "112216859cf23f3a771191ba9835f864a484b913", "filename": "crates/hir_expand/src/input.rs", "status": "modified", "additions": 2, "deletions": 29, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/9a431c26f4528e2649de0ca171a38c93e473c94e/crates%2Fhir_expand%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a431c26f4528e2649de0ca171a38c93e473c94e/crates%2Fhir_expand%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Finput.rs?ref=9a431c26f4528e2649de0ca171a38c93e473c94e", "patch": "@@ -1,9 +1,8 @@\n //! Macro input conditioning.\n \n-use parser::SyntaxKind;\n use syntax::{\n     ast::{self, AttrsOwner},\n-    AstNode, SyntaxElement, SyntaxNode,\n+    AstNode, SyntaxNode,\n };\n \n use crate::{\n@@ -20,33 +19,7 @@ pub(crate) fn process_macro_input(\n     let loc: MacroCallLoc = db.lookup_intern_macro(id);\n \n     match loc.kind {\n-        MacroCallKind::FnLike { .. } => {\n-            if !loc.def.is_proc_macro() {\n-                // MBE macros expect the parentheses as part of their input.\n-                return node;\n-            }\n-\n-            // The input includes the `(` + `)` delimiter tokens, so remove them before passing this\n-            // to the macro.\n-            let node = node.clone_for_update();\n-            if let Some(SyntaxElement::Token(tkn)) = node.first_child_or_token() {\n-                if matches!(\n-                    tkn.kind(),\n-                    SyntaxKind::L_BRACK | SyntaxKind::L_PAREN | SyntaxKind::L_CURLY\n-                ) {\n-                    tkn.detach();\n-                }\n-            }\n-            if let Some(SyntaxElement::Token(tkn)) = node.last_child_or_token() {\n-                if matches!(\n-                    tkn.kind(),\n-                    SyntaxKind::R_BRACK | SyntaxKind::R_PAREN | SyntaxKind::R_CURLY\n-                ) {\n-                    tkn.detach();\n-                }\n-            }\n-            node\n-        }\n+        MacroCallKind::FnLike { .. } => node,\n         MacroCallKind::Derive { derive_attr_index, .. } => {\n             let item = match ast::Item::cast(node.clone()) {\n                 Some(item) => item,"}]}