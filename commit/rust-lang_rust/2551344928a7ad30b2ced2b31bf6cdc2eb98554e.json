{"sha": "2551344928a7ad30b2ced2b31bf6cdc2eb98554e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1NTEzNDQ5MjhhN2FkMzBiMmNlZDJiMzFiZjZjZGMyZWI5ODU1NGU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-22T01:52:27Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:33Z"}, "message": "librustc: De-`@mut` all remaining uses of `MemWriter`", "tree": {"sha": "6abd93a6916da1b940b9b0ef006ad56392f066f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6abd93a6916da1b940b9b0ef006ad56392f066f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2551344928a7ad30b2ced2b31bf6cdc2eb98554e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2551344928a7ad30b2ced2b31bf6cdc2eb98554e", "html_url": "https://github.com/rust-lang/rust/commit/2551344928a7ad30b2ced2b31bf6cdc2eb98554e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2551344928a7ad30b2ced2b31bf6cdc2eb98554e/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9f0d9bdc193bb4d7923b0a033ab7e19b1419fc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9f0d9bdc193bb4d7923b0a033ab7e19b1419fc8", "html_url": "https://github.com/rust-lang/rust/commit/b9f0d9bdc193bb4d7923b0a033ab7e19b1419fc8"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "224b32e6afd0704861876afa220573bb8d949cf5", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2551344928a7ad30b2ced2b31bf6cdc2eb98554e/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2551344928a7ad30b2ced2b31bf6cdc2eb98554e/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=2551344928a7ad30b2ced2b31bf6cdc2eb98554e", "patch": "@@ -1794,7 +1794,7 @@ pub static metadata_encoding_version : &'static [u8] =\n       0, 0, 0, 1 ];\n \n pub fn encode_metadata(parms: EncodeParams, crate: &Crate) -> ~[u8] {\n-    let wr = @mut MemWriter::new();\n+    let mut wr = MemWriter::new();\n     let stats = Stats {\n         inline_bytes: 0,\n         attr_bytes: 0,\n@@ -1837,7 +1837,7 @@ pub fn encode_metadata(parms: EncodeParams, crate: &Crate) -> ~[u8] {\n         reachable: reachable,\n      };\n \n-    let mut ebml_w = writer::Encoder(wr);\n+    let mut ebml_w = writer::Encoder(&mut wr);\n \n     encode_hash(&mut ebml_w, ecx.link_meta.crate_hash);\n \n@@ -1921,7 +1921,7 @@ pub fn encoded_ty(tcx: ty::ctxt, t: ty::t) -> ~str {\n         ds: def_to_str,\n         tcx: tcx,\n         abbrevs: tyencode::ac_no_abbrevs};\n-    let wr = @mut MemWriter::new();\n-    tyencode::enc_ty(wr, cx, t);\n+    let mut wr = MemWriter::new();\n+    tyencode::enc_ty(&mut wr, cx, t);\n     str::from_utf8_owned(wr.inner_ref().to_owned())\n }"}]}