{"sha": "03ba0ea400b42a71455a9774b6cbbf7f28a8e9a7", "node_id": "C_kwDOAAsO6NoAKDAzYmEwZWE0MDBiNDJhNzE0NTVhOTc3NGI2Y2JiZjdmMjhhOGU5YTc", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-11-30T21:25:57Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-11-30T21:25:57Z"}, "message": "Don't suggest keeping borrows in `identity_op`", "tree": {"sha": "cdb187efacc218bbcbb6e7bef8c69010a2d773ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdb187efacc218bbcbb6e7bef8c69010a2d773ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03ba0ea400b42a71455a9774b6cbbf7f28a8e9a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03ba0ea400b42a71455a9774b6cbbf7f28a8e9a7", "html_url": "https://github.com/rust-lang/rust/commit/03ba0ea400b42a71455a9774b6cbbf7f28a8e9a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03ba0ea400b42a71455a9774b6cbbf7f28a8e9a7/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cdb06d406181e15a943dab926273013fdefd516", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cdb06d406181e15a943dab926273013fdefd516", "html_url": "https://github.com/rust-lang/rust/commit/1cdb06d406181e15a943dab926273013fdefd516"}], "stats": {"total": 96, "additions": 83, "deletions": 13}, "files": [{"sha": "14a12da862efeb68d4f151077dac7859d2ecb9db", "filename": "clippy_lints/src/operators/identity_op.rs", "status": "modified", "additions": 65, "deletions": 9, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/03ba0ea400b42a71455a9774b6cbbf7f28a8e9a7/clippy_lints%2Fsrc%2Foperators%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03ba0ea400b42a71455a9774b6cbbf7f28a8e9a7/clippy_lints%2Fsrc%2Foperators%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foperators%2Fidentity_op.rs?ref=03ba0ea400b42a71455a9774b6cbbf7f28a8e9a7", "patch": "@@ -1,7 +1,7 @@\n use clippy_utils::consts::{constant_full_int, constant_simple, Constant, FullInt};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_applicability;\n-use clippy_utils::{clip, unsext};\n+use clippy_utils::{clip, peel_hir_expr_refs, unsext};\n use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, Expr, ExprKind, Node};\n use rustc_lint::LateContext;\n@@ -20,20 +20,76 @@ pub(crate) fn check<'tcx>(\n     if !is_allowed(cx, op, left, right) {\n         match op {\n             BinOpKind::Add | BinOpKind::BitOr | BinOpKind::BitXor => {\n-                check_op(cx, left, 0, expr.span, right.span, needs_parenthesis(cx, expr, right));\n-                check_op(cx, right, 0, expr.span, left.span, Parens::Unneeded);\n+                check_op(\n+                    cx,\n+                    left,\n+                    0,\n+                    expr.span,\n+                    peel_hir_expr_refs(right).0.span,\n+                    needs_parenthesis(cx, expr, right),\n+                );\n+                check_op(\n+                    cx,\n+                    right,\n+                    0,\n+                    expr.span,\n+                    peel_hir_expr_refs(left).0.span,\n+                    Parens::Unneeded,\n+                );\n             },\n             BinOpKind::Shl | BinOpKind::Shr | BinOpKind::Sub => {\n-                check_op(cx, right, 0, expr.span, left.span, Parens::Unneeded);\n+                check_op(\n+                    cx,\n+                    right,\n+                    0,\n+                    expr.span,\n+                    peel_hir_expr_refs(left).0.span,\n+                    Parens::Unneeded,\n+                );\n             },\n             BinOpKind::Mul => {\n-                check_op(cx, left, 1, expr.span, right.span, needs_parenthesis(cx, expr, right));\n-                check_op(cx, right, 1, expr.span, left.span, Parens::Unneeded);\n+                check_op(\n+                    cx,\n+                    left,\n+                    1,\n+                    expr.span,\n+                    peel_hir_expr_refs(right).0.span,\n+                    needs_parenthesis(cx, expr, right),\n+                );\n+                check_op(\n+                    cx,\n+                    right,\n+                    1,\n+                    expr.span,\n+                    peel_hir_expr_refs(left).0.span,\n+                    Parens::Unneeded,\n+                );\n             },\n-            BinOpKind::Div => check_op(cx, right, 1, expr.span, left.span, Parens::Unneeded),\n+            BinOpKind::Div => check_op(\n+                cx,\n+                right,\n+                1,\n+                expr.span,\n+                peel_hir_expr_refs(left).0.span,\n+                Parens::Unneeded,\n+            ),\n             BinOpKind::BitAnd => {\n-                check_op(cx, left, -1, expr.span, right.span, needs_parenthesis(cx, expr, right));\n-                check_op(cx, right, -1, expr.span, left.span, Parens::Unneeded);\n+                check_op(\n+                    cx,\n+                    left,\n+                    -1,\n+                    expr.span,\n+                    peel_hir_expr_refs(right).0.span,\n+                    needs_parenthesis(cx, expr, right),\n+                );\n+                check_op(\n+                    cx,\n+                    right,\n+                    -1,\n+                    expr.span,\n+                    peel_hir_expr_refs(left).0.span,\n+                    Parens::Unneeded,\n+                );\n             },\n             BinOpKind::Rem => check_remainder(cx, left, right, expr.span, left.span),\n             _ => (),"}, {"sha": "cac69ef42c4136e36e5b8571b0963c62b799b11a", "filename": "tests/ui/identity_op.fixed", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/03ba0ea400b42a71455a9774b6cbbf7f28a8e9a7/tests%2Fui%2Fidentity_op.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/03ba0ea400b42a71455a9774b6cbbf7f28a8e9a7/tests%2Fui%2Fidentity_op.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_op.fixed?ref=03ba0ea400b42a71455a9774b6cbbf7f28a8e9a7", "patch": "@@ -65,7 +65,7 @@ fn main() {\n     42;\n     1;\n     42;\n-    &x;\n+    x;\n     x;\n \n     let mut a = A(String::new());\n@@ -112,6 +112,10 @@ fn main() {\n     2 * { a };\n     (({ a } + 4));\n     1;\n+\n+    // Issue #9904\n+    let x = 0i32;\n+    let _: i32 = x;\n }\n \n pub fn decide(a: bool, b: bool) -> u32 {"}, {"sha": "33201aad4f641244e93af221aff06f183ac1d470", "filename": "tests/ui/identity_op.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/03ba0ea400b42a71455a9774b6cbbf7f28a8e9a7/tests%2Fui%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03ba0ea400b42a71455a9774b6cbbf7f28a8e9a7/tests%2Fui%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_op.rs?ref=03ba0ea400b42a71455a9774b6cbbf7f28a8e9a7", "patch": "@@ -112,6 +112,10 @@ fn main() {\n     2 * (0 + { a });\n     1 * ({ a } + 4);\n     1 * 1;\n+\n+    // Issue #9904\n+    let x = 0i32;\n+    let _: i32 = &x + 0;\n }\n \n pub fn decide(a: bool, b: bool) -> u32 {"}, {"sha": "3ba557d18b24433c9c57bd491ffcfb44f929e9db", "filename": "tests/ui/identity_op.stderr", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/03ba0ea400b42a71455a9774b6cbbf7f28a8e9a7/tests%2Fui%2Fidentity_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/03ba0ea400b42a71455a9774b6cbbf7f28a8e9a7/tests%2Fui%2Fidentity_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_op.stderr?ref=03ba0ea400b42a71455a9774b6cbbf7f28a8e9a7", "patch": "@@ -70,7 +70,7 @@ error: this operation has no effect\n   --> $DIR/identity_op.rs:68:5\n    |\n LL |     &x >> 0;\n-   |     ^^^^^^^ help: consider reducing it to: `&x`\n+   |     ^^^^^^^ help: consider reducing it to: `x`\n \n error: this operation has no effect\n   --> $DIR/identity_op.rs:69:5\n@@ -229,10 +229,16 @@ LL |     1 * 1;\n    |     ^^^^^ help: consider reducing it to: `1`\n \n error: this operation has no effect\n-  --> $DIR/identity_op.rs:118:5\n+  --> $DIR/identity_op.rs:118:18\n+   |\n+LL |     let _: i32 = &x + 0;\n+   |                  ^^^^^^ help: consider reducing it to: `x`\n+\n+error: this operation has no effect\n+  --> $DIR/identity_op.rs:122:5\n    |\n LL |     0 + if a { 1 } else { 2 } + if b { 3 } else { 5 }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(if a { 1 } else { 2 })`\n \n-error: aborting due to 39 previous errors\n+error: aborting due to 40 previous errors\n "}]}