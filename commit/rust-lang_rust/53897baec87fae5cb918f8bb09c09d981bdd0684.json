{"sha": "53897baec87fae5cb918f8bb09c09d981bdd0684", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzODk3YmFlYzg3ZmFlNWNiOTE4ZjhiYjA5YzA5ZDk4MWJkZDA2ODQ=", "commit": {"author": {"name": "Ms2ger", "email": "ms2ger@gmail.com", "date": "2015-06-03T16:58:26Z"}, "committer": {"name": "Ms2ger", "email": "ms2ger@gmail.com", "date": "2015-06-03T16:58:26Z"}, "message": "Remove unused get_enum_variant_defs functions.", "tree": {"sha": "856f4b991afd4a251cb7beda03c0247d0c49d5f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/856f4b991afd4a251cb7beda03c0247d0c49d5f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53897baec87fae5cb918f8bb09c09d981bdd0684", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53897baec87fae5cb918f8bb09c09d981bdd0684", "html_url": "https://github.com/rust-lang/rust/commit/53897baec87fae5cb918f8bb09c09d981bdd0684", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53897baec87fae5cb918f8bb09c09d981bdd0684/comments", "author": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c8d75d655b7d0bf84178f464c47a79569a35f3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c8d75d655b7d0bf84178f464c47a79569a35f3c", "html_url": "https://github.com/rust-lang/rust/commit/2c8d75d655b7d0bf84178f464c47a79569a35f3c"}], "stats": {"total": 25, "additions": 0, "deletions": 25}, "files": [{"sha": "081c035b5950d1235a2b81b647276db9aa6cf223", "filename": "src/librustc/metadata/csearch.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/53897baec87fae5cb918f8bb09c09d981bdd0684/src%2Flibrustc%2Fmetadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53897baec87fae5cb918f8bb09c09d981bdd0684/src%2Flibrustc%2Fmetadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcsearch.rs?ref=53897baec87fae5cb918f8bb09c09d981bdd0684", "patch": "@@ -13,7 +13,6 @@\n use metadata::common::*;\n use metadata::cstore;\n use metadata::decoder;\n-use middle::def;\n use middle::lang_items;\n use middle::ty;\n \n@@ -114,12 +113,6 @@ pub fn maybe_get_item_ast<'tcx>(tcx: &ty::ctxt<'tcx>, def: ast::DefId,\n     decoder::maybe_get_item_ast(&*cdata, tcx, def.node, decode_inlined_item)\n }\n \n-pub fn get_enum_variant_defs(cstore: &cstore::CStore, enum_id: ast::DefId)\n-                             -> Vec<(def::Def, ast::Name, ast::Visibility)> {\n-    let cdata = cstore.get_crate_data(enum_id.krate);\n-    decoder::get_enum_variant_defs(&*cstore.intr, &*cdata, enum_id.node)\n-}\n-\n pub fn get_enum_variants<'tcx>(tcx: &ty::ctxt<'tcx>, def: ast::DefId)\n                                -> Vec<Rc<ty::VariantInfo<'tcx>>> {\n     let cstore = &tcx.sess.cstore;"}, {"sha": "53e6e4f07fbd67149b5cd922bc445e00df075e26", "filename": "src/librustc/metadata/decoder.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/53897baec87fae5cb918f8bb09c09d981bdd0684/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53897baec87fae5cb918f8bb09c09d981bdd0684/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fdecoder.rs?ref=53897baec87fae5cb918f8bb09c09d981bdd0684", "patch": "@@ -730,24 +730,6 @@ pub fn maybe_get_item_ast<'tcx>(cdata: Cmd, tcx: &ty::ctxt<'tcx>, id: ast::NodeI\n     }\n }\n \n-pub fn get_enum_variant_defs(intr: &IdentInterner,\n-                             cdata: Cmd,\n-                             id: ast::NodeId)\n-                             -> Vec<(def::Def, ast::Name, ast::Visibility)> {\n-    let data = cdata.data();\n-    let items = reader::get_doc(rbml::Doc::new(data), tag_items);\n-    let item = find_item(id, items);\n-    enum_variant_ids(item, cdata).map(|did| {\n-        let item = find_item(did.node, items);\n-        let name = item_name(intr, item);\n-        let visibility = item_visibility(item);\n-        match item_to_def_like(cdata, item, did) {\n-            DlDef(def @ def::DefVariant(..)) => (def, name, visibility),\n-            _ => unreachable!()\n-        }\n-    }).collect()\n-}\n-\n pub fn get_enum_variants<'tcx>(intr: Rc<IdentInterner>, cdata: Cmd, id: ast::NodeId,\n                                tcx: &ty::ctxt<'tcx>) -> Vec<Rc<ty::VariantInfo<'tcx>>> {\n     let data = cdata.data();"}]}