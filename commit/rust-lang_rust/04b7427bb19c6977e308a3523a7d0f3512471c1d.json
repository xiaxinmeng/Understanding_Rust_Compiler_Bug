{"sha": "04b7427bb19c6977e308a3523a7d0f3512471c1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0Yjc0MjdiYjE5YzY5NzdlMzA4YTM1MjNhN2QwZjM1MTI0NzFjMWQ=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-04-14T18:49:09Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-04-14T18:49:09Z"}, "message": "Rollup merge of #32646 - Ms2ger:Constructor, r=sanxiyn\n\nStop re-exporting check_match::Constructor.", "tree": {"sha": "def763b54e52796c5ec6b998cb55268c5e947ef1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/def763b54e52796c5ec6b998cb55268c5e947ef1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04b7427bb19c6977e308a3523a7d0f3512471c1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04b7427bb19c6977e308a3523a7d0f3512471c1d", "html_url": "https://github.com/rust-lang/rust/commit/04b7427bb19c6977e308a3523a7d0f3512471c1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04b7427bb19c6977e308a3523a7d0f3512471c1d/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "073a09fd63c9b4ec3bb4709986a2517ca4c3cdf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/073a09fd63c9b4ec3bb4709986a2517ca4c3cdf1", "html_url": "https://github.com/rust-lang/rust/commit/073a09fd63c9b4ec3bb4709986a2517ca4c3cdf1"}, {"sha": "8cd9c2b2599f37bc5d33ce461fb21c2b70bfbbff", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cd9c2b2599f37bc5d33ce461fb21c2b70bfbbff", "html_url": "https://github.com/rust-lang/rust/commit/8cd9c2b2599f37bc5d33ce461fb21c2b70bfbbff"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "5883013ac72f2ac4029c6c86b4d672ec5204499f", "filename": "src/librustc_const_eval/check_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04b7427bb19c6977e308a3523a7d0f3512471c1d/src%2Flibrustc_const_eval%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04b7427bb19c6977e308a3523a7d0f3512471c1d/src%2Flibrustc_const_eval%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Fcheck_match.rs?ref=04b7427bb19c6977e308a3523a7d0f3512471c1d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-pub use self::Constructor::*;\n+use self::Constructor::*;\n use self::Usefulness::*;\n use self::WitnessPreference::*;\n "}, {"sha": "e390aa32dfee8414da6ed16c7ff5ef7436b28a4b", "filename": "src/librustc_trans/_match.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/04b7427bb19c6977e308a3523a7d0f3512471c1d/src%2Flibrustc_trans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04b7427bb19c6977e308a3523a7d0f3512471c1d/src%2Flibrustc_trans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2F_match.rs?ref=04b7427bb19c6977e308a3523a7d0f3512471c1d", "patch": "@@ -189,7 +189,7 @@ use self::Opt::*;\n use self::FailureHandler::*;\n \n use llvm::{ValueRef, BasicBlockRef};\n-use rustc_const_eval::check_match::{self, StaticInliner};\n+use rustc_const_eval::check_match::{self, Constructor, StaticInliner};\n use rustc_const_eval::{compare_lit_exprs, eval_const_expr};\n use rustc::hir::def::{Def, DefMap};\n use rustc::hir::def_id::DefId;\n@@ -609,19 +609,19 @@ fn enter_opt<'a, 'p, 'blk, 'tcx>(\n     let _indenter = indenter();\n \n     let ctor = match opt {\n-        &ConstantValue(ConstantExpr(expr), _) => check_match::ConstantValue(\n+        &ConstantValue(ConstantExpr(expr), _) => Constructor::ConstantValue(\n             eval_const_expr(bcx.tcx(), &expr)\n         ),\n-        &ConstantRange(ConstantExpr(lo), ConstantExpr(hi), _) => check_match::ConstantRange(\n+        &ConstantRange(ConstantExpr(lo), ConstantExpr(hi), _) => Constructor::ConstantRange(\n             eval_const_expr(bcx.tcx(), &lo),\n             eval_const_expr(bcx.tcx(), &hi)\n         ),\n         &SliceLengthEqual(n, _) =>\n-            check_match::Slice(n),\n+            Constructor::Slice(n),\n         &SliceLengthGreaterOrEqual(before, after, _) =>\n-            check_match::SliceWithSubslice(before, after),\n+            Constructor::SliceWithSubslice(before, after),\n         &Variant(_, _, def_id, _) =>\n-            check_match::Constructor::Variant(def_id)\n+            Constructor::Variant(def_id)\n     };\n \n     let param_env = bcx.tcx().empty_parameter_environment();\n@@ -1229,7 +1229,7 @@ fn compile_submatch_continue<'a, 'p, 'blk, 'tcx>(mut bcx: Block<'blk, 'tcx>,\n         Some(field_vals) => {\n             let pats = enter_match(bcx, dm, m, col, val, |pats|\n                 check_match::specialize(&mcx, pats,\n-                                        &check_match::Single, col,\n+                                        &Constructor::Single, col,\n                                         field_vals.len())\n             );\n             let mut vals: Vec<_> = field_vals.into_iter()"}]}