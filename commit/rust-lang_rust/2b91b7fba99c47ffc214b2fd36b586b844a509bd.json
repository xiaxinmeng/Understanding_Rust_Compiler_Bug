{"sha": "2b91b7fba99c47ffc214b2fd36b586b844a509bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiOTFiN2ZiYTk5YzQ3ZmZjMjE0YjJmZDM2YjU4NmI4NDRhNTA5YmQ=", "commit": {"author": {"name": "hosseind75", "email": "dindar95@bk.ru", "date": "2020-09-19T13:21:24Z"}, "committer": {"name": "hosseind88", "email": "hosseind88@mail.ru", "date": "2020-10-09T17:27:45Z"}, "message": "ICEs should print the top of the query stack", "tree": {"sha": "54cfd56bdd34f1dee45ffc52596b143ed33abea4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54cfd56bdd34f1dee45ffc52596b143ed33abea4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b91b7fba99c47ffc214b2fd36b586b844a509bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b91b7fba99c47ffc214b2fd36b586b844a509bd", "html_url": "https://github.com/rust-lang/rust/commit/2b91b7fba99c47ffc214b2fd36b586b844a509bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b91b7fba99c47ffc214b2fd36b586b844a509bd/comments", "author": {"login": "hosseind75", "id": 69863841, "node_id": "MDQ6VXNlcjY5ODYzODQx", "avatar_url": "https://avatars.githubusercontent.com/u/69863841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hosseind75", "html_url": "https://github.com/hosseind75", "followers_url": "https://api.github.com/users/hosseind75/followers", "following_url": "https://api.github.com/users/hosseind75/following{/other_user}", "gists_url": "https://api.github.com/users/hosseind75/gists{/gist_id}", "starred_url": "https://api.github.com/users/hosseind75/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hosseind75/subscriptions", "organizations_url": "https://api.github.com/users/hosseind75/orgs", "repos_url": "https://api.github.com/users/hosseind75/repos", "events_url": "https://api.github.com/users/hosseind75/events{/privacy}", "received_events_url": "https://api.github.com/users/hosseind75/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hosseind88", "id": 72156162, "node_id": "MDQ6VXNlcjcyMTU2MTYy", "avatar_url": "https://avatars.githubusercontent.com/u/72156162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hosseind88", "html_url": "https://github.com/hosseind88", "followers_url": "https://api.github.com/users/hosseind88/followers", "following_url": "https://api.github.com/users/hosseind88/following{/other_user}", "gists_url": "https://api.github.com/users/hosseind88/gists{/gist_id}", "starred_url": "https://api.github.com/users/hosseind88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hosseind88/subscriptions", "organizations_url": "https://api.github.com/users/hosseind88/orgs", "repos_url": "https://api.github.com/users/hosseind88/repos", "events_url": "https://api.github.com/users/hosseind88/events{/privacy}", "received_events_url": "https://api.github.com/users/hosseind88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2124e9b50e2ba208700f1ab928e0863e407eb158", "url": "https://api.github.com/repos/rust-lang/rust/commits/2124e9b50e2ba208700f1ab928e0863e407eb158", "html_url": "https://github.com/rust-lang/rust/commit/2124e9b50e2ba208700f1ab928e0863e407eb158"}], "stats": {"total": 14, "additions": 1, "deletions": 13}, "files": [{"sha": "451ed6506f483e08fdc9eb3d80af28a3f38c3a1b", "filename": "compiler/rustc_middle/src/ty/query/plumbing.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2b91b7fba99c47ffc214b2fd36b586b844a509bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b91b7fba99c47ffc214b2fd36b586b844a509bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fplumbing.rs?ref=2b91b7fba99c47ffc214b2fd36b586b844a509bd", "patch": "@@ -124,15 +124,7 @@ impl<'tcx> TyCtxt<'tcx> {\n         })\n     }\n \n-<<<<<<< HEAD\n-    pub fn try_print_query_stack(\n-        handler: &Handler,\n-        num_frames: Option<usize>,\n-        backtrace: Option<bool>,\n-    ) {\n-=======\n     pub fn try_print_query_stack(handler: &Handler, num_frames: Option<usize>) {\n->>>>>>> 15827338aa231fd408561bf5db8d8eea85d1a51a\n         eprintln!(\"query stack during panic:\");\n \n         // Be careful reyling on global state here: this code is called from\n@@ -146,11 +138,7 @@ impl<'tcx> TyCtxt<'tcx> {\n                 let mut i = 0;\n \n                 while let Some(query) = current_query {\n-<<<<<<< HEAD\n-                    if backtrace.unwrap() == false && i == num_frames.unwrap() {\n-=======\n-                    if num_frames == Some(i) {\n->>>>>>> 15827338aa231fd408561bf5db8d8eea85d1a51a\n+                    if Some(i) == num_frames {\n                         break;\n                     }\n                     let query_info ="}]}