{"sha": "dbb978a3c6d0503d188f11bbd4e53aac74d98bda", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiYjk3OGEzYzZkMDUwM2QxODhmMTFiYmQ0ZTUzYWFjNzRkOThiZGE=", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-07-25T23:28:52Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-07-25T23:28:52Z"}, "message": "Remove unnecessary `structhead` parameter from `render_union`\n\n`structhead` is used for `render_struct` so that the logic for rendering\nstructs can be shared between struct variants and struct items. However,\n`render_union` is not used anywhere except for rendering union items, so\nits `structhead` parameter is unnecessary.", "tree": {"sha": "b250725633894c53206e1bff98e8a7cea05f7dc8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b250725633894c53206e1bff98e8a7cea05f7dc8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbb978a3c6d0503d188f11bbd4e53aac74d98bda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbb978a3c6d0503d188f11bbd4e53aac74d98bda", "html_url": "https://github.com/rust-lang/rust/commit/dbb978a3c6d0503d188f11bbd4e53aac74d98bda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbb978a3c6d0503d188f11bbd4e53aac74d98bda/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c25eb7aa3a71fb951564b0ddf131be59c2c951d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c25eb7aa3a71fb951564b0ddf131be59c2c951d", "html_url": "https://github.com/rust-lang/rust/commit/9c25eb7aa3a71fb951564b0ddf131be59c2c951d"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "9d6e34caa078b3dd5fdfb76ce4f889d5e04ec22d", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dbb978a3c6d0503d188f11bbd4e53aac74d98bda/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbb978a3c6d0503d188f11bbd4e53aac74d98bda/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=dbb978a3c6d0503d188f11bbd4e53aac74d98bda", "patch": "@@ -888,7 +888,7 @@ fn item_union(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, s: &clean::Uni\n     wrap_into_docblock(w, |w| {\n         w.write_str(\"<pre class=\\\"rust union\\\">\");\n         render_attributes_in_pre(w, it, \"\");\n-        render_union(w, it, Some(&s.generics), &s.fields, \"\", true, cx);\n+        render_union(w, it, Some(&s.generics), &s.fields, \"\", cx);\n         w.write_str(\"</pre>\")\n     });\n \n@@ -1380,14 +1380,12 @@ fn render_union(\n     g: Option<&clean::Generics>,\n     fields: &[clean::Item],\n     tab: &str,\n-    structhead: bool,\n     cx: &Context<'_>,\n ) {\n     write!(\n         w,\n-        \"{}{}{}\",\n+        \"{}union {}\",\n         it.visibility.print_with_space(it.def_id, cx),\n-        if structhead { \"union \" } else { \"\" },\n         it.name.as_ref().unwrap()\n     );\n     if let Some(g) = g {"}]}