{"sha": "ee1ee7f463240ebda33d2180dd54be7a5e7f923c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlMWVlN2Y0NjMyNDBlYmRhMzNkMjE4MGRkNTRiZTdhNWU3ZjkyM2M=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2014-06-27T00:41:43Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2014-06-28T05:08:57Z"}, "message": "make tests hygienic...\n\n... and possibly totally pointless. Specifically, fixing\nthese to make their macros hygienic may mean that they no\nlonger test the thing that they were supposed to test.", "tree": {"sha": "7781560b31e4d3c4aca3c8100f3cbd34981897aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7781560b31e4d3c4aca3c8100f3cbd34981897aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee1ee7f463240ebda33d2180dd54be7a5e7f923c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee1ee7f463240ebda33d2180dd54be7a5e7f923c", "html_url": "https://github.com/rust-lang/rust/commit/ee1ee7f463240ebda33d2180dd54be7a5e7f923c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee1ee7f463240ebda33d2180dd54be7a5e7f923c/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "235ca1801ec8053b7cab46ed6708c382e58df63b", "url": "https://api.github.com/repos/rust-lang/rust/commits/235ca1801ec8053b7cab46ed6708c382e58df63b", "html_url": "https://github.com/rust-lang/rust/commit/235ca1801ec8053b7cab46ed6708c382e58df63b"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "210371205696a91d6c6b9789b92c3b9769e2bf23", "filename": "src/test/run-pass/issue-8851.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ee1ee7f463240ebda33d2180dd54be7a5e7f923c/src%2Ftest%2Frun-pass%2Fissue-8851.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee1ee7f463240ebda33d2180dd54be7a5e7f923c/src%2Ftest%2Frun-pass%2Fissue-8851.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8851.rs?ref=ee1ee7f463240ebda33d2180dd54be7a5e7f923c", "patch": "@@ -10,23 +10,28 @@\n \n #![feature(macro_rules)]\n \n+// after fixing #9384 and implementing hygiene for match bindings,\n+// this now fails because the insertion of the 'y' into the match\n+// doesn't cause capture. Making this macro hygienic (as I've done)\n+// could very well make this test case completely pointless....\n+\n enum T {\n     A(int),\n     B(uint)\n }\n \n macro_rules! test(\n-    ($e:expr) => (\n+    ($id:ident, $e:expr) => (\n         fn foo(t: T) -> int {\n             match t {\n-                A(y) => $e,\n-                B(y) => $e\n+                A($id) => $e,\n+                B($id) => $e\n             }\n         }\n     )\n )\n \n-test!(10 + (y as int))\n+test!(y, 10 + (y as int))\n \n pub fn main() {\n     foo(A(20));"}, {"sha": "6be79cb62dd7f09ccf6c1f32ffc1c14cd1b0d1a4", "filename": "src/test/run-pass/typeck-macro-interaction-issue-8852.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ee1ee7f463240ebda33d2180dd54be7a5e7f923c/src%2Ftest%2Frun-pass%2Ftypeck-macro-interaction-issue-8852.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee1ee7f463240ebda33d2180dd54be7a5e7f923c/src%2Ftest%2Frun-pass%2Ftypeck-macro-interaction-issue-8852.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftypeck-macro-interaction-issue-8852.rs?ref=ee1ee7f463240ebda33d2180dd54be7a5e7f923c", "patch": "@@ -15,19 +15,24 @@ enum T {\n     B(f64)\n }\n \n+// after fixing #9384 and implementing hygiene for match bindings,\n+// this now fails because the insertion of the 'y' into the match\n+// doesn't cause capture. Making this macro hygienic (as I've done)\n+// could very well make this test case completely pointless....\n+\n macro_rules! test(\n-    ($e:expr) => (\n+    ($id1:ident, $id2:ident, $e:expr) => (\n         fn foo(a:T, b:T) -> T {\n             match (a, b) {\n-                (A(x), A(y)) => A($e),\n-                (B(x), B(y)) => B($e),\n+                (A($id1), A($id2)) => A($e),\n+                (B($id1), B($id2)) => B($e),\n                 _ => fail!()\n             }\n         }\n     )\n )\n \n-test!(x + y)\n+test!(x,y,x + y)\n \n pub fn main() {\n     foo(A(1), A(2));"}]}