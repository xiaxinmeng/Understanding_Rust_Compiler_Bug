{"sha": "16fd95c482d8604361a601b3a52a80fc3aaf3e1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2ZmQ5NWM0ODJkODYwNDM2MWE2MDFiM2E1MmE4MGZjM2FhZjNlMWU=", "commit": {"author": {"name": "L\u00e9o Lanteri Thauvin", "email": "leseulartichaut@gmail.com", "date": "2021-08-25T13:49:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-25T13:49:02Z"}, "message": "Rollup merge of #88314 - spastorino:type-of-a-let-tait-test, r=oli-obk\n\nAdd type of a let tait test\n\nr? `@oli-obk`\n\nRelated to #86727", "tree": {"sha": "bcf40c68d0325ed53ec431b9f764c84cf45cb03d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bcf40c68d0325ed53ec431b9f764c84cf45cb03d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16fd95c482d8604361a601b3a52a80fc3aaf3e1e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhJkpOCRBK7hj4Ov3rIwAAFJIIAEdBu6KxgqbM+G7qBmKGjM2J\n2dhN6aL3hatUrEUOgN49hn47XL2oKX80CNxnDAcmB7nCCD4U6NuJm1Gg9tKiBdcb\nRNR6lHWOZkkuzMsbjo/iXU8JfU+9WBSvIlGouFLZ6OzkSyKR+6ADqczQETuU9MIr\nq7M3s7lKYy2T0E4GsY/lqYiM+bVRrdK83YcmTD/xKCyfj7UddU7XvdboHB5g8E2e\nXGdX7N9sAkzUb35KVOp7+jb1xzpPTsUzdImYbWTTGOhCo1LeMzz0NVDbWVryHoJC\nlzvQ4HwZGf1Q5aeV4ZWUD+ayq/Yb+qISD5M6PdAXlTrcWZsN8SfLKLgrwL1tb1k=\n=QPWI\n-----END PGP SIGNATURE-----\n", "payload": "tree bcf40c68d0325ed53ec431b9f764c84cf45cb03d\nparent 3eee91b40349fc4749026ca353d91d60d2c85c28\nparent dbadab54df148b55b2e884440bfaeaa38517e6e8\nauthor L\u00e9o Lanteri Thauvin <leseulartichaut@gmail.com> 1629899342 +0200\ncommitter GitHub <noreply@github.com> 1629899342 +0200\n\nRollup merge of #88314 - spastorino:type-of-a-let-tait-test, r=oli-obk\n\nAdd type of a let tait test\n\nr? `@oli-obk`\n\nRelated to #86727\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16fd95c482d8604361a601b3a52a80fc3aaf3e1e", "html_url": "https://github.com/rust-lang/rust/commit/16fd95c482d8604361a601b3a52a80fc3aaf3e1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16fd95c482d8604361a601b3a52a80fc3aaf3e1e/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3eee91b40349fc4749026ca353d91d60d2c85c28", "url": "https://api.github.com/repos/rust-lang/rust/commits/3eee91b40349fc4749026ca353d91d60d2c85c28", "html_url": "https://github.com/rust-lang/rust/commit/3eee91b40349fc4749026ca353d91d60d2c85c28"}, {"sha": "dbadab54df148b55b2e884440bfaeaa38517e6e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbadab54df148b55b2e884440bfaeaa38517e6e8", "html_url": "https://github.com/rust-lang/rust/commit/dbadab54df148b55b2e884440bfaeaa38517e6e8"}], "stats": {"total": 142, "additions": 142, "deletions": 0}, "files": [{"sha": "7f8e6127cca3b2faf3b078c5bb6f34823fe1e857", "filename": "src/test/ui/type-alias-impl-trait/type_of_a_let.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/16fd95c482d8604361a601b3a52a80fc3aaf3e1e/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype_of_a_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16fd95c482d8604361a601b3a52a80fc3aaf3e1e/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype_of_a_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype_of_a_let.rs?ref=16fd95c482d8604361a601b3a52a80fc3aaf3e1e", "patch": "@@ -0,0 +1,29 @@\n+#![feature(type_alias_impl_trait)]\n+#![allow(dead_code)]\n+\n+// FIXME This should compile, but it currently doesn't\n+\n+use std::fmt::Debug;\n+\n+type Foo = impl Debug;\n+//~^ ERROR: could not find defining uses\n+\n+fn foo1() -> u32 {\n+    let x: Foo = 22_u32;\n+    //~^ ERROR: mismatched types [E0308]\n+    x\n+    //~^ ERROR: mismatched types [E0308]\n+}\n+\n+fn foo2() -> u32 {\n+    let x: Foo = 22_u32;\n+    //~^ ERROR: mismatched types [E0308]\n+    let y: Foo = x;\n+    same_type((x, y));\n+    y\n+    //~^ ERROR: mismatched types [E0308]\n+}\n+\n+fn same_type<T>(x: (T, T)) {}\n+\n+fn main() {}"}, {"sha": "cac8d6841afda098ec95f81178252b7c16d75123", "filename": "src/test/ui/type-alias-impl-trait/type_of_a_let.stderr", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/16fd95c482d8604361a601b3a52a80fc3aaf3e1e/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype_of_a_let.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/16fd95c482d8604361a601b3a52a80fc3aaf3e1e/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype_of_a_let.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype_of_a_let.stderr?ref=16fd95c482d8604361a601b3a52a80fc3aaf3e1e", "patch": "@@ -0,0 +1,67 @@\n+error[E0308]: mismatched types\n+  --> $DIR/type_of_a_let.rs:12:18\n+   |\n+LL | type Foo = impl Debug;\n+   |            ---------- the expected opaque type\n+...\n+LL |     let x: Foo = 22_u32;\n+   |            ---   ^^^^^^ expected opaque type, found `u32`\n+   |            |\n+   |            expected due to this\n+   |\n+   = note: expected opaque type `impl Debug`\n+                     found type `u32`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/type_of_a_let.rs:14:5\n+   |\n+LL | type Foo = impl Debug;\n+   |            ---------- the found opaque type\n+...\n+LL | fn foo1() -> u32 {\n+   |              --- expected `u32` because of return type\n+...\n+LL |     x\n+   |     ^ expected `u32`, found opaque type\n+   |\n+   = note:     expected type `u32`\n+           found opaque type `impl Debug`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/type_of_a_let.rs:19:18\n+   |\n+LL | type Foo = impl Debug;\n+   |            ---------- the expected opaque type\n+...\n+LL |     let x: Foo = 22_u32;\n+   |            ---   ^^^^^^ expected opaque type, found `u32`\n+   |            |\n+   |            expected due to this\n+   |\n+   = note: expected opaque type `impl Debug`\n+                     found type `u32`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/type_of_a_let.rs:23:5\n+   |\n+LL | type Foo = impl Debug;\n+   |            ---------- the found opaque type\n+...\n+LL | fn foo2() -> u32 {\n+   |              --- expected `u32` because of return type\n+...\n+LL |     y\n+   |     ^ expected `u32`, found opaque type\n+   |\n+   = note:     expected type `u32`\n+           found opaque type `impl Debug`\n+\n+error: could not find defining uses\n+  --> $DIR/type_of_a_let.rs:8:12\n+   |\n+LL | type Foo = impl Debug;\n+   |            ^^^^^^^^^^\n+\n+error: aborting due to 5 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "33d3f164ce15eaec80f44835b7a4046b10303c14", "filename": "src/test/ui/type-alias-impl-trait/type_of_a_let2.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/16fd95c482d8604361a601b3a52a80fc3aaf3e1e/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype_of_a_let2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16fd95c482d8604361a601b3a52a80fc3aaf3e1e/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype_of_a_let2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype_of_a_let2.rs?ref=16fd95c482d8604361a601b3a52a80fc3aaf3e1e", "patch": "@@ -0,0 +1,25 @@\n+#![feature(type_alias_impl_trait)]\n+#![allow(dead_code)]\n+\n+// FIXME This should be under a feature flag\n+\n+use std::fmt::Debug;\n+\n+fn foo1() -> u32 {\n+    let x: impl Debug = 22_u32;\n+    //~^ ERROR: `impl Trait` not allowed outside of function and method return types [E0562]\n+    x // ERROR: we only know x: Debug, we don't know x = u32\n+}\n+\n+fn foo2() -> u32 {\n+    let x: impl Debug = 22_u32;\n+    //~^ ERROR: `impl Trait` not allowed outside of function and method return types [E0562]\n+    let y: impl Debug = x;\n+    //~^ ERROR: `impl Trait` not allowed outside of function and method return types [E0562]\n+    same_type((x, y)); // ERROR\n+    x\n+}\n+\n+fn same_type<T>(x: (T, T)) {}\n+\n+fn main() {}"}, {"sha": "7a1825a8e2d9a9a35afd57b4db9609a3a95d849e", "filename": "src/test/ui/type-alias-impl-trait/type_of_a_let2.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/16fd95c482d8604361a601b3a52a80fc3aaf3e1e/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype_of_a_let2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/16fd95c482d8604361a601b3a52a80fc3aaf3e1e/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype_of_a_let2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype_of_a_let2.stderr?ref=16fd95c482d8604361a601b3a52a80fc3aaf3e1e", "patch": "@@ -0,0 +1,21 @@\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n+  --> $DIR/type_of_a_let2.rs:9:12\n+   |\n+LL |     let x: impl Debug = 22_u32;\n+   |            ^^^^^^^^^^\n+\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n+  --> $DIR/type_of_a_let2.rs:15:12\n+   |\n+LL |     let x: impl Debug = 22_u32;\n+   |            ^^^^^^^^^^\n+\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n+  --> $DIR/type_of_a_let2.rs:17:12\n+   |\n+LL |     let y: impl Debug = x;\n+   |            ^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0562`."}]}