{"sha": "edf8f419b532b93102222b9deb2c8bb5080911d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkZjhmNDE5YjUzMmI5MzEwMjIyMmI5ZGViMmM4YmI1MDgwOTExZDk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-25T07:15:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-25T07:15:30Z"}, "message": "Merge #5049\n\n5049: Rename ra_flycheck -> flycheck r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "824aec6d18f409cc46d28d36161dd06cae53cdaf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/824aec6d18f409cc46d28d36161dd06cae53cdaf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edf8f419b532b93102222b9deb2c8bb5080911d9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe9E8SCRBK7hj4Ov3rIwAAdHIIAG7drPQB9F89Ob3NY8oqEpVh\njxXJGB0ZvqSSFlNh1Q5oeV10+cB6qbMdDo6naxdhjOBYuC4qfxx+i0/OSsfroyjs\n386y1dYcarnvtFY2AWI6ePKHkcCoo20dP77NnbPLiNBBC1q37c4FzHN5VJePOseF\nghfUMG29niCd+Sjm/nDOdwXgueoI161rba2syoQu5G3SvqclNYHXJpthAWCjxWQl\nnB7psT2SYuCz80kEfF0Def1hwldaH0YFiXQ0kNT8yQgLicfrzsj4Rdrx+Bhdbu7z\nr/beHLzvBGhVaepQyo68HyCZrctJnefPHeEP+CDTSE75oX+bHqLWB0bs3ARJZfQ=\n=TPG3\n-----END PGP SIGNATURE-----\n", "payload": "tree 824aec6d18f409cc46d28d36161dd06cae53cdaf\nparent 44d525d4e02a8a4f2e21cde3377c4c0bd9269b41\nparent 0ec5d4f55c6a5ac3fadcd48ae17b70379aba17fa\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1593069330 +0000\ncommitter GitHub <noreply@github.com> 1593069330 +0000\n\nMerge #5049\n\n5049: Rename ra_flycheck -> flycheck r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edf8f419b532b93102222b9deb2c8bb5080911d9", "html_url": "https://github.com/rust-lang/rust/commit/edf8f419b532b93102222b9deb2c8bb5080911d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edf8f419b532b93102222b9deb2c8bb5080911d9/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44d525d4e02a8a4f2e21cde3377c4c0bd9269b41", "url": "https://api.github.com/repos/rust-lang/rust/commits/44d525d4e02a8a4f2e21cde3377c4c0bd9269b41", "html_url": "https://github.com/rust-lang/rust/commit/44d525d4e02a8a4f2e21cde3377c4c0bd9269b41"}, {"sha": "0ec5d4f55c6a5ac3fadcd48ae17b70379aba17fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ec5d4f55c6a5ac3fadcd48ae17b70379aba17fa", "html_url": "https://github.com/rust-lang/rust/commit/0ec5d4f55c6a5ac3fadcd48ae17b70379aba17fa"}], "stats": {"total": 61, "additions": 31, "deletions": 30}, "files": [{"sha": "b2b624212685f13e7e84104c2f37812d45ef8e13", "filename": "Cargo.lock", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/edf8f419b532b93102222b9deb2c8bb5080911d9/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/edf8f419b532b93102222b9deb2c8bb5080911d9/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=edf8f419b532b93102222b9deb2c8bb5080911d9", "patch": "@@ -340,6 +340,18 @@ version = \"0.2.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"37ab347416e802de484e4d03c7316c48f1ecb56574dfd4a46a80f173ce1de04d\"\n \n+[[package]]\n+name = \"flycheck\"\n+version = \"0.1.0\"\n+dependencies = [\n+ \"cargo_metadata\",\n+ \"crossbeam-channel\",\n+ \"jod-thread\",\n+ \"log\",\n+ \"ra_toolchain\",\n+ \"serde_json\",\n+]\n+\n [[package]]\n name = \"fnv\"\n version = \"1.0.7\"\n@@ -959,18 +971,6 @@ dependencies = [\n  \"vfs\",\n ]\n \n-[[package]]\n-name = \"ra_flycheck\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"cargo_metadata\",\n- \"crossbeam-channel\",\n- \"jod-thread\",\n- \"log\",\n- \"ra_toolchain\",\n- \"serde_json\",\n-]\n-\n [[package]]\n name = \"ra_fmt\"\n version = \"0.1.0\"\n@@ -1373,6 +1373,7 @@ dependencies = [\n  \"anyhow\",\n  \"crossbeam-channel\",\n  \"env_logger\",\n+ \"flycheck\",\n  \"globset\",\n  \"insta\",\n  \"itertools\",\n@@ -1384,7 +1385,6 @@ dependencies = [\n  \"pico-args\",\n  \"ra_cfg\",\n  \"ra_db\",\n- \"ra_flycheck\",\n  \"ra_hir\",\n  \"ra_hir_def\",\n  \"ra_hir_ty\","}, {"sha": "dc26b8ce7647f2b855cae95d247b47805c725f35", "filename": "crates/flycheck/Cargo.toml", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/edf8f419b532b93102222b9deb2c8bb5080911d9/crates%2Fflycheck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/edf8f419b532b93102222b9deb2c8bb5080911d9/crates%2Fflycheck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fflycheck%2FCargo.toml?ref=edf8f419b532b93102222b9deb2c8bb5080911d9", "patch": "@@ -1,6 +1,6 @@\n [package]\n edition = \"2018\"\n-name = \"ra_flycheck\"\n+name = \"flycheck\"\n version = \"0.1.0\"\n authors = [\"rust-analyzer developers\"]\n ", "previous_filename": "crates/ra_flycheck/Cargo.toml"}, {"sha": "af75adbe229673a21969d2d90110cf767882735e", "filename": "crates/flycheck/src/lib.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/edf8f419b532b93102222b9deb2c8bb5080911d9/crates%2Fflycheck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edf8f419b532b93102222b9deb2c8bb5080911d9/crates%2Fflycheck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fflycheck%2Fsrc%2Flib.rs?ref=edf8f419b532b93102222b9deb2c8bb5080911d9", "previous_filename": "crates/ra_flycheck/src/lib.rs"}, {"sha": "08c67ddd0aad0ed644a91157592d45744b37f714", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/edf8f419b532b93102222b9deb2c8bb5080911d9/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/edf8f419b532b93102222b9deb2c8bb5080911d9/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=edf8f419b532b93102222b9deb2c8bb5080911d9", "patch": "@@ -32,7 +32,7 @@ threadpool = \"1.7.1\"\n stdx = { path = \"../stdx\" }\n \n lsp-server = \"0.3.3\"\n-ra_flycheck = { path = \"../ra_flycheck\" }\n+flycheck = { path = \"../flycheck\" }\n ra_ide = { path = \"../ra_ide\" }\n ra_prof = { path = \"../ra_prof\" }\n ra_project_model = { path = \"../ra_project_model\" }"}, {"sha": "435bbbb6bccce9a0936bf682d5eb8e080fc51a91", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/edf8f419b532b93102222b9deb2c8bb5080911d9/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edf8f419b532b93102222b9deb2c8bb5080911d9/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=edf8f419b532b93102222b9deb2c8bb5080911d9", "patch": "@@ -10,9 +10,9 @@\n use std::{ffi::OsString, path::PathBuf};\n \n use crate::diagnostics::DiagnosticsConfig;\n+use flycheck::FlycheckConfig;\n use lsp_types::ClientCapabilities;\n use ra_db::AbsPathBuf;\n-use ra_flycheck::FlycheckConfig;\n use ra_ide::{AssistConfig, CompletionConfig, HoverConfig, InlayHintsConfig};\n use ra_project_model::{CargoConfig, ProjectJson, ProjectJsonData, ProjectManifest};\n use serde::Deserialize;"}, {"sha": "f379f5ed0adc9066e86c5fca5f157f67c776c37a", "filename": "crates/rust-analyzer/src/diagnostics/to_proto.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/edf8f419b532b93102222b9deb2c8bb5080911d9/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edf8f419b532b93102222b9deb2c8bb5080911d9/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs?ref=edf8f419b532b93102222b9deb2c8bb5080911d9", "patch": "@@ -2,20 +2,21 @@\n //! `cargo check` json format to the LSP diagnostic format.\n use std::{collections::HashMap, path::Path};\n \n+use flycheck::{Applicability, DiagnosticLevel, DiagnosticSpan, DiagnosticSpanMacroExpansion};\n use lsp_types::{\n     Diagnostic, DiagnosticRelatedInformation, DiagnosticSeverity, DiagnosticTag, Location,\n     NumberOrString, Position, Range, TextEdit, Url,\n };\n-use ra_flycheck::{Applicability, DiagnosticLevel, DiagnosticSpan, DiagnosticSpanMacroExpansion};\n use stdx::format_to;\n \n-use super::DiagnosticsConfig;\n use crate::{lsp_ext, to_proto::url_from_abs_path};\n \n+use super::DiagnosticsConfig;\n+\n /// Determines the LSP severity from a diagnostic\n fn map_diagnostic_to_severity(\n     config: &DiagnosticsConfig,\n-    val: &ra_flycheck::Diagnostic,\n+    val: &flycheck::Diagnostic,\n ) -> Option<DiagnosticSeverity> {\n     let res = match val.level {\n         DiagnosticLevel::Ice => DiagnosticSeverity::Error,\n@@ -95,7 +96,7 @@ fn map_secondary_span_to_related(\n }\n \n /// Determines if diagnostic is related to unused code\n-fn is_unused_or_unnecessary(rd: &ra_flycheck::Diagnostic) -> bool {\n+fn is_unused_or_unnecessary(rd: &flycheck::Diagnostic) -> bool {\n     match &rd.code {\n         Some(code) => match code.code.as_str() {\n             \"dead_code\" | \"unknown_lints\" | \"unreachable_code\" | \"unused_attributes\"\n@@ -107,7 +108,7 @@ fn is_unused_or_unnecessary(rd: &ra_flycheck::Diagnostic) -> bool {\n }\n \n /// Determines if diagnostic is related to deprecated code\n-fn is_deprecated(rd: &ra_flycheck::Diagnostic) -> bool {\n+fn is_deprecated(rd: &flycheck::Diagnostic) -> bool {\n     match &rd.code {\n         Some(code) => code.code.as_str() == \"deprecated\",\n         None => false,\n@@ -121,7 +122,7 @@ enum MappedRustChildDiagnostic {\n }\n \n fn map_rust_child_diagnostic(\n-    rd: &ra_flycheck::Diagnostic,\n+    rd: &flycheck::Diagnostic,\n     workspace_root: &Path,\n ) -> MappedRustChildDiagnostic {\n     let spans: Vec<&DiagnosticSpan> = rd.spans.iter().filter(|s| s.is_primary).collect();\n@@ -183,7 +184,7 @@ pub(crate) struct MappedRustDiagnostic {\n /// If the diagnostic has no primary span this will return `None`\n pub(crate) fn map_rust_diagnostic_to_lsp(\n     config: &DiagnosticsConfig,\n-    rd: &ra_flycheck::Diagnostic,\n+    rd: &flycheck::Diagnostic,\n     workspace_root: &Path,\n ) -> Vec<MappedRustDiagnostic> {\n     let primary_spans: Vec<&DiagnosticSpan> = rd.spans.iter().filter(|s| s.is_primary).collect();\n@@ -286,8 +287,8 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n mod tests {\n     use super::*;\n \n-    fn parse_diagnostic(val: &str) -> ra_flycheck::Diagnostic {\n-        serde_json::from_str::<ra_flycheck::Diagnostic>(val).unwrap()\n+    fn parse_diagnostic(val: &str) -> flycheck::Diagnostic {\n+        serde_json::from_str::<flycheck::Diagnostic>(val).unwrap()\n     }\n \n     #[test]"}, {"sha": "6038bf664f00410df59c7273b9d56efdc05a3a9a", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/edf8f419b532b93102222b9deb2c8bb5080911d9/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edf8f419b532b93102222b9deb2c8bb5080911d9/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=edf8f419b532b93102222b9deb2c8bb5080911d9", "patch": "@@ -6,10 +6,10 @@\n use std::{convert::TryFrom, sync::Arc};\n \n use crossbeam_channel::{unbounded, Receiver};\n+use flycheck::{CheckTask, FlycheckConfig, FlycheckHandle};\n use lsp_types::Url;\n use parking_lot::RwLock;\n use ra_db::{CrateId, SourceRoot, VfsPath};\n-use ra_flycheck::{CheckTask, FlycheckConfig, FlycheckHandle};\n use ra_ide::{Analysis, AnalysisChange, AnalysisHost, CrateGraph, FileId};\n use ra_project_model::{CargoWorkspace, ProcMacroClient, ProjectWorkspace, Target};\n use stdx::format_to;"}, {"sha": "0664e4a5a40c12bcc0c09a2ee244d77221cdb967", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/edf8f419b532b93102222b9deb2c8bb5080911d9/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edf8f419b532b93102222b9deb2c8bb5080911d9/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=edf8f419b532b93102222b9deb2c8bb5080911d9", "patch": "@@ -9,10 +9,10 @@ use std::{\n };\n \n use crossbeam_channel::{never, select, unbounded, RecvError, Sender};\n+use flycheck::CheckTask;\n use lsp_server::{Connection, ErrorCode, Message, Notification, Request, RequestId, Response};\n use lsp_types::{request::Request as _, NumberOrString, TextDocumentContentChangeEvent};\n use ra_db::VfsPath;\n-use ra_flycheck::CheckTask;\n use ra_ide::{Canceled, FileId, LineIndex};\n use ra_prof::profile;\n use ra_project_model::{PackageRoot, ProjectWorkspace};\n@@ -629,9 +629,9 @@ fn on_check_task(\n \n         CheckTask::Status(status) => {\n             let (state, message) = match status {\n-                ra_flycheck::Status::Being => (ProgressState::Start, None),\n-                ra_flycheck::Status::Progress(target) => (ProgressState::Report, Some(target)),\n-                ra_flycheck::Status::End => (ProgressState::End, None),\n+                flycheck::Status::Being => (ProgressState::Start, None),\n+                flycheck::Status::Progress(target) => (ProgressState::Report, Some(target)),\n+                flycheck::Status::End => (ProgressState::End, None),\n             };\n \n             report_progress(global_state, msg_sender, \"cargo check\", state, message, None);"}]}