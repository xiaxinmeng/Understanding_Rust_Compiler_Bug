{"sha": "0af99c99c4a662fb5a3fe2cd399de7761a1cc235", "node_id": "C_kwDOAAsO6NoAKDBhZjk5Yzk5YzRhNjYyZmI1YTNmZTJjZDM5OWRlNzc2MWExY2MyMzU", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-06-24T07:43:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-24T07:43:43Z"}, "message": "Rollup merge of #97633 - mkroening:object-osabi, r=petrochenkov\n\nSession object: Set OS/ABI\n\nCloses https://github.com/rust-lang/rust/issues/97535.\n\nThis depends on\n* https://github.com/gimli-rs/object/pull/438\n\nThis adapts LLVM's behavior of [`MCELFObjectTargetWriter::getOSABI`](https://github.com/llvm/llvm-project/blob/8c8a2679a20f621994fa904bcfc68775e7345edc/llvm/include/llvm/MC/MCELFObjectWriter.h#L72-L86).", "tree": {"sha": "f1b92eddd2aa5ff3a90abe744724e730fe1873d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1b92eddd2aa5ff3a90abe744724e730fe1873d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0af99c99c4a662fb5a3fe2cd399de7761a1cc235", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJitWsvCRBK7hj4Ov3rIwAA/yEIAErwZfIDTEO0ijKlOiqu1UL6\nUXSdNa7QJT6MaH82MwvLALjAQDmsVDTx34To7etO4wbNJ0QcXHAF+LaVYfauRPbx\nArgktStbVtZ1dQ40E22h42SKTa/4+I/4Ez68ODzO13+SEvbqRGpjVn+5fFzxjRx3\nSBfjUVL1kgJl43S32fxy+kGhzwCqXiLw6uea1jvIaoGECsTZMliwEscRyphXV5Bc\n15WvVwmJuKpPSJymdEUpfZpF2AdyeRgiIP+VzvSzRZXQXdgWYnOXoEFBN0Z/lLGd\nvMypoD2Srupmf7/KqsMZrHpCaLC42TDiUofrrGV0CI3QCkQWmzZKy9oIz1Ykm/E=\n=SPXn\n-----END PGP SIGNATURE-----\n", "payload": "tree f1b92eddd2aa5ff3a90abe744724e730fe1873d4\nparent 2c6feb51da9dbaa72ea4175ebafe38d78883e47b\nparent 21625e573036b6af90e71046d817fd7c74fa1f2f\nauthor Yuki Okushi <jtitor@2k36.org> 1656056623 +0900\ncommitter GitHub <noreply@github.com> 1656056623 +0900\n\nRollup merge of #97633 - mkroening:object-osabi, r=petrochenkov\n\nSession object: Set OS/ABI\n\nCloses https://github.com/rust-lang/rust/issues/97535.\n\nThis depends on\n* https://github.com/gimli-rs/object/pull/438\n\nThis adapts LLVM's behavior of [`MCELFObjectTargetWriter::getOSABI`](https://github.com/llvm/llvm-project/blob/8c8a2679a20f621994fa904bcfc68775e7345edc/llvm/include/llvm/MC/MCELFObjectWriter.h#L72-L86).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0af99c99c4a662fb5a3fe2cd399de7761a1cc235", "html_url": "https://github.com/rust-lang/rust/commit/0af99c99c4a662fb5a3fe2cd399de7761a1cc235", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0af99c99c4a662fb5a3fe2cd399de7761a1cc235/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c6feb51da9dbaa72ea4175ebafe38d78883e47b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c6feb51da9dbaa72ea4175ebafe38d78883e47b", "html_url": "https://github.com/rust-lang/rust/commit/2c6feb51da9dbaa72ea4175ebafe38d78883e47b"}, {"sha": "21625e573036b6af90e71046d817fd7c74fa1f2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/21625e573036b6af90e71046d817fd7c74fa1f2f", "html_url": "https://github.com/rust-lang/rust/commit/21625e573036b6af90e71046d817fd7c74fa1f2f"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "fb3a2d772c2aa79cefa72a5db805d261a55e1931", "filename": "Cargo.lock", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0af99c99c4a662fb5a3fe2cd399de7761a1cc235/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/0af99c99c4a662fb5a3fe2cd399de7761a1cc235/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=0af99c99c4a662fb5a3fe2cd399de7761a1cc235", "patch": "@@ -1713,6 +1713,7 @@ version = \"0.12.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"8c21d40587b92fa6a6c6e3c1bdbf87d75511db5672f9c93175574b3a00df1758\"\n dependencies = [\n+ \"ahash\",\n  \"compiler_builtins\",\n  \"rustc-std-workspace-alloc\",\n  \"rustc-std-workspace-core\",\n@@ -2571,6 +2572,18 @@ dependencies = [\n  \"memchr\",\n ]\n \n+[[package]]\n+name = \"object\"\n+version = \"0.29.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"21158b2c33aa6d4561f1c0a6ea283ca92bc54802a93b263e910746d679a7eb53\"\n+dependencies = [\n+ \"crc32fast\",\n+ \"hashbrown 0.12.0\",\n+ \"indexmap\",\n+ \"memchr\",\n+]\n+\n [[package]]\n name = \"odht\"\n version = \"0.3.1\"\n@@ -3720,7 +3733,7 @@ dependencies = [\n  \"itertools\",\n  \"jobserver\",\n  \"libc\",\n- \"object 0.28.4\",\n+ \"object 0.29.0\",\n  \"pathdiff\",\n  \"regex\",\n  \"rustc_apfloat\","}, {"sha": "1bdc473c29b6ee522bbbaa3736602f066ade81ea", "filename": "compiler/rustc_codegen_ssa/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0af99c99c4a662fb5a3fe2cd399de7761a1cc235/compiler%2Frustc_codegen_ssa%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0af99c99c4a662fb5a3fe2cd399de7761a1cc235/compiler%2Frustc_codegen_ssa%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2FCargo.toml?ref=0af99c99c4a662fb5a3fe2cd399de7761a1cc235", "patch": "@@ -42,6 +42,6 @@ rustc_target = { path = \"../rustc_target\" }\n rustc_session = { path = \"../rustc_session\" }\n \n [dependencies.object]\n-version = \"0.28.4\"\n+version = \"0.29.0\"\n default-features = false\n features = [\"read_core\", \"elf\", \"macho\", \"pe\", \"unaligned\", \"archive\", \"write\"]"}, {"sha": "3dd607adee501107a4d434d0003aeb5d11680339", "filename": "compiler/rustc_codegen_ssa/src/back/metadata.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0af99c99c4a662fb5a3fe2cd399de7761a1cc235/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0af99c99c4a662fb5a3fe2cd399de7761a1cc235/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fmetadata.rs?ref=0af99c99c4a662fb5a3fe2cd399de7761a1cc235", "patch": "@@ -130,7 +130,7 @@ pub(crate) fn create_object_file(sess: &Session) -> Option<write::Object<'static\n     };\n \n     let mut file = write::Object::new(binary_format, architecture, endianness);\n-    match architecture {\n+    let e_flags = match architecture {\n         Architecture::Mips => {\n             let arch = match sess.target.options.cpu.as_ref() {\n                 \"mips1\" => elf::EF_MIPS_ARCH_1,\n@@ -149,7 +149,7 @@ pub(crate) fn create_object_file(sess: &Session) -> Option<write::Object<'static\n             if sess.target.options.cpu.contains(\"r6\") {\n                 e_flags |= elf::EF_MIPS_NAN2008;\n             }\n-            file.flags = FileFlags::Elf { e_flags };\n+            e_flags\n         }\n         Architecture::Mips64 => {\n             // copied from `mips64el-linux-gnuabi64-gcc foo.c -c`\n@@ -160,17 +160,26 @@ pub(crate) fn create_object_file(sess: &Session) -> Option<write::Object<'static\n                 } else {\n                     elf::EF_MIPS_ARCH_64R2\n                 };\n-            file.flags = FileFlags::Elf { e_flags };\n+            e_flags\n         }\n         Architecture::Riscv64 if sess.target.options.features.contains(\"+d\") => {\n             // copied from `riscv64-linux-gnu-gcc foo.c -c`, note though\n             // that the `+d` target feature represents whether the double\n             // float abi is enabled.\n             let e_flags = elf::EF_RISCV_RVC | elf::EF_RISCV_FLOAT_ABI_DOUBLE;\n-            file.flags = FileFlags::Elf { e_flags };\n+            e_flags\n         }\n-        _ => {}\n+        _ => 0,\n+    };\n+    // adapted from LLVM's `MCELFObjectTargetWriter::getOSABI`\n+    let os_abi = match sess.target.options.os.as_ref() {\n+        \"hermit\" => elf::ELFOSABI_STANDALONE,\n+        \"freebsd\" => elf::ELFOSABI_FREEBSD,\n+        \"solaris\" => elf::ELFOSABI_SOLARIS,\n+        _ => elf::ELFOSABI_NONE,\n     };\n+    let abi_version = 0;\n+    file.flags = FileFlags::Elf { os_abi, abi_version, e_flags };\n     Some(file)\n }\n "}]}