{"sha": "60ccf89693037b3c010b027081d253b9c69a304c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwY2NmODk2OTMwMzdiM2MwMTBiMDI3MDgxZDI1M2I5YzY5YTMwNGM=", "commit": {"author": {"name": "Pawe\u0142 Romanowski", "email": "pawroman@gmail.com", "date": "2019-06-10T18:45:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-10T18:45:58Z"}, "message": "Apply suggestions from code review\n\nCo-Authored-By: varkor <github@varkor.com>", "tree": {"sha": "3a59240bb3f4394c96dd988393695e8ce549e93b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a59240bb3f4394c96dd988393695e8ce549e93b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60ccf89693037b3c010b027081d253b9c69a304c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc/qVmCRBK7hj4Ov3rIwAAdHIIAHum1U2gABBr2ZmMbiga/7hA\nU0eo4CKchZc8q9lx0qqGuwwze6fESXcMHL16eJcy49gfJwMZN+TXS2pHh+m9f34y\nq5ckJZ0pYY9RGg+O8KzT7SAryDG5spHFvyMgUNJPLdpC5VrErOKpT2UiZphdZQB2\n9pF2e71l2cv8ULL5CsgOtDBgVqgXt30xCP9X45sZwVYujZk6kkLqBVkP6gejnpe+\n92d+Q4xo7xwGpVeb8vP0K/vTtCJIeLX3r3jlcvQDtfkT4CDiPn6LTSwuImv4lKzP\nnvGSTV/uDK3oGh+tzssH7ea8RH6L/MWXDpFgR1qfWOlBEVSaY0vpe7wxAOzaEuk=\n=3GRT\n-----END PGP SIGNATURE-----\n", "payload": "tree 3a59240bb3f4394c96dd988393695e8ce549e93b\nparent 2c9c978e1d4a3541d8df593346c7520c8ef4d69e\nauthor Pawe\u0142 Romanowski <pawroman@gmail.com> 1560192358 +0200\ncommitter GitHub <noreply@github.com> 1560192358 +0200\n\nApply suggestions from code review\n\nCo-Authored-By: varkor <github@varkor.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60ccf89693037b3c010b027081d253b9c69a304c", "html_url": "https://github.com/rust-lang/rust/commit/60ccf89693037b3c010b027081d253b9c69a304c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60ccf89693037b3c010b027081d253b9c69a304c/comments", "author": {"login": "pawroman", "id": 914977, "node_id": "MDQ6VXNlcjkxNDk3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/914977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pawroman", "html_url": "https://github.com/pawroman", "followers_url": "https://api.github.com/users/pawroman/followers", "following_url": "https://api.github.com/users/pawroman/following{/other_user}", "gists_url": "https://api.github.com/users/pawroman/gists{/gist_id}", "starred_url": "https://api.github.com/users/pawroman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pawroman/subscriptions", "organizations_url": "https://api.github.com/users/pawroman/orgs", "repos_url": "https://api.github.com/users/pawroman/repos", "events_url": "https://api.github.com/users/pawroman/events{/privacy}", "received_events_url": "https://api.github.com/users/pawroman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c9c978e1d4a3541d8df593346c7520c8ef4d69e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c9c978e1d4a3541d8df593346c7520c8ef4d69e", "html_url": "https://github.com/rust-lang/rust/commit/2c9c978e1d4a3541d8df593346c7520c8ef4d69e"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "9eaf6eb9baa9e64e1542fba6db76172e8cac289d", "filename": "src/libcore/unicode/unicode.py", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/60ccf89693037b3c010b027081d253b9c69a304c/src%2Flibcore%2Funicode%2Funicode.py", "raw_url": "https://github.com/rust-lang/rust/raw/60ccf89693037b3c010b027081d253b9c69a304c/src%2Flibcore%2Funicode%2Funicode.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode%2Funicode.py?ref=60ccf89693037b3c010b027081d253b9c69a304c", "patch": "@@ -36,7 +36,7 @@\n try:\n     # completely optional type hinting\n     # (Python 2 compatible using comments,\n-    #  see: https://mypy.readthedocs.io/en/latest/python2.html)\n+    # see: https://mypy.readthedocs.io/en/latest/python2.html)\n     # This is very helpful in typing-aware IDE like PyCharm.\n     from typing import Any, Callable, Dict, Iterable, Iterator, List, Optional, Set, Tuple\n except ImportError:\n@@ -95,7 +95,8 @@ class UnicodeFiles(object):\n     \"Cc\": [\"C\"], \"Cf\": [\"C\"], \"Cs\": [\"C\"], \"Co\": [\"C\"], \"Cn\": [\"C\"],\n }\n \n-# this is the surrogate codepoints range (both ends inclusive)\n+# This is the (inclusive) range of surrogate codepoints.\n+# These are not valid Rust characters.\n # - they are not valid Rust characters\n SURROGATE_CODEPOINTS_RANGE = (0xd800, 0xdfff)\n \n@@ -122,7 +123,7 @@ def fetch_files(version=None):\n     \"\"\"\n     Fetch all the Unicode files from unicode.org.\n \n-    This will use cached files (stored in FETCH_DIR) if they exist,\n+    This will use cached files (stored in `FETCH_DIR`) if they exist,\n     creating them if they don't.  In any case, the Unicode version\n     is always returned.\n \n@@ -797,7 +798,7 @@ def parse_args():\n     parser = argparse.ArgumentParser(description=__doc__)\n     parser.add_argument(\"-v\", \"--version\", default=None, type=str,\n                         help=\"Unicode version to use (if not specified,\"\n-                             \" defaults to latest available final release).\")\n+                             \" defaults to latest release).\")\n \n     return parser.parse_args()\n "}]}