{"sha": "c99f1b9b7e67f96b51d873bd3ce2c09df0b34ef2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5OWYxYjliN2U2N2Y5NmI1MWQ4NzNiZDNjZTJjMDlkZjBiMzRlZjI=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-07-01T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-07-01T10:36:44Z"}, "message": "Skip layout query when computing integer type size during mangling", "tree": {"sha": "3d717e04409849adae1d792718e7f4933875385a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d717e04409849adae1d792718e7f4933875385a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c99f1b9b7e67f96b51d873bd3ce2c09df0b34ef2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c99f1b9b7e67f96b51d873bd3ce2c09df0b34ef2", "html_url": "https://github.com/rust-lang/rust/commit/c99f1b9b7e67f96b51d873bd3ce2c09df0b34ef2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c99f1b9b7e67f96b51d873bd3ce2c09df0b34ef2/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8ac8fdacf66b351c6479b0c8313e3e57e571ba4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8ac8fdacf66b351c6479b0c8313e3e57e571ba4", "html_url": "https://github.com/rust-lang/rust/commit/f8ac8fdacf66b351c6479b0c8313e3e57e571ba4"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "1a9d04a75ec6abac73bb84ffae25289367501be5", "filename": "compiler/rustc_symbol_mangling/src/v0.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c99f1b9b7e67f96b51d873bd3ce2c09df0b34ef2/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c99f1b9b7e67f96b51d873bd3ce2c09df0b34ef2/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs?ref=c99f1b9b7e67f96b51d873bd3ce2c09df0b34ef2", "patch": "@@ -3,9 +3,11 @@ use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId};\n use rustc_hir::definitions::{DefPathData, DisambiguatedDefPathData};\n+use rustc_middle::ty::layout::IntegerExt;\n use rustc_middle::ty::print::{Print, Printer};\n use rustc_middle::ty::subst::{GenericArg, GenericArgKind, Subst};\n use rustc_middle::ty::{self, FloatTy, Instance, IntTy, Ty, TyCtxt, TypeFoldable, UintTy};\n+use rustc_target::abi::Integer;\n use rustc_target::spec::abi::Abi;\n \n use std::fmt::Write;\n@@ -553,11 +555,9 @@ impl Printer<'tcx> for SymbolMangler<'tcx> {\n             ty::Uint(_) | ty::Bool | ty::Char => {\n                 ct.try_eval_bits(self.tcx, ty::ParamEnv::reveal_all(), ct.ty)\n             }\n-            ty::Int(_) => {\n-                let param_env = ty::ParamEnv::reveal_all();\n-                ct.try_eval_bits(self.tcx, param_env, ct.ty).and_then(|b| {\n-                    let sz = self.tcx.layout_of(param_env.and(ct.ty)).ok()?.size;\n-                    let val = sz.sign_extend(b) as i128;\n+            ty::Int(ity) => {\n+                ct.try_eval_bits(self.tcx, ty::ParamEnv::reveal_all(), ct.ty).and_then(|b| {\n+                    let val = Integer::from_int_ty(&self.tcx, *ity).size().sign_extend(b) as i128;\n                     if val < 0 {\n                         neg = true;\n                     }"}]}