{"sha": "e240cb919b58975a0b647a613841da8819b672cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyNDBjYjkxOWI1ODk3NWEwYjY0N2E2MTM4NDFkYTg4MTliNjcyY2Y=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-18T13:41:13Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-18T13:41:13Z"}, "message": "Audit `core::default` for `int`/`uint` usage.\n\n* Use `i32` (`u32`) in doc examples, not `int` (`u32`).\n\n* Switch impl macros to use `isize`/`usize` rather than `int`/`uint`.", "tree": {"sha": "59b1c18e1f82dcfd8569602ca03b0b36d6eb4fd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59b1c18e1f82dcfd8569602ca03b0b36d6eb4fd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e240cb919b58975a0b647a613841da8819b672cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e240cb919b58975a0b647a613841da8819b672cf", "html_url": "https://github.com/rust-lang/rust/commit/e240cb919b58975a0b647a613841da8819b672cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e240cb919b58975a0b647a613841da8819b672cf/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "343909bca1a3903bc6df51007723601ac5a103c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/343909bca1a3903bc6df51007723601ac5a103c0", "html_url": "https://github.com/rust-lang/rust/commit/343909bca1a3903bc6df51007723601ac5a103c0"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "7f46d9cbe5021d3da0308e397e8c3418ba8a82c5", "filename": "src/libcore/default.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e240cb919b58975a0b647a613841da8819b672cf/src%2Flibcore%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e240cb919b58975a0b647a613841da8819b672cf/src%2Flibcore%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fdefault.rs?ref=e240cb919b58975a0b647a613841da8819b672cf", "patch": "@@ -16,7 +16,7 @@\n //!\n //! ```\n //! struct SomeOptions {\n-//!     foo: int,\n+//!     foo: i32,\n //!     bar: f32,\n //! }\n //! ```\n@@ -28,7 +28,7 @@\n //!\n //! #[derive(Default)]\n //! struct SomeOptions {\n-//!     foo: int,\n+//!     foo: i32,\n //!     bar: f32,\n //! }\n //!\n@@ -56,7 +56,7 @@\n //!\n //! #[derive(Default)]\n //! struct SomeOptions {\n-//!     foo: int,\n+//!     foo: i32,\n //!     bar: f32,\n //!     baz: Kind,\n //! }\n@@ -73,7 +73,7 @@\n //! # use std::default::Default;\n //! # #[derive(Default)]\n //! # struct SomeOptions {\n-//! #     foo: int,\n+//! #     foo: i32,\n //! #     bar: f32,\n //! # }\n //! fn main() {\n@@ -93,7 +93,7 @@\n /// ```\n /// #[derive(Default)]\n /// struct SomeOptions {\n-///     foo: int,\n+///     foo: i32,\n ///     bar: f32,\n /// }\n /// ```\n@@ -113,7 +113,7 @@ pub trait Default {\n     ///\n     /// let i: i8 = Default::default();\n     /// let (x, y): (Option<String>, f64) = Default::default();\n-    /// let (a, b, (c, d)): (int, uint, (bool, bool)) = Default::default();\n+    /// let (a, b, (c, d)): (i32, u32, (bool, bool)) = Default::default();\n     /// ```\n     ///\n     /// Making your own:\n@@ -150,13 +150,13 @@ default_impl! { (), () }\n default_impl! { bool, false }\n default_impl! { char, '\\x00' }\n \n-default_impl! { uint, 0 }\n+default_impl! { usize, 0 }\n default_impl! { u8, 0 }\n default_impl! { u16, 0 }\n default_impl! { u32, 0 }\n default_impl! { u64, 0 }\n \n-default_impl! { int, 0 }\n+default_impl! { isize, 0 }\n default_impl! { i8, 0 }\n default_impl! { i16, 0 }\n default_impl! { i32, 0 }"}]}