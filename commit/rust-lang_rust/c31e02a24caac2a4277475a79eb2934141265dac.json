{"sha": "c31e02a24caac2a4277475a79eb2934141265dac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMWUwMmEyNGNhYWMyYTQyNzc0NzVhNzllYjI5MzQxNDEyNjVkYWM=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-23T18:45:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-23T18:45:50Z"}, "message": "Rollup merge of #88232 - m-ou-se:macro-name-imported-but-not-macro, r=estebank\n\nAdd notes to macro-not-found diagnostics to point out how things with the same name were not a match.\n\nThis adds notes like:\n```\nerror: cannot find derive macro `Serialize` in this scope\n  --> $DIR/issue-88206.rs:22:10\n   |\nLL | #[derive(Serialize)]\n   |          ^^^^^^^^^\n   |\nnote: `Serialize` is imported here, but it is not a derive macro\n  --> $DIR/issue-88206.rs:17:11\n   |\nLL | use hey::{Serialize, Deserialize};\n   |           ^^^^^^^^^\n```\n\nFixes https://github.com/rust-lang/rust/issues/88206\n\nIncludes https://github.com/rust-lang/rust/pull/88229\n\nr? `@estebank`", "tree": {"sha": "baceff4bbe7779168f2a9f387e8481ed0df24291", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/baceff4bbe7779168f2a9f387e8481ed0df24291"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c31e02a24caac2a4277475a79eb2934141265dac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhI+zfCRBK7hj4Ov3rIwAA2CQIAINFIPQJPbPPSB/JZIZdfGa4\nZ7oOXCEMHzL8YYqbM+FFrvJwH1Nn1sXBmpw2hRvXyq+sgdWNmAPF/mpIV70LRPXo\nEyXuvCkyAbHLGl4BuKcEXWvnO+NdDYl/XFy7hDlKkEFO1/XAzg+rhNk0CoV1LKfh\nQ+/QWe741ZxKy73bAyJSdf6ULAJQCDtMwHcQSf/S5G3W9gMlf2+87OgdCxMGa9z+\nK0LeHNWHE3MG9Ktcnuy4xPZjieE6JFuwAKYMbki3vOMeS9ETa5ZGIdbT+NQ634YO\nNctCb3qbG90r+BqE1YiOuj2lNa+mzFy0e0eT+2l+Ts99F8djMjqQDe4L0pW+Fbo=\n=PffX\n-----END PGP SIGNATURE-----\n", "payload": "tree baceff4bbe7779168f2a9f387e8481ed0df24291\nparent 5cf025f076e76d235cc3e795a22499cff9f4fc62\nparent 908ce2fd1f8f87a18f005b6d86276649786475d8\nauthor Mara Bos <m-ou.se@m-ou.se> 1629744350 +0200\ncommitter GitHub <noreply@github.com> 1629744350 +0200\n\nRollup merge of #88232 - m-ou-se:macro-name-imported-but-not-macro, r=estebank\n\nAdd notes to macro-not-found diagnostics to point out how things with the same name were not a match.\n\nThis adds notes like:\n```\nerror: cannot find derive macro `Serialize` in this scope\n  --> $DIR/issue-88206.rs:22:10\n   |\nLL | #[derive(Serialize)]\n   |          ^^^^^^^^^\n   |\nnote: `Serialize` is imported here, but it is not a derive macro\n  --> $DIR/issue-88206.rs:17:11\n   |\nLL | use hey::{Serialize, Deserialize};\n   |           ^^^^^^^^^\n```\n\nFixes https://github.com/rust-lang/rust/issues/88206\n\nIncludes https://github.com/rust-lang/rust/pull/88229\n\nr? `@estebank`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c31e02a24caac2a4277475a79eb2934141265dac", "html_url": "https://github.com/rust-lang/rust/commit/c31e02a24caac2a4277475a79eb2934141265dac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c31e02a24caac2a4277475a79eb2934141265dac/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cf025f076e76d235cc3e795a22499cff9f4fc62", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cf025f076e76d235cc3e795a22499cff9f4fc62", "html_url": "https://github.com/rust-lang/rust/commit/5cf025f076e76d235cc3e795a22499cff9f4fc62"}, {"sha": "908ce2fd1f8f87a18f005b6d86276649786475d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/908ce2fd1f8f87a18f005b6d86276649786475d8", "html_url": "https://github.com/rust-lang/rust/commit/908ce2fd1f8f87a18f005b6d86276649786475d8"}], "stats": {"total": 251, "additions": 250, "deletions": 1}, "files": [{"sha": "ca2c22854c4f5d1bd9d2c9eaaaa76f79471b2456", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/c31e02a24caac2a4277475a79eb2934141265dac/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c31e02a24caac2a4277475a79eb2934141265dac/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=c31e02a24caac2a4277475a79eb2934141265dac", "patch": "@@ -956,9 +956,61 @@ impl<'a> Resolver<'a> {\n         if macro_kind == MacroKind::Derive && (ident.name == sym::Send || ident.name == sym::Sync) {\n             let msg = format!(\"unsafe traits like `{}` should be implemented explicitly\", ident);\n             err.span_note(ident.span, &msg);\n+            return;\n         }\n         if self.macro_names.contains(&ident.normalize_to_macros_2_0()) {\n             err.help(\"have you added the `#[macro_use]` on the module/import?\");\n+            return;\n+        }\n+        for ns in [Namespace::MacroNS, Namespace::TypeNS, Namespace::ValueNS] {\n+            if let Ok(binding) = self.early_resolve_ident_in_lexical_scope(\n+                ident,\n+                ScopeSet::All(ns, false),\n+                &parent_scope,\n+                false,\n+                false,\n+                ident.span,\n+            ) {\n+                let desc = match binding.res() {\n+                    Res::Def(DefKind::Macro(MacroKind::Bang), _) => {\n+                        \"a function-like macro\".to_string()\n+                    }\n+                    Res::Def(DefKind::Macro(MacroKind::Attr), _) | Res::NonMacroAttr(..) => {\n+                        format!(\"an attribute: `#[{}]`\", ident)\n+                    }\n+                    Res::Def(DefKind::Macro(MacroKind::Derive), _) => {\n+                        format!(\"a derive macro: `#[derive({})]`\", ident)\n+                    }\n+                    Res::ToolMod => {\n+                        // Don't confuse the user with tool modules.\n+                        continue;\n+                    }\n+                    Res::Def(DefKind::Trait, _) if macro_kind == MacroKind::Derive => {\n+                        \"only a trait, without a derive macro\".to_string()\n+                    }\n+                    res => format!(\n+                        \"{} {}, not {} {}\",\n+                        res.article(),\n+                        res.descr(),\n+                        macro_kind.article(),\n+                        macro_kind.descr_expected(),\n+                    ),\n+                };\n+                if let crate::NameBindingKind::Import { import, .. } = binding.kind {\n+                    if !import.span.is_dummy() {\n+                        err.span_note(\n+                            import.span,\n+                            &format!(\"`{}` is imported here, but it is {}\", ident, desc),\n+                        );\n+                        // Silence the 'unused import' warning we might get,\n+                        // since this diagnostic already covers that import.\n+                        self.record_use(ident, binding, false);\n+                        return;\n+                    }\n+                }\n+                err.note(&format!(\"`{}` is in scope, but it is {}\", ident, desc));\n+                return;\n+            }\n         }\n     }\n "}, {"sha": "84746ca2c889ce8172b33158dd4611f9c8088d1b", "filename": "src/test/ui/issues/issue-11692-2.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c31e02a24caac2a4277475a79eb2934141265dac/src%2Ftest%2Fui%2Fissues%2Fissue-11692-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c31e02a24caac2a4277475a79eb2934141265dac/src%2Ftest%2Fui%2Fissues%2Fissue-11692-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-11692-2.stderr?ref=c31e02a24caac2a4277475a79eb2934141265dac", "patch": "@@ -3,6 +3,8 @@ error: cannot find macro `test` in this scope\n    |\n LL |     concat!(test!());\n    |             ^^^^\n+   |\n+   = note: `test` is in scope, but it is an attribute: `#[test]`\n \n error: aborting due to previous error\n "}, {"sha": "14e2f66068b01f1a76535e2fd4836e901d529759", "filename": "src/test/ui/macros/issue-88206.rs", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/c31e02a24caac2a4277475a79eb2934141265dac/src%2Ftest%2Fui%2Fmacros%2Fissue-88206.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c31e02a24caac2a4277475a79eb2934141265dac/src%2Ftest%2Fui%2Fmacros%2Fissue-88206.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-88206.rs?ref=c31e02a24caac2a4277475a79eb2934141265dac", "patch": "@@ -0,0 +1,66 @@\n+// compile-flags: -Z deduplicate-diagnostics=yes\n+\n+#![warn(unused_imports)]\n+\n+use std::str::*;\n+//~^ NOTE `from_utf8` is imported here, but it is a function\n+//~| NOTE `from_utf8_mut` is imported here, but it is a function\n+//~| NOTE `from_utf8_unchecked` is imported here, but it is a function\n+\n+mod hey {\n+    pub trait Serialize {}\n+    pub trait Deserialize {}\n+\n+    pub struct X(i32);\n+}\n+\n+use hey::{Serialize, Deserialize, X};\n+//~^ NOTE `Serialize` is imported here, but it is only a trait, without a derive macro\n+//~| NOTE `Deserialize` is imported here, but it is a trait\n+//~| NOTE `X` is imported here, but it is a struct\n+\n+#[derive(Serialize)]\n+//~^ ERROR cannot find derive macro `Serialize`\n+struct A;\n+\n+#[derive(from_utf8_mut)]\n+//~^ ERROR cannot find derive macro `from_utf8_mut`\n+struct B;\n+\n+#[derive(println)]\n+//~^ ERROR cannot find derive macro `println`\n+//~| NOTE `println` is in scope, but it is a function-like macro\n+struct C;\n+\n+#[Deserialize]\n+//~^ ERROR cannot find attribute `Deserialize`\n+struct D;\n+\n+#[from_utf8_unchecked]\n+//~^ ERROR cannot find attribute `from_utf8_unchecked`\n+struct E;\n+\n+#[println]\n+//~^ ERROR cannot find attribute `println`\n+//~| NOTE `println` is in scope, but it is a function-like macro\n+struct F;\n+\n+fn main() {\n+    from_utf8!();\n+    //~^ ERROR cannot find macro `from_utf8`\n+\n+    Box!();\n+    //~^ ERROR cannot find macro `Box`\n+    //~| NOTE `Box` is in scope, but it is a struct\n+\n+    Copy!();\n+    //~^ ERROR cannot find macro `Copy`\n+    //~| NOTE `Copy` is in scope, but it is a derive macro\n+\n+    test!();\n+    //~^ ERROR cannot find macro `test`\n+    //~| NOTE `test` is in scope, but it is an attribute\n+\n+    X!();\n+    //~^ ERROR cannot find macro `X`\n+}"}, {"sha": "f7f5b564880075c9b676da0b544accbbac194092", "filename": "src/test/ui/macros/issue-88206.stderr", "status": "added", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/rust-lang/rust/blob/c31e02a24caac2a4277475a79eb2934141265dac/src%2Ftest%2Fui%2Fmacros%2Fissue-88206.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c31e02a24caac2a4277475a79eb2934141265dac/src%2Ftest%2Fui%2Fmacros%2Fissue-88206.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-88206.stderr?ref=c31e02a24caac2a4277475a79eb2934141265dac", "patch": "@@ -0,0 +1,114 @@\n+error: cannot find macro `X` in this scope\n+  --> $DIR/issue-88206.rs:64:5\n+   |\n+LL |     X!();\n+   |     ^\n+   |\n+note: `X` is imported here, but it is a struct, not a macro\n+  --> $DIR/issue-88206.rs:17:35\n+   |\n+LL | use hey::{Serialize, Deserialize, X};\n+   |                                   ^\n+\n+error: cannot find macro `test` in this scope\n+  --> $DIR/issue-88206.rs:60:5\n+   |\n+LL |     test!();\n+   |     ^^^^\n+   |\n+   = note: `test` is in scope, but it is an attribute: `#[test]`\n+\n+error: cannot find macro `Copy` in this scope\n+  --> $DIR/issue-88206.rs:56:5\n+   |\n+LL |     Copy!();\n+   |     ^^^^\n+   |\n+   = note: `Copy` is in scope, but it is a derive macro: `#[derive(Copy)]`\n+\n+error: cannot find macro `Box` in this scope\n+  --> $DIR/issue-88206.rs:52:5\n+   |\n+LL |     Box!();\n+   |     ^^^\n+   |\n+   = note: `Box` is in scope, but it is a struct, not a macro\n+\n+error: cannot find macro `from_utf8` in this scope\n+  --> $DIR/issue-88206.rs:49:5\n+   |\n+LL |     from_utf8!();\n+   |     ^^^^^^^^^\n+   |\n+note: `from_utf8` is imported here, but it is a function, not a macro\n+  --> $DIR/issue-88206.rs:5:5\n+   |\n+LL | use std::str::*;\n+   |     ^^^^^^^^^^^\n+\n+error: cannot find attribute `println` in this scope\n+  --> $DIR/issue-88206.rs:43:3\n+   |\n+LL | #[println]\n+   |   ^^^^^^^\n+   |\n+   = note: `println` is in scope, but it is a function-like macro\n+\n+error: cannot find attribute `from_utf8_unchecked` in this scope\n+  --> $DIR/issue-88206.rs:39:3\n+   |\n+LL | #[from_utf8_unchecked]\n+   |   ^^^^^^^^^^^^^^^^^^^\n+   |\n+note: `from_utf8_unchecked` is imported here, but it is a function, not an attribute\n+  --> $DIR/issue-88206.rs:5:5\n+   |\n+LL | use std::str::*;\n+   |     ^^^^^^^^^^^\n+\n+error: cannot find attribute `Deserialize` in this scope\n+  --> $DIR/issue-88206.rs:35:3\n+   |\n+LL | #[Deserialize]\n+   |   ^^^^^^^^^^^\n+   |\n+note: `Deserialize` is imported here, but it is a trait, not an attribute\n+  --> $DIR/issue-88206.rs:17:22\n+   |\n+LL | use hey::{Serialize, Deserialize, X};\n+   |                      ^^^^^^^^^^^\n+\n+error: cannot find derive macro `println` in this scope\n+  --> $DIR/issue-88206.rs:30:10\n+   |\n+LL | #[derive(println)]\n+   |          ^^^^^^^\n+   |\n+   = note: `println` is in scope, but it is a function-like macro\n+\n+error: cannot find derive macro `from_utf8_mut` in this scope\n+  --> $DIR/issue-88206.rs:26:10\n+   |\n+LL | #[derive(from_utf8_mut)]\n+   |          ^^^^^^^^^^^^^\n+   |\n+note: `from_utf8_mut` is imported here, but it is a function, not a derive macro\n+  --> $DIR/issue-88206.rs:5:5\n+   |\n+LL | use std::str::*;\n+   |     ^^^^^^^^^^^\n+\n+error: cannot find derive macro `Serialize` in this scope\n+  --> $DIR/issue-88206.rs:22:10\n+   |\n+LL | #[derive(Serialize)]\n+   |          ^^^^^^^^^\n+   |\n+note: `Serialize` is imported here, but it is only a trait, without a derive macro\n+  --> $DIR/issue-88206.rs:17:11\n+   |\n+LL | use hey::{Serialize, Deserialize, X};\n+   |           ^^^^^^^^^\n+\n+error: aborting due to 11 previous errors\n+"}, {"sha": "cbdef5f0d40a94eb2d4a705ffe70303bda06136a", "filename": "src/test/ui/macros/issue-88228.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c31e02a24caac2a4277475a79eb2934141265dac/src%2Ftest%2Fui%2Fmacros%2Fissue-88228.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c31e02a24caac2a4277475a79eb2934141265dac/src%2Ftest%2Fui%2Fmacros%2Fissue-88228.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-88228.rs?ref=c31e02a24caac2a4277475a79eb2934141265dac", "patch": "@@ -13,6 +13,7 @@ struct A;\n \n #[derive(println)]\n //~^ ERROR cannot find derive macro `println`\n+//~|`println` is in scope, but it is a function-like macro\n struct B;\n \n fn main() {"}, {"sha": "62afa67a783c9404c4288da55d8287035f1ad5b1", "filename": "src/test/ui/macros/issue-88228.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c31e02a24caac2a4277475a79eb2934141265dac/src%2Ftest%2Fui%2Fmacros%2Fissue-88228.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c31e02a24caac2a4277475a79eb2934141265dac/src%2Ftest%2Fui%2Fmacros%2Fissue-88228.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-88228.stderr?ref=c31e02a24caac2a4277475a79eb2934141265dac", "patch": "@@ -1,5 +1,5 @@\n error: cannot find macro `bla` in this scope\n-  --> $DIR/issue-88228.rs:19:5\n+  --> $DIR/issue-88228.rs:20:5\n    |\n LL |     bla!();\n    |     ^^^\n@@ -12,6 +12,8 @@ error: cannot find derive macro `println` in this scope\n    |\n LL | #[derive(println)]\n    |          ^^^^^^^\n+   |\n+   = note: `println` is in scope, but it is a function-like macro\n \n error: cannot find derive macro `Bla` in this scope\n   --> $DIR/issue-88228.rs:9:10"}, {"sha": "70900a6bc81d3a1468003c2dda68f9781d1fc505", "filename": "src/test/ui/macros/macro-path-prelude-fail-3.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c31e02a24caac2a4277475a79eb2934141265dac/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c31e02a24caac2a4277475a79eb2934141265dac/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-3.stderr?ref=c31e02a24caac2a4277475a79eb2934141265dac", "patch": "@@ -8,6 +8,8 @@ LL |     inline!();\n    |\n LL |     macro_rules! line {\n    |     ----------------- similarly named macro `line` defined here\n+   |\n+   = note: `inline` is in scope, but it is an attribute: `#[inline]`\n \n error: aborting due to previous error\n "}, {"sha": "633a6c6a0d3cb29e5182302a63ff7e85c22b144b", "filename": "src/test/ui/proc-macro/macro-namespace-reserved-2.stderr", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c31e02a24caac2a4277475a79eb2934141265dac/src%2Ftest%2Fui%2Fproc-macro%2Fmacro-namespace-reserved-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c31e02a24caac2a4277475a79eb2934141265dac/src%2Ftest%2Fui%2Fproc-macro%2Fmacro-namespace-reserved-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmacro-namespace-reserved-2.stderr?ref=c31e02a24caac2a4277475a79eb2934141265dac", "patch": "@@ -93,30 +93,40 @@ error: cannot find macro `my_macro_attr` in this scope\n    |\n LL |     my_macro_attr!();\n    |     ^^^^^^^^^^^^^\n+   |\n+   = note: `my_macro_attr` is in scope, but it is an attribute: `#[my_macro_attr]`\n \n error: cannot find macro `MyTrait` in this scope\n   --> $DIR/macro-namespace-reserved-2.rs:33:5\n    |\n LL |     MyTrait!();\n    |     ^^^^^^^\n+   |\n+   = note: `MyTrait` is in scope, but it is a derive macro: `#[derive(MyTrait)]`\n \n error: cannot find attribute `my_macro` in this scope\n   --> $DIR/macro-namespace-reserved-2.rs:38:3\n    |\n LL | #[my_macro]\n    |   ^^^^^^^^\n+   |\n+   = note: `my_macro` is in scope, but it is a function-like macro\n \n error: cannot find derive macro `my_macro` in this scope\n   --> $DIR/macro-namespace-reserved-2.rs:48:10\n    |\n LL | #[derive(my_macro)]\n    |          ^^^^^^^^\n+   |\n+   = note: `my_macro` is in scope, but it is a function-like macro\n \n error: cannot find derive macro `my_macro` in this scope\n   --> $DIR/macro-namespace-reserved-2.rs:48:10\n    |\n LL | #[derive(my_macro)]\n    |          ^^^^^^^^\n+   |\n+   = note: `my_macro` is in scope, but it is a function-like macro\n \n error: aborting due to 20 previous errors\n "}]}