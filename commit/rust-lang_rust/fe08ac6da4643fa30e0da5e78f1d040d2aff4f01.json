{"sha": "fe08ac6da4643fa30e0da5e78f1d040d2aff4f01", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlMDhhYzZkYTQ2NDNmYTMwZTBkYTVlNzhmMWQwNDBkMmFmZjRmMDE=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-05T01:26:51Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-11T01:31:38Z"}, "message": "Use `ast::Name` in `report_ambiguous_associated_type()`.", "tree": {"sha": "12d41e89c7ac2189d7b1751d798c9626488e7b03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12d41e89c7ac2189d7b1751d798c9626488e7b03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe08ac6da4643fa30e0da5e78f1d040d2aff4f01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe08ac6da4643fa30e0da5e78f1d040d2aff4f01", "html_url": "https://github.com/rust-lang/rust/commit/fe08ac6da4643fa30e0da5e78f1d040d2aff4f01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe08ac6da4643fa30e0da5e78f1d040d2aff4f01/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "482d63673cbb2cec971f85653ff5babbf9bce0ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/482d63673cbb2cec971f85653ff5babbf9bce0ce", "html_url": "https://github.com/rust-lang/rust/commit/482d63673cbb2cec971f85653ff5babbf9bce0ce"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "af0818053a4601a2e56971598022e00d6237ebaa", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fe08ac6da4643fa30e0da5e78f1d040d2aff4f01/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe08ac6da4643fa30e0da5e78f1d040d2aff4f01/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=fe08ac6da4643fa30e0da5e78f1d040d2aff4f01", "patch": "@@ -1461,7 +1461,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         span: Span,\n         type_str: &str,\n         trait_str: &str,\n-        name: &str,\n+        name: ast::Name,\n     ) {\n         let mut err = struct_span_err!(self.tcx().sess, span, E0223, \"ambiguous associated type\");\n         if let (Some(_), Ok(snippet)) = (\n@@ -1688,7 +1688,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                         span,\n                         &qself_ty.to_string(),\n                         \"Trait\",\n-                        &assoc_ident.as_str(),\n+                        assoc_ident.name,\n                     );\n                 }\n                 return Err(ErrorReported);\n@@ -1761,7 +1761,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 span,\n                 \"Type\",\n                 &path_str,\n-                &item_segment.ident.as_str(),\n+                item_segment.ident.name,\n             );\n             return tcx.types.err;\n         };"}]}