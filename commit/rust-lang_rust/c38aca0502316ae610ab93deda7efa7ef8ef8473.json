{"sha": "c38aca0502316ae610ab93deda7efa7ef8ef8473", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzOGFjYTA1MDIzMTZhZTYxMGFiOTNkZWRhN2VmYTdlZjhlZjg0NzM=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-09-30T02:13:25Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-09-30T02:20:33Z"}, "message": "`delay_span_bug` if const-checking an `async` function\n\nThis errors during AST lowering. Any errors we emit here are just noise.", "tree": {"sha": "4a68a82ccafbb7a267fc02203efd15c66017164b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a68a82ccafbb7a267fc02203efd15c66017164b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c38aca0502316ae610ab93deda7efa7ef8ef8473", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c38aca0502316ae610ab93deda7efa7ef8ef8473", "html_url": "https://github.com/rust-lang/rust/commit/c38aca0502316ae610ab93deda7efa7ef8ef8473", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c38aca0502316ae610ab93deda7efa7ef8ef8473/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25c7753eeefd3fee0b2529d88ce8362d52f60877", "url": "https://api.github.com/repos/rust-lang/rust/commits/25c7753eeefd3fee0b2529d88ce8362d52f60877", "html_url": "https://github.com/rust-lang/rust/commit/25c7753eeefd3fee0b2529d88ce8362d52f60877"}], "stats": {"total": 99, "additions": 38, "deletions": 61}, "files": [{"sha": "bee6aa60360bb95348288204d5b4f69ae25ac8dc", "filename": "compiler/rustc_mir/src/transform/check_consts/validation.rs", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c38aca0502316ae610ab93deda7efa7ef8ef8473/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c38aca0502316ae610ab93deda7efa7ef8ef8473/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=c38aca0502316ae610ab93deda7efa7ef8ef8473", "patch": "@@ -1,8 +1,8 @@\n //! The `Visitor` responsible for actually checking a `mir::Body` for invalid operations.\n \n use rustc_errors::struct_span_err;\n-use rustc_hir::{self as hir, LangItem};\n-use rustc_hir::{def_id::DefId, HirId};\n+use rustc_hir::def_id::{DefId, LocalDefId};\n+use rustc_hir::{self as hir, HirId, LangItem};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_middle::mir::visit::{MutatingUseContext, NonMutatingUseContext, PlaceContext, Visitor};\n use rustc_middle::mir::*;\n@@ -204,6 +204,13 @@ impl Validator<'mir, 'tcx> {\n     pub fn check_body(&mut self) {\n         let ConstCx { tcx, body, def_id, .. } = *self.ccx;\n \n+        // `async` functions cannot be `const fn`. This is checked during AST lowering, so there's\n+        // no need to emit duplicate errors here.\n+        if is_async_fn(tcx, def_id) || body.generator_kind.is_some() {\n+            tcx.sess.delay_span_bug(body.span, \"`async` functions cannot be `const fn`\");\n+            return;\n+        }\n+\n         // The local type and predicate checks are not free and only relevant for `const fn`s.\n         if self.const_kind() == hir::ConstContext::ConstFn {\n             // Prevent const trait methods from being annotated as `stable`.\n@@ -877,3 +884,11 @@ fn place_as_reborrow(\n fn is_int_bool_or_char(ty: Ty<'_>) -> bool {\n     ty.is_bool() || ty.is_integral() || ty.is_char()\n }\n+\n+fn is_async_fn(tcx: TyCtxt<'_>, def_id: LocalDefId) -> bool {\n+    let hir_map = tcx.hir();\n+    let hir_id = hir_map.local_def_id_to_hir_id(def_id);\n+    hir_map\n+        .fn_sig_by_hir_id(hir_id)\n+        .map_or(false, |sig| sig.header.asyncness == hir::IsAsync::Async)\n+}"}, {"sha": "b3c59734e036f7b0a57b729d99c3cd6f3026cc75", "filename": "src/test/ui/async-await/no-const-async.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c38aca0502316ae610ab93deda7efa7ef8ef8473/src%2Ftest%2Fui%2Fasync-await%2Fno-const-async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c38aca0502316ae610ab93deda7efa7ef8ef8473/src%2Ftest%2Fui%2Fasync-await%2Fno-const-async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fno-const-async.rs?ref=c38aca0502316ae610ab93deda7efa7ef8ef8473", "patch": "@@ -3,4 +3,3 @@\n \n pub const async fn x() {}\n //~^ ERROR functions cannot be both `const` and `async`\n-//~| ERROR `impl Trait` in const fn is unstable"}, {"sha": "90ec646c8c09cbb6a8e9477fdbb830e8ee313f6e", "filename": "src/test/ui/async-await/no-const-async.stderr", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c38aca0502316ae610ab93deda7efa7ef8ef8473/src%2Ftest%2Fui%2Fasync-await%2Fno-const-async.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c38aca0502316ae610ab93deda7efa7ef8ef8473/src%2Ftest%2Fui%2Fasync-await%2Fno-const-async.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fno-const-async.stderr?ref=c38aca0502316ae610ab93deda7efa7ef8ef8473", "patch": "@@ -7,15 +7,5 @@ LL | pub const async fn x() {}\n    |     |     `async` because of this\n    |     `const` because of this\n \n-error[E0723]: `impl Trait` in const fn is unstable\n-  --> $DIR/no-const-async.rs:4:24\n-   |\n-LL | pub const async fn x() {}\n-   |                        ^\n-   |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0723`."}, {"sha": "c327667f4cdc7344f1ced7f0fbf8ac6c908c7c7f", "filename": "src/test/ui/parser/fn-header-semantic-fail.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c38aca0502316ae610ab93deda7efa7ef8ef8473/src%2Ftest%2Fui%2Fparser%2Ffn-header-semantic-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c38aca0502316ae610ab93deda7efa7ef8ef8473/src%2Ftest%2Fui%2Fparser%2Ffn-header-semantic-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ffn-header-semantic-fail.rs?ref=c38aca0502316ae610ab93deda7efa7ef8ef8473", "patch": "@@ -12,7 +12,6 @@ fn main() {\n     extern \"C\" fn ff4() {} // OK.\n     const async unsafe extern \"C\" fn ff5() {} // OK.\n     //~^ ERROR functions cannot be both `const` and `async`\n-    //~| ERROR `from_generator` is not yet stable as a const fn\n \n     trait X {\n         async fn ft1(); //~ ERROR functions in traits cannot be declared `async`\n@@ -35,7 +34,6 @@ fn main() {\n         const async unsafe extern \"C\" fn ft5() {}\n         //~^ ERROR functions in traits cannot be declared `async`\n         //~| ERROR functions in traits cannot be declared const\n-        //~| ERROR `from_generator` is not yet stable as a const fn\n         //~| ERROR method `ft5` has an incompatible type for trait\n         //~| ERROR functions cannot be both `const` and `async`\n     }\n@@ -47,7 +45,6 @@ fn main() {\n         extern \"C\" fn fi4() {} // OK.\n         const async unsafe extern \"C\" fn fi5() {}\n         //~^ ERROR functions cannot be both `const` and `async`\n-        //~| ERROR `from_generator` is not yet stable as a const fn\n     }\n \n     extern {"}, {"sha": "4193b3ee695bcfd8ed1d4aba67057af38c5c9c46", "filename": "src/test/ui/parser/fn-header-semantic-fail.stderr", "status": "modified", "additions": 20, "deletions": 44, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/c38aca0502316ae610ab93deda7efa7ef8ef8473/src%2Ftest%2Fui%2Fparser%2Ffn-header-semantic-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c38aca0502316ae610ab93deda7efa7ef8ef8473/src%2Ftest%2Fui%2Fparser%2Ffn-header-semantic-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ffn-header-semantic-fail.stderr?ref=c38aca0502316ae610ab93deda7efa7ef8ef8473", "patch": "@@ -8,7 +8,7 @@ LL |     const async unsafe extern \"C\" fn ff5() {} // OK.\n    |     `const` because of this\n \n error[E0706]: functions in traits cannot be declared `async`\n-  --> $DIR/fn-header-semantic-fail.rs:18:9\n+  --> $DIR/fn-header-semantic-fail.rs:17:9\n    |\n LL |         async fn ft1();\n    |         -----^^^^^^^^^^\n@@ -19,19 +19,19 @@ LL |         async fn ft1();\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n \n error[E0379]: functions in traits cannot be declared const\n-  --> $DIR/fn-header-semantic-fail.rs:20:9\n+  --> $DIR/fn-header-semantic-fail.rs:19:9\n    |\n LL |         const fn ft3();\n    |         ^^^^^ functions in traits cannot be const\n \n error[E0379]: functions in traits cannot be declared const\n-  --> $DIR/fn-header-semantic-fail.rs:22:9\n+  --> $DIR/fn-header-semantic-fail.rs:21:9\n    |\n LL |         const async unsafe extern \"C\" fn ft5();\n    |         ^^^^^ functions in traits cannot be const\n \n error[E0706]: functions in traits cannot be declared `async`\n-  --> $DIR/fn-header-semantic-fail.rs:22:9\n+  --> $DIR/fn-header-semantic-fail.rs:21:9\n    |\n LL |         const async unsafe extern \"C\" fn ft5();\n    |         ^^^^^^-----^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -42,7 +42,7 @@ LL |         const async unsafe extern \"C\" fn ft5();\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n \n error: functions cannot be both `const` and `async`\n-  --> $DIR/fn-header-semantic-fail.rs:22:9\n+  --> $DIR/fn-header-semantic-fail.rs:21:9\n    |\n LL |         const async unsafe extern \"C\" fn ft5();\n    |         ^^^^^-^^^^^----------------------------\n@@ -51,7 +51,7 @@ LL |         const async unsafe extern \"C\" fn ft5();\n    |         `const` because of this\n \n error[E0706]: functions in traits cannot be declared `async`\n-  --> $DIR/fn-header-semantic-fail.rs:30:9\n+  --> $DIR/fn-header-semantic-fail.rs:29:9\n    |\n LL |         async fn ft1() {}\n    |         -----^^^^^^^^^^^^\n@@ -62,19 +62,19 @@ LL |         async fn ft1() {}\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n \n error[E0379]: functions in traits cannot be declared const\n-  --> $DIR/fn-header-semantic-fail.rs:33:9\n+  --> $DIR/fn-header-semantic-fail.rs:32:9\n    |\n LL |         const fn ft3() {}\n    |         ^^^^^ functions in traits cannot be const\n \n error[E0379]: functions in traits cannot be declared const\n-  --> $DIR/fn-header-semantic-fail.rs:35:9\n+  --> $DIR/fn-header-semantic-fail.rs:34:9\n    |\n LL |         const async unsafe extern \"C\" fn ft5() {}\n    |         ^^^^^ functions in traits cannot be const\n \n error[E0706]: functions in traits cannot be declared `async`\n-  --> $DIR/fn-header-semantic-fail.rs:35:9\n+  --> $DIR/fn-header-semantic-fail.rs:34:9\n    |\n LL |         const async unsafe extern \"C\" fn ft5() {}\n    |         ^^^^^^-----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -85,7 +85,7 @@ LL |         const async unsafe extern \"C\" fn ft5() {}\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n \n error: functions cannot be both `const` and `async`\n-  --> $DIR/fn-header-semantic-fail.rs:35:9\n+  --> $DIR/fn-header-semantic-fail.rs:34:9\n    |\n LL |         const async unsafe extern \"C\" fn ft5() {}\n    |         ^^^^^-^^^^^------------------------------\n@@ -94,7 +94,7 @@ LL |         const async unsafe extern \"C\" fn ft5() {}\n    |         `const` because of this\n \n error: functions cannot be both `const` and `async`\n-  --> $DIR/fn-header-semantic-fail.rs:48:9\n+  --> $DIR/fn-header-semantic-fail.rs:46:9\n    |\n LL |         const async unsafe extern \"C\" fn fi5() {}\n    |         ^^^^^-^^^^^------------------------------\n@@ -103,7 +103,7 @@ LL |         const async unsafe extern \"C\" fn fi5() {}\n    |         `const` because of this\n \n error: functions in `extern` blocks cannot have qualifiers\n-  --> $DIR/fn-header-semantic-fail.rs:54:18\n+  --> $DIR/fn-header-semantic-fail.rs:51:18\n    |\n LL |     extern {\n    |     ------ in this `extern` block\n@@ -113,7 +113,7 @@ LL |         async fn fe1();\n    |         help: remove the qualifiers: `fn`\n \n error: functions in `extern` blocks cannot have qualifiers\n-  --> $DIR/fn-header-semantic-fail.rs:55:19\n+  --> $DIR/fn-header-semantic-fail.rs:52:19\n    |\n LL |     extern {\n    |     ------ in this `extern` block\n@@ -124,7 +124,7 @@ LL |         unsafe fn fe2();\n    |         help: remove the qualifiers: `fn`\n \n error: functions in `extern` blocks cannot have qualifiers\n-  --> $DIR/fn-header-semantic-fail.rs:56:18\n+  --> $DIR/fn-header-semantic-fail.rs:53:18\n    |\n LL |     extern {\n    |     ------ in this `extern` block\n@@ -135,7 +135,7 @@ LL |         const fn fe3();\n    |         help: remove the qualifiers: `fn`\n \n error: functions in `extern` blocks cannot have qualifiers\n-  --> $DIR/fn-header-semantic-fail.rs:57:23\n+  --> $DIR/fn-header-semantic-fail.rs:54:23\n    |\n LL |     extern {\n    |     ------ in this `extern` block\n@@ -146,7 +146,7 @@ LL |         extern \"C\" fn fe4();\n    |         help: remove the qualifiers: `fn`\n \n error: functions in `extern` blocks cannot have qualifiers\n-  --> $DIR/fn-header-semantic-fail.rs:58:42\n+  --> $DIR/fn-header-semantic-fail.rs:55:42\n    |\n LL |     extern {\n    |     ------ in this `extern` block\n@@ -157,24 +157,16 @@ LL |         const async unsafe extern \"C\" fn fe5();\n    |         help: remove the qualifiers: `fn`\n \n error: functions cannot be both `const` and `async`\n-  --> $DIR/fn-header-semantic-fail.rs:58:9\n+  --> $DIR/fn-header-semantic-fail.rs:55:9\n    |\n LL |         const async unsafe extern \"C\" fn fe5();\n    |         ^^^^^-^^^^^----------------------------\n    |         |     |\n    |         |     `async` because of this\n    |         `const` because of this\n \n-error: `from_generator` is not yet stable as a const fn\n-  --> $DIR/fn-header-semantic-fail.rs:13:44\n-   |\n-LL |     const async unsafe extern \"C\" fn ff5() {} // OK.\n-   |                                            ^^\n-   |\n-   = help: add `#![feature(gen_future)]` to the crate attributes to enable\n-\n error[E0053]: method `ft1` has an incompatible type for trait\n-  --> $DIR/fn-header-semantic-fail.rs:30:24\n+  --> $DIR/fn-header-semantic-fail.rs:29:24\n    |\n LL |         async fn ft1();\n    |                       - type in trait\n@@ -189,7 +181,7 @@ LL |         async fn ft1() {}\n               found fn pointer `fn() -> impl Future`\n \n error[E0053]: method `ft5` has an incompatible type for trait\n-  --> $DIR/fn-header-semantic-fail.rs:35:48\n+  --> $DIR/fn-header-semantic-fail.rs:34:48\n    |\n LL |         const async unsafe extern \"C\" fn ft5();\n    |                                               - type in trait\n@@ -203,23 +195,7 @@ LL |         const async unsafe extern \"C\" fn ft5() {}\n    = note: expected fn pointer `unsafe extern \"C\" fn()`\n               found fn pointer `unsafe extern \"C\" fn() -> impl Future`\n \n-error: `from_generator` is not yet stable as a const fn\n-  --> $DIR/fn-header-semantic-fail.rs:35:48\n-   |\n-LL |         const async unsafe extern \"C\" fn ft5() {}\n-   |                                                ^^\n-   |\n-   = help: add `#![feature(gen_future)]` to the crate attributes to enable\n-\n-error: `from_generator` is not yet stable as a const fn\n-  --> $DIR/fn-header-semantic-fail.rs:48:48\n-   |\n-LL |         const async unsafe extern \"C\" fn fi5() {}\n-   |                                                ^^\n-   |\n-   = help: add `#![feature(gen_future)]` to the crate attributes to enable\n-\n-error: aborting due to 23 previous errors\n+error: aborting due to 20 previous errors\n \n Some errors have detailed explanations: E0053, E0379, E0706.\n For more information about an error, try `rustc --explain E0053`."}]}