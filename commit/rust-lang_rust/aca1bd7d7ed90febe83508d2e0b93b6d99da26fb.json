{"sha": "aca1bd7d7ed90febe83508d2e0b93b6d99da26fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjYTFiZDdkN2VkOTBmZWJlODM1MDhkMmUwYjkzYjZkOTlkYTI2ZmI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-11-15T19:04:02Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-11-17T21:50:15Z"}, "message": "First step for important traits UI", "tree": {"sha": "ec96e835a1508d1506e4124c9728f21e39692b8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec96e835a1508d1506e4124c9728f21e39692b8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aca1bd7d7ed90febe83508d2e0b93b6d99da26fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aca1bd7d7ed90febe83508d2e0b93b6d99da26fb", "html_url": "https://github.com/rust-lang/rust/commit/aca1bd7d7ed90febe83508d2e0b93b6d99da26fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aca1bd7d7ed90febe83508d2e0b93b6d99da26fb/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be68d34a7eac8d653f453d7174f30e8ac1f73e62", "url": "https://api.github.com/repos/rust-lang/rust/commits/be68d34a7eac8d653f453d7174f30e8ac1f73e62", "html_url": "https://github.com/rust-lang/rust/commit/be68d34a7eac8d653f453d7174f30e8ac1f73e62"}], "stats": {"total": 75, "additions": 61, "deletions": 14}, "files": [{"sha": "eed0db032fec04430d226092f4c6440923b22830", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/aca1bd7d7ed90febe83508d2e0b93b6d99da26fb/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aca1bd7d7ed90febe83508d2e0b93b6d99da26fb/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=aca1bd7d7ed90febe83508d2e0b93b6d99da26fb", "patch": "@@ -1816,8 +1816,7 @@ fn plain_summary_line(s: Option<&str>) -> String {\n \n fn document(w: &mut fmt::Formatter, cx: &Context, item: &clean::Item) -> fmt::Result {\n     document_stability(w, cx, item)?;\n-    let mut prefix = render_assoc_const_value(item);\n-    prefix.push_str(&render_spotlight_traits(item)?);\n+    let prefix = render_assoc_const_value(item);\n     document_full(w, item, cx, &prefix)?;\n     Ok(())\n }\n@@ -2267,10 +2266,15 @@ fn item_function(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n                            AbiSpace(f.abi),\n                            it.name.as_ref().unwrap(),\n                            f.generics).len();\n+    let mut extra = render_spotlight_traits(it)?;\n+    if !extra.is_empty() {\n+        extra.insert_str(0, \"<div class=\\\"important-traits\\\">\u24d8<div class=\\\"content hidden\\\">\");\n+        extra.push_str(\"</div></div>\");\n+    };\n     write!(w, \"<pre class='rust fn'>\")?;\n     render_attributes(w, it)?;\n     write!(w, \"{vis}{constness}{unsafety}{abi}fn \\\n-               {name}{generics}{decl}{where_clause}</pre>\",\n+               {name}{generics}{decl}{where_clause}</pre>{extra}\",\n            vis = VisSpace(&it.visibility),\n            constness = ConstnessSpace(f.constness),\n            unsafety = UnsafetySpace(f.unsafety),\n@@ -2282,7 +2286,8 @@ fn item_function(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n                decl: &f.decl,\n                name_len,\n                indent: 0,\n-           })?;\n+           },\n+           extra = extra)?;\n     document(w, cx, it)\n }\n \n@@ -3266,7 +3271,7 @@ fn spotlight_decl(decl: &clean::FnDecl) -> Result<String, fmt::Error> {\n                     if out.is_empty() {\n                         out.push_str(\"<span class=\\\"docblock autohide\\\">\");\n                         out.push_str(&format!(\"<h3>Important traits for {}</h3>\", impl_.for_));\n-                        out.push_str(\"<code class=\\\"spotlight\\\">\");\n+                        out.push_str(\"<code class=\\\"content\\\">\");\n                     }\n \n                     //use the \"where\" class here to make it small\n@@ -3287,7 +3292,8 @@ fn spotlight_decl(decl: &clean::FnDecl) -> Result<String, fmt::Error> {\n     }\n \n     if !out.is_empty() {\n-        out.push_str(\"</code></span>\");\n+        out.insert_str(0, \"<div class=\\\"important-traits\\\">\u24d8<div class=\\\"content hidden\\\">\");\n+        out.push_str(\"</code></span></div></div>\");\n     }\n \n     Ok(out)\n@@ -3327,7 +3333,6 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n                      trait_: Option<&clean::Trait>, show_def_docs: bool) -> fmt::Result {\n         let item_type = item.type_();\n         let name = item.name.as_ref().unwrap();\n-        let mut method_prefix: Option<String> = None;\n \n         let render_method_item: bool = match render_mode {\n             RenderMode::Normal => true,\n@@ -3342,6 +3347,7 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n                     let id = derive_id(format!(\"{}.{}\", item_type, name));\n                     let ns_id = derive_id(format!(\"{}.{}\", name, item_type.name_space()));\n                     write!(w, \"<h4 id='{}' class=\\\"{}\\\">\", id, item_type)?;\n+                    write!(w, \"{}\", spotlight_decl(decl)?)?;\n                     write!(w, \"<span id='{}' class='invisible'>\", ns_id)?;\n                     write!(w, \"<code>\")?;\n                     render_assoc_item(w, item, link.anchor(&id), ItemType::Impl)?;\n@@ -3356,7 +3362,6 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n                         render_stability_since_raw(w, item.stable_since(), outer_version)?;\n                     }\n                     write!(w, \"</span></h4>\\n\")?;\n-                    method_prefix = Some(spotlight_decl(decl)?);\n                 }\n             }\n             clean::TypedefItem(ref tydef, _) => {\n@@ -3388,11 +3393,7 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n         }\n \n         if render_method_item || render_mode == RenderMode::Normal {\n-            let mut prefix = render_assoc_const_value(item);\n-\n-            if let Some(method_prefix) = method_prefix {\n-                prefix.push_str(&method_prefix);\n-            }\n+            let prefix = render_assoc_const_value(item);\n \n             if !is_default_item {\n                 if let Some(t) = trait_ {"}, {"sha": "72512bda41ea15f38f0cf6246a76cc345fe2c86d", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/aca1bd7d7ed90febe83508d2e0b93b6d99da26fb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/aca1bd7d7ed90febe83508d2e0b93b6d99da26fb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=aca1bd7d7ed90febe83508d2e0b93b6d99da26fb", "patch": "@@ -1624,7 +1624,9 @@\n     }\n \n     onEach(document.getElementById('main').getElementsByClassName('docblock'), function(e) {\n-        e.parentNode.insertBefore(createToggle(), e);\n+        if (e.parentNode.id === \"main\") {\n+            e.parentNode.insertBefore(createToggle(), e);\n+        }\n     });\n \n     onEach(document.getElementsByClassName('docblock'), function(e) {\n@@ -1711,6 +1713,19 @@\n         }\n     });\n \n+    function showModal(content) {\n+        var modal = document.createElement('div');\n+        addClass(modal, 'modal');\n+        modal.innerHTML = '<div class=\"modal-content\">' + content + \"</div>\";\n+        document.getElementsByTagName('body')[0].appendChild(modal);\n+    }\n+\n+    onEach(document.getElementsByClassName('important-traits'), function(e) {\n+        e.onclick = function() {\n+            showModal(e.firstElementChild.innerHTML);\n+        };\n+    });\n+\n     var search_input = document.getElementsByClassName(\"search-input\")[0];\n \n     if (search_input) {"}, {"sha": "63792714d473fa9c963492e7caecda9d17eef476", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/aca1bd7d7ed90febe83508d2e0b93b6d99da26fb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/aca1bd7d7ed90febe83508d2e0b93b6d99da26fb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=aca1bd7d7ed90febe83508d2e0b93b6d99da26fb", "patch": "@@ -954,3 +954,34 @@ pre.rust {\n \tcolor: #888;\n \tfont-size: 16px;\n }\n+\n+h4 > .important-traits {\n+\tposition: absolute;\n+\tleft: -44px;\n+\ttop: 2px;\n+\tcursor: pointer;\n+}\n+\n+.modal {\n+\tposition: fixed;\n+\twidth: 100vw;\n+\theight: 100vh;\n+\tbackground-color: rgba(0,0,0,0.3);\n+\tz-index: 10000;\n+\ttop: 0;\n+\tleft: 0;\n+}\n+\n+.modal-content {\n+\tdisplay: block;\n+\tmax-width: 60%;\n+\tmin-width: 200px;\n+\tbackground-color: white;\n+\tpadding: 5px;\n+\ttop: 10%;\n+\tposition: absolute;\n+\tleft: 50%;\n+\ttransform: translate(-50%, -50%);\n+\tborder: 1px solid #999;\n+\tborder-radius: 4px;\n+}\n\\ No newline at end of file"}]}