{"sha": "7298dabdb3262c047748c4b26ce64c6c8769a7d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyOThkYWJkYjMyNjJjMDQ3NzQ4YzRiMjZjZTY0YzZjODc2OWE3ZDk=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2017-06-11T12:28:45Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2017-06-11T17:26:01Z"}, "message": "rustdoc: Stop stripping empty modules\n\nThere is no good reason to strip empty modules with no documentation and\ndoing so causes subtle problems.", "tree": {"sha": "4167eed3882790dc64e1460d0f8f1eec3b0f02b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4167eed3882790dc64e1460d0f8f1eec3b0f02b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7298dabdb3262c047748c4b26ce64c6c8769a7d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7298dabdb3262c047748c4b26ce64c6c8769a7d9", "html_url": "https://github.com/rust-lang/rust/commit/7298dabdb3262c047748c4b26ce64c6c8769a7d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7298dabdb3262c047748c4b26ce64c6c8769a7d9/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19193d6390644b5d621934bac6a33caacfb9ad31", "url": "https://api.github.com/repos/rust-lang/rust/commits/19193d6390644b5d621934bac6a33caacfb9ad31", "html_url": "https://github.com/rust-lang/rust/commit/19193d6390644b5d621934bac6a33caacfb9ad31"}], "stats": {"total": 88, "additions": 60, "deletions": 28}, "files": [{"sha": "f9166774a6eac1eefc309670d8d9ebfc982579e7", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7298dabdb3262c047748c4b26ce64c6c8769a7d9/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7298dabdb3262c047748c4b26ce64c6c8769a7d9/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=7298dabdb3262c047748c4b26ce64c6c8769a7d9", "patch": "@@ -1349,7 +1349,7 @@ impl Context {\n         // these modules are recursed into, but not rendered normally\n         // (a flag on the context).\n         if !self.render_redirect_pages {\n-            self.render_redirect_pages = maybe_ignore_item(&item);\n+            self.render_redirect_pages = item.is_stripped();\n         }\n \n         if item.is_mod() {\n@@ -1432,7 +1432,7 @@ impl Context {\n         // BTreeMap instead of HashMap to get a sorted output\n         let mut map = BTreeMap::new();\n         for item in &m.items {\n-            if maybe_ignore_item(item) { continue }\n+            if item.is_stripped() { continue }\n \n             let short = item.type_().css_class();\n             let myname = match item.name {\n@@ -1733,7 +1733,7 @@ fn item_module(w: &mut fmt::Formatter, cx: &Context,\n         if let clean::DefaultImplItem(..) = items[*i].inner {\n             return false;\n         }\n-        !maybe_ignore_item(&items[*i])\n+        !items[*i].is_stripped()\n     }).collect::<Vec<usize>>();\n \n     // the order of item types in the listing\n@@ -1902,17 +1902,6 @@ fn item_module(w: &mut fmt::Formatter, cx: &Context,\n     Ok(())\n }\n \n-fn maybe_ignore_item(it: &clean::Item) -> bool {\n-    match it.inner {\n-        clean::StrippedItem(..) => true,\n-        clean::ModuleItem(ref m) => {\n-            it.doc_value().is_none() && m.items.is_empty()\n-                                     && it.visibility != Some(clean::Public)\n-        },\n-        _ => false,\n-    }\n-}\n-\n fn short_stability(item: &clean::Item, cx: &Context, show_reason: bool) -> Vec<String> {\n     let mut stability = vec![];\n \n@@ -3332,7 +3321,7 @@ fn sidebar_module(fmt: &mut fmt::Formatter, _it: &clean::Item,\n             if let clean::DefaultImplItem(..) = it.inner {\n                 false\n             } else {\n-                !maybe_ignore_item(it) && !it.is_stripped() && it.type_() == myty\n+                !it.is_stripped() && it.type_() == myty\n             }\n         }) {\n             let (short, name) = match myty {"}, {"sha": "8f6faabd157d6738c0623ebbae04cb4c64fac587", "filename": "src/librustdoc/passes/mod.rs", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7298dabdb3262c047748c4b26ce64c6c8769a7d9/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7298dabdb3262c047748c4b26ce64c6c8769a7d9/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fmod.rs?ref=7298dabdb3262c047748c4b26ce64c6c8769a7d9", "patch": "@@ -145,20 +145,12 @@ impl<'a> fold::DocFolder for Stripper<'a> {\n             self.fold_item_recur(i)\n         };\n \n-        i.and_then(|i| {\n-            match i.inner {\n-                // emptied modules have no need to exist\n-                clean::ModuleItem(ref m)\n-                    if m.items.is_empty() &&\n-                       i.doc_value().is_none() => None,\n-                _ => {\n-                    if self.update_retained {\n-                        self.retained.insert(i.def_id);\n-                    }\n-                    Some(i)\n-                }\n+        if let Some(ref i) = i {\n+            if self.update_retained {\n+                self.retained.insert(i.def_id);\n             }\n-        })\n+        }\n+        i\n     }\n }\n "}, {"sha": "6b86af62a663a7ac3bf6cba329a6b5a3770011cb", "filename": "src/test/rustdoc/empty-mod-private.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/7298dabdb3262c047748c4b26ce64c6c8769a7d9/src%2Ftest%2Frustdoc%2Fempty-mod-private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7298dabdb3262c047748c4b26ce64c6c8769a7d9/src%2Ftest%2Frustdoc%2Fempty-mod-private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fempty-mod-private.rs?ref=7298dabdb3262c047748c4b26ce64c6c8769a7d9", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-tidy-linelength\n+// compile-flags: --no-defaults --passes collapse-docs --passes unindent-comments --passes strip-priv-imports\n+\n+// @has 'empty_mod_private/index.html' '//a[@href=\"foo/index.html\"]' 'foo'\n+// @has 'empty_mod_private/sidebar-items.js' 'foo'\n+// @matches 'empty_mod_private/foo/index.html' '//h1' 'Module empty_mod_private::foo'\n+mod foo {}\n+\n+// @has 'empty_mod_private/index.html' '//a[@href=\"bar/index.html\"]' 'bar'\n+// @has 'empty_mod_private/sidebar-items.js' 'bar'\n+// @matches 'empty_mod_private/bar/index.html' '//h1' 'Module empty_mod_private::bar'\n+mod bar {\n+    // @has 'empty_mod_private/bar/index.html' '//a[@href=\"baz/index.html\"]' 'baz'\n+    // @has 'empty_mod_private/bar/sidebar-items.js' 'baz'\n+    // @matches 'empty_mod_private/bar/baz/index.html' '//h1' 'Module empty_mod_private::bar::baz'\n+    mod baz {}\n+}"}, {"sha": "413fe161424053435b08bb098fdaa967910f12fb", "filename": "src/test/rustdoc/empty-mod-public.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7298dabdb3262c047748c4b26ce64c6c8769a7d9/src%2Ftest%2Frustdoc%2Fempty-mod-public.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7298dabdb3262c047748c4b26ce64c6c8769a7d9/src%2Ftest%2Frustdoc%2Fempty-mod-public.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fempty-mod-public.rs?ref=7298dabdb3262c047748c4b26ce64c6c8769a7d9", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// @has 'empty_mod_public/index.html' '//a[@href=\"foo/index.html\"]' 'foo'\n+// @has 'empty_mod_public/sidebar-items.js' 'foo'\n+// @matches 'empty_mod_public/foo/index.html' '//h1' 'Module empty_mod_public::foo'\n+pub mod foo {}\n+\n+// @has 'empty_mod_public/index.html' '//a[@href=\"bar/index.html\"]' 'bar'\n+// @has 'empty_mod_public/sidebar-items.js' 'bar'\n+// @matches 'empty_mod_public/bar/index.html' '//h1' 'Module empty_mod_public::bar'\n+pub mod bar {\n+    // @has 'empty_mod_public/bar/index.html' '//a[@href=\"baz/index.html\"]' 'baz'\n+    // @has 'empty_mod_public/bar/sidebar-items.js' 'baz'\n+    // @matches 'empty_mod_public/bar/baz/index.html' '//h1' 'Module empty_mod_public::bar::baz'\n+    pub mod baz {}\n+}"}]}