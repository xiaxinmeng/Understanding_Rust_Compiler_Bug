{"sha": "15b8fbdfb395315bb082eab793c4b02fa9534aee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1YjhmYmRmYjM5NTMxNWJiMDgyZWFiNzkzYzRiMDJmYTk1MzRhZWU=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2017-12-10T17:00:20Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2017-12-11T20:26:06Z"}, "message": "Added test for #46472", "tree": {"sha": "bc984f55c7b4fd4e8d2ce452da4936bfe40813da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc984f55c7b4fd4e8d2ce452da4936bfe40813da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15b8fbdfb395315bb082eab793c4b02fa9534aee", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCgAGBQJaLunfAAoJEAF2C0+fU/FUpK8QAJxJ1uOcr6CVGwI9lehTwTXE\n8AgEF4tqqhhN7kPWdTgynsn/6hy0fk5jAo1Ml9QnHzBCRhFTYNQOn3S9UQy/2iyn\nKCPF/KdGKg2b5M4onFRn1dUbxsn53By87EU1Rh/gYYVw1gcnoNKaT2ql1MHAl2Gq\nOWABCG+nACjJ9CmV2L0aj7btwwRPh6k5XZbv6kEidNwpmxogeZT1tzs2PqjAbH/p\nQMAZOzG/bdsqRGc3JctSQ1uS7o3fpe1+2W2eAxt40UVB24HVI39+xIwBm/bwwrBs\n1KT5yTw7IZJqL4PISWKH700Jfb2iRLU+9tPch/jeTAkvlpuOVUX1Y+/LphwiYu0z\nBXgITQYMatZ7SmdViHSftRVR9KuZV3sgCJM23PHEXswvKyfU2ssvl1RFYz3lF3WP\nQ/7KeIVWtEc0Bpj7ekBbucNupIZpV7/dbv2IFta2miqBr0V4i8/Gr3HSWtUcxzbO\nciNdleU/r5WTASmUgQqBTK0FtZJvIm/p6vERe01/cSz1cO74pZ8M7fEG+OiGl/Fx\nDYQySRojlAtSpEZRD7kyz65SR0szodCmE2yHFA3sDwubbZEW7jiYsNC2jtgib5IR\nVwkxkHJfyBGKBTrXpnr8lBSTtrbmN/YP8wa+5rRH+7PLqC/8wf1vFmsta99TND3j\n7E0HuyxcYlYkMcdkid3V\n=iwQ0\n-----END PGP SIGNATURE-----", "payload": "tree bc984f55c7b4fd4e8d2ce452da4936bfe40813da\nparent d78e8a730a266ce75ff1fc0f9cdc66716de78744\nauthor David Wood <david@davidtw.co> 1512925220 +0000\ncommitter David Wood <david@davidtw.co> 1513023966 +0000\n\nAdded test for #46472\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15b8fbdfb395315bb082eab793c4b02fa9534aee", "html_url": "https://github.com/rust-lang/rust/commit/15b8fbdfb395315bb082eab793c4b02fa9534aee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15b8fbdfb395315bb082eab793c4b02fa9534aee/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d78e8a730a266ce75ff1fc0f9cdc66716de78744", "url": "https://api.github.com/repos/rust-lang/rust/commits/d78e8a730a266ce75ff1fc0f9cdc66716de78744", "html_url": "https://github.com/rust-lang/rust/commit/d78e8a730a266ce75ff1fc0f9cdc66716de78744"}], "stats": {"total": 66, "additions": 65, "deletions": 1}, "files": [{"sha": "4354c16f73b7ccbb6d26d606e0bc5bc533fc49f3", "filename": "src/librustc_mir/borrow_check/error_reporting.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/15b8fbdfb395315bb082eab793c4b02fa9534aee/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15b8fbdfb395315bb082eab793c4b02fa9534aee/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs?ref=15b8fbdfb395315bb082eab793c4b02fa9534aee", "patch": "@@ -324,6 +324,7 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n         borrows: &Borrows<'cx, 'gcx, 'tcx>\n     ) {\n         let end_span = borrows.opt_region_end_span(&borrow.region);\n+        let scope_tree = borrows.scope_tree();\n         let root_place = self.prefixes(&borrow.place, PrefixSet::All).last().unwrap();\n \n         match root_place {\n@@ -359,7 +360,9 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                     borrow_span, &format!(\"`{}`\", description), Origin::Mir);\n                 err.span_label(borrow_span, \"does not live long enough\");\n                 err.span_label(drop_span, \"borrowed value only lives until here\");\n-                err.note(\"borrowed value must be valid for the static lifetime...\");\n+                self.tcx.note_and_explain_region(scope_tree, &mut err,\n+                                                 \"borrowed value must be valid for \",\n+                                                 borrow.region, \"...\");\n                 err.emit();\n             },\n             None => {"}, {"sha": "25bc702764a34b45cdbdbf3dbacc88452643f3fe", "filename": "src/librustc_mir/dataflow/impls/borrows.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15b8fbdfb395315bb082eab793c4b02fa9534aee/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15b8fbdfb395315bb082eab793c4b02fa9534aee/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs?ref=15b8fbdfb395315bb082eab793c4b02fa9534aee", "patch": "@@ -160,6 +160,8 @@ impl<'a, 'gcx, 'tcx> Borrows<'a, 'gcx, 'tcx> {\n \n     pub fn borrows(&self) -> &IndexVec<BorrowIndex, BorrowData<'tcx>> { &self.borrows }\n \n+    pub fn scope_tree(&self) -> &Rc<region::ScopeTree> { &self.scope_tree }\n+\n     pub fn location(&self, idx: BorrowIndex) -> &Location {\n         &self.borrows[idx].location\n     }"}, {"sha": "02c4dd7cb21d8fe88bfbf1da903c2ac01c6537d6", "filename": "src/test/ui/issue-46472.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/15b8fbdfb395315bb082eab793c4b02fa9534aee/src%2Ftest%2Fui%2Fissue-46472.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15b8fbdfb395315bb082eab793c4b02fa9534aee/src%2Ftest%2Fui%2Fissue-46472.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-46472.rs?ref=15b8fbdfb395315bb082eab793c4b02fa9534aee", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z emit-end-regions -Z borrowck=compare\n+\n+fn bar<'a>() -> &'a mut u32 {\n+    &mut 4\n+    //~^ ERROR borrowed value does not live long enough (Ast) [E0597]\n+    //~| ERROR borrowed value does not live long enough (Mir) [E0597]\n+}\n+\n+fn main() { }"}, {"sha": "ab35874fbb9692da809ce261db66e6693b07393f", "filename": "src/test/ui/issue-46472.stderr", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/15b8fbdfb395315bb082eab793c4b02fa9534aee/src%2Ftest%2Fui%2Fissue-46472.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/15b8fbdfb395315bb082eab793c4b02fa9534aee/src%2Ftest%2Fui%2Fissue-46472.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-46472.stderr?ref=15b8fbdfb395315bb082eab793c4b02fa9534aee", "patch": "@@ -0,0 +1,40 @@\n+error[E0597]: borrowed value does not live long enough (Ast)\n+  --> $DIR/issue-46472.rs:14:10\n+   |\n+14 |     &mut 4\n+   |          ^ does not live long enough\n+...\n+17 | }\n+   | - temporary value only lives until here\n+   |\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 13:1...\n+  --> $DIR/issue-46472.rs:13:1\n+   |\n+13 | / fn bar<'a>() -> &'a mut u32 {\n+14 | |     &mut 4\n+15 | |     //~^ ERROR borrowed value does not live long enough (Ast) [E0597]\n+16 | |     //~| ERROR borrowed value does not live long enough (Mir) [E0597]\n+17 | | }\n+   | |_^\n+\n+error[E0597]: borrowed value does not live long enough (Mir)\n+  --> $DIR/issue-46472.rs:14:10\n+   |\n+14 |     &mut 4\n+   |          ^ does not live long enough\n+...\n+17 | }\n+   |  - temporary value only lives until here\n+   |\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 13:1...\n+  --> $DIR/issue-46472.rs:13:1\n+   |\n+13 | / fn bar<'a>() -> &'a mut u32 {\n+14 | |     &mut 4\n+15 | |     //~^ ERROR borrowed value does not live long enough (Ast) [E0597]\n+16 | |     //~| ERROR borrowed value does not live long enough (Mir) [E0597]\n+17 | | }\n+   | |_^\n+\n+error: aborting due to 2 previous errors\n+"}]}