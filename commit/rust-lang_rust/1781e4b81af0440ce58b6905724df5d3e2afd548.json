{"sha": "1781e4b81af0440ce58b6905724df5d3e2afd548", "node_id": "C_kwDOAAsO6NoAKDE3ODFlNGI4MWFmMDQ0MGNlNThiNjkwNTcyNGRmNWQzZTJhZmQ1NDg", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-10-01T21:46:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-01T21:46:49Z"}, "message": "Rollup merge of #89376 - andjo403:selfProfileUseAfterDropFix, r=Mark-Simulacrum\n\nFix use after drop in self-profile with llvm events\n\nself-profile with `-Z self-profile-events=llvm` have failed with a segmentation fault due to this use after drop.\nthis type of events can be more useful now that the new passmanager is the default.", "tree": {"sha": "b6ca89d656f0a0bc5e153ea50e4961e6d428d6f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6ca89d656f0a0bc5e153ea50e4961e6d428d6f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1781e4b81af0440ce58b6905724df5d3e2afd548", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhV4HJCRBK7hj4Ov3rIwAA0dMIADQvZXkyV9l2b1TCFuVc6MWa\na1DOlXR/fXM+9HsmkmsO4ZWC3VNxyB1g/mXQpmneb2gfwiBnY5dXcwJT2+oDP8ey\nprSqw6OiV32A5XAu/OTxFk/r5alk1OmnaEQj7nbyMWXKs4GN0EVlI03oqsPhKDZ1\nHCGE8jRIiJQyKmzLH/u7U+538NpS0aHSkBxgT0TlcIQvvzT9Y1kBePgZi6nDBzay\n9QJ52pMAblybEkWJ0AeBuCG8ZA6TJb/ov+CEKyv533cGFc+n1TOuxE7hDAQjYkhw\n9ExE/GudkLpOgg/ecuTtqLraudKWjUFgNFFG+OX4awIyYQGkZs36ePWfyAfpPak=\n=2Tbc\n-----END PGP SIGNATURE-----\n", "payload": "tree b6ca89d656f0a0bc5e153ea50e4961e6d428d6f2\nparent 743e842afb043b09f8be6dacd012b46befc7b736\nparent d90934ce87352e7478f8c872a5a65363206082a0\nauthor Manish Goregaokar <manishsmail@gmail.com> 1633124809 -0700\ncommitter GitHub <noreply@github.com> 1633124809 -0700\n\nRollup merge of #89376 - andjo403:selfProfileUseAfterDropFix, r=Mark-Simulacrum\n\nFix use after drop in self-profile with llvm events\n\nself-profile with `-Z self-profile-events=llvm` have failed with a segmentation fault due to this use after drop.\nthis type of events can be more useful now that the new passmanager is the default.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1781e4b81af0440ce58b6905724df5d3e2afd548", "html_url": "https://github.com/rust-lang/rust/commit/1781e4b81af0440ce58b6905724df5d3e2afd548", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1781e4b81af0440ce58b6905724df5d3e2afd548/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "743e842afb043b09f8be6dacd012b46befc7b736", "url": "https://api.github.com/repos/rust-lang/rust/commits/743e842afb043b09f8be6dacd012b46befc7b736", "html_url": "https://github.com/rust-lang/rust/commit/743e842afb043b09f8be6dacd012b46befc7b736"}, {"sha": "d90934ce87352e7478f8c872a5a65363206082a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d90934ce87352e7478f8c872a5a65363206082a0", "html_url": "https://github.com/rust-lang/rust/commit/d90934ce87352e7478f8c872a5a65363206082a0"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "fd91eda4a01c710de69e223ceb0d249a7d7b4419", "filename": "compiler/rustc_codegen_llvm/src/back/write.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1781e4b81af0440ce58b6905724df5d3e2afd548/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1781e4b81af0440ce58b6905724df5d3e2afd548/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs?ref=1781e4b81af0440ce58b6905724df5d3e2afd548", "patch": "@@ -406,13 +406,15 @@ pub(crate) unsafe fn optimize_with_new_llvm_pass_manager(\n         None\n     };\n \n-    let llvm_selfprofiler = if cgcx.prof.llvm_recording_enabled() {\n-        let mut llvm_profiler = LlvmSelfProfiler::new(cgcx.prof.get_self_profiler().unwrap());\n-        &mut llvm_profiler as *mut _ as *mut c_void\n+    let mut llvm_profiler = if cgcx.prof.llvm_recording_enabled() {\n+        Some(LlvmSelfProfiler::new(cgcx.prof.get_self_profiler().unwrap()))\n     } else {\n-        std::ptr::null_mut()\n+        None\n     };\n \n+    let llvm_selfprofiler =\n+        llvm_profiler.as_mut().map(|s| s as *mut _ as *mut c_void).unwrap_or(std::ptr::null_mut());\n+\n     let extra_passes = config.passes.join(\",\");\n \n     // FIXME: NewPM doesn't provide a facility to pass custom InlineParams."}]}