{"sha": "dfa5e46fd56337aee6ce8473526cd8e43787289f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmYTVlNDZmZDU2MzM3YWVlNmNlODQ3MzUyNmNkOGU0Mzc4NzI4OWY=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2020-11-06T02:03:22Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2020-11-06T02:18:01Z"}, "message": "The renumber pass is long gone\n\nOriginally, there has been a dedicated pass for renumbering\nAST NodeIds to have actual values. This pass had been added by\ncommit a5ad4c379466519a0bf977864a5cdc50a7ade385.\n\nThen, later, this step was moved to where it resides now,\nmacro expansion. See commit c86c8d41a26b2037e80c9fd028a59313a78b3a66\nor PR #36438.\n\nThe comment snippet, added by the original commit, has\nsurvived the times without any change, becoming outdated\nat removal of the dedicated pass.\n\nNowadays, grepping for the next_node_id function will show up\nmultiple places in the compiler that call it, but the main\nrewriting that the comment talks about is still done in the\nexpansion step, inside an innocious looking visit_id function\nthat's called during macro invocation collection.", "tree": {"sha": "226c055b31cc62ce8aa93adba1506ff1b6355e4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/226c055b31cc62ce8aa93adba1506ff1b6355e4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfa5e46fd56337aee6ce8473526cd8e43787289f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfa5e46fd56337aee6ce8473526cd8e43787289f", "html_url": "https://github.com/rust-lang/rust/commit/dfa5e46fd56337aee6ce8473526cd8e43787289f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfa5e46fd56337aee6ce8473526cd8e43787289f/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7801d6c7cc19ab22bdebcc8efa894a564c53469", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7801d6c7cc19ab22bdebcc8efa894a564c53469", "html_url": "https://github.com/rust-lang/rust/commit/f7801d6c7cc19ab22bdebcc8efa894a564c53469"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6e7d2bab2877eadc77f0a756cf38598afe0984a9", "filename": "compiler/rustc_ast/src/node_id.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dfa5e46fd56337aee6ce8473526cd8e43787289f/compiler%2Frustc_ast%2Fsrc%2Fnode_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfa5e46fd56337aee6ce8473526cd8e43787289f/compiler%2Frustc_ast%2Fsrc%2Fnode_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fnode_id.rs?ref=dfa5e46fd56337aee6ce8473526cd8e43787289f", "patch": "@@ -13,8 +13,8 @@ rustc_data_structures::define_id_collections!(NodeMap, NodeSet, NodeId);\n pub const CRATE_NODE_ID: NodeId = NodeId::from_u32(0);\n \n /// When parsing and doing expansions, we initially give all AST nodes this AST\n-/// node value. Then later, in the renumber pass, we renumber them to have\n-/// small, positive ids.\n+/// node value. Then later, during expansion, we renumber them to have small,\n+/// positive ids.\n pub const DUMMY_NODE_ID: NodeId = NodeId::MAX;\n \n impl NodeId {"}]}