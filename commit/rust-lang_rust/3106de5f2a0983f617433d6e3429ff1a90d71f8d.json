{"sha": "3106de5f2a0983f617433d6e3429ff1a90d71f8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxMDZkZTVmMmEwOTgzZjYxNzQzM2Q2ZTM0MjlmZjFhOTBkNzFmOGQ=", "commit": {"author": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2021-01-24T00:40:29Z"}, "committer": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2021-01-29T04:30:40Z"}, "message": "Remove struct_type from union output and bump format", "tree": {"sha": "2f93ecd02c22883d3ee1b920b2a7054851d49a3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f93ecd02c22883d3ee1b920b2a7054851d49a3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3106de5f2a0983f617433d6e3429ff1a90d71f8d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEETdpCnQmiF6hBYUqdfsyTL4sscx4FAmATj3EACgkQfsyTL4ss\ncx6FbA/8CUXMKpaXELFfjBLo2wButV6E/ONLosDHdVSlR8pXX2flKqPSmLMoI3A9\nUUaRv9Xr8P2mZF7NQ+LpCNd1WG9nCg1VbC2ACYsx+HEzbSM4UgWAcIEYh0UvS6Qq\n5l+vHBQzy8TmEf3iJy8DmNvezv0kQC7IZtmodSaTxgHNOysJeAhU21y6eyFd+Xec\nbxze8miaA/864SmNKd+yErHsIVpQmLIaUihYSxkA1H5zLr6eH/MOIFPOic0l5hqS\nnQt2JnYV1a094RzQlkJl3nVFn7P92S5J/gmbEjy4BnvmbeWHLvUhNyxCZbEm68MC\niYiiY66j5Q34C9qJBLVly2IemjRdNIY0VCmQPIDM38ftcfVDz8PEQxI6wEISccpP\nXg7q+eU43Y8xzr2rrttYCV9/XtwlRroRHLSW/zCbW+amsRqfx6B28Xjb7yvyxHr6\ncqKR3QBgrX9LbjtmBTM/7iBrE9z2b21XxU6ygWCI9lsnovD16YBiqtubLCg0Ves/\nQwKiXcK0B7co/hByM2Vx959mb/5Zz/izfBoUCs3q+hWTAvCxdjqzvyWRnbzAX3VY\nLuiuHF5zyRufYfkcw19sZ8/aDCf6+mVuIkOWLYhhut4uYQFu6FZC7d+9zJ5TIroD\n8bRfWSVHj73EQ/KHvzu/y+ne1tgk5Vq76rT/w4HCENNNahiQdsM=\n=7xXt\n-----END PGP SIGNATURE-----", "payload": "tree 2f93ecd02c22883d3ee1b920b2a7054851d49a3a\nparent 74500b99783d126e330184f0392a78f8b93b73ef\nauthor Rune Tynan <runetynan@gmail.com> 1611448829 -0500\ncommitter Rune Tynan <runetynan@gmail.com> 1611894640 -0500\n\nRemove struct_type from union output and bump format\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3106de5f2a0983f617433d6e3429ff1a90d71f8d", "html_url": "https://github.com/rust-lang/rust/commit/3106de5f2a0983f617433d6e3429ff1a90d71f8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3106de5f2a0983f617433d6e3429ff1a90d71f8d/comments", "author": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74500b99783d126e330184f0392a78f8b93b73ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/74500b99783d126e330184f0392a78f8b93b73ef", "html_url": "https://github.com/rust-lang/rust/commit/74500b99783d126e330184f0392a78f8b93b73ef"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "9c4d3becbdaefa693acb640ac755238c91beb9c0", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3106de5f2a0983f617433d6e3429ff1a90d71f8d/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3106de5f2a0983f617433d6e3429ff1a90d71f8d/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=3106de5f2a0983f617433d6e3429ff1a90d71f8d", "patch": "@@ -154,7 +154,7 @@ impl From<clean::ItemKind> for ItemEnum {\n             }\n             ImportItem(i) => ItemEnum::ImportItem(i.into()),\n             StructItem(s) => ItemEnum::StructItem(s.into()),\n-            UnionItem(u) => ItemEnum::StructItem(u.into()),\n+            UnionItem(u) => ItemEnum::UnionItem(u.into()),\n             StructFieldItem(f) => ItemEnum::StructFieldItem(f.into()),\n             EnumItem(e) => ItemEnum::EnumItem(e.into()),\n             VariantItem(v) => ItemEnum::VariantItem(v.into()),\n@@ -205,11 +205,10 @@ impl From<clean::Struct> for Struct {\n     }\n }\n \n-impl From<clean::Union> for Struct {\n+impl From<clean::Union> for Union {\n     fn from(struct_: clean::Union) -> Self {\n         let clean::Union { generics, fields, fields_stripped } = struct_;\n-        Struct {\n-            struct_type: StructType::Union,\n+        Union {\n             generics: generics.into(),\n             fields_stripped,\n             fields: ids(fields),"}, {"sha": "876b1b56dee6d0ec240a55a02d2317ed22fa6aa3", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3106de5f2a0983f617433d6e3429ff1a90d71f8d/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3106de5f2a0983f617433d6e3429ff1a90d71f8d/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=3106de5f2a0983f617433d6e3429ff1a90d71f8d", "patch": "@@ -243,7 +243,7 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n                     )\n                 })\n                 .collect(),\n-            format_version: 2,\n+            format_version: 3,\n         };\n         let mut p = self.out_path.clone();\n         p.push(output.index.get(&output.root).unwrap().name.clone().unwrap());"}, {"sha": "083f99e4a681a3d67c2f05b9bf2462cc9c521c6d", "filename": "src/rustdoc-json-types/lib.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3106de5f2a0983f617433d6e3429ff1a90d71f8d/src%2Frustdoc-json-types%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3106de5f2a0983f617433d6e3429ff1a90d71f8d/src%2Frustdoc-json-types%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc-json-types%2Flib.rs?ref=3106de5f2a0983f617433d6e3429ff1a90d71f8d", "patch": "@@ -194,6 +194,7 @@ pub enum ItemEnum {\n     },\n     ImportItem(Import),\n \n+    UnionItem(Union),\n     StructItem(Struct),\n     StructFieldItem(Type),\n     EnumItem(Enum),\n@@ -238,6 +239,14 @@ pub struct Module {\n     pub items: Vec<Id>,\n }\n \n+#[derive(Clone, Debug, Serialize, Deserialize, PartialEq)]\n+pub struct Union {\n+    pub generics: Generics,\n+    pub fields_stripped: bool,\n+    pub fields: Vec<Id>,\n+    pub impls: Vec<Id>,\n+}\n+\n #[derive(Clone, Debug, Serialize, Deserialize, PartialEq)]\n pub struct Struct {\n     pub struct_type: StructType,\n@@ -270,7 +279,6 @@ pub enum StructType {\n     Plain,\n     Tuple,\n     Unit,\n-    Union,\n }\n \n #[derive(Clone, Debug, Serialize, Deserialize, PartialEq)]"}, {"sha": "ac2eb797791f33c52e29481a58a04451f906df7e", "filename": "src/test/rustdoc-json/unions/union.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3106de5f2a0983f617433d6e3429ff1a90d71f8d/src%2Ftest%2Frustdoc-json%2Funions%2Funion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3106de5f2a0983f617433d6e3429ff1a90d71f8d/src%2Ftest%2Frustdoc-json%2Funions%2Funion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Funions%2Funion.rs?ref=3106de5f2a0983f617433d6e3429ff1a90d71f8d", "patch": "@@ -0,0 +1,7 @@\n+// @has union.json \"$.index[*][?(@.name=='Union')].visibility\" \\\"public\\\"\n+// @has - \"$.index[*][?(@.name=='Union')].kind\" \\\"union\\\"\n+// @!has - \"$.index[*][?(@.name=='Union')].inner.struct_type\"\n+pub union Union {\n+    int: i32,\n+    float: f32,\n+}"}]}