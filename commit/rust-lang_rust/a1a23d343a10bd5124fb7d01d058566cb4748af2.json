{"sha": "a1a23d343a10bd5124fb7d01d058566cb4748af2", "node_id": "C_kwDOAAsO6NoAKGExYTIzZDM0M2ExMGJkNTEyNGZiN2QwMWQwNTg1NjZjYjQ3NDhhZjI", "commit": {"author": {"name": "DropDemBits", "email": "r3usrlnd@gmail.com", "date": "2022-02-15T01:41:01Z"}, "committer": {"name": "DropDemBits", "email": "r3usrlnd@gmail.com", "date": "2022-02-15T01:41:01Z"}, "message": "Apply review fixes", "tree": {"sha": "a13017637012d4bd7b1a0fe76fe8d8a0d6cced0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a13017637012d4bd7b1a0fe76fe8d8a0d6cced0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1a23d343a10bd5124fb7d01d058566cb4748af2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEosE1rSpoNOieSVDGiUkQv4PnA0cFAmILBK4ACgkQiUkQv4Pn\nA0e3IAv/S85S8m4OZ8lh+/9aAoZG8MAdSP2OSeBnMvpmlAR3QNNmjPptwk99K8JU\nyMmcHUnfvPXCMpBB1ljPCMssdKq94D+ViT+F1RLbsidBwYhvZzl5RxnZU+KKtY+/\n8TIZZPoKRUlRSecbOTFJcosLmH5/HyvfUDoRUvk8vh9k+Rfbv6bG0ROymfVF43pm\nVAuiVVS1r/r2UwFsiyHMpW7pivgGdBC4wLq0X2t0WEqsHdPQtO9rjdvrluEOB83d\n5czoqGVOmazo4nYMt2A1YJZ688rd03U0Po184A/np5lnfd/v7TZHXyLnQ11FR5mF\nMbYTUKdsY/VrbMLBxb+N1vW5Dfk6dQ9RyvrfB2JWf67lT3kNwFLa9VnWbsIJsbPg\n90MF2HdNg3BSPImRYlRXfpMQNLLsJ/K/iSUFiKZAf6HaKrL05XUV62q4iMboUitp\nM0K8iEtmqG01tEkcRmYfycozclDqk4zE66XvRg3C9fw5GNW9QX99QHfHd+XkJSIs\nEzDJFw/G\n=Jqfo\n-----END PGP SIGNATURE-----", "payload": "tree a13017637012d4bd7b1a0fe76fe8d8a0d6cced0d\nparent 86c1251afb1476137ce81b86bf1fa229eecdb5fc\nauthor DropDemBits <r3usrlnd@gmail.com> 1644889261 -0500\ncommitter DropDemBits <r3usrlnd@gmail.com> 1644889261 -0500\n\nApply review fixes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1a23d343a10bd5124fb7d01d058566cb4748af2", "html_url": "https://github.com/rust-lang/rust/commit/a1a23d343a10bd5124fb7d01d058566cb4748af2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1a23d343a10bd5124fb7d01d058566cb4748af2/comments", "author": {"login": "DropDemBits", "id": 13354275, "node_id": "MDQ6VXNlcjEzMzU0Mjc1", "avatar_url": "https://avatars.githubusercontent.com/u/13354275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DropDemBits", "html_url": "https://github.com/DropDemBits", "followers_url": "https://api.github.com/users/DropDemBits/followers", "following_url": "https://api.github.com/users/DropDemBits/following{/other_user}", "gists_url": "https://api.github.com/users/DropDemBits/gists{/gist_id}", "starred_url": "https://api.github.com/users/DropDemBits/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DropDemBits/subscriptions", "organizations_url": "https://api.github.com/users/DropDemBits/orgs", "repos_url": "https://api.github.com/users/DropDemBits/repos", "events_url": "https://api.github.com/users/DropDemBits/events{/privacy}", "received_events_url": "https://api.github.com/users/DropDemBits/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DropDemBits", "id": 13354275, "node_id": "MDQ6VXNlcjEzMzU0Mjc1", "avatar_url": "https://avatars.githubusercontent.com/u/13354275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DropDemBits", "html_url": "https://github.com/DropDemBits", "followers_url": "https://api.github.com/users/DropDemBits/followers", "following_url": "https://api.github.com/users/DropDemBits/following{/other_user}", "gists_url": "https://api.github.com/users/DropDemBits/gists{/gist_id}", "starred_url": "https://api.github.com/users/DropDemBits/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DropDemBits/subscriptions", "organizations_url": "https://api.github.com/users/DropDemBits/orgs", "repos_url": "https://api.github.com/users/DropDemBits/repos", "events_url": "https://api.github.com/users/DropDemBits/events{/privacy}", "received_events_url": "https://api.github.com/users/DropDemBits/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86c1251afb1476137ce81b86bf1fa229eecdb5fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/86c1251afb1476137ce81b86bf1fa229eecdb5fc", "html_url": "https://github.com/rust-lang/rust/commit/86c1251afb1476137ce81b86bf1fa229eecdb5fc"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "68aa741face2e43fd4982adbf040646a4bebc2b6", "filename": "crates/ide_assists/src/handlers/merge_imports.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a1a23d343a10bd5124fb7d01d058566cb4748af2/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1a23d343a10bd5124fb7d01d058566cb4748af2/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs?ref=a1a23d343a10bd5124fb7d01d058566cb4748af2", "patch": "@@ -329,7 +329,9 @@ use foo::{bar::{self}};\n use std$0::{fmt::*};\n use std::{fmt::{self, Display}};\n \",\n-            r\"use std::{fmt::{self, *, Display}};\",\n+            r\"\n+use std::{fmt::{self, *, Display}};\n+\",\n         )\n     }\n "}, {"sha": "dfaf578cb15802abbd5cb50f05854d31c933eb11", "filename": "crates/ide_db/src/helpers/merge_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a1a23d343a10bd5124fb7d01d058566cb4748af2/crates%2Fide_db%2Fsrc%2Fhelpers%2Fmerge_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1a23d343a10bd5124fb7d01d058566cb4748af2/crates%2Fide_db%2Fsrc%2Fhelpers%2Fmerge_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers%2Fmerge_imports.rs?ref=a1a23d343a10bd5124fb7d01d058566cb4748af2", "patch": "@@ -117,7 +117,7 @@ fn recursive_merge(lhs: &ast::UseTree, rhs: &ast::UseTree, merge: MergeBehavior)\n                             .map(|tree_list| tree_list.use_trees().any(|it| tree_is_self(&it)))\n                             // Glob imports aren't part of the use-tree lists,\n                             // so they need to be handled explicitly\n-                            .or_else(|| tree.star_token().is_some().then(|| false))\n+                            .or_else(|| tree.star_token().map(|_| false))\n                     };\n                     match (tree_contains_self(lhs_t), tree_contains_self(&rhs_t)) {\n                         (Some(true), None) => continue,"}]}