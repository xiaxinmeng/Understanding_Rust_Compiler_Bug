{"sha": "78365c64c8f4a0eac4699c6bdfeaa4271919c5e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4MzY1YzY0YzhmNGEwZWFjNDY5OWM2YmRmZWFhNDI3MTkxOWM1ZTA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-08-29T09:31:42Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-08-29T09:53:56Z"}, "message": "internal: slightly improve compile times\n\nAs per style guide, avoid monomorphisations", "tree": {"sha": "7315f799f31623075abcdbaa59f2e09381dd3bd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7315f799f31623075abcdbaa59f2e09381dd3bd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78365c64c8f4a0eac4699c6bdfeaa4271919c5e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78365c64c8f4a0eac4699c6bdfeaa4271919c5e0", "html_url": "https://github.com/rust-lang/rust/commit/78365c64c8f4a0eac4699c6bdfeaa4271919c5e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78365c64c8f4a0eac4699c6bdfeaa4271919c5e0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bef5e3096e1495e24a466a26aa5455d151da1c0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/bef5e3096e1495e24a466a26aa5455d151da1c0f", "html_url": "https://github.com/rust-lang/rust/commit/bef5e3096e1495e24a466a26aa5455d151da1c0f"}], "stats": {"total": 39, "additions": 21, "deletions": 18}, "files": [{"sha": "6142a0eafd065efe1cdf693984cabdd89ed9f59d", "filename": "crates/ide/src/ssr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78365c64c8f4a0eac4699c6bdfeaa4271919c5e0/crates%2Fide%2Fsrc%2Fssr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78365c64c8f4a0eac4699c6bdfeaa4271919c5e0/crates%2Fide%2Fsrc%2Fssr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fssr.rs?ref=78365c64c8f4a0eac4699c6bdfeaa4271919c5e0", "patch": "@@ -41,7 +41,7 @@ pub(crate) fn ssr_assists(\n     for (label, source_change) in assists.into_iter() {\n         let assist = Assist {\n             id,\n-            label: Label::new(label),\n+            label: Label::new(label.to_string()),\n             group: Some(GroupLabel(\"Apply SSR\".into())),\n             target: comment_range,\n             source_change,"}, {"sha": "0244f5fb291160df3043df9ec0c2b80f47ed0328", "filename": "crates/ide_assists/src/assist_context.rs", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/78365c64c8f4a0eac4699c6bdfeaa4271919c5e0/crates%2Fide_assists%2Fsrc%2Fassist_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78365c64c8f4a0eac4699c6bdfeaa4271919c5e0/crates%2Fide_assists%2Fsrc%2Fassist_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fassist_context.rs?ref=78365c64c8f4a0eac4699c6bdfeaa4271919c5e0", "patch": "@@ -131,12 +131,8 @@ impl Assists {\n         target: TextRange,\n         f: impl FnOnce(&mut AssistBuilder),\n     ) -> Option<()> {\n-        if !self.is_allowed(&id) {\n-            return None;\n-        }\n-        let label = Label::new(label.into());\n-        let assist = Assist { id, label, group: None, target, source_change: None };\n-        self.add_impl(assist, f)\n+        let mut f = Some(f);\n+        self.add_impl(None, id, label.into(), target, &mut |it| f.take().unwrap()(it))\n     }\n \n     pub(crate) fn add_group(\n@@ -146,26 +142,34 @@ impl Assists {\n         label: impl Into<String>,\n         target: TextRange,\n         f: impl FnOnce(&mut AssistBuilder),\n+    ) -> Option<()> {\n+        let mut f = Some(f);\n+        self.add_impl(Some(group), id, label.into(), target, &mut |it| f.take().unwrap()(it))\n+    }\n+\n+    fn add_impl(\n+        &mut self,\n+        group: Option<&GroupLabel>,\n+        id: AssistId,\n+        label: String,\n+        target: TextRange,\n+        f: &mut dyn FnMut(&mut AssistBuilder),\n     ) -> Option<()> {\n         if !self.is_allowed(&id) {\n             return None;\n         }\n-        let label = Label::new(label.into());\n-        let assist = Assist { id, label, group: Some(group.clone()), target, source_change: None };\n-        self.add_impl(assist, f)\n-    }\n \n-    fn add_impl(&mut self, mut assist: Assist, f: impl FnOnce(&mut AssistBuilder)) -> Option<()> {\n-        let source_change = if self.resolve.should_resolve(&assist.id) {\n+        let source_change = if self.resolve.should_resolve(&id) {\n             let mut builder = AssistBuilder::new(self.file);\n             f(&mut builder);\n             Some(builder.finish())\n         } else {\n             None\n         };\n-        assist.source_change = source_change;\n \n-        self.buf.push(assist);\n+        let label = Label::new(label.into());\n+        let group = group.cloned();\n+        self.buf.push(Assist { id, label, group, target, source_change });\n         Some(())\n     }\n "}, {"sha": "4b6d54b5eab16ecb1b0c215a75461c3ebbf6de6e", "filename": "crates/ide_db/src/label.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/78365c64c8f4a0eac4699c6bdfeaa4271919c5e0/crates%2Fide_db%2Fsrc%2Flabel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78365c64c8f4a0eac4699c6bdfeaa4271919c5e0/crates%2Fide_db%2Fsrc%2Flabel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Flabel.rs?ref=78365c64c8f4a0eac4699c6bdfeaa4271919c5e0", "patch": "@@ -29,8 +29,7 @@ impl From<Label> for String {\n }\n \n impl Label {\n-    pub fn new(label: impl Into<String>) -> Label {\n-        let label = label.into();\n+    pub fn new(label: String) -> Label {\n         assert!(label.starts_with(char::is_uppercase) && !label.ends_with('.'));\n         Label(label)\n     }"}, {"sha": "2f53b647b11128cc4a8fd12fd4d66921dff9d6ee", "filename": "crates/ide_diagnostics/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78365c64c8f4a0eac4699c6bdfeaa4271919c5e0/crates%2Fide_diagnostics%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78365c64c8f4a0eac4699c6bdfeaa4271919c5e0/crates%2Fide_diagnostics%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_diagnostics%2Fsrc%2Flib.rs?ref=78365c64c8f4a0eac4699c6bdfeaa4271919c5e0", "patch": "@@ -222,7 +222,7 @@ fn unresolved_fix(id: &'static str, label: &str, target: TextRange) -> Assist {\n     assert!(!id.contains(' '));\n     Assist {\n         id: AssistId(id, AssistKind::QuickFix),\n-        label: Label::new(label),\n+        label: Label::new(label.to_string()),\n         group: None,\n         target,\n         source_change: None,"}]}