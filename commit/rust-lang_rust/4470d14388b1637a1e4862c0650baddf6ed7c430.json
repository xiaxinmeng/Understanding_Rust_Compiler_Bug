{"sha": "4470d14388b1637a1e4862c0650baddf6ed7c430", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0NzBkMTQzODhiMTYzN2ExZTQ4NjJjMDY1MGJhZGRmNmVkN2M0MzA=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-27T13:58:07Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-27T14:20:42Z"}, "message": "Convert vec::truncate to a method.", "tree": {"sha": "738705dec20cdf0c143b6355a48e1143e8234831", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/738705dec20cdf0c143b6355a48e1143e8234831"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4470d14388b1637a1e4862c0650baddf6ed7c430", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4470d14388b1637a1e4862c0650baddf6ed7c430", "html_url": "https://github.com/rust-lang/rust/commit/4470d14388b1637a1e4862c0650baddf6ed7c430", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4470d14388b1637a1e4862c0650baddf6ed7c430/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29b0649a6af8c4821f0d69c544569a9529a68431", "url": "https://api.github.com/repos/rust-lang/rust/commits/29b0649a6af8c4821f0d69c544569a9529a68431", "html_url": "https://github.com/rust-lang/rust/commit/29b0649a6af8c4821f0d69c544569a9529a68431"}], "stats": {"total": 27, "additions": 11, "deletions": 16}, "files": [{"sha": "2cc278612076689d115f1fc98cf8df0e6a6054f3", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/4470d14388b1637a1e4862c0650baddf6ed7c430/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4470d14388b1637a1e4862c0650baddf6ed7c430/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=4470d14388b1637a1e4862c0650baddf6ed7c430", "patch": "@@ -438,20 +438,6 @@ pub fn consume_reverse<T>(mut v: ~[T], f: &fn(uint, v: T)) {\n     }\n }\n \n-/// Shorten a vector, dropping excess elements.\n-pub fn truncate<T>(v: &mut ~[T], newlen: uint) {\n-    do as_mut_buf(*v) |p, oldlen| {\n-        assert!(newlen <= oldlen);\n-        unsafe {\n-            // This loop is optimized out for non-drop types.\n-            for uint::range(newlen, oldlen) |i| {\n-                ptr::replace_ptr(ptr::mut_offset(p, i), intrinsics::uninit());\n-            }\n-        }\n-    }\n-    unsafe { raw::set_len(&mut *v, newlen); }\n-}\n-\n /**\n  * Remove consecutive repeated elements from a vector; if the vector is\n  * sorted, this removes all duplicates.\n@@ -1820,9 +1806,18 @@ impl<T> OwnedVector<T> for ~[T] {\n         self.pop()\n     }\n \n-    #[inline]\n+    /// Shorten a vector, dropping excess elements.\n     fn truncate(&mut self, newlen: uint) {\n-        truncate(self, newlen);\n+        do as_mut_buf(*self) |p, oldlen| {\n+            assert!(newlen <= oldlen);\n+            unsafe {\n+                // This loop is optimized out for non-drop types.\n+                for uint::range(newlen, oldlen) |i| {\n+                    ptr::replace_ptr(ptr::mut_offset(p, i), intrinsics::uninit());\n+                }\n+            }\n+        }\n+        unsafe { raw::set_len(self, newlen); }\n     }\n \n     #[inline]"}]}