{"sha": "04a8daaa33ad8aa068ccc24011c0844d06ba0ee7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0YThkYWFhMzNhZDhhYTA2OGNjYzI0MDExYzA4NDRkMDZiYTBlZTc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-20T22:46:08Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-20T22:46:08Z"}, "message": "Remove unused cursor positions", "tree": {"sha": "51fe9bb1f0d937f0b3f2d3c81b14d6d48d75e97e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51fe9bb1f0d937f0b3f2d3c81b14d6d48d75e97e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04a8daaa33ad8aa068ccc24011c0844d06ba0ee7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04a8daaa33ad8aa068ccc24011c0844d06ba0ee7", "html_url": "https://github.com/rust-lang/rust/commit/04a8daaa33ad8aa068ccc24011c0844d06ba0ee7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04a8daaa33ad8aa068ccc24011c0844d06ba0ee7/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f83785a94a817bc3cb649e960a5941e8e076d41a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f83785a94a817bc3cb649e960a5941e8e076d41a", "html_url": "https://github.com/rust-lang/rust/commit/f83785a94a817bc3cb649e960a5941e8e076d41a"}], "stats": {"total": 20, "additions": 7, "deletions": 13}, "files": [{"sha": "867a0f0bdc71abaf67048806cddfbeb36030f558", "filename": "crates/ra_ide/src/typing.rs", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/04a8daaa33ad8aa068ccc24011c0844d06ba0ee7/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04a8daaa33ad8aa068ccc24011c0844d06ba0ee7/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftyping.rs?ref=04a8daaa33ad8aa068ccc24011c0844d06ba0ee7", "patch": "@@ -111,7 +111,7 @@ fn on_dot_typed(file: &SourceFile, offset: TextSize) -> Option<SingleFileChange>\n     Some(SingleFileChange {\n         label: \"reindent dot\".to_string(),\n         edit: TextEdit::replace(TextRange::new(offset - current_indent_len, offset), target_indent),\n-        cursor_position: Some(offset + target_indent_len - current_indent_len + TextSize::of('.')),\n+        cursor_position: None,\n     })\n }\n \n@@ -130,7 +130,7 @@ fn on_arrow_typed(file: &SourceFile, offset: TextSize) -> Option<SingleFileChang\n     Some(SingleFileChange {\n         label: \"add space after return type\".to_string(),\n         edit: TextEdit::insert(after_arrow, \" \".to_string()),\n-        cursor_position: Some(after_arrow),\n+        cursor_position: None,\n     })\n }\n \n@@ -140,29 +140,23 @@ mod tests {\n \n     use super::*;\n \n-    fn do_type_char(char_typed: char, before: &str) -> Option<(String, SingleFileChange)> {\n+    fn do_type_char(char_typed: char, before: &str) -> Option<String> {\n         let (offset, before) = extract_offset(before);\n         let edit = TextEdit::insert(offset, char_typed.to_string());\n         let mut before = before.to_string();\n         edit.apply(&mut before);\n         let parse = SourceFile::parse(&before);\n         on_char_typed_inner(&parse.tree(), offset, char_typed).map(|it| {\n             it.edit.apply(&mut before);\n-            (before.to_string(), it)\n+            before.to_string()\n         })\n     }\n \n     fn type_char(char_typed: char, before: &str, after: &str) {\n-        let (actual, file_change) = do_type_char(char_typed, before)\n+        let actual = do_type_char(char_typed, before)\n             .unwrap_or_else(|| panic!(\"typing `{}` did nothing\", char_typed));\n \n-        if after.contains(\"<|>\") {\n-            let (offset, after) = extract_offset(after);\n-            assert_eq_text!(&after, &actual);\n-            assert_eq!(file_change.cursor_position, Some(offset))\n-        } else {\n-            assert_eq_text!(after, &actual);\n-        }\n+        assert_eq_text!(after, &actual);\n     }\n \n     fn type_char_noop(char_typed: char, before: &str) {\n@@ -350,6 +344,6 @@ fn foo() {\n \n     #[test]\n     fn adds_space_after_return_type() {\n-        type_char('>', \"fn foo() -<|>{ 92 }\", \"fn foo() -><|> { 92 }\")\n+        type_char('>', \"fn foo() -<|>{ 92 }\", \"fn foo() -> { 92 }\")\n     }\n }"}]}