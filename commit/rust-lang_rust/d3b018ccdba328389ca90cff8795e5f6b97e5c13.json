{"sha": "d3b018ccdba328389ca90cff8795e5f6b97e5c13", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYjAxOGNjZGJhMzI4Mzg5Y2E5MGNmZjg3OTVlNWY2Yjk3ZTVjMTM=", "commit": {"author": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-10-09T14:54:47Z"}, "committer": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-10-20T03:11:31Z"}, "message": "suggest to trim prefix in nested meta items", "tree": {"sha": "d493df91a67de510cff740dc7de0faf77d536ec5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d493df91a67de510cff740dc7de0faf77d536ec5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3b018ccdba328389ca90cff8795e5f6b97e5c13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3b018ccdba328389ca90cff8795e5f6b97e5c13", "html_url": "https://github.com/rust-lang/rust/commit/d3b018ccdba328389ca90cff8795e5f6b97e5c13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3b018ccdba328389ca90cff8795e5f6b97e5c13/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30c669819342dc09d6bd29dc72d0ff85381b71d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/30c669819342dc09d6bd29dc72d0ff85381b71d2", "html_url": "https://github.com/rust-lang/rust/commit/30c669819342dc09d6bd29dc72d0ff85381b71d2"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "8f9f91979a42ffd4b86a3d29046993175bd82fe8", "filename": "src/libsyntax/attr/builtin.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d3b018ccdba328389ca90cff8795e5f6b97e5c13/src%2Flibsyntax%2Fattr%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b018ccdba328389ca90cff8795e5f6b97e5c13/src%2Flibsyntax%2Fattr%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fbuiltin.rs?ref=d3b018ccdba328389ca90cff8795e5f6b97e5c13", "patch": "@@ -596,7 +596,17 @@ fn find_deprecation_generic<'a, I>(sess: &ParseSess,\n                     *item = Some(v);\n                     true\n                 } else {\n-                    span_err!(diagnostic, meta.span, E0551, \"incorrect meta item\");\n+                    if let Some(lit) = meta.name_value_literal() {\n+                        handle_errors(\n+                            sess,\n+                            lit.span,\n+                            AttrError::UnsupportedLiteral,\n+                            lit.node.is_bytestr(),\n+                        );\n+                    } else {\n+                        span_err!(diagnostic, meta.span, E0551, \"incorrect meta item\");\n+                    }\n+\n                     false\n                 }\n             };\n@@ -622,7 +632,7 @@ fn find_deprecation_generic<'a, I>(sess: &ParseSess,\n                     }\n                     NestedMetaItemKind::Literal(lit) => {\n                         let is_bytestr = lit.node.is_bytestr();\n-                        handle_errors(sess, meta.span, AttrError::UnsupportedLiteral, is_bytestr);\n+                        handle_errors(sess, lit.span, AttrError::UnsupportedLiteral, is_bytestr);\n                         continue 'outer\n                     }\n                 }\n@@ -682,7 +692,12 @@ pub fn find_repr_attrs(sess: &ParseSess, attr: &Attribute) -> Vec<ReprAttr> {\n             mark_used(attr);\n             for item in items {\n                 if !item.is_meta_item() {\n-                    handle_errors(sess, item.span, AttrError::UnsupportedLiteral, false);\n+                    let (span, is_bytestr) = if let Some(lit) = item.literal() {\n+                        (lit.span, lit.node.is_bytestr())\n+                    } else {\n+                        (item.span, false)\n+                    };\n+                    handle_errors(sess, span, AttrError::UnsupportedLiteral, is_bytestr);\n                     continue\n                 }\n "}, {"sha": "5404420988c35a930666693a60d1f4f2675e3536", "filename": "src/libsyntax/attr/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d3b018ccdba328389ca90cff8795e5f6b97e5c13/src%2Flibsyntax%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b018ccdba328389ca90cff8795e5f6b97e5c13/src%2Flibsyntax%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fmod.rs?ref=d3b018ccdba328389ca90cff8795e5f6b97e5c13", "patch": "@@ -219,6 +219,15 @@ impl MetaItem {\n         name_from_path(&self.ident)\n     }\n \n+    // #[attribute(name = \"value\")]\n+    //             ^^^^^^^^^^^^^^\n+    pub fn name_value_literal(&self) -> Option<&Lit> {\n+        match &self.node {\n+            MetaItemKind::NameValue(v) => Some(v),\n+            _ => None,\n+        }\n+    }\n+\n     pub fn value_str(&self) -> Option<Symbol> {\n         match self.node {\n             MetaItemKind::NameValue(ref v) => {"}]}