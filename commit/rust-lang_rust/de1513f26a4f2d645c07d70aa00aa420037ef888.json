{"sha": "de1513f26a4f2d645c07d70aa00aa420037ef888", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMTUxM2YyNmE0ZjJkNjQ1YzA3ZDcwYWEwMGFhNDIwMDM3ZWY4ODg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-05-15T20:40:01Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-05-19T03:00:51Z"}, "message": "port interner to use dvec", "tree": {"sha": "982bcd5dd6a5cbda9f9c1d2fbd3bf347a7e500b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/982bcd5dd6a5cbda9f9c1d2fbd3bf347a7e500b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de1513f26a4f2d645c07d70aa00aa420037ef888", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de1513f26a4f2d645c07d70aa00aa420037ef888", "html_url": "https://github.com/rust-lang/rust/commit/de1513f26a4f2d645c07d70aa00aa420037ef888", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de1513f26a4f2d645c07d70aa00aa420037ef888/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8418da1b6b0aba1864270090d65e1c670115d99", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8418da1b6b0aba1864270090d65e1c670115d99", "html_url": "https://github.com/rust-lang/rust/commit/b8418da1b6b0aba1864270090d65e1c670115d99"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "89078bfaa3636d13c20c2aa0f2e80fc328c0b862", "filename": "src/librustsyntax/util/interner.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/de1513f26a4f2d645c07d70aa00aa420037ef888/src%2Flibrustsyntax%2Futil%2Finterner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de1513f26a4f2d645c07d70aa00aa420037ef888/src%2Flibrustsyntax%2Futil%2Finterner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Futil%2Finterner.rs?ref=de1513f26a4f2d645c07d70aa00aa420037ef888", "patch": "@@ -3,25 +3,26 @@\n // type, and vice versa.\n import std::map;\n import std::map::{hashmap, hashfn, eqfn};\n+import dvec::{dvec, extensions};\n \n type interner<T> =\n     {map: hashmap<T, uint>,\n-     mut vect: [T],\n+     vect: dvec<T>,\n      hasher: hashfn<T>,\n      eqer: eqfn<T>};\n \n fn mk<T: copy>(hasher: hashfn<T>, eqer: eqfn<T>) -> interner<T> {\n     let m = map::hashmap::<T, uint>(hasher, eqer);\n-    ret {map: m, mut vect: [], hasher: hasher, eqer: eqer};\n+    ret {map: m, vect: dvec(), hasher: hasher, eqer: eqer};\n }\n \n fn intern<T: copy>(itr: interner<T>, val: T) -> uint {\n     alt itr.map.find(val) {\n       some(idx) { ret idx; }\n       none {\n-        let new_idx = vec::len::<T>(itr.vect);\n+        let new_idx = itr.vect.len();\n         itr.map.insert(val, new_idx);\n-        itr.vect += [val];\n+        itr.vect.push(val);\n         ret new_idx;\n       }\n     }\n@@ -32,8 +33,8 @@ fn intern<T: copy>(itr: interner<T>, val: T) -> uint {\n // where we first check a pred and then rely on it, ceasing to fail is ok.\n pure fn get<T: copy>(itr: interner<T>, idx: uint) -> T {\n     unchecked {\n-        itr.vect[idx]\n+        itr.vect.get_elt(idx)\n     }\n }\n \n-fn len<T>(itr: interner<T>) -> uint { ret vec::len(itr.vect); }\n+fn len<T>(itr: interner<T>) -> uint { ret itr.vect.len(); }"}]}