{"sha": "3948de3143d06cc3056b6b8f0d18cb3e1468ae03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5NDhkZTMxNDNkMDZjYzMwNTZiNmI4ZjBkMThjYjNlMTQ2OGFlMDM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-11-15T10:18:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-15T10:18:45Z"}, "message": "Merge #2255\n\n2255: Add convenience method for testing r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "01f180b8475b7a1ac7b4aa550beea556f3c23847", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01f180b8475b7a1ac7b4aa550beea556f3c23847"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3948de3143d06cc3056b6b8f0d18cb3e1468ae03", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdznuFCRBK7hj4Ov3rIwAAdHIIAAnKWmYtSOyK2lh03IdN8IE8\n/zLaRMHI70X2MP/nyJx9xx54Fh7KzkGt3LySpadxnGZzbQW92olqx5tzUcZ7PtkW\nlI5tW6YBLqoAInMg0+9SDN3NK7SaNu/03ipjQgt1T/OVgfTZ5r6dzs7XSovPIN6Q\na5Q2b93smhBsDFiVqSrp6j5iFIiir6WrO1Ykh8w0bu4AcsqBcXaD9/KepVp59sUl\n0Mck4OP/jLYV7yVPyNhE+YBWbxknZ+nUZbKNw7/Brs+FPUTTYzDM2gSVcFjq+78m\nBbQj0WrJrXbXJLIPcAoUl8ISTSFhyrU/furiGHeMcHbzz0AtbG5UgWeFW3rF9Co=\n=764i\n-----END PGP SIGNATURE-----\n", "payload": "tree 01f180b8475b7a1ac7b4aa550beea556f3c23847\nparent e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac\nparent 5766ceab0629acc4464dcc57d00d9cc5c12f1c6b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1573813125 +0000\ncommitter GitHub <noreply@github.com> 1573813125 +0000\n\nMerge #2255\n\n2255: Add convenience method for testing r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3948de3143d06cc3056b6b8f0d18cb3e1468ae03", "html_url": "https://github.com/rust-lang/rust/commit/3948de3143d06cc3056b6b8f0d18cb3e1468ae03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3948de3143d06cc3056b6b8f0d18cb3e1468ae03/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "html_url": "https://github.com/rust-lang/rust/commit/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac"}, {"sha": "5766ceab0629acc4464dcc57d00d9cc5c12f1c6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5766ceab0629acc4464dcc57d00d9cc5c12f1c6b", "html_url": "https://github.com/rust-lang/rust/commit/5766ceab0629acc4464dcc57d00d9cc5c12f1c6b"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "ade187629bd05a41af046269cd7dbbe67105087d", "filename": "crates/ra_db/src/fixture.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3948de3143d06cc3056b6b8f0d18cb3e1468ae03/crates%2Fra_db%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3948de3143d06cc3056b6b8f0d18cb3e1468ae03/crates%2Fra_db%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Ffixture.rs?ref=3948de3143d06cc3056b6b8f0d18cb3e1468ae03", "patch": "@@ -8,8 +8,8 @@ use rustc_hash::FxHashMap;\n use test_utils::{extract_offset, parse_fixture, CURSOR_MARKER};\n \n use crate::{\n-    CrateGraph, Edition, FileId, FilePosition, RelativePathBuf, SourceDatabaseExt, SourceRoot,\n-    SourceRootId,\n+    CrateGraph, CrateId, Edition, FileId, FilePosition, RelativePathBuf, SourceDatabaseExt,\n+    SourceRoot, SourceRootId,\n };\n \n pub const WORKSPACE: SourceRootId = SourceRootId(0);\n@@ -33,6 +33,14 @@ pub trait WithFixture: Default + SourceDatabaseExt + 'static {\n         let pos = with_files(&mut db, fixture);\n         (db, pos.unwrap())\n     }\n+\n+    fn test_crate(&self) -> CrateId {\n+        let crate_graph = self.crate_graph();\n+        let mut it = crate_graph.iter();\n+        let res = it.next().unwrap();\n+        assert!(it.next().is_none());\n+        res\n+    }\n }\n \n impl<DB: SourceDatabaseExt + Default + 'static> WithFixture for DB {}"}, {"sha": "83eef821f7645c078a9c7dcfcb79fa347a06d05f", "filename": "crates/ra_hir_def/src/nameres/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3948de3143d06cc3056b6b8f0d18cb3e1468ae03/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3948de3143d06cc3056b6b8f0d18cb3e1468ae03/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=3948de3143d06cc3056b6b8f0d18cb3e1468ae03", "patch": "@@ -798,7 +798,7 @@ mod tests {\n \n     fn do_limited_resolve(code: &str, limit: u32, poison_limit: u32) -> CrateDefMap {\n         let (db, _file_id) = TestDB::with_single_file(&code);\n-        let krate = db.crate_graph().iter().next().unwrap();\n+        let krate = db.test_crate();\n \n         let def_map = {\n             let edition = db.crate_graph().edition(krate);"}, {"sha": "903a2277193874c6bf7f28d77666dd2e4f540d91", "filename": "crates/ra_hir_def/src/nameres/tests/incremental.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3948de3143d06cc3056b6b8f0d18cb3e1468ae03/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests%2Fincremental.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3948de3143d06cc3056b6b8f0d18cb3e1468ae03/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests%2Fincremental.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests%2Fincremental.rs?ref=3948de3143d06cc3056b6b8f0d18cb3e1468ae03", "patch": "@@ -1,12 +1,12 @@\n use std::sync::Arc;\n \n-use ra_db::{SourceDatabase, SourceDatabaseExt};\n+use ra_db::SourceDatabaseExt;\n \n use super::*;\n \n fn check_def_map_is_not_recomputed(initial: &str, file_change: &str) {\n     let (mut db, pos) = TestDB::with_position(initial);\n-    let krate = db.crate_graph().iter().next().unwrap();\n+    let krate = db.test_crate();\n     {\n         let events = db.log_executed(|| {\n             db.crate_def_map(krate);\n@@ -111,7 +111,7 @@ fn typing_inside_a_macro_should_not_invalidate_def_map() {\n         m!(X);\n         \",\n     );\n-    let krate = db.crate_graph().iter().next().unwrap();\n+    let krate = db.test_crate();\n     {\n         let events = db.log_executed(|| {\n             let crate_def_map = db.crate_def_map(krate);"}, {"sha": "eb7b85c07c0275db363159358db212b405034904", "filename": "crates/ra_hir_def/src/nameres/tests/mod_resolution.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3948de3143d06cc3056b6b8f0d18cb3e1468ae03/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests%2Fmod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3948de3143d06cc3056b6b8f0d18cb3e1468ae03/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests%2Fmod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests%2Fmod_resolution.rs?ref=3948de3143d06cc3056b6b8f0d18cb3e1468ae03", "patch": "@@ -656,7 +656,7 @@ fn unresolved_module_diagnostics() {\n         //- /foo.rs\n         \",\n     );\n-    let krate = db.crate_graph().iter().next().unwrap();\n+    let krate = db.test_crate();\n \n     let crate_def_map = db.crate_def_map(krate);\n "}]}