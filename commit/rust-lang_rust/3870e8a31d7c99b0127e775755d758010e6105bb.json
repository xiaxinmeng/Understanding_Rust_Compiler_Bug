{"sha": "3870e8a31d7c99b0127e775755d758010e6105bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4NzBlOGEzMWQ3Yzk5YjAxMjdlNzc1NzU1ZDc1ODAxMGU2MTA1YmI=", "commit": {"author": {"name": "Deadbeef", "email": "fee1-dead-beef@protonmail.com", "date": "2021-05-26T09:51:02Z"}, "committer": {"name": "Deadbeef", "email": "fee1-dead-beef@protonmail.com", "date": "2021-05-26T14:21:44Z"}, "message": "Document `From` impls for cow.rs", "tree": {"sha": "6130593269b5a0338433d6df3ddbddc6c55b2487", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6130593269b5a0338433d6df3ddbddc6c55b2487"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3870e8a31d7c99b0127e775755d758010e6105bb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEErZiERmmtiO2FTkTyyGmC8u3gwSgFAmCuWX8ACgkQyGmC8u3g\nwShu9w/+MzYrFWczjwj423DJmX3XL86YFI4jTt4aMO+T7JzRgmF/Yv1z1wQd4RL9\nKrMARpP16ZfrDkxwI9+JNIOhZm6AAy0YiGZUeTB0inLU0FxK/rK1Rm28Z7PBXlPz\nTlISIq513jAkr+MzRzOxYoCb21N/nbwnMr7QmpXUiL5EmMaDugV+G1/DUoTh81Kb\nXr3/uCsTaZ6hn6aPvf6+gQ9HtxoQe03QpooWoOfWIIotQIKFprbJs+sXieTbAuHT\nqjTOTOoYseBT4BMbuG6jedtTE2TDidWCpCV2EKN1BrAxWcKCXcX/dTl8wJ32sX7z\nScAQ97ZqAisj/ZMudR0hv15K1Z/NRbd3oe8HZ1EU/h5EWAo6F5eVJe13yFdv/RCH\nNMK5vIKSZcqgmpgwkwQ2qmE8s5JmLtzIx4xrPy3J6TRXdjaVGZykihg8xrYyHJpy\n7zZ6FORAzpaxbjwkvyOyIr6RU7tmW9PP9NDrilVo8mr/7UTDTjJPZrr82pkXFWtu\nRwgkqSlipScfpohTJS0Bl7US4G0I5M5HnBMRIVxY8pbVVLHDkTosA3q58LxfDRqM\nDWd76Ww62BDpR2wb4Wrz+xu3LotUAfZxb34Wt5021UDXnkKNlYBZVPyHzQPRmZLl\ntx2/ytuv4pvCiyxnVuWR6/HqlTVjE/dPaxbc4dYPf+5JnhlnxCo=\n=Lj9B\n-----END PGP SIGNATURE-----", "payload": "tree 6130593269b5a0338433d6df3ddbddc6c55b2487\nparent 54bdfa125722c9ee6fadb61818f861b1102fd300\nauthor Deadbeef <fee1-dead-beef@protonmail.com> 1622022662 +0800\ncommitter Deadbeef <fee1-dead-beef@protonmail.com> 1622038904 +0000\n\nDocument `From` impls for cow.rs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3870e8a31d7c99b0127e775755d758010e6105bb", "html_url": "https://github.com/rust-lang/rust/commit/3870e8a31d7c99b0127e775755d758010e6105bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3870e8a31d7c99b0127e775755d758010e6105bb/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54bdfa125722c9ee6fadb61818f861b1102fd300", "url": "https://api.github.com/repos/rust-lang/rust/commits/54bdfa125722c9ee6fadb61818f861b1102fd300", "html_url": "https://github.com/rust-lang/rust/commit/54bdfa125722c9ee6fadb61818f861b1102fd300"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "64943a273c9a591b9c1fb84da7de15a81c478c3d", "filename": "library/alloc/src/vec/cow.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3870e8a31d7c99b0127e775755d758010e6105bb/library%2Falloc%2Fsrc%2Fvec%2Fcow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3870e8a31d7c99b0127e775755d758010e6105bb/library%2Falloc%2Fsrc%2Fvec%2Fcow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fcow.rs?ref=3870e8a31d7c99b0127e775755d758010e6105bb", "patch": "@@ -5,20 +5,38 @@ use super::Vec;\n \n #[stable(feature = \"cow_from_vec\", since = \"1.8.0\")]\n impl<'a, T: Clone> From<&'a [T]> for Cow<'a, [T]> {\n+    /// Creates a [`Borrowed`] variant of [`Cow`]\n+    /// from a slice.\n+    ///\n+    /// This conversion does not allocate or clone the data.\n+    ///\n+    /// [`Borrowed`]: crate::borrow::Cow::Borrowed\n     fn from(s: &'a [T]) -> Cow<'a, [T]> {\n         Cow::Borrowed(s)\n     }\n }\n \n #[stable(feature = \"cow_from_vec\", since = \"1.8.0\")]\n impl<'a, T: Clone> From<Vec<T>> for Cow<'a, [T]> {\n+    /// Creates an [`Owned`] variant of [`Cow`]\n+    /// from an owned instance of [`Vec`].\n+    ///\n+    /// This conversion does not allocate or clone the data.\n+    ///\n+    /// [`Owned`]: crate::borrow::Cow::Owned\n     fn from(v: Vec<T>) -> Cow<'a, [T]> {\n         Cow::Owned(v)\n     }\n }\n \n #[stable(feature = \"cow_from_vec_ref\", since = \"1.28.0\")]\n impl<'a, T: Clone> From<&'a Vec<T>> for Cow<'a, [T]> {\n+    /// Creates a [`Borrowed`] variant of [`Cow`]\n+    /// from a reference to [`Vec`].\n+    ///\n+    /// This conversion does not allocate or clone the data.\n+    ///\n+    /// [`Borrowed`]: crate::borrow::Cow::Borrowed\n     fn from(v: &'a Vec<T>) -> Cow<'a, [T]> {\n         Cow::Borrowed(v.as_slice())\n     }"}]}