{"sha": "3c22e51e7f6debd96af76f36aa8b090c40b8acb6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMjJlNTFlN2Y2ZGViZDk2YWY3NmYzNmFhOGIwOTBjNDBiOGFjYjY=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-01-25T01:33:52Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-02-02T12:20:57Z"}, "message": "Make generator transform move resume arg around\n\nThe resume arg is passed as argument `_2` and needs to be moved to the\n`Yield`s target `Place`", "tree": {"sha": "afa2fe27a57705c4e3631b9b1d710d0d34161b96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afa2fe27a57705c4e3631b9b1d710d0d34161b96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c22e51e7f6debd96af76f36aa8b090c40b8acb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c22e51e7f6debd96af76f36aa8b090c40b8acb6", "html_url": "https://github.com/rust-lang/rust/commit/3c22e51e7f6debd96af76f36aa8b090c40b8acb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c22e51e7f6debd96af76f36aa8b090c40b8acb6/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c069a066e50598ef230ba71ed5c5bcf596beb90", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c069a066e50598ef230ba71ed5c5bcf596beb90", "html_url": "https://github.com/rust-lang/rust/commit/3c069a066e50598ef230ba71ed5c5bcf596beb90"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "c0fefd60f83bc80df7561712f68449f54d5f40c2", "filename": "src/librustc_mir/transform/generator.rs", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/3c22e51e7f6debd96af76f36aa8b090c40b8acb6/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c22e51e7f6debd96af76f36aa8b090c40b8acb6/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs?ref=3c22e51e7f6debd96af76f36aa8b090c40b8acb6", "patch": "@@ -192,9 +192,10 @@ const RETURNED: usize = GeneratorSubsts::RETURNED;\n /// Generator has been poisoned\n const POISONED: usize = GeneratorSubsts::POISONED;\n \n-struct SuspensionPoint {\n+struct SuspensionPoint<'tcx> {\n     state: usize,\n     resume: BasicBlock,\n+    resume_arg: Place<'tcx>,\n     drop: Option<BasicBlock>,\n     storage_liveness: liveness::LiveVarSet,\n }\n@@ -216,7 +217,7 @@ struct TransformVisitor<'tcx> {\n     storage_liveness: FxHashMap<BasicBlock, liveness::LiveVarSet>,\n \n     // A list of suspension points, generated during the transform\n-    suspension_points: Vec<SuspensionPoint>,\n+    suspension_points: Vec<SuspensionPoint<'tcx>>,\n \n     // The original RETURN_PLACE local\n     new_ret_local: Local,\n@@ -303,8 +304,8 @@ impl MutVisitor<'tcx> for TransformVisitor<'tcx> {\n                 Operand::Move(Place::from(self.new_ret_local)),\n                 None,\n             )),\n-            TerminatorKind::Yield { ref value, resume, drop } => {\n-                Some((VariantIdx::new(0), Some(resume), value.clone(), drop))\n+            TerminatorKind::Yield { ref value, resume, resume_arg, drop } => {\n+                Some((VariantIdx::new(0), Some((resume, resume_arg)), value.clone(), drop))\n             }\n             _ => None,\n         };\n@@ -319,13 +320,14 @@ impl MutVisitor<'tcx> for TransformVisitor<'tcx> {\n                     self.make_state(state_idx, v),\n                 )),\n             });\n-            let state = if let Some(resume) = resume {\n+            let state = if let Some((resume, resume_arg)) = resume {\n                 // Yield\n                 let state = 3 + self.suspension_points.len();\n \n                 self.suspension_points.push(SuspensionPoint {\n                     state,\n                     resume,\n+                    resume_arg,\n                     drop,\n                     storage_liveness: self.storage_liveness.get(&block).unwrap().clone(),\n                 });\n@@ -1063,7 +1065,7 @@ fn create_cases<'tcx, F>(\n     target: F,\n ) -> Vec<(usize, BasicBlock)>\n where\n-    F: Fn(&SuspensionPoint) -> Option<BasicBlock>,\n+    F: Fn(&SuspensionPoint<'tcx>) -> Option<BasicBlock>,\n {\n     let source_info = source_info(body);\n \n@@ -1085,6 +1087,16 @@ where\n                     }\n                 }\n \n+                // Move the resume argument to the destination place of the `Yield` terminator\n+                let resume_arg = Local::new(2); // 0 = return, 1 = self\n+                statements.push(Statement {\n+                    source_info,\n+                    kind: StatementKind::Assign(box (\n+                        point.resume_arg,\n+                        Rvalue::Use(Operand::Move(resume_arg.into())),\n+                    )),\n+                });\n+\n                 // Then jump to the real target\n                 body.basic_blocks_mut().push(BasicBlockData {\n                     statements,\n@@ -1163,7 +1175,7 @@ impl<'tcx> MirPass<'tcx> for StateTransform {\n         };\n         transform.visit_body(body);\n \n-        // Update our MIR struct to reflect the changed we've made\n+        // Update our MIR struct to reflect the changes we've made\n         body.yield_ty = None;\n         body.arg_count = 2; // self, resume arg\n         body.spread_arg = None;"}]}