{"sha": "dd698fc3f7090b7781504566a8b82cf2c3d62420", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNjk4ZmMzZjcwOTBiNzc4MTUwNDU2NmE4YjgyY2YyYzNkNjI0MjA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-02T06:48:08Z"}, "committer": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-02T06:48:08Z"}, "message": "Merge #1468\n\n1468: Use inline snapshots in complete_path r=matklad a=funkill\n\nRelates to #1127 \n\nCo-authored-by: funkill2 <funkill2@gmail.com>", "tree": {"sha": "1f0f3fce9284ce52210edfc8985815b5d0f18d26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f0f3fce9284ce52210edfc8985815b5d0f18d26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd698fc3f7090b7781504566a8b82cf2c3d62420", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd698fc3f7090b7781504566a8b82cf2c3d62420", "html_url": "https://github.com/rust-lang/rust/commit/dd698fc3f7090b7781504566a8b82cf2c3d62420", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd698fc3f7090b7781504566a8b82cf2c3d62420/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128", "url": "https://api.github.com/repos/rust-lang/rust/commits/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128", "html_url": "https://github.com/rust-lang/rust/commit/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128"}, {"sha": "c596cd133c894ca084dcba5a3502438b605c0515", "url": "https://api.github.com/repos/rust-lang/rust/commits/c596cd133c894ca084dcba5a3502438b605c0515", "html_url": "https://github.com/rust-lang/rust/commit/c596cd133c894ca084dcba5a3502438b605c0515"}], "stats": {"total": 796, "additions": 366, "deletions": 430}, "files": [{"sha": "a41cab35979529f40b316820ef7dc6eb29b768f8", "filename": "crates/ra_ide_api/src/completion/complete_path.rs", "status": "modified", "additions": 366, "deletions": 157, "changes": 523, "blob_url": "https://github.com/rust-lang/rust/blob/dd698fc3f7090b7781504566a8b82cf2c3d62420/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd698fc3f7090b7781504566a8b82cf2c3d62420/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=dd698fc3f7090b7781504566a8b82cf2c3d62420", "patch": "@@ -74,10 +74,11 @@ pub(super) fn complete_path(acc: &mut Completions, ctx: &CompletionContext) {\n mod tests {\n     use test_utils::covers;\n \n-    use crate::completion::{CompletionKind, check_completion, do_completion};\n+    use crate::completion::{CompletionKind, do_completion, CompletionItem};\n+    use insta::assert_debug_snapshot_matches;\n \n-    fn check_reference_completion(code: &str, expected_completions: &str) {\n-        check_completion(code, expected_completions, CompletionKind::Reference);\n+    fn do_reference_completion(code: &str) -> Vec<CompletionItem> {\n+        do_completion(code, CompletionKind::Reference)\n     }\n \n     #[test]\n@@ -115,227 +116,435 @@ mod tests {\n \n     #[test]\n     fn completes_mod_with_docs() {\n-        check_reference_completion(\n-            \"mod_with_docs\",\n-            r\"\n-            use self::my<|>;\n-\n-            /// Some simple\n-            /// docs describing `mod my`.\n-            mod my {\n-                struct Bar;\n-            }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                use self::my<|>;\n+\n+                /// Some simple\n+                /// docs describing `mod my`.\n+                mod my {\n+                    struct Bar;\n+                }\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"my\",\n+        source_range: [27; 29),\n+        delete: [27; 29),\n+        insert: \"my\",\n+        kind: Module,\n+        documentation: Documentation(\n+            \"Some simple\\ndocs describing `mod my`.\",\n+        ),\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_use_item_starting_with_self() {\n-        check_reference_completion(\n-            \"use_item_starting_with_self\",\n-            r\"\n-            use self::m::<|>;\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                use self::m::<|>;\n \n-            mod m {\n-                struct Bar;\n-            }\n-            \",\n+                mod m {\n+                    struct Bar;\n+                }\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"Bar\",\n+        source_range: [30; 30),\n+        delete: [30; 30),\n+        insert: \"Bar\",\n+        kind: Struct,\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_use_item_starting_with_crate() {\n-        check_reference_completion(\n-            \"use_item_starting_with_crate\",\n-            \"\n-            //- /lib.rs\n-            mod foo;\n-            struct Spam;\n-            //- /foo.rs\n-            use crate::Sp<|>\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                \"\n+                //- /lib.rs\n+                mod foo;\n+                struct Spam;\n+                //- /foo.rs\n+                use crate::Sp<|>\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"Spam\",\n+        source_range: [11; 13),\n+        delete: [11; 13),\n+        insert: \"Spam\",\n+        kind: Struct,\n+    },\n+    CompletionItem {\n+        label: \"foo\",\n+        source_range: [11; 13),\n+        delete: [11; 13),\n+        insert: \"foo\",\n+        kind: Module,\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_nested_use_tree() {\n-        check_reference_completion(\n-            \"nested_use_tree\",\n-            \"\n-            //- /lib.rs\n-            mod foo;\n-            struct Spam;\n-            //- /foo.rs\n-            use crate::{Sp<|>};\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                \"\n+                //- /lib.rs\n+                mod foo;\n+                struct Spam;\n+                //- /foo.rs\n+                use crate::{Sp<|>};\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"Spam\",\n+        source_range: [12; 14),\n+        delete: [12; 14),\n+        insert: \"Spam\",\n+        kind: Struct,\n+    },\n+    CompletionItem {\n+        label: \"foo\",\n+        source_range: [12; 14),\n+        delete: [12; 14),\n+        insert: \"foo\",\n+        kind: Module,\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_deeply_nested_use_tree() {\n-        check_reference_completion(\n-            \"deeply_nested_use_tree\",\n-            \"\n-            //- /lib.rs\n-            mod foo;\n-            pub mod bar {\n-                pub mod baz {\n-                    pub struct Spam;\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                \"\n+                //- /lib.rs\n+                mod foo;\n+                pub mod bar {\n+                    pub mod baz {\n+                        pub struct Spam;\n+                    }\n                 }\n-            }\n-            //- /foo.rs\n-            use crate::{bar::{baz::Sp<|>}};\n-            \",\n+                //- /foo.rs\n+                use crate::{bar::{baz::Sp<|>}};\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"Spam\",\n+        source_range: [23; 25),\n+        delete: [23; 25),\n+        insert: \"Spam\",\n+        kind: Struct,\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_enum_variant() {\n-        check_reference_completion(\n-            \"enum_variant\",\n-            \"\n-            //- /lib.rs\n-            /// An enum\n-            enum E {\n-                /// Foo Variant\n-                Foo,\n-                /// Bar Variant with i32\n-                Bar(i32)\n-            }\n-            fn foo() { let _ = E::<|> }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                \"\n+                //- /lib.rs\n+                /// An enum\n+                enum E {\n+                    /// Foo Variant\n+                    Foo,\n+                    /// Bar Variant with i32\n+                    Bar(i32)\n+                }\n+                fn foo() { let _ = E::<|> }\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"Bar\",\n+        source_range: [116; 116),\n+        delete: [116; 116),\n+        insert: \"Bar\",\n+        kind: EnumVariant,\n+        detail: \"(i32)\",\n+        documentation: Documentation(\n+            \"Bar Variant with i32\",\n+        ),\n+    },\n+    CompletionItem {\n+        label: \"Foo\",\n+        source_range: [116; 116),\n+        delete: [116; 116),\n+        insert: \"Foo\",\n+        kind: EnumVariant,\n+        detail: \"()\",\n+        documentation: Documentation(\n+            \"Foo Variant\",\n+        ),\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_enum_variant_with_details() {\n-        check_reference_completion(\n-            \"enum_variant_with_details\",\n-            \"\n-            //- /lib.rs\n-            struct S { field: u32 }\n-            /// An enum\n-            enum E {\n-                /// Foo Variant (empty)\n-                Foo,\n-                /// Bar Variant with i32 and u32\n-                Bar(i32, u32),\n-                ///\n-                S(S),\n-            }\n-            fn foo() { let _ = E::<|> }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                \"\n+                //- /lib.rs\n+                struct S { field: u32 }\n+                /// An enum\n+                enum E {\n+                    /// Foo Variant (empty)\n+                    Foo,\n+                    /// Bar Variant with i32 and u32\n+                    Bar(i32, u32),\n+                    ///\n+                    S(S),\n+                }\n+                fn foo() { let _ = E::<|> }\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"Bar\",\n+        source_range: [180; 180),\n+        delete: [180; 180),\n+        insert: \"Bar\",\n+        kind: EnumVariant,\n+        detail: \"(i32, u32)\",\n+        documentation: Documentation(\n+            \"Bar Variant with i32 and u32\",\n+        ),\n+    },\n+    CompletionItem {\n+        label: \"Foo\",\n+        source_range: [180; 180),\n+        delete: [180; 180),\n+        insert: \"Foo\",\n+        kind: EnumVariant,\n+        detail: \"()\",\n+        documentation: Documentation(\n+            \"Foo Variant (empty)\",\n+        ),\n+    },\n+    CompletionItem {\n+        label: \"S\",\n+        source_range: [180; 180),\n+        delete: [180; 180),\n+        insert: \"S\",\n+        kind: EnumVariant,\n+        detail: \"(S)\",\n+        documentation: Documentation(\n+            \"\",\n+        ),\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_struct_associated_method() {\n-        check_reference_completion(\n-            \"struct_associated_method\",\n-            \"\n-            //- /lib.rs\n-            /// A Struct\n-            struct S;\n-\n-            impl S {\n-                /// An associated method\n-                fn m() { }\n-            }\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                \"\n+                //- /lib.rs\n+                /// A Struct\n+                struct S;\n+\n+                impl S {\n+                    /// An associated method\n+                    fn m() { }\n+                }\n \n-            fn foo() { let _ = S::<|> }\n-            \",\n+                fn foo() { let _ = S::<|> }\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"m\",\n+        source_range: [100; 100),\n+        delete: [100; 100),\n+        insert: \"m()$0\",\n+        kind: Function,\n+        detail: \"fn m()\",\n+        documentation: Documentation(\n+            \"An associated method\",\n+        ),\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_struct_associated_const() {\n-        check_reference_completion(\n-            \"struct_associated_const\",\n-            \"\n-            //- /lib.rs\n-            /// A Struct\n-            struct S;\n-\n-            impl S {\n-                /// An associated const\n-                const C: i32 = 42;\n-            }\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                \"\n+                //- /lib.rs\n+                /// A Struct\n+                struct S;\n+\n+                impl S {\n+                    /// An associated const\n+                    const C: i32 = 42;\n+                }\n \n-            fn foo() { let _ = S::<|> }\n-            \",\n+                fn foo() { let _ = S::<|> }\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"C\",\n+        source_range: [107; 107),\n+        delete: [107; 107),\n+        insert: \"C\",\n+        kind: Const,\n+        detail: \"const C: i32 = 42;\",\n+        documentation: Documentation(\n+            \"An associated const\",\n+        ),\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_struct_associated_type() {\n-        check_reference_completion(\n-            \"struct_associated_type\",\n-            \"\n-            //- /lib.rs\n-            /// A Struct\n-            struct S;\n-\n-            impl S {\n-                /// An associated type\n-                type T = i32;\n-            }\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                \"\n+                //- /lib.rs\n+                /// A Struct\n+                struct S;\n+\n+                impl S {\n+                    /// An associated type\n+                    type T = i32;\n+                }\n \n-            fn foo() { let _ = S::<|> }\n-            \",\n+                fn foo() { let _ = S::<|> }\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"T\",\n+        source_range: [101; 101),\n+        delete: [101; 101),\n+        insert: \"T\",\n+        kind: TypeAlias,\n+        detail: \"type T = i32;\",\n+        documentation: Documentation(\n+            \"An associated type\",\n+        ),\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_enum_associated_method() {\n-        check_reference_completion(\n-            \"enum_associated_method\",\n-            \"\n-            //- /lib.rs\n-            /// An enum\n-            enum S {};\n-\n-            impl S {\n-                /// An associated method\n-                fn m() { }\n-            }\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                \"\n+                //- /lib.rs\n+                /// An enum\n+                enum S {};\n+\n+                impl S {\n+                    /// An associated method\n+                    fn m() { }\n+                }\n \n-            fn foo() { let _ = S::<|> }\n-            \",\n+                fn foo() { let _ = S::<|> }\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"m\",\n+        source_range: [100; 100),\n+        delete: [100; 100),\n+        insert: \"m()$0\",\n+        kind: Function,\n+        detail: \"fn m()\",\n+        documentation: Documentation(\n+            \"An associated method\",\n+        ),\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_union_associated_method() {\n-        check_reference_completion(\n-            \"union_associated_method\",\n-            \"\n-            //- /lib.rs\n-            /// A union\n-            union U {};\n-\n-            impl U {\n-                /// An associated method\n-                fn m() { }\n-            }\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                \"\n+                //- /lib.rs\n+                /// A union\n+                union U {};\n+\n+                impl U {\n+                    /// An associated method\n+                    fn m() { }\n+                }\n \n-            fn foo() { let _ = U::<|> }\n-            \",\n+                fn foo() { let _ = U::<|> }\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"m\",\n+        source_range: [101; 101),\n+        delete: [101; 101),\n+        insert: \"m()$0\",\n+        kind: Function,\n+        detail: \"fn m()\",\n+        documentation: Documentation(\n+            \"An associated method\",\n+        ),\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_use_paths_across_crates() {\n-        check_reference_completion(\n-            \"completes_use_paths_across_crates\",\n-            \"\n-            //- /main.rs\n-            use foo::<|>;\n-\n-            //- /foo/lib.rs\n-            pub mod bar {\n-                pub struct S;\n-            }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                \"\n+                //- /main.rs\n+                use foo::<|>;\n+\n+                //- /foo/lib.rs\n+                pub mod bar {\n+                    pub struct S;\n+                }\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"bar\",\n+        source_range: [9; 9),\n+        delete: [9; 9),\n+        insert: \"bar\",\n+        kind: Module,\n+    },\n+]\"###\n         );\n     }\n }"}, {"sha": "113deafb13077b11ffd8cf1ae85d9825c742f2c7", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__completes_use_paths_across_crates.snap", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_use_paths_across_crates.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_use_paths_across_crates.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_use_paths_across_crates.snap?ref=f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128", "patch": "@@ -1,15 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.108690807Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"bar\",\n-        source_range: [9; 9),\n-        delete: [9; 9),\n-        insert: \"bar\",\n-        kind: Module,\n-    },\n-]"}, {"sha": "aacdeb7639d394cd847de083958487fc05b52ccd", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__deeply_nested_use_tree.snap", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__deeply_nested_use_tree.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__deeply_nested_use_tree.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__deeply_nested_use_tree.snap?ref=f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128", "patch": "@@ -1,15 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.085633034Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"Spam\",\n-        source_range: [23; 25),\n-        delete: [23; 25),\n-        insert: \"Spam\",\n-        kind: Struct,\n-    },\n-]"}, {"sha": "ee6518fc83f6538df3fa6b06e7d38740efc4d26f", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__enum_associated_method.snap", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__enum_associated_method.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__enum_associated_method.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__enum_associated_method.snap?ref=f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128", "patch": "@@ -1,19 +0,0 @@\n----\n-created: \"2019-06-29T10:30:34.110468474Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"m\",\n-        source_range: [100; 100),\n-        delete: [100; 100),\n-        insert: \"m()$0\",\n-        kind: Function,\n-        detail: \"fn m()\",\n-        documentation: Documentation(\n-            \"An associated method\",\n-        ),\n-    },\n-]"}, {"sha": "e40217ca83ac7cebe6aa6f4f93151c984023356c", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__enum_variant.snap", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__enum_variant.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__enum_variant.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__enum_variant.snap?ref=f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128", "patch": "@@ -1,30 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.090178265Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"Bar\",\n-        source_range: [116; 116),\n-        delete: [116; 116),\n-        insert: \"Bar\",\n-        kind: EnumVariant,\n-        detail: \"(i32)\",\n-        documentation: Documentation(\n-            \"Bar Variant with i32\",\n-        ),\n-    },\n-    CompletionItem {\n-        label: \"Foo\",\n-        source_range: [116; 116),\n-        delete: [116; 116),\n-        insert: \"Foo\",\n-        kind: EnumVariant,\n-        detail: \"()\",\n-        documentation: Documentation(\n-            \"Foo Variant\",\n-        ),\n-    },\n-]"}, {"sha": "e09d7988a3e45031f432cc390c547e3160c200a8", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__enum_variant_with_details.snap", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__enum_variant_with_details.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__enum_variant_with_details.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__enum_variant_with_details.snap?ref=f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128", "patch": "@@ -1,41 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.091325331Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"Bar\",\n-        source_range: [180; 180),\n-        delete: [180; 180),\n-        insert: \"Bar\",\n-        kind: EnumVariant,\n-        detail: \"(i32, u32)\",\n-        documentation: Documentation(\n-            \"Bar Variant with i32 and u32\",\n-        ),\n-    },\n-    CompletionItem {\n-        label: \"Foo\",\n-        source_range: [180; 180),\n-        delete: [180; 180),\n-        insert: \"Foo\",\n-        kind: EnumVariant,\n-        detail: \"()\",\n-        documentation: Documentation(\n-            \"Foo Variant (empty)\",\n-        ),\n-    },\n-    CompletionItem {\n-        label: \"S\",\n-        source_range: [180; 180),\n-        delete: [180; 180),\n-        insert: \"S\",\n-        kind: EnumVariant,\n-        detail: \"(S)\",\n-        documentation: Documentation(\n-            \"\",\n-        ),\n-    },\n-]"}, {"sha": "f2b26e3930219327f5fa1bc1e20103588d0c2616", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__mod_with_docs.snap", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__mod_with_docs.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__mod_with_docs.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__mod_with_docs.snap?ref=f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128", "patch": "@@ -1,18 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.093689514Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"my\",\n-        source_range: [23; 25),\n-        delete: [23; 25),\n-        insert: \"my\",\n-        kind: Module,\n-        documentation: Documentation(\n-            \"Some simple\\ndocs describing `mod my`.\",\n-        ),\n-    },\n-]"}, {"sha": "4c143d28e8776a0c7e75f9d125db5f13097aefd2", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__nested_use_tree.snap", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__nested_use_tree.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__nested_use_tree.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__nested_use_tree.snap?ref=f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128", "patch": "@@ -1,22 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.099358768Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"Spam\",\n-        source_range: [12; 14),\n-        delete: [12; 14),\n-        insert: \"Spam\",\n-        kind: Struct,\n-    },\n-    CompletionItem {\n-        label: \"foo\",\n-        source_range: [12; 14),\n-        delete: [12; 14),\n-        insert: \"foo\",\n-        kind: Module,\n-    },\n-]"}, {"sha": "f7bc6177cbc62748d6bcbc9ac6bd0a4a9f24d09e", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__struct_associated_const.snap", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__struct_associated_const.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__struct_associated_const.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__struct_associated_const.snap?ref=f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128", "patch": "@@ -1,19 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.101474826Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"C\",\n-        source_range: [107; 107),\n-        delete: [107; 107),\n-        insert: \"C\",\n-        kind: Const,\n-        detail: \"const C: i32 = 42;\",\n-        documentation: Documentation(\n-            \"An associated const\",\n-        ),\n-    },\n-]"}, {"sha": "45080a802c0b07f8a8637bf3154c9f2d6e86c061", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__struct_associated_method.snap", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__struct_associated_method.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__struct_associated_method.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__struct_associated_method.snap?ref=f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128", "patch": "@@ -1,19 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.102351365Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"m\",\n-        source_range: [100; 100),\n-        delete: [100; 100),\n-        insert: \"m()$0\",\n-        kind: Function,\n-        detail: \"fn m()\",\n-        documentation: Documentation(\n-            \"An associated method\",\n-        ),\n-    },\n-]"}, {"sha": "f40065286c043a0cb926c88eb493d7ba32ed966e", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__struct_associated_type.snap", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__struct_associated_type.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__struct_associated_type.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__struct_associated_type.snap?ref=f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128", "patch": "@@ -1,19 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.105188762Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"T\",\n-        source_range: [101; 101),\n-        delete: [101; 101),\n-        insert: \"T\",\n-        kind: TypeAlias,\n-        detail: \"type T = i32;\",\n-        documentation: Documentation(\n-            \"An associated type\",\n-        ),\n-    },\n-]"}, {"sha": "1c1a250f4b21330233bc6590dd11000dccc878d4", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__union_associated_method.snap", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__union_associated_method.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__union_associated_method.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__union_associated_method.snap?ref=f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128", "patch": "@@ -1,19 +0,0 @@\n----\n-created: \"2019-06-29T10:37:44.968500164Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"m\",\n-        source_range: [101; 101),\n-        delete: [101; 101),\n-        insert: \"m()$0\",\n-        kind: Function,\n-        detail: \"fn m()\",\n-        documentation: Documentation(\n-            \"An associated method\",\n-        ),\n-    },\n-]"}, {"sha": "17e831c84096437316a76baa9e1e49ccd3191ba7", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__use_item_starting_with_crate.snap", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__use_item_starting_with_crate.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__use_item_starting_with_crate.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__use_item_starting_with_crate.snap?ref=f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128", "patch": "@@ -1,22 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.105336210Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"Spam\",\n-        source_range: [11; 13),\n-        delete: [11; 13),\n-        insert: \"Spam\",\n-        kind: Struct,\n-    },\n-    CompletionItem {\n-        label: \"foo\",\n-        source_range: [11; 13),\n-        delete: [11; 13),\n-        insert: \"foo\",\n-        kind: Module,\n-    },\n-]"}, {"sha": "d1abc6b5bbce9c1fd6d81ea898a2beb668f665b8", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__use_item_starting_with_self.snap", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__use_item_starting_with_self.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__use_item_starting_with_self.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__use_item_starting_with_self.snap?ref=f06e3efbb1e8cfc2b5b3bd9d8c163a5a64e05128", "patch": "@@ -1,15 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.106923266Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"Bar\",\n-        source_range: [26; 26),\n-        delete: [26; 26),\n-        insert: \"Bar\",\n-        kind: Struct,\n-    },\n-]"}]}