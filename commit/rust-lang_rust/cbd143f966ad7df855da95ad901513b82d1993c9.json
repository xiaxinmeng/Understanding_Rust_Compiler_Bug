{"sha": "cbd143f966ad7df855da95ad901513b82d1993c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiZDE0M2Y5NjZhZDdkZjg1NWRhOTVhZDkwMTUxM2I4MmQxOTkzYzk=", "commit": {"author": {"name": "Ilyong Cho", "email": "ilyoan@gmail.com", "date": "2013-08-30T05:05:57Z"}, "committer": {"name": "Ilyong Cho", "email": "ilyoan@gmail.com", "date": "2013-09-02T02:55:54Z"}, "message": "turn off android ndk asm pass", "tree": {"sha": "31b3963e5dc1b973c9f5e6f6b631f97bdd99a677", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31b3963e5dc1b973c9f5e6f6b631f97bdd99a677"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbd143f966ad7df855da95ad901513b82d1993c9", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbd143f966ad7df855da95ad901513b82d1993c9", "html_url": "https://github.com/rust-lang/rust/commit/cbd143f966ad7df855da95ad901513b82d1993c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbd143f966ad7df855da95ad901513b82d1993c9/comments", "author": {"login": "ILyoan", "id": 2672194, "node_id": "MDQ6VXNlcjI2NzIxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2672194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ILyoan", "html_url": "https://github.com/ILyoan", "followers_url": "https://api.github.com/users/ILyoan/followers", "following_url": "https://api.github.com/users/ILyoan/following{/other_user}", "gists_url": "https://api.github.com/users/ILyoan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ILyoan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ILyoan/subscriptions", "organizations_url": "https://api.github.com/users/ILyoan/orgs", "repos_url": "https://api.github.com/users/ILyoan/repos", "events_url": "https://api.github.com/users/ILyoan/events{/privacy}", "received_events_url": "https://api.github.com/users/ILyoan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ILyoan", "id": 2672194, "node_id": "MDQ6VXNlcjI2NzIxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2672194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ILyoan", "html_url": "https://github.com/ILyoan", "followers_url": "https://api.github.com/users/ILyoan/followers", "following_url": "https://api.github.com/users/ILyoan/following{/other_user}", "gists_url": "https://api.github.com/users/ILyoan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ILyoan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ILyoan/subscriptions", "organizations_url": "https://api.github.com/users/ILyoan/orgs", "repos_url": "https://api.github.com/users/ILyoan/repos", "events_url": "https://api.github.com/users/ILyoan/events{/privacy}", "received_events_url": "https://api.github.com/users/ILyoan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73a28e595c2aacf38c12a56807547e7cda6839ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/73a28e595c2aacf38c12a56807547e7cda6839ee", "html_url": "https://github.com/rust-lang/rust/commit/73a28e595c2aacf38c12a56807547e7cda6839ee"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "e381b0af47a0eb07723fc724fa1dbec365f44f20", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cbd143f966ad7df855da95ad901513b82d1993c9/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbd143f966ad7df855da95ad901513b82d1993c9/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=cbd143f966ad7df855da95ad901513b82d1993c9", "patch": "@@ -337,9 +337,7 @@ pub fn phase_5_run_llvm_passes(sess: Session,\n     // segmented stacks are enabled.  However, unwind info directives in assembly\n     // output are OK, so we generate assembly first and then run it through\n     // an external assembler.\n-    // Same for Android.\n-    if (sess.targ_cfg.os == session::OsAndroid ||\n-        sess.targ_cfg.os == session::OsWin32) &&\n+    if sess.targ_cfg.os == session::OsWin32 &&\n         (sess.opts.output_type == link::output_type_object ||\n          sess.opts.output_type == link::output_type_exe) {\n         let output_type = link::output_type_assembly;"}]}