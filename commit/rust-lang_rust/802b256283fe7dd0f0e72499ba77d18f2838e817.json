{"sha": "802b256283fe7dd0f0e72499ba77d18f2838e817", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwMmIyNTYyODNmZTdkZDBmMGU3MjQ5OWJhNzdkMThmMjgzOGU4MTc=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2019-01-18T03:19:56Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2019-02-07T18:17:27Z"}, "message": "Make it an incompatibility lint for now", "tree": {"sha": "49b71583eaf41d89e97fc4b9b90dd91c8d6d9754", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49b71583eaf41d89e97fc4b9b90dd91c8d6d9754"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/802b256283fe7dd0f0e72499ba77d18f2838e817", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/802b256283fe7dd0f0e72499ba77d18f2838e817", "html_url": "https://github.com/rust-lang/rust/commit/802b256283fe7dd0f0e72499ba77d18f2838e817", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/802b256283fe7dd0f0e72499ba77d18f2838e817/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e790a7c304b3bcb182c4fcb745ea288d3dc56f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e790a7c304b3bcb182c4fcb745ea288d3dc56f2", "html_url": "https://github.com/rust-lang/rust/commit/3e790a7c304b3bcb182c4fcb745ea288d3dc56f2"}], "stats": {"total": 128, "additions": 72, "deletions": 56}, "files": [{"sha": "3ff76e98d7b89266e3d6780d76312517d9cc6cfe", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/802b256283fe7dd0f0e72499ba77d18f2838e817/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/802b256283fe7dd0f0e72499ba77d18f2838e817/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=802b256283fe7dd0f0e72499ba77d18f2838e817", "patch": "@@ -352,6 +352,12 @@ declare_lint! {\n     \"outlives requirements can be inferred\"\n }\n \n+declare_lint! {\n+    pub DUPLICATE_MATCHER_BINDING_NAME,\n+    Warn,\n+    \"duplicate macro matcher binding name\"\n+}\n+\n /// Some lints that are buffered from `libsyntax`. See `syntax::early_buffered_lints`.\n pub mod parser {\n     declare_lint! {"}, {"sha": "8952ae98e597e7a7d000c0c45e85a4e86110be6f", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/802b256283fe7dd0f0e72499ba77d18f2838e817/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/802b256283fe7dd0f0e72499ba77d18f2838e817/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=802b256283fe7dd0f0e72499ba77d18f2838e817", "patch": "@@ -27,7 +27,7 @@ use crate::errors::{DiagnosticBuilder, DiagnosticId};\n use crate::hir::def_id::{CrateNum, LOCAL_CRATE};\n use crate::hir::intravisit;\n use crate::hir;\n-use crate::lint::builtin::BuiltinLintDiagnostics;\n+use crate::lint::builtin::{BuiltinLintDiagnostics, DUPLICATE_MATCHER_BINDING_NAME};\n use crate::lint::builtin::parser::{QUESTION_MARK_MACRO_SEP, ILL_FORMED_ATTRIBUTE_INPUT};\n use crate::session::{Session, DiagnosticMessageId};\n use std::{hash, ptr};\n@@ -82,6 +82,7 @@ impl Lint {\n         match lint_id {\n             BufferedEarlyLintId::QuestionMarkMacroSep => QUESTION_MARK_MACRO_SEP,\n             BufferedEarlyLintId::IllFormedAttributeInput => ILL_FORMED_ATTRIBUTE_INPUT,\n+            BufferedEarlyLintId::DuplicateMacroMatcherBindingName => DUPLICATE_MATCHER_BINDING_NAME,\n         }\n     }\n "}, {"sha": "460cb977346a9a12bf424452a40ee01727a6c66e", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/802b256283fe7dd0f0e72499ba77d18f2838e817/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/802b256283fe7dd0f0e72499ba77d18f2838e817/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=802b256283fe7dd0f0e72499ba77d18f2838e817", "patch": "@@ -354,6 +354,11 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n             reference: \"issue #57644 <https://github.com/rust-lang/rust/issues/57644>\",\n             edition: None,\n         },\n+        FutureIncompatibleInfo {\n+            id: LintId::of(DUPLICATE_MATCHER_BINDING_NAME),\n+            reference: \"issue #57593 <https://github.com/rust-lang/rust/issues/57593>\",\n+            edition: None,\n+        },\n         ]);\n \n     // Register renamed and removed lints."}, {"sha": "29cb9cd7f30b5b33d281901282338d7554e9e3df", "filename": "src/libsyntax/early_buffered_lints.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/802b256283fe7dd0f0e72499ba77d18f2838e817/src%2Flibsyntax%2Fearly_buffered_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/802b256283fe7dd0f0e72499ba77d18f2838e817/src%2Flibsyntax%2Fearly_buffered_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fearly_buffered_lints.rs?ref=802b256283fe7dd0f0e72499ba77d18f2838e817", "patch": "@@ -12,6 +12,8 @@ pub enum BufferedEarlyLintId {\n     /// Usage of `?` as a macro separator is deprecated.\n     QuestionMarkMacroSep,\n     IllFormedAttributeInput,\n+    /// Usage of a duplicate macro matcher binding name.\n+    DuplicateMacroMatcherBindingName,\n }\n \n /// Stores buffered lint info which can later be passed to `librustc`."}, {"sha": "33ea675f9d1bb12e4722a4e809ea919ea3060702", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/802b256283fe7dd0f0e72499ba77d18f2838e817/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/802b256283fe7dd0f0e72499ba77d18f2838e817/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=802b256283fe7dd0f0e72499ba77d18f2838e817", "patch": "@@ -360,8 +360,12 @@ pub fn compile(\n     // don't abort iteration early, so that errors for multiple lhses can be reported\n     for lhs in &lhses {\n         valid &= check_lhs_no_empty_seq(sess, &[lhs.clone()]);\n-        valid &=\n-            check_lhs_duplicate_matcher_bindings(sess, &[lhs.clone()], &mut FxHashMap::default());\n+        valid &= check_lhs_duplicate_matcher_bindings(\n+            sess,\n+            &[lhs.clone()],\n+            &mut FxHashMap::default(),\n+            def.id\n+        );\n     }\n \n     let expander: Box<_> = Box::new(MacroRulesMacroExpander {\n@@ -467,29 +471,38 @@ fn check_lhs_no_empty_seq(sess: &ParseSess, tts: &[quoted::TokenTree]) -> bool {\n fn check_lhs_duplicate_matcher_bindings(\n     sess: &ParseSess,\n     tts: &[quoted::TokenTree],\n-    metavar_names: &mut FxHashMap<Ident, Span>\n+    metavar_names: &mut FxHashMap<Ident, Span>,\n+    node_id: ast::NodeId,\n ) -> bool {\n     use self::quoted::TokenTree;\n+    use crate::early_buffered_lints::BufferedEarlyLintId;\n     for tt in tts {\n         match *tt {\n             TokenTree::MetaVarDecl(span, name, _kind) => {\n                 if let Some(&prev_span) = metavar_names.get(&name) {\n-                    sess.span_diagnostic\n-                        .struct_span_err(span, \"duplicate matcher binding\")\n-                        .span_note(prev_span, \"previous declaration was here\")\n-                        .emit();\n+                    // FIXME(mark-i-m): in a few cycles, make this a hard error.\n+                    // sess.span_diagnostic\n+                    //     .struct_span_err(span, \"duplicate matcher binding\")\n+                    //     .span_note(prev_span, \"previous declaration was here\")\n+                    //     .emit();\n+                    sess.buffer_lint(\n+                        BufferedEarlyLintId::DuplicateMacroMatcherBindingName,\n+                        crate::source_map::MultiSpan::from(vec![prev_span, span]),\n+                        node_id,\n+                        \"duplicate matcher binding\"\n+                    );\n                     return false;\n                 } else {\n                     metavar_names.insert(name, span);\n                 }\n             }\n             TokenTree::Delimited(_, ref del) => {\n-                if !check_lhs_duplicate_matcher_bindings(sess, &del.tts, metavar_names) {\n+                if !check_lhs_duplicate_matcher_bindings(sess, &del.tts, metavar_names, node_id) {\n                     return false;\n                 }\n             },\n             TokenTree::Sequence(_, ref seq) => {\n-                if !check_lhs_duplicate_matcher_bindings(sess, &seq.tts, metavar_names) {\n+                if !check_lhs_duplicate_matcher_bindings(sess, &seq.tts, metavar_names, node_id) {\n                     return false;\n                 }\n             }"}, {"sha": "3deae3eacecb25ab2ad1f05de42ae4d5dd13ad31", "filename": "src/test/ui/macros/macro-multiple-matcher-bindings.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/802b256283fe7dd0f0e72499ba77d18f2838e817/src%2Ftest%2Fui%2Fmacros%2Fmacro-multiple-matcher-bindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/802b256283fe7dd0f0e72499ba77d18f2838e817/src%2Ftest%2Fui%2Fmacros%2Fmacro-multiple-matcher-bindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-multiple-matcher-bindings.rs?ref=802b256283fe7dd0f0e72499ba77d18f2838e817", "patch": "@@ -1,9 +1,11 @@\n // Test that duplicate matcher binding names are caught at declaration time, rather than at macro\n // invocation time.\n \n+#![allow(unused_macros)]\n+\n macro_rules! foo1 {\n-    ($a:ident, $a:ident) => {}; //~ERROR duplicate matcher binding\n-    ($a:ident, $a:path) => {};  //~ERROR duplicate matcher binding\n+    ($a:ident, $a:ident) => {}; //~WARN duplicate matcher binding\n+    ($a:ident, $a:path) => {};  //~WARN duplicate matcher binding\n }\n \n macro_rules! foo2 {\n@@ -12,8 +14,8 @@ macro_rules! foo2 {\n }\n \n macro_rules! foo3 {\n-    ($a:ident, $($a:ident),*) => {}; //~ERROR duplicate matcher binding\n-    ($($a:ident)+ # $($($a:path),+);*) => {}; //~ERROR duplicate matcher binding\n+    ($a:ident, $($a:ident),*) => {}; //~WARN duplicate matcher binding\n+    ($($a:ident)+ # $($($a:path),+);*) => {}; //~WARN duplicate matcher binding\n }\n \n fn main() {}"}, {"sha": "04b27e88a1f05476b27188878c88a7161e4ebe0f", "filename": "src/test/ui/macros/macro-multiple-matcher-bindings.stderr", "status": "modified", "additions": 29, "deletions": 42, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/802b256283fe7dd0f0e72499ba77d18f2838e817/src%2Ftest%2Fui%2Fmacros%2Fmacro-multiple-matcher-bindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/802b256283fe7dd0f0e72499ba77d18f2838e817/src%2Ftest%2Fui%2Fmacros%2Fmacro-multiple-matcher-bindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-multiple-matcher-bindings.stderr?ref=802b256283fe7dd0f0e72499ba77d18f2838e817", "patch": "@@ -1,50 +1,37 @@\n-error: duplicate matcher binding\n-  --> $DIR/macro-multiple-matcher-bindings.rs:5:16\n-   |\n-LL |     ($a:ident, $a:ident) => {}; //~ERROR duplicate matcher binding\n-   |                ^^^^^^^^\n-   |\n-note: previous declaration was here\n-  --> $DIR/macro-multiple-matcher-bindings.rs:5:6\n-   |\n-LL |     ($a:ident, $a:ident) => {}; //~ERROR duplicate matcher binding\n-   |      ^^^^^^^^\n+warning: duplicate matcher binding\n+ --> src/test/ui/macros/macro-multiple-matcher-bindings.rs:7:6\n+  |\n+7 |     ($a:ident, $a:ident) => {}; //~WARN duplicate matcher binding\n+  |      ^^^^^^^^  ^^^^^^^^\n+  |\n+  = note: #[warn(duplicate_matcher_binding_name)] on by default\n+  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+  = note: for more information, see issue #57593 <https://github.com/rust-lang/rust/issues/57593>\n \n-error: duplicate matcher binding\n-  --> $DIR/macro-multiple-matcher-bindings.rs:6:16\n-   |\n-LL |     ($a:ident, $a:path) => {};  //~ERROR duplicate matcher binding\n-   |                ^^^^^^^\n-   |\n-note: previous declaration was here\n-  --> $DIR/macro-multiple-matcher-bindings.rs:6:6\n-   |\n-LL |     ($a:ident, $a:path) => {};  //~ERROR duplicate matcher binding\n-   |      ^^^^^^^^\n+warning: duplicate matcher binding\n+ --> src/test/ui/macros/macro-multiple-matcher-bindings.rs:8:6\n+  |\n+8 |     ($a:ident, $a:path) => {};  //~WARN duplicate matcher binding\n+  |      ^^^^^^^^  ^^^^^^^\n+  |\n+  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+  = note: for more information, see issue #57593 <https://github.com/rust-lang/rust/issues/57593>\n \n-error: duplicate matcher binding\n-  --> $DIR/macro-multiple-matcher-bindings.rs:15:18\n-   |\n-LL |     ($a:ident, $($a:ident),*) => {}; //~ERROR duplicate matcher binding\n-   |                  ^^^^^^^^\n+warning: duplicate matcher binding\n+  --> src/test/ui/macros/macro-multiple-matcher-bindings.rs:17:6\n    |\n-note: previous declaration was here\n-  --> $DIR/macro-multiple-matcher-bindings.rs:15:6\n+LL |     ($a:ident, $($a:ident),*) => {}; //~WARN duplicate matcher binding\n+   |      ^^^^^^^^    ^^^^^^^^\n    |\n-LL |     ($a:ident, $($a:ident),*) => {}; //~ERROR duplicate matcher binding\n-   |      ^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #57593 <https://github.com/rust-lang/rust/issues/57593>\n \n-error: duplicate matcher binding\n-  --> $DIR/macro-multiple-matcher-bindings.rs:16:25\n+warning: duplicate matcher binding\n+  --> src/test/ui/macros/macro-multiple-matcher-bindings.rs:18:8\n    |\n-LL |     ($($a:ident)+ # $($($a:path),+);*) => {}; //~ERROR duplicate matcher binding\n-   |                         ^^^^^^^\n+LL |     ($($a:ident)+ # $($($a:path),+);*) => {}; //~WARN duplicate matcher binding\n+   |        ^^^^^^^^         ^^^^^^^\n    |\n-note: previous declaration was here\n-  --> $DIR/macro-multiple-matcher-bindings.rs:16:8\n-   |\n-LL |     ($($a:ident)+ # $($($a:path),+);*) => {}; //~ERROR duplicate matcher binding\n-   |        ^^^^^^^^\n-\n-error: aborting due to 4 previous errors\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #57593 <https://github.com/rust-lang/rust/issues/57593>\n "}]}