{"sha": "d6b927dd91a7f9d32a537f1b4493dfdb3e628823", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2YjkyN2RkOTFhN2Y5ZDMyYTUzN2YxYjQ0OTNkZmRiM2U2Mjg4MjM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-10T21:16:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-10T21:16:06Z"}, "message": "Auto merge of #38843 - Manishearth:proposed, r=GuillaumeGomez\n\nImproved rustdoc rendering for unstable features\n\nThis replaces \"unstable\" with \"this is an experimental API\", and uses a `<details>` tag to expand to the reason.\n\nThe `<details>` tag renders as a regular div (with the details show) on browsers which don't support it, On browsers which do support it, it shows only the summary line with an expandy-arrow next to it, and on clicking it the details will turn up below it.\n\nThis is somewhat a strawman proposal. The main issue is that we need to improve our messaging around unstable APIs. Since they turn up in the docs, we should be clearer that they are experimental (and perhaps add something about nightly-only). I'm making this PR to kickstart discussion on this.\n\nExample rendering: http://manishearth.github.io/rust-internals-docs/std/io/trait.Read.html#method.chars\n\n<img width=\"375\" alt=\"screen shot 2017-01-04 at 10 15 37 pm\" src=\"https://cloud.githubusercontent.com/assets/1617736/21670712/5a96c7de-d2cb-11e6-86a6-87f70818d634.png\">\n\nexpands to\n\n<img width=\"799\" alt=\"screen shot 2017-01-04 at 10 15 43 pm\" src=\"https://cloud.githubusercontent.com/assets/1617736/21670714/5db88bb4-d2cb-11e6-8fcc-5cf11d198b75.png\">\n\ncc @steveklabnik @jdub", "tree": {"sha": "8d0c7b1f8b1b38ffd56ce853faeb687e3d33b1c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d0c7b1f8b1b38ffd56ce853faeb687e3d33b1c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6b927dd91a7f9d32a537f1b4493dfdb3e628823", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6b927dd91a7f9d32a537f1b4493dfdb3e628823", "html_url": "https://github.com/rust-lang/rust/commit/d6b927dd91a7f9d32a537f1b4493dfdb3e628823", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6b927dd91a7f9d32a537f1b4493dfdb3e628823/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bffede97cf58f7159e261eac592f9cf88ce209d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bffede97cf58f7159e261eac592f9cf88ce209d", "html_url": "https://github.com/rust-lang/rust/commit/7bffede97cf58f7159e261eac592f9cf88ce209d"}, {"sha": "0a1c9ae022b3a907af63772d272aadc5c75a49c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a1c9ae022b3a907af63772d272aadc5c75a49c0", "html_url": "https://github.com/rust-lang/rust/commit/0a1c9ae022b3a907af63772d272aadc5c75a49c0"}], "stats": {"total": 49, "additions": 35, "deletions": 14}, "files": [{"sha": "e161f40b7295e4593ca0875ada4ee75e9f0c95f0", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/d6b927dd91a7f9d32a537f1b4493dfdb3e628823/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6b927dd91a7f9d32a537f1b4493dfdb3e628823/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=d6b927dd91a7f9d32a537f1b4493dfdb3e628823", "patch": "@@ -1871,8 +1871,10 @@ fn short_stability(item: &clean::Item, cx: &Context, show_reason: bool) -> Vec<S\n         };\n \n         if stab.level == stability::Unstable {\n-            let unstable_extra = if show_reason {\n-                match (!stab.feature.is_empty(), &cx.shared.issue_tracker_base_url, stab.issue) {\n+            if show_reason {\n+                let unstable_extra = match (!stab.feature.is_empty(),\n+                                            &cx.shared.issue_tracker_base_url,\n+                                            stab.issue) {\n                     (true, &Some(ref tracker_url), Some(issue_no)) if issue_no > 0 =>\n                         format!(\" (<code>{}</code> <a href=\\\"{}{}\\\">#{}</a>)\",\n                                 Escape(&stab.feature), tracker_url, issue_no, issue_no),\n@@ -1882,17 +1884,22 @@ fn short_stability(item: &clean::Item, cx: &Context, show_reason: bool) -> Vec<S\n                     (true, ..) =>\n                         format!(\" (<code>{}</code>)\", Escape(&stab.feature)),\n                     _ => String::new(),\n+                };\n+                if stab.unstable_reason.is_empty() {\n+                    stability.push(format!(\"<div class='stab unstable'>\\\n+                                            <span class=microscope>\ud83d\udd2c</span> \\\n+                                            This is a nightly-only experimental API. {}</div>\",\n+                                   unstable_extra));\n+                } else {\n+                    let text = format!(\"<summary><span class=microscope>\ud83d\udd2c</span> \\\n+                                        This is a nightly-only experimental API. {}</summary>{}\",\n+                                       unstable_extra, MarkdownHtml(&stab.unstable_reason));\n+                    stability.push(format!(\"<div class='stab unstable'><details>{}</details></div>\",\n+                                   text));\n                 }\n             } else {\n-                String::new()\n-            };\n-            let unstable_reason = if show_reason && !stab.unstable_reason.is_empty() {\n-                format!(\": {}\", stab.unstable_reason)\n-            } else {\n-                String::new()\n-            };\n-            let text = format!(\"Unstable{}{}\", unstable_extra, MarkdownHtml(&unstable_reason));\n-            stability.push(format!(\"<div class='stab unstable'>{}</div>\", text))\n+                stability.push(format!(\"<div class='stab unstable'>Experimental</div>\"))\n+            }\n         };\n     } else if let Some(depr) = item.deprecation.as_ref() {\n         let note = if show_reason && !depr.note.is_empty() {"}, {"sha": "681d2354056f67b7257a71c933cd978f05decd29", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d6b927dd91a7f9d32a537f1b4493dfdb3e628823/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/d6b927dd91a7f9d32a537f1b4493dfdb3e628823/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=d6b927dd91a7f9d32a537f1b4493dfdb3e628823", "patch": "@@ -535,6 +535,14 @@ body.blur > :not(#help) {\n \tdisplay: inline;\n }\n \n+.stab summary {\n+\tdisplay: list-item;\n+}\n+\n+.stab .microscope {\n+\tfont-size: 1.5em;\n+}\n+\n .module-item .stab {\n \tdisplay: inline;\n \tborder-width: 0;"}, {"sha": "b5edf535057ddc0d52998f278e040498f3ced1d2", "filename": "src/test/rustdoc/issue-32374.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d6b927dd91a7f9d32a537f1b4493dfdb3e628823/src%2Ftest%2Frustdoc%2Fissue-32374.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6b927dd91a7f9d32a537f1b4493dfdb3e628823/src%2Ftest%2Frustdoc%2Fissue-32374.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-32374.rs?ref=d6b927dd91a7f9d32a537f1b4493dfdb3e628823", "patch": "@@ -14,22 +14,28 @@\n #![unstable(feature=\"test\", issue = \"32374\")]\n \n // @has issue_32374/index.html '//*[@class=\"docblock-short\"]' \\\n-//      '[Deprecated] [Unstable]'\n+//      '[Deprecated] [Experimental]'\n \n // @has issue_32374/struct.T.html '//*[@class=\"stab deprecated\"]' \\\n //      'Deprecated since 1.0.0: text'\n // @has - '<code>test</code>'\n // @has - '<a href=\"http://issue_url/32374\">#32374</a>'\n // @matches issue_32374/struct.T.html '//*[@class=\"stab unstable\"]' \\\n-//      'Unstable \\(test #32374\\)$'\n+//      '\ud83d\udd2c This is a nightly-only experimental API.  \\(test #32374\\)$'\n #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n #[unstable(feature = \"test\", issue = \"32374\")]\n pub struct T;\n \n // @has issue_32374/struct.U.html '//*[@class=\"stab deprecated\"]' \\\n //      'Deprecated since 1.0.0: deprecated'\n // @has issue_32374/struct.U.html '//*[@class=\"stab unstable\"]' \\\n-//      'Unstable (test #32374): unstable'\n+//      '\ud83d\udd2c This is a nightly-only experimental API.  (test #32374)'\n+// @has issue_32374/struct.U.html '//details' \\\n+//      '\ud83d\udd2c This is a nightly-only experimental API.  (test #32374)'\n+// @has issue_32374/struct.U.html '//summary' \\\n+//      '\ud83d\udd2c This is a nightly-only experimental API.  (test #32374)'\n+// @has issue_32374/struct.U.html '//details/p' \\\n+//      'unstable'\n #[rustc_deprecated(since = \"1.0.0\", reason = \"deprecated\")]\n #[unstable(feature = \"test\", issue = \"32374\", reason = \"unstable\")]\n pub struct U;"}]}