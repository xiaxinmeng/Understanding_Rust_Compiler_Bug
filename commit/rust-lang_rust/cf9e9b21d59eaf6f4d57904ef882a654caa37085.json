{"sha": "cf9e9b21d59eaf6f4d57904ef882a654caa37085", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmOWU5YjIxZDU5ZWFmNmY0ZDU3OTA0ZWY4ODJhNjU0Y2FhMzcwODU=", "commit": {"author": {"name": "Stepan Koltsov", "email": "stepan.koltsov@gmail.com", "date": "2013-08-03T01:54:05Z"}, "committer": {"name": "Stepan Koltsov", "email": "stepan.koltsov@gmail.com", "date": "2013-08-03T01:54:05Z"}, "message": "Add default implementation of Map::contains_key function\n\nMap::contains_key can be implemented with Map::find.\n\nRemove several implementations of contains_key.", "tree": {"sha": "58a993b3762edb78f849bfd871f60339089d49a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58a993b3762edb78f849bfd871f60339089d49a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf9e9b21d59eaf6f4d57904ef882a654caa37085", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf9e9b21d59eaf6f4d57904ef882a654caa37085", "html_url": "https://github.com/rust-lang/rust/commit/cf9e9b21d59eaf6f4d57904ef882a654caa37085", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf9e9b21d59eaf6f4d57904ef882a654caa37085/comments", "author": {"login": "stepancheg", "id": 28969, "node_id": "MDQ6VXNlcjI4OTY5", "avatar_url": "https://avatars.githubusercontent.com/u/28969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stepancheg", "html_url": "https://github.com/stepancheg", "followers_url": "https://api.github.com/users/stepancheg/followers", "following_url": "https://api.github.com/users/stepancheg/following{/other_user}", "gists_url": "https://api.github.com/users/stepancheg/gists{/gist_id}", "starred_url": "https://api.github.com/users/stepancheg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stepancheg/subscriptions", "organizations_url": "https://api.github.com/users/stepancheg/orgs", "repos_url": "https://api.github.com/users/stepancheg/repos", "events_url": "https://api.github.com/users/stepancheg/events{/privacy}", "received_events_url": "https://api.github.com/users/stepancheg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "stepancheg", "id": 28969, "node_id": "MDQ6VXNlcjI4OTY5", "avatar_url": "https://avatars.githubusercontent.com/u/28969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stepancheg", "html_url": "https://github.com/stepancheg", "followers_url": "https://api.github.com/users/stepancheg/followers", "following_url": "https://api.github.com/users/stepancheg/following{/other_user}", "gists_url": "https://api.github.com/users/stepancheg/gists{/gist_id}", "starred_url": "https://api.github.com/users/stepancheg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stepancheg/subscriptions", "organizations_url": "https://api.github.com/users/stepancheg/orgs", "repos_url": "https://api.github.com/users/stepancheg/repos", "events_url": "https://api.github.com/users/stepancheg/events{/privacy}", "received_events_url": "https://api.github.com/users/stepancheg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ddc72f69be4d0a2027ff598ad262ea2b2ca3812", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ddc72f69be4d0a2027ff598ad262ea2b2ca3812", "html_url": "https://github.com/rust-lang/rust/commit/3ddc72f69be4d0a2027ff598ad262ea2b2ca3812"}], "stats": {"total": 32, "additions": 5, "deletions": 27}, "files": [{"sha": "cbcb6adcbb0b2bdfdd15f8ede58edd83f48378d7", "filename": "src/libextra/smallintmap.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cf9e9b21d59eaf6f4d57904ef882a654caa37085/src%2Flibextra%2Fsmallintmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf9e9b21d59eaf6f4d57904ef882a654caa37085/src%2Flibextra%2Fsmallintmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsmallintmap.rs?ref=cf9e9b21d59eaf6f4d57904ef882a654caa37085", "patch": "@@ -46,11 +46,6 @@ impl<V> Mutable for SmallIntMap<V> {\n }\n \n impl<V> Map<uint, V> for SmallIntMap<V> {\n-    /// Return true if the map contains a value for the specified key\n-    fn contains_key(&self, key: &uint) -> bool {\n-        self.find(key).is_some()\n-    }\n-\n     /// Return a reference to the value corresponding to the key\n     fn find<'a>(&'a self, key: &uint) -> Option<&'a V> {\n         if *key < self.v.len() {"}, {"sha": "094bf0e3d83655408fb84501ed94b81f794489e0", "filename": "src/libextra/treemap.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cf9e9b21d59eaf6f4d57904ef882a654caa37085/src%2Flibextra%2Ftreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf9e9b21d59eaf6f4d57904ef882a654caa37085/src%2Flibextra%2Ftreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftreemap.rs?ref=cf9e9b21d59eaf6f4d57904ef882a654caa37085", "patch": "@@ -105,11 +105,6 @@ impl<K: TotalOrd, V> Mutable for TreeMap<K, V> {\n }\n \n impl<K: TotalOrd, V> Map<K, V> for TreeMap<K, V> {\n-    /// Return true if the map contains a value for the specified key\n-    fn contains_key(&self, key: &K) -> bool {\n-        self.find(key).is_some()\n-    }\n-\n     /// Return a reference to the value corresponding to the key\n     fn find<'a>(&'a self, key: &K) -> Option<&'a V> {\n         let mut current: &'a Option<~TreeNode<K, V>> = &self.root;"}, {"sha": "22525d4cab44231302a274b85ce758a8ee3002c6", "filename": "src/libstd/container.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cf9e9b21d59eaf6f4d57904ef882a654caa37085/src%2Flibstd%2Fcontainer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf9e9b21d59eaf6f4d57904ef882a654caa37085/src%2Flibstd%2Fcontainer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcontainer.rs?ref=cf9e9b21d59eaf6f4d57904ef882a654caa37085", "patch": "@@ -34,11 +34,13 @@ pub trait Mutable: Container {\n /// A map is a key-value store where values may be looked up by their keys. This\n /// trait provides basic operations to operate on these stores.\n pub trait Map<K, V>: Container {\n-    /// Return true if the map contains a value for the specified key\n-    fn contains_key(&self, key: &K) -> bool;\n-\n     /// Return a reference to the value corresponding to the key\n     fn find<'a>(&'a self, key: &K) -> Option<&'a V>;\n+\n+    /// Return true if the map contains a value for the specified key\n+    fn contains_key(&self, key: &K) -> bool {\n+        self.find(key).is_some()\n+    }\n }\n \n /// This trait provides basic operations to modify the contents of a map."}, {"sha": "424a6884d944bf4d24c38c263ba2dd79817215ef", "filename": "src/libstd/hashmap.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cf9e9b21d59eaf6f4d57904ef882a654caa37085/src%2Flibstd%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf9e9b21d59eaf6f4d57904ef882a654caa37085/src%2Flibstd%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fhashmap.rs?ref=cf9e9b21d59eaf6f4d57904ef882a654caa37085", "patch": "@@ -292,14 +292,6 @@ impl<K:Hash + Eq,V> Mutable for HashMap<K, V> {\n }\n \n impl<K:Hash + Eq,V> Map<K, V> for HashMap<K, V> {\n-    /// Return true if the map contains a value for the specified key\n-    fn contains_key(&self, k: &K) -> bool {\n-        match self.bucket_for_key(k) {\n-            FoundEntry(_) => {true}\n-            TableFull | FoundHole(_) => {false}\n-        }\n-    }\n-\n     /// Return a reference to the value corresponding to the key\n     fn find<'a>(&'a self, k: &K) -> Option<&'a V> {\n         match self.bucket_for_key(k) {"}, {"sha": "234f8e3187330faa95ef72d45268673c0969f42d", "filename": "src/libstd/trie.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cf9e9b21d59eaf6f4d57904ef882a654caa37085/src%2Flibstd%2Ftrie.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf9e9b21d59eaf6f4d57904ef882a654caa37085/src%2Flibstd%2Ftrie.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftrie.rs?ref=cf9e9b21d59eaf6f4d57904ef882a654caa37085", "patch": "@@ -48,12 +48,6 @@ impl<T> Mutable for TrieMap<T> {\n }\n \n impl<T> Map<uint, T> for TrieMap<T> {\n-    /// Return true if the map contains a value for the specified key\n-    #[inline]\n-    fn contains_key(&self, key: &uint) -> bool {\n-        self.find(key).is_some()\n-    }\n-\n     /// Return a reference to the value corresponding to the key\n     #[inline]\n     fn find<'a>(&'a self, key: &uint) -> Option<&'a T> {"}]}