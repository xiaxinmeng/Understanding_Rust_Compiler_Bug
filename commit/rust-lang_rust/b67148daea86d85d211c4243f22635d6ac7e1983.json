{"sha": "b67148daea86d85d211c4243f22635d6ac7e1983", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2NzE0OGRhZWE4NmQ4NWQyMTFjNDI0M2YyMjYzNWQ2YWM3ZTE5ODM=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-05T19:56:40Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-05T19:58:53Z"}, "message": "Substitution::prefix -> subst_prefix\n\nI probably want to get rid of this function completely later.", "tree": {"sha": "0f666c5b917de8a0f2ebf5fba185500d153036f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f666c5b917de8a0f2ebf5fba185500d153036f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b67148daea86d85d211c4243f22635d6ac7e1983", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b67148daea86d85d211c4243f22635d6ac7e1983", "html_url": "https://github.com/rust-lang/rust/commit/b67148daea86d85d211c4243f22635d6ac7e1983", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b67148daea86d85d211c4243f22635d6ac7e1983/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a83645e1bb01578c4bbe5f71418d354108dfd77", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a83645e1bb01578c4bbe5f71418d354108dfd77", "html_url": "https://github.com/rust-lang/rust/commit/2a83645e1bb01578c4bbe5f71418d354108dfd77"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "db4ebada4a00dee1f9a1c813787888299b581e9e", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b67148daea86d85d211c4243f22635d6ac7e1983/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b67148daea86d85d211c4243f22635d6ac7e1983/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=b67148daea86d85d211c4243f22635d6ac7e1983", "patch": "@@ -55,6 +55,7 @@ use hir_ty::{\n     autoderef, could_unify,\n     method_resolution::{self, TyFingerprint},\n     primitive::UintTy,\n+    subst_prefix,\n     traits::FnTrait,\n     AliasEq, AliasTy, BoundVar, CallableDefId, CallableSig, Canonical, CanonicalVarKinds, Cast,\n     DebruijnIndex, InEnvironment, Interner, QuantifiedWhereClause, Scalar, Solution,\n@@ -1503,7 +1504,7 @@ impl TypeParam {\n         let krate = self.id.parent.module(db.upcast()).krate();\n         let ty = params.get(local_idx)?.clone();\n         let subst = TyBuilder::type_params_subst(db, self.id.parent);\n-        let ty = ty.substitute(&Interner, &subst.prefix(local_idx));\n+        let ty = ty.substitute(&Interner, &subst_prefix(&subst, local_idx));\n         Some(Type::new_with_resolver_inner(db, krate, &resolver, ty))\n     }\n }"}, {"sha": "4ef8024d0ab1da385c2657a275e75896d0650f30", "filename": "crates/hir_ty/src/display.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b67148daea86d85d211c4243f22635d6ac7e1983/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b67148daea86d85d211c4243f22635d6ac7e1983/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs?ref=b67148daea86d85d211c4243f22635d6ac7e1983", "patch": "@@ -19,7 +19,7 @@ use hir_expand::name::Name;\n \n use crate::{\n     db::HirDatabase, from_assoc_type_id, from_foreign_def_id, from_placeholder_idx,\n-    lt_from_placeholder_idx, primitive, to_assoc_type_id, traits::chalk::from_chalk,\n+    lt_from_placeholder_idx, primitive, subst_prefix, to_assoc_type_id, traits::chalk::from_chalk,\n     utils::generics, AdtId, AliasEq, AliasTy, CallableDefId, CallableSig, DomainGoal, GenericArg,\n     ImplTraitId, Interner, Lifetime, LifetimeData, LifetimeOutlives, Mutability, OpaqueTy,\n     ProjectionTy, ProjectionTyExt, QuantifiedWhereClause, Scalar, TraitRef, Ty, TyExt, TyKind,\n@@ -484,9 +484,11 @@ impl HirDisplay for Ty {\n                                             default_from = i + 1;\n                                         }\n                                         (_, Some(default_parameter)) => {\n-                                            let actual_default = default_parameter\n-                                                .clone()\n-                                                .substitute(&Interner, &parameters.prefix(i));\n+                                            let actual_default =\n+                                                default_parameter.clone().substitute(\n+                                                    &Interner,\n+                                                    &subst_prefix(parameters, i),\n+                                                );\n                                             if parameter.assert_ty_ref(&Interner) != &actual_default\n                                             {\n                                                 default_from = i + 1;"}, {"sha": "185a2dfc3978f1fb8854471cb322bf97c2ac5cf0", "filename": "crates/hir_ty/src/infer/expr.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b67148daea86d85d211c4243f22635d6ac7e1983/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b67148daea86d85d211c4243f22635d6ac7e1983/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs?ref=b67148daea86d85d211c4243f22635d6ac7e1983", "patch": "@@ -964,8 +964,10 @@ impl<'a> InferenceContext<'a> {\n                     if let AssocContainerId::TraitId(trait_) = f.lookup(self.db.upcast()).container\n                     {\n                         // construct a TraitRef\n-                        let substs =\n-                            parameters.prefix(generics(self.db.upcast(), trait_.into()).len());\n+                        let substs = crate::subst_prefix(\n+                            &*parameters,\n+                            generics(self.db.upcast(), trait_.into()).len(),\n+                        );\n                         self.push_obligation(\n                             TraitRef { trait_id: to_chalk_trait_id(trait_), substitution: substs }\n                                 .cast(&Interner),"}, {"sha": "f74b22b583ff8352c8356752bd70b6f69c13214a", "filename": "crates/hir_ty/src/lib.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b67148daea86d85d211c4243f22635d6ac7e1983/crates%2Fhir_ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b67148daea86d85d211c4243f22635d6ac7e1983/crates%2Fhir_ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flib.rs?ref=b67148daea86d85d211c4243f22635d6ac7e1983", "patch": "@@ -75,10 +75,9 @@ pub type ChalkTraitId = chalk_ir::TraitId<Interner>;\n \n pub type FnSig = chalk_ir::FnSig<Interner>;\n \n-impl Substitution {\n-    pub fn prefix(&self, n: usize) -> Substitution {\n-        Substitution::intern(self.interned()[..std::cmp::min(self.len(&Interner), n)].into())\n-    }\n+// FIXME: get rid of this\n+pub fn subst_prefix(s: &Substitution, n: usize) -> Substitution {\n+    Substitution::intern(s.interned()[..std::cmp::min(s.len(&Interner), n)].into())\n }\n \n /// Return an index of a parameter in the generic type parameter list by it's id."}]}