{"sha": "1127d2508f883811c118d1575497c8199dca9ea2", "node_id": "C_kwDOAAsO6NoAKDExMjdkMjUwOGY4ODM4MTFjMTE4ZDE1NzU0OTdjODE5OWRjYTllYTI", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-06-05T11:59:49Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-06-05T12:20:06Z"}, "message": "internal: Keep output channels across restarts", "tree": {"sha": "7a0d239762611e456d6121547c7d974e5bf646de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a0d239762611e456d6121547c7d974e5bf646de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1127d2508f883811c118d1575497c8199dca9ea2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1127d2508f883811c118d1575497c8199dca9ea2", "html_url": "https://github.com/rust-lang/rust/commit/1127d2508f883811c118d1575497c8199dca9ea2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1127d2508f883811c118d1575497c8199dca9ea2/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd298b3994c1f469eb566192060b4c2fbe78a1c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd298b3994c1f469eb566192060b4c2fbe78a1c4", "html_url": "https://github.com/rust-lang/rust/commit/fd298b3994c1f469eb566192060b4c2fbe78a1c4"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "8a2dea6b35b76a5760508399b670630ed277958a", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1127d2508f883811c118d1575497c8199dca9ea2/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/1127d2508f883811c118d1575497c8199dca9ea2/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=1127d2508f883811c118d1575497c8199dca9ea2", "patch": "@@ -7,6 +7,7 @@ import { WorkspaceEdit } from \"vscode\";\n import { Workspace } from \"./ctx\";\n import { updateConfig } from \"./config\";\n import { substituteVariablesInEnv } from \"./config\";\n+import { outputChannel, traceOutputChannel } from \"./main\";\n import { randomUUID } from \"crypto\";\n \n export interface Env {\n@@ -82,9 +83,6 @@ export async function createClient(\n         run,\n         debug: run,\n     };\n-    const traceOutputChannel = vscode.window.createOutputChannel(\n-        \"Rust Analyzer Language Server Trace\"\n-    );\n \n     let initializationOptions = vscode.workspace.getConfiguration(\"rust-analyzer\");\n \n@@ -104,7 +102,8 @@ export async function createClient(\n         documentSelector: [{ scheme: \"file\", language: \"rust\" }],\n         initializationOptions,\n         diagnosticCollectionName: \"rustc\",\n-        traceOutputChannel,\n+        traceOutputChannel: traceOutputChannel(),\n+        outputChannel: outputChannel(),\n         middleware: {\n             async provideHover(\n                 document: vscode.TextDocument,"}, {"sha": "51781b4205cd40fe103dc19fc9ac8f65380dafd5", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1127d2508f883811c118d1575497c8199dca9ea2/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/1127d2508f883811c118d1575497c8199dca9ea2/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=1127d2508f883811c118d1575497c8199dca9ea2", "patch": "@@ -43,8 +43,6 @@ export class Ctx {\n         const res = new Ctx(config, extCtx, client, serverPath, statusBar);\n \n         res.pushCleanup(client.start());\n-        res.pushCleanup(client.traceOutputChannel);\n-        res.pushCleanup(client.outputChannel);\n         await client.onReady();\n         client.onNotification(ra.serverStatus, (params) => res.setServerStatus(params));\n         return res;"}, {"sha": "7049a2c1f69a42be3a41cf95d03e7b4cab8cfeee", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/1127d2508f883811c118d1575497c8199dca9ea2/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/1127d2508f883811c118d1575497c8199dca9ea2/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=1127d2508f883811c118d1575497c8199dca9ea2", "patch": "@@ -15,6 +15,23 @@ let ctx: Ctx | undefined;\n \n const RUST_PROJECT_CONTEXT_NAME = \"inRustProject\";\n \n+let TRACE_OUTPUT_CHANNEL: vscode.OutputChannel | null = null;\n+export function traceOutputChannel() {\n+    if (!TRACE_OUTPUT_CHANNEL) {\n+        TRACE_OUTPUT_CHANNEL = vscode.window.createOutputChannel(\n+            \"Rust Analyzer Language Server Trace\"\n+        );\n+    }\n+    return TRACE_OUTPUT_CHANNEL;\n+}\n+let OUTPUT_CHANNEL: vscode.OutputChannel | null = null;\n+export function outputChannel() {\n+    if (!OUTPUT_CHANNEL) {\n+        OUTPUT_CHANNEL = vscode.window.createOutputChannel(\"Rust Analyzer Language Server\");\n+    }\n+    return OUTPUT_CHANNEL;\n+}\n+\n export interface RustAnalyzerExtensionApi {\n     client: lc.LanguageClient;\n }\n@@ -110,7 +127,7 @@ async function initCommonContext(context: vscode.ExtensionContext, ctx: Ctx) {\n     // Reloading is inspired by @DanTup maneuver: https://github.com/microsoft/vscode/issues/45774#issuecomment-373423895\n     ctx.registerCommand(\"reload\", (_) => async () => {\n         void vscode.window.showInformationMessage(\"Reloading rust-analyzer...\");\n-        await deactivate();\n+        await doDeactivate();\n         while (context.subscriptions.length > 0) {\n             try {\n                 context.subscriptions.pop()!.dispose();\n@@ -165,6 +182,14 @@ async function initCommonContext(context: vscode.ExtensionContext, ctx: Ctx) {\n }\n \n export async function deactivate() {\n+    TRACE_OUTPUT_CHANNEL?.dispose();\n+    TRACE_OUTPUT_CHANNEL = null;\n+    OUTPUT_CHANNEL?.dispose();\n+    OUTPUT_CHANNEL = null;\n+    await doDeactivate();\n+}\n+\n+async function doDeactivate() {\n     await setContextValue(RUST_PROJECT_CONTEXT_NAME, undefined);\n     await ctx?.client.stop();\n     ctx = undefined;"}]}