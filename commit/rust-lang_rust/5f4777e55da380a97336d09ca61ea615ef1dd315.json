{"sha": "5f4777e55da380a97336d09ca61ea615ef1dd315", "node_id": "C_kwDOAAsO6NoAKDVmNDc3N2U1NWRhMzgwYTk3MzM2ZDA5Y2E2MWVhNjE1ZWYxZGQzMTU", "commit": {"author": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-07-07T03:05:14Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-07-07T03:12:28Z"}, "message": "Add name in TODO", "tree": {"sha": "acf6723df0b15530c151688c451d0ca3f09cd80f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/acf6723df0b15530c151688c451d0ca3f09cd80f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f4777e55da380a97336d09ca61ea615ef1dd315", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f4777e55da380a97336d09ca61ea615ef1dd315", "html_url": "https://github.com/rust-lang/rust/commit/5f4777e55da380a97336d09ca61ea615ef1dd315", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f4777e55da380a97336d09ca61ea615ef1dd315/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b14b440f3aa54eb4a58d803a28fe19cf9abf7734", "url": "https://api.github.com/repos/rust-lang/rust/commits/b14b440f3aa54eb4a58d803a28fe19cf9abf7734", "html_url": "https://github.com/rust-lang/rust/commit/b14b440f3aa54eb4a58d803a28fe19cf9abf7734"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "e570b583decb844abebb4a6a6253d3ae1884117f", "filename": "src/attributes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5f4777e55da380a97336d09ca61ea615ef1dd315/src%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f4777e55da380a97336d09ca61ea615ef1dd315/src%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fattributes.rs?ref=5f4777e55da380a97336d09ca61ea615ef1dd315", "patch": "@@ -25,7 +25,7 @@ pub fn check_tied_features(sess: &Session, features: &FxHashMap<&str, bool>) ->\n     None\n }\n \n-// TODO: maybe move to a new module gcc_util.\n+// TODO(antoyo): maybe move to a new module gcc_util.\n // To find a list of GCC's names, check https://gcc.gnu.org/onlinedocs/gcc/Function-Attributes.html\n fn to_gcc_features<'a>(sess: &Session, s: &'a str) -> SmallVec<[&'a str; 2]> {\n     let arch = if sess.target.arch == \"x86_64\" { \"x86\" } else { &*sess.target.arch };\n@@ -95,7 +95,7 @@ pub fn from_fn_attrs<'gcc, 'tcx>(\n         .iter()\n         .flat_map(|feat| to_gcc_features(cx.tcx.sess, feat).into_iter())\n         .chain(codegen_fn_attrs.instruction_set.iter().map(|x| match x {\n-            InstructionSetAttr::ArmA32 => \"-thumb-mode\", // TODO: support removing feature.\n+            InstructionSetAttr::ArmA32 => \"-thumb-mode\", // TODO(antoyo): support removing feature.\n             InstructionSetAttr::ArmT32 => \"thumb-mode\",\n         }))\n         .collect::<Vec<_>>();"}, {"sha": "d55ad87e19bf77752fb1b6f70db2f6c3e30772fc", "filename": "src/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f4777e55da380a97336d09ca61ea615ef1dd315/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f4777e55da380a97336d09ca61ea615ef1dd315/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=5f4777e55da380a97336d09ca61ea615ef1dd315", "patch": "@@ -182,7 +182,7 @@ impl<'gcc, 'tcx> ConstMethods<'tcx> for CodegenCx<'gcc, 'tcx> {\n                     // NOTE: since the intrinsic _xabort is called with a bitcast, which\n                     // is non-const, but expects a constant, do a normal cast instead of a bitcast.\n                     // FIXME(antoyo): fix bitcast to work in constant contexts.\n-                    // TODO: perhaps only use bitcast for pointers?\n+                    // TODO(antoyo): perhaps only use bitcast for pointers?\n                     self.context.new_cast(None, value, ty)\n                 }\n                 else {"}, {"sha": "b3cbf344ad1366d6c605b4d251a34dc5b6a53420", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f4777e55da380a97336d09ca61ea615ef1dd315/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f4777e55da380a97336d09ca61ea615ef1dd315/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=5f4777e55da380a97336d09ca61ea615ef1dd315", "patch": "@@ -304,7 +304,7 @@ pub fn target_features(sess: &Session) -> Vec<Symbol> {\n         .filter(|_feature| {\n             // TODO(antoyo): implement a way to get enabled feature in libgccjit.\n             // Probably using the equivalent of __builtin_cpu_supports.\n-            // TODO: maybe use whatever outputs the following command:\n+            // TODO(antoyo): maybe use whatever outputs the following command:\n             // gcc -march=native -Q --help=target\n             #[cfg(feature=\"master\")]\n             {"}]}