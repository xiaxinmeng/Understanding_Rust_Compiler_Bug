{"sha": "d32ca64692d95c08d6563f363ea3074d1d30ce52", "node_id": "C_kwDOAAsO6NoAKGQzMmNhNjQ2OTJkOTVjMDhkNjU2M2YzNjNlYTMwNzRkMWQzMGNlNTI", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2021-12-28T04:06:01Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2022-01-04T01:44:26Z"}, "message": "Allow isize/usize in simd_cast", "tree": {"sha": "f10ff0a9b9dacbcdba724b9780f27f11f2e31c9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f10ff0a9b9dacbcdba724b9780f27f11f2e31c9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d32ca64692d95c08d6563f363ea3074d1d30ce52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d32ca64692d95c08d6563f363ea3074d1d30ce52", "html_url": "https://github.com/rust-lang/rust/commit/d32ca64692d95c08d6563f363ea3074d1d30ce52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d32ca64692d95c08d6563f363ea3074d1d30ce52/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "399ba6bb377ce02224b57c4d6e127e160fa76b34", "url": "https://api.github.com/repos/rust-lang/rust/commits/399ba6bb377ce02224b57c4d6e127e160fa76b34", "html_url": "https://github.com/rust-lang/rust/commit/399ba6bb377ce02224b57c4d6e127e160fa76b34"}], "stats": {"total": 41, "additions": 37, "deletions": 4}, "files": [{"sha": "f472178dbc650d4e4e2216569eb3622eff6d7998", "filename": "compiler/rustc_codegen_llvm/src/intrinsic.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d32ca64692d95c08d6563f363ea3074d1d30ce52/compiler%2Frustc_codegen_llvm%2Fsrc%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d32ca64692d95c08d6563f363ea3074d1d30ce52/compiler%2Frustc_codegen_llvm%2Fsrc%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fintrinsic.rs?ref=d32ca64692d95c08d6563f363ea3074d1d30ce52", "patch": "@@ -1715,14 +1715,26 @@ unsupported {} from `{}` with element `{}` of size `{}` to `{}`\"#,\n         let (in_style, in_width) = match in_elem.kind() {\n             // vectors of pointer-sized integers should've been\n             // disallowed before here, so this unwrap is safe.\n-            ty::Int(i) => (Style::Int(true), i.bit_width().unwrap()),\n-            ty::Uint(u) => (Style::Int(false), u.bit_width().unwrap()),\n+            ty::Int(i) => (\n+                Style::Int(true),\n+                i.normalize(bx.tcx().sess.target.pointer_width).bit_width().unwrap(),\n+            ),\n+            ty::Uint(u) => (\n+                Style::Int(false),\n+                u.normalize(bx.tcx().sess.target.pointer_width).bit_width().unwrap(),\n+            ),\n             ty::Float(f) => (Style::Float, f.bit_width()),\n             _ => (Style::Unsupported, 0),\n         };\n         let (out_style, out_width) = match out_elem.kind() {\n-            ty::Int(i) => (Style::Int(true), i.bit_width().unwrap()),\n-            ty::Uint(u) => (Style::Int(false), u.bit_width().unwrap()),\n+            ty::Int(i) => (\n+                Style::Int(true),\n+                i.normalize(bx.tcx().sess.target.pointer_width).bit_width().unwrap(),\n+            ),\n+            ty::Uint(u) => (\n+                Style::Int(false),\n+                u.normalize(bx.tcx().sess.target.pointer_width).bit_width().unwrap(),\n+            ),\n             ty::Float(f) => (Style::Float, f.bit_width()),\n             _ => (Style::Unsupported, 0),\n         };"}, {"sha": "b9382310deb2c99d1e9a0b7057d60c83a3d9ef19", "filename": "src/test/ui/simd/intrinsic/generic-cast-pointer-width.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d32ca64692d95c08d6563f363ea3074d1d30ce52/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-cast-pointer-width.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d32ca64692d95c08d6563f363ea3074d1d30ce52/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-cast-pointer-width.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-cast-pointer-width.rs?ref=d32ca64692d95c08d6563f363ea3074d1d30ce52", "patch": "@@ -0,0 +1,21 @@\n+// run-pass\n+#![feature(repr_simd, platform_intrinsics)]\n+\n+extern \"platform-intrinsic\" {\n+    fn simd_cast<T, U>(x: T) -> U;\n+}\n+\n+#[derive(Copy, Clone)]\n+#[repr(simd)]\n+struct V<T>([T; 4]);\n+\n+fn main() {\n+    let u = V::<usize>([0, 1, 2, 3]);\n+    let uu32: V<u32> = unsafe { simd_cast(u) };\n+    let ui64: V<i64> = unsafe { simd_cast(u) };\n+\n+    for (u, (uu32, ui64)) in u.0.iter().zip(uu32.0.iter().zip(ui64.0.iter())) {\n+        assert_eq!(*u as u32, *uu32);\n+        assert_eq!(*u as i64, *ui64);\n+    }\n+}"}]}