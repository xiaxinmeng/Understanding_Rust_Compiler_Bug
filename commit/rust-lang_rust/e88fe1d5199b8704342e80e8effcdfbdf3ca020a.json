{"sha": "e88fe1d5199b8704342e80e8effcdfbdf3ca020a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4OGZlMWQ1MTk5Yjg3MDQzNDJlODBlOGVmZmNkZmJkZjNjYTAyMGE=", "commit": {"author": {"name": "Anthony Deschamps", "email": "anthony.j.deschamps@gmail.com", "date": "2018-02-22T19:21:54Z"}, "committer": {"name": "Anthony Deschamps", "email": "anthony.j.deschamps@gmail.com", "date": "2018-02-22T19:21:54Z"}, "message": "Small grammar fix to docs for String::new().", "tree": {"sha": "b7f7704d83154d6c51f6406d401562774d3729e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7f7704d83154d6c51f6406d401562774d3729e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e88fe1d5199b8704342e80e8effcdfbdf3ca020a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e88fe1d5199b8704342e80e8effcdfbdf3ca020a", "html_url": "https://github.com/rust-lang/rust/commit/e88fe1d5199b8704342e80e8effcdfbdf3ca020a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e88fe1d5199b8704342e80e8effcdfbdf3ca020a/comments", "author": {"login": "adeschamps", "id": 3701316, "node_id": "MDQ6VXNlcjM3MDEzMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/3701316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adeschamps", "html_url": "https://github.com/adeschamps", "followers_url": "https://api.github.com/users/adeschamps/followers", "following_url": "https://api.github.com/users/adeschamps/following{/other_user}", "gists_url": "https://api.github.com/users/adeschamps/gists{/gist_id}", "starred_url": "https://api.github.com/users/adeschamps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adeschamps/subscriptions", "organizations_url": "https://api.github.com/users/adeschamps/orgs", "repos_url": "https://api.github.com/users/adeschamps/repos", "events_url": "https://api.github.com/users/adeschamps/events{/privacy}", "received_events_url": "https://api.github.com/users/adeschamps/received_events", "type": "User", "site_admin": false}, "committer": {"login": "adeschamps", "id": 3701316, "node_id": "MDQ6VXNlcjM3MDEzMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/3701316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adeschamps", "html_url": "https://github.com/adeschamps", "followers_url": "https://api.github.com/users/adeschamps/followers", "following_url": "https://api.github.com/users/adeschamps/following{/other_user}", "gists_url": "https://api.github.com/users/adeschamps/gists{/gist_id}", "starred_url": "https://api.github.com/users/adeschamps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adeschamps/subscriptions", "organizations_url": "https://api.github.com/users/adeschamps/orgs", "repos_url": "https://api.github.com/users/adeschamps/repos", "events_url": "https://api.github.com/users/adeschamps/events{/privacy}", "received_events_url": "https://api.github.com/users/adeschamps/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1f8e6fb06d7362eeb2065347a7db94e76b1cb2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1f8e6fb06d7362eeb2065347a7db94e76b1cb2f", "html_url": "https://github.com/rust-lang/rust/commit/b1f8e6fb06d7362eeb2065347a7db94e76b1cb2f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "409d2ab287e7c7ed899907f358f403aba874f542", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e88fe1d5199b8704342e80e8effcdfbdf3ca020a/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e88fe1d5199b8704342e80e8effcdfbdf3ca020a/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=e88fe1d5199b8704342e80e8effcdfbdf3ca020a", "patch": "@@ -364,7 +364,7 @@ impl String {\n     ///\n     /// Given that the `String` is empty, this will not allocate any initial\n     /// buffer. While that means that this initial operation is very\n-    /// inexpensive, but may cause excessive allocation later, when you add\n+    /// inexpensive, it may cause excessive allocation later when you add\n     /// data. If you have an idea of how much data the `String` will hold,\n     /// consider the [`with_capacity`] method to prevent excessive\n     /// re-allocation."}]}