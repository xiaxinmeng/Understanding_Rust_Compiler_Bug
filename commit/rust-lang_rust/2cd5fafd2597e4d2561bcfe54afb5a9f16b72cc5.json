{"sha": "2cd5fafd2597e4d2561bcfe54afb5a9f16b72cc5", "node_id": "C_kwDOAAsO6NoAKDJjZDVmYWZkMjU5N2U0ZDI1NjFiY2ZlNTRhZmI1YTlmMTZiNzJjYzU", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-10-03T00:44:50Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-10-03T00:44:50Z"}, "message": "Sync docs of `slice::{from_ptr_range, from_ptr_range_mut}`", "tree": {"sha": "0aab310b5c27ad150d7330533f3775a7db503e3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0aab310b5c27ad150d7330533f3775a7db503e3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cd5fafd2597e4d2561bcfe54afb5a9f16b72cc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cd5fafd2597e4d2561bcfe54afb5a9f16b72cc5", "html_url": "https://github.com/rust-lang/rust/commit/2cd5fafd2597e4d2561bcfe54afb5a9f16b72cc5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cd5fafd2597e4d2561bcfe54afb5a9f16b72cc5/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc1216e0464c5bf44158b8cb5319ff70446b5a13", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc1216e0464c5bf44158b8cb5319ff70446b5a13", "html_url": "https://github.com/rust-lang/rust/commit/bc1216e0464c5bf44158b8cb5319ff70446b5a13"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "3c5abd215a4b76ec244fd6e03decb8543d8b605b", "filename": "library/core/src/slice/raw.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2cd5fafd2597e4d2561bcfe54afb5a9f16b72cc5/library%2Fcore%2Fsrc%2Fslice%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cd5fafd2597e4d2561bcfe54afb5a9f16b72cc5/library%2Fcore%2Fsrc%2Fslice%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fraw.rs?ref=2cd5fafd2597e4d2561bcfe54afb5a9f16b72cc5", "patch": "@@ -223,9 +223,15 @@ pub const unsafe fn from_ptr_range<'a, T>(range: Range<*const T>) -> &'a [T] {\n     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n }\n \n-/// Performs the same functionality as [`from_ptr_range`], except that a\n+/// Forms a mutable slice from a pointer range.\n+///\n+/// This is the same functionality as [`from_ptr_range`], except that a\n /// mutable slice is returned.\n ///\n+/// This function is useful for interacting with foreign interfaces which\n+/// use two pointers to refer to a range of elements in memory, as is\n+/// common in C++.\n+///\n /// # Safety\n ///\n /// Behavior is undefined if any of the following conditions are violated:\n@@ -255,6 +261,14 @@ pub const unsafe fn from_ptr_range<'a, T>(range: Range<*const T>) -> &'a [T] {\n ///\n /// This function panics if `T` is a Zero-Sized Type (\u201cZST\u201d).\n ///\n+/// # Caveat\n+///\n+/// The lifetime for the returned slice is inferred from its usage. To\n+/// prevent accidental misuse, it's suggested to tie the lifetime to whichever\n+/// source lifetime is safe in the context, such as by providing a helper\n+/// function taking the lifetime of a host value for the slice, or by explicit\n+/// annotation.\n+///\n /// # Examples\n ///\n /// ```"}]}