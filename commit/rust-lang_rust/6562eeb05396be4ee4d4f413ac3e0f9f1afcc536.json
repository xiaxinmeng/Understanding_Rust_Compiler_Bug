{"sha": "6562eeb05396be4ee4d4f413ac3e0f9f1afcc536", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1NjJlZWIwNTM5NmJlNGVlNGQ0ZjQxM2FjM2UwZjlmMWFmY2M1MzY=", "commit": {"author": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2016-03-14T05:55:26Z"}, "committer": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2016-03-14T22:05:16Z"}, "message": "Add pretty printer output for `default`", "tree": {"sha": "e6e9b2d36fbc5b5db3806aa867391f171a5010c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6e9b2d36fbc5b5db3806aa867391f171a5010c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6562eeb05396be4ee4d4f413ac3e0f9f1afcc536", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6562eeb05396be4ee4d4f413ac3e0f9f1afcc536", "html_url": "https://github.com/rust-lang/rust/commit/6562eeb05396be4ee4d4f413ac3e0f9f1afcc536", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6562eeb05396be4ee4d4f413ac3e0f9f1afcc536/comments", "author": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc45d924b6ec0ffc7fadf8763ce5fc91946e2dcd", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc45d924b6ec0ffc7fadf8763ce5fc91946e2dcd", "html_url": "https://github.com/rust-lang/rust/commit/dc45d924b6ec0ffc7fadf8763ce5fc91946e2dcd"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "1100f084454c729747c50c057819d5e80acbecda", "filename": "src/librustc_front/print/pprust.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6562eeb05396be4ee4d4f413ac3e0f9f1afcc536/src%2Flibrustc_front%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6562eeb05396be4ee4d4f413ac3e0f9f1afcc536/src%2Flibrustc_front%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2Fprint%2Fpprust.rs?ref=6562eeb05396be4ee4d4f413ac3e0f9f1afcc536", "patch": "@@ -1014,6 +1014,11 @@ impl<'a> State<'a> {\n         try!(self.hardbreak_if_not_bol());\n         try!(self.maybe_print_comment(ii.span.lo));\n         try!(self.print_outer_attributes(&ii.attrs));\n+\n+        if let hir::Defaultness::Default = ii.defaultness {\n+            try!(self.word_nbsp(\"default\"));\n+        }\n+\n         match ii.node {\n             hir::ImplItemKind::Const(ref ty, ref expr) => {\n                 try!(self.print_associated_const(ii.name, &ty, Some(&expr), ii.vis));"}, {"sha": "533487ae1c547cb59fa0e613a43e38df08f195b5", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6562eeb05396be4ee4d4f413ac3e0f9f1afcc536/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6562eeb05396be4ee4d4f413ac3e0f9f1afcc536/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=6562eeb05396be4ee4d4f413ac3e0f9f1afcc536", "patch": "@@ -1582,6 +1582,9 @@ impl<'a> State<'a> {\n         try!(self.hardbreak_if_not_bol());\n         try!(self.maybe_print_comment(ii.span.lo));\n         try!(self.print_outer_attributes(&ii.attrs));\n+        if let ast::Defaultness::Default = ii.defaultness {\n+            try!(self.word_nbsp(\"default\"));\n+        }\n         match ii.node {\n             ast::ImplItemKind::Const(ref ty, ref expr) => {\n                 try!(self.print_associated_const(ii.ident, &ty, Some(&expr), ii.vis));"}, {"sha": "3f0f21ff03f27948c3b958ddd2ab4ed1f23774d9", "filename": "src/test/run-pass/specialization/specialization-default-methods.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6562eeb05396be4ee4d4f413ac3e0f9f1afcc536/src%2Ftest%2Frun-pass%2Fspecialization%2Fspecialization-default-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6562eeb05396be4ee4d4f413ac3e0f9f1afcc536/src%2Ftest%2Frun-pass%2Fspecialization%2Fspecialization-default-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspecialization%2Fspecialization-default-methods.rs?ref=6562eeb05396be4ee4d4f413ac3e0f9f1afcc536", "patch": "@@ -63,7 +63,8 @@ trait Bar {\n //                   /  \\\n //            Vec<i32>  $Vec<i64>\n \n-impl<T> Bar for T {} // use the provided method\n+// use the provided method\n+impl<T> Bar for T {}\n \n impl Bar for i32 {\n     fn bar(&self) -> i32 { 1 }"}]}