{"sha": "32c26302620b2dbbe0a2291f1969bc0b1622ae59", "node_id": "C_kwDOAAsO6NoAKDMyYzI2MzAyNjIwYjJkYmJlMGEyMjkxZjE5NjliYzBiMTYyMmFlNTk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-10T12:30:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-10T12:30:26Z"}, "message": "Auto merge of #95253 - jyn514:cargo-run, r=Mark-Simulacrum\n\nMake it possible to run `cargo test` for bootstrap\n\nNote that this only runs bootstrap's self-tests, not compiler or library tests.\n\nHelps with https://github.com/rust-lang/rust/issues/94829.", "tree": {"sha": "242faeeb79c16266a0664e74dfa50ff6f1523536", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/242faeeb79c16266a0664e74dfa50ff6f1523536"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32c26302620b2dbbe0a2291f1969bc0b1622ae59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32c26302620b2dbbe0a2291f1969bc0b1622ae59", "html_url": "https://github.com/rust-lang/rust/commit/32c26302620b2dbbe0a2291f1969bc0b1622ae59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32c26302620b2dbbe0a2291f1969bc0b1622ae59/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7af93292c27cd8b4a14f0f35bcb4c7e7ca9c287a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7af93292c27cd8b4a14f0f35bcb4c7e7ca9c287a", "html_url": "https://github.com/rust-lang/rust/commit/7af93292c27cd8b4a14f0f35bcb4c7e7ca9c287a"}, {"sha": "a0de44f469c22d10c3aada165ae6afd38d40ad2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0de44f469c22d10c3aada165ae6afd38d40ad2c", "html_url": "https://github.com/rust-lang/rust/commit/a0de44f469c22d10c3aada165ae6afd38d40ad2c"}], "stats": {"total": 13, "additions": 3, "deletions": 10}, "files": [{"sha": "a59f72ed968b4bac5f5f486efb0b378cc40c934f", "filename": "src/bootstrap/builder/tests.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/32c26302620b2dbbe0a2291f1969bc0b1622ae59/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c26302620b2dbbe0a2291f1969bc0b1622ae59/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder%2Ftests.rs?ref=32c26302620b2dbbe0a2291f1969bc0b1622ae59", "patch": "@@ -8,12 +8,9 @@ fn configure(cmd: &str, host: &[&str], target: &[&str]) -> Config {\n     config.save_toolstates = None;\n     config.dry_run = true;\n     config.ninja_in_file = false;\n-    config.out = PathBuf::from(env::var_os(\"BOOTSTRAP_OUTPUT_DIRECTORY\").unwrap());\n-    config.initial_rustc = PathBuf::from(env::var_os(\"RUSTC\").unwrap());\n-    config.initial_cargo = PathBuf::from(env::var_os(\"BOOTSTRAP_INITIAL_CARGO\").unwrap());\n     // try to avoid spurious failures in dist where we create/delete each others file\n-    let dir = config\n-        .out\n+    // HACK: rather than pull in `tempdir`, use the one that cargo has conveniently created for us\n+    let dir = Path::new(env!(\"OUT_DIR\"))\n         .join(\"tmp-rustbuild-tests\")\n         .join(&thread::current().name().unwrap_or(\"unknown\").replace(\":\", \"-\"));\n     t!(fs::create_dir_all(&dir));"}, {"sha": "e4937d7bbccbd4fa7ef7993b0e82ecb129f3d4c6", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c26302620b2dbbe0a2291f1969bc0b1622ae59/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c26302620b2dbbe0a2291f1969bc0b1622ae59/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=32c26302620b2dbbe0a2291f1969bc0b1622ae59", "patch": "@@ -454,7 +454,7 @@ impl Build {\n                 .map(PathBuf::from)\n                 .unwrap_or_else(|_| src.join(\"target\"));\n             let bootstrap_out = workspace_target_dir.join(\"debug\");\n-            if !bootstrap_out.join(\"rustc\").exists() {\n+            if !bootstrap_out.join(\"rustc\").exists() && !cfg!(test) {\n                 // this restriction can be lifted whenever https://github.com/rust-lang/rfcs/pull/3028 is implemented\n                 panic!(\"run `cargo build --bins` before `cargo run`\")\n             }"}, {"sha": "b88684791bc6dc6d40db16144a7ec2248e22c6e6", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/32c26302620b2dbbe0a2291f1969bc0b1622ae59/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c26302620b2dbbe0a2291f1969bc0b1622ae59/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=32c26302620b2dbbe0a2291f1969bc0b1622ae59", "patch": "@@ -2368,10 +2368,6 @@ impl Step for Bootstrap {\n             .current_dir(builder.src.join(\"src/bootstrap\"))\n             .env(\"RUSTFLAGS\", \"-Cdebuginfo=2\")\n             .env(\"CARGO_TARGET_DIR\", builder.out.join(\"bootstrap\"))\n-            // HACK: bootstrap's tests want to know the output directory, but there's no way to set\n-            // it except through config.toml. Set it through an env variable instead.\n-            .env(\"BOOTSTRAP_OUTPUT_DIRECTORY\", &builder.config.out)\n-            .env(\"BOOTSTRAP_INITIAL_CARGO\", &builder.config.initial_cargo)\n             .env(\"RUSTC_BOOTSTRAP\", \"1\")\n             .env(\"RUSTC\", &builder.initial_rustc);\n         if let Some(flags) = option_env!(\"RUSTFLAGS\") {"}]}