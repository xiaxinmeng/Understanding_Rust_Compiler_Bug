{"sha": "b7e41d9aeaade8a42ee9e71de34fdf2d982c664f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3ZTQxZDlhZWFhZGU4YTQyZWU5ZTcxZGUzNGZkZjJkOTgyYzY2NGY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2015-06-24T18:48:12Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2015-06-24T18:55:23Z"}, "message": "Add E0396 error explanation", "tree": {"sha": "243c2fcf3da3e08d0220da5094b9dc0234a4d77e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/243c2fcf3da3e08d0220da5094b9dc0234a4d77e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7e41d9aeaade8a42ee9e71de34fdf2d982c664f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7e41d9aeaade8a42ee9e71de34fdf2d982c664f", "html_url": "https://github.com/rust-lang/rust/commit/b7e41d9aeaade8a42ee9e71de34fdf2d982c664f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7e41d9aeaade8a42ee9e71de34fdf2d982c664f/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47c3dc2e7eda06c5637685597359bb23939cbfe4", "url": "https://api.github.com/repos/rust-lang/rust/commits/47c3dc2e7eda06c5637685597359bb23939cbfe4", "html_url": "https://github.com/rust-lang/rust/commit/47c3dc2e7eda06c5637685597359bb23939cbfe4"}], "stats": {"total": 106, "additions": 52, "deletions": 54}, "files": [{"sha": "c6b465b47f025aed2733cab72630f7e75448a7a1", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 52, "deletions": 3, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/b7e41d9aeaade8a42ee9e71de34fdf2d982c664f/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7e41d9aeaade8a42ee9e71de34fdf2d982c664f/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=b7e41d9aeaade8a42ee9e71de34fdf2d982c664f", "patch": "@@ -984,6 +984,57 @@ From [RFC 246]:\n [RFC 246]: https://github.com/rust-lang/rfcs/pull/246\n \"##,\n \n+E0395: r##\"\n+The value assigned to a constant expression must be known at compile time,\n+which is not the case when comparing raw pointers. Erroneous code example:\n+\n+```\n+static foo: i32 = 42;\n+static bar: i32 = 43;\n+\n+static baz: bool = { (&foo as *const i32) == (&bar as *const i32) };\n+// error: raw pointers cannot be compared in statics!\n+```\n+\n+Please check that the result of the comparison can be determined at compile time\n+or isn't assigned to a constant expression. Example:\n+\n+```\n+static foo: i32 = 42;\n+static bar: i32 = 43;\n+\n+let baz: bool = { (&foo as *const i32) == (&bar as *const i32) };\n+// baz isn't a constant expression so it's ok\n+```\n+\"##,\n+\n+E0396: r##\"\n+The value assigned to a constant expression must be known at compile time,\n+which is not the case when dereferencing raw pointers. Erroneous code\n+example:\n+\n+```\n+const foo: i32 = 42;\n+const baz: *const i32 = (&foo as *const i32);\n+\n+const deref: i32 = *baz;\n+// error: raw pointers cannot be dereferenced in constants!\n+```\n+\n+To fix this error, please do not assign this value to a constant expression.\n+Example:\n+\n+```\n+const foo: i32 = 42;\n+const baz: *const i32 = (&foo as *const i32);\n+\n+unsafe { let deref: i32 = *baz; }\n+// baz isn't a constant expression so it's ok\n+```\n+\n+You'll also note that this assignment must be done in an unsafe block!\n+\"##,\n+\n E0397: r##\"\n It is not allowed for a mutable static to allocate or have destructors. For\n example:\n@@ -1039,7 +1090,5 @@ register_diagnostics! {\n     E0314, // closure outlives stack frame\n     E0315, // cannot invoke closure outside of its lifetime\n     E0316, // nested quantification of lifetimes\n-    E0370, // discriminant overflow\n-    E0395, // pointer comparison in const-expr\n-    E0396  // pointer dereference in const-expr\n+    E0370  // discriminant overflow\n }"}, {"sha": "d32e194dbd439c061efac02a3d16517dbd7f0216", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/b7e41d9aeaade8a42ee9e71de34fdf2d982c664f/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7e41d9aeaade8a42ee9e71de34fdf2d982c664f/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=b7e41d9aeaade8a42ee9e71de34fdf2d982c664f", "patch": "@@ -1538,57 +1538,6 @@ For more information see the [opt-in builtin traits RFC](https://github.com/rust\n -lang/rfcs/blob/master/text/0019-opt-in-builtin-traits.md).\n \"##\n \n-E0395: r##\"\n-The value assigned to a constant expression must be known at compile time,\n-which is not the case when comparing raw pointers. Erroneous code example:\n-\n-```\n-static foo: i32 = 42;\n-static bar: i32 = 43;\n-\n-static baz: bool = { (&foo as *const i32) == (&bar as *const i32) };\n-// error: raw pointers cannot be compared in statics!\n-```\n-\n-To fix this error, please not assign this value to a constant expression.\n-Example:\n-\n-```\n-static foo: i32 = 42;\n-static bar: i32 = 43;\n-\n-let baz: bool = { (&foo as *const i32) == (&bar as *const i32) };\n-// baz isn't a constant expression so it's ok\n-```\n-\"##,\n-\n-E0396: r##\"\n-The value assigned to a constant expression must be known at compile time,\n-which is not the case when dereferencing raw pointers. Erroneous code\n-example:\n-\n-```\n-const foo: i32 = 42;\n-const baz: *const i32 = (&foo as *const i32);\n-\n-const deref: i32 = *baz;\n-// error: raw pointers cannot be dereferenced in constants!\n-```\n-\n-To fix this error, please not assign this value to a constant expression.\n-Example:\n-\n-```\n-const foo: i32 = 42;\n-const baz: *const i32 = (&foo as *const i32);\n-\n-unsafe { let deref: i32 = *baz; }\n-// baz isn't a constant expression so it's ok\n-```\n-\n-You'll also note that this assignation must be done in an unsafe block!\n-\"##\n-\n }\n \n "}]}