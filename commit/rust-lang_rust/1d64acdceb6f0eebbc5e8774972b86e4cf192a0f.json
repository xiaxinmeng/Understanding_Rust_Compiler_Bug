{"sha": "1d64acdceb6f0eebbc5e8774972b86e4cf192a0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkNjRhY2RjZWI2ZjBlZWJiYzVlODc3NDk3MmI4NmU0Y2YxOTJhMGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-09-30T11:24:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-09-30T11:24:38Z"}, "message": "Auto merge of #36822 - Aatch:resolve-callee-expr, r=luqmana\n\nResolve the callee type in check_call before autoderef\n\nIf the callee type is an associated type, then it needs to be normalized\nbefore trying to deref it. This matches the behaviour of\n`check_method_call` for autoderef behaviour in calls.\n\nFixes #36786", "tree": {"sha": "de8b45e4fd0f47abc75aa67ac0e284a0aa66aa22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de8b45e4fd0f47abc75aa67ac0e284a0aa66aa22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d64acdceb6f0eebbc5e8774972b86e4cf192a0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d64acdceb6f0eebbc5e8774972b86e4cf192a0f", "html_url": "https://github.com/rust-lang/rust/commit/1d64acdceb6f0eebbc5e8774972b86e4cf192a0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d64acdceb6f0eebbc5e8774972b86e4cf192a0f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c88ed2a1a7c5e11932f2f2b315e527933d3f7ebf", "url": "https://api.github.com/repos/rust-lang/rust/commits/c88ed2a1a7c5e11932f2f2b315e527933d3f7ebf", "html_url": "https://github.com/rust-lang/rust/commit/c88ed2a1a7c5e11932f2f2b315e527933d3f7ebf"}, {"sha": "ec2e05194f02fea51ad19de3498b9f6818166f1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec2e05194f02fea51ad19de3498b9f6818166f1c", "html_url": "https://github.com/rust-lang/rust/commit/ec2e05194f02fea51ad19de3498b9f6818166f1c"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "75c1d28f7d830385c15953f1c86b0f1cd58f8f6e", "filename": "src/librustc_typeck/check/callee.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1d64acdceb6f0eebbc5e8774972b86e4cf192a0f/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d64acdceb6f0eebbc5e8774972b86e4cf192a0f/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs?ref=1d64acdceb6f0eebbc5e8774972b86e4cf192a0f", "patch": "@@ -47,8 +47,9 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                       expected: Expectation<'tcx>) -> Ty<'tcx>\n     {\n         let original_callee_ty = self.check_expr(callee_expr);\n+        let expr_ty = self.structurally_resolved_type(call_expr.span, original_callee_ty);\n \n-        let mut autoderef = self.autoderef(callee_expr.span, original_callee_ty);\n+        let mut autoderef = self.autoderef(callee_expr.span, expr_ty);\n         let result = autoderef.by_ref().flat_map(|(adj_ty, idx)| {\n             self.try_overloaded_call_step(call_expr, callee_expr, adj_ty, idx)\n         }).next();"}, {"sha": "0d718c7ba46834fb76fe03e800986a507c7f2b90", "filename": "src/test/run-pass/issue-36786-resolve-call.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1d64acdceb6f0eebbc5e8774972b86e4cf192a0f/src%2Ftest%2Frun-pass%2Fissue-36786-resolve-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d64acdceb6f0eebbc5e8774972b86e4cf192a0f/src%2Ftest%2Frun-pass%2Fissue-36786-resolve-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-36786-resolve-call.rs?ref=1d64acdceb6f0eebbc5e8774972b86e4cf192a0f", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Ensure that types that rely on obligations are autoderefed\n+// correctly\n+\n+fn main() {\n+    let x : Vec<Box<Fn()>> = vec![Box::new(|| ())];\n+    x[0]()\n+}"}]}