{"sha": "47a9ffa573aac587b7d045177a4f05bd649261e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3YTlmZmE1NzNhYWM1ODdiN2QwNDUxNzdhNGYwNWJkNjQ5MjYxZTM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-04-14T15:01:28Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-04-14T15:01:28Z"}, "message": "Add multi-query search", "tree": {"sha": "07d79818694cd16898f8d9d1894abc14e5d9bc77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07d79818694cd16898f8d9d1894abc14e5d9bc77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47a9ffa573aac587b7d045177a4f05bd649261e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47a9ffa573aac587b7d045177a4f05bd649261e3", "html_url": "https://github.com/rust-lang/rust/commit/47a9ffa573aac587b7d045177a4f05bd649261e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47a9ffa573aac587b7d045177a4f05bd649261e3/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb730d75d4c1c05c90419841758300b6fbf01250", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb730d75d4c1c05c90419841758300b6fbf01250", "html_url": "https://github.com/rust-lang/rust/commit/fb730d75d4c1c05c90419841758300b6fbf01250"}], "stats": {"total": 102, "additions": 93, "deletions": 9}, "files": [{"sha": "2546a9410a9f653a44fb12dc37aa80f9ab287a26", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 70, "deletions": 7, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/47a9ffa573aac587b7d045177a4f05bd649261e3/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/47a9ffa573aac587b7d045177a4f05bd649261e3/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=47a9ffa573aac587b7d045177a4f05bd649261e3", "patch": "@@ -1299,14 +1299,78 @@\n             printTab(currentTab);\n         }\n \n+        function execSearch(query, searchWords) {\n+            var queries = query.raw.split(\",\");\n+            var results = {\n+                'in_args': [],\n+                'returned': [],\n+                'others': [],\n+            };\n+\n+            for (var i = 0; i < queries.length; ++i) {\n+                var query = queries[i].trim();\n+                if (query.length !== 0) {\n+                    var tmp = execQuery(getQuery(query), searchWords);\n+\n+                    results['in_args'].push(tmp['in_args']);\n+                    results['returned'].push(tmp['returned']);\n+                    results['others'].push(tmp['others']);\n+                }\n+            }\n+            if (queries.length > 1) {\n+                function getSmallest(arrays, positions) {\n+                    var start = null;\n+\n+                    for (var it = 0; it < positions.length; ++it) {\n+                        if (arrays[it].length > positions[it] &&\n+                            (start === null || start > arrays[it][positions[it]].lev)) {\n+                            start = arrays[it][positions[it]].lev;\n+                        }\n+                    }\n+                    return start;\n+                }\n+\n+                function mergeArrays(arrays) {\n+                    var ret = [];\n+                    var positions = [];\n+\n+                    for (var x = 0; x < arrays.length; ++x) {\n+                        positions.push(0);\n+                    }\n+                    while (ret.length < MAX_RESULTS) {\n+                        var smallest = getSmallest(arrays, positions);\n+                        if (smallest === null) {\n+                            break;\n+                        }\n+                        for (x = 0; x < arrays.length && ret.length < MAX_RESULTS; ++x) {\n+                            if (arrays[x].length > positions[x] &&\n+                                    arrays[x][positions[x]].lev === smallest) {\n+                                ret.push(arrays[x][positions[x]]);\n+                                positions[x] += 1;\n+                            }\n+                        }\n+                    }\n+                    return ret;\n+                }\n+\n+                return {\n+                    'in_args': mergeArrays(results['in_args']),\n+                    'returned': mergeArrays(results['returned']),\n+                    'others': mergeArrays(results['others']),\n+                };\n+            } else {\n+                return {\n+                    'in_args': results['in_args'][0],\n+                    'returned': results['returned'][0],\n+                    'others': results['others'][0],\n+                };\n+            }\n+        }\n+\n         function search(e) {\n-            var query,\n-                obj, i, len,\n-                results = {\"in_args\": [], \"returned\": [], \"others\": []},\n-                resultIndex;\n             var params = getQueryStringParams();\n+            var query = getQuery(document.getElementsByClassName('search-input')[0].value);\n \n-            query = getQuery(document.getElementsByClassName('search-input')[0].value);\n             if (e) {\n                 e.preventDefault();\n             }\n@@ -1328,8 +1392,7 @@\n                 }\n             }\n \n-            results = execQuery(query, index);\n-            showResults(results);\n+            showResults(execSearch(query, index));\n         }\n \n         function buildIndex(rawSearchIndex) {"}, {"sha": "3793ca6599c5f8aed767a49e4f92c1bab7a1fa7c", "filename": "src/test/rustdoc-js/multi-query.js", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/47a9ffa573aac587b7d045177a4f05bd649261e3/src%2Ftest%2Frustdoc-js%2Fmulti-query.js", "raw_url": "https://github.com/rust-lang/rust/raw/47a9ffa573aac587b7d045177a4f05bd649261e3/src%2Ftest%2Frustdoc-js%2Fmulti-query.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js%2Fmulti-query.js?ref=47a9ffa573aac587b7d045177a4f05bd649261e3", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+const QUERY = 'str,u8';\n+\n+const EXPECTED = {\n+    'others': [\n+        { 'path': 'std', 'name': 'str' },\n+        { 'path': 'std', 'name': 'u8' },\n+        { 'path': 'std::ffi', 'name': 'CStr' },\n+        { 'path': 'std::simd', 'name': 'u8x2' },\n+    ],\n+};"}, {"sha": "1e6c4336a9e995cf054399bc5cef863d1f67471e", "filename": "src/tools/rustdoc-js/tester.js", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/47a9ffa573aac587b7d045177a4f05bd649261e3/src%2Ftools%2Frustdoc-js%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/47a9ffa573aac587b7d045177a4f05bd649261e3/src%2Ftools%2Frustdoc-js%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-js%2Ftester.js?ref=47a9ffa573aac587b7d045177a4f05bd649261e3", "patch": "@@ -157,7 +157,8 @@ function main(argv) {\n     // execQuery first parameter is built in getQuery (which takes in the search input).\n     // execQuery last parameter is built in buildIndex.\n     // buildIndex requires the hashmap from search-index.\n-    var functionsToLoad = [\"levenshtein\", \"validateResult\", \"getQuery\", \"buildIndex\", \"execQuery\"];\n+    var functionsToLoad = [\"levenshtein\", \"validateResult\", \"getQuery\", \"buildIndex\", \"execQuery\",\n+                           \"execSearch\"];\n \n     finalJS += 'window = { \"currentCrate\": \"std\" };\\n';\n     finalJS += loadThings(arraysToLoad, 'array', extractArrayVariable, mainJs);\n@@ -174,7 +175,7 @@ function main(argv) {\n                                'exports.QUERY = QUERY;exports.EXPECTED = EXPECTED;');\n         const expected = loadedFile.EXPECTED;\n         const query = loadedFile.QUERY;\n-        var results = loaded.execQuery(loaded.getQuery(query), index);\n+        var results = loaded.execSearch(loaded.getQuery(query), index);\n         process.stdout.write('Checking \"' + file + '\" ... ');\n         var error_text = [];\n         for (var key in expected) {"}]}