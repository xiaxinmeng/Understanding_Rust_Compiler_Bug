{"sha": "74cd8ecc7ebe2782044f6b91ea94f0ac95b9fefa", "node_id": "C_kwDOAAsO6NoAKDc0Y2Q4ZWNjN2ViZTI3ODIwNDRmNmI5MWVhOTRmMGFjOTViOWZlZmE", "commit": {"author": {"name": "Duong Quoc Khanh", "email": "dqkqdlot@gmail.com", "date": "2023-02-09T08:37:11Z"}, "committer": {"name": "Duong Quoc Khanh", "email": "dqkqdlot@gmail.com", "date": "2023-02-09T08:37:11Z"}, "message": "Add completion without body.\n\nAdd completion for Fn, Const, TypeAlias without body.", "tree": {"sha": "6f1e35e12420217ca7e27d6a2d377b7e3be504ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f1e35e12420217ca7e27d6a2d377b7e3be504ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74cd8ecc7ebe2782044f6b91ea94f0ac95b9fefa", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEwZYQ1XvHmidXWoT/2lKnToBKAOcFAmPksPUACgkQ2lKnToBK\nAOeUGQ//TAtLhvCmI6HDsBtac5lhrFPIrx94+uggMLF79utnPkzPkzEEQ+NGGEar\nNTcWu/QuP68jCW6kJwzJezJSOStkpJOU4PYpvdkM8PgSarSOIGCZisujfX6XidJx\npSfOVyJwZP0fEDJRy+qInWHS7Y2Km3GbVwSgwcYVjl0ZgNVbeqF+Y/VSzQngSP5Z\nhqzrs9L3wT4Zhyr215eM/9Xu7vQVMPe8ZLOrmFYLtYL35xv9HCriQzlQ9zREaNt/\ncEo0WmV9EID5wOthP6ojP4oDOHSc50bDRZ9EYaXiwzK08cNkzjA5NC1roifJJnQD\neg6DvZmhZeKkfN4shm4ZtVgrBiW5giSoBzNEgBF7O+D+C74eWlBdZgK2HjdCUV1W\nEecLlH1yERbX6pEntviKHbgEYF+Qa5ZwFZG/xXKu5F93dY9U87H//8CQK4sMFnMs\nxOpWtF3qM0NbU+WjcmVqC5gJXsU1/e5qkVb0oOFXqkbegZ/XyJaVN66NuDiqIyHL\nmwXGAE7uwoPAN/wzjZCu6gCC9skcJkxLJWUIjA85yHGSOeYWFnkxNHGeHT3JpxDp\nh/Vj+1/qMQyu9leBiEkHY8XZmLzeOxkhAITW+S1N8DBeq2X/ay6BVjQaPZdTiJ5l\n40QgIGJlaFKjJe0RWPjkGxXhboeCqYfueaHbh6HuJ0Wk6jyrM54=\n=o4Yj\n-----END PGP SIGNATURE-----", "payload": "tree 6f1e35e12420217ca7e27d6a2d377b7e3be504ce\nparent 58136b01ba0cc0c2f598c300db3cc864fcb09f1f\nauthor Duong Quoc Khanh <dqkqdlot@gmail.com> 1675931831 +0900\ncommitter Duong Quoc Khanh <dqkqdlot@gmail.com> 1675931831 +0900\n\nAdd completion without body.\n\nAdd completion for Fn, Const, TypeAlias without body.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74cd8ecc7ebe2782044f6b91ea94f0ac95b9fefa", "html_url": "https://github.com/rust-lang/rust/commit/74cd8ecc7ebe2782044f6b91ea94f0ac95b9fefa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74cd8ecc7ebe2782044f6b91ea94f0ac95b9fefa/comments", "author": {"login": "dqkqd", "id": 24296517, "node_id": "MDQ6VXNlcjI0Mjk2NTE3", "avatar_url": "https://avatars.githubusercontent.com/u/24296517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dqkqd", "html_url": "https://github.com/dqkqd", "followers_url": "https://api.github.com/users/dqkqd/followers", "following_url": "https://api.github.com/users/dqkqd/following{/other_user}", "gists_url": "https://api.github.com/users/dqkqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dqkqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dqkqd/subscriptions", "organizations_url": "https://api.github.com/users/dqkqd/orgs", "repos_url": "https://api.github.com/users/dqkqd/repos", "events_url": "https://api.github.com/users/dqkqd/events{/privacy}", "received_events_url": "https://api.github.com/users/dqkqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dqkqd", "id": 24296517, "node_id": "MDQ6VXNlcjI0Mjk2NTE3", "avatar_url": "https://avatars.githubusercontent.com/u/24296517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dqkqd", "html_url": "https://github.com/dqkqd", "followers_url": "https://api.github.com/users/dqkqd/followers", "following_url": "https://api.github.com/users/dqkqd/following{/other_user}", "gists_url": "https://api.github.com/users/dqkqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dqkqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dqkqd/subscriptions", "organizations_url": "https://api.github.com/users/dqkqd/orgs", "repos_url": "https://api.github.com/users/dqkqd/repos", "events_url": "https://api.github.com/users/dqkqd/events{/privacy}", "received_events_url": "https://api.github.com/users/dqkqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58136b01ba0cc0c2f598c300db3cc864fcb09f1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/58136b01ba0cc0c2f598c300db3cc864fcb09f1f", "html_url": "https://github.com/rust-lang/rust/commit/58136b01ba0cc0c2f598c300db3cc864fcb09f1f"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "4bff665ab1d770815e1502f1a87772c753bd1b13", "filename": "crates/ide-completion/src/context/analysis.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/74cd8ecc7ebe2782044f6b91ea94f0ac95b9fefa/crates%2Fide-completion%2Fsrc%2Fcontext%2Fanalysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74cd8ecc7ebe2782044f6b91ea94f0ac95b9fefa/crates%2Fide-completion%2Fsrc%2Fcontext%2Fanalysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcontext%2Fanalysis.rs?ref=74cd8ecc7ebe2782044f6b91ea94f0ac95b9fefa", "patch": "@@ -675,10 +675,10 @@ fn classify_name_ref(\n         {\n             if let Some(item) = ast::Item::cast(n) {\n                 let is_inbetween = match &item {\n-                    ast::Item::Const(it) => it.body().is_none(),\n+                    ast::Item::Const(it) => it.body().is_none() && it.semicolon_token().is_none(),\n                     ast::Item::Enum(it) => it.variant_list().is_none(),\n                     ast::Item::ExternBlock(it) => it.extern_item_list().is_none(),\n-                    ast::Item::Fn(it) => it.body().is_none(),\n+                    ast::Item::Fn(it) => it.body().is_none() && it.semicolon_token().is_none(),\n                     ast::Item::Impl(it) => it.assoc_item_list().is_none(),\n                     ast::Item::Module(it) => {\n                         it.item_list().is_none() && it.semicolon_token().is_none()\n@@ -688,7 +688,7 @@ fn classify_name_ref(\n                         it.field_list().is_none() && it.semicolon_token().is_none()\n                     }\n                     ast::Item::Trait(it) => it.assoc_item_list().is_none(),\n-                    ast::Item::TypeAlias(it) => it.ty().is_none(),\n+                    ast::Item::TypeAlias(it) => it.ty().is_none() && it.semicolon_token().is_none(),\n                     ast::Item::Union(it) => it.record_field_list().is_none(),\n                     _ => false,\n                 };"}]}