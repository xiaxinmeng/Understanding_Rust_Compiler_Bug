{"sha": "39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5ZTRhMjcyMDQ5ZjAwZjU1MjA4YzA0ZmE4YzZhOGRmY2RiZTRjOGE=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-03-23T03:38:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-03-23T03:38:02Z"}, "message": "Rollup merge of #40678 - michaelwoerister:dmi-prep, r=nikomatsakis\n\nSome preparations for directly computing the ICH of crate-metadata.\n\nThis PR contains some small fixes in preparation for direct metadata hashing. It mostly just moves stuff into places where it will be needed (making the module structure slightly cleaner along the way) and it fixes some omissions in the MIR region eraser.\n\nr? @nikomatsakis", "tree": {"sha": "7a4b783f1be5bb2fd41f0ffc68b4525f99330b42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a4b783f1be5bb2fd41f0ffc68b4525f99330b42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "html_url": "https://github.com/rust-lang/rust/commit/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a419ce9406e198d3d336185d6feff97051701eae", "url": "https://api.github.com/repos/rust-lang/rust/commits/a419ce9406e198d3d336185d6feff97051701eae", "html_url": "https://github.com/rust-lang/rust/commit/a419ce9406e198d3d336185d6feff97051701eae"}, {"sha": "45deab4a2c5d0674cac0fd260da4b8c0d46f7aa2", "url": "https://api.github.com/repos/rust-lang/rust/commits/45deab4a2c5d0674cac0fd260da4b8c0d46f7aa2", "html_url": "https://github.com/rust-lang/rust/commit/45deab4a2c5d0674cac0fd260da4b8c0d46f7aa2"}], "stats": {"total": 147, "additions": 87, "deletions": 60}, "files": [{"sha": "a71251eedf5d037e82e9ed84cb04efd32a4dae13", "filename": "src/librustc/ich/caching_codemap_view.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc%2Fich%2Fcaching_codemap_view.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc%2Fich%2Fcaching_codemap_view.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fcaching_codemap_view.rs?ref=39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use rustc::ty::TyCtxt;\n+use ty::TyCtxt;\n use std::rc::Rc;\n use syntax::codemap::CodeMap;\n use syntax_pos::{BytePos, FileMap};", "previous_filename": "src/librustc_incremental/calculate_svh/caching_codemap_view.rs"}, {"sha": "03051dc0034204a7dde4cc65c3882432c3070ef2", "filename": "src/librustc/ich/def_path_hash.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc%2Fich%2Fdef_path_hash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc%2Fich%2Fdef_path_hash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fdef_path_hash.rs?ref=39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "patch": "@@ -8,9 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use rustc::hir::def_id::DefId;\n-use rustc::ty::TyCtxt;\n-use rustc::util::nodemap::DefIdMap;\n+use hir::def_id::DefId;\n+use ty::TyCtxt;\n+use util::nodemap::DefIdMap;\n \n pub struct DefPathHashes<'a, 'tcx: 'a> {\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,", "previous_filename": "src/librustc_incremental/calculate_svh/def_path_hash.rs"}, {"sha": "d296d8293fb0674010bb00d12ec012fdfaca0588", "filename": "src/librustc/ich/fingerprint.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc%2Fich%2Ffingerprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc%2Fich%2Ffingerprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Ffingerprint.rs?ref=39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "previous_filename": "src/librustc_incremental/ich/fingerprint.rs"}, {"sha": "209953f3c686b85b99c1f136d90a1bf6def1924c", "filename": "src/librustc/ich/mod.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc%2Fich%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc%2Fich%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fmod.rs?ref=39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub use self::fingerprint::Fingerprint;\n+pub use self::def_path_hash::DefPathHashes;\n+pub use self::caching_codemap_view::CachingCodemapView;\n+\n+mod fingerprint;\n+mod def_path_hash;\n+mod caching_codemap_view;\n+\n+pub const ATTR_DIRTY: &'static str = \"rustc_dirty\";\n+pub const ATTR_CLEAN: &'static str = \"rustc_clean\";\n+pub const ATTR_DIRTY_METADATA: &'static str = \"rustc_metadata_dirty\";\n+pub const ATTR_CLEAN_METADATA: &'static str = \"rustc_metadata_clean\";\n+pub const ATTR_IF_THIS_CHANGED: &'static str = \"rustc_if_this_changed\";\n+pub const ATTR_THEN_THIS_WOULD_NEED: &'static str = \"rustc_then_this_would_need\";\n+\n+pub const IGNORED_ATTRIBUTES: &'static [&'static str] = &[\n+    \"cfg\",\n+    ATTR_IF_THIS_CHANGED,\n+    ATTR_THEN_THIS_WOULD_NEED,\n+    ATTR_DIRTY,\n+    ATTR_CLEAN,\n+    ATTR_DIRTY_METADATA,\n+    ATTR_CLEAN_METADATA\n+];"}, {"sha": "c1c945d4e6063fc007afff67da7da9d7f5db0bf6", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "patch": "@@ -72,6 +72,7 @@ pub mod diagnostics;\n pub mod cfg;\n pub mod dep_graph;\n pub mod hir;\n+pub mod ich;\n pub mod infer;\n pub mod lint;\n "}, {"sha": "1c1e0d91cb4d6cd0deac1c46b955ef7a43feae9b", "filename": "src/librustc/ty/util.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Futil.rs?ref=39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "patch": "@@ -509,18 +509,21 @@ impl<'a, 'gcx, 'tcx, W> TypeVisitor<'tcx> for TypeIdHasher<'a, 'gcx, 'tcx, W>\n     }\n \n     fn visit_region(&mut self, r: &'tcx ty::Region) -> bool {\n+        self.hash_discriminant_u8(r);\n         match *r {\n-            ty::ReErased => {\n-                self.hash::<u32>(0);\n+            ty::ReErased |\n+            ty::ReStatic |\n+            ty::ReEmpty => {\n+                // No variant fields to hash for these ...\n             }\n             ty::ReLateBound(db, ty::BrAnon(i)) => {\n-                assert!(db.depth > 0);\n-                self.hash::<u32>(db.depth);\n+                self.hash(db.depth);\n                 self.hash(i);\n             }\n-            ty::ReStatic |\n-            ty::ReEmpty |\n-            ty::ReEarlyBound(..) |\n+            ty::ReEarlyBound(ty::EarlyBoundRegion { index, name }) => {\n+                self.hash(index);\n+                self.hash(name.as_str());\n+            }\n             ty::ReLateBound(..) |\n             ty::ReFree(..) |\n             ty::ReScope(..) |"}, {"sha": "5d600270626cb0ebc9c65ab9b32d58697233b2e4", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "patch": "@@ -10,6 +10,7 @@\n \n use rustc::hir::{self, map as hir_map};\n use rustc::hir::lowering::lower_crate;\n+use rustc::ich::Fingerprint;\n use rustc_data_structures::stable_hasher::StableHasher;\n use rustc_mir as mir;\n use rustc::session::{Session, CompileResult, compile_result_from_err_count};\n@@ -25,7 +26,6 @@ use rustc::util::nodemap::NodeSet;\n use rustc::util::fs::rename_or_copy_remove;\n use rustc_borrowck as borrowck;\n use rustc_incremental::{self, IncrementalHashesMap};\n-use rustc_incremental::ich::Fingerprint;\n use rustc_resolve::{MakeGlobMap, Resolver};\n use rustc_metadata::creader::CrateLoader;\n use rustc_metadata::cstore::{self, CStore};"}, {"sha": "897ca0f29576181d18a5faf7005662ea61861582", "filename": "src/librustc_incremental/assert_dep_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_dep_graph.rs?ref=39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "patch": "@@ -52,13 +52,13 @@ use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::graph::{Direction, INCOMING, OUTGOING, NodeIndex};\n use rustc::hir;\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n+use rustc::ich::{ATTR_IF_THIS_CHANGED, ATTR_THEN_THIS_WOULD_NEED};\n use graphviz::IntoCow;\n use std::env;\n use std::fs::File;\n use std::io::Write;\n use syntax::ast;\n use syntax_pos::Span;\n-use {ATTR_IF_THIS_CHANGED, ATTR_THEN_THIS_WOULD_NEED};\n \n pub fn assert_dep_graph<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) {\n     let _ignore = tcx.dep_graph.in_ignore();"}, {"sha": "c9496a4deb8eb84293b3834cf67f20a3f33912f3", "filename": "src/librustc_incremental/calculate_svh/mod.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Fcalculate_svh%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Fcalculate_svh%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fcalculate_svh%2Fmod.rs?ref=39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "patch": "@@ -35,20 +35,16 @@ use rustc::hir;\n use rustc::hir::def_id::{CRATE_DEF_INDEX, DefId};\n use rustc::hir::intravisit as visit;\n use rustc::hir::intravisit::{Visitor, NestedVisitorMap};\n+use rustc::ich::{Fingerprint, DefPathHashes, CachingCodemapView};\n use rustc::ty::TyCtxt;\n use rustc_data_structures::stable_hasher::StableHasher;\n-use ich::Fingerprint;\n use rustc_data_structures::fx::FxHashMap;\n use rustc::util::common::record_time;\n use rustc::session::config::DebugInfoLevel::NoDebugInfo;\n \n-use self::def_path_hash::DefPathHashes;\n use self::svh_visitor::StrictVersionHashVisitor;\n-use self::caching_codemap_view::CachingCodemapView;\n \n-mod def_path_hash;\n mod svh_visitor;\n-mod caching_codemap_view;\n \n pub type IchHasher = StableHasher<Fingerprint>;\n "}, {"sha": "210803c3f329c9d63719227ab25c18f5d6d481d4", "filename": "src/librustc_incremental/calculate_svh/svh_visitor.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Fcalculate_svh%2Fsvh_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Fcalculate_svh%2Fsvh_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fcalculate_svh%2Fsvh_visitor.rs?ref=39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "patch": "@@ -26,23 +26,12 @@ use rustc::hir::*;\n use rustc::hir::def::Def;\n use rustc::hir::def_id::DefId;\n use rustc::hir::intravisit::{self as visit, Visitor};\n+use rustc::ich::{DefPathHashes, CachingCodemapView, IGNORED_ATTRIBUTES};\n use rustc::ty::TyCtxt;\n use std::hash::{Hash, Hasher};\n \n-use super::def_path_hash::DefPathHashes;\n-use super::caching_codemap_view::CachingCodemapView;\n use super::IchHasher;\n \n-const IGNORED_ATTRIBUTES: &'static [&'static str] = &[\n-    \"cfg\",\n-    ::ATTR_IF_THIS_CHANGED,\n-    ::ATTR_THEN_THIS_WOULD_NEED,\n-    ::ATTR_DIRTY,\n-    ::ATTR_CLEAN,\n-    ::ATTR_DIRTY_METADATA,\n-    ::ATTR_CLEAN_METADATA\n-];\n-\n pub struct StrictVersionHashVisitor<'a, 'hash: 'a, 'tcx: 'hash> {\n     pub tcx: TyCtxt<'hash, 'tcx, 'tcx>,\n     pub st: &'a mut IchHasher,"}, {"sha": "8edd04322d7f65302059a6930597008840dcf702", "filename": "src/librustc_incremental/ich/mod.rs", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a419ce9406e198d3d336185d6feff97051701eae/src%2Flibrustc_incremental%2Fich%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a419ce9406e198d3d336185d6feff97051701eae/src%2Flibrustc_incremental%2Fich%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fich%2Fmod.rs?ref=a419ce9406e198d3d336185d6feff97051701eae", "patch": "@@ -1,13 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-pub use self::fingerprint::Fingerprint;\n-\n-mod fingerprint;"}, {"sha": "3b61cc1464a91e55829f071ac8315bf4ffb2785b", "filename": "src/librustc_incremental/lib.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Flib.rs?ref=39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "patch": "@@ -36,17 +36,9 @@ extern crate serialize as rustc_serialize;\n extern crate syntax;\n extern crate syntax_pos;\n \n-const ATTR_DIRTY: &'static str = \"rustc_dirty\";\n-const ATTR_CLEAN: &'static str = \"rustc_clean\";\n-const ATTR_DIRTY_METADATA: &'static str = \"rustc_metadata_dirty\";\n-const ATTR_CLEAN_METADATA: &'static str = \"rustc_metadata_clean\";\n-const ATTR_IF_THIS_CHANGED: &'static str = \"rustc_if_this_changed\";\n-const ATTR_THEN_THIS_WOULD_NEED: &'static str = \"rustc_then_this_would_need\";\n-\n mod assert_dep_graph;\n mod calculate_svh;\n mod persist;\n-pub mod ich;\n \n pub use assert_dep_graph::assert_dep_graph;\n pub use calculate_svh::compute_incremental_hashes_map;"}, {"sha": "d900907395656d9c140df0839fe0ee52bcab30b9", "filename": "src/librustc_incremental/persist/data.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Fpersist%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Fpersist%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdata.rs?ref=39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "patch": "@@ -12,9 +12,9 @@\n \n use rustc::dep_graph::{DepNode, WorkProduct, WorkProductId};\n use rustc::hir::def_id::DefIndex;\n+use rustc::ich::Fingerprint;\n use std::sync::Arc;\n use rustc_data_structures::fx::FxHashMap;\n-use ich::Fingerprint;\n \n use super::directory::DefPathIndex;\n "}, {"sha": "d931f64d579e1a7f254baab3bddce755221dcc12", "filename": "src/librustc_incremental/persist/dirty_clean.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs?ref=39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "patch": "@@ -47,13 +47,12 @@ use rustc::hir;\n use rustc::hir::def_id::DefId;\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::hir::intravisit;\n+use rustc::ich::{Fingerprint, ATTR_DIRTY, ATTR_CLEAN, ATTR_DIRTY_METADATA,\n+                 ATTR_CLEAN_METADATA};\n use syntax::ast::{self, Attribute, NestedMetaItem};\n use rustc_data_structures::fx::{FxHashSet, FxHashMap};\n use syntax_pos::Span;\n use rustc::ty::TyCtxt;\n-use ich::Fingerprint;\n-\n-use {ATTR_DIRTY, ATTR_CLEAN, ATTR_DIRTY_METADATA, ATTR_CLEAN_METADATA};\n \n const LABEL: &'static str = \"label\";\n const CFG: &'static str = \"cfg\";"}, {"sha": "9d8ff57e03bcc4b39d9144653e8b77cfc2f0f2bc", "filename": "src/librustc_incremental/persist/hash.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Fpersist%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Fpersist%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fhash.rs?ref=39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "patch": "@@ -11,14 +11,14 @@\n use rustc::dep_graph::DepNode;\n use rustc::hir::def_id::{CrateNum, DefId};\n use rustc::hir::svh::Svh;\n+use rustc::ich::Fingerprint;\n use rustc::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::flock;\n use rustc_serialize::Decodable;\n use rustc_serialize::opaque::Decoder;\n \n use IncrementalHashesMap;\n-use ich::Fingerprint;\n use super::data::*;\n use super::fs::*;\n use super::file_format;"}, {"sha": "ed2e2e72ee79f7381db081082f6d5a608b4ac8d9", "filename": "src/librustc_incremental/persist/load.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fload.rs?ref=39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "patch": "@@ -13,6 +13,7 @@\n use rustc::dep_graph::{DepNode, WorkProductId};\n use rustc::hir::def_id::DefId;\n use rustc::hir::svh::Svh;\n+use rustc::ich::Fingerprint;\n use rustc::session::Session;\n use rustc::ty::TyCtxt;\n use rustc_data_structures::fx::{FxHashSet, FxHashMap};\n@@ -22,7 +23,6 @@ use std::path::{Path};\n use std::sync::Arc;\n \n use IncrementalHashesMap;\n-use ich::Fingerprint;\n use super::data::*;\n use super::directory::*;\n use super::dirty_clean;"}, {"sha": "fe8cf72996e15d8b1359e20a4338c6746f81cc0e", "filename": "src/librustc_incremental/persist/preds/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Fpersist%2Fpreds%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Fpersist%2Fpreds%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fpreds%2Fmod.rs?ref=39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "patch": "@@ -10,11 +10,11 @@\n \n use rustc::dep_graph::{DepGraphQuery, DepNode};\n use rustc::hir::def_id::DefId;\n+use rustc::ich::Fingerprint;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::graph::{Graph, NodeIndex};\n \n use super::hash::*;\n-use ich::Fingerprint;\n \n mod compress;\n "}, {"sha": "2e5186493370b5d3fd1829f239fe4a3bf617da43", "filename": "src/librustc_incremental/persist/save.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs?ref=39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "patch": "@@ -11,6 +11,7 @@\n use rustc::dep_graph::DepNode;\n use rustc::hir::def_id::DefId;\n use rustc::hir::svh::Svh;\n+use rustc::ich::Fingerprint;\n use rustc::session::Session;\n use rustc::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashMap;\n@@ -23,7 +24,6 @@ use std::fs::{self, File};\n use std::path::PathBuf;\n \n use IncrementalHashesMap;\n-use ich::Fingerprint;\n use super::data::*;\n use super::directory::*;\n use super::hash::*;"}, {"sha": "0f869e7ed02ffef25565302aeec721879061ac8d", "filename": "src/librustc_mir/transform/erase_regions.rs", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs?ref=39e4a272049f00f55208c04fa8c6a8dfcdbe4c8a", "patch": "@@ -13,7 +13,7 @@\n //! care erasing regions all over the place.\n \n use rustc::ty::subst::Substs;\n-use rustc::ty::{Ty, TyCtxt};\n+use rustc::ty::{Ty, TyCtxt, ReErased, ClosureSubsts};\n use rustc::mir::*;\n use rustc::mir::visit::MutVisitor;\n use rustc::mir::transform::{MirPass, MirSource, Pass};\n@@ -39,6 +39,32 @@ impl<'a, 'tcx> MutVisitor<'tcx> for EraseRegionsVisitor<'a, 'tcx> {\n     fn visit_substs(&mut self, substs: &mut &'tcx Substs<'tcx>) {\n         *substs = self.tcx.erase_regions(&{*substs});\n     }\n+\n+    fn visit_rvalue(&mut self, rvalue: &mut Rvalue<'tcx>, location: Location) {\n+        match *rvalue {\n+            Rvalue::Ref(ref mut r, _, _) => {\n+                *r = self.tcx.mk_region(ReErased);\n+            }\n+            Rvalue::Use(..) |\n+            Rvalue::Repeat(..) |\n+            Rvalue::Len(..) |\n+            Rvalue::Cast(..) |\n+            Rvalue::BinaryOp(..) |\n+            Rvalue::CheckedBinaryOp(..) |\n+            Rvalue::UnaryOp(..) |\n+            Rvalue::Discriminant(..) |\n+            Rvalue::Box(..) |\n+            Rvalue::Aggregate(..) => {\n+                // These variants don't contain regions.\n+            }\n+        }\n+        self.super_rvalue(rvalue, location);\n+    }\n+\n+    fn visit_closure_substs(&mut self,\n+                            substs: &mut ClosureSubsts<'tcx>) {\n+        *substs = self.tcx.erase_regions(substs);\n+    }\n }\n \n pub struct EraseRegions;"}]}