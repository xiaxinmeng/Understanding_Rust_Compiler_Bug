{"sha": "2ecffb6fc42fb5f2fce0ac0620176c5924d69dd6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlY2ZmYjZmYzQyZmI1ZjJmY2UwYWMwNjIwMTc2YzU5MjRkNjlkZDY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-03-07T10:54:35Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-03-07T10:54:35Z"}, "message": "Inline codegen_cgus", "tree": {"sha": "67318d7f9433d202a49601bb964271016508c801", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67318d7f9433d202a49601bb964271016508c801"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ecffb6fc42fb5f2fce0ac0620176c5924d69dd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ecffb6fc42fb5f2fce0ac0620176c5924d69dd6", "html_url": "https://github.com/rust-lang/rust/commit/2ecffb6fc42fb5f2fce0ac0620176c5924d69dd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ecffb6fc42fb5f2fce0ac0620176c5924d69dd6/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "152bde63fecfd2bc3b2296b36cf9140b977ff035", "url": "https://api.github.com/repos/rust-lang/rust/commits/152bde63fecfd2bc3b2296b36cf9140b977ff035", "html_url": "https://github.com/rust-lang/rust/commit/152bde63fecfd2bc3b2296b36cf9140b977ff035"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "9d68fb067753b51e7341512b852f975072f3fd84", "filename": "src/driver.rs", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/2ecffb6fc42fb5f2fce0ac0620176c5924d69dd6/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ecffb6fc42fb5f2fce0ac0620176c5924d69dd6/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=2ecffb6fc42fb5f2fce0ac0620176c5924d69dd6", "patch": "@@ -67,8 +67,17 @@ fn run_jit(tcx: TyCtxt<'_>) -> ! {\n         .declare_function(\"main\", Linkage::Import, &sig)\n         .unwrap();\n \n-    codegen_cgus(tcx, &mut jit_module, &mut None);\n+    let (_, cgus) = tcx.collect_and_partition_mono_items(LOCAL_CRATE);\n+    let mono_items = cgus\n+        .iter()\n+        .map(|cgu| cgu.items_in_deterministic_order(tcx).into_iter())\n+        .flatten()\n+        .collect::<FxHashMap<_, (_, _)>>();\n+\n+    codegen_mono_items(tcx, &mut jit_module, None, mono_items);\n+    crate::main_shim::maybe_create_entry_wrapper(tcx, &mut jit_module);\n     crate::allocator::codegen(tcx, &mut jit_module);\n+\n     jit_module.finalize_definitions();\n \n     tcx.sess.abort_if_errors();\n@@ -196,6 +205,13 @@ fn run_aot(\n             }\n         };\n \n+    let (_, cgus) = tcx.collect_and_partition_mono_items(LOCAL_CRATE);\n+    let mono_items = cgus\n+        .iter()\n+        .map(|cgu| cgu.items_in_deterministic_order(tcx).into_iter())\n+        .flatten()\n+        .collect::<FxHashMap<_, (_, _)>>();\n+\n     let mut module = new_module(\"some_file\".to_string());\n \n     let mut debug = if tcx.sess.opts.debuginfo != DebugInfo::None {\n@@ -208,7 +224,8 @@ fn run_aot(\n         None\n     };\n \n-    codegen_cgus(tcx, &mut module, &mut debug);\n+    codegen_mono_items(tcx, &mut module, debug.as_mut(), mono_items);\n+    crate::main_shim::maybe_create_entry_wrapper(tcx, &mut module);\n \n     tcx.sess.abort_if_errors();\n \n@@ -283,23 +300,6 @@ fn run_aot(\n     })\n }\n \n-fn codegen_cgus<'tcx>(\n-    tcx: TyCtxt<'tcx>,\n-    module: &mut Module<impl Backend + 'static>,\n-    debug: &mut Option<DebugContext<'tcx>>,\n-) {\n-    let (_, cgus) = tcx.collect_and_partition_mono_items(LOCAL_CRATE);\n-    let mono_items = cgus\n-        .iter()\n-        .map(|cgu| cgu.items_in_deterministic_order(tcx).into_iter())\n-        .flatten()\n-        .collect::<FxHashMap<_, (_, _)>>();\n-\n-    codegen_mono_items(tcx, module, debug.as_mut(), mono_items);\n-\n-    crate::main_shim::maybe_create_entry_wrapper(tcx, module);\n-}\n-\n fn codegen_mono_items<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     module: &mut Module<impl Backend + 'static>,"}]}