{"sha": "aa893535c4232176c0c05e4e8fb8c85a2a855a1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhODkzNTM1YzQyMzIxNzZjMGMwNWU0ZThmYjhjODVhMmE4NTVhMWY=", "commit": {"author": {"name": "Charles Gleason", "email": "charles_gleason@alumni.brown.edu", "date": "2019-10-28T21:53:03Z"}, "committer": {"name": "Charles Gleason", "email": "charles_gleason@alumni.brown.edu", "date": "2019-10-29T14:01:42Z"}, "message": "Use ptr::drop_in_place in VecDeque truncate", "tree": {"sha": "6f848af8f133a1758b4e28710ac54ea8ff6dd587", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f848af8f133a1758b4e28710ac54ea8ff6dd587"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa893535c4232176c0c05e4e8fb8c85a2a855a1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa893535c4232176c0c05e4e8fb8c85a2a855a1f", "html_url": "https://github.com/rust-lang/rust/commit/aa893535c4232176c0c05e4e8fb8c85a2a855a1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa893535c4232176c0c05e4e8fb8c85a2a855a1f/comments", "author": {"login": "crgl", "id": 36055314, "node_id": "MDQ6VXNlcjM2MDU1MzE0", "avatar_url": "https://avatars.githubusercontent.com/u/36055314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crgl", "html_url": "https://github.com/crgl", "followers_url": "https://api.github.com/users/crgl/followers", "following_url": "https://api.github.com/users/crgl/following{/other_user}", "gists_url": "https://api.github.com/users/crgl/gists{/gist_id}", "starred_url": "https://api.github.com/users/crgl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crgl/subscriptions", "organizations_url": "https://api.github.com/users/crgl/orgs", "repos_url": "https://api.github.com/users/crgl/repos", "events_url": "https://api.github.com/users/crgl/events{/privacy}", "received_events_url": "https://api.github.com/users/crgl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "crgl", "id": 36055314, "node_id": "MDQ6VXNlcjM2MDU1MzE0", "avatar_url": "https://avatars.githubusercontent.com/u/36055314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crgl", "html_url": "https://github.com/crgl", "followers_url": "https://api.github.com/users/crgl/followers", "following_url": "https://api.github.com/users/crgl/following{/other_user}", "gists_url": "https://api.github.com/users/crgl/gists{/gist_id}", "starred_url": "https://api.github.com/users/crgl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crgl/subscriptions", "organizations_url": "https://api.github.com/users/crgl/orgs", "repos_url": "https://api.github.com/users/crgl/repos", "events_url": "https://api.github.com/users/crgl/events{/privacy}", "received_events_url": "https://api.github.com/users/crgl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18c5f4e7f27aa3180d2b21f8383f3b0ba4f2bc73", "url": "https://api.github.com/repos/rust-lang/rust/commits/18c5f4e7f27aa3180d2b21f8383f3b0ba4f2bc73", "html_url": "https://github.com/rust-lang/rust/commit/18c5f4e7f27aa3180d2b21f8383f3b0ba4f2bc73"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "fffd3a9dedae9a59c4af17ce85476578737fc410", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/aa893535c4232176c0c05e4e8fb8c85a2a855a1f/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa893535c4232176c0c05e4e8fb8c85a2a855a1f/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=aa893535c4232176c0c05e4e8fb8c85a2a855a1f", "patch": "@@ -856,8 +856,31 @@ impl<T> VecDeque<T> {\n     /// ```\n     #[stable(feature = \"deque_extras\", since = \"1.16.0\")]\n     pub fn truncate(&mut self, len: usize) {\n-        for _ in len..self.len() {\n-            self.pop_back();\n+        // Safe because:\n+        //\n+        // * Any slice passed to `drop_in_place` is valid; the second case has\n+        //   `len <= front.len()` and returning on `len > self.len()` ensures\n+        //   `begin <= back.len()` in the first case\n+        // * The head of the VecDeque is moved before calling `drop_in_place`,\n+        //   so no value is dropped twice if `drop_in_place` panics\n+        unsafe {\n+            if len > self.len() {\n+                return;\n+            }\n+            let num_dropped = self.len() - len;\n+            let (front, back) = self.as_mut_slices();\n+            if len > front.len() {\n+                let begin = len - front.len();\n+                let drop_back = back.get_unchecked_mut(begin..) as *mut _;\n+                self.head = self.wrap_sub(self.head, num_dropped);\n+                ptr::drop_in_place(drop_back);\n+            } else {\n+                let drop_back = back as *mut _;\n+                let drop_front = front.get_unchecked_mut(len..) as *mut _;\n+                self.head = self.wrap_sub(self.head, num_dropped);\n+                ptr::drop_in_place(drop_front);\n+                ptr::drop_in_place(drop_back);\n+            }\n         }\n     }\n "}]}