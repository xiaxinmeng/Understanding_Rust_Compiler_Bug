{"sha": "919bfd86d94e039b016a63d3e91bc16dd94a92bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxOWJmZDg2ZDk0ZTAzOWIwMTZhNjNkM2U5MWJjMTZkZDk0YTkyYmY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-05-07T14:51:00Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-05-07T14:51:00Z"}, "message": "Don't stop running rustdoc-gui tests at first failure", "tree": {"sha": "c8a8c57f1ff6e7ff4c1caad09a7e61d9615dcedd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8a8c57f1ff6e7ff4c1caad09a7e61d9615dcedd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/919bfd86d94e039b016a63d3e91bc16dd94a92bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/919bfd86d94e039b016a63d3e91bc16dd94a92bf", "html_url": "https://github.com/rust-lang/rust/commit/919bfd86d94e039b016a63d3e91bc16dd94a92bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/919bfd86d94e039b016a63d3e91bc16dd94a92bf/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5f83d24aee866a14753a7cedbb4e301dfe5bef5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5f83d24aee866a14753a7cedbb4e301dfe5bef5", "html_url": "https://github.com/rust-lang/rust/commit/e5f83d24aee866a14753a7cedbb4e301dfe5bef5"}], "stats": {"total": 84, "additions": 38, "deletions": 46}, "files": [{"sha": "df467bebe7481b11a8fd5e6e4e8b9aa9767cb738", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 8, "deletions": 22, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/919bfd86d94e039b016a63d3e91bc16dd94a92bf/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/919bfd86d94e039b016a63d3e91bc16dd94a92bf/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=919bfd86d94e039b016a63d3e91bc16dd94a92bf", "patch": "@@ -831,28 +831,14 @@ impl Step for RustdocGUI {\n             command.arg(\"src/test/rustdoc-gui/lib.rs\").arg(\"-o\").arg(&out_dir);\n             builder.run(&mut command);\n \n-            let mut tests = Vec::new();\n-            for file in fs::read_dir(\"src/test/rustdoc-gui\").unwrap() {\n-                let file = file.unwrap();\n-                let file_path = file.path();\n-                let file_name = file.file_name();\n-\n-                if !file_name.to_str().unwrap().ends_with(\".goml\") {\n-                    continue;\n-                }\n-                tests.push(file_path);\n-            }\n-            tests.sort_unstable();\n-            for test in tests {\n-                let mut command = Command::new(&nodejs);\n-                command\n-                    .arg(\"src/tools/rustdoc-gui/tester.js\")\n-                    .arg(\"--doc-folder\")\n-                    .arg(out_dir.join(\"test_docs\"))\n-                    .arg(\"--test-file\")\n-                    .arg(test);\n-                builder.run(&mut command);\n-            }\n+            let mut command = Command::new(&nodejs);\n+            command\n+                .arg(\"src/tools/rustdoc-gui/tester.js\")\n+                .arg(\"--doc-folder\")\n+                .arg(out_dir.join(\"test_docs\"))\n+                .arg(\"--tests-folder\")\n+                .arg(\"src/test/rustdoc-gui\");\n+            builder.run(&mut command);\n         } else {\n             builder.info(\"No nodejs found, skipping \\\"src/test/rustdoc-gui\\\" tests\");\n         }"}, {"sha": "298fc7519facc0e775e8ffbc19fb47231840faeb", "filename": "src/tools/rustdoc-gui/tester.js", "status": "modified", "additions": 30, "deletions": 24, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/919bfd86d94e039b016a63d3e91bc16dd94a92bf/src%2Ftools%2Frustdoc-gui%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/919bfd86d94e039b016a63d3e91bc16dd94a92bf/src%2Ftools%2Frustdoc-gui%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-gui%2Ftester.js?ref=919bfd86d94e039b016a63d3e91bc16dd94a92bf", "patch": "@@ -3,29 +3,30 @@\n // ```\n // npm install browser-ui-test\n // ```\n-const path = require('path');\n+const fs = require(\"fs\");\n+const path = require(\"path\");\n const {Options, runTest} = require('browser-ui-test');\n \n function showHelp() {\n     console.log(\"rustdoc-js options:\");\n     console.log(\"  --doc-folder [PATH]        : location of the generated doc folder\");\n     console.log(\"  --help                     : show this message then quit\");\n-    console.log(\"  --test-file [PATH]         : location of the JS test file\");\n+    console.log(\"  --tests-folder [PATH]      : location of the .GOML tests folder\");\n }\n \n function parseOptions(args) {\n     var opts = {\n         \"doc_folder\": \"\",\n-        \"test_file\": \"\",\n+        \"tests_folder\": \"\",\n     };\n     var correspondances = {\n         \"--doc-folder\": \"doc_folder\",\n-        \"--test-file\": \"test_file\",\n+        \"--tests-folder\": \"tests_folder\",\n     };\n \n     for (var i = 0; i < args.length; ++i) {\n         if (args[i] === \"--doc-folder\"\n-            || args[i] === \"--test-file\") {\n+            || args[i] === \"--tests-folder\") {\n             i += 1;\n             if (i >= args.length) {\n                 console.log(\"Missing argument after `\" + args[i - 1] + \"` option.\");\n@@ -41,8 +42,8 @@ function parseOptions(args) {\n             return null;\n         }\n     }\n-    if (opts[\"test_file\"].length < 1) {\n-        console.log(\"Missing `--test-file` option.\");\n+    if (opts[\"tests_folder\"].length < 1) {\n+        console.log(\"Missing `--tests-folder` option.\");\n     } else if (opts[\"doc_folder\"].length < 1) {\n         console.log(\"Missing `--doc-folder` option.\");\n     } else {\n@@ -51,15 +52,8 @@ function parseOptions(args) {\n     return null;\n }\n \n-function checkFile(test_file, opts, loaded, index) {\n-    const test_name = path.basename(test_file, \".js\");\n-\n-    process.stdout.write('Checking \"' + test_name + '\" ... ');\n-    return runChecks(test_file, loaded, index);\n-}\n-\n-function main(argv) {\n-    var opts = parseOptions(argv.slice(2));\n+async function main(argv) {\n+    let opts = parseOptions(argv.slice(2));\n     if (opts === null) {\n         process.exit(1);\n     }\n@@ -68,22 +62,34 @@ function main(argv) {\n     try {\n         // This is more convenient that setting fields one by one.\n         options.parseArguments([\n-            '--no-screenshot',\n+            \"--no-screenshot\",\n             \"--variable\", \"DOC_PATH\", opts[\"doc_folder\"],\n         ]);\n     } catch (error) {\n         console.error(`invalid argument: ${error}`);\n         process.exit(1);\n     }\n \n-    runTest(opts[\"test_file\"], options).then(out => {\n-        const [output, nb_failures] = out;\n-        console.log(output);\n-        process.exit(nb_failures);\n-    }).catch(err => {\n-        console.error(err);\n+    let failed = false;\n+    let files = fs.readdirSync(opts[\"tests_folder\"]).filter(file => path.extname(file) == \".goml\");\n+\n+    files.sort();\n+    for (var i = 0; i < files.length; ++i) {\n+        const testPath = path.join(opts[\"tests_folder\"], files[i]);\n+        await runTest(testPath, options).then(out => {\n+            const [output, nb_failures] = out;\n+            console.log(output);\n+            if (nb_failures > 0) {\n+                failed = true;\n+            }\n+        }).catch(err => {\n+            console.error(err);\n+            failed = true;\n+        });\n+    }\n+    if (failed) {\n         process.exit(1);\n-    });\n+    }\n }\n \n main(process.argv);"}]}