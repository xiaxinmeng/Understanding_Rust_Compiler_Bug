{"sha": "e72c226bed92bbbf9050044b9ebafa6b8deb0ea3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MmMyMjZiZWQ5MmJiYmY5MDUwMDQ0YjllYmFmYTZiOGRlYjBlYTM=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-21T21:11:50Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2015-10-30T14:54:25Z"}, "message": "expose drop_in_place as ptr::drop_in_place", "tree": {"sha": "eb3ba24351073b5ae435f3d3d00a67dc3516966b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb3ba24351073b5ae435f3d3d00a67dc3516966b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e72c226bed92bbbf9050044b9ebafa6b8deb0ea3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e72c226bed92bbbf9050044b9ebafa6b8deb0ea3", "html_url": "https://github.com/rust-lang/rust/commit/e72c226bed92bbbf9050044b9ebafa6b8deb0ea3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e72c226bed92bbbf9050044b9ebafa6b8deb0ea3/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "914c4dbc2a1037e63625b0bf846c6b550d0918c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/914c4dbc2a1037e63625b0bf846c6b550d0918c7", "html_url": "https://github.com/rust-lang/rust/commit/914c4dbc2a1037e63625b0bf846c6b550d0918c7"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "899e7de4ed59f9ac769e75bb69e7550a02e30f93", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e72c226bed92bbbf9050044b9ebafa6b8deb0ea3/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e72c226bed92bbbf9050044b9ebafa6b8deb0ea3/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=e72c226bed92bbbf9050044b9ebafa6b8deb0ea3", "patch": "@@ -103,6 +103,8 @@\n #![feature(unsize)]\n #![feature(core_slice_ext)]\n #![feature(core_str_ext)]\n+#![feature(drop_in_place)]\n+\n #![cfg_attr(stage0, feature(alloc_system))]\n #![cfg_attr(not(stage0), feature(needs_allocator))]\n "}, {"sha": "c14a07424a434f14eab4aa38863ce44ebecdeedb", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e72c226bed92bbbf9050044b9ebafa6b8deb0ea3/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e72c226bed92bbbf9050044b9ebafa6b8deb0ea3/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=e72c226bed92bbbf9050044b9ebafa6b8deb0ea3", "patch": "@@ -195,7 +195,26 @@ extern \"rust-intrinsic\" {\n \n     pub fn size_of_val<T: ?Sized>(_: &T) -> usize;\n     pub fn min_align_of_val<T: ?Sized>(_: &T) -> usize;\n-    pub fn drop_in_place<T: ?Sized>(_: *mut T);\n+\n+    /// Executes the destructor (if any) of the pointed-to value.\n+    ///\n+    /// This has two usecases:\n+    ///\n+    /// * It is *required* to use `drop_in_place` to drop unsized types like\n+    ///   trait objects, because they can't be read out onto the stack and\n+    ///   dropped normally.\n+    ///\n+    /// * It is friendlier to the optimizer to do this over `ptr::read` when\n+    ///   dropping manually allocated memory (e.g. when writing Box/Rc/Vec),\n+    ///   as the compiler doesn't need to prove that it's sound to elide the\n+    ///   copy.\n+    ///\n+    /// # Undefined Behaviour\n+    ///\n+    /// This has all the same safety problems as `ptr::read` with respect to\n+    /// invalid pointers, types, and double drops.\n+    #[unstable(feature = \"drop_in_place\", reason = \"just exposed, needs FCP\", issue = \"27908\")]\n+    pub fn drop_in_place<T: ?Sized>(to_drop: *mut T);\n \n     /// Gets a static string slice containing the name of a type.\n     pub fn type_name<T: ?Sized>() -> &'static str;"}, {"sha": "54cd3d0c867037d5343f5f747321edbf2e63c298", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e72c226bed92bbbf9050044b9ebafa6b8deb0ea3/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e72c226bed92bbbf9050044b9ebafa6b8deb0ea3/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=e72c226bed92bbbf9050044b9ebafa6b8deb0ea3", "patch": "@@ -40,6 +40,8 @@ pub use intrinsics::copy;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use intrinsics::write_bytes;\n \n+pub use intrinsics::drop_in_place;\n+\n /// Creates a null raw pointer.\n ///\n /// # Examples"}]}