{"sha": "5e026eacb1eaa0e56bb2adcc3fa86ace8542866f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlMDI2ZWFjYjFlYWEwZTU2YmIyYWRjYzNmYTg2YWNlODU0Mjg2NmY=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-04-30T18:16:09Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-09-10T18:19:07Z"}, "message": "Remove some span tracking.", "tree": {"sha": "c031b9122bc451e98ead41d67e03ced5175cd573", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c031b9122bc451e98ead41d67e03ced5175cd573"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e026eacb1eaa0e56bb2adcc3fa86ace8542866f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e026eacb1eaa0e56bb2adcc3fa86ace8542866f", "html_url": "https://github.com/rust-lang/rust/commit/5e026eacb1eaa0e56bb2adcc3fa86ace8542866f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e026eacb1eaa0e56bb2adcc3fa86ace8542866f/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f84856cbb0bcba3fae1a74a7e913e1a42d7144f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f84856cbb0bcba3fae1a74a7e913e1a42d7144f0", "html_url": "https://github.com/rust-lang/rust/commit/f84856cbb0bcba3fae1a74a7e913e1a42d7144f0"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "eb496140553ad80619d0a3bd0784c99db7cad80d", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5e026eacb1eaa0e56bb2adcc3fa86ace8542866f/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e026eacb1eaa0e56bb2adcc3fa86ace8542866f/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=5e026eacb1eaa0e56bb2adcc3fa86ace8542866f", "patch": "@@ -521,11 +521,11 @@ impl Span {\n     }\n     #[inline]\n     pub fn ctxt(self) -> SyntaxContext {\n-        self.data().ctxt\n+        self.data_untracked().ctxt\n     }\n     #[inline]\n     pub fn with_ctxt(self, ctxt: SyntaxContext) -> Span {\n-        self.data().with_ctxt(ctxt)\n+        self.data_untracked().with_ctxt(ctxt)\n     }\n     #[inline]\n     pub fn parent(self) -> Option<LocalDefId> {\n@@ -539,7 +539,7 @@ impl Span {\n     /// Returns `true` if this is a dummy span with any hygienic context.\n     #[inline]\n     pub fn is_dummy(self) -> bool {\n-        self.data().is_dummy()\n+        self.data_untracked().is_dummy()\n     }\n \n     /// Returns `true` if this span comes from a macro or desugaring.\n@@ -561,20 +561,20 @@ impl Span {\n     /// Returns a new span representing an empty span at the beginning of this span.\n     #[inline]\n     pub fn shrink_to_lo(self) -> Span {\n-        let span = self.data();\n+        let span = self.data_untracked();\n         span.with_hi(span.lo)\n     }\n     /// Returns a new span representing an empty span at the end of this span.\n     #[inline]\n     pub fn shrink_to_hi(self) -> Span {\n-        let span = self.data();\n+        let span = self.data_untracked();\n         span.with_lo(span.hi)\n     }\n \n     #[inline]\n     /// Returns `true` if `hi == lo`.\n     pub fn is_empty(&self) -> bool {\n-        let span = self.data();\n+        let span = self.data_untracked();\n         span.hi == span.lo\n     }\n "}]}