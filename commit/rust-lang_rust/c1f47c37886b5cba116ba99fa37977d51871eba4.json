{"sha": "c1f47c37886b5cba116ba99fa37977d51871eba4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxZjQ3YzM3ODg2YjVjYmExMTZiYTk5ZmEzNzk3N2Q1MTg3MWViYTQ=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-08-12T20:06:32Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-08-26T19:44:50Z"}, "message": "Add test marks", "tree": {"sha": "858db3e0343ca35c5e3ff7c04209eb7c25b022bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/858db3e0343ca35c5e3ff7c04209eb7c25b022bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1f47c37886b5cba116ba99fa37977d51871eba4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1f47c37886b5cba116ba99fa37977d51871eba4", "html_url": "https://github.com/rust-lang/rust/commit/c1f47c37886b5cba116ba99fa37977d51871eba4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1f47c37886b5cba116ba99fa37977d51871eba4/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ce05633a170076a3624a79ed96a40c1730a8164", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ce05633a170076a3624a79ed96a40c1730a8164", "html_url": "https://github.com/rust-lang/rust/commit/0ce05633a170076a3624a79ed96a40c1730a8164"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "3795debc1abca598a1fb0e09f7d95a01736ae034", "filename": "crates/ra_hir/src/marks.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c1f47c37886b5cba116ba99fa37977d51871eba4/crates%2Fra_hir%2Fsrc%2Fmarks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1f47c37886b5cba116ba99fa37977d51871eba4/crates%2Fra_hir%2Fsrc%2Fmarks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmarks.rs?ref=c1f47c37886b5cba116ba99fa37977d51871eba4", "patch": "@@ -11,4 +11,9 @@ test_utils::marks!(\n     match_ergonomics_ref\n     trait_resolution_on_fn_type\n     infer_while_let\n+    match_complex_arm_ty\n+    match_first_arm_never\n+    match_second_arm_never\n+    match_all_arms_never\n+    match_no_never_arms\n );"}, {"sha": "b310bf6bd66245f1517a52df27d630868afeca98", "filename": "crates/ra_hir/src/ty/infer.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c1f47c37886b5cba116ba99fa37977d51871eba4/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1f47c37886b5cba116ba99fa37977d51871eba4/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs?ref=c1f47c37886b5cba116ba99fa37977d51871eba4", "patch": "@@ -1096,8 +1096,10 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                     }\n                     let arm_ty = self.infer_expr(arm.expr, &expected);\n                     if all_arms_never && Self::is_never(&arm_ty) {\n+                        tested_by!(match_first_arm_never);\n                         resulting_match_ty = Some(arm_ty);\n                     } else {\n+                        tested_by!(match_second_arm_never);\n                         all_arms_never = false;\n                         resulting_match_ty = None;\n                     }\n@@ -1106,10 +1108,13 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                 if let (Ty::Infer(expected_tv), Some(match_ty)) =\n                     (&expected.ty, &resulting_match_ty)\n                 {\n+                    tested_by!(match_all_arms_never);\n                     self.var_unification_table\n                         .union_value(expected_tv.to_inner(), TypeVarValue::Known(match_ty.clone()));\n                     match_ty.clone()\n                 } else {\n+                    tested_by!(match_no_never_arms);\n+                    tested_by!(match_complex_arm_ty);\n                     expected.ty\n                 }\n             }"}, {"sha": "7ec834836c418d7c9e097213000bbd265a324f4e", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c1f47c37886b5cba116ba99fa37977d51871eba4/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1f47c37886b5cba116ba99fa37977d51871eba4/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=c1f47c37886b5cba116ba99fa37977d51871eba4", "patch": "@@ -3595,12 +3595,13 @@ fn no_such_field_diagnostics() {\n     );\n }\n \n-#[cfg(test)]\n mod match_with_never_tests {\n     use super::type_at;\n+    use test_utils::covers;\n \n     #[test]\n     fn match_complex_arm_ty() {\n+        covers!(match_complex_arm_ty);\n         let t = type_at(\n             r#\"\n //- /main.rs\n@@ -3624,6 +3625,7 @@ fn test(a: i32) {\n \n     #[test]\n     fn match_first_arm_never() {\n+        covers!(match_first_arm_never);\n         let t = type_at(\n             r#\"\n //- /main.rs\n@@ -3644,6 +3646,7 @@ fn test(a: i32) {\n \n     #[test]\n     fn match_second_arm_never() {\n+        covers!(match_second_arm_never);\n         let t = type_at(\n             r#\"\n //- /main.rs\n@@ -3664,6 +3667,7 @@ fn test(a: i32) {\n \n     #[test]\n     fn match_all_arms_never() {\n+        covers!(match_all_arms_never);\n         let t = type_at(\n             r#\"\n //- /main.rs\n@@ -3682,6 +3686,7 @@ fn test(a: i32) {\n \n     #[test]\n     fn match_no_never_arms() {\n+        covers!(match_no_never_arms);\n         let t = type_at(\n             r#\"\n //- /main.rs"}]}