{"sha": "ca8578a953d0563dbef499ea2c2c853c9b71887c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhODU3OGE5NTNkMDU2M2RiZWY0OTllYTJjMmM4NTNjOWI3MTg4N2M=", "commit": {"author": {"name": "Daniel Grunwald", "email": "daniel@danielgrunwald.de", "date": "2015-01-11T15:09:31Z"}, "committer": {"name": "Daniel Grunwald", "email": "daniel@danielgrunwald.de", "date": "2015-01-11T15:09:31Z"}, "message": "Add test case that RangeTo notation works in return statements.", "tree": {"sha": "f77ec5a80d7399e27967d4db5f3fa20c1f9a328d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f77ec5a80d7399e27967d4db5f3fa20c1f9a328d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca8578a953d0563dbef499ea2c2c853c9b71887c", "comment_count": 7, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca8578a953d0563dbef499ea2c2c853c9b71887c", "html_url": "https://github.com/rust-lang/rust/commit/ca8578a953d0563dbef499ea2c2c853c9b71887c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca8578a953d0563dbef499ea2c2c853c9b71887c/comments", "author": {"login": "dgrunwald", "id": 243140, "node_id": "MDQ6VXNlcjI0MzE0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/243140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgrunwald", "html_url": "https://github.com/dgrunwald", "followers_url": "https://api.github.com/users/dgrunwald/followers", "following_url": "https://api.github.com/users/dgrunwald/following{/other_user}", "gists_url": "https://api.github.com/users/dgrunwald/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgrunwald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgrunwald/subscriptions", "organizations_url": "https://api.github.com/users/dgrunwald/orgs", "repos_url": "https://api.github.com/users/dgrunwald/repos", "events_url": "https://api.github.com/users/dgrunwald/events{/privacy}", "received_events_url": "https://api.github.com/users/dgrunwald/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dgrunwald", "id": 243140, "node_id": "MDQ6VXNlcjI0MzE0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/243140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgrunwald", "html_url": "https://github.com/dgrunwald", "followers_url": "https://api.github.com/users/dgrunwald/followers", "following_url": "https://api.github.com/users/dgrunwald/following{/other_user}", "gists_url": "https://api.github.com/users/dgrunwald/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgrunwald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgrunwald/subscriptions", "organizations_url": "https://api.github.com/users/dgrunwald/orgs", "repos_url": "https://api.github.com/users/dgrunwald/repos", "events_url": "https://api.github.com/users/dgrunwald/events{/privacy}", "received_events_url": "https://api.github.com/users/dgrunwald/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0863adf24b316d8ecaca5a1b8866ee5db902313", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0863adf24b316d8ecaca5a1b8866ee5db902313", "html_url": "https://github.com/rust-lang/rust/commit/d0863adf24b316d8ecaca5a1b8866ee5db902313"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "bfd3e43768f50992f3aafeb8ead7324f53d3ddba", "filename": "src/test/run-pass/range.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca8578a953d0563dbef499ea2c2c853c9b71887c/src%2Ftest%2Frun-pass%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca8578a953d0563dbef499ea2c2c853c9b71887c/src%2Ftest%2Frun-pass%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frange.rs?ref=ca8578a953d0563dbef499ea2c2c853c9b71887c", "patch": "@@ -12,6 +12,9 @@\n \n fn foo() -> int { 42 }\n \n+// Test that range syntax works in return statements\n+fn return_range_to() -> ::std::ops::RangeTo<i32> { return ..1; }\n+\n pub fn main() {\n     let mut count = 0;\n     for i in 0u..10 {"}]}