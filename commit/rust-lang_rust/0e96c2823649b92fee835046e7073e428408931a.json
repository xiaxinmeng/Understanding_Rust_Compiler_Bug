{"sha": "0e96c2823649b92fee835046e7073e428408931a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlOTZjMjgyMzY0OWI5MmZlZTgzNTA0NmU3MDczZTQyODQwODkzMWE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2015-09-07T19:15:36Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2015-09-07T19:15:36Z"}, "message": "libsyntax: restore lost error message", "tree": {"sha": "4a0ef4a33360aceafda060c4b86f642b3f385d0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a0ef4a33360aceafda060c4b86f642b3f385d0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e96c2823649b92fee835046e7073e428408931a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e96c2823649b92fee835046e7073e428408931a", "html_url": "https://github.com/rust-lang/rust/commit/0e96c2823649b92fee835046e7073e428408931a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e96c2823649b92fee835046e7073e428408931a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8da5697e0721641856c8e38b666a9798e9f761d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8da5697e0721641856c8e38b666a9798e9f761d", "html_url": "https://github.com/rust-lang/rust/commit/c8da5697e0721641856c8e38b666a9798e9f761d"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "543ca8851106a90d83d2293d7bd8d796772d948b", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0e96c2823649b92fee835046e7073e428408931a/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e96c2823649b92fee835046e7073e428408931a/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=0e96c2823649b92fee835046e7073e428408931a", "patch": "@@ -4726,9 +4726,13 @@ impl<'a> Parser<'a> {\n             let fields = try!(self.parse_record_struct_body(&class_name));\n             (fields, None)\n         // Tuple-style struct definition with optional where-clause.\n-        } else {\n+        } else if self.token == token::OpenDelim(token::Paren) {\n             let fields = try!(self.parse_tuple_struct_body(&class_name, &mut generics));\n             (fields, Some(ast::DUMMY_NODE_ID))\n+        } else {\n+            let token_str = self.this_token_to_string();\n+            return Err(self.fatal(&format!(\"expected `where`, `{}`, `(`, or `;` after struct \\\n+                                            name, found `{}`\", \"{\", token_str)))\n         };\n \n         Ok((class_name,"}]}