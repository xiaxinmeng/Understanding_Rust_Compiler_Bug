{"sha": "7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "node_id": "C_kwDOAAsO6NoAKDdiZjQzYzM5MzFjYmRkZTJmMmQ1YmZlMzQ1NmFiZGU5MmVhMWFhMjE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-05-15T06:10:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-15T06:10:42Z"}, "message": "Rollup merge of #96958 - GuillaumeGomez:settings-menu-display, r=jsha\n\nImprove settings menu display and remove theme menu\n\nWe talked about improving the settings menu and we mentioned that firefox pocket was a nice inspiration so I implemented it. The result looks like this:\n\n![Screenshot from 2022-05-11 23-59-53](https://user-images.githubusercontent.com/3050060/167954743-438c0a06-4628-478c-bf0c-d20313c1fdfc.png)\n\nYou can test it [here](https://rustdoc.crud.net/imperio/settings-menu-display/doc/foo/index.html).\n\nOnly question I have is: should I re-assign the shortcut `T` to this setting menu now that the theme menu is gone? For now I simply removed it.\n\nImportant to be noted: the full settings page (at `settings.html`) is still rendered the same as currently.\n\nr? ``@jsha``", "tree": {"sha": "29e13f392baeb1866fb8a422f002631dbe4e09c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29e13f392baeb1866fb8a422f002631dbe4e09c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJigJliCRBK7hj4Ov3rIwAALZEIAA/IQiQMXSgk3H7Y/RLQFmoX\nRpTVY2lLIhaXL79s1YGxGVcjLVJMos3dZU7msB6Bp954vjtEPyrMUlJr/auU6jIK\nF4MXvaw6bk1im6zOGru3QKTxSyqdxmFIqh6RJlQ/LGcd6IQRwQe2vKio8M8Qclx1\nUgSVkkifjRmPdzNR3mmxt8ldbw1sd3eSXuUJ5H+JHj9ue8QBeU1CqxYBEfozGpiV\n3xvyEAHEUfQ3T8PmRhvtHnb5hp7Ya7UX7SeD4XX38ITiiTGpsdbKCbPEAnABQE6n\nLdohihU/PG0ioTLhJpOeMNxTR/t4RDiY1EFt2ZA+cL1pdNeZsIbYnfnaelQdBCA=\n=gUDf\n-----END PGP SIGNATURE-----\n", "payload": "tree 29e13f392baeb1866fb8a422f002631dbe4e09c0\nparent 7fb2d0ecef572120c4f2fc9a12a23f9bc9ace3d9\nparent dee294759ba141889f40689eda7345e89fe2bae5\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1652595042 +0200\ncommitter GitHub <noreply@github.com> 1652595042 +0200\n\nRollup merge of #96958 - GuillaumeGomez:settings-menu-display, r=jsha\n\nImprove settings menu display and remove theme menu\n\nWe talked about improving the settings menu and we mentioned that firefox pocket was a nice inspiration so I implemented it. The result looks like this:\n\n![Screenshot from 2022-05-11 23-59-53](https://user-images.githubusercontent.com/3050060/167954743-438c0a06-4628-478c-bf0c-d20313c1fdfc.png)\n\nYou can test it [here](https://rustdoc.crud.net/imperio/settings-menu-display/doc/foo/index.html).\n\nOnly question I have is: should I re-assign the shortcut `T` to this setting menu now that the theme menu is gone? For now I simply removed it.\n\nImportant to be noted: the full settings page (at `settings.html`) is still rendered the same as currently.\n\nr? ``@jsha``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "html_url": "https://github.com/rust-lang/rust/commit/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fb2d0ecef572120c4f2fc9a12a23f9bc9ace3d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fb2d0ecef572120c4f2fc9a12a23f9bc9ace3d9", "html_url": "https://github.com/rust-lang/rust/commit/7fb2d0ecef572120c4f2fc9a12a23f9bc9ace3d9"}, {"sha": "dee294759ba141889f40689eda7345e89fe2bae5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dee294759ba141889f40689eda7345e89fe2bae5", "html_url": "https://github.com/rust-lang/rust/commit/dee294759ba141889f40689eda7345e89fe2bae5"}], "stats": {"total": 428, "additions": 152, "deletions": 276}, "files": [{"sha": "d666d54b31579ef04cca3382a428495578c67d6b", "filename": "src/doc/rustdoc/src/how-to-read-rustdoc.md", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Fdoc%2Frustdoc%2Fsrc%2Fhow-to-read-rustdoc.md", "raw_url": "https://github.com/rust-lang/rust/raw/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Fdoc%2Frustdoc%2Fsrc%2Fhow-to-read-rustdoc.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fhow-to-read-rustdoc.md?ref=7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "patch": "@@ -59,15 +59,8 @@ or the current item whose documentation is being displayed.\n ## The Theme Picker and Search Interface\n \n When viewing `rustdoc`'s output in a browser with JavaScript enabled,\n-a dynamic interface appears at the top of the page.\n-To the left is the theme picker, denoted with a paint-brush icon,\n-and the search interface, help screen, and options appear to the right of that.\n-\n-### The Theme Picker\n-\n-Clicking on the theme picker provides a list of themes -\n-by default `ayu`, `light`, and `dark` -\n-which are available for viewing.\n+a dynamic interface appears at the top of the page composed of the search\n+interface, help screen, and options.\n \n ### The Search Interface\n \n@@ -91,12 +84,16 @@ When typing in the search bar, you can prefix your search term with a type\n followed by a colon (such as `mod:`) to restrict the results to just that\n kind of item. (The available items are listed in the help popup.)\n \n+### Changing displayed theme\n+\n+You can change the displayed theme by opening the settings menu (the gear\n+icon in the upper right) and then pick a new one from there.\n+\n ### Shortcuts\n \n Pressing `S` while focused elsewhere on the page will move focus to the\n search bar, and pressing `?` shows the help screen,\n which includes all these shortcuts and more.\n-Pressing `T` focuses the theme picker.\n \n When the search results are focused,\n the left and right arrows move between tabs and the up and down arrows move"}, {"sha": "e1e09aa4a8ada7111713b67ea6ed0999de559026", "filename": "src/doc/rustdoc/src/write-documentation/what-to-include.md", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Fdoc%2Frustdoc%2Fsrc%2Fwrite-documentation%2Fwhat-to-include.md", "raw_url": "https://github.com/rust-lang/rust/raw/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Fdoc%2Frustdoc%2Fsrc%2Fwrite-documentation%2Fwhat-to-include.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fwrite-documentation%2Fwhat-to-include.md?ref=7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "patch": "@@ -109,8 +109,9 @@ rustdoc --extend-css custom.css src/lib.rs\n \n A good example of using this feature to create a dark theme is documented [on\n this blog].  Just remember, dark theme is already included in the rustdoc output\n-by clicking on the paintbrush.  Adding additional options to the themes are\n-as easy as creating a custom theme `.css` file and using the following syntax:\n+by clicking on the gear icon in the upper right. Adding additional options to the\n+themes are as easy as creating a custom theme `.css` file and using the following\n+syntax:\n \n ```bash\n rustdoc --theme awesome.css src/lib.rs"}, {"sha": "5ba3bdc12eda6ffe8a826989f3e96be296d1197b", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "patch": "@@ -1448,8 +1448,6 @@ fn init_id_map() -> FxHashMap<Cow<'static, str>, usize> {\n     // used in tera template files).\n     map.insert(\"mainThemeStyle\".into(), 1);\n     map.insert(\"themeStyle\".into(), 1);\n-    map.insert(\"theme-picker\".into(), 1);\n-    map.insert(\"theme-choices\".into(), 1);\n     map.insert(\"settings-menu\".into(), 1);\n     map.insert(\"help-button\".into(), 1);\n     map.insert(\"main-content\".into(), 1);"}, {"sha": "702bccb45cf93128da7659f70927aa50e7ddfb43", "filename": "src/librustdoc/html/render/write_shared.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs?ref=7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "patch": "@@ -238,7 +238,6 @@ pub(super) fn write_shared(\n         write_toolchain(\"favicon-16x16.png\", static_files::RUST_FAVICON_PNG_16)?;\n         write_toolchain(\"favicon-32x32.png\", static_files::RUST_FAVICON_PNG_32)?;\n     }\n-    write_toolchain(\"brush.svg\", static_files::BRUSH_SVG)?;\n     write_toolchain(\"wheel.svg\", static_files::WHEEL_SVG)?;\n     write_toolchain(\"clipboard.svg\", static_files::CLIPBOARD_SVG)?;\n     write_toolchain(\"down-arrow.svg\", static_files::DOWN_ARROW_SVG)?;"}, {"sha": "0a19a99abf05407474c63fee7dad22e6b259486d", "filename": "src/librustdoc/html/static/css/noscript.css", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fnoscript.css", "raw_url": "https://github.com/rust-lang/rust/raw/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fnoscript.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fnoscript.css?ref=7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "patch": "@@ -18,7 +18,3 @@ rules.\n \t/* The search bar and related controls don't work without JS */\n \tdisplay: none;\n }\n-\n-#theme-picker {\n-\tdisplay: none;\n-}"}, {"sha": "38e67c233d6981ec7ad05b0add3964567d9affd2", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 36, "deletions": 19, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "patch": "@@ -1379,31 +1379,30 @@ pre.rust {\n \tmargin-bottom: 6px;\n }\n \n-.theme-picker {\n-\tposition: absolute;\n-\tleft: -38px;\n-\ttop: 4px;\n-}\n-\n-.theme-picker button {\n-\toutline: none;\n-}\n-\n #settings-menu, #help-button {\n \tmargin-left: 4px;\n \toutline: none;\n }\n \n-#theme-picker, #copy-path {\n+#copy-path {\n \theight: 34px;\n }\n-#theme-picker, #settings-menu, #help-button, #copy-path {\n+#settings-menu > a, #help-button, #copy-path {\n \tpadding: 5px;\n \twidth: 33px;\n \tborder: 1px solid;\n \tborder-radius: 2px;\n \tcursor: pointer;\n }\n+#settings-menu {\n+\tpadding: 0;\n+}\n+#settings-menu > a {\n+\tpadding: 5px;\n+\twidth: 100%;\n+\theight: 100%;\n+\tdisplay: block;\n+}\n \n @keyframes rotating {\n \tfrom {\n@@ -1413,9 +1412,33 @@ pre.rust {\n \t\ttransform: rotate(360deg);\n \t}\n }\n-#settings-menu.rotate img {\n+#settings-menu.rotate > a img {\n \tanimation: rotating 2s linear infinite;\n }\n+#settings-menu #settings {\n+\tposition: absolute;\n+\tright: 0;\n+\tz-index: 1;\n+\tdisplay: block;\n+\tmargin-top: 7px;\n+\tborder-radius: 3px;\n+\tborder: 1px solid;\n+}\n+#settings-menu #settings .setting-line {\n+\tmargin: 0.6em;\n+}\n+/* This rule is to draw the little arrow connecting the settings menu to the gear icon. */\n+#settings-menu #settings::before {\n+\tcontent: '';\n+\tposition: absolute;\n+\tright: 11px;\n+\tborder: solid;\n+\tborder-width: 1px 1px 0 0;\n+\tdisplay: inline-block;\n+\tpadding: 4px;\n+\ttransform: rotate(-45deg);\n+\ttop: -5px;\n+}\n \n #help-button {\n \tfont-family: \"Fira Sans\", Arial, sans-serif;\n@@ -1838,12 +1861,6 @@ details.rustdoc-toggle[open] > summary.hideme::after {\n \t\tmargin-left: 32px;\n \t}\n \n-\t/* Space is at a premium on mobile, so remove the theme-picker icon. */\n-\t#theme-picker {\n-\t\tdisplay: none;\n-\t\twidth: 0;\n-\t}\n-\n \t.content {\n \t\tmargin-left: 0px;\n \t}"}, {"sha": "ea0cb5e0726969828f51b522a3ee369d64a841f7", "filename": "src/librustdoc/html/static/css/themes/ayu.css", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css?ref=7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "patch": "@@ -5,7 +5,7 @@ Original by Dempfi (https://github.com/dempfi/ayu)\n \n /* General structure and fonts */\n \n-body {\n+body, #settings-menu #settings, #settings-menu #settings::before {\n \tbackground-color: #0f1419;\n \tcolor: #c5c5c5;\n }\n@@ -531,16 +531,20 @@ kbd {\n \tbox-shadow: inset 0 -1px 0 #5c6773;\n }\n \n-#theme-picker, #settings-menu, #help-button {\n+#settings-menu > a, #help-button {\n \tborder-color: #5c6773;\n \tbackground-color: #0f1419;\n \tcolor: #fff;\n }\n \n-#theme-picker > img, #settings-menu > img {\n+#settings-menu > a img {\n \tfilter: invert(100);\n }\n \n+#settings-menu #settings, #settings-menu #settings::before {\n+\tborder-color: #5c6773;\n+}\n+\n #copy-path {\n \tcolor: #fff;\n }\n@@ -551,8 +555,7 @@ kbd {\n \tfilter: invert(100%);\n }\n \n-#theme-picker:hover, #theme-picker:focus,\n-#settings-menu:hover, #settings-menu:focus,\n+#settings-menu > a:hover, #settings-menu > a:focus,\n #help-button:hover, #help-button:focus {\n \tborder-color: #e0e0e0;\n }\n@@ -570,12 +573,6 @@ kbd {\n \tbackground-color: rgba(110, 110, 110, 0.33);\n }\n \n-@media (max-width: 700px) {\n-\t#theme-picker {\n-\t\tbackground: #0f1419;\n-\t}\n-}\n-\n .search-results .result-name span.alias {\n \tcolor: #c5c5c5;\n }"}, {"sha": "1525163f50281d25a909bc5c5f7ec6c7a8e8dd86", "filename": "src/librustdoc/html/static/css/themes/dark.css", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css?ref=7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "patch": "@@ -1,4 +1,4 @@\n-body {\n+body, #settings-menu #settings, #settings-menu #settings::before {\n \tbackground-color: #353535;\n \tcolor: #ddd;\n }\n@@ -408,18 +408,21 @@ kbd {\n \tbox-shadow: inset 0 -1px 0 #c6cbd1;\n }\n \n-#theme-picker, #settings-menu, #help-button {\n+#settings-menu > a, #help-button {\n \tborder-color: #e0e0e0;\n \tbackground: #f0f0f0;\n \tcolor: #000;\n }\n \n-#theme-picker:hover, #theme-picker:focus,\n-#settings-menu:hover, #settings-menu:focus,\n+#settings-menu > a:hover, #settings-menu > a:focus,\n #help-button:hover, #help-button:focus {\n \tborder-color: #ffb900;\n }\n \n+#settings-menu #settings, #settings-menu #settings::before {\n+\tborder-color: #d2d2d2;\n+}\n+\n #copy-path {\n \tcolor: #999;\n }\n@@ -443,12 +446,6 @@ kbd {\n \tbackground-color: #4e4e4e;\n }\n \n-@media (max-width: 700px) {\n-\t#theme-picker {\n-\t\tbackground: #f0f0f0;\n-\t}\n-}\n-\n .search-results .result-name span.alias {\n \tcolor: #fff;\n }"}, {"sha": "d36a088d38e3f54da492849b872850be6a3679e8", "filename": "src/librustdoc/html/static/css/themes/light.css", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css?ref=7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "patch": "@@ -1,6 +1,6 @@\n /* General structure and fonts */\n \n-body {\n+body, #settings-menu #settings, #settings-menu #settings::before {\n \tbackground-color: white;\n \tcolor: black;\n }\n@@ -394,17 +394,20 @@ kbd {\n \tbox-shadow: inset 0 -1px 0 #c6cbd1;\n }\n \n-#theme-picker, #settings-menu, #help-button {\n+#settings-menu > a, #help-button {\n \tborder-color: #e0e0e0;\n \tbackground-color: #fff;\n }\n \n-#theme-picker:hover, #theme-picker:focus,\n-#settings-menu:hover, #settings-menu:focus,\n+#settings-menu > a:hover, #settings-menu > a:focus,\n #help-button:hover, #help-button:focus {\n \tborder-color: #717171;\n }\n \n+#settings-menu #settings, #settings-menu #settings::before {\n+\tborder-color: #DDDDDD;\n+}\n+\n #copy-path {\n \tcolor: #999;\n }\n@@ -428,12 +431,6 @@ kbd {\n \tbackground-color: #eee;\n }\n \n-@media (max-width: 700px) {\n-\t#theme-picker {\n-\t\tbackground: #fff;\n-\t}\n-}\n-\n .search-results .result-name span.alias {\n \tcolor: #000;\n }"}, {"sha": "1e4d58db196ad57dc2841f6666685ce57a64fb64", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 2, "deletions": 135, "changes": 137, "blob_url": "https://github.com/rust-lang/rust/blob/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "patch": "@@ -1,7 +1,6 @@\n // Local js definitions:\n /* global addClass, getSettingValue, hasClass, searchState */\n /* global onEach, onEachLazy, removeClass */\n-/* global switchTheme, useSystemTheme */\n \n \"use strict\";\n \n@@ -109,21 +108,11 @@ function getVirtualKey(ev) {\n     return String.fromCharCode(c);\n }\n \n-const THEME_PICKER_ELEMENT_ID = \"theme-picker\";\n-const THEMES_ELEMENT_ID = \"theme-choices\";\n const MAIN_ID = \"main-content\";\n const SETTINGS_BUTTON_ID = \"settings-menu\";\n const ALTERNATIVE_DISPLAY_ID = \"alternative-display\";\n const NOT_DISPLAYED_ID = \"not-displayed\";\n \n-function getThemesElement() {\n-    return document.getElementById(THEMES_ELEMENT_ID);\n-}\n-\n-function getThemePickerElement() {\n-    return document.getElementById(THEME_PICKER_ELEMENT_ID);\n-}\n-\n function getSettingsButton() {\n     return document.getElementById(SETTINGS_BUTTON_ID);\n }\n@@ -133,74 +122,10 @@ function getNakedUrl() {\n     return window.location.href.split(\"?\")[0].split(\"#\")[0];\n }\n \n-function showThemeButtonState() {\n-    const themePicker = getThemePickerElement();\n-    const themeChoices = getThemesElement();\n-\n-    themeChoices.style.display = \"block\";\n-    themePicker.style.borderBottomRightRadius = \"0\";\n-    themePicker.style.borderBottomLeftRadius = \"0\";\n-}\n-\n-function hideThemeButtonState() {\n-    const themePicker = getThemePickerElement();\n-    const themeChoices = getThemesElement();\n-\n-    themeChoices.style.display = \"none\";\n-    themePicker.style.borderBottomRightRadius = \"3px\";\n-    themePicker.style.borderBottomLeftRadius = \"3px\";\n-}\n-\n window.hideSettings = () => {\n     // Does nothing by default.\n };\n \n-// Set up the theme picker list.\n-(function () {\n-    if (!document.location.href.startsWith(\"file:///\")) {\n-        return;\n-    }\n-    const themeChoices = getThemesElement();\n-    const themePicker = getThemePickerElement();\n-    const availableThemes = getVar(\"themes\").split(\",\");\n-\n-    removeClass(themeChoices.parentElement, \"hidden\");\n-\n-    function switchThemeButtonState() {\n-        if (themeChoices.style.display === \"block\") {\n-            hideThemeButtonState();\n-        } else {\n-            showThemeButtonState();\n-        }\n-    }\n-\n-    function handleThemeButtonsBlur(e) {\n-        const active = document.activeElement;\n-        const related = e.relatedTarget;\n-\n-        if (active.id !== THEME_PICKER_ELEMENT_ID &&\n-            (!active.parentNode || active.parentNode.id !== THEMES_ELEMENT_ID) &&\n-            (!related ||\n-             (related.id !== THEME_PICKER_ELEMENT_ID &&\n-              (!related.parentNode || related.parentNode.id !== THEMES_ELEMENT_ID)))) {\n-            hideThemeButtonState();\n-        }\n-    }\n-\n-    themePicker.onclick = switchThemeButtonState;\n-    themePicker.onblur = handleThemeButtonsBlur;\n-    availableThemes.forEach(item => {\n-        const but = document.createElement(\"button\");\n-        but.textContent = item;\n-        but.onclick = () => {\n-            switchTheme(window.currentTheme, window.mainTheme, item, true);\n-            useSystemTheme(false);\n-        };\n-        but.onblur = handleThemeButtonsBlur;\n-        themeChoices.appendChild(but);\n-    });\n-}());\n-\n /**\n  * This function inserts `newNode` after `referenceNode`. It doesn't work if `referenceNode`\n  * doesn't have a parent node.\n@@ -512,7 +437,7 @@ function loadCss(cssFileName) {\n             ev.preventDefault();\n         }\n         searchState.defocus();\n-        hideThemeButtonState();\n+        window.hideSettings();\n     }\n \n     const disableShortcuts = getSettingValue(\"disable-shortcuts\") === \"true\";\n@@ -522,8 +447,6 @@ function loadCss(cssFileName) {\n             return;\n         }\n \n-        let themePicker;\n-\n         if (document.activeElement.tagName === \"INPUT\") {\n             switch (getVirtualKey(ev)) {\n             case \"Escape\":\n@@ -553,64 +476,9 @@ function loadCss(cssFileName) {\n                 displayHelp(true, ev);\n                 break;\n \n-            case \"t\":\n-            case \"T\":\n-                displayHelp(false, ev);\n-                ev.preventDefault();\n-                themePicker = getThemePickerElement();\n-                themePicker.click();\n-                themePicker.focus();\n-                break;\n-\n             default:\n-                if (getThemePickerElement().parentNode.contains(ev.target)) {\n-                    handleThemeKeyDown(ev);\n-                }\n-            }\n-        }\n-    }\n-\n-    function handleThemeKeyDown(ev) {\n-        const active = document.activeElement;\n-        const themes = getThemesElement();\n-        switch (getVirtualKey(ev)) {\n-        case \"ArrowUp\":\n-            ev.preventDefault();\n-            if (active.previousElementSibling && ev.target.id !== THEME_PICKER_ELEMENT_ID) {\n-                active.previousElementSibling.focus();\n-            } else {\n-                showThemeButtonState();\n-                themes.lastElementChild.focus();\n-            }\n-            break;\n-        case \"ArrowDown\":\n-            ev.preventDefault();\n-            if (active.nextElementSibling && ev.target.id !== THEME_PICKER_ELEMENT_ID) {\n-                active.nextElementSibling.focus();\n-            } else {\n-                showThemeButtonState();\n-                themes.firstElementChild.focus();\n-            }\n-            break;\n-        case \"Enter\":\n-        case \"Return\":\n-        case \"Space\":\n-            if (ev.target.id === THEME_PICKER_ELEMENT_ID && themes.style.display === \"none\") {\n-                ev.preventDefault();\n-                showThemeButtonState();\n-                themes.firstElementChild.focus();\n+                break;\n             }\n-            break;\n-        case \"Home\":\n-            ev.preventDefault();\n-            themes.firstElementChild.focus();\n-            break;\n-        case \"End\":\n-            ev.preventDefault();\n-            themes.lastElementChild.focus();\n-            break;\n-        // The escape key is handled in handleEscape, not here,\n-        // so that pressing escape will close the menu even if it isn't focused\n         }\n     }\n \n@@ -1006,7 +874,6 @@ function loadCss(cssFileName) {\n         const shortcuts = [\n             [\"?\", \"Show this help dialog\"],\n             [\"S\", \"Focus the search field\"],\n-            [\"T\", \"Focus the theme picker menu\"],\n             [\"\u2191\", \"Move up in search results\"],\n             [\"\u2193\", \"Move down in search results\"],\n             [\"\u2190 / \u2192\", \"Switch result tab (when results focused)\"],"}, {"sha": "df828b5ce4c3a35f0b0629b0bcf74b4a19bc0f0c", "filename": "src/librustdoc/html/static/js/settings.js", "status": "modified", "additions": 57, "deletions": 25, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "raw_url": "https://github.com/rust-lang/rust/raw/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js?ref=7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "patch": "@@ -1,7 +1,7 @@\n // Local js definitions:\n /* global getSettingValue, getVirtualKey, updateLocalStorage, updateSystemTheme */\n-/* global addClass, removeClass, onEach, onEachLazy, NOT_DISPLAYED_ID */\n-/* global MAIN_ID, getVar, getSettingsButton, switchDisplayedElement, getNotDisplayedElem */\n+/* global addClass, removeClass, onEach, onEachLazy */\n+/* global MAIN_ID, getVar, getSettingsButton */\n \n \"use strict\";\n \n@@ -206,38 +206,60 @@\n         ];\n \n         // Then we build the DOM.\n-        const el = document.createElement(\"section\");\n-        el.id = \"settings\";\n-        let innerHTML = `\n-            <div class=\"main-heading\">\n+        let innerHTML = \"\";\n+        let elementKind = \"div\";\n+\n+        if (isSettingsPage) {\n+            elementKind = \"section\";\n+            innerHTML = `<div class=\"main-heading\">\n                 <h1 class=\"fqn\">\n                     <span class=\"in-band\">Rustdoc settings</span>\n                 </h1>\n-                <span class=\"out-of-band\">`;\n-\n-        if (isSettingsPage) {\n-            innerHTML +=\n-                \"<a id=\\\"back\\\" href=\\\"javascript:void(0)\\\" onclick=\\\"history.back();\\\">Back</a>\";\n-        } else {\n-            innerHTML += \"<a id=\\\"back\\\" href=\\\"javascript:void(0)\\\" \" +\n-                \"onclick=\\\"switchDisplayedElement(null);\\\">Back</a>\";\n+                <span class=\"out-of-band\">\n+                    <a id=\"back\" href=\"javascript:void(0)\" onclick=\"history.back();\">Back</a>\n+                </span>\n+                </div>`;\n         }\n-        innerHTML += `</span>\n-            </div>\n-            <div class=\"settings\">${buildSettingsPageSections(settings)}</div>`;\n+        innerHTML += `<div class=\"settings\">${buildSettingsPageSections(settings)}</div>`;\n \n+        const el = document.createElement(elementKind);\n+        el.id = \"settings\";\n         el.innerHTML = innerHTML;\n \n         if (isSettingsPage) {\n             document.getElementById(MAIN_ID).appendChild(el);\n         } else {\n-            getNotDisplayedElem().appendChild(el);\n+            el.setAttribute(\"tabindex\", \"-1\");\n+            getSettingsButton().appendChild(el);\n         }\n         return el;\n     }\n \n     const settingsMenu = buildSettingsPage();\n \n+    function displaySettings() {\n+        settingsMenu.style.display = \"\";\n+    }\n+\n+    function elemIsInParent(elem, parent) {\n+        while (elem && elem !== document.body) {\n+            if (elem === parent) {\n+                return true;\n+            }\n+            elem = elem.parentElement;\n+        }\n+        return false;\n+    }\n+\n+    function blurHandler(event) {\n+        const settingsButton = getSettingsButton();\n+        if (!elemIsInParent(document.activeElement, settingsButton) &&\n+            !elemIsInParent(event.relatedTarget, settingsButton))\n+        {\n+            window.hideSettings();\n+        }\n+    }\n+\n     if (isSettingsPage) {\n         // We replace the existing \"onclick\" callback to do nothing if clicked.\n         getSettingsButton().onclick = function(event) {\n@@ -246,25 +268,35 @@\n     } else {\n         // We replace the existing \"onclick\" callback.\n         const settingsButton = getSettingsButton();\n+        const settingsMenu = document.getElementById(\"settings\");\n+        window.hideSettings = function() {\n+            settingsMenu.style.display = \"none\";\n+        };\n         settingsButton.onclick = function(event) {\n+            if (elemIsInParent(event.target, settingsMenu)) {\n+                return;\n+            }\n             event.preventDefault();\n-            if (settingsMenu.parentElement.id === NOT_DISPLAYED_ID) {\n-                switchDisplayedElement(settingsMenu);\n-            } else {\n+            if (settingsMenu.style.display !== \"none\") {\n                 window.hideSettings();\n+            } else {\n+                displaySettings();\n             }\n         };\n-        window.hideSettings = function() {\n-            switchDisplayedElement(null);\n-        };\n+        settingsButton.onblur = blurHandler;\n+        settingsButton.querySelector(\"a\").onblur = blurHandler;\n+        onEachLazy(settingsMenu.querySelectorAll(\"input\"), el => {\n+            el.onblur = blurHandler;\n+        });\n+        settingsMenu.onblur = blurHandler;\n     }\n \n     // We now wait a bit for the web browser to end re-computing the DOM...\n     setTimeout(() => {\n         setEvents(settingsMenu);\n         // The setting menu is already displayed if we're on the settings page.\n         if (!isSettingsPage) {\n-            switchDisplayedElement(settingsMenu);\n+            displaySettings();\n         }\n         removeClass(getSettingsButton(), \"rotate\");\n     }, 0);"}, {"sha": "85ca8431d90da1b38706e220aa41d1c2da33f474", "filename": "src/librustdoc/html/static_files.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs?ref=7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "patch": "@@ -41,9 +41,6 @@ crate static SCRAPE_EXAMPLES_JS: &str = include_str!(\"static/js/scrape-examples.\n \n crate static SCRAPE_EXAMPLES_HELP_MD: &str = include_str!(\"static/scrape-examples-help.md\");\n \n-/// The file contents of `brush.svg`, the icon used for the theme-switch button.\n-crate static BRUSH_SVG: &[u8] = include_bytes!(\"static/images/brush.svg\");\n-\n /// The file contents of `wheel.svg`, the icon used for the settings button.\n crate static WHEEL_SVG: &[u8] = include_bytes!(\"static/images/wheel.svg\");\n "}, {"sha": "cd672aadd7e93c680da74aa89aa0a4c5845d6f42", "filename": "src/librustdoc/html/templates/page.html", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "raw_url": "https://github.com/rust-lang/rust/raw/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html?ref=7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "patch": "@@ -108,13 +108,6 @@ <h2 class=\"location\"></h2>\n                     {%- endif -%}\n                 </a> {#- -#}\n                 <nav class=\"sub\"> {#- -#}\n-                    <div class=\"theme-picker hidden\"> {#- -#}\n-                        <button id=\"theme-picker\" aria-label=\"Pick another theme!\" aria-haspopup=\"menu\" title=\"themes\"> {#- -#}\n-                            <img width=\"22\" height=\"22\" alt=\"Pick another theme!\" {# -#}\n-                             src=\"{{static_root_path|safe}}brush{{page.resource_suffix}}.svg\"> {#- -#}\n-                        </button> {#- -#}\n-                        <div id=\"theme-choices\" role=\"menu\"></div> {#- -#}\n-                    </div> {#- -#}\n                     <form class=\"search-form\"> {#- -#}\n                         <div class=\"search-container\"> {#- -#}\n                             <span></span> {#- This empty span is a hacky fix for Safari - See #93184 -#}\n@@ -126,10 +119,12 @@ <h2 class=\"location\"></h2>\n                                 placeholder=\"Click or press \u2018S\u2019 to search, \u2018?\u2019 for more options\u2026\" {# -#}\n                                 type=\"search\"> {#- -#}\n                             <button type=\"button\" id=\"help-button\" title=\"help\">?</button> {#- -#}\n-                            <a id=\"settings-menu\" href=\"{{page.root_path|safe}}settings.html\" title=\"settings\"> {#- -#}\n-                                <img width=\"22\" height=\"22\" alt=\"Change settings\" {# -#}\n+                            <div id=\"settings-menu\" tabindex=\"-1\">\n+                                <a href=\"{{page.root_path|safe}}settings.html\" title=\"settings\"> {#- -#}\n+                                    <img width=\"22\" height=\"22\" alt=\"Change settings\" {# -#}\n                                      src=\"{{static_root_path|safe}}wheel{{page.resource_suffix}}.svg\"> {#- -#}\n-                            </a> {#- -#}\n+                                </a> {#- -#}\n+                            </div>\n                         </div> {#- -#}\n                     </form> {#- -#}\n                 </nav> {#- -#}"}, {"sha": "9a9c45a9b7fe5b7f818df3f64338afd30c295dda", "filename": "src/test/rustdoc-gui/settings.goml", "status": "modified", "additions": 6, "deletions": 17, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Ftest%2Frustdoc-gui%2Fsettings.goml", "raw_url": "https://github.com/rust-lang/rust/raw/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Ftest%2Frustdoc-gui%2Fsettings.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsettings.goml?ref=7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "patch": "@@ -5,36 +5,25 @@ assert-false: \"#settings\"\n // We now click on the settings button.\n click: \"#settings-menu\"\n wait-for: \"#settings\"\n-assert: \"#main-content.hidden\"\n assert-css: (\"#settings\", {\"display\": \"block\"})\n // Let's close it by clicking on the same button.\n click: \"#settings-menu\"\n-assert-false: \"#alternative-display #settings\"\n-assert: \"#not-displayed #settings\"\n-assert: \"#main-content:not(.hidden)\"\n-\n-// Let's open and then close it again with the \"close settings\" button.\n-click: \"#settings-menu\"\n-wait-for: \"#alternative-display #settings\"\n-assert: \"#main-content.hidden\"\n-click: \"#back\"\n-wait-for: \"#not-displayed #settings\"\n-assert: \"#main-content:not(.hidden)\"\n+wait-for-css: (\"#settings\", {\"display\": \"none\"})\n \n // Let's check that pressing \"ESCAPE\" is closing it.\n click: \"#settings-menu\"\n-wait-for: \"#alternative-display #settings\"\n+wait-for-css: (\"#settings\", {\"display\": \"block\"})\n press-key: \"Escape\"\n-wait-for: \"#not-displayed #settings\"\n-assert: \"#main-content:not(.hidden)\"\n+wait-for-css: (\"#settings\", {\"display\": \"none\"})\n \n // Let's click on it when the search results are displayed.\n focus: \".search-input\"\n write: \"test\"\n wait-for: \"#alternative-display #search\"\n click: \"#settings-menu\"\n-wait-for: \"#alternative-display #settings\"\n-assert: \"#not-displayed #search\"\n+wait-for-css: (\"#settings\", {\"display\": \"block\"})\n+// Ensure that the search is still displayed.\n+wait-for: \"#alternative-display #search\"\n assert: \"#main-content.hidden\"\n \n // Now let's check the content of the settings menu."}, {"sha": "37a7c1662949dd85cdec6b8f492917b14710abd8", "filename": "src/test/rustdoc-gui/shortcuts.goml", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Ftest%2Frustdoc-gui%2Fshortcuts.goml", "raw_url": "https://github.com/rust-lang/rust/raw/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Ftest%2Frustdoc-gui%2Fshortcuts.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fshortcuts.goml?ref=7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "patch": "@@ -12,15 +12,3 @@ assert-css: (\"#help\", {\"display\": \"flex\"})\n assert-false: \"#help.hidden\"\n press-key: \"Escape\"\n assert-css: (\"#help.hidden\", {\"display\": \"none\"})\n-// Check for the themes list.\n-assert-css: (\"#theme-choices\", {\"display\": \"none\"})\n-press-key: \"t\"\n-assert-css: (\"#theme-choices\", {\"display\": \"block\"})\n-press-key: \"t\"\n-// We ensure that 't' hides back the menu.\n-assert-css: (\"#theme-choices\", {\"display\": \"none\"})\n-press-key: \"t\"\n-assert-css: (\"#theme-choices\", {\"display\": \"block\"})\n-press-key: \"Escape\"\n-// We ensure that 'Escape' hides the menu too.\n-assert-css: (\"#theme-choices\", {\"display\": \"none\"})"}, {"sha": "fb1c37ae68e74d982e695da799756c90c66630a4", "filename": "src/test/rustdoc-gui/theme-change.goml", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Ftest%2Frustdoc-gui%2Ftheme-change.goml", "raw_url": "https://github.com/rust-lang/rust/raw/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21/src%2Ftest%2Frustdoc-gui%2Ftheme-change.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Ftheme-change.goml?ref=7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "patch": "@@ -1,12 +1,21 @@\n // Ensures that the theme change is working as expected.\n goto: file://|DOC_PATH|/test_docs/index.html\n-click: \"#theme-picker\"\n-click: \"#theme-choices > button:first-child\"\n-// should be the ayu theme so let's check the color\n+local-storage: {\"rustdoc-use-system-theme\": \"false\", \"rustdoc-theme\": \"dark\"}\n+reload:\n+click: \"#settings-menu\"\n+wait-for: \"#theme-ayu\"\n+click: \"#theme-ayu\"\n+// should be the ayu theme so let's check the color.\n wait-for-css: (\"body\", { \"background-color\": \"rgb(15, 20, 25)\" })\n-click: \"#theme-choices > button:last-child\"\n-// should be the light theme so let's check the color\n+assert-local-storage: { \"rustdoc-theme\": \"ayu\" }\n+click: \"#theme-light\"\n+// should be the light theme so let's check the color.\n wait-for-css: (\"body\", { \"background-color\": \"rgb(255, 255, 255)\" })\n+assert-local-storage: { \"rustdoc-theme\": \"light\" }\n+click: \"#theme-dark\"\n+// Should be the dark theme so let's check the color.\n+wait-for-css: (\"body\", { \"background-color\": \"rgb(53, 53, 53)\" })\n+assert-local-storage: { \"rustdoc-theme\": \"dark\" }\n \n goto: file://|DOC_PATH|/settings.html\n wait-for: \"#settings\""}]}