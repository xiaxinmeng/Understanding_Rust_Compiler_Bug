{"sha": "f23a5f208de7fba983bfaaa8d60f1208d5780a98", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyM2E1ZjIwOGRlN2ZiYTk4M2JmYWFhOGQ2MGYxMjA4ZDU3ODBhOTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-01T11:07:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-01T11:07:26Z"}, "message": "Auto merge of #62507 - petrochenkov:macunstab, r=alexcrichton\n\nRemove derives `Encodable`/`Decodable` and unstabilize attribute `#[bench]`\n\n`Encodable` and `Decodable` were deprecated before 1.0 and emitted an unsuppressable warning all this time.\n`#[bench]` is a part of the custom test framework feature and cannot be used meaningfully on stable, only as `cfg(false)`.\n\nCrater results can be found in https://github.com/rust-lang/rust/pull/62507#issuecomment-513850732 and below.\n\nThis PR also reroutes the tracking issue for `feature(test)` from #27812 (compiler internals) to #50297 (custom test frameworks).\n\nCloses https://github.com/rust-lang/rust/issues/62048", "tree": {"sha": "7bbe402729300474128162596336986fee874dd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bbe402729300474128162596336986fee874dd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f23a5f208de7fba983bfaaa8d60f1208d5780a98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f23a5f208de7fba983bfaaa8d60f1208d5780a98", "html_url": "https://github.com/rust-lang/rust/commit/f23a5f208de7fba983bfaaa8d60f1208d5780a98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f23a5f208de7fba983bfaaa8d60f1208d5780a98/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a17951c4f80eb5208030f91fdb4ae93919fa6b12", "url": "https://api.github.com/repos/rust-lang/rust/commits/a17951c4f80eb5208030f91fdb4ae93919fa6b12", "html_url": "https://github.com/rust-lang/rust/commit/a17951c4f80eb5208030f91fdb4ae93919fa6b12"}, {"sha": "ef7ef05e8ee29ccf4c225b1ad1cd3772ace8d660", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef7ef05e8ee29ccf4c225b1ad1cd3772ace8d660", "html_url": "https://github.com/rust-lang/rust/commit/ef7ef05e8ee29ccf4c225b1ad1cd3772ace8d660"}], "stats": {"total": 524, "additions": 226, "deletions": 298}, "files": [{"sha": "3b2b28217f9b391cd3dd20fe031701de9e311ae4", "filename": "src/libcore/hint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibcore%2Fhint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibcore%2Fhint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhint.rs?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -110,7 +110,7 @@ pub fn spin_loop() {\n ///\n /// This function is a no-op, and does not even read from `dummy`.\n #[inline]\n-#[unstable(feature = \"test\", issue = \"27812\")]\n+#[unstable(feature = \"test\", issue = \"50297\")]\n #[allow(unreachable_code)] // this makes #[cfg] a bit easier below.\n pub fn black_box<T>(dummy: T) -> T {\n     // We need to \"use\" the argument in some way LLVM can't introspect, and on"}, {"sha": "db0a6eff8367d7666389babec72b89d709ac82f2", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 2, "deletions": 25, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -1267,7 +1267,8 @@ pub(crate) mod builtin {\n     pub macro test($item:item) { /* compiler built-in */ }\n \n     /// Attribute macro applied to a function to turn it into a benchmark test.\n-    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[unstable(feature = \"test\", issue = \"50297\",\n+               reason = \"`bench` is a part of custom test frameworks which are unstable\")]\n     #[allow_internal_unstable(test, rustc_attrs)]\n     #[rustc_builtin_macro]\n     #[rustc_macro_transparency = \"semitransparent\"]\n@@ -1309,37 +1310,13 @@ pub(crate) mod builtin {\n     #[allow_internal_unstable(core_intrinsics)]\n     pub macro Debug($item:item) { /* compiler built-in */ }\n \n-    /// Unstable implementation detail of the `rustc` compiler, do not use.\n-    #[rustc_builtin_macro]\n-    #[rustc_macro_transparency = \"semitransparent\"]\n-    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_deprecated(\n-        since = \"1.0.0\",\n-        reason = \"derive(Decodable) is deprecated in favor of derive(RustcDecodable)\",\n-        suggestion = \"RustcDecodable\",\n-    )]\n-    #[allow_internal_unstable(core_intrinsics, libstd_sys_internals)]\n-    pub macro Decodable($item:item) { /* compiler built-in */ }\n-\n     /// Derive macro generating an impl of the trait `Default`.\n     #[rustc_builtin_macro]\n     #[rustc_macro_transparency = \"semitransparent\"]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[allow_internal_unstable(core_intrinsics)]\n     pub macro Default($item:item) { /* compiler built-in */ }\n \n-    /// Unstable implementation detail of the `rustc` compiler, do not use.\n-    #[rustc_builtin_macro]\n-    #[rustc_macro_transparency = \"semitransparent\"]\n-    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_deprecated(\n-        since = \"1.0.0\",\n-        reason = \"derive(Encodable) is deprecated in favor of derive(RustcEncodable)\",\n-        suggestion = \"RustcEncodable\",\n-    )]\n-    #[allow_internal_unstable(core_intrinsics)]\n-    pub macro Encodable($item:item) { /* compiler built-in */ }\n-\n     /// Derive macro generating an impl of the trait `Eq`.\n     #[rustc_builtin_macro]\n     #[rustc_macro_transparency = \"semitransparent\"]"}, {"sha": "c503d8c701938dc87b7f1c542f1171c11c309d7f", "filename": "src/libcore/prelude/v1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibcore%2Fprelude%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibcore%2Fprelude%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fprelude%2Fv1.rs?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -54,9 +54,7 @@ pub use crate::macros::builtin::{\n     Clone,\n     Copy,\n     Debug,\n-    Decodable,\n     Default,\n-    Encodable,\n     Eq,\n     Hash,\n     Ord,"}, {"sha": "8fb0ea0271b97b68e190642b1c5c1b36d801e428", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -22,9 +22,9 @@\n #![feature(stmt_expr_attributes)]\n #![feature(core_intrinsics)]\n #![feature(integer_atomics)]\n+#![feature(test)]\n \n #![cfg_attr(unix, feature(libc))]\n-#![cfg_attr(test, feature(test))]\n \n #![cfg_attr(not(bootstrap), allow(rustc::default_hash_types))]\n "}, {"sha": "cfee49a7b555c28dd14c78b74fcbf4a23454e67c", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -218,7 +218,7 @@\n // std may use features in a platform-specific way\n #![allow(unused_features)]\n \n-#![cfg_attr(test, feature(print_internals, set_stdio, test, update_panic_count))]\n+#![cfg_attr(test, feature(print_internals, set_stdio, update_panic_count))]\n #![cfg_attr(all(target_vendor = \"fortanix\", target_env = \"sgx\"),\n             feature(slice_index_methods, decl_macro, coerce_unsized,\n                     sgx_platform, ptr_wrapping_offset_from))]\n@@ -304,6 +304,7 @@\n #![feature(stdsimd)]\n #![feature(stmt_expr_attributes)]\n #![feature(str_internals)]\n+#![feature(test)]\n #![feature(thread_local)]\n #![feature(todo_macro)]\n #![feature(toowned_clone_into)]"}, {"sha": "1c61f21f7df4e05d83c519a902849bdacef0c297", "filename": "src/libstd/prelude/v1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibstd%2Fprelude%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibstd%2Fprelude%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude%2Fv1.rs?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -91,9 +91,7 @@ pub use core::prelude::v1::{\n     Clone,\n     Copy,\n     Debug,\n-    Decodable,\n     Default,\n-    Encodable,\n     Eq,\n     Hash,\n     Ord,"}, {"sha": "4c0641d08a92afd35e521479f6d73dafb2b754f4", "filename": "src/libsyntax_ext/deriving/decodable.rs", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibsyntax_ext%2Fderiving%2Fdecodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibsyntax_ext%2Fderiving%2Fdecodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fdecodable.rs?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -17,23 +17,7 @@ pub fn expand_deriving_rustc_decodable(cx: &mut ExtCtxt<'_>,\n                                        mitem: &MetaItem,\n                                        item: &Annotatable,\n                                        push: &mut dyn FnMut(Annotatable)) {\n-    expand_deriving_decodable_imp(cx, span, mitem, item, push, \"rustc_serialize\")\n-}\n-\n-pub fn expand_deriving_decodable(cx: &mut ExtCtxt<'_>,\n-                                 span: Span,\n-                                 mitem: &MetaItem,\n-                                 item: &Annotatable,\n-                                 push: &mut dyn FnMut(Annotatable)) {\n-    expand_deriving_decodable_imp(cx, span, mitem, item, push, \"serialize\")\n-}\n-\n-fn expand_deriving_decodable_imp(cx: &mut ExtCtxt<'_>,\n-                                 span: Span,\n-                                 mitem: &MetaItem,\n-                                 item: &Annotatable,\n-                                 push: &mut dyn FnMut(Annotatable),\n-                                 krate: &'static str) {\n+    let krate = \"rustc_serialize\";\n     let typaram = &*deriving::hygienic_type_parameter(item, \"__D\");\n \n     let trait_def = TraitDef {"}, {"sha": "a964a0970f0915e648bf090ddb3113227a37fa88", "filename": "src/libsyntax_ext/deriving/encodable.rs", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibsyntax_ext%2Fderiving%2Fencodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibsyntax_ext%2Fderiving%2Fencodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fencodable.rs?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -98,23 +98,7 @@ pub fn expand_deriving_rustc_encodable(cx: &mut ExtCtxt<'_>,\n                                        mitem: &MetaItem,\n                                        item: &Annotatable,\n                                        push: &mut dyn FnMut(Annotatable)) {\n-    expand_deriving_encodable_imp(cx, span, mitem, item, push, \"rustc_serialize\")\n-}\n-\n-pub fn expand_deriving_encodable(cx: &mut ExtCtxt<'_>,\n-                                 span: Span,\n-                                 mitem: &MetaItem,\n-                                 item: &Annotatable,\n-                                 push: &mut dyn FnMut(Annotatable)) {\n-    expand_deriving_encodable_imp(cx, span, mitem, item, push, \"serialize\")\n-}\n-\n-fn expand_deriving_encodable_imp(cx: &mut ExtCtxt<'_>,\n-                                 span: Span,\n-                                 mitem: &MetaItem,\n-                                 item: &Annotatable,\n-                                 push: &mut dyn FnMut(Annotatable),\n-                                 krate: &'static str) {\n+    let krate = \"rustc_serialize\";\n     let typaram = &*deriving::hygienic_type_parameter(item, \"__S\");\n \n     let trait_def = TraitDef {"}, {"sha": "0f3f5c0cd0eed6e9dad91c414870e549e0757477", "filename": "src/libsyntax_ext/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibsyntax_ext%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibsyntax_ext%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Flib.rs?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -92,9 +92,7 @@ pub fn register_builtin_macros(resolver: &mut dyn syntax::ext::base::Resolver, e\n         Clone: clone::expand_deriving_clone,\n         Copy: bounds::expand_deriving_copy,\n         Debug: debug::expand_deriving_debug,\n-        Decodable: decodable::expand_deriving_decodable,\n         Default: default::expand_deriving_default,\n-        Encodable: encodable::expand_deriving_encodable,\n         Eq: eq::expand_deriving_eq,\n         Hash: hash::expand_deriving_hash,\n         Ord: ord::expand_deriving_ord,"}, {"sha": "a75975ba7544687928eb11a50f998a855b51f674", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -18,7 +18,7 @@\n // cargo) to detect this crate.\n \n #![crate_name = \"test\"]\n-#![unstable(feature = \"test\", issue = \"27812\")]\n+#![unstable(feature = \"test\", issue = \"50297\")]\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\", test(attr(deny(warnings))))]\n #![feature(asm)]\n #![cfg_attr(any(unix, target_os = \"cloudabi\"), feature(libc, rustc_private))]"}, {"sha": "3cbabc5b460614b85bc15288dc2e62ebff00f895", "filename": "src/test/run-make-fulldeps/pretty-expanded/input.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Frun-make-fulldeps%2Fpretty-expanded%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Frun-make-fulldeps%2Fpretty-expanded%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fpretty-expanded%2Finput.rs?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -2,11 +2,11 @@\n \n // #13544\n \n-extern crate serialize;\n+extern crate serialize as rustc_serialize;\n \n-#[derive(Encodable)] pub struct A;\n-#[derive(Encodable)] pub struct B(isize);\n-#[derive(Encodable)] pub struct C { x: isize }\n-#[derive(Encodable)] pub enum D {}\n-#[derive(Encodable)] pub enum E { y }\n-#[derive(Encodable)] pub enum F { z(isize) }\n+#[derive(RustcEncodable)] pub struct A;\n+#[derive(RustcEncodable)] pub struct B(isize);\n+#[derive(RustcEncodable)] pub struct C { x: isize }\n+#[derive(RustcEncodable)] pub enum D {}\n+#[derive(RustcEncodable)] pub enum E { y }\n+#[derive(RustcEncodable)] pub enum F { z(isize) }"}, {"sha": "bc0209dc5832a41993ccae0157bf85ee6487045b", "filename": "src/test/run-make-fulldeps/save-analysis/foo.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis%2Ffoo.rs?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -418,8 +418,9 @@ impl Error + 'static + Send {\n         <Error + 'static>::is::<T>(self)\n     }\n }\n-extern crate serialize;\n-#[derive(Clone, Copy, Hash, Encodable, Decodable, PartialEq, Eq, PartialOrd, Ord, Debug, Default)]\n+extern crate serialize as rustc_serialize;\n+#[derive(Clone, Copy, Hash, RustcEncodable, RustcDecodable,\n+         PartialEq, Eq, PartialOrd, Ord, Debug, Default)]\n struct AllDerives(i32);\n \n fn test_format_args() {"}, {"sha": "6a0b2283aa39d53c5984744c15f4c2605621e2d0", "filename": "src/test/ui-fulldeps/deprecated-derive.rs", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a17951c4f80eb5208030f91fdb4ae93919fa6b12/src%2Ftest%2Fui-fulldeps%2Fdeprecated-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a17951c4f80eb5208030f91fdb4ae93919fa6b12/src%2Ftest%2Fui-fulldeps%2Fdeprecated-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fdeprecated-derive.rs?ref=a17951c4f80eb5208030f91fdb4ae93919fa6b12", "patch": "@@ -1,12 +0,0 @@\n-// run-pass\n-\n-#![feature(rustc_private)]\n-#![allow(dead_code)]\n-\n-extern crate serialize;\n-\n-#[derive(Encodable)]\n-//~^ WARNING derive(Encodable) is deprecated in favor of derive(RustcEncodable)\n-struct Test1;\n-\n-fn main() { }"}, {"sha": "1518c0cc541d24b42f9698c6cd8592503445f125", "filename": "src/test/ui-fulldeps/deprecated-derive.stderr", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a17951c4f80eb5208030f91fdb4ae93919fa6b12/src%2Ftest%2Fui-fulldeps%2Fdeprecated-derive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a17951c4f80eb5208030f91fdb4ae93919fa6b12/src%2Ftest%2Fui-fulldeps%2Fdeprecated-derive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fdeprecated-derive.stderr?ref=a17951c4f80eb5208030f91fdb4ae93919fa6b12", "patch": "@@ -1,8 +0,0 @@\n-warning: use of deprecated item 'Encodable': derive(Encodable) is deprecated in favor of derive(RustcEncodable)\n-  --> $DIR/deprecated-derive.rs:8:10\n-   |\n-LL | #[derive(Encodable)]\n-   |          ^^^^^^^^^ help: replace the use of the deprecated item: `RustcEncodable`\n-   |\n-   = note: `#[warn(deprecated)]` on by default\n-"}, {"sha": "6d51bb3f8ada89e9126baa5aa237877fdad86bd1", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-builtin-attrs.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.rs?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -32,6 +32,7 @@\n \n // check-pass\n \n+#![feature(test)]\n #![warn(unused_attributes, unknown_lints)]\n \n // UNGATED WHITE-LISTED BUILT-IN ATTRIBUTES"}, {"sha": "864df35a79fe33921d02dc2746da860c6ddc25bc", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-builtin-attrs.stderr", "status": "modified", "additions": 197, "deletions": 197, "changes": 394, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -1,1185 +1,1185 @@\n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:39:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:40:9\n    |\n LL | #![warn(x5400)]\n    |         ^^^^^\n    |\n note: lint level defined here\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:35:28\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:36:28\n    |\n LL | #![warn(unused_attributes, unknown_lints)]\n    |                            ^^^^^^^^^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:40:10\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:41:10\n    |\n LL | #![allow(x5300)]\n    |          ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:41:11\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:42:11\n    |\n LL | #![forbid(x5200)]\n    |           ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:42:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:43:9\n    |\n LL | #![deny(x5100)]\n    |         ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:100:8\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:101:8\n    |\n LL | #[warn(x5400)]\n    |        ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:103:25\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:104:25\n    |\n LL |     mod inner { #![warn(x5400)] }\n    |                         ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:106:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:107:12\n    |\n LL |     #[warn(x5400)] fn f() { }\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:109:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:110:12\n    |\n LL |     #[warn(x5400)] struct S;\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:112:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:113:12\n    |\n LL |     #[warn(x5400)] type T = S;\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:115:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:116:12\n    |\n LL |     #[warn(x5400)] impl S { }\n    |            ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:119:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:120:9\n    |\n LL | #[allow(x5300)]\n    |         ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:122:26\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:123:26\n    |\n LL |     mod inner { #![allow(x5300)] }\n    |                          ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:125:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:126:13\n    |\n LL |     #[allow(x5300)] fn f() { }\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:128:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:129:13\n    |\n LL |     #[allow(x5300)] struct S;\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:131:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:132:13\n    |\n LL |     #[allow(x5300)] type T = S;\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:134:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:135:13\n    |\n LL |     #[allow(x5300)] impl S { }\n    |             ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:138:10\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:139:10\n    |\n LL | #[forbid(x5200)]\n    |          ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:141:27\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:142:27\n    |\n LL |     mod inner { #![forbid(x5200)] }\n    |                           ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:144:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:145:14\n    |\n LL |     #[forbid(x5200)] fn f() { }\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:147:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:148:14\n    |\n LL |     #[forbid(x5200)] struct S;\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:150:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:151:14\n    |\n LL |     #[forbid(x5200)] type T = S;\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:153:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:154:14\n    |\n LL |     #[forbid(x5200)] impl S { }\n    |              ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:157:8\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:158:8\n    |\n LL | #[deny(x5100)]\n    |        ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:160:25\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:161:25\n    |\n LL |     mod inner { #![deny(x5100)] }\n    |                         ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:163:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:164:12\n    |\n LL |     #[deny(x5100)] fn f() { }\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:166:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:167:12\n    |\n LL |     #[deny(x5100)] struct S;\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:169:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:170:12\n    |\n LL |     #[deny(x5100)] type T = S;\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:172:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:173:12\n    |\n LL |     #[deny(x5100)] impl S { }\n    |            ^^^^^\n \n warning: macro_escape is a deprecated synonym for macro_use\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:456:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:457:1\n    |\n LL | #[macro_escape]\n    | ^^^^^^^^^^^^^^^\n \n warning: macro_escape is a deprecated synonym for macro_use\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:459:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:460:17\n    |\n LL |     mod inner { #![macro_escape] }\n    |                 ^^^^^^^^^^^^^^^^\n    |\n    = help: consider an outer attribute, `#[macro_use]` mod ...\n \n warning: the feature `rust1` has been stable since 1.0.0 and no longer requires an attribute to enable\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:89:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:90:12\n    |\n LL | #![feature(rust1)]\n    |            ^^^^^\n    |\n    = note: `#[warn(stable_features)]` on by default\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:180:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:181:5\n    |\n LL |     #[macro_use] fn f() { }\n    |     ^^^^^^^^^^^^\n    |\n note: lint level defined here\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:35:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:36:9\n    |\n LL | #![warn(unused_attributes, unknown_lints)]\n    |         ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:183:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:184:5\n    |\n LL |     #[macro_use] struct S;\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:186:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:187:5\n    |\n LL |     #[macro_use] type T = S;\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:189:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:190:5\n    |\n LL |     #[macro_use] impl S { }\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:196:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:197:17\n    |\n LL |     mod inner { #![macro_export] }\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:199:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:200:5\n    |\n LL |     #[macro_export] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:202:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:203:5\n    |\n LL |     #[macro_export] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:205:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:206:5\n    |\n LL |     #[macro_export] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:208:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:209:5\n    |\n LL |     #[macro_export] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:193:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:194:1\n    |\n LL | #[macro_export]\n    | ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:215:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:216:17\n    |\n LL |     mod inner { #![plugin_registrar] }\n    |                 ^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:220:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:221:5\n    |\n LL |     #[plugin_registrar] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:223:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:224:5\n    |\n LL |     #[plugin_registrar] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:226:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:227:5\n    |\n LL |     #[plugin_registrar] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:212:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:213:1\n    |\n LL | #[plugin_registrar]\n    | ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:233:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:234:17\n    |\n LL |     mod inner { #![main] }\n    |                 ^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:238:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:239:5\n    |\n LL |     #[main] struct S;\n    |     ^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:241:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:242:5\n    |\n LL |     #[main] type T = S;\n    |     ^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:244:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:245:5\n    |\n LL |     #[main] impl S { }\n    |     ^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:230:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:231:1\n    |\n LL | #[main]\n    | ^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:251:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:252:17\n    |\n LL |     mod inner { #![start] }\n    |                 ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:256:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:257:5\n    |\n LL |     #[start] struct S;\n    |     ^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:259:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:260:5\n    |\n LL |     #[start] type T = S;\n    |     ^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:262:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:263:5\n    |\n LL |     #[start] impl S { }\n    |     ^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:248:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:249:1\n    |\n LL | #[start]\n    | ^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:315:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:316:5\n    |\n LL |     #[path = \"3800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:318:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:319:5\n    |\n LL |     #[path = \"3800\"]  struct S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:321:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:322:5\n    |\n LL |     #[path = \"3800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:324:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:325:5\n    |\n LL |     #[path = \"3800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:331:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:332:17\n    |\n LL |     mod inner { #![automatically_derived] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:334:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:335:5\n    |\n LL |     #[automatically_derived] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:337:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:338:5\n    |\n LL |     #[automatically_derived] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:340:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:341:5\n    |\n LL |     #[automatically_derived] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:343:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:344:5\n    |\n LL |     #[automatically_derived] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:328:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:329:1\n    |\n LL | #[automatically_derived]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:363:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:364:17\n    |\n LL |     mod inner { #![no_link] }\n    |                 ^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:366:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:367:5\n    |\n LL |     #[no_link] fn f() { }\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:369:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:370:5\n    |\n LL |     #[no_link] struct S;\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:372:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:373:5\n    |\n LL |     #[no_link]type T = S;\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:375:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:376:5\n    |\n LL |     #[no_link] impl S { }\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:360:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:361:1\n    |\n LL | #[no_link]\n    | ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:382:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:383:17\n    |\n LL |     mod inner { #![should_panic] }\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:385:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:386:5\n    |\n LL |     #[should_panic] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:388:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:389:5\n    |\n LL |     #[should_panic] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:391:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:392:5\n    |\n LL |     #[should_panic] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:394:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:395:5\n    |\n LL |     #[should_panic] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:379:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:380:1\n    |\n LL | #[should_panic]\n    | ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:401:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:402:17\n    |\n LL |     mod inner { #![ignore] }\n    |                 ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:404:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:405:5\n    |\n LL |     #[ignore] fn f() { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:407:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:408:5\n    |\n LL |     #[ignore] struct S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:410:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:411:5\n    |\n LL |     #[ignore] type T = S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:413:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:414:5\n    |\n LL |     #[ignore] impl S { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:398:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:399:1\n    |\n LL | #[ignore]\n    | ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:420:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:421:17\n    |\n LL |     mod inner { #![no_implicit_prelude] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:423:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:424:5\n    |\n LL |     #[no_implicit_prelude] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:426:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:427:5\n    |\n LL |     #[no_implicit_prelude] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:429:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:430:5\n    |\n LL |     #[no_implicit_prelude] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:432:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:433:5\n    |\n LL |     #[no_implicit_prelude] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:417:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:418:1\n    |\n LL | #[no_implicit_prelude]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:439:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:440:17\n    |\n LL |     mod inner { #![reexport_test_harness_main=\"2900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:442:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:443:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:445:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:446:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:448:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:449:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:451:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:452:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:436:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:437:1\n    |\n LL | #[reexport_test_harness_main = \"2900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:462:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:463:5\n    |\n LL |     #[macro_escape] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:465:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:466:5\n    |\n LL |     #[macro_escape] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:468:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:469:5\n    |\n LL |     #[macro_escape] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:471:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:472:5\n    |\n LL |     #[macro_escape] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:479:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:480:17\n    |\n LL |     mod inner { #![no_std] }\n    |                 ^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:479:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:480:17\n    |\n LL |     mod inner { #![no_std] }\n    |                 ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:483:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:484:5\n    |\n LL |     #[no_std] fn f() { }\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:483:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:484:5\n    |\n LL |     #[no_std] fn f() { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:487:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:488:5\n    |\n LL |     #[no_std] struct S;\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:487:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:488:5\n    |\n LL |     #[no_std] struct S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:491:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:492:5\n    |\n LL |     #[no_std] type T = S;\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:491:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:492:5\n    |\n LL |     #[no_std] type T = S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:495:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:496:5\n    |\n LL |     #[no_std] impl S { }\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:495:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:496:5\n    |\n LL |     #[no_std] impl S { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:475:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:476:1\n    |\n LL | #[no_std]\n    | ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:475:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:476:1\n    |\n LL | #[no_std]\n    | ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:634:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:635:17\n    |\n LL |     mod inner { #![crate_name=\"0900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:634:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:635:17\n    |\n LL |     mod inner { #![crate_name=\"0900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:638:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:639:5\n    |\n LL |     #[crate_name = \"0900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:638:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:639:5\n    |\n LL |     #[crate_name = \"0900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:642:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:643:5\n    |\n LL |     #[crate_name = \"0900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:642:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:643:5\n    |\n LL |     #[crate_name = \"0900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:646:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:647:5\n    |\n LL |     #[crate_name = \"0900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:646:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:647:5\n    |\n LL |     #[crate_name = \"0900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:650:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:651:5\n    |\n LL |     #[crate_name = \"0900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:650:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:651:5\n    |\n LL |     #[crate_name = \"0900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:630:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:631:1\n    |\n LL | #[crate_name = \"0900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:630:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:631:1\n    |\n LL | #[crate_name = \"0900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:659:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:660:17\n    |\n LL |     mod inner { #![crate_type=\"0800\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:659:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:660:17\n    |\n LL |     mod inner { #![crate_type=\"0800\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:663:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:664:5\n    |\n LL |     #[crate_type = \"0800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:663:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:664:5\n    |\n LL |     #[crate_type = \"0800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:667:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:668:5\n    |\n LL |     #[crate_type = \"0800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:667:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:668:5\n    |\n LL |     #[crate_type = \"0800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:671:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:672:5\n    |\n LL |     #[crate_type = \"0800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:671:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:672:5\n    |\n LL |     #[crate_type = \"0800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:675:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:676:5\n    |\n LL |     #[crate_type = \"0800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:675:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:676:5\n    |\n LL |     #[crate_type = \"0800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:655:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:656:1\n    |\n LL | #[crate_type = \"0800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:655:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:656:1\n    |\n LL | #[crate_type = \"0800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:684:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:685:17\n    |\n LL |     mod inner { #![feature(x0600)] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:684:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:685:17\n    |\n LL |     mod inner { #![feature(x0600)] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:688:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:689:5\n    |\n LL |     #[feature(x0600)] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:688:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:689:5\n    |\n LL |     #[feature(x0600)] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:692:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:693:5\n    |\n LL |     #[feature(x0600)] struct S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:692:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:693:5\n    |\n LL |     #[feature(x0600)] struct S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:696:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:697:5\n    |\n LL |     #[feature(x0600)] type T = S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:696:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:697:5\n    |\n LL |     #[feature(x0600)] type T = S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:700:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:701:5\n    |\n LL |     #[feature(x0600)] impl S { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:700:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:701:5\n    |\n LL |     #[feature(x0600)] impl S { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:680:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:681:1\n    |\n LL | #[feature(x0600)]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:680:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:681:1\n    |\n LL | #[feature(x0600)]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:710:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:711:17\n    |\n LL |     mod inner { #![no_main] }\n    |                 ^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:710:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:711:17\n    |\n LL |     mod inner { #![no_main] }\n    |                 ^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:714:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:715:5\n    |\n LL |     #[no_main] fn f() { }\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:714:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:715:5\n    |\n LL |     #[no_main] fn f() { }\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:718:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:719:5\n    |\n LL |     #[no_main] struct S;\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:718:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:719:5\n    |\n LL |     #[no_main] struct S;\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:722:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:723:5\n    |\n LL |     #[no_main] type T = S;\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:722:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:723:5\n    |\n LL |     #[no_main] type T = S;\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:726:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:727:5\n    |\n LL |     #[no_main] impl S { }\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:726:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:727:5\n    |\n LL |     #[no_main] impl S { }\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:706:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:707:1\n    |\n LL | #[no_main]\n    | ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:706:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:707:1\n    |\n LL | #[no_main]\n    | ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:748:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:749:17\n    |\n LL |     mod inner { #![recursion_limit=\"0200\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:748:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:749:17\n    |\n LL |     mod inner { #![recursion_limit=\"0200\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:752:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:753:5\n    |\n LL |     #[recursion_limit=\"0200\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:752:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:753:5\n    |\n LL |     #[recursion_limit=\"0200\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:756:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:757:5\n    |\n LL |     #[recursion_limit=\"0200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:756:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:757:5\n    |\n LL |     #[recursion_limit=\"0200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:760:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:761:5\n    |\n LL |     #[recursion_limit=\"0200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:760:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:761:5\n    |\n LL |     #[recursion_limit=\"0200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:764:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:765:5\n    |\n LL |     #[recursion_limit=\"0200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:764:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:765:5\n    |\n LL |     #[recursion_limit=\"0200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:744:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:745:1\n    |\n LL | #[recursion_limit=\"0200\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:744:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:745:1\n    |\n LL | #[recursion_limit=\"0200\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:773:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:774:17\n    |\n LL |     mod inner { #![type_length_limit=\"0100\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:773:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:774:17\n    |\n LL |     mod inner { #![type_length_limit=\"0100\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:777:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:778:5\n    |\n LL |     #[type_length_limit=\"0100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:777:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:778:5\n    |\n LL |     #[type_length_limit=\"0100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:781:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:782:5\n    |\n LL |     #[type_length_limit=\"0100\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:781:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:782:5\n    |\n LL |     #[type_length_limit=\"0100\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:785:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:786:5\n    |\n LL |     #[type_length_limit=\"0100\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:785:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:786:5\n    |\n LL |     #[type_length_limit=\"0100\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:789:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:790:5\n    |\n LL |     #[type_length_limit=\"0100\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:789:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:790:5\n    |\n LL |     #[type_length_limit=\"0100\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:769:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:770:1\n    |\n LL | #[type_length_limit=\"0100\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:769:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:770:1\n    |\n LL | #[type_length_limit=\"0100\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:44:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:45:1\n    |\n LL | #![macro_export]\n    | ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:45:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:46:1\n    |\n LL | #![plugin_registrar]\n    | ^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:48:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:49:1\n    |\n LL | #![main]\n    | ^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:49:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:50:1\n    |\n LL | #![start]\n    | ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:52:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:53:1\n    |\n LL | #![repr()]\n    | ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:54:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:55:1\n    |\n LL | #![path = \"3800\"]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:55:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:56:1\n    |\n LL | #![automatically_derived]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:57:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:58:1\n    |\n LL | #![no_link]\n    | ^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:59:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:60:1\n    |\n LL | #![should_panic]\n    | ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:60:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:61:1\n    |\n LL | #![ignore]\n    | ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:66:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:67:1\n    |\n LL | #![proc_macro_derive()]\n    | ^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "9f808dac362783acb3fa651c525ec10fc028d7e5", "filename": "src/test/ui/issues/issue-12997-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Fui%2Fissues%2Fissue-12997-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Fui%2Fissues%2Fissue-12997-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-12997-1.rs?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -2,6 +2,8 @@\n \n //! Test that makes sure wrongly-typed bench functions aren't ignored\n \n+#![feature(test)]\n+\n #[bench]\n fn foo() { } //~ ERROR functions used as benches\n "}, {"sha": "00c605174fbb51133054059465c2888091a6fc06", "filename": "src/test/ui/issues/issue-12997-1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Fui%2Fissues%2Fissue-12997-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Fui%2Fissues%2Fissue-12997-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-12997-1.stderr?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -1,11 +1,11 @@\n error: functions used as benches must have signature `fn(&mut Bencher) -> impl Termination`\n-  --> $DIR/issue-12997-1.rs:6:1\n+  --> $DIR/issue-12997-1.rs:8:1\n    |\n LL | fn foo() { }\n    | ^^^^^^^^^^^^\n \n error: functions used as benches must have signature `fn(&mut Bencher) -> impl Termination`\n-  --> $DIR/issue-12997-1.rs:9:1\n+  --> $DIR/issue-12997-1.rs:11:1\n    |\n LL | fn bar(x: isize, y: isize) { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "9df965315ab38ed93c67941a52b62ef5c1aa1ad9", "filename": "src/test/ui/issues/issue-12997-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Fui%2Fissues%2Fissue-12997-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Fui%2Fissues%2Fissue-12997-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-12997-2.rs?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -2,6 +2,8 @@\n \n //! Test that makes sure wrongly-typed bench functions are rejected\n \n+#![feature(test)]\n+\n #[bench]\n fn bar(x: isize) { }\n //~^ ERROR mismatched types"}, {"sha": "df8c936b8242a5a07ced518636e432b79f83d039", "filename": "src/test/ui/issues/issue-12997-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Fui%2Fissues%2Fissue-12997-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Fui%2Fissues%2Fissue-12997-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-12997-2.stderr?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -1,5 +1,5 @@\n error[E0308]: mismatched types\n-  --> $DIR/issue-12997-2.rs:6:1\n+  --> $DIR/issue-12997-2.rs:8:1\n    |\n LL | fn bar(x: isize) { }\n    | ^^^^^^^^^^^^^^^^^^^^ expected isize, found mutable reference"}, {"sha": "fb126339dc21665970c684a3075792ec7748881f", "filename": "src/test/ui/json-multiple.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Fui%2Fjson-multiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Fui%2Fjson-multiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fjson-multiple.rs?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -1,4 +1,5 @@\n // build-pass\n+// ignore-pass (different metadata emitted in different modes)\n // compile-flags: --json=diagnostic-short --json artifacts --error-format=json\n \n #![crate_type = \"lib\"]"}, {"sha": "8b6ba131eb0021c0a7ce4515548c8faf49fdc954", "filename": "src/test/ui/json-options.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Fui%2Fjson-options.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23a5f208de7fba983bfaaa8d60f1208d5780a98/src%2Ftest%2Fui%2Fjson-options.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fjson-options.rs?ref=f23a5f208de7fba983bfaaa8d60f1208d5780a98", "patch": "@@ -1,4 +1,5 @@\n // build-pass\n+// ignore-pass (different metadata emitted in different modes)\n // compile-flags: --json=diagnostic-short,artifacts --error-format=json\n \n #![crate_type = \"lib\"]"}]}