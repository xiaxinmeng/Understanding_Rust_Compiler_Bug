{"sha": "828404684b486a2b741858970a150530228258bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyODQwNDY4NGI0ODZhMmI3NDE4NTg5NzBhMTUwNTMwMjI4MjU4YmI=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-01-16T18:32:13Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-01-16T18:32:13Z"}, "message": "AST/HIR: Replace Path with Type in WhereEqPredicate", "tree": {"sha": "bf660842e2b28774050f50348d5be2b627855fef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf660842e2b28774050f50348d5be2b627855fef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/828404684b486a2b741858970a150530228258bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/828404684b486a2b741858970a150530228258bb", "html_url": "https://github.com/rust-lang/rust/commit/828404684b486a2b741858970a150530228258bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/828404684b486a2b741858970a150530228258bb/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47410b23aa85255ae2dc021498a2e54806f4bb0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/47410b23aa85255ae2dc021498a2e54806f4bb0a", "html_url": "https://github.com/rust-lang/rust/commit/47410b23aa85255ae2dc021498a2e54806f4bb0a"}], "stats": {"total": 74, "additions": 38, "deletions": 36}, "files": [{"sha": "c244c33728c7a7a863faea743f16ca4d5de2dc47", "filename": "src/librustc/hir/intravisit.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/828404684b486a2b741858970a150530228258bb/src%2Flibrustc%2Fhir%2Fintravisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828404684b486a2b741858970a150530228258bb/src%2Flibrustc%2Fhir%2Fintravisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fintravisit.rs?ref=828404684b486a2b741858970a150530228258bb", "patch": "@@ -740,12 +740,12 @@ pub fn walk_where_predicate<'v, V: Visitor<'v>>(\n             walk_list!(visitor, visit_lifetime, bounds);\n         }\n         &WherePredicate::EqPredicate(WhereEqPredicate{id,\n-                                                      ref path,\n-                                                      ref ty,\n+                                                      ref lhs_ty,\n+                                                      ref rhs_ty,\n                                                       ..}) => {\n             visitor.visit_id(id);\n-            visitor.visit_path(path, id);\n-            visitor.visit_ty(ty);\n+            visitor.visit_ty(lhs_ty);\n+            visitor.visit_ty(rhs_ty);\n         }\n     }\n }"}, {"sha": "bdd54c547e3e8c5e2bd9382dcfd440c660cac648", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/828404684b486a2b741858970a150530228258bb/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828404684b486a2b741858970a150530228258bb/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=828404684b486a2b741858970a150530228258bb", "patch": "@@ -719,13 +719,13 @@ impl<'a> LoweringContext<'a> {\n                 })\n             }\n             WherePredicate::EqPredicate(WhereEqPredicate{ id,\n-                                                          ref path,\n-                                                          ref ty,\n+                                                          ref lhs_ty,\n+                                                          ref rhs_ty,\n                                                           span}) => {\n                 hir::WherePredicate::EqPredicate(hir::WhereEqPredicate {\n                     id: id,\n-                    path: self.lower_path(id, path, ParamMode::Explicit, false),\n-                    ty: self.lower_ty(ty),\n+                    lhs_ty: self.lower_ty(lhs_ty),\n+                    rhs_ty: self.lower_ty(rhs_ty),\n                     span: span,\n                 })\n             }"}, {"sha": "075358c576ceff0314beb8d124208680a25197b5", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/828404684b486a2b741858970a150530228258bb/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828404684b486a2b741858970a150530228258bb/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=828404684b486a2b741858970a150530228258bb", "patch": "@@ -403,8 +403,8 @@ pub struct WhereRegionPredicate {\n pub struct WhereEqPredicate {\n     pub id: NodeId,\n     pub span: Span,\n-    pub path: Path,\n-    pub ty: P<Ty>,\n+    pub lhs_ty: P<Ty>,\n+    pub rhs_ty: P<Ty>,\n }\n \n pub type CrateConfig = HirVec<P<MetaItem>>;"}, {"sha": "b84a33083156653f9be6a1b515d8008e9f26b7fa", "filename": "src/librustc/hir/print.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/828404684b486a2b741858970a150530228258bb/src%2Flibrustc%2Fhir%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828404684b486a2b741858970a150530228258bb/src%2Flibrustc%2Fhir%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fprint.rs?ref=828404684b486a2b741858970a150530228258bb", "patch": "@@ -2023,11 +2023,13 @@ impl<'a> State<'a> {\n                         }\n                     }\n                 }\n-                &hir::WherePredicate::EqPredicate(hir::WhereEqPredicate{ref path, ref ty, ..}) => {\n-                    self.print_path(path, false)?;\n+                &hir::WherePredicate::EqPredicate(hir::WhereEqPredicate{ref lhs_ty,\n+                                                                        ref rhs_ty,\n+                                                                        ..}) => {\n+                    self.print_type(lhs_ty)?;\n                     space(&mut self.s)?;\n                     self.word_space(\"=\")?;\n-                    self.print_type(&ty)?;\n+                    self.print_type(rhs_ty)?;\n                 }\n             }\n         }"}, {"sha": "dd99aea909faaada82ed1103d70e8f49c7086512", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/828404684b486a2b741858970a150530228258bb/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828404684b486a2b741858970a150530228258bb/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=828404684b486a2b741858970a150530228258bb", "patch": "@@ -323,12 +323,11 @@ impl<'a, 'tcx> Visitor<'tcx> for LifetimeContext<'a, 'tcx> {\n                         self.visit_lifetime(bound);\n                     }\n                 }\n-                &hir::WherePredicate::EqPredicate(hir::WhereEqPredicate{ id,\n-                                                                         ref path,\n-                                                                         ref ty,\n-                                                                         .. }) => {\n-                    self.visit_path(path, id);\n-                    self.visit_ty(&ty);\n+                &hir::WherePredicate::EqPredicate(hir::WhereEqPredicate{ref lhs_ty,\n+                                                                        ref rhs_ty,\n+                                                                        .. }) => {\n+                    self.visit_ty(lhs_ty);\n+                    self.visit_ty(rhs_ty);\n                 }\n             }\n         }"}, {"sha": "ff4c92bb40ef558f07ed163c219a0ce2fc9bbb50", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/828404684b486a2b741858970a150530228258bb/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828404684b486a2b741858970a150530228258bb/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=828404684b486a2b741858970a150530228258bb", "patch": "@@ -853,7 +853,7 @@ impl<'a, 'tcx> Visitor<'tcx> for ObsoleteVisiblePrivateTypesVisitor<'a, 'tcx> {\n                 }\n                 &hir::WherePredicate::RegionPredicate(_) => {}\n                 &hir::WherePredicate::EqPredicate(ref eq_pred) => {\n-                    self.visit_ty(&eq_pred.ty);\n+                    self.visit_ty(&eq_pred.rhs_ty);\n                 }\n             }\n         }"}, {"sha": "52f9ec30aec066532e5ee2897ffd42dff751449a", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/828404684b486a2b741858970a150530228258bb/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828404684b486a2b741858970a150530228258bb/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=828404684b486a2b741858970a150530228258bb", "patch": "@@ -403,8 +403,8 @@ pub struct WhereRegionPredicate {\n pub struct WhereEqPredicate {\n     pub id: NodeId,\n     pub span: Span,\n-    pub path: Path,\n-    pub ty: P<Ty>,\n+    pub lhs_ty: P<Ty>,\n+    pub rhs_ty: P<Ty>,\n }\n \n /// The set of MetaItems that define the compilation environment of the crate,"}, {"sha": "1d9abebc7b81f169c1c321bb95c0ec5645b9ea02", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/828404684b486a2b741858970a150530228258bb/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828404684b486a2b741858970a150530228258bb/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=828404684b486a2b741858970a150530228258bb", "patch": "@@ -766,13 +766,13 @@ pub fn noop_fold_where_predicate<T: Folder>(\n             })\n         }\n         ast::WherePredicate::EqPredicate(ast::WhereEqPredicate{id,\n-                                                               path,\n-                                                               ty,\n+                                                               lhs_ty,\n+                                                               rhs_ty,\n                                                                span}) => {\n             ast::WherePredicate::EqPredicate(ast::WhereEqPredicate{\n                 id: fld.new_id(id),\n-                path: fld.fold_path(path),\n-                ty:fld.fold_ty(ty),\n+                lhs_ty: fld.fold_ty(lhs_ty),\n+                rhs_ty: fld.fold_ty(rhs_ty),\n                 span: fld.new_span(span)\n             })\n         }"}, {"sha": "f6ed2350105a93272f4f5439157fe239ee0bc280", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/828404684b486a2b741858970a150530228258bb/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828404684b486a2b741858970a150530228258bb/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=828404684b486a2b741858970a150530228258bb", "patch": "@@ -2849,11 +2849,13 @@ impl<'a> State<'a> {\n                                                                                ..}) => {\n                     self.print_lifetime_bounds(lifetime, bounds)?;\n                 }\n-                ast::WherePredicate::EqPredicate(ast::WhereEqPredicate{ref path, ref ty, ..}) => {\n-                    self.print_path(path, false, 0, false)?;\n+                ast::WherePredicate::EqPredicate(ast::WhereEqPredicate{ref lhs_ty,\n+                                                                       ref rhs_ty,\n+                                                                       ..}) => {\n+                    self.print_type(lhs_ty)?;\n                     space(&mut self.s)?;\n                     self.word_space(\"=\")?;\n-                    self.print_type(&ty)?;\n+                    self.print_type(rhs_ty)?;\n                 }\n             }\n         }"}, {"sha": "cc6ba7adf1a6a9661ca921b86871e0278dd4a2de", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/828404684b486a2b741858970a150530228258bb/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828404684b486a2b741858970a150530228258bb/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=828404684b486a2b741858970a150530228258bb", "patch": "@@ -508,12 +508,11 @@ pub fn walk_generics<'a, V: Visitor<'a>>(visitor: &mut V, generics: &'a Generics\n                 visitor.visit_lifetime(lifetime);\n                 walk_list!(visitor, visit_lifetime, bounds);\n             }\n-            WherePredicate::EqPredicate(WhereEqPredicate{id,\n-                                                         ref path,\n-                                                         ref ty,\n+            WherePredicate::EqPredicate(WhereEqPredicate{ref lhs_ty,\n+                                                         ref rhs_ty,\n                                                          ..}) => {\n-                visitor.visit_path(path, id);\n-                visitor.visit_ty(ty);\n+                visitor.visit_ty(lhs_ty);\n+                visitor.visit_ty(rhs_ty);\n             }\n         }\n     }"}, {"sha": "b99b10193681f2b327f0758c942da3943f5b6be4", "filename": "src/libsyntax_ext/deriving/generic/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/828404684b486a2b741858970a150530228258bb/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828404684b486a2b741858970a150530228258bb/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs?ref=828404684b486a2b741858970a150530228258bb", "patch": "@@ -558,8 +558,8 @@ impl<'a> TraitDef<'a> {\n                     ast::WherePredicate::EqPredicate(ast::WhereEqPredicate {\n                         id: ast::DUMMY_NODE_ID,\n                         span: self.span,\n-                        path: we.path.clone(),\n-                        ty: we.ty.clone(),\n+                        lhs_ty: we.lhs_ty.clone(),\n+                        rhs_ty: we.rhs_ty.clone(),\n                     })\n                 }\n             }"}]}