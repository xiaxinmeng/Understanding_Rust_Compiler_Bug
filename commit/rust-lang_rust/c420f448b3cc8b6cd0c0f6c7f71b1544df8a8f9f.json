{"sha": "c420f448b3cc8b6cd0c0f6c7f71b1544df8a8f9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0MjBmNDQ4YjNjYzhiNmNkMGMwZjZjN2Y3MWIxNTQ0ZGY4YThmOWY=", "commit": {"author": {"name": "Alex Gaynor", "email": "alex.gaynor@gmail.com", "date": "2014-06-29T18:11:03Z"}, "committer": {"name": "Alex Gaynor", "email": "alex.gaynor@gmail.com", "date": "2014-06-29T18:11:03Z"}, "message": "Wrap two code examples in backticks\n\nThis makes the docs ever-so-slightly easier to read.", "tree": {"sha": "76d7a4aadfbdb24296a11993d4467e61d871088a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76d7a4aadfbdb24296a11993d4467e61d871088a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c420f448b3cc8b6cd0c0f6c7f71b1544df8a8f9f", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c420f448b3cc8b6cd0c0f6c7f71b1544df8a8f9f", "html_url": "https://github.com/rust-lang/rust/commit/c420f448b3cc8b6cd0c0f6c7f71b1544df8a8f9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c420f448b3cc8b6cd0c0f6c7f71b1544df8a8f9f/comments", "author": {"login": "alex", "id": 772, "node_id": "MDQ6VXNlcjc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex", "html_url": "https://github.com/alex", "followers_url": "https://api.github.com/users/alex/followers", "following_url": "https://api.github.com/users/alex/following{/other_user}", "gists_url": "https://api.github.com/users/alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex/subscriptions", "organizations_url": "https://api.github.com/users/alex/orgs", "repos_url": "https://api.github.com/users/alex/repos", "events_url": "https://api.github.com/users/alex/events{/privacy}", "received_events_url": "https://api.github.com/users/alex/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alex", "id": 772, "node_id": "MDQ6VXNlcjc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex", "html_url": "https://github.com/alex", "followers_url": "https://api.github.com/users/alex/followers", "following_url": "https://api.github.com/users/alex/following{/other_user}", "gists_url": "https://api.github.com/users/alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex/subscriptions", "organizations_url": "https://api.github.com/users/alex/orgs", "repos_url": "https://api.github.com/users/alex/repos", "events_url": "https://api.github.com/users/alex/events{/privacy}", "received_events_url": "https://api.github.com/users/alex/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd9563aa382ccfbda36049786329edcdc609930c", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd9563aa382ccfbda36049786329edcdc609930c", "html_url": "https://github.com/rust-lang/rust/commit/bd9563aa382ccfbda36049786329edcdc609930c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6d48122b1867e98c69afb6d6dcc79a496c003398", "filename": "src/libstd/path/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c420f448b3cc8b6cd0c0f6c7f71b1544df8a8f9f/src%2Flibstd%2Fpath%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c420f448b3cc8b6cd0c0f6c7f71b1544df8a8f9f/src%2Flibstd%2Fpath%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath%2Fmod.rs?ref=c420f448b3cc8b6cd0c0f6c7f71b1544df8a8f9f", "patch": "@@ -35,8 +35,8 @@ code, `Path` should be used to refer to the platform-native path.\n Creation of a path is typically done with either `Path::new(some_str)` or\n `Path::new(some_vec)`. This path can be modified with `.push()` and\n `.pop()` (and other setters). The resulting Path can either be passed to another\n-API that expects a path, or can be turned into a &[u8] with `.as_vec()` or a\n-Option<&str> with `.as_str()`. Similarly, attributes of the path can be queried\n+API that expects a path, or can be turned into a `&[u8]` with `.as_vec()` or a\n+`Option<&str>` with `.as_str()`. Similarly, attributes of the path can be queried\n with methods such as `.filename()`. There are also methods that return a new\n path instead of modifying the receiver, such as `.join()` or `.dir_path()`.\n "}]}