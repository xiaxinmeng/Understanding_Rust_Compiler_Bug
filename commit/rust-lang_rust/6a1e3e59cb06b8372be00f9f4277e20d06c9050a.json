{"sha": "6a1e3e59cb06b8372be00f9f4277e20d06c9050a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhMWUzZTU5Y2IwNmI4MzcyYmUwMGY5ZjQyNzdlMjBkMDZjOTA1MGE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-29T11:34:21Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-29T11:34:21Z"}, "message": "more perf logging", "tree": {"sha": "193d984ba8935d7093a2243093c9ea102d5d880e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/193d984ba8935d7093a2243093c9ea102d5d880e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a1e3e59cb06b8372be00f9f4277e20d06c9050a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a1e3e59cb06b8372be00f9f4277e20d06c9050a", "html_url": "https://github.com/rust-lang/rust/commit/6a1e3e59cb06b8372be00f9f4277e20d06c9050a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a1e3e59cb06b8372be00f9f4277e20d06c9050a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9eef546ca2f59d0ebc0e5dc443fc1a5d93926030", "url": "https://api.github.com/repos/rust-lang/rust/commits/9eef546ca2f59d0ebc0e5dc443fc1a5d93926030", "html_url": "https://github.com/rust-lang/rust/commit/9eef546ca2f59d0ebc0e5dc443fc1a5d93926030"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "16c05e4c34c9538f5f33e127689b3eb352802364", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6a1e3e59cb06b8372be00f9f4277e20d06c9050a/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a1e3e59cb06b8372be00f9f4277e20d06c9050a/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=6a1e3e59cb06b8372be00f9f4277e20d06c9050a", "patch": "@@ -170,7 +170,9 @@ fn main_loop_inner(\n \n     let (libdata_sender, libdata_receiver) = unbounded();\n     loop {\n+        let _p = profile(\"loop_turn\");\n         state.maybe_collect_garbage();\n+\n         log::trace!(\"selecting\");\n         let event = select! {\n             recv(msg_receiver) -> msg => match msg {\n@@ -184,8 +186,11 @@ fn main_loop_inner(\n             },\n             recv(libdata_receiver) -> data => Event::Lib(data.unwrap())\n         };\n-        log::info!(\"loop_turn = {:?}\", event);\n-        let _p = profile(\"loop_turn\");\n+        log::info!(\"loop turn = {:?}\", event);\n+        let queue_count = pool.queued_count();\n+        if queue_count > 0 {\n+            log::info!(\"queued count = {}\", queue_count);\n+        }\n         let mut state_changed = false;\n         match event {\n             Event::Task(task) => on_task(task, msg_sender, pending_requests),\n@@ -468,7 +473,7 @@ impl<'a> PoolDispatcher<'a> {\n         Ok(self)\n     }\n \n-    fn finish(&mut self) -> ::std::result::Result<u64, RawRequest> {\n+    fn finish(&mut self) -> std::result::Result<u64, RawRequest> {\n         match (self.res.take(), self.req.take()) {\n             (Some(res), None) => Ok(res),\n             (None, Some(req)) => Err(req),"}]}