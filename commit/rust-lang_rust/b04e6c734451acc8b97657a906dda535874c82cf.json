{"sha": "b04e6c734451acc8b97657a906dda535874c82cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwNGU2YzczNDQ1MWFjYzhiOTc2NTdhOTA2ZGRhNTM1ODc0YzgyY2Y=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-08-24T23:49:08Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-09-09T21:16:49Z"}, "message": "Make move_path_children_matching closure take a PlaceElem instead of a slice", "tree": {"sha": "673c52c8663f47b9f1b3f0d4de36dc2c6e770f0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/673c52c8663f47b9f1b3f0d4de36dc2c6e770f0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b04e6c734451acc8b97657a906dda535874c82cf", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEmNHc6jmXzkUyxd4xiMlBzaHUZDIFAl12wUEACgkQiMlBzaHU\nZDJlGw//YUqJlJ9ioJP3JqR1yjGAJv5hhYl7cDpsIaxz6an/wG/l0tCmU+tDhytR\nPBelDsbFBIf+7Kkk8JbSH3TzpiIuKmrOvqXmNo3Ygs+Hu5BUNZBxL8uIHudC9oiP\nKge0YaACJkZMGsBFU9zGgsDhaTQEjiAhrV0MA9OSXTk8SqFsJSUWJ/8XLykR8OWh\nRZXIeB0aQukr60Bgo5E+sLp1+xK9kJlPUfSxlUMe6vkJtsGm2Qs3BZfAvzto4cgx\n6yiJwvIgfVbQN8FDx4zbaffnw4bBY6DDyDQ0dpTb+btKAs1JQggD4UpsVgOd8eG5\nDORLsq8qDUWl8tXx6ll49VYbQgk3g+KEBl66NT/+4h+xpWIuZR1bgwmg0lIZck5W\nMs/VqNlJjFVP81tr+xWJNEQEVWg97iimuNez8PQz/snoIoP2nhoCzM5I+NsBSyq/\nucEHJZK7EkYetImFZeG4GSphjm6yeXsultMHP4oA7IDmP3fZSCaGVHw/hgHRyiZI\n5mwOtvlOiBb5xrDnqWNjQ/I/Pp4haHQokhdepzNdTdX4BU51mMYCtfQ0xD3ACOgg\n0mxUZQTXvZjmFjI844mZJQpB1Ch3vqoBLVi14dTmgpJxwz5lpff94yDj6Ng8HSeX\nHptIDOeXbcKojqznizKb5vIFVuyjBwJOC0npM5ZZ+vHF1Q61isA=\n=DzLV\n-----END PGP SIGNATURE-----", "payload": "tree 673c52c8663f47b9f1b3f0d4de36dc2c6e770f0e\nparent 7efee8dd05b4a2439451b47de8df79c959faffcd\nauthor Santiago Pastorino <spastorino@gmail.com> 1566690548 -0400\ncommitter Santiago Pastorino <spastorino@gmail.com> 1568063809 -0300\n\nMake move_path_children_matching closure take a PlaceElem instead of a slice\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b04e6c734451acc8b97657a906dda535874c82cf", "html_url": "https://github.com/rust-lang/rust/commit/b04e6c734451acc8b97657a906dda535874c82cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b04e6c734451acc8b97657a906dda535874c82cf/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7efee8dd05b4a2439451b47de8df79c959faffcd", "url": "https://api.github.com/repos/rust-lang/rust/commits/7efee8dd05b4a2439451b47de8df79c959faffcd", "html_url": "https://github.com/rust-lang/rust/commit/7efee8dd05b4a2439451b47de8df79c959faffcd"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "444cc008ae785432f1ed2165e45c8e7f2dec896b", "filename": "src/librustc_mir/dataflow/drop_flag_effects.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b04e6c734451acc8b97657a906dda535874c82cf/src%2Flibrustc_mir%2Fdataflow%2Fdrop_flag_effects.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b04e6c734451acc8b97657a906dda535874c82cf/src%2Flibrustc_mir%2Fdataflow%2Fdrop_flag_effects.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fdrop_flag_effects.rs?ref=b04e6c734451acc8b97657a906dda535874c82cf", "patch": "@@ -10,14 +10,17 @@ pub fn move_path_children_matching<'tcx, F>(move_data: &MoveData<'tcx>,\n                                         path: MovePathIndex,\n                                         mut cond: F)\n                                         -> Option<MovePathIndex>\n-    where F: FnMut(&[mir::PlaceElem<'tcx>]) -> bool\n+    where F: FnMut(&mir::PlaceElem<'tcx>) -> bool\n {\n     let mut next_child = move_data.move_paths[path].first_child;\n     while let Some(child_index) = next_child {\n-        if cond(&move_data.move_paths[child_index].place.projection) {\n-            return Some(child_index)\n+        let move_path_children = &move_data.move_paths[child_index];\n+        if let Some(elem) = move_path_children.place.projection.last() {\n+            if cond(elem) {\n+                return Some(child_index)\n+            }\n         }\n-        next_child = move_data.move_paths[child_index].next_sibling;\n+        next_child = move_path_children.next_sibling;\n     }\n \n     None"}, {"sha": "de5978c3a3525a5c345d87ce347519fdaa5463bf", "filename": "src/librustc_mir/transform/elaborate_drops.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b04e6c734451acc8b97657a906dda535874c82cf/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b04e6c734451acc8b97657a906dda535874c82cf/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs?ref=b04e6c734451acc8b97657a906dda535874c82cf", "patch": "@@ -236,36 +236,33 @@ impl<'a, 'b, 'tcx> DropElaborator<'a, 'tcx> for Elaborator<'a, 'b, 'tcx> {\n     }\n \n     fn field_subpath(&self, path: Self::Path, field: Field) -> Option<Self::Path> {\n-        dataflow::move_path_children_matching(self.ctxt.move_data(), path, |p| match p {\n-            [.., ProjectionElem::Field(idx, _)] => *idx == field,\n+        dataflow::move_path_children_matching(self.ctxt.move_data(), path, |e| match e {\n+            ProjectionElem::Field(idx, _) => *idx == field,\n             _ => false,\n         })\n     }\n \n     fn array_subpath(&self, path: Self::Path, index: u32, size: u32) -> Option<Self::Path> {\n-        dataflow::move_path_children_matching(self.ctxt.move_data(), path, |p| match p {\n-            [.., ProjectionElem::ConstantIndex { offset, min_length: _, from_end: false }] => {\n+        dataflow::move_path_children_matching(self.ctxt.move_data(), path, |e| match e {\n+            ProjectionElem::ConstantIndex { offset, min_length: _, from_end: false } => {\n                 *offset == index\n             }\n-            [.., ProjectionElem::ConstantIndex { offset, min_length: _, from_end: true }] => {\n+            ProjectionElem::ConstantIndex { offset, min_length: _, from_end: true } => {\n                 size - offset == index\n             }\n             _ => false,\n         })\n     }\n \n     fn deref_subpath(&self, path: Self::Path) -> Option<Self::Path> {\n-        dataflow::move_path_children_matching(self.ctxt.move_data(), path, |p| {\n-            match p {\n-                [.., ProjectionElem::Deref] => true,\n-                _ => false\n-            }\n+        dataflow::move_path_children_matching(self.ctxt.move_data(), path, |e| {\n+            *e == ProjectionElem::Deref\n         })\n     }\n \n     fn downcast_subpath(&self, path: Self::Path, variant: VariantIdx) -> Option<Self::Path> {\n-        dataflow::move_path_children_matching(self.ctxt.move_data(), path, |p| match p {\n-            [.., ProjectionElem::Downcast(_, idx)] => *idx == variant,\n+        dataflow::move_path_children_matching(self.ctxt.move_data(), path, |e| match e {\n+            ProjectionElem::Downcast(_, idx) => *idx == variant,\n             _ => false\n         })\n     }"}]}