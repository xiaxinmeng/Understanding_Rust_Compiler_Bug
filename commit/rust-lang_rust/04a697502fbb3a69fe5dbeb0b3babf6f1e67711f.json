{"sha": "04a697502fbb3a69fe5dbeb0b3babf6f1e67711f", "node_id": "C_kwDOAAsO6NoAKDA0YTY5NzUwMmZiYjNhNjlmZTVkYmViMGIzYmFiZjZmMWU2NzcxMWY", "commit": {"author": {"name": "Kai Luo", "email": "gluokai@gmail.com", "date": "2023-01-09T15:02:53Z"}, "committer": {"name": "Kai Luo", "email": "gluokai@gmail.com", "date": "2023-01-09T15:02:53Z"}, "message": "Also check ttype_index when using SJLJ", "tree": {"sha": "7013c8d66bbdd76cfd16564686593973bd0dd5e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7013c8d66bbdd76cfd16564686593973bd0dd5e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04a697502fbb3a69fe5dbeb0b3babf6f1e67711f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04a697502fbb3a69fe5dbeb0b3babf6f1e67711f", "html_url": "https://github.com/rust-lang/rust/commit/04a697502fbb3a69fe5dbeb0b3babf6f1e67711f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04a697502fbb3a69fe5dbeb0b3babf6f1e67711f/comments", "author": {"login": "bzEq", "id": 3006405, "node_id": "MDQ6VXNlcjMwMDY0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/3006405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bzEq", "html_url": "https://github.com/bzEq", "followers_url": "https://api.github.com/users/bzEq/followers", "following_url": "https://api.github.com/users/bzEq/following{/other_user}", "gists_url": "https://api.github.com/users/bzEq/gists{/gist_id}", "starred_url": "https://api.github.com/users/bzEq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bzEq/subscriptions", "organizations_url": "https://api.github.com/users/bzEq/orgs", "repos_url": "https://api.github.com/users/bzEq/repos", "events_url": "https://api.github.com/users/bzEq/events{/privacy}", "received_events_url": "https://api.github.com/users/bzEq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bzEq", "id": 3006405, "node_id": "MDQ6VXNlcjMwMDY0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/3006405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bzEq", "html_url": "https://github.com/bzEq", "followers_url": "https://api.github.com/users/bzEq/followers", "following_url": "https://api.github.com/users/bzEq/following{/other_user}", "gists_url": "https://api.github.com/users/bzEq/gists{/gist_id}", "starred_url": "https://api.github.com/users/bzEq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bzEq/subscriptions", "organizations_url": "https://api.github.com/users/bzEq/orgs", "repos_url": "https://api.github.com/users/bzEq/repos", "events_url": "https://api.github.com/users/bzEq/events{/privacy}", "received_events_url": "https://api.github.com/users/bzEq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34534152f5ad64d4d1fbc50ef475bc68cb7ac750", "url": "https://api.github.com/repos/rust-lang/rust/commits/34534152f5ad64d4d1fbc50ef475bc68cb7ac750", "html_url": "https://github.com/rust-lang/rust/commit/34534152f5ad64d4d1fbc50ef475bc68cb7ac750"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "1e71da95a30bbc8c4759d8994b9dc3127658e6bc", "filename": "library/std/src/personality/dwarf/eh.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/04a697502fbb3a69fe5dbeb0b3babf6f1e67711f/library%2Fstd%2Fsrc%2Fpersonality%2Fdwarf%2Feh.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04a697502fbb3a69fe5dbeb0b3babf6f1e67711f/library%2Fstd%2Fsrc%2Fpersonality%2Fdwarf%2Feh.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpersonality%2Fdwarf%2Feh.rs?ref=04a697502fbb3a69fe5dbeb0b3babf6f1e67711f", "patch": "@@ -121,13 +121,21 @@ pub unsafe fn find_eh_action(lsda: *const u8, context: &EHContext<'_>) -> Result\n         let mut idx = ip;\n         loop {\n             let cs_lpad = reader.read_uleb128();\n-            let cs_action = reader.read_uleb128();\n+            let cs_action_entry = reader.read_uleb128();\n             idx -= 1;\n             if idx == 0 {\n                 // Can never have null landing pad for sjlj -- that would have\n                 // been indicated by a -1 call site index.\n                 let lpad = (cs_lpad + 1) as usize;\n-                return Ok(interpret_cs_action(cs_action, lpad));\n+                if cs_action_entry == 0 {\n+                    return Ok(interpret_cs_action(0, lpad));\n+                } else {\n+                    let action_record =\n+                        (action_table as *mut u8).offset(cs_action_entry as isize - 1);\n+                    let mut action_reader = DwarfReader::new(action_record);\n+                    let ttype_index = action_reader.read_sleb128();\n+                    return Ok(interpret_cs_action(ttype_index as u64, lpad));\n+                }\n             }\n         }\n     }"}]}