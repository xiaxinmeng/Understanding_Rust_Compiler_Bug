{"sha": "dbd9abd74d1ca8329f483c30ba04526d8c45a5ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZDlhYmQ3NGQxY2E4MzI5ZjQ4M2MzMGJhMDQ1MjZkOGM0NWE1YWM=", "commit": {"author": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2018-11-15T14:17:49Z"}, "committer": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2018-11-15T14:17:49Z"}, "message": "update closure arg suggesstion ui test", "tree": {"sha": "1307e4fd8e80b5ae82257f1390d5b403da91dee1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1307e4fd8e80b5ae82257f1390d5b403da91dee1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbd9abd74d1ca8329f483c30ba04526d8c45a5ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbd9abd74d1ca8329f483c30ba04526d8c45a5ac", "html_url": "https://github.com/rust-lang/rust/commit/dbd9abd74d1ca8329f483c30ba04526d8c45a5ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbd9abd74d1ca8329f483c30ba04526d8c45a5ac/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "052bdff8fbaef9b3c32eec842fc9c03877651cf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/052bdff8fbaef9b3c32eec842fc9c03877651cf5", "html_url": "https://github.com/rust-lang/rust/commit/052bdff8fbaef9b3c32eec842fc9c03877651cf5"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "89977aadf88f0726e2c9a6902091736c63cb3f2c", "filename": "src/test/ui/mismatched_types/closure-arg-count.stderr", "status": "modified", "additions": 28, "deletions": 10, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/dbd9abd74d1ca8329f483c30ba04526d8c45a5ac/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-count.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dbd9abd74d1ca8329f483c30ba04526d8c45a5ac/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-count.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-count.stderr?ref=dbd9abd74d1ca8329f483c30ba04526d8c45a5ac", "patch": "@@ -60,8 +60,26 @@ help: consider changing the closure to take and ignore the expected argument\n LL |     f(|_| panic!());\n    |       ^^^\n \n+error[E0593]: closure is expected to take 1 argument, but it takes 0 arguments\n+  --> $DIR/closure-arg-count.rs:25:5\n+   |\n+LL |     f(move || panic!());\n+   |     ^ ------- takes 0 arguments\n+   |     |\n+   |     expected closure that takes 1 argument\n+   |\n+note: required by `f`\n+  --> $DIR/closure-arg-count.rs:13:1\n+   |\n+LL | fn f<F: Fn<usize>>(_: F) {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^\n+help: consider changing the closure to take and ignore the expected argument\n+   |\n+LL |     f(move|_| panic!());\n+   |           ^^^\n+\n error[E0593]: closure is expected to take a single 2-tuple as argument, but it takes 2 distinct arguments\n-  --> $DIR/closure-arg-count.rs:26:53\n+  --> $DIR/closure-arg-count.rs:28:53\n    |\n LL |     let _it = vec![1, 2, 3].into_iter().enumerate().map(|i, x| i);\n    |                                                     ^^^ ------ takes 2 distinct arguments\n@@ -73,7 +91,7 @@ LL |     let _it = vec![1, 2, 3].into_iter().enumerate().map(|(i, x)| i);\n    |                                                         ^^^^^^^^\n \n error[E0593]: closure is expected to take a single 2-tuple as argument, but it takes 2 distinct arguments\n-  --> $DIR/closure-arg-count.rs:28:53\n+  --> $DIR/closure-arg-count.rs:30:53\n    |\n LL |     let _it = vec![1, 2, 3].into_iter().enumerate().map(|i: usize, x| i);\n    |                                                     ^^^ ------------- takes 2 distinct arguments\n@@ -85,15 +103,15 @@ LL |     let _it = vec![1, 2, 3].into_iter().enumerate().map(|(i, x)| i);\n    |                                                         ^^^^^^^^\n \n error[E0593]: closure is expected to take a single 2-tuple as argument, but it takes 3 distinct arguments\n-  --> $DIR/closure-arg-count.rs:30:53\n+  --> $DIR/closure-arg-count.rs:32:53\n    |\n LL |     let _it = vec![1, 2, 3].into_iter().enumerate().map(|i, x, y| i);\n    |                                                     ^^^ --------- takes 3 distinct arguments\n    |                                                     |\n    |                                                     expected closure that takes a single 2-tuple as argument\n \n error[E0593]: function is expected to take a single 2-tuple as argument, but it takes 0 arguments\n-  --> $DIR/closure-arg-count.rs:32:53\n+  --> $DIR/closure-arg-count.rs:34:53\n    |\n LL |     let _it = vec![1, 2, 3].into_iter().enumerate().map(foo);\n    |                                                     ^^^ expected function that takes a single 2-tuple as argument\n@@ -102,15 +120,15 @@ LL | fn foo() {}\n    | -------- takes 0 arguments\n \n error[E0593]: closure is expected to take a single 2-tuple as argument, but it takes 3 distinct arguments\n-  --> $DIR/closure-arg-count.rs:35:53\n+  --> $DIR/closure-arg-count.rs:37:53\n    |\n LL |     let bar = |i, x, y| i;\n    |               --------- takes 3 distinct arguments\n LL |     let _it = vec![1, 2, 3].into_iter().enumerate().map(bar);\n    |                                                     ^^^ expected closure that takes a single 2-tuple as argument\n \n error[E0593]: function is expected to take a single 2-tuple as argument, but it takes 2 distinct arguments\n-  --> $DIR/closure-arg-count.rs:37:53\n+  --> $DIR/closure-arg-count.rs:39:53\n    |\n LL |     let _it = vec![1, 2, 3].into_iter().enumerate().map(qux);\n    |                                                     ^^^ expected function that takes a single 2-tuple as argument\n@@ -119,13 +137,13 @@ LL | fn qux(x: usize, y: usize) {}\n    | -------------------------- takes 2 distinct arguments\n \n error[E0593]: function is expected to take 1 argument, but it takes 2 arguments\n-  --> $DIR/closure-arg-count.rs:40:41\n+  --> $DIR/closure-arg-count.rs:42:41\n    |\n LL |     let _it = vec![1, 2, 3].into_iter().map(usize::checked_add);\n    |                                         ^^^ expected function that takes 1 argument\n \n error[E0593]: function is expected to take 0 arguments, but it takes 1 argument\n-  --> $DIR/closure-arg-count.rs:43:5\n+  --> $DIR/closure-arg-count.rs:45:5\n    |\n LL |     call(Foo);\n    |     ^^^^ expected function that takes 0 arguments\n@@ -134,11 +152,11 @@ LL | struct Foo(u8);\n    | --------------- takes 1 argument\n    |\n note: required by `call`\n-  --> $DIR/closure-arg-count.rs:50:1\n+  --> $DIR/closure-arg-count.rs:52:1\n    |\n LL | fn call<F, R>(_: F) where F: FnOnce() -> R {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 13 previous errors\n+error: aborting due to 14 previous errors\n \n For more information about this error, try `rustc --explain E0593`."}]}