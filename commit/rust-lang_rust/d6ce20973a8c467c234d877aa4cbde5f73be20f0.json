{"sha": "d6ce20973a8c467c234d877aa4cbde5f73be20f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2Y2UyMDk3M2E4YzQ2N2MyMzRkODc3YWE0Y2JkZTVmNzNiZTIwZjA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-26T02:51:46Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-26T05:04:53Z"}, "message": "rustdoc: Apply general string ops to enum docs", "tree": {"sha": "c19c78baf3213f67c756709e93047139fdc90fac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c19c78baf3213f67c756709e93047139fdc90fac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6ce20973a8c467c234d877aa4cbde5f73be20f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6ce20973a8c467c234d877aa4cbde5f73be20f0", "html_url": "https://github.com/rust-lang/rust/commit/d6ce20973a8c467c234d877aa4cbde5f73be20f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6ce20973a8c467c234d877aa4cbde5f73be20f0/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53c6454de58dd3b7aeb2ad2c390872004cafff2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/53c6454de58dd3b7aeb2ad2c390872004cafff2c", "html_url": "https://github.com/rust-lang/rust/commit/53c6454de58dd3b7aeb2ad2c390872004cafff2c"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "1bd948c77a0278aa374481b87c84cf00efb46b4c", "filename": "src/rustdoc/desc_pass.rs", "status": "modified", "additions": 46, "deletions": 1, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/d6ce20973a8c467c234d877aa4cbde5f73be20f0/src%2Frustdoc%2Fdesc_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6ce20973a8c467c234d877aa4cbde5f73be20f0/src%2Frustdoc%2Fdesc_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fdesc_pass.rs?ref=d6ce20973a8c467c234d877aa4cbde5f73be20f0", "patch": "@@ -18,7 +18,8 @@ fn run(\n     let fold = fold::fold({\n         fold_mod: fold_mod,\n         fold_const: fold_const,\n-        fold_fn: fold_fn\n+        fold_fn: fold_fn,\n+        fold_enum: fold_enum\n         with *fold::default_seq_fold(op)\n     });\n     fold.fold_crate(fold, doc)\n@@ -68,3 +69,47 @@ fn fold_fn(fold: fold::fold<op>, doc: doc::fndoc) -> doc::fndoc {\n         with *doc\n     }\n }\n+\n+fn fold_enum(fold: fold::fold<op>, doc: doc::enumdoc) -> doc::enumdoc {\n+    ~{\n+        brief: maybe_apply_op(fold.ctxt, doc.brief),\n+        desc: maybe_apply_op(fold.ctxt, doc.desc),\n+        variants: vec::map(doc.variants) {|variant|\n+            ~{\n+                desc: maybe_apply_op(fold.ctxt, variant.desc)\n+                with *variant\n+            }\n+        }\n+        with *doc\n+    }\n+}\n+\n+#[test]\n+fn should_execute_op_on_enum_brief() {\n+    let source = \"#[doc(brief = \\\" a \\\")] enum a { b }\";\n+    let srv = astsrv::mk_srv_from_str(source);\n+    let doc = extract::from_srv(srv, \"\");\n+    let doc = attr_pass::mk_pass()(srv, doc);\n+    let doc = mk_pass(str::trim)(srv, doc);\n+    assert doc.topmod.enums[0].brief == some(\"a\");\n+}\n+\n+#[test]\n+fn should_execute_op_on_enum_desc() {\n+    let source = \"#[doc(desc = \\\" a \\\")] enum a { b }\";\n+    let srv = astsrv::mk_srv_from_str(source);\n+    let doc = extract::from_srv(srv, \"\");\n+    let doc = attr_pass::mk_pass()(srv, doc);\n+    let doc = mk_pass(str::trim)(srv, doc);\n+    assert doc.topmod.enums[0].desc == some(\"a\");\n+}\n+\n+#[test]\n+fn should_execute_op_on_variant_desc() {\n+    let source = \"enum a { #[doc = \\\" a \\\"] b }\";\n+    let srv = astsrv::mk_srv_from_str(source);\n+    let doc = extract::from_srv(srv, \"\");\n+    let doc = attr_pass::mk_pass()(srv, doc);\n+    let doc = mk_pass(str::trim)(srv, doc);\n+    assert doc.topmod.enums[0].variants[0].desc == some(\"a\");\n+}\n\\ No newline at end of file"}]}