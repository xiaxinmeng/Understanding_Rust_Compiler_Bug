{"sha": "741b9a4fa7fcfae4176ff090094bb53786725606", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0MWI5YTRmYTdmY2ZhZTQxNzZmZjA5MDA5NGJiNTM3ODY3MjU2MDY=", "commit": {"author": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2021-04-02T21:25:16Z"}, "committer": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2021-05-26T22:07:10Z"}, "message": "Bless test output", "tree": {"sha": "bce45536c6b2eb53a4e4ffa48f15073d01929825", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bce45536c6b2eb53a4e4ffa48f15073d01929825"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/741b9a4fa7fcfae4176ff090094bb53786725606", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQTgxeqBxcDGar1sVhy4DhnkZitapAUCYK7GjgAKCRC4DhnkZita\npOgoAP4zj4Xe9eoy+oXuwuqw9sc6Hr97jrEp5RAqxbW0C0tvGQD/a1WppDfWMr97\n+xyzEeDgb3JKmbpc9C+VOIENKRX03Q4=\n=3pBD\n-----END PGP SIGNATURE-----", "payload": "tree bce45536c6b2eb53a4e4ffa48f15073d01929825\nparent 35ce36812a6f19022f646082915a46284ed0734f\nauthor Jacob Pratt <jacob@jhpratt.dev> 1617398716 -0400\ncommitter Jacob Pratt <jacob@jhpratt.dev> 1622066830 -0400\n\nBless test output\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/741b9a4fa7fcfae4176ff090094bb53786725606", "html_url": "https://github.com/rust-lang/rust/commit/741b9a4fa7fcfae4176ff090094bb53786725606", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/741b9a4fa7fcfae4176ff090094bb53786725606/comments", "author": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35ce36812a6f19022f646082915a46284ed0734f", "url": "https://api.github.com/repos/rust-lang/rust/commits/35ce36812a6f19022f646082915a46284ed0734f", "html_url": "https://github.com/rust-lang/rust/commit/35ce36812a6f19022f646082915a46284ed0734f"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "80024124dc523d4c535fff3e14945b4b62af2067", "filename": "src/test/mir-opt/remove_storage_markers.main.RemoveStorageMarkers.diff", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/741b9a4fa7fcfae4176ff090094bb53786725606/src%2Ftest%2Fmir-opt%2Fremove_storage_markers.main.RemoveStorageMarkers.diff", "raw_url": "https://github.com/rust-lang/rust/raw/741b9a4fa7fcfae4176ff090094bb53786725606/src%2Ftest%2Fmir-opt%2Fremove_storage_markers.main.RemoveStorageMarkers.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_storage_markers.main.RemoveStorageMarkers.diff?ref=741b9a4fa7fcfae4176ff090094bb53786725606", "patch": "@@ -32,6 +32,10 @@\n                   scope 5 {\n                       debug i => _15;      // in scope 5 at $DIR/remove_storage_markers.rs:8:9: 8:10\n                   }\n+                  scope 7 (inlined iter::range::<impl Iterator for std::ops::Range<i32>>::next) { // at $DIR/remove_storage_markers.rs:8:14: 8:19\n+                      debug self => _9;    // in scope 7 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+                      let mut _18: &mut std::ops::Range<i32>; // in scope 7 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+                  }\n               }\n           }\n           scope 6 (inlined <std::ops::Range<i32> as IntoIterator>::into_iter) { // at $DIR/remove_storage_markers.rs:8:14: 8:19\n@@ -61,19 +65,15 @@\n -         StorageLive(_10);                // scope 3 at $DIR/remove_storage_markers.rs:8:14: 8:19\n           _10 = &mut _4;                   // scope 3 at $DIR/remove_storage_markers.rs:8:14: 8:19\n           _9 = &mut (*_10);                // scope 3 at $DIR/remove_storage_markers.rs:8:14: 8:19\n-          _8 = <std::ops::Range<i32> as Iterator>::next(move _9) -> bb2; // scope 3 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+-         StorageLive(_18);                // scope 7 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+          _18 = &mut (*_9);                // scope 7 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+          _8 = <std::ops::Range<i32> as iter::range::RangeIteratorImpl>::spec_next(move _18) -> bb4; // scope 7 at $DIR/remove_storage_markers.rs:8:14: 8:19\n                                            // mir::Constant\n                                            // + span: $DIR/remove_storage_markers.rs:8:14: 8:19\n-                                           // + literal: Const { ty: for<'r> fn(&'r mut std::ops::Range<i32>) -> std::option::Option<<std::ops::Range<i32> as std::iter::Iterator>::Item> {<std::ops::Range<i32> as std::iter::Iterator>::next}, val: Value(Scalar(<ZST>)) }\n+                                           // + literal: Const { ty: for<'r> fn(&'r mut std::ops::Range<i32>) -> std::option::Option<<std::ops::Range<i32> as std::iter::range::RangeIteratorImpl>::Item> {<std::ops::Range<i32> as std::iter::range::RangeIteratorImpl>::spec_next}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb2: {\n--         StorageDead(_9);                 // scope 3 at $DIR/remove_storage_markers.rs:8:18: 8:19\n-          _11 = discriminant(_8);          // scope 3 at $DIR/remove_storage_markers.rs:8:9: 8:10\n-          switchInt(move _11) -> [0_isize: bb3, otherwise: bb4]; // scope 3 at $DIR/remove_storage_markers.rs:8:9: 8:10\n-      }\n-  \n-      bb3: {\n           _0 = const ();                   // scope 3 at $DIR/remove_storage_markers.rs:8:5: 10:6\n -         StorageDead(_10);                // scope 3 at $DIR/remove_storage_markers.rs:8:18: 8:19\n -         StorageDead(_8);                 // scope 3 at $DIR/remove_storage_markers.rs:8:18: 8:19\n@@ -85,7 +85,7 @@\n           return;                          // scope 0 at $DIR/remove_storage_markers.rs:11:2: 11:2\n       }\n   \n-      bb4: {\n+      bb3: {\n -         StorageLive(_12);                // scope 3 at $DIR/remove_storage_markers.rs:8:9: 8:10\n           _12 = ((_8 as Some).0: i32);     // scope 3 at $DIR/remove_storage_markers.rs:8:9: 8:10\n -         StorageLive(_13);                // scope 4 at $DIR/remove_storage_markers.rs:8:9: 8:10\n@@ -111,5 +111,12 @@\n -         StorageDead(_6);                 // scope 2 at $DIR/remove_storage_markers.rs:10:5: 10:6\n           goto -> bb1;                     // scope 2 at $DIR/remove_storage_markers.rs:8:5: 10:6\n       }\n+  \n+      bb4: {\n+-         StorageDead(_18);                // scope 7 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+-         StorageDead(_9);                 // scope 3 at $DIR/remove_storage_markers.rs:8:18: 8:19\n+          _11 = discriminant(_8);          // scope 3 at $DIR/remove_storage_markers.rs:8:9: 8:10\n+          switchInt(move _11) -> [0_isize: bb2, otherwise: bb3]; // scope 3 at $DIR/remove_storage_markers.rs:8:9: 8:10\n+      }\n   }\n   "}]}