{"sha": "bfb8f73fb3f8a1a7fadfa31bda98a17549a91093", "node_id": "C_kwDOAAsO6NoAKGJmYjhmNzNmYjNmOGExYTdmYWRmYTMxYmRhOThhMTc1NDlhOTEwOTM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-10-14T20:10:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-14T20:10:59Z"}, "message": "Merge #10545\n\n10545: A few clippy fixes r=Veykril a=Milo123459\n\nA few clippy fixes\n\nCo-authored-by: Milo <50248166+Milo123459@users.noreply.github.com>", "tree": {"sha": "890d7b7721c2f446de7e82b6bcf64b4f7c35a444", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/890d7b7721c2f446de7e82b6bcf64b4f7c35a444"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfb8f73fb3f8a1a7fadfa31bda98a17549a91093", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhaI7TCRBK7hj4Ov3rIwAAeQ8IAEDjTYFDGm19lJ8vwmvtD3VO\n+Qa7GtWz3w7j5buWT+dMcoRTNAn1/GN7u5dRP4548defZZFoZvMMQzmVtITUjOze\niUlm2vIZQE2hk27J/P0zV8I8XUn7kHq1ufgy1jJ9wPA/D+tPt8Skg4jRCGmBEoCD\nBbymm2XLfEELcUq5NnuZO5xlAqulLmXGHlpBMvZnSRc3rRgpa2lnHp9rVsvg6yT9\nVzDN795W3n2Hi30pa5uUtYPkvb073eaBzlipvz0YRFGN/5z25Qq6zKA9aDAgEOgM\nvY0p72ELKsuC86I13XbWw2PK+R1rjKzsb/x14ceFawaO+15w/myFx3MdZ3UXduI=\n=M5Db\n-----END PGP SIGNATURE-----\n", "payload": "tree 890d7b7721c2f446de7e82b6bcf64b4f7c35a444\nparent 0af9d1fc8aaf07bdcd7ab1e7ccad757b69e5c76f\nparent 35de195c418a1c076d13bc4c969d0368a64527d2\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1634242259 +0000\ncommitter GitHub <noreply@github.com> 1634242259 +0000\n\nMerge #10545\n\n10545: A few clippy fixes r=Veykril a=Milo123459\n\nA few clippy fixes\n\nCo-authored-by: Milo <50248166+Milo123459@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfb8f73fb3f8a1a7fadfa31bda98a17549a91093", "html_url": "https://github.com/rust-lang/rust/commit/bfb8f73fb3f8a1a7fadfa31bda98a17549a91093", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfb8f73fb3f8a1a7fadfa31bda98a17549a91093/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0af9d1fc8aaf07bdcd7ab1e7ccad757b69e5c76f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0af9d1fc8aaf07bdcd7ab1e7ccad757b69e5c76f", "html_url": "https://github.com/rust-lang/rust/commit/0af9d1fc8aaf07bdcd7ab1e7ccad757b69e5c76f"}, {"sha": "35de195c418a1c076d13bc4c969d0368a64527d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/35de195c418a1c076d13bc4c969d0368a64527d2", "html_url": "https://github.com/rust-lang/rust/commit/35de195c418a1c076d13bc4c969d0368a64527d2"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "417ba6091972edb77f479a3c0d0c3a583de521c1", "filename": "crates/cfg/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bfb8f73fb3f8a1a7fadfa31bda98a17549a91093/crates%2Fcfg%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfb8f73fb3f8a1a7fadfa31bda98a17549a91093/crates%2Fcfg%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcfg%2Fsrc%2Flib.rs?ref=bfb8f73fb3f8a1a7fadfa31bda98a17549a91093", "patch": "@@ -113,6 +113,10 @@ impl CfgDiff {\n     pub fn len(&self) -> usize {\n         self.enable.len() + self.disable.len()\n     }\n+\n+    pub fn is_empty(&self) -> bool {\n+        self.len() == 0\n+    }\n }\n \n impl fmt::Display for CfgDiff {"}, {"sha": "1641f744cd396b7239eac2cc13963a060db6d6d0", "filename": "crates/flycheck/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bfb8f73fb3f8a1a7fadfa31bda98a17549a91093/crates%2Fflycheck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfb8f73fb3f8a1a7fadfa31bda98a17549a91093/crates%2Fflycheck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fflycheck%2Fsrc%2Flib.rs?ref=bfb8f73fb3f8a1a7fadfa31bda98a17549a91093", "patch": "@@ -297,7 +297,7 @@ impl CargoActor {\n                 read_at_least_one_message = true;\n \n                 // Try to deserialize a message from Cargo or Rustc.\n-                let mut deserializer = serde_json::Deserializer::from_str(&line);\n+                let mut deserializer = serde_json::Deserializer::from_str(line);\n                 deserializer.disable_recursion_limit();\n                 if let Ok(message) = JsonMessage::deserialize(&mut deserializer) {\n                     match message {"}, {"sha": "2c5a24b1d2e8788786b377ac63e16f60cc839f34", "filename": "crates/ide/src/goto_declaration.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bfb8f73fb3f8a1a7fadfa31bda98a17549a91093/crates%2Fide%2Fsrc%2Fgoto_declaration.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfb8f73fb3f8a1a7fadfa31bda98a17549a91093/crates%2Fide%2Fsrc%2Fgoto_declaration.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_declaration.rs?ref=bfb8f73fb3f8a1a7fadfa31bda98a17549a91093", "patch": "@@ -57,7 +57,7 @@ mod tests {\n             .unwrap()\n             .expect(\"no declaration or definition found\")\n             .info;\n-        if navs.len() == 0 {\n+        if navs.is_empty() {\n             panic!(\"unresolved reference\")\n         }\n "}, {"sha": "47c0f00c00f5930cbef51b38601a16eaf2d70aa6", "filename": "crates/ide/src/syntax_highlighting/highlight.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bfb8f73fb3f8a1a7fadfa31bda98a17549a91093/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfb8f73fb3f8a1a7fadfa31bda98a17549a91093/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs?ref=bfb8f73fb3f8a1a7fadfa31bda98a17549a91093", "patch": "@@ -741,7 +741,7 @@ fn parents_match(mut node: NodeOrToken<SyntaxNode, SyntaxToken>, mut kinds: &[Sy\n     }\n \n     // Only true if we matched all expected kinds\n-    kinds.len() == 0\n+    kinds.is_empty()\n }\n \n #[inline]"}, {"sha": "f977d23c4809073f3a9e5def5f499ce3e290ef54", "filename": "crates/syntax/test_data/parser/fuzz-failures/0000.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bfb8f73fb3f8a1a7fadfa31bda98a17549a91093/crates%2Fsyntax%2Ftest_data%2Fparser%2Ffuzz-failures%2F0000.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfb8f73fb3f8a1a7fadfa31bda98a17549a91093/crates%2Fsyntax%2Ftest_data%2Fparser%2Ffuzz-failures%2F0000.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Ffuzz-failures%2F0000.rs?ref=bfb8f73fb3f8a1a7fadfa31bda98a17549a91093", "patch": "@@ -101,7 +101,7 @@ pub /*(meh)*/ fn replace_range(mut text: String, range: TextRange, replace_with:\n }\n \n fn is_balanced(tokens: &[Token]) -> bool {\n-    if tokens.len() == 0\n+    if tokens.is_empty()\n        || tokens.first().unwrap().kind != L_CURLY\n        || tokens.last().unwrap().kind != R_CURLY {\n         return false\n@@ -153,7 +153,7 @@ pub /*(meh)*/ fn replace_range(mut text: String, range: TextRange, replace_with:\n }\n \n fn is_balanced(tokens: &[Token]) -> bool {\n-    if tokens.len() == 0\n+    if tokens.is_empty()\n        || tokens.first().unwrap().kind != L_CURLY\n        || tokens.last().unwrap().kind != R_CURLY {\n         return false"}]}