{"sha": "d0e926fcfd6ca41eafd6e15900bc1004dfc81d6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwZTkyNmZjZmQ2Y2E0MWVhZmQ2ZTE1OTAwYmMxMDA0ZGZjODFkNmM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-25T15:15:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-25T15:15:29Z"}, "message": "Rollup merge of #61814 - varkor:uninhabited-const-61744, r=oli-obk\n\nFix an ICE with uninhabited consts\n\nFixes https://github.com/rust-lang/rust/issues/61744.\n\nr? @oli-obk", "tree": {"sha": "b8059a583dd38852abc7d667edbc01c3fa506858", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8059a583dd38852abc7d667edbc01c3fa506858"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0e926fcfd6ca41eafd6e15900bc1004dfc81d6c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdEjqRCRBK7hj4Ov3rIwAAdHIIAK6DX38rTWAsM3B4vXdE9Gm3\nC1nHwS6oOACzkjyJJAJ2Jbd6iL+cAiT5S/f6OZ6FxVpoQZ58UFFsCkbthG0vaX7W\nHDKWaZGwyYnlGRamEnhPUC4cHBNqsyA2lKHUTj04murUOh0f5tJWwDaQaHzqFSmj\nHdKJDPpRNW7s1B4vHguhPjauWt7MJjhN2pZSPCwC9uZwWr4iozSG5BI0Zm/eL9T4\nBpfD+P3NrCRbsFPd3C9ZMHM1ZvMcI+joYdjq4dsRQNzBCulfceWU2kfv8QesvWW9\nJh8VEACiCjQNSY8SditE2HC80ALpm+fThYSBXHx1e6qOxQ/YvrwuXRlQ2UxYVAY=\n=T5Zp\n-----END PGP SIGNATURE-----\n", "payload": "tree b8059a583dd38852abc7d667edbc01c3fa506858\nparent 40ab9d2bd57a2203131abd723f7120e960299fae\nparent b7a0e401759505f39a07e9cb9421aa695b4856e9\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1561475729 +0200\ncommitter GitHub <noreply@github.com> 1561475729 +0200\n\nRollup merge of #61814 - varkor:uninhabited-const-61744, r=oli-obk\n\nFix an ICE with uninhabited consts\n\nFixes https://github.com/rust-lang/rust/issues/61744.\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0e926fcfd6ca41eafd6e15900bc1004dfc81d6c", "html_url": "https://github.com/rust-lang/rust/commit/d0e926fcfd6ca41eafd6e15900bc1004dfc81d6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0e926fcfd6ca41eafd6e15900bc1004dfc81d6c/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40ab9d2bd57a2203131abd723f7120e960299fae", "url": "https://api.github.com/repos/rust-lang/rust/commits/40ab9d2bd57a2203131abd723f7120e960299fae", "html_url": "https://github.com/rust-lang/rust/commit/40ab9d2bd57a2203131abd723f7120e960299fae"}, {"sha": "b7a0e401759505f39a07e9cb9421aa695b4856e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7a0e401759505f39a07e9cb9421aa695b4856e9", "html_url": "https://github.com/rust-lang/rust/commit/b7a0e401759505f39a07e9cb9421aa695b4856e9"}], "stats": {"total": 55, "additions": 48, "deletions": 7}, "files": [{"sha": "0d96e5ea625da9437b200d81a7fd6690814135a3", "filename": "src/librustc/ty/inhabitedness/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0e926fcfd6ca41eafd6e15900bc1004dfc81d6c/src%2Flibrustc%2Fty%2Finhabitedness%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0e926fcfd6ca41eafd6e15900bc1004dfc81d6c/src%2Flibrustc%2Fty%2Finhabitedness%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finhabitedness%2Fmod.rs?ref=d0e926fcfd6ca41eafd6e15900bc1004dfc81d6c", "patch": "@@ -97,7 +97,7 @@ impl<'tcx> TyCtxt<'tcx> {\n         self.ty_inhabitedness_forest(ty).contains(self, module)\n     }\n \n-    pub fn is_ty_uninhabited_from_all_modules(self, ty: Ty<'tcx>) -> bool {\n+    pub fn is_ty_uninhabited_from_any_module(self, ty: Ty<'tcx>) -> bool {\n         !self.ty_inhabitedness_forest(ty).is_empty()\n     }\n "}, {"sha": "a29611e4814f136a327c3516bdcdae1408aed080", "filename": "src/librustc_mir/interpret/terminator.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d0e926fcfd6ca41eafd6e15900bc1004dfc81d6c/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0e926fcfd6ca41eafd6e15900bc1004dfc81d6c/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs?ref=d0e926fcfd6ca41eafd6e15900bc1004dfc81d6c", "patch": "@@ -388,12 +388,10 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpretCx<'mir, 'tcx, M> {\n                             ));\n                         }\n                     } else {\n-                        let callee_layout =\n-                            self.layout_of_local(self.frame(), mir::RETURN_PLACE, None)?;\n-                        if !callee_layout.abi.is_uninhabited() {\n-                            return err!(FunctionRetMismatch(\n-                                self.tcx.types.never, callee_layout.ty\n-                            ));\n+                        let local = mir::RETURN_PLACE;\n+                        let ty = self.frame().body.local_decls[local].ty;\n+                        if !self.tcx.is_ty_uninhabited_from_any_module(ty) {\n+                            return err!(FunctionRetMismatch(self.tcx.types.never, ty));\n                         }\n                     }\n                     Ok(())"}, {"sha": "21fbbf8cfb5a8d6c8f6654be893d1f9284127bd7", "filename": "src/test/ui/consts/uninhabited-const-issue-61744.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d0e926fcfd6ca41eafd6e15900bc1004dfc81d6c/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0e926fcfd6ca41eafd6e15900bc1004dfc81d6c/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.rs?ref=d0e926fcfd6ca41eafd6e15900bc1004dfc81d6c", "patch": "@@ -0,0 +1,19 @@\n+// compile-fail\n+\n+pub const unsafe fn fake_type<T>() -> T {\n+    hint_unreachable()\n+}\n+\n+pub const unsafe fn hint_unreachable() -> ! {\n+    fake_type() //~ ERROR any use of this value will cause an error\n+}\n+\n+trait Const {\n+    const CONSTANT: i32 = unsafe { fake_type() };\n+}\n+\n+impl <T> Const for T {}\n+\n+pub fn main() -> () {\n+    dbg!(i32::CONSTANT); //~ ERROR erroneous constant used\n+}"}, {"sha": "5c2855437118f5c127861569097735f4dd0cb3fe", "filename": "src/test/ui/consts/uninhabited-const-issue-61744.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d0e926fcfd6ca41eafd6e15900bc1004dfc81d6c/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d0e926fcfd6ca41eafd6e15900bc1004dfc81d6c/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.stderr?ref=d0e926fcfd6ca41eafd6e15900bc1004dfc81d6c", "patch": "@@ -0,0 +1,24 @@\n+error: any use of this value will cause an error\n+  --> $DIR/uninhabited-const-issue-61744.rs:8:5\n+   |\n+LL |     fake_type()\n+   |     ^^^^^^^^^^^\n+   |     |\n+   |     tried to call a function with return type T passing return place of type !\n+   |     inside call to `hint_unreachable` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside call to `fake_type::<i32>` at $DIR/uninhabited-const-issue-61744.rs:12:36\n+...\n+LL |     const CONSTANT: i32 = unsafe { fake_type() };\n+   |     ---------------------------------------------\n+   |\n+   = note: #[deny(const_err)] on by default\n+\n+error[E0080]: erroneous constant used\n+  --> $DIR/uninhabited-const-issue-61744.rs:18:10\n+   |\n+LL |     dbg!(i32::CONSTANT);\n+   |          ^^^^^^^^^^^^^ referenced constant has errors\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0080`."}]}