{"sha": "2b83defa4a48303db642f38e2a9f24460756721d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiODNkZWZhNGE0ODMwM2RiNjQyZjM4ZTJhOWYyNDQ2MDc1NjcyMWQ=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2013-03-22T19:33:53Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2013-03-23T10:54:13Z"}, "message": "core: derive Clone for core types", "tree": {"sha": "53d29a92878f41b83cbf90e18b9c71ce3f59fa94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53d29a92878f41b83cbf90e18b9c71ce3f59fa94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b83defa4a48303db642f38e2a9f24460756721d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b83defa4a48303db642f38e2a9f24460756721d", "html_url": "https://github.com/rust-lang/rust/commit/2b83defa4a48303db642f38e2a9f24460756721d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b83defa4a48303db642f38e2a9f24460756721d/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28efc234f49f6c8718465108a16f1db8b0113cfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/28efc234f49f6c8718465108a16f1db8b0113cfb", "html_url": "https://github.com/rust-lang/rust/commit/28efc234f49f6c8718465108a16f1db8b0113cfb"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "c97df636386c036fa2625f05c131d599b6c6b136", "filename": "src/libcore/core.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2b83defa4a48303db642f38e2a9f24460756721d/src%2Flibcore%2Fcore.rc", "raw_url": "https://github.com/rust-lang/rust/raw/2b83defa4a48303db642f38e2a9f24460756721d/src%2Flibcore%2Fcore.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcore.rc?ref=2b83defa4a48303db642f38e2a9f24460756721d", "patch": "@@ -231,6 +231,7 @@ pub mod rt;\n // can be resolved within libcore.\n #[doc(hidden)]\n pub mod core {\n+    pub use clone;\n     pub use cmp;\n     pub use condition;\n     pub use option;"}, {"sha": "2af9e91a30fce5970ec140d8abe210a30090e031", "filename": "src/libcore/either.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b83defa4a48303db642f38e2a9f24460756721d/src%2Flibcore%2Feither.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b83defa4a48303db642f38e2a9f24460756721d/src%2Flibcore%2Feither.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Feither.rs?ref=2b83defa4a48303db642f38e2a9f24460756721d", "patch": "@@ -17,7 +17,7 @@ use result;\n use vec;\n \n /// The either type\n-#[deriving(Eq)]\n+#[deriving(Clone, Eq)]\n pub enum Either<T, U> {\n     Left(T),\n     Right(U)"}, {"sha": "bb636636953b36db36ae053a9937cd021022c172", "filename": "src/libcore/option.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b83defa4a48303db642f38e2a9f24460756721d/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b83defa4a48303db642f38e2a9f24460756721d/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=2b83defa4a48303db642f38e2a9f24460756721d", "patch": "@@ -52,7 +52,7 @@ use iter::{BaseIter, MutableIter};\n #[cfg(test)] use str;\n \n /// The option type\n-#[deriving(Eq)]\n+#[deriving(Clone, Eq)]\n pub enum Option<T> {\n     None,\n     Some(T),"}, {"sha": "76aaf14d4ac6ce50a07b347cd10da4d587d339b3", "filename": "src/libcore/path.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2b83defa4a48303db642f38e2a9f24460756721d/src%2Flibcore%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b83defa4a48303db642f38e2a9f24460756721d/src%2Flibcore%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpath.rs?ref=2b83defa4a48303db642f38e2a9f24460756721d", "patch": "@@ -20,7 +20,7 @@ use option::{None, Option, Some};\n use str;\n use to_str::ToStr;\n \n-#[deriving(Eq)]\n+#[deriving(Clone, Eq)]\n pub struct WindowsPath {\n     host: Option<~str>,\n     device: Option<~str>,\n@@ -32,7 +32,7 @@ pub fn WindowsPath(s: &str) -> WindowsPath {\n     GenericPath::from_str(s)\n }\n \n-#[deriving(Eq)]\n+#[deriving(Clone, Eq)]\n pub struct PosixPath {\n     is_absolute: bool,\n     components: ~[~str],"}, {"sha": "0df9f78a3d6d77494a8ab2fb7b4b1b5f80dbfd9e", "filename": "src/libcore/result.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b83defa4a48303db642f38e2a9f24460756721d/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b83defa4a48303db642f38e2a9f24460756721d/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=2b83defa4a48303db642f38e2a9f24460756721d", "patch": "@@ -20,7 +20,7 @@ use option::{None, Option, Some};\n use vec;\n \n /// The result type\n-#[deriving(Eq)]\n+#[deriving(Clone, Eq)]\n pub enum Result<T, U> {\n     /// Contains the successful result value\n     Ok(T),"}]}