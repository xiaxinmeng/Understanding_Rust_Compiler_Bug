{"sha": "61d9c001465f14be10b519fbb3030f5cebe22199", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxZDljMDAxNDY1ZjE0YmUxMGI1MTlmYmIzMDMwZjVjZWJlMjIxOTk=", "commit": {"author": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2019-12-07T15:23:43Z"}, "committer": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2019-12-07T15:23:43Z"}, "message": "Explicitly refer to operator methods in Pin impls", "tree": {"sha": "3b6e412c1e985684ec687418d37041fb9ff0f297", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b6e412c1e985684ec687418d37041fb9ff0f297"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61d9c001465f14be10b519fbb3030f5cebe22199", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61d9c001465f14be10b519fbb3030f5cebe22199", "html_url": "https://github.com/rust-lang/rust/commit/61d9c001465f14be10b519fbb3030f5cebe22199", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61d9c001465f14be10b519fbb3030f5cebe22199/comments", "author": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6996ae1e79cf67a53115862c1273bfbec5790496", "url": "https://api.github.com/repos/rust-lang/rust/commits/6996ae1e79cf67a53115862c1273bfbec5790496", "html_url": "https://github.com/rust-lang/rust/commit/6996ae1e79cf67a53115862c1273bfbec5790496"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "6a0c5bbebc1c6cf1270be42fd7217858831a35bf", "filename": "src/libcore/pin.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/61d9c001465f14be10b519fbb3030f5cebe22199/src%2Flibcore%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61d9c001465f14be10b519fbb3030f5cebe22199/src%2Flibcore%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpin.rs?ref=61d9c001465f14be10b519fbb3030f5cebe22199", "patch": "@@ -415,11 +415,11 @@ where\n     P::Target: PartialEq<Q::Target>,\n {\n     fn eq(&self, other: &Pin<Q>) -> bool {\n-        **self == **other\n+        P::Target::eq(self, other)\n     }\n \n     fn ne(&self, other: &Pin<Q>) -> bool {\n-        **self != **other\n+        P::Target::ne(self, other)\n     }\n }\n \n@@ -432,37 +432,37 @@ where\n     P::Target: PartialOrd<Q::Target>,\n {\n     fn partial_cmp(&self, other: &Pin<Q>) -> Option<cmp::Ordering> {\n-        (**self).partial_cmp(other)\n+        P::Target::partial_cmp(self, other)\n     }\n \n     fn lt(&self, other: &Pin<Q>) -> bool {\n-        **self < **other\n+        P::Target::lt(self, other)\n     }\n \n     fn le(&self, other: &Pin<Q>) -> bool {\n-        **self <= **other\n+        P::Target::le(self, other)\n     }\n \n     fn gt(&self, other: &Pin<Q>) -> bool {\n-        **self > **other\n+        P::Target::gt(self, other)\n     }\n \n     fn ge(&self, other: &Pin<Q>) -> bool {\n-        **self >= **other\n+        P::Target::ge(self, other)\n     }\n }\n \n #[stable(feature = \"pin_trait_impls\", since = \"1.41.0\")]\n impl<P: Deref<Target: Ord>> Ord for Pin<P> {\n     fn cmp(&self, other: &Self) -> cmp::Ordering {\n-        (**self).cmp(other)\n+        P::Target::cmp(self, other)\n     }\n }\n \n #[stable(feature = \"pin_trait_impls\", since = \"1.41.0\")]\n impl<P: Deref<Target: Hash>> Hash for Pin<P> {\n     fn hash<H: Hasher>(&self, state: &mut H) {\n-        (**self).hash(state);\n+        P::Target::hash(self, state);\n     }\n }\n "}]}