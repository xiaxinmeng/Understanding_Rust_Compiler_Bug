{"sha": "f4de121951edc326f605c7e3109d98bbc7897a8e", "node_id": "C_kwDOAAsO6NoAKGY0ZGUxMjE5NTFlZGMzMjZmNjA1YzdlMzEwOWQ5OGJiYzc4OTdhOGU", "commit": {"author": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-02-14T14:31:18Z"}, "committer": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-02-15T12:31:38Z"}, "message": "Don't suggest `#[doc(hidden)]` methods", "tree": {"sha": "6967541e5421d10a729a7a4450d18997f2d056b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6967541e5421d10a729a7a4450d18997f2d056b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4de121951edc326f605c7e3109d98bbc7897a8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4de121951edc326f605c7e3109d98bbc7897a8e", "html_url": "https://github.com/rust-lang/rust/commit/f4de121951edc326f605c7e3109d98bbc7897a8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4de121951edc326f605c7e3109d98bbc7897a8e/comments", "author": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bb6e60d1f1360234aae90c97964c0fa5524f141", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bb6e60d1f1360234aae90c97964c0fa5524f141", "html_url": "https://github.com/rust-lang/rust/commit/9bb6e60d1f1360234aae90c97964c0fa5524f141"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "1cf3758c69da20317d2b2f1ae2b0d0e602a12fe3", "filename": "compiler/rustc_infer/src/infer/error_reporting/note_and_explain.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f4de121951edc326f605c7e3109d98bbc7897a8e/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnote_and_explain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4de121951edc326f605c7e3109d98bbc7897a8e/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnote_and_explain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnote_and_explain.rs?ref=f4de121951edc326f605c7e3109d98bbc7897a8e", "patch": "@@ -504,7 +504,9 @@ fn foo(&self) -> Self::T { String::new() }\n         let methods: Vec<(Span, String)> = items\n             .in_definition_order()\n             .filter(|item| {\n-                ty::AssocKind::Fn == item.kind && Some(item.name) != current_method_ident\n+                ty::AssocKind::Fn == item.kind\n+                    && Some(item.name) != current_method_ident\n+                    && !tcx.is_doc_hidden(item.def_id)\n             })\n             .filter_map(|item| {\n                 let method = tcx.fn_sig(item.def_id).subst_identity();"}, {"sha": "ae7ef47e1d4deaa24980d60beb99dcbf5ed38906", "filename": "tests/ui/suggestions/trait-hidden-method.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f4de121951edc326f605c7e3109d98bbc7897a8e/tests%2Fui%2Fsuggestions%2Ftrait-hidden-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4de121951edc326f605c7e3109d98bbc7897a8e/tests%2Fui%2Fsuggestions%2Ftrait-hidden-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Ftrait-hidden-method.rs?ref=f4de121951edc326f605c7e3109d98bbc7897a8e", "patch": "@@ -0,0 +1,11 @@\n+// #107983 - testing that `__iterator_get_unchecked` isn't suggested\n+// HELP included so that compiletest errors on the bad suggestion\n+pub fn i_can_has_iterator() -> impl Iterator<Item = u32> {\n+    //~^ ERROR expected `Box<dyn Iterator>`\n+    //~| HELP consider constraining the associated type\n+    Box::new(1..=10) as Box<dyn Iterator>\n+    //~^ ERROR the value of the associated type `Item`\n+    //~| HELP specify the associated type\n+}\n+\n+fn main() {}"}, {"sha": "a5a65d193db062691dd50c431df6667f96b4a39c", "filename": "tests/ui/suggestions/trait-hidden-method.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f4de121951edc326f605c7e3109d98bbc7897a8e/tests%2Fui%2Fsuggestions%2Ftrait-hidden-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f4de121951edc326f605c7e3109d98bbc7897a8e/tests%2Fui%2Fsuggestions%2Ftrait-hidden-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Ftrait-hidden-method.stderr?ref=f4de121951edc326f605c7e3109d98bbc7897a8e", "patch": "@@ -0,0 +1,24 @@\n+error[E0191]: the value of the associated type `Item` (from trait `Iterator`) must be specified\n+  --> $DIR/trait-hidden-method.rs:6:33\n+   |\n+LL |     Box::new(1..=10) as Box<dyn Iterator>\n+   |                                 ^^^^^^^^ help: specify the associated type: `Iterator<Item = Type>`\n+\n+error[E0271]: expected `Box<dyn Iterator>` to be an iterator that yields `u32`, but it yields `<dyn Iterator as Iterator>::Item`\n+  --> $DIR/trait-hidden-method.rs:3:32\n+   |\n+LL | pub fn i_can_has_iterator() -> impl Iterator<Item = u32> {\n+   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^ expected associated type, found `u32`\n+...\n+LL |     Box::new(1..=10) as Box<dyn Iterator>\n+   |     ------------------------------------- return type was inferred to be `Box<dyn Iterator>` here\n+   |\n+   = note: expected associated type `<dyn Iterator as Iterator>::Item`\n+                         found type `u32`\n+   = help: consider constraining the associated type `<dyn Iterator as Iterator>::Item` to `u32` or calling a method that returns `<dyn Iterator as Iterator>::Item`\n+   = note: for more information, visit https://doc.rust-lang.org/book/ch19-03-advanced-traits.html\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0191, E0271.\n+For more information about an error, try `rustc --explain E0191`."}]}