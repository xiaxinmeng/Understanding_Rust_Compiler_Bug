{"sha": "a9093a4dd80e617d50b26647ec2adcb727d2dd29", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5MDkzYTRkZDgwZTYxN2Q1MGIyNjY0N2VjMmFkY2I3MjdkMmRkMjk=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-07-26T19:20:47Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-08-04T12:54:36Z"}, "message": "Move share_generics getter onto options directly", "tree": {"sha": "e0eacc392922f831bd11a00c6d345bad50535dda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0eacc392922f831bd11a00c6d345bad50535dda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9093a4dd80e617d50b26647ec2adcb727d2dd29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9093a4dd80e617d50b26647ec2adcb727d2dd29", "html_url": "https://github.com/rust-lang/rust/commit/a9093a4dd80e617d50b26647ec2adcb727d2dd29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9093a4dd80e617d50b26647ec2adcb727d2dd29/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fcef251d3db36c334535d8f5d96b5b44f5eb75e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fcef251d3db36c334535d8f5d96b5b44f5eb75e", "html_url": "https://github.com/rust-lang/rust/commit/5fcef251d3db36c334535d8f5d96b5b44f5eb75e"}], "stats": {"total": 50, "additions": 25, "deletions": 25}, "files": [{"sha": "3111777f4ad5a212d4ba9fd1fbf468de09c99acd", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a9093a4dd80e617d50b26647ec2adcb727d2dd29/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9093a4dd80e617d50b26647ec2adcb727d2dd29/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=a9093a4dd80e617d50b26647ec2adcb727d2dd29", "patch": "@@ -653,6 +653,24 @@ impl Options {\n         !self.debugging_opts.parse_only && // The file is just being parsed\n             !self.debugging_opts.ls // The file is just being queried\n     }\n+\n+    #[inline]\n+    pub fn share_generics(&self) -> bool {\n+        match self.debugging_opts.share_generics {\n+            Some(setting) => setting,\n+            None => {\n+                self.incremental.is_some() ||\n+                match self.optimize {\n+                    OptLevel::No   |\n+                    OptLevel::Less |\n+                    OptLevel::Size |\n+                    OptLevel::SizeMin => true,\n+                    OptLevel::Default    |\n+                    OptLevel::Aggressive => false,\n+                }\n+            }\n+        }\n+    }\n }\n \n // The type of entry function, so"}, {"sha": "0cfdea68e881c80ee4625ec52eda3175a0cb2fa6", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a9093a4dd80e617d50b26647ec2adcb727d2dd29/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9093a4dd80e617d50b26647ec2adcb727d2dd29/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=a9093a4dd80e617d50b26647ec2adcb727d2dd29", "patch": "@@ -14,7 +14,7 @@ use dep_graph::DepGraph;\n use dep_graph::{DepNode, DepConstructor};\n use errors::DiagnosticBuilder;\n use session::Session;\n-use session::config::{BorrowckMode, OutputFilenames, OptLevel};\n+use session::config::{BorrowckMode, OutputFilenames};\n use session::config::CrateType;\n use middle;\n use hir::{TraitCandidate, HirId, ItemLocalId};\n@@ -1469,27 +1469,9 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n             self.use_mir_borrowck()\n     }\n \n-    #[inline]\n-    pub fn share_generics(self) -> bool {\n-        match self.sess.opts.debugging_opts.share_generics {\n-            Some(setting) => setting,\n-            None => {\n-                self.sess.opts.incremental.is_some() ||\n-                match self.sess.opts.optimize {\n-                    OptLevel::No   |\n-                    OptLevel::Less |\n-                    OptLevel::Size |\n-                    OptLevel::SizeMin => true,\n-                    OptLevel::Default    |\n-                    OptLevel::Aggressive => false,\n-                }\n-            }\n-        }\n-    }\n-\n     #[inline]\n     pub fn local_crate_exports_generics(self) -> bool {\n-        debug_assert!(self.share_generics());\n+        debug_assert!(self.sess.opts.share_generics());\n \n         self.sess.crate_types.borrow().iter().any(|crate_type| {\n             match crate_type {"}, {"sha": "02434b7be0bda22aa1d024d96f6e0d14c694dc83", "filename": "src/librustc_codegen_llvm/back/symbol_export.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a9093a4dd80e617d50b26647ec2adcb727d2dd29/src%2Flibrustc_codegen_llvm%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9093a4dd80e617d50b26647ec2adcb727d2dd29/src%2Flibrustc_codegen_llvm%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fsymbol_export.rs?ref=a9093a4dd80e617d50b26647ec2adcb727d2dd29", "patch": "@@ -242,7 +242,7 @@ fn exported_symbols_provider_local<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         symbols.push((exported_symbol, SymbolExportLevel::Rust));\n     }\n \n-    if tcx.share_generics() && tcx.local_crate_exports_generics() {\n+    if tcx.sess.opts.share_generics() && tcx.local_crate_exports_generics() {\n         use rustc::mir::mono::{Linkage, Visibility, MonoItem};\n         use rustc::ty::InstanceDef;\n "}, {"sha": "3594351802fe91cabf67112f5c7b2f6ebae108ba", "filename": "src/librustc_codegen_llvm/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a9093a4dd80e617d50b26647ec2adcb727d2dd29/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9093a4dd80e617d50b26647ec2adcb727d2dd29/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcallee.rs?ref=a9093a4dd80e617d50b26647ec2adcb727d2dd29", "patch": "@@ -133,7 +133,7 @@ pub fn get_fn(\n                 // This is a monomorphization. Its expected visibility depends\n                 // on whether we are in share-generics mode.\n \n-                if cx.tcx.share_generics() {\n+                if cx.tcx.sess.opts.share_generics() {\n                     // We are in share_generics mode.\n \n                     if instance_def_id.is_local() {"}, {"sha": "d834a6502b280fa8f9f4b391df546ccbf532f35a", "filename": "src/librustc_codegen_utils/symbol_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a9093a4dd80e617d50b26647ec2adcb727d2dd29/src%2Flibrustc_codegen_utils%2Fsymbol_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9093a4dd80e617d50b26647ec2adcb727d2dd29/src%2Flibrustc_codegen_utils%2Fsymbol_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Fsymbol_names.rs?ref=a9093a4dd80e617d50b26647ec2adcb727d2dd29", "patch": "@@ -201,7 +201,7 @@ fn get_symbol_hash<'a, 'tcx>(\n \n         if avoid_cross_crate_conflicts {\n             let instantiating_crate = if is_generic {\n-                if !def_id.is_local() && tcx.share_generics() {\n+                if !def_id.is_local() && tcx.sess.opts.share_generics() {\n                     // If we are re-using a monomorphization from another crate,\n                     // we have to compute the symbol hash accordingly.\n                     let upstream_monomorphizations = tcx.upstream_monomorphizations_for(def_id);"}, {"sha": "230d6f0472edde6f538b447f779b1adbdc057275", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a9093a4dd80e617d50b26647ec2adcb727d2dd29/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9093a4dd80e617d50b26647ec2adcb727d2dd29/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=a9093a4dd80e617d50b26647ec2adcb727d2dd29", "patch": "@@ -770,7 +770,7 @@ fn should_monomorphize_locally<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, instance:\n         // If we are not in share generics mode, we don't link to upstream\n         // monomorphizations but always instantiate our own internal versions\n         // instead.\n-        if !tcx.share_generics() {\n+        if !tcx.sess.opts.share_generics() {\n             return false\n         }\n "}, {"sha": "8d6d01633a12ef8d5faa6bb52f12bef0475ec9fa", "filename": "src/librustc_mir/monomorphize/partitioning.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a9093a4dd80e617d50b26647ec2adcb727d2dd29/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9093a4dd80e617d50b26647ec2adcb727d2dd29/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs?ref=a9093a4dd80e617d50b26647ec2adcb727d2dd29", "patch": "@@ -304,7 +304,7 @@ fn place_root_mono_items<'a, 'tcx, I>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     // available to downstream crates. This depends on whether we are in\n     // share-generics mode and whether the current crate can even have\n     // downstream crates.\n-    let export_generics = tcx.share_generics() &&\n+    let export_generics = tcx.sess.opts.share_generics() &&\n                           tcx.local_crate_exports_generics();\n \n     for mono_item in mono_items {"}]}