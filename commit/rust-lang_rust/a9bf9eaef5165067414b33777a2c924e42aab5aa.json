{"sha": "a9bf9eaef5165067414b33777a2c924e42aab5aa", "node_id": "C_kwDOAAsO6NoAKGE5YmY5ZWFlZjUxNjUwNjc0MTRiMzM3NzdhMmM5MjRlNDJhYWI1YWE", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-08-06T21:38:09Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-03-02T16:46:08Z"}, "message": "Add UI tests for the `expect` attribute (RFC-2383)\n\n* Add UI tests with macros for the `expect` attribute (RFC-2383)\n* Addressed review comments - mostly UI test updates (RFC-2383)\n* Documented lint level attribute on macro not working bug (RFC-2383)\n  See `rust#87391`", "tree": {"sha": "923db2fe48114dbda3712924355b3aeaf518a7af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/923db2fe48114dbda3712924355b3aeaf518a7af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9bf9eaef5165067414b33777a2c924e42aab5aa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEsfZNmu/fmIv8KDcv/Ny/Ka9k1gEFAmIfn1AACgkQ/Ny/Ka9k\n1gGbVg//aYEZHbYr4qIv3I/anWnNa8TwjufKxofGWyaBYMfrfzmEmEvx8M9UfqCc\n+23k5941cXeBF5N6fYPXwPT8nSUg/21CjjCTM+ifswO5p5UrMNAEvKmOn5FHljvh\n2aCUR12tahU+vFt2EMFSvrLAciliN23+y9B0xk8wRsD4Hqev+eBXgd1XgckteJR1\npkIJKEDjUzw9P0KcHQKXGop8ztjkwrGav6fQ1CJLU27agu6O96jvCaPHMDaI9MJa\nvX3H7zLMJSgZfwrQkxbb6Ek4eRf33qJx9GnPQayjjRZa7zq42f8BEthvAdfvuL44\nnay8Z1rfilPJ3FSgRaDNFgBoXfQFw4WwaI/BCwS8q1ywq1cCXLj7vSob10zb5E4r\npRZ4xZ79GqSjO4JBxstmJaWeuc69aJr3/ODx7z0+jt7i3jMPIy+Ecz2sSzevcAoP\nXYDfc91/VTpFTyUiEVLLQ2SO1kcZtsZlHc6iXQ37qmx60jrlI/6LuE7mrngRv3ZA\n/mCzTjtI96lOJq83aB+45fSj6W4iaEubq/qzhGQSBgJyEybAMZvcO7mBzWPet4kQ\nOSPH6TDPu9G9stIt64hm8A2Ix9RNBFEneKGpLSHo4/z5VWC50fZ3ZNTDdzgnOlZX\n17HgIyMGcultFdr353aiwh+m2p5QJ+kDy3Ds/TcRsyP5V9VI+qc=\n=ec9j\n-----END PGP SIGNATURE-----", "payload": "tree 923db2fe48114dbda3712924355b3aeaf518a7af\nparent 33a5945069e2c7bd3ba8a0dd65b74ebdd234ad7c\nauthor xFrednet <xFrednet@gmail.com> 1628285889 +0200\ncommitter xFrednet <xFrednet@gmail.com> 1646239568 +0100\n\nAdd UI tests for the `expect` attribute (RFC-2383)\n\n* Add UI tests with macros for the `expect` attribute (RFC-2383)\n* Addressed review comments - mostly UI test updates (RFC-2383)\n* Documented lint level attribute on macro not working bug (RFC-2383)\n  See `rust#87391`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9bf9eaef5165067414b33777a2c924e42aab5aa", "html_url": "https://github.com/rust-lang/rust/commit/a9bf9eaef5165067414b33777a2c924e42aab5aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9bf9eaef5165067414b33777a2c924e42aab5aa/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33a5945069e2c7bd3ba8a0dd65b74ebdd234ad7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/33a5945069e2c7bd3ba8a0dd65b74ebdd234ad7c", "html_url": "https://github.com/rust-lang/rust/commit/33a5945069e2c7bd3ba8a0dd65b74ebdd234ad7c"}], "stats": {"total": 428, "additions": 424, "deletions": 4}, "files": [{"sha": "db0756f5f54e2ef241bb20d2727c06bf54c80e81", "filename": "compiler/rustc_lint/src/expect.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a9bf9eaef5165067414b33777a2c924e42aab5aa/compiler%2Frustc_lint%2Fsrc%2Fexpect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9bf9eaef5165067414b33777a2c924e42aab5aa/compiler%2Frustc_lint%2Fsrc%2Fexpect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fexpect.rs?ref=a9bf9eaef5165067414b33777a2c924e42aab5aa", "patch": "@@ -16,11 +16,9 @@ pub fn check_expectations(tcx: TyCtxt<'_>) {\n         &tcx.lint_levels(()).lint_expectations;\n \n     for (id, expectation) in lint_expectations {\n-        if fulfilled_expectations.contains(id) {\n-            continue;\n+        if !fulfilled_expectations.contains(id) {\n+            emit_unfulfilled_expectation_lint(tcx, expectation);\n         }\n-\n-        emit_unfulfilled_expectation_lint(tcx, expectation);\n     }\n }\n "}, {"sha": "6b255b799b7ecfab17667c5fa8c47f89a17dc9ce", "filename": "src/test/ui/lint/rfc-2383-lint-reason/catch_multiple_lint_triggers.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fcatch_multiple_lint_triggers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fcatch_multiple_lint_triggers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fcatch_multiple_lint_triggers.rs?ref=a9bf9eaef5165067414b33777a2c924e42aab5aa", "patch": "@@ -0,0 +1,45 @@\n+// check-pass\n+\n+#![feature(lint_reasons)]\n+\n+#![warn(unused)]\n+\n+// This expect attribute should catch all lint triggers\n+#[expect(unused_variables)]\n+fn check_multiple_lints_1() {\n+    let value_i = 0xff00ff;\n+    let value_ii = 0xff00ff;\n+    let value_iii = 0xff00ff;\n+    let value_iiii = 0xff00ff;\n+    let value_iiiii = 0xff00ff;\n+}\n+\n+// This expect attribute should catch all lint triggers\n+#[expect(unused_mut)]\n+fn check_multiple_lints_2() {\n+    let mut a = 0xa;\n+    let mut b = 0xb;\n+    let mut c = 0xc;\n+    println!(\"The ABC goes as: {:#x} {:#x} {:#x}\", a, b, c);\n+}\n+\n+// This expect attribute should catch all lint triggers\n+#[expect(while_true)]\n+fn check_multiple_lints_3() {\n+    // `while_true` is an early lint\n+    while true {}\n+\n+    while true {}\n+\n+    while true {}\n+\n+    while true {}\n+\n+    while true {}\n+}\n+\n+fn main() {\n+    check_multiple_lints_1();\n+    check_multiple_lints_2();\n+    check_multiple_lints_3();\n+}"}, {"sha": "9f591ba9852324b30f5a5702eb97345b576061c9", "filename": "src/test/ui/lint/rfc-2383-lint-reason/crate_level_expect.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fcrate_level_expect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fcrate_level_expect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fcrate_level_expect.rs?ref=a9bf9eaef5165067414b33777a2c924e42aab5aa", "patch": "@@ -0,0 +1,15 @@\n+// check-pass\n+\n+#![feature(lint_reasons)]\n+\n+#![warn(unused)]\n+\n+#![expect(unused_mut)]\n+//~^ WARNING this lint expectation is unfulfilled [unfulfilled_lint_expectations]\n+//~| NOTE `#[warn(unfulfilled_lint_expectations)]` on by default\n+\n+#![expect(unused_variables)]\n+\n+fn main() {\n+    let x = 0;\n+}"}, {"sha": "757e6471c06160b534db72a8ec4f666bf8de0f17", "filename": "src/test/ui/lint/rfc-2383-lint-reason/crate_level_expect.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fcrate_level_expect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fcrate_level_expect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fcrate_level_expect.stderr?ref=a9bf9eaef5165067414b33777a2c924e42aab5aa", "patch": "@@ -0,0 +1,10 @@\n+warning: this lint expectation is unfulfilled\n+  --> $DIR/crate_level_expect.rs:7:1\n+   |\n+LL | #![expect(unused_mut)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(unfulfilled_lint_expectations)]` on by default\n+\n+warning: 1 warning emitted\n+"}, {"sha": "b95815bc50b985abdfbca6d2c0d6c106e6687d09", "filename": "src/test/ui/lint/rfc-2383-lint-reason/expect_inside_macro.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_inside_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_inside_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_inside_macro.rs?ref=a9bf9eaef5165067414b33777a2c924e42aab5aa", "patch": "@@ -0,0 +1,16 @@\n+// check-pass\n+\n+#![feature(lint_reasons)]\n+\n+#![warn(unused)]\n+\n+macro_rules! expect_inside_macro {\n+    () => {\n+        #[expect(unused_variables)]\n+        let x = 0;\n+    };\n+}\n+\n+fn main() {\n+    expect_inside_macro!();\n+}"}, {"sha": "07c60fa0c325b20a5d60e3ab8897bdb89ec60372", "filename": "src/test/ui/lint/rfc-2383-lint-reason/expect_lint_from_macro.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_lint_from_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_lint_from_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_lint_from_macro.rs?ref=a9bf9eaef5165067414b33777a2c924e42aab5aa", "patch": "@@ -0,0 +1,42 @@\n+// check-pass\n+\n+#![feature(lint_reasons)]\n+\n+#![warn(unused_variables)]\n+\n+macro_rules! trigger_unused_variables_macro {\n+    () => {\n+        let x = 0;\n+        //~^ WARNING unused variable: `x` [unused_variables]\n+        //~| WARNING unused variable: `x` [unused_variables]\n+    };\n+}\n+\n+pub fn check_macro() {\n+    // This should trigger the `unused_variables` from inside the macro\n+    trigger_unused_variables_macro!();\n+}\n+\n+// This should be fulfilled by the macro\n+#[expect(unused_variables)]\n+pub fn check_expect_on_item() {\n+    trigger_unused_variables_macro!();\n+}\n+\n+pub fn check_expect_on_macro() {\n+    // This should be fulfilled by the macro\n+    #[expect(unused_variables)]\n+    trigger_unused_variables_macro!();\n+\n+    // FIXME: Lint attributes currently don't work directly on macros, and\n+    // therefore also doesn't work for the new `expect` attribute. This bug\n+    // is being tracked in rust#87391. The test will until then produce two\n+    // warnings about the unused variable x.\n+    //\n+    // The expectation is still marked as fulfilled. I'm not totally why but\n+    // my guess is that this will remain working when rust#87391 has been fixed.\n+}\n+\n+fn main() {\n+\n+}"}, {"sha": "817e16fdcaa063f320bc7bf3b4b7543f1232c7d0", "filename": "src/test/ui/lint/rfc-2383-lint-reason/expect_lint_from_macro.stderr", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_lint_from_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_lint_from_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_lint_from_macro.stderr?ref=a9bf9eaef5165067414b33777a2c924e42aab5aa", "patch": "@@ -0,0 +1,29 @@\n+warning: unused variable: `x`\n+  --> $DIR/expect_lint_from_macro.rs:9:13\n+   |\n+LL |         let x = 0;\n+   |             ^ help: if this is intentional, prefix it with an underscore: `_x`\n+...\n+LL |     trigger_unused_variables_macro!();\n+   |     --------------------------------- in this macro invocation\n+   |\n+note: the lint level is defined here\n+  --> $DIR/expect_lint_from_macro.rs:5:9\n+   |\n+LL | #![warn(unused_variables)]\n+   |         ^^^^^^^^^^^^^^^^\n+   = note: this warning originates in the macro `trigger_unused_variables_macro` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+warning: unused variable: `x`\n+  --> $DIR/expect_lint_from_macro.rs:9:13\n+   |\n+LL |         let x = 0;\n+   |             ^ help: if this is intentional, prefix it with an underscore: `_x`\n+...\n+LL |     trigger_unused_variables_macro!();\n+   |     --------------------------------- in this macro invocation\n+   |\n+   = note: this warning originates in the macro `trigger_unused_variables_macro` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+warning: 2 warnings emitted\n+"}, {"sha": "928e1610614325a0e9863aa3197e562d36f767cb", "filename": "src/test/ui/lint/rfc-2383-lint-reason/expect_missing_feature_gate.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_missing_feature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_missing_feature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_missing_feature_gate.rs?ref=a9bf9eaef5165067414b33777a2c924e42aab5aa", "patch": "@@ -0,0 +1,9 @@\n+// should error due to missing feature gate.\n+\n+#![warn(unused)]\n+\n+#[expect(unused)]\n+//~^ ERROR: the `#[expect]` attribute is an experimental feature [E0658]\n+fn main() {\n+    let x = 1;\n+}"}, {"sha": "b5601cf9e6594b1f3e544e279161af5ea0bce7c4", "filename": "src/test/ui/lint/rfc-2383-lint-reason/expect_missing_feature_gate.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_missing_feature_gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_missing_feature_gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_missing_feature_gate.stderr?ref=a9bf9eaef5165067414b33777a2c924e42aab5aa", "patch": "@@ -0,0 +1,12 @@\n+error[E0658]: the `#[expect]` attribute is an experimental feature\n+  --> $DIR/expect_missing_feature_gate.rs:5:1\n+   |\n+LL | #[expect(unused)]\n+   | ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #54503 <https://github.com/rust-lang/rust/issues/54503> for more information\n+   = help: add `#![feature(lint_reasons)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "943150d2dbdf457419b950dffed578eddb0625ef", "filename": "src/test/ui/lint/rfc-2383-lint-reason/expect_multiple_lints.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_multiple_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_multiple_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_multiple_lints.rs?ref=a9bf9eaef5165067414b33777a2c924e42aab5aa", "patch": "@@ -0,0 +1,31 @@\n+// check-pass\n+\n+#![feature(lint_reasons)]\n+\n+#![warn(unused)]\n+\n+#[expect(unused_variables, unused_mut, while_true)]\n+fn check_multiple_lints_1() {\n+    // This only trigger `unused_variables`\n+    let who_am_i = 666;\n+}\n+\n+#[expect(unused_variables, unused_mut, while_true)]\n+fn check_multiple_lints_2() {\n+    // This only triggers `unused_mut`\n+    let mut x = 0;\n+    println!(\"I use x: {}\", x);\n+}\n+\n+\n+#[expect(unused_variables, unused_mut, while_true)]\n+fn check_multiple_lints_3() {\n+    // This only triggers `while_true` which is also an early lint\n+    while true {}\n+}\n+\n+fn main() {\n+    check_multiple_lints_1();\n+    check_multiple_lints_2();\n+    check_multiple_lints_3();\n+}"}, {"sha": "f5f0a0bc591d30682d15012496ac2ce3a29682bc", "filename": "src/test/ui/lint/rfc-2383-lint-reason/expect_nested_lint_levels.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_nested_lint_levels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_nested_lint_levels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_nested_lint_levels.rs?ref=a9bf9eaef5165067414b33777a2c924e42aab5aa", "patch": "@@ -0,0 +1,43 @@\n+// check-pass\n+// ignore-tidy-linelength\n+\n+#![feature(lint_reasons)]\n+#![warn(unused_mut)]\n+\n+#[expect(\n+    unused_mut,\n+    reason = \"this `expect` is overridden by a `allow` attribute before the `unused_mut` lint is triggered\"\n+)]\n+//~^^^^ WARNING this lint expectation is unfulfilled [unfulfilled_lint_expectations]\n+//~| NOTE this `expect` is overridden by a `allow` attribute before the `unused_mut` lint is triggered\n+mod foo {\n+    fn bar() {\n+        #[allow(\n+            unused_mut,\n+            reason = \"this overrides the previous `expect` lint level and allows the `unused_mut` lint here\"\n+        )]\n+        let mut v = 0;\n+    }\n+}\n+\n+#[expect(\n+    unused_mut,\n+    reason = \"this `expect` is overridden by a `warn` attribute before the `unused_mut` lint is triggered\"\n+)]\n+//~^^^^ WARNING this lint expectation is unfulfilled [unfulfilled_lint_expectations]\n+//~| NOTE `#[warn(unfulfilled_lint_expectations)]` on by default\n+//~| NOTE this `expect` is overridden by a `warn` attribute before the `unused_mut` lint is triggered\n+mod oof {\n+    #[warn(\n+        unused_mut,\n+        //~^ NOTE the lint level is defined here\n+        reason = \"this overrides the previous `expect` lint level and warns about the `unused_mut` lint here\"\n+    )]\n+    fn bar() {\n+        let mut v = 0;\n+        //~^ WARNING variable does not need to be mutable [unused_mut]\n+        //~| NOTE this overrides the previous `expect` lint level and warns about the `unused_mut` lint here\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "ed3e99d338683aca2b6388dfed2038e17377ab36", "filename": "src/test/ui/lint/rfc-2383-lint-reason/expect_nested_lint_levels.stderr", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_nested_lint_levels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_nested_lint_levels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_nested_lint_levels.stderr?ref=a9bf9eaef5165067414b33777a2c924e42aab5aa", "patch": "@@ -0,0 +1,40 @@\n+warning: variable does not need to be mutable\n+  --> $DIR/expect_nested_lint_levels.rs:37:13\n+   |\n+LL |         let mut v = 0;\n+   |             ----^\n+   |             |\n+   |             help: remove this `mut`\n+   |\n+   = note: this overrides the previous `expect` lint level and warns about the `unused_mut` lint here\n+note: the lint level is defined here\n+  --> $DIR/expect_nested_lint_levels.rs:32:9\n+   |\n+LL |         unused_mut,\n+   |         ^^^^^^^^^^\n+\n+warning: this lint expectation is unfulfilled\n+  --> $DIR/expect_nested_lint_levels.rs:23:1\n+   |\n+LL | / #[expect(\n+LL | |     unused_mut,\n+LL | |     reason = \"this `expect` is overridden by a `warn` attribute before the `unused_mut` lint is triggered\"\n+LL | | )]\n+   | |__^\n+   |\n+   = note: `#[warn(unfulfilled_lint_expectations)]` on by default\n+   = note: this `expect` is overridden by a `warn` attribute before the `unused_mut` lint is triggered\n+\n+warning: this lint expectation is unfulfilled\n+  --> $DIR/expect_nested_lint_levels.rs:7:1\n+   |\n+LL | / #[expect(\n+LL | |     unused_mut,\n+LL | |     reason = \"this `expect` is overridden by a `allow` attribute before the `unused_mut` lint is triggered\"\n+LL | | )]\n+   | |__^\n+   |\n+   = note: this `expect` is overridden by a `allow` attribute before the `unused_mut` lint is triggered\n+\n+warning: 3 warnings emitted\n+"}, {"sha": "b4183d982118e54ee876d7f6c559e90a187ecdf7", "filename": "src/test/ui/lint/rfc-2383-lint-reason/expect_with_reason.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_with_reason.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_with_reason.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_with_reason.rs?ref=a9bf9eaef5165067414b33777a2c924e42aab5aa", "patch": "@@ -0,0 +1,11 @@\n+// check-pass\n+\n+#![feature(lint_reasons)]\n+#![warn(unused)]\n+\n+#![expect(unused_variables, reason = \"<This should fail and display this reason>\")]\n+//~^ WARNING this lint expectation is unfulfilled [unfulfilled_lint_expectations]\n+//~| NOTE `#[warn(unfulfilled_lint_expectations)]` on by default\n+//~| NOTE <This should fail and display this reason>\n+\n+fn main() {}"}, {"sha": "f1d90978f831eb41f4bcae37a3b92c601e34c2a1", "filename": "src/test/ui/lint/rfc-2383-lint-reason/expect_with_reason.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_with_reason.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_with_reason.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_with_reason.stderr?ref=a9bf9eaef5165067414b33777a2c924e42aab5aa", "patch": "@@ -0,0 +1,11 @@\n+warning: this lint expectation is unfulfilled\n+  --> $DIR/expect_with_reason.rs:6:1\n+   |\n+LL | #![expect(unused_variables, reason = \"<This should fail and display this reason>\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(unfulfilled_lint_expectations)]` on by default\n+   = note: <This should fail and display this reason>\n+\n+warning: 1 warning emitted\n+"}, {"sha": "6624b930e5e70ce314922e048ecc9c77c19a4985", "filename": "src/test/ui/lint/rfc-2383-lint-reason/fulfilled_expectation_early_lints.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Ffulfilled_expectation_early_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Ffulfilled_expectation_early_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Ffulfilled_expectation_early_lints.rs?ref=a9bf9eaef5165067414b33777a2c924e42aab5aa", "patch": "@@ -0,0 +1,23 @@\n+// check-pass\n+\n+#![feature(lint_reasons)]\n+\n+fn expect_early_pass_lints() {\n+    #[expect(while_true)]\n+    while true {\n+        println!(\"I never stop\")\n+    }\n+\n+    #[expect(unused_doc_comments)]\n+    /// This comment triggers the `unused_doc_comments` lint\n+    let _sheep = \"wolf\";\n+\n+    let x = 123;\n+    #[expect(ellipsis_inclusive_range_patterns)]\n+    match x {\n+        0...100 => {}\n+        _ => {}\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "b8182b5b620d1ce96aa3b4bd323fb8a5e190590c", "filename": "src/test/ui/lint/rfc-2383-lint-reason/fulfilled_expectation_late_lints.rs", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Ffulfilled_expectation_late_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Ffulfilled_expectation_late_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Ffulfilled_expectation_late_lints.rs?ref=a9bf9eaef5165067414b33777a2c924e42aab5aa", "patch": "@@ -0,0 +1,61 @@\n+// check-pass\n+\n+#![feature(lint_reasons)]\n+#![warn(unused)]\n+\n+#[expect(unused_variables)]\n+fn check_specific_lint() {\n+    let x = 2;\n+}\n+\n+#[expect(unused)]\n+fn check_lint_group() {\n+    let x = 15;\n+}\n+\n+#[expect(unused_variables)]\n+fn check_multiple_lint_emissions() {\n+    let r = 1;\n+    let u = 8;\n+    let s = 2;\n+    let t = 9;\n+}\n+\n+mod check_multiple_expected_lints {\n+    #[expect(unused_variables, unused_mut)]\n+    pub fn check_lint_1() {\n+        // unused_variables should fulfill the expectation\n+        let c = 17;\n+    }\n+\n+    #[expect(unused_variables, unused_mut)]\n+    pub fn check_lint_2() {\n+        // unused_mut should fulfill the expectation\n+        let mut c = 17;\n+        let _ = c;\n+    }\n+}\n+\n+mod check_fulfilled_expect_in_macro {\n+    macro_rules! expect_inside_macro {\n+        () => {\n+            #[expect(unused_variables)]\n+            let x = 0;\n+        };\n+    }\n+\n+    pub fn check_macro() {\n+        expect_inside_macro!();\n+    }\n+}\n+\n+fn main() {\n+    check_specific_lint();\n+    check_lint_group();\n+    check_multiple_lint_emissions();\n+\n+    check_multiple_expected_lints::check_lint_1();\n+    check_multiple_expected_lints::check_lint_2();\n+\n+    check_fulfilled_expect_in_macro::check_macro();\n+}"}, {"sha": "98080b4e8224f99ff5a9f6db9400f8c771836ff5", "filename": "src/test/ui/lint/rfc-2383-lint-reason/multiple_expect_attrs.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fmultiple_expect_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fmultiple_expect_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fmultiple_expect_attrs.rs?ref=a9bf9eaef5165067414b33777a2c924e42aab5aa", "patch": "@@ -0,0 +1,14 @@\n+// check-pass\n+\n+#![feature(lint_reasons)]\n+#![warn(unused)]\n+\n+#[warn(unused_variables)]\n+#[expect(unused_variables)]\n+//~^ WARNING this lint expectation is unfulfilled [unfulfilled_lint_expectations]\n+//~| NOTE `#[warn(unfulfilled_lint_expectations)]` on by default\n+#[allow(unused_variables)]\n+#[expect(unused_variables)] // Only this expectation will be fulfilled\n+fn main() {\n+    let x = 2;\n+}"}, {"sha": "79657eb53939541c65f5f33cd13b8c798839aed0", "filename": "src/test/ui/lint/rfc-2383-lint-reason/multiple_expect_attrs.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fmultiple_expect_attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9bf9eaef5165067414b33777a2c924e42aab5aa/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fmultiple_expect_attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fmultiple_expect_attrs.stderr?ref=a9bf9eaef5165067414b33777a2c924e42aab5aa", "patch": "@@ -0,0 +1,10 @@\n+warning: this lint expectation is unfulfilled\n+  --> $DIR/multiple_expect_attrs.rs:7:1\n+   |\n+LL | #[expect(unused_variables)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(unfulfilled_lint_expectations)]` on by default\n+\n+warning: 1 warning emitted\n+"}]}