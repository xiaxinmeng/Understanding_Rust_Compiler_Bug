{"sha": "4cb8bf03c588dcf244d25785de3878b6ef3f7958", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjYjhiZjAzYzU4OGRjZjI0NGQyNTc4NWRlMzg3OGI2ZWYzZjc5NTg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-02T15:48:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-02T15:48:54Z"}, "message": "Merge #5192\n\n5192: Implement rust-analyzer feature configuration to tests. r=matklad a=daxpedda\n\nFixes #3198.\r\n\r\nI'm unsure if it is desired this way, maybe we want to make a seperate configuration?\n\nCo-authored-by: daxpedda <daxpedda@gmail.com>", "tree": {"sha": "50fdb5017e7b788004a8ae36278c418c134b249f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50fdb5017e7b788004a8ae36278c418c134b249f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4cb8bf03c588dcf244d25785de3878b6ef3f7958", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe/gHmCRBK7hj4Ov3rIwAAdHIIADrZCfjp53sk8Y7ADO+G422U\nVyehNKcNQJHE0saJhg2fTJdSkaA2e94sHGU8rh1CGLO31L/IIH7y0t0r1zXHB8XA\nJrfzeECG03gszzVwS+4pDk19g9uACJHwMYrEKp9h/aRxV3z14K0EXj+fwnQAPbxE\nEmEElrGZkbSgE8yrFG+SGTUGnV3Pa2tKOwKjfMO+0Ag8sUQ0a+35YwEky2pqjm1s\n31umBBKN0mWENJgmz00gqDaVOJaXEL22f2epmjXwrLd5FobhRNQkvIHnoKJxo4d7\nYVWfWfQ8Q/+bj/gOSvcS7lxvTVMGKO+zI9kQdNkrU8oJXAathkUPDtIFMFzCx+o=\n=FmGJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 50fdb5017e7b788004a8ae36278c418c134b249f\nparent c80b6876d537fe8abed4965635b3fe578170191e\nparent eb75a644a1c4483a74027d8936b3cfb9a02b0957\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1593704934 +0000\ncommitter GitHub <noreply@github.com> 1593704934 +0000\n\nMerge #5192\n\n5192: Implement rust-analyzer feature configuration to tests. r=matklad a=daxpedda\n\nFixes #3198.\r\n\r\nI'm unsure if it is desired this way, maybe we want to make a seperate configuration?\n\nCo-authored-by: daxpedda <daxpedda@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4cb8bf03c588dcf244d25785de3878b6ef3f7958", "html_url": "https://github.com/rust-lang/rust/commit/4cb8bf03c588dcf244d25785de3878b6ef3f7958", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4cb8bf03c588dcf244d25785de3878b6ef3f7958/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c80b6876d537fe8abed4965635b3fe578170191e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c80b6876d537fe8abed4965635b3fe578170191e", "html_url": "https://github.com/rust-lang/rust/commit/c80b6876d537fe8abed4965635b3fe578170191e"}, {"sha": "eb75a644a1c4483a74027d8936b3cfb9a02b0957", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb75a644a1c4483a74027d8936b3cfb9a02b0957", "html_url": "https://github.com/rust-lang/rust/commit/eb75a644a1c4483a74027d8936b3cfb9a02b0957"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "929926cbc5bb50b583e1219f5a7e1c8829595de4", "filename": "crates/rust-analyzer/src/cargo_target_spec.rs", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4cb8bf03c588dcf244d25785de3878b6ef3f7958/crates%2Frust-analyzer%2Fsrc%2Fcargo_target_spec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cb8bf03c588dcf244d25785de3878b6ef3f7958/crates%2Frust-analyzer%2Fsrc%2Fcargo_target_spec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcargo_target_spec.rs?ref=4cb8bf03c588dcf244d25785de3878b6ef3f7958", "patch": "@@ -21,6 +21,7 @@ pub(crate) struct CargoTargetSpec {\n \n impl CargoTargetSpec {\n     pub(crate) fn runnable_args(\n+        snap: &GlobalStateSnapshot,\n         spec: Option<CargoTargetSpec>,\n         kind: &RunnableKind,\n         cfgs: &[CfgExpr],\n@@ -78,13 +79,21 @@ impl CargoTargetSpec {\n             }\n         }\n \n-        let mut features = Vec::new();\n-        for cfg in cfgs {\n-            required_features(cfg, &mut features);\n-        }\n-        for feature in features {\n-            args.push(\"--features\".to_string());\n-            args.push(feature);\n+        if snap.config.cargo.all_features {\n+            args.push(\"--all-features\".to_string());\n+        } else {\n+            let mut features = Vec::new();\n+            for cfg in cfgs {\n+                required_features(cfg, &mut features);\n+            }\n+            for feature in &snap.config.cargo.features {\n+                features.push(feature.clone());\n+            }\n+            features.dedup();\n+            for feature in features {\n+                args.push(\"--features\".to_string());\n+                args.push(feature);\n+            }\n         }\n \n         Ok((args, extra_args))"}, {"sha": "652a4469468aaa903a79cf568f7b00c40211529d", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4cb8bf03c588dcf244d25785de3878b6ef3f7958/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cb8bf03c588dcf244d25785de3878b6ef3f7958/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=4cb8bf03c588dcf244d25785de3878b6ef3f7958", "patch": "@@ -666,7 +666,7 @@ pub(crate) fn runnable(\n     let workspace_root = spec.as_ref().map(|it| it.workspace_root.clone());\n     let target = spec.as_ref().map(|s| s.target.clone());\n     let (cargo_args, executable_args) =\n-        CargoTargetSpec::runnable_args(spec, &runnable.kind, &runnable.cfg_exprs)?;\n+        CargoTargetSpec::runnable_args(snap, spec, &runnable.kind, &runnable.cfg_exprs)?;\n     let label = runnable.label(target);\n     let location = location_link(snap, None, runnable.nav)?;\n "}]}