{"sha": "840dc1047112294387a7cc16536315ab306c2de2", "node_id": "C_kwDOAAsO6NoAKDg0MGRjMTA0NzExMjI5NDM4N2E3Y2MxNjUzNjMxNWFiMzA2YzJkZTI", "commit": {"author": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-02-26T01:13:53Z"}, "committer": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-03-07T17:43:27Z"}, "message": "Update clippy to new ExprUseVisitor delegate", "tree": {"sha": "c665fad4f56702cd85f9c5725a58af5c89b34f74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c665fad4f56702cd85f9c5725a58af5c89b34f74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/840dc1047112294387a7cc16536315ab306c2de2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/840dc1047112294387a7cc16536315ab306c2de2", "html_url": "https://github.com/rust-lang/rust/commit/840dc1047112294387a7cc16536315ab306c2de2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/840dc1047112294387a7cc16536315ab306c2de2/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96eb1168d177a8e37fb4866051e665e3f1988c25", "url": "https://api.github.com/repos/rust-lang/rust/commits/96eb1168d177a8e37fb4866051e665e3f1988c25", "html_url": "https://github.com/rust-lang/rust/commit/96eb1168d177a8e37fb4866051e665e3f1988c25"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "5974b67eb7285a27005a5f2f2fffff7c60f3e603", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/840dc1047112294387a7cc16536315ab306c2de2/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/840dc1047112294387a7cc16536315ab306c2de2/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=840dc1047112294387a7cc16536315ab306c2de2", "patch": "@@ -154,7 +154,7 @@ impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n         }\n     }\n \n-    fn borrow(&mut self, cmt: &PlaceWithHirId<'tcx>, _: HirId, _: ty::BorrowKind) {\n+    fn borrow(&mut self, cmt: &PlaceWithHirId<'tcx>, _: HirId, _: ty::BorrowKind, _is_autoref: bool) {\n         if cmt.place.projections.is_empty() {\n             if let PlaceBase::Local(lid) = cmt.place.base {\n                 self.set.remove(&lid);"}, {"sha": "4b3d7c1ef247a88ab102bef6753887027176432e", "filename": "clippy_lints/src/loops/mut_range_bound.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/840dc1047112294387a7cc16536315ab306c2de2/clippy_lints%2Fsrc%2Floops%2Fmut_range_bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/840dc1047112294387a7cc16536315ab306c2de2/clippy_lints%2Fsrc%2Floops%2Fmut_range_bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmut_range_bound.rs?ref=840dc1047112294387a7cc16536315ab306c2de2", "patch": "@@ -90,7 +90,7 @@ struct MutatePairDelegate<'a, 'tcx> {\n impl<'tcx> Delegate<'tcx> for MutatePairDelegate<'_, 'tcx> {\n     fn consume(&mut self, _: &PlaceWithHirId<'tcx>, _: HirId) {}\n \n-    fn borrow(&mut self, cmt: &PlaceWithHirId<'tcx>, diag_expr_id: HirId, bk: ty::BorrowKind) {\n+    fn borrow(&mut self, cmt: &PlaceWithHirId<'tcx>, diag_expr_id: HirId, bk: ty::BorrowKind, _is_autoref: bool) {\n         if bk == ty::BorrowKind::MutBorrow {\n             if let PlaceBase::Local(id) = cmt.place.base {\n                 if Some(id) == self.hir_id_low && !BreakAfterExprVisitor::is_found(self.cx, diag_expr_id) {"}, {"sha": "ccd355f480a6255a3d16c0a6126e339e80ccd57a", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/840dc1047112294387a7cc16536315ab306c2de2/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/840dc1047112294387a7cc16536315ab306c2de2/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=840dc1047112294387a7cc16536315ab306c2de2", "patch": "@@ -332,7 +332,7 @@ impl<'tcx> euv::Delegate<'tcx> for MovedVariablesCtxt {\n         self.move_common(cmt);\n     }\n \n-    fn borrow(&mut self, _: &euv::PlaceWithHirId<'tcx>, _: HirId, _: ty::BorrowKind) {}\n+    fn borrow(&mut self, _: &euv::PlaceWithHirId<'tcx>, _: HirId, _: ty::BorrowKind, _is_autoref: bool) {}\n \n     fn mutate(&mut self, _: &euv::PlaceWithHirId<'tcx>, _: HirId) {}\n "}, {"sha": "0e97d837ec59efa75c9dfa8aa758f3c0b87f21b1", "filename": "clippy_utils/src/sugg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/840dc1047112294387a7cc16536315ab306c2de2/clippy_utils%2Fsrc%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/840dc1047112294387a7cc16536315ab306c2de2/clippy_utils%2Fsrc%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fsugg.rs?ref=840dc1047112294387a7cc16536315ab306c2de2", "patch": "@@ -886,7 +886,7 @@ impl<'tcx> Delegate<'tcx> for DerefDelegate<'_, 'tcx> {\n     fn consume(&mut self, _: &PlaceWithHirId<'tcx>, _: HirId) {}\n \n     #[allow(clippy::too_many_lines)]\n-    fn borrow(&mut self, cmt: &PlaceWithHirId<'tcx>, _: HirId, _: ty::BorrowKind) {\n+    fn borrow(&mut self, cmt: &PlaceWithHirId<'tcx>, _: HirId, _: ty::BorrowKind, _is_autoref: bool) {\n         if let PlaceBase::Local(id) = cmt.place.base {\n             let map = self.cx.tcx.hir();\n             let span = map.span(cmt.hir_id);"}, {"sha": "ae4ca77e48c379788460175a5cf41f03714d9109", "filename": "clippy_utils/src/usage.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/840dc1047112294387a7cc16536315ab306c2de2/clippy_utils%2Fsrc%2Fusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/840dc1047112294387a7cc16536315ab306c2de2/clippy_utils%2Fsrc%2Fusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fusage.rs?ref=840dc1047112294387a7cc16536315ab306c2de2", "patch": "@@ -64,7 +64,7 @@ impl<'tcx> MutVarsDelegate {\n impl<'tcx> Delegate<'tcx> for MutVarsDelegate {\n     fn consume(&mut self, _: &PlaceWithHirId<'tcx>, _: HirId) {}\n \n-    fn borrow(&mut self, cmt: &PlaceWithHirId<'tcx>, _: HirId, bk: ty::BorrowKind) {\n+    fn borrow(&mut self, cmt: &PlaceWithHirId<'tcx>, _: HirId, bk: ty::BorrowKind, _is_autoref: bool) {\n         if bk == ty::BorrowKind::MutBorrow {\n             self.update(cmt);\n         }"}]}