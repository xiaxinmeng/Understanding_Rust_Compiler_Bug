{"sha": "2564711e803f62e04bebf10408cc1c11297c0caf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1NjQ3MTFlODAzZjYyZTA0YmViZjEwNDA4Y2MxYzExMjk3YzBjYWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-04-04T17:23:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-04-04T17:23:32Z"}, "message": "Auto merge of #41059 - TimNN:rollup, r=TimNN\n\nRollup of 1 pull requests\n\n- Successful merges: #40998\n- Failed merges: #41045", "tree": {"sha": "7d79df9a4a2cb3c2be851006b7b8c71e3122f6ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d79df9a4a2cb3c2be851006b7b8c71e3122f6ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2564711e803f62e04bebf10408cc1c11297c0caf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2564711e803f62e04bebf10408cc1c11297c0caf", "html_url": "https://github.com/rust-lang/rust/commit/2564711e803f62e04bebf10408cc1c11297c0caf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2564711e803f62e04bebf10408cc1c11297c0caf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5309a3e31d88def1f3ea966162ed4f81f161d500", "url": "https://api.github.com/repos/rust-lang/rust/commits/5309a3e31d88def1f3ea966162ed4f81f161d500", "html_url": "https://github.com/rust-lang/rust/commit/5309a3e31d88def1f3ea966162ed4f81f161d500"}, {"sha": "b012adc354100ee95c1695ae7934e86683f1774e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b012adc354100ee95c1695ae7934e86683f1774e", "html_url": "https://github.com/rust-lang/rust/commit/b012adc354100ee95c1695ae7934e86683f1774e"}], "stats": {"total": 1076, "additions": 1009, "deletions": 67}, "files": [{"sha": "e5b57a389ecbed702f88bf2c8b9ab32f5f95002a", "filename": ".travis.yml", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -15,19 +15,27 @@ matrix:\n     - env: IMAGE=arm-android\n     - env: IMAGE=armhf-gnu\n     - env: IMAGE=cross DEPLOY=1\n+    - env: IMAGE=dist-aarch64-linux DEPLOY=1\n     - env: IMAGE=dist-android DEPLOY=1\n     - env: IMAGE=dist-arm-linux DEPLOY=1\n-    - env: IMAGE=dist-armv7-aarch64-linux DEPLOY=1\n-    - env: IMAGE=dist-freebsd DEPLOY=1\n-    - env: IMAGE=dist-i586-gnu-i686-musl DEPLOY=1\n+    - env: IMAGE=dist-armhf-linux DEPLOY=1\n+    - env: IMAGE=dist-armv7-linux DEPLOY=1\n     - env: IMAGE=dist-fuchsia DEPLOY=1\n+    - env: IMAGE=dist-i586-gnu-i686-musl DEPLOY=1\n+    - env: IMAGE=dist-i686-freebsd DEPLOY=1\n+    - env: IMAGE=dist-i686-linux DEPLOY=1\n     - env: IMAGE=dist-mips-linux DEPLOY=1\n     - env: IMAGE=dist-mips64-linux DEPLOY=1\n+    - env: IMAGE=dist-mips64el-linux DEPLOY=1\n+    - env: IMAGE=dist-mipsel-linux DEPLOY=1\n     - env: IMAGE=dist-powerpc-linux DEPLOY=1\n     - env: IMAGE=dist-powerpc64-linux DEPLOY=1\n-    - env: IMAGE=dist-s390x-linux-netbsd DEPLOY=1\n-    - env: IMAGE=dist-x86-linux DEPLOY=1\n+    - env: IMAGE=dist-powerpc64le-linux DEPLOY=1\n+    - env: IMAGE=dist-s390x-linux DEPLOY=1\n+    - env: IMAGE=dist-x86_64-freebsd DEPLOY=1\n+    - env: IMAGE=dist-x86_64-linux DEPLOY=1\n     - env: IMAGE=dist-x86_64-musl DEPLOY=1\n+    - env: IMAGE=dist-x86_64-netbsd DEPLOY=1\n     - env: IMAGE=emscripten\n     - env: IMAGE=i686-gnu\n     - env: IMAGE=i686-gnu-nopt\n@@ -104,7 +112,7 @@ matrix:\n     # turned on, they're deployed to a different location primarily for projects\n     # which are stuck on nightly and don't want llvm assertions in the artifacts\n     # that they use.\n-    - env: IMAGE=dist-x86-linux DEPLOY_ALT=1\n+    - env: IMAGE=dist-x86_64-linux DEPLOY_ALT=1\n     - env: >\n         RUST_CHECK_TARGET=dist\n         RUST_CONFIGURE_ARGS=\"--enable-extended\""}, {"sha": "c468a689a0565c40921d15bb00132817a182e9bf", "filename": "src/ci/docker/dist-aarch64-linux/Dockerfile", "status": "renamed", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2FDockerfile?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -56,8 +56,7 @@ RUN mkdir /x-tools && chown rustbuild:rustbuild /x-tools\n USER rustbuild\n WORKDIR /tmp\n \n-COPY armv7-linux-gnueabihf.config /tmp/\n-COPY armv7-linux-gnueabihf.config aarch64-linux-gnu.config build-toolchains.sh /tmp/\n+COPY aarch64-linux-gnu.config build-toolchains.sh /tmp/\n RUN ./build-toolchains.sh\n \n USER root\n@@ -67,17 +66,12 @@ RUN curl -o /usr/local/bin/sccache \\\n       chmod +x /usr/local/bin/sccache\n \n ENV PATH=$PATH:/x-tools/aarch64-unknown-linux-gnueabi/bin\n-ENV PATH=$PATH:/x-tools/armv7-unknown-linux-gnueabihf/bin\n \n ENV CC_aarch64_unknown_linux_gnu=aarch64-unknown-linux-gnueabi-gcc \\\n     AR_aarch64_unknown_linux_gnu=aarch64-unknown-linux-gnueabi-ar \\\n-    CXX_aarch64_unknown_linux_gnu=aarch64-unknown-linux-gnueabi-g++ \\\n-    CC_armv7_unknown_linux_gnueabihf=armv7-unknown-linux-gnueabihf-gcc \\\n-    AR_armv7_unknown_linux_gnueabihf=armv7-unknown-linux-gnueabihf-ar \\\n-    CXX_armv7_unknown_linux_gnueabihf=armv7-unknown-linux-gnueabihf-g++\n+    CXX_aarch64_unknown_linux_gnu=aarch64-unknown-linux-gnueabi-g++\n \n-ENV HOSTS=armv7-unknown-linux-gnueabihf\n-ENV HOSTS=$HOSTS,aarch64-unknown-linux-gnu\n+ENV HOSTS=aarch64-unknown-linux-gnu\n \n ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS", "previous_filename": "src/ci/docker/dist-armv7-aarch64-linux/Dockerfile"}, {"sha": "3d30ee49022d8f9318abc0fa52d71cd8310799d1", "filename": "src/ci/docker/dist-aarch64-linux/aarch64-linux-gnu.config", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2Faarch64-linux-gnu.config", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2Faarch64-linux-gnu.config", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2Faarch64-linux-gnu.config?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "previous_filename": "src/ci/docker/dist-armv7-aarch64-linux/aarch64-linux-gnu.config"}, {"sha": "94f785c96f815ac8d7a72103696a6ae821dd508a", "filename": "src/ci/docker/dist-aarch64-linux/build-toolchains.sh", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2Fbuild-toolchains.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2Fbuild-toolchains.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2Fbuild-toolchains.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,37 @@\n+#!/bin/bash\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+hide_output() {\n+  set +x\n+  on_err=\"\n+echo ERROR: An error was encountered with the build.\n+cat /tmp/build.log\n+exit 1\n+\"\n+  trap \"$on_err\" ERR\n+  bash -c \"while true; do sleep 30; echo \\$(date) - building ...; done\" &\n+  PING_LOOP_PID=$!\n+  $@ &> /tmp/build.log\n+  rm /tmp/build.log\n+  trap - ERR\n+  kill $PING_LOOP_PID\n+  set -x\n+}\n+\n+mkdir build\n+cd build\n+cp ../aarch64-linux-gnu.config .config\n+ct-ng oldconfig\n+hide_output ct-ng build\n+cd ..\n+rm -rf build"}, {"sha": "1e448dd43fd5f3c1aba60d4a6408074afca5b4fb", "filename": "src/ci/docker/dist-arm-linux/Dockerfile", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -56,7 +56,7 @@ RUN mkdir /x-tools && chown rustbuild:rustbuild /x-tools\n USER rustbuild\n WORKDIR /tmp\n \n-COPY arm-linux-gnueabihf.config arm-linux-gnueabi.config build-toolchains.sh /tmp/\n+COPY arm-linux-gnueabi.config build-toolchains.sh /tmp/\n RUN ./build-toolchains.sh\n \n USER root\n@@ -66,17 +66,12 @@ RUN curl -o /usr/local/bin/sccache \\\n       chmod +x /usr/local/bin/sccache\n \n ENV PATH=$PATH:/x-tools/arm-unknown-linux-gnueabi/bin\n-ENV PATH=$PATH:/x-tools/arm-unknown-linux-gnueabihf/bin\n \n ENV CC_arm_unknown_linux_gnueabi=arm-unknown-linux-gnueabi-gcc \\\n     AR_arm_unknown_linux_gnueabi=arm-unknown-linux-gnueabi-ar \\\n-    CXX_arm_unknown_linux_gnueabi=arm-unknown-linux-gnueabi-g++ \\\n-    CC_arm_unknown_linux_gnueabihf=arm-unknown-linux-gnueabihf-gcc \\\n-    AR_arm_unknown_linux_gnueabihf=arm-unknown-linux-gnueabihf-ar \\\n-    CXX_arm_unknown_linux_gnueabihf=arm-unknown-linux-gnueabihf-g++\n+    CXX_arm_unknown_linux_gnueabi=arm-unknown-linux-gnueabi-g++\n \n ENV HOSTS=arm-unknown-linux-gnueabi\n-ENV HOSTS=$HOSTS,arm-unknown-linux-gnueabihf\n \n ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "f78ecf9381a1fce61dc582d29bc1c802ca52fe36", "filename": "src/ci/docker/dist-arm-linux/build-toolchains.sh", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-arm-linux%2Fbuild-toolchains.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-arm-linux%2Fbuild-toolchains.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-arm-linux%2Fbuild-toolchains.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -35,11 +35,3 @@ ct-ng oldconfig\n hide_output ct-ng build\n cd ..\n rm -rf build\n-\n-mkdir build\n-cd build\n-cp ../arm-linux-gnueabihf.config .config\n-ct-ng oldconfig\n-hide_output ct-ng build\n-cd ..\n-rm -rf build"}, {"sha": "cad96b4bde48051c140b195a3a8bb21a044ec02c", "filename": "src/ci/docker/dist-armhf-linux/Dockerfile", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-armhf-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-armhf-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armhf-linux%2FDockerfile?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,77 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  automake \\\n+  bison \\\n+  bzip2 \\\n+  ca-certificates \\\n+  cmake \\\n+  curl \\\n+  file \\\n+  flex \\\n+  g++ \\\n+  gawk \\\n+  gdb \\\n+  git \\\n+  gperf \\\n+  help2man \\\n+  libncurses-dev \\\n+  libtool-bin \\\n+  make \\\n+  patch \\\n+  python2.7 \\\n+  sudo \\\n+  texinfo \\\n+  wget \\\n+  xz-utils \\\n+  libssl-dev \\\n+  pkg-config\n+\n+RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n+    dpkg -i dumb-init_*.deb && \\\n+    rm dumb-init_*.deb\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n+\n+# Ubuntu 16.04 (this contianer) ships with make 4, but something in the\n+# toolchains we build below chokes on that, so go back to make 3\n+RUN curl https://ftp.gnu.org/gnu/make/make-3.81.tar.gz | tar xzf - && \\\n+      cd make-3.81 && \\\n+      ./configure --prefix=/usr && \\\n+      make && \\\n+      make install && \\\n+      cd .. && \\\n+      rm -rf make-3.81\n+\n+RUN curl http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.22.0.tar.bz2 | \\\n+      tar xjf - && \\\n+      cd crosstool-ng && \\\n+      ./configure --prefix=/usr/local && \\\n+      make -j$(nproc) && \\\n+      make install && \\\n+      cd .. && \\\n+      rm -rf crosstool-ng\n+\n+RUN groupadd -r rustbuild && useradd -m -r -g rustbuild rustbuild\n+RUN mkdir /x-tools && chown rustbuild:rustbuild /x-tools\n+USER rustbuild\n+WORKDIR /tmp\n+\n+COPY arm-linux-gnueabihf.config build-toolchains.sh /tmp/\n+RUN ./build-toolchains.sh\n+\n+USER root\n+\n+RUN curl -o /usr/local/bin/sccache \\\n+      https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-03-24-sccache-x86_64-unknown-linux-musl && \\\n+      chmod +x /usr/local/bin/sccache\n+\n+ENV PATH=$PATH:/x-tools/arm-unknown-linux-gnueabihf/bin\n+\n+ENV CC_arm_unknown_linux_gnueabihf=arm-unknown-linux-gnueabihf-gcc \\\n+    AR_arm_unknown_linux_gnueabihf=arm-unknown-linux-gnueabihf-ar \\\n+    CXX_arm_unknown_linux_gnueabihf=arm-unknown-linux-gnueabihf-g++\n+\n+ENV HOSTS=arm-unknown-linux-gnueabihf\n+\n+ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n+ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "1feeef15557498d7d0be00e216370aa2416b2a2b", "filename": "src/ci/docker/dist-armhf-linux/arm-linux-gnueabihf.config", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Farm-linux-gnueabihf.config", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Farm-linux-gnueabihf.config", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Farm-linux-gnueabihf.config?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "previous_filename": "src/ci/docker/dist-arm-linux/arm-linux-gnueabihf.config"}, {"sha": "df1134d5483c2ff3d4953e5dba14e1552250fc5d", "filename": "src/ci/docker/dist-armhf-linux/build-toolchains.sh", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Fbuild-toolchains.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Fbuild-toolchains.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Fbuild-toolchains.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,37 @@\n+#!/bin/bash\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+hide_output() {\n+  set +x\n+  on_err=\"\n+echo ERROR: An error was encountered with the build.\n+cat /tmp/build.log\n+exit 1\n+\"\n+  trap \"$on_err\" ERR\n+  bash -c \"while true; do sleep 30; echo \\$(date) - building ...; done\" &\n+  PING_LOOP_PID=$!\n+  $@ &> /tmp/build.log\n+  rm /tmp/build.log\n+  trap - ERR\n+  kill $PING_LOOP_PID\n+  set -x\n+}\n+\n+mkdir build\n+cd build\n+cp ../arm-linux-gnueabihf.config .config\n+ct-ng oldconfig\n+hide_output ct-ng build\n+cd ..\n+rm -rf build"}, {"sha": "d5be52eba5c2e3c75eaa2a2c7e1232f172de6841", "filename": "src/ci/docker/dist-armv7-linux/Dockerfile", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-armv7-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-armv7-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armv7-linux%2FDockerfile?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,77 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  automake \\\n+  bison \\\n+  bzip2 \\\n+  ca-certificates \\\n+  cmake \\\n+  curl \\\n+  file \\\n+  flex \\\n+  g++ \\\n+  gawk \\\n+  gdb \\\n+  git \\\n+  gperf \\\n+  help2man \\\n+  libncurses-dev \\\n+  libtool-bin \\\n+  make \\\n+  patch \\\n+  python2.7 \\\n+  sudo \\\n+  texinfo \\\n+  wget \\\n+  xz-utils \\\n+  libssl-dev \\\n+  pkg-config\n+\n+RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n+    dpkg -i dumb-init_*.deb && \\\n+    rm dumb-init_*.deb\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n+\n+# Ubuntu 16.04 (this contianer) ships with make 4, but something in the\n+# toolchains we build below chokes on that, so go back to make 3\n+RUN curl https://ftp.gnu.org/gnu/make/make-3.81.tar.gz | tar xzf - && \\\n+      cd make-3.81 && \\\n+      ./configure --prefix=/usr && \\\n+      make && \\\n+      make install && \\\n+      cd .. && \\\n+      rm -rf make-3.81\n+\n+RUN curl http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.22.0.tar.bz2 | \\\n+      tar xjf - && \\\n+      cd crosstool-ng && \\\n+      ./configure --prefix=/usr/local && \\\n+      make -j$(nproc) && \\\n+      make install && \\\n+      cd .. && \\\n+      rm -rf crosstool-ng\n+\n+RUN groupadd -r rustbuild && useradd -m -r -g rustbuild rustbuild\n+RUN mkdir /x-tools && chown rustbuild:rustbuild /x-tools\n+USER rustbuild\n+WORKDIR /tmp\n+\n+COPY build-toolchains.sh armv7-linux-gnueabihf.config /tmp/\n+RUN ./build-toolchains.sh\n+\n+USER root\n+\n+RUN curl -o /usr/local/bin/sccache \\\n+      https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-03-24-sccache-x86_64-unknown-linux-musl && \\\n+      chmod +x /usr/local/bin/sccache\n+\n+ENV PATH=$PATH:/x-tools/armv7-unknown-linux-gnueabihf/bin\n+\n+ENV CC_armv7_unknown_linux_gnueabihf=armv7-unknown-linux-gnueabihf-gcc \\\n+    AR_armv7_unknown_linux_gnueabihf=armv7-unknown-linux-gnueabihf-ar \\\n+    CXX_armv7_unknown_linux_gnueabihf=armv7-unknown-linux-gnueabihf-g++\n+\n+ENV HOSTS=armv7-unknown-linux-gnueabihf\n+\n+ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n+ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "79d6c77c41152115f176d175483453b85983c408", "filename": "src/ci/docker/dist-armv7-linux/armv7-linux-gnueabihf.config", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Farmv7-linux-gnueabihf.config", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Farmv7-linux-gnueabihf.config", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Farmv7-linux-gnueabihf.config?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "previous_filename": "src/ci/docker/dist-armv7-aarch64-linux/armv7-linux-gnueabihf.config"}, {"sha": "2d395fee792ec1d96437277424f538b4da47a9be", "filename": "src/ci/docker/dist-armv7-linux/build-toolchains.sh", "status": "renamed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Fbuild-toolchains.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Fbuild-toolchains.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Fbuild-toolchains.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -35,11 +35,3 @@ ct-ng oldconfig\n hide_output ct-ng build\n cd ..\n rm -rf build\n-\n-mkdir build\n-cd build\n-cp ../aarch64-linux-gnu.config .config\n-ct-ng oldconfig\n-hide_output ct-ng build\n-cd ..\n-rm -rf build", "previous_filename": "src/ci/docker/dist-armv7-aarch64-linux/build-toolchains.sh"}, {"sha": "beda2512741e936231a302d130c264e23a226f8c", "filename": "src/ci/docker/dist-i686-freebsd/Dockerfile", "status": "renamed", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-freebsd%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-freebsd%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-freebsd%2FDockerfile?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -17,7 +17,6 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   pkg-config\n \n COPY build-toolchain.sh /tmp/\n-RUN /tmp/build-toolchain.sh x86_64\n RUN /tmp/build-toolchain.sh i686\n \n RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n@@ -30,15 +29,11 @@ RUN curl -o /usr/local/bin/sccache \\\n       chmod +x /usr/local/bin/sccache\n \n ENV \\\n-    AR_x86_64_unknown_freebsd=x86_64-unknown-freebsd10-ar \\\n-    CC_x86_64_unknown_freebsd=x86_64-unknown-freebsd10-gcc \\\n-    CXX_x86_64_unknown_freebsd=x86_64-unknown-freebsd10-g++ \\\n     AR_i686_unknown_freebsd=i686-unknown-freebsd10-ar \\\n     CC_i686_unknown_freebsd=i686-unknown-freebsd10-gcc \\\n     CXX_i686_unknown_freebsd=i686-unknown-freebsd10-g++\n \n-ENV HOSTS=x86_64-unknown-freebsd\n-ENV HOSTS=$HOSTS,i686-unknown-freebsd\n+ENV HOSTS=i686-unknown-freebsd\n \n ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS", "previous_filename": "src/ci/docker/dist-freebsd/Dockerfile"}, {"sha": "5642e6fc937f9736e14bc23aed1fca4b045bc88a", "filename": "src/ci/docker/dist-i686-freebsd/build-toolchain.sh", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-freebsd%2Fbuild-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-freebsd%2Fbuild-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-freebsd%2Fbuild-toolchain.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "previous_filename": "src/ci/docker/dist-freebsd/build-toolchain.sh"}, {"sha": "8a01934deda30c3f8e7bfeaf086c4808648d51b7", "filename": "src/ci/docker/dist-i686-linux/Dockerfile", "status": "renamed", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2FDockerfile?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -2,6 +2,12 @@ FROM centos:5\n \n WORKDIR /build\n \n+# Centos 5 is EOL and is no longer available from the usual mirrors, so switch\n+# to http://vault.centos.org/\n+RUN sed -i 's/enabled=1/enabled=0/' /etc/yum/pluginconf.d/fastestmirror.conf\n+RUN sed -i 's/mirrorlist/#mirrorlist/' /etc/yum.repos.d/*.repo\n+RUN sed -i 's/#\\(baseurl.*\\)mirror.centos.org/\\1107.158.252.35/' /etc/yum.repos.d/*.repo\n+\n RUN yum upgrade -y && yum install -y \\\n       curl \\\n       bzip2 \\\n@@ -80,7 +86,6 @@ RUN curl -o /usr/local/bin/sccache \\\n       chmod +x /usr/local/bin/sccache\n \n ENV HOSTS=i686-unknown-linux-gnu\n-ENV HOSTS=$HOSTS,x86_64-unknown-linux-gnu\n \n ENV RUST_CONFIGURE_ARGS \\\n       --host=$HOSTS \\", "previous_filename": "src/ci/docker/dist-x86-linux/Dockerfile"}, {"sha": "80aa1f2a0161308affc245daaf2952f973643918", "filename": "src/ci/docker/dist-i686-linux/build-binutils.sh", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-binutils.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-binutils.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-binutils.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "previous_filename": "src/ci/docker/dist-x86-linux/build-binutils.sh"}, {"sha": "82e46455cb0f0673fef2fe6442d25aa7c4b8d976", "filename": "src/ci/docker/dist-i686-linux/build-cmake.sh", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-cmake.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-cmake.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-cmake.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "previous_filename": "src/ci/docker/dist-x86-linux/build-cmake.sh"}, {"sha": "b7d22755a571bab38aa4d85629fa69cbec041c24", "filename": "src/ci/docker/dist-i686-linux/build-curl.sh", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-curl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-curl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-curl.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "previous_filename": "src/ci/docker/dist-x86-linux/build-curl.sh"}, {"sha": "ab2562538d6d7376e942a219ce0f00664082be9f", "filename": "src/ci/docker/dist-i686-linux/build-gcc.sh", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-gcc.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-gcc.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-gcc.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "previous_filename": "src/ci/docker/dist-x86-linux/build-gcc.sh"}, {"sha": "92fa66b496d933648a0e49c3f83b6565246188a7", "filename": "src/ci/docker/dist-i686-linux/build-git.sh", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-git.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-git.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-git.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "previous_filename": "src/ci/docker/dist-x86-linux/build-git.sh"}, {"sha": "4ce38fd9205e27b4aff8b169f4ead5c31f731993", "filename": "src/ci/docker/dist-i686-linux/build-headers.sh", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-headers.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-headers.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-headers.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "previous_filename": "src/ci/docker/dist-x86-linux/build-headers.sh"}, {"sha": "64b1abf82a8277d8ebc1a10c54b40fd7be583bd4", "filename": "src/ci/docker/dist-i686-linux/build-openssl.sh", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-openssl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-openssl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-openssl.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "previous_filename": "src/ci/docker/dist-x86-linux/build-openssl.sh"}, {"sha": "a7a450f3c8de772403b481b96c94b03d5ec2325e", "filename": "src/ci/docker/dist-i686-linux/build-python.sh", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-python.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-python.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fbuild-python.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "previous_filename": "src/ci/docker/dist-x86-linux/build-python.sh"}, {"sha": "97e6d2908cf8a5ae3174e1bc08a17ea27fa3aae5", "filename": "src/ci/docker/dist-i686-linux/shared.sh", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fshared.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fshared.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2Fshared.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "previous_filename": "src/ci/docker/dist-x86-linux/shared.sh"}, {"sha": "e3df1cc7192d814b0a457f3f0204ae7f30ae4b4d", "filename": "src/ci/docker/dist-mips-linux/Dockerfile", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-mips-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-mips-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-mips-linux%2FDockerfile?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -13,7 +13,6 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   gdb \\\n   xz-utils \\\n   g++-mips-linux-gnu \\\n-  g++-mipsel-linux-gnu \\\n   libssl-dev \\\n   pkg-config\n \n@@ -27,7 +26,6 @@ RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-ini\n ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n \n ENV HOSTS=mips-unknown-linux-gnu\n-ENV HOSTS=$HOSTS,mipsel-unknown-linux-gnu\n \n ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "e4b3bc378c89aecdf807c59c6c37b96381e60be7", "filename": "src/ci/docker/dist-mips64-linux/Dockerfile", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-mips64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-mips64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-mips64-linux%2FDockerfile?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -13,7 +13,6 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   gdb \\\n   xz-utils \\\n   g++-mips64-linux-gnuabi64 \\\n-  g++-mips64el-linux-gnuabi64 \\\n   libssl-dev \\\n   pkg-config\n \n@@ -27,7 +26,6 @@ RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-ini\n ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n \n ENV HOSTS=mips64-unknown-linux-gnuabi64\n-ENV HOSTS=$HOSTS,mips64el-unknown-linux-gnuabi64\n \n ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "06f42397a3ea543c70aa895f794c52b004c4c746", "filename": "src/ci/docker/dist-mips64el-linux/Dockerfile", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-mips64el-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-mips64el-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-mips64el-linux%2FDockerfile?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,31 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  git \\\n+  cmake \\\n+  sudo \\\n+  gdb \\\n+  xz-utils \\\n+  g++-mips64el-linux-gnuabi64 \\\n+  libssl-dev \\\n+  pkg-config\n+\n+RUN curl -o /usr/local/bin/sccache \\\n+      https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-03-24-sccache-x86_64-unknown-linux-musl && \\\n+      chmod +x /usr/local/bin/sccache\n+\n+RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n+    dpkg -i dumb-init_*.deb && \\\n+    rm dumb-init_*.deb\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n+\n+ENV HOSTS=mips64el-unknown-linux-gnuabi64\n+\n+ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n+ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "17f9913b5aec2d560c8224ec808092cfca382f1f", "filename": "src/ci/docker/dist-mipsel-linux/Dockerfile", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-mipsel-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-mipsel-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-mipsel-linux%2FDockerfile?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,31 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  git \\\n+  cmake \\\n+  sudo \\\n+  gdb \\\n+  xz-utils \\\n+  g++-mipsel-linux-gnu \\\n+  libssl-dev \\\n+  pkg-config\n+\n+RUN curl -o /usr/local/bin/sccache \\\n+      https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-03-24-sccache-x86_64-unknown-linux-musl && \\\n+      chmod +x /usr/local/bin/sccache\n+\n+RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n+    dpkg -i dumb-init_*.deb && \\\n+    rm dumb-init_*.deb\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n+\n+ENV HOSTS=mipsel-unknown-linux-gnu\n+\n+ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n+ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "7c143b414d464df6e7683b6bf8453526f49d17cd", "filename": "src/ci/docker/dist-powerpc64-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2FDockerfile?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -62,10 +62,6 @@ RUN ./build-powerpc64-toolchain.sh\n \n USER root\n \n-RUN apt-get install -y --no-install-recommends rpm2cpio cpio\n-COPY build-powerpc64le-toolchain.sh /tmp/\n-RUN ./build-powerpc64le-toolchain.sh\n-\n RUN curl -o /usr/local/bin/sccache \\\n       https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-03-24-sccache-x86_64-unknown-linux-musl && \\\n       chmod +x /usr/local/bin/sccache\n@@ -75,13 +71,9 @@ ENV PATH=$PATH:/x-tools/powerpc64-unknown-linux-gnu/bin\n ENV \\\n     AR_powerpc64_unknown_linux_gnu=powerpc64-unknown-linux-gnu-ar \\\n     CC_powerpc64_unknown_linux_gnu=powerpc64-unknown-linux-gnu-gcc \\\n-    CXX_powerpc64_unknown_linux_gnu=powerpc64-unknown-linux-gnu-g++ \\\n-    AR_powerpc64le_unknown_linux_gnu=powerpc64le-linux-gnu-ar \\\n-    CC_powerpc64le_unknown_linux_gnu=powerpc64le-linux-gnu-gcc \\\n-    CXX_powerpc64le_unknown_linux_gnu=powerpc64le-linux-gnu-g++\n+    CXX_powerpc64_unknown_linux_gnu=powerpc64-unknown-linux-gnu-g++\n \n ENV HOSTS=powerpc64-unknown-linux-gnu\n-ENV HOSTS=$HOSTS,powerpc64le-unknown-linux-gnu\n \n ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "19b0d625d361686701502d4227bd22a2180b2f16", "filename": "src/ci/docker/dist-powerpc64le-linux/Dockerfile", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2FDockerfile?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,77 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  automake \\\n+  bison \\\n+  bzip2 \\\n+  ca-certificates \\\n+  cmake \\\n+  curl \\\n+  file \\\n+  flex \\\n+  g++ \\\n+  gawk \\\n+  gdb \\\n+  git \\\n+  gperf \\\n+  help2man \\\n+  libncurses-dev \\\n+  libtool-bin \\\n+  make \\\n+  patch \\\n+  python2.7 \\\n+  sudo \\\n+  texinfo \\\n+  wget \\\n+  xz-utils \\\n+  libssl-dev \\\n+ pkg-config\n+\n+RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n+    dpkg -i dumb-init_*.deb && \\\n+    rm dumb-init_*.deb\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n+\n+# Ubuntu 16.04 (this contianer) ships with make 4, but something in the\n+# toolchains we build below chokes on that, so go back to make 3\n+RUN curl https://ftp.gnu.org/gnu/make/make-3.81.tar.gz | tar xzf - && \\\n+      cd make-3.81 && \\\n+      ./configure --prefix=/usr && \\\n+      make && \\\n+      make install && \\\n+      cd .. && \\\n+      rm -rf make-3.81\n+\n+RUN curl http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.22.0.tar.bz2 | \\\n+      tar xjf - && \\\n+      cd crosstool-ng && \\\n+      ./configure --prefix=/usr/local && \\\n+      make -j$(nproc) && \\\n+      make install && \\\n+      cd .. && \\\n+      rm -rf crosstool-ng\n+\n+RUN groupadd -r rustbuild && useradd -m -r -g rustbuild rustbuild\n+RUN mkdir /x-tools && chown rustbuild:rustbuild /x-tools\n+USER rustbuild\n+WORKDIR /tmp\n+\n+USER root\n+\n+RUN apt-get install -y --no-install-recommends rpm2cpio cpio\n+COPY shared.sh build-powerpc64le-toolchain.sh /tmp/\n+RUN ./build-powerpc64le-toolchain.sh\n+\n+RUN curl -o /usr/local/bin/sccache \\\n+      https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-03-24-sccache-x86_64-unknown-linux-musl && \\\n+      chmod +x /usr/local/bin/sccache\n+\n+ENV \\\n+    AR_powerpc64le_unknown_linux_gnu=powerpc64le-linux-gnu-ar \\\n+    CC_powerpc64le_unknown_linux_gnu=powerpc64le-linux-gnu-gcc \\\n+    CXX_powerpc64le_unknown_linux_gnu=powerpc64le-linux-gnu-g++\n+\n+ENV HOSTS=powerpc64le-unknown-linux-gnu\n+\n+ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n+ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "4d3e638916dbf248b6f52509b4d3f4251acf2d50", "filename": "src/ci/docker/dist-powerpc64le-linux/build-powerpc64le-toolchain.sh", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2Fbuild-powerpc64le-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2Fbuild-powerpc64le-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2Fbuild-powerpc64le-toolchain.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "previous_filename": "src/ci/docker/dist-powerpc64-linux/build-powerpc64le-toolchain.sh"}, {"sha": "97e6d2908cf8a5ae3174e1bc08a17ea27fa3aae5", "filename": "src/ci/docker/dist-powerpc64le-linux/shared.sh", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2Fshared.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2Fshared.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2Fshared.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,25 @@\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+hide_output() {\n+  set +x\n+  on_err=\"\n+echo ERROR: An error was encountered with the build.\n+cat /tmp/build.log\n+exit 1\n+\"\n+  trap \"$on_err\" ERR\n+  bash -c \"while true; do sleep 30; echo \\$(date) - building ...; done\" &\n+  PING_LOOP_PID=$!\n+  $@ &> /tmp/build.log\n+  trap - ERR\n+  kill $PING_LOOP_PID\n+  set -x\n+}"}, {"sha": "0d218771cf1c6d81beae94bfa9dac0fad31f23ec", "filename": "src/ci/docker/dist-s390x-linux/Dockerfile", "status": "renamed", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-s390x-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-s390x-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-s390x-linux%2FDockerfile?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -60,27 +60,20 @@ COPY patches/ /tmp/patches/\n COPY s390x-linux-gnu.config build-s390x-toolchain.sh /tmp/\n RUN ./build-s390x-toolchain.sh\n \n-COPY build-netbsd-toolchain.sh /tmp/\n-RUN ./build-netbsd-toolchain.sh\n-\n USER root\n \n RUN curl -o /usr/local/bin/sccache \\\n       https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-03-24-sccache-x86_64-unknown-linux-musl && \\\n       chmod +x /usr/local/bin/sccache\n \n-ENV PATH=$PATH:/x-tools/s390x-ibm-linux-gnu/bin:/x-tools/x86_64-unknown-netbsd/bin\n+ENV PATH=$PATH:/x-tools/s390x-ibm-linux-gnu/bin\n \n ENV \\\n-    AR_x86_64_unknown_netbsd=x86_64--netbsd-ar \\\n-    CC_x86_64_unknown_netbsd=x86_64--netbsd-gcc-sysroot \\\n-    CXX_x86_64_unknown_netbsd=x86_64--netbsd-g++-sysroot \\\n     CC_s390x_unknown_linux_gnu=s390x-ibm-linux-gnu-gcc \\\n     AR_s390x_unknown_linux_gnu=s390x-ibm-linux-gnu-ar \\\n     CXX_s390x_unknown_linux_gnu=s390x-ibm-linux-gnu-g++\n \n-ENV HOSTS=x86_64-unknown-netbsd\n-ENV HOSTS=$HOSTS,s390x-unknown-linux-gnu\n+ENV HOSTS=s390x-unknown-linux-gnu\n \n ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS", "previous_filename": "src/ci/docker/dist-s390x-linux-netbsd/Dockerfile"}, {"sha": "b4995e20dc69b1058bc1577ea3e5aa535d790dd8", "filename": "src/ci/docker/dist-s390x-linux/build-s390x-toolchain.sh", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fbuild-s390x-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fbuild-s390x-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fbuild-s390x-toolchain.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "previous_filename": "src/ci/docker/dist-s390x-linux-netbsd/build-s390x-toolchain.sh"}, {"sha": "cba416ed2f70bc12990229442e23feb47a0fdd3c", "filename": "src/ci/docker/dist-s390x-linux/patches/glibc/2.12.2/001-Use-.machine-to-prevent-AS-from-complaining-about-z9.patch", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fpatches%2Fglibc%2F2.12.2%2F001-Use-.machine-to-prevent-AS-from-complaining-about-z9.patch", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fpatches%2Fglibc%2F2.12.2%2F001-Use-.machine-to-prevent-AS-from-complaining-about-z9.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fpatches%2Fglibc%2F2.12.2%2F001-Use-.machine-to-prevent-AS-from-complaining-about-z9.patch?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "previous_filename": "src/ci/docker/dist-s390x-linux-netbsd/patches/glibc/2.12.2/001-Use-.machine-to-prevent-AS-from-complaining-about-z9.patch"}, {"sha": "fa5e4510987f1ca682a642234f52353481e77e1f", "filename": "src/ci/docker/dist-s390x-linux/s390x-linux-gnu.config", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fs390x-linux-gnu.config", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fs390x-linux-gnu.config", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fs390x-linux-gnu.config?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "previous_filename": "src/ci/docker/dist-s390x-linux-netbsd/s390x-linux-gnu.config"}, {"sha": "14444d69d2a8cefd2a700f06462b427c33cf385e", "filename": "src/ci/docker/dist-x86_64-freebsd/Dockerfile", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-freebsd%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-freebsd%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-freebsd%2FDockerfile?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,39 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  git \\\n+  cmake \\\n+  sudo \\\n+  bzip2 \\\n+  xz-utils \\\n+  wget \\\n+  libssl-dev \\\n+  pkg-config\n+\n+COPY build-toolchain.sh /tmp/\n+RUN /tmp/build-toolchain.sh x86_64\n+\n+RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n+    dpkg -i dumb-init_*.deb && \\\n+    rm dumb-init_*.deb\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n+\n+RUN curl -o /usr/local/bin/sccache \\\n+      https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-03-24-sccache-x86_64-unknown-linux-musl && \\\n+      chmod +x /usr/local/bin/sccache\n+\n+ENV \\\n+    AR_x86_64_unknown_freebsd=x86_64-unknown-freebsd10-ar \\\n+    CC_x86_64_unknown_freebsd=x86_64-unknown-freebsd10-gcc \\\n+    CXX_x86_64_unknown_freebsd=x86_64-unknown-freebsd10-g++\n+\n+ENV HOSTS=x86_64-unknown-freebsd\n+\n+ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n+ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "5642e6fc937f9736e14bc23aed1fca4b045bc88a", "filename": "src/ci/docker/dist-x86_64-freebsd/build-toolchain.sh", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-freebsd%2Fbuild-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-freebsd%2Fbuild-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-freebsd%2Fbuild-toolchain.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,112 @@\n+#!/bin/bash\n+# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+ARCH=$1\n+BINUTILS=2.25.1\n+GCC=5.3.0\n+\n+hide_output() {\n+  set +x\n+  on_err=\"\n+echo ERROR: An error was encountered with the build.\n+cat /tmp/build.log\n+exit 1\n+\"\n+  trap \"$on_err\" ERR\n+  bash -c \"while true; do sleep 30; echo \\$(date) - building ...; done\" &\n+  PING_LOOP_PID=$!\n+  $@ &> /tmp/build.log\n+  trap - ERR\n+  kill $PING_LOOP_PID\n+  set -x\n+}\n+\n+mkdir binutils\n+cd binutils\n+\n+# First up, build binutils\n+curl https://ftp.gnu.org/gnu/binutils/binutils-$BINUTILS.tar.bz2 | tar xjf -\n+mkdir binutils-build\n+cd binutils-build\n+hide_output ../binutils-$BINUTILS/configure \\\n+  --target=$ARCH-unknown-freebsd10\n+hide_output make -j10\n+hide_output make install\n+cd ../..\n+rm -rf binutils\n+\n+# Next, download the FreeBSD libc and relevant header files\n+\n+mkdir freebsd\n+case \"$ARCH\" in\n+    x86_64)\n+        URL=ftp://ftp.freebsd.org/pub/FreeBSD/releases/amd64/10.2-RELEASE/base.txz\n+        ;;\n+    i686)\n+        URL=ftp://ftp.freebsd.org/pub/FreeBSD/releases/i386/10.2-RELEASE/base.txz\n+        ;;\n+esac\n+curl $URL | tar xJf - -C freebsd ./usr/include ./usr/lib ./lib\n+\n+dst=/usr/local/$ARCH-unknown-freebsd10\n+\n+cp -r freebsd/usr/include $dst/\n+cp freebsd/usr/lib/crt1.o $dst/lib\n+cp freebsd/usr/lib/Scrt1.o $dst/lib\n+cp freebsd/usr/lib/crti.o $dst/lib\n+cp freebsd/usr/lib/crtn.o $dst/lib\n+cp freebsd/usr/lib/libc.a $dst/lib\n+cp freebsd/usr/lib/libutil.a $dst/lib\n+cp freebsd/usr/lib/libutil_p.a $dst/lib\n+cp freebsd/usr/lib/libm.a $dst/lib\n+cp freebsd/usr/lib/librt.so.1 $dst/lib\n+cp freebsd/usr/lib/libexecinfo.so.1 $dst/lib\n+cp freebsd/lib/libc.so.7 $dst/lib\n+cp freebsd/lib/libm.so.5 $dst/lib\n+cp freebsd/lib/libutil.so.9 $dst/lib\n+cp freebsd/lib/libthr.so.3 $dst/lib/libpthread.so\n+\n+ln -s libc.so.7 $dst/lib/libc.so\n+ln -s libm.so.5 $dst/lib/libm.so\n+ln -s librt.so.1 $dst/lib/librt.so\n+ln -s libutil.so.9 $dst/lib/libutil.so\n+ln -s libexecinfo.so.1 $dst/lib/libexecinfo.so\n+rm -rf freebsd\n+\n+# Finally, download and build gcc to target FreeBSD\n+mkdir gcc\n+cd gcc\n+curl https://ftp.gnu.org/gnu/gcc/gcc-$GCC/gcc-$GCC.tar.bz2 | tar xjf -\n+cd gcc-$GCC\n+./contrib/download_prerequisites\n+\n+mkdir ../gcc-build\n+cd ../gcc-build\n+hide_output ../gcc-$GCC/configure                \\\n+  --enable-languages=c,c++                       \\\n+  --target=$ARCH-unknown-freebsd10               \\\n+  --disable-multilib                             \\\n+  --disable-nls                                  \\\n+  --disable-libgomp                              \\\n+  --disable-libquadmath                          \\\n+  --disable-libssp                               \\\n+  --disable-libvtv                               \\\n+  --disable-libcilkrts                           \\\n+  --disable-libada                               \\\n+  --disable-libsanitizer                         \\\n+  --disable-libquadmath-support                  \\\n+  --disable-lto\n+hide_output make -j10\n+hide_output make install\n+cd ../..\n+rm -rf gcc"}, {"sha": "bd36c75f9f06ac70e5787785beae7ad122f93f84", "filename": "src/ci/docker/dist-x86_64-linux/Dockerfile", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2FDockerfile?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,101 @@\n+FROM centos:5\n+\n+WORKDIR /build\n+\n+# Centos 5 is EOL and is no longer available from the usual mirrors, so switch\n+# to http://vault.centos.org/\n+RUN sed -i 's/enabled=1/enabled=0/' /etc/yum/pluginconf.d/fastestmirror.conf\n+RUN sed -i 's/mirrorlist/#mirrorlist/' /etc/yum.repos.d/*.repo\n+RUN sed -i 's/#\\(baseurl.*\\)mirror.centos.org/\\1107.158.252.35/' /etc/yum.repos.d/*.repo\n+\n+RUN yum upgrade -y && yum install -y \\\n+      curl \\\n+      bzip2 \\\n+      gcc \\\n+      gcc-c++ \\\n+      make \\\n+      glibc-devel \\\n+      perl \\\n+      zlib-devel \\\n+      file \\\n+      xz \\\n+      which \\\n+      pkgconfig \\\n+      wget \\\n+      autoconf \\\n+      gettext\n+\n+ENV PATH=/rustroot/bin:$PATH\n+ENV LD_LIBRARY_PATH=/rustroot/lib64:/rustroot/lib\n+ENV PKG_CONFIG_PATH=/rustroot/lib/pkgconfig\n+WORKDIR /tmp\n+COPY shared.sh build-binutils.sh /tmp/\n+\n+# We need a build of openssl which supports SNI to download artifacts from\n+# static.rust-lang.org. This'll be used to link into libcurl below (and used\n+# later as well), so build a copy of OpenSSL with dynamic libraries into our\n+# generic root.\n+COPY build-openssl.sh /tmp/\n+RUN ./build-openssl.sh\n+\n+# The `curl` binary on CentOS doesn't support SNI which is needed for fetching\n+# some https urls we have, so install a new version of libcurl + curl which is\n+# using the openssl we just built previously.\n+#\n+# Note that we also disable a bunch of optional features of curl that we don't\n+# really need.\n+COPY build-curl.sh /tmp/\n+RUN ./build-curl.sh\n+\n+# binutils < 2.22 has a bug where the 32-bit executables it generates\n+# immediately segfault in Rust, so we need to install our own binutils.\n+#\n+# See https://github.com/rust-lang/rust/issues/20440 for more info\n+RUN ./build-binutils.sh\n+\n+# Need a newer version of gcc than centos has to compile LLVM nowadays\n+COPY build-gcc.sh /tmp/\n+RUN ./build-gcc.sh\n+\n+# CentOS 5.5 has Python 2.4 by default, but LLVM needs 2.7+\n+COPY build-python.sh /tmp/\n+RUN ./build-python.sh\n+\n+# Apparently CentOS 5.5 desn't have `git` in yum, but we're gonna need it for\n+# cloning, so download and build it here.\n+COPY build-git.sh /tmp/\n+RUN ./build-git.sh\n+\n+# libssh2 (a dependency of Cargo) requires cmake 2.8.11 or higher but CentOS\n+# only has 2.6.4, so build our own\n+COPY build-cmake.sh /tmp/\n+RUN ./build-cmake.sh\n+\n+# for sanitizers, we need kernel headers files newer than the ones CentOS ships\n+# with so we install newer ones here\n+COPY build-headers.sh /tmp/\n+RUN ./build-headers.sh\n+\n+RUN curl -Lo /rustroot/dumb-init \\\n+      https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 && \\\n+      chmod +x /rustroot/dumb-init\n+ENTRYPOINT [\"/rustroot/dumb-init\", \"--\"]\n+\n+RUN curl -o /usr/local/bin/sccache \\\n+      https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-03-24-sccache-x86_64-unknown-linux-musl && \\\n+      chmod +x /usr/local/bin/sccache\n+\n+ENV HOSTS=x86_64-unknown-linux-gnu\n+\n+ENV RUST_CONFIGURE_ARGS \\\n+      --host=$HOSTS \\\n+      --enable-extended \\\n+      --enable-sanitizers\n+ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS\n+\n+# This is the only builder which will create source tarballs\n+ENV DIST_SRC 1\n+\n+# When we build cargo in this container, we don't want it to use the system\n+# libcurl, instead it should compile its own.\n+ENV LIBCURL_NO_PKG_CONFIG 1"}, {"sha": "80aa1f2a0161308affc245daaf2952f973643918", "filename": "src/ci/docker/dist-x86_64-linux/build-binutils.sh", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-binutils.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-binutils.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-binutils.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,26 @@\n+#!/bin/bash\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+source shared.sh\n+\n+curl https://ftp.gnu.org/gnu/binutils/binutils-2.25.1.tar.bz2 | tar xfj -\n+\n+mkdir binutils-build\n+cd binutils-build\n+hide_output ../binutils-2.25.1/configure --prefix=/rustroot\n+hide_output make -j10\n+hide_output make install\n+\n+cd ..\n+rm -rf binutils-build\n+rm -rf binutils-2.25.1"}, {"sha": "82e46455cb0f0673fef2fe6442d25aa7c4b8d976", "filename": "src/ci/docker/dist-x86_64-linux/build-cmake.sh", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-cmake.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-cmake.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-cmake.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,25 @@\n+#!/bin/bash\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+source shared.sh\n+\n+curl https://cmake.org/files/v3.6/cmake-3.6.3.tar.gz | tar xzf -\n+\n+mkdir cmake-build\n+cd cmake-build\n+hide_output ../cmake-3.6.3/configure --prefix=/rustroot\n+hide_output make -j10\n+hide_output make install\n+\n+cd ..\n+rm -rf cmake-build\n+rm -rf cmake-3.6.3"}, {"sha": "b7d22755a571bab38aa4d85629fa69cbec041c24", "filename": "src/ci/docker/dist-x86_64-linux/build-curl.sh", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-curl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-curl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-curl.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,43 @@\n+#!/bin/bash\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+source shared.sh\n+\n+VERSION=7.51.0\n+\n+curl http://cool.haxx.se/download/curl-$VERSION.tar.bz2 | tar xjf -\n+\n+mkdir curl-build\n+cd curl-build\n+hide_output ../curl-$VERSION/configure \\\n+      --prefix=/rustroot \\\n+      --with-ssl=/rustroot \\\n+      --disable-sspi \\\n+      --disable-gopher \\\n+      --disable-smtp \\\n+      --disable-smb \\\n+      --disable-imap \\\n+      --disable-pop3 \\\n+      --disable-tftp \\\n+      --disable-telnet \\\n+      --disable-manual \\\n+      --disable-dict \\\n+      --disable-rtsp \\\n+      --disable-ldaps \\\n+      --disable-ldap\n+hide_output make -j10\n+hide_output make install\n+\n+cd ..\n+rm -rf curl-build\n+rm -rf curl-$VERSION\n+yum erase -y curl"}, {"sha": "ab2562538d6d7376e942a219ce0f00664082be9f", "filename": "src/ci/docker/dist-x86_64-linux/build-gcc.sh", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-gcc.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-gcc.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-gcc.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,33 @@\n+#!/bin/bash\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+source shared.sh\n+\n+GCC=4.8.5\n+\n+curl https://ftp.gnu.org/gnu/gcc/gcc-$GCC/gcc-$GCC.tar.bz2 | tar xjf -\n+cd gcc-$GCC\n+./contrib/download_prerequisites\n+mkdir ../gcc-build\n+cd ../gcc-build\n+hide_output ../gcc-$GCC/configure \\\n+    --prefix=/rustroot \\\n+    --enable-languages=c,c++\n+hide_output make -j10\n+hide_output make install\n+ln -nsf gcc /rustroot/bin/cc\n+\n+cd ..\n+rm -rf gcc-build\n+rm -rf gcc-$GCC\n+yum erase -y gcc gcc-c++ binutils"}, {"sha": "92fa66b496d933648a0e49c3f83b6565246188a7", "filename": "src/ci/docker/dist-x86_64-linux/build-git.sh", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-git.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-git.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-git.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,24 @@\n+#!/bin/bash\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+source shared.sh\n+\n+curl https://www.kernel.org/pub/software/scm/git/git-2.10.0.tar.gz | tar xzf -\n+\n+cd git-2.10.0\n+make configure\n+hide_output ./configure --prefix=/rustroot\n+hide_output make -j10\n+hide_output make install\n+\n+cd ..\n+rm -rf git-2.10.0"}, {"sha": "4ce38fd9205e27b4aff8b169f4ead5c31f731993", "filename": "src/ci/docker/dist-x86_64-linux/build-headers.sh", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-headers.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-headers.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-headers.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,25 @@\n+#!/bin/bash\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+source shared.sh\n+\n+curl https://cdn.kernel.org/pub/linux/kernel/v3.x/linux-3.2.84.tar.xz | unxz | tar x\n+\n+cd linux-3.2.84\n+hide_output make mrproper\n+hide_output make INSTALL_HDR_PATH=dest headers_install\n+\n+find dest/include \\( -name .install -o -name ..install.cmd \\) -delete\n+yes | cp -fr dest/include/* /usr/include\n+\n+cd ..\n+rm -rf linux-3.2.84"}, {"sha": "64b1abf82a8277d8ebc1a10c54b40fd7be583bd4", "filename": "src/ci/docker/dist-x86_64-linux/build-openssl.sh", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-openssl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-openssl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-openssl.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,27 @@\n+#!/bin/bash\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+source shared.sh\n+\n+VERSION=1.0.2j\n+\n+curl https://www.openssl.org/source/openssl-$VERSION.tar.gz | tar xzf -\n+\n+cd openssl-$VERSION\n+hide_output ./config --prefix=/rustroot shared -fPIC\n+hide_output make -j10\n+hide_output make install\n+cd ..\n+rm -rf openssl-$VERSION\n+\n+# Make the system cert collection available to the new install.\n+ln -nsf /etc/pki/tls/cert.pem /rustroot/ssl/"}, {"sha": "a7a450f3c8de772403b481b96c94b03d5ec2325e", "filename": "src/ci/docker/dist-x86_64-linux/build-python.sh", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-python.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-python.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-python.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,30 @@\n+#!/bin/bash\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+source shared.sh\n+\n+curl https://www.python.org/ftp/python/2.7.12/Python-2.7.12.tgz | \\\n+  tar xzf -\n+\n+mkdir python-build\n+cd python-build\n+\n+# Gotta do some hackery to tell python about our custom OpenSSL build, but other\n+# than that fairly normal.\n+CFLAGS='-I /rustroot/include' LDFLAGS='-L /rustroot/lib -L /rustroot/lib64' \\\n+    hide_output ../Python-2.7.12/configure --prefix=/rustroot\n+hide_output make -j10\n+hide_output make install\n+\n+cd ..\n+rm -rf python-build\n+rm -rf Python-2.7.12"}, {"sha": "97e6d2908cf8a5ae3174e1bc08a17ea27fa3aae5", "filename": "src/ci/docker/dist-x86_64-linux/shared.sh", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fshared.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fshared.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fshared.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,25 @@\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+hide_output() {\n+  set +x\n+  on_err=\"\n+echo ERROR: An error was encountered with the build.\n+cat /tmp/build.log\n+exit 1\n+\"\n+  trap \"$on_err\" ERR\n+  bash -c \"while true; do sleep 30; echo \\$(date) - building ...; done\" &\n+  PING_LOOP_PID=$!\n+  $@ &> /tmp/build.log\n+  trap - ERR\n+  kill $PING_LOOP_PID\n+  set -x\n+}"}, {"sha": "053300b9c1688a4cc1eefb3c887681e43c6188e1", "filename": "src/ci/docker/dist-x86_64-netbsd/Dockerfile", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2FDockerfile?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "patch": "@@ -0,0 +1,78 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  automake \\\n+  bison \\\n+  bzip2 \\\n+  ca-certificates \\\n+  cmake \\\n+  curl \\\n+  file \\\n+  flex \\\n+  g++ \\\n+  gawk \\\n+  gdb \\\n+  git \\\n+  gperf \\\n+  help2man \\\n+  libncurses-dev \\\n+  libtool-bin \\\n+  make \\\n+  patch \\\n+  python2.7 \\\n+  sudo \\\n+  texinfo \\\n+  wget \\\n+  xz-utils \\\n+  libssl-dev \\\n+  pkg-config\n+\n+RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n+    dpkg -i dumb-init_*.deb && \\\n+    rm dumb-init_*.deb\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n+\n+# Ubuntu 16.04 (this contianer) ships with make 4, but something in the\n+# toolchains we build below chokes on that, so go back to make 3\n+RUN curl https://ftp.gnu.org/gnu/make/make-3.81.tar.gz | tar xzf - && \\\n+      cd make-3.81 && \\\n+      ./configure --prefix=/usr && \\\n+      make && \\\n+      make install && \\\n+      cd .. && \\\n+      rm -rf make-3.81\n+\n+RUN curl http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.22.0.tar.bz2 | \\\n+      tar xjf - && \\\n+      cd crosstool-ng && \\\n+      ./configure --prefix=/usr/local && \\\n+      make -j$(nproc) && \\\n+      make install && \\\n+      cd .. && \\\n+      rm -rf crosstool-ng\n+\n+RUN groupadd -r rustbuild && useradd -m -r -g rustbuild rustbuild\n+RUN mkdir /x-tools && chown rustbuild:rustbuild /x-tools\n+USER rustbuild\n+WORKDIR /tmp\n+\n+COPY build-netbsd-toolchain.sh /tmp/\n+RUN ./build-netbsd-toolchain.sh\n+\n+USER root\n+\n+RUN curl -o /usr/local/bin/sccache \\\n+      https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-03-24-sccache-x86_64-unknown-linux-musl && \\\n+      chmod +x /usr/local/bin/sccache\n+\n+ENV PATH=$PATH:/x-tools/x86_64-unknown-netbsd/bin\n+\n+ENV \\\n+    AR_x86_64_unknown_netbsd=x86_64--netbsd-ar \\\n+    CC_x86_64_unknown_netbsd=x86_64--netbsd-gcc-sysroot \\\n+    CXX_x86_64_unknown_netbsd=x86_64--netbsd-g++-sysroot\n+\n+ENV HOSTS=x86_64-unknown-netbsd\n+\n+ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n+ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "ea335a249736c703296840774638e609961625c1", "filename": "src/ci/docker/dist-x86_64-netbsd/build-netbsd-toolchain.sh", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2Fbuild-netbsd-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2564711e803f62e04bebf10408cc1c11297c0caf/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2Fbuild-netbsd-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2Fbuild-netbsd-toolchain.sh?ref=2564711e803f62e04bebf10408cc1c11297c0caf", "previous_filename": "src/ci/docker/dist-s390x-linux-netbsd/build-netbsd-toolchain.sh"}]}