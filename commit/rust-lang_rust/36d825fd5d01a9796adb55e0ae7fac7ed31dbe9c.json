{"sha": "36d825fd5d01a9796adb55e0ae7fac7ed31dbe9c", "node_id": "C_kwDOAAsO6NoAKDM2ZDgyNWZkNWQwMWE5Nzk2YWRiNTVlMGFlN2ZhYzdlZDMxZGJlOWM", "commit": {"author": {"name": "Amos Wenger", "email": "amoswenger@gmail.com", "date": "2022-07-21T16:29:28Z"}, "committer": {"name": "Amos Wenger", "email": "amoswenger@gmail.com", "date": "2022-07-21T16:29:28Z"}, "message": "Add test for literals created client-side", "tree": {"sha": "f967751e894064f19b78a1c1dc177236e810e1dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f967751e894064f19b78a1c1dc177236e810e1dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36d825fd5d01a9796adb55e0ae7fac7ed31dbe9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36d825fd5d01a9796adb55e0ae7fac7ed31dbe9c", "html_url": "https://github.com/rust-lang/rust/commit/36d825fd5d01a9796adb55e0ae7fac7ed31dbe9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36d825fd5d01a9796adb55e0ae7fac7ed31dbe9c/comments", "author": {"login": "fasterthanlime", "id": 7998310, "node_id": "MDQ6VXNlcjc5OTgzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7998310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasterthanlime", "html_url": "https://github.com/fasterthanlime", "followers_url": "https://api.github.com/users/fasterthanlime/followers", "following_url": "https://api.github.com/users/fasterthanlime/following{/other_user}", "gists_url": "https://api.github.com/users/fasterthanlime/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasterthanlime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasterthanlime/subscriptions", "organizations_url": "https://api.github.com/users/fasterthanlime/orgs", "repos_url": "https://api.github.com/users/fasterthanlime/repos", "events_url": "https://api.github.com/users/fasterthanlime/events{/privacy}", "received_events_url": "https://api.github.com/users/fasterthanlime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fasterthanlime", "id": 7998310, "node_id": "MDQ6VXNlcjc5OTgzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7998310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasterthanlime", "html_url": "https://github.com/fasterthanlime", "followers_url": "https://api.github.com/users/fasterthanlime/followers", "following_url": "https://api.github.com/users/fasterthanlime/following{/other_user}", "gists_url": "https://api.github.com/users/fasterthanlime/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasterthanlime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasterthanlime/subscriptions", "organizations_url": "https://api.github.com/users/fasterthanlime/orgs", "repos_url": "https://api.github.com/users/fasterthanlime/repos", "events_url": "https://api.github.com/users/fasterthanlime/events{/privacy}", "received_events_url": "https://api.github.com/users/fasterthanlime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32ee097580fe473bcdbae5f422c93e99dec348a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/32ee097580fe473bcdbae5f422c93e99dec348a3", "html_url": "https://github.com/rust-lang/rust/commit/32ee097580fe473bcdbae5f422c93e99dec348a3"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "30e1ea334359ecafaf23065ffffea8efcb0d064a", "filename": "crates/proc-macro-srv/src/tests/mod.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/36d825fd5d01a9796adb55e0ae7fac7ed31dbe9c/crates%2Fproc-macro-srv%2Fsrc%2Ftests%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36d825fd5d01a9796adb55e0ae7fac7ed31dbe9c/crates%2Fproc-macro-srv%2Fsrc%2Ftests%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Ftests%2Fmod.rs?ref=36d825fd5d01a9796adb55e0ae7fac7ed31dbe9c", "patch": "@@ -56,6 +56,35 @@ fn test_fn_like_macro_clone_ident_subtree() {\n     );\n }\n \n+#[test]\n+fn test_fn_like_macro_clone_raw_ident() {\n+    assert_expand(\n+        \"fn_like_clone_tokens\",\n+        \"r#\\\"ident\\\"#\",\n+        expect![[r##\"\n+            SUBTREE $\n+              LITERAL r#\"ident\"# 4294967295\"##]],\n+    );\n+}\n+\n+#[test]\n+fn test_fn_like_mk_literals() {\n+    assert_expand(\n+        \"fn_like_mk_literals\",\n+        r#\"\"#,\n+        expect![[r#\"\n+            SUBTREE $\n+              LITERAL b\"byte_string\" 4294967295\n+              LITERAL 'c' 4294967295\n+              LITERAL \"string\" 4294967295\n+              LITERAL \"maybe \\\"raw\\\"?\" 4294967295\n+              LITERAL 3.14f64 4294967295\n+              LITERAL 3.14 4294967295\n+              LITERAL 123i64 4294967295\n+              LITERAL 123 4294967295\"#]],\n+    );\n+}\n+\n #[test]\n fn test_fn_like_macro_clone_literals() {\n     assert_expand(\n@@ -105,6 +134,7 @@ fn list_test_macros() {\n         fn_like_panic [FuncLike]\n         fn_like_error [FuncLike]\n         fn_like_clone_tokens [FuncLike]\n+        fn_like_mk_literals [FuncLike]\n         attr_noop [Attr]\n         attr_panic [Attr]\n         attr_error [Attr]"}, {"sha": "d18b357a040b2a0ba244062fbd8c485445d2b7f9", "filename": "crates/proc-macro-test/imp/src/lib.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/36d825fd5d01a9796adb55e0ae7fac7ed31dbe9c/crates%2Fproc-macro-test%2Fimp%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36d825fd5d01a9796adb55e0ae7fac7ed31dbe9c/crates%2Fproc-macro-test%2Fimp%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-test%2Fimp%2Fsrc%2Flib.rs?ref=36d825fd5d01a9796adb55e0ae7fac7ed31dbe9c", "patch": "@@ -24,6 +24,22 @@ pub fn fn_like_clone_tokens(args: TokenStream) -> TokenStream {\n     clone_stream(args)\n }\n \n+#[proc_macro]\n+pub fn fn_like_mk_literals(_args: TokenStream) -> TokenStream {\n+    let trees: Vec<TokenTree> = vec![\n+        TokenTree::from(Literal::byte_string(b\"byte_string\")),\n+        TokenTree::from(Literal::character('c')),\n+        TokenTree::from(Literal::string(\"string\")),\n+        // as of 2022-07-21, there's no method on `Literal` to build a raw\n+        // string or a raw byte string\n+        TokenTree::from(Literal::f64_suffixed(3.14)),\n+        TokenTree::from(Literal::f64_unsuffixed(3.14)),\n+        TokenTree::from(Literal::i64_suffixed(123)),\n+        TokenTree::from(Literal::i64_unsuffixed(123)),\n+    ];\n+    TokenStream::from_iter(trees)\n+}\n+\n #[proc_macro_attribute]\n pub fn attr_noop(_args: TokenStream, item: TokenStream) -> TokenStream {\n     item"}]}