{"sha": "e83da7533cdabb4ac99e53495686135233b23f9d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4M2RhNzUzM2NkYWJiNGFjOTllNTM0OTU2ODYxMzUyMzNiMjNmOWQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-16T16:35:47Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-16T16:35:47Z"}, "message": "Move trapping to trap_code.rs", "tree": {"sha": "b9632542b0cdb7bcd4b6849cd8233cb0e7f3c1c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9632542b0cdb7bcd4b6849cd8233cb0e7f3c1c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e83da7533cdabb4ac99e53495686135233b23f9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e83da7533cdabb4ac99e53495686135233b23f9d", "html_url": "https://github.com/rust-lang/rust/commit/e83da7533cdabb4ac99e53495686135233b23f9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e83da7533cdabb4ac99e53495686135233b23f9d/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf287e3a0518c73741ecd4140aaf0181d3f74660", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf287e3a0518c73741ecd4140aaf0181d3f74660", "html_url": "https://github.com/rust-lang/rust/commit/cf287e3a0518c73741ecd4140aaf0181d3f74660"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "ea00dd790eba2136af466a4449e620e9083c8c51", "filename": "src/abi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e83da7533cdabb4ac99e53495686135233b23f9d/src%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e83da7533cdabb4ac99e53495686135233b23f9d/src%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi.rs?ref=e83da7533cdabb4ac99e53495686135233b23f9d", "patch": "@@ -504,7 +504,7 @@ pub fn codegen_terminator_call<'a, 'tcx: 'a>(\n         let ret_ebb = fx.get_ebb(dest);\n         fx.bcx.ins().jump(ret_ebb, &[]);\n     } else {\n-        fx.bcx.ins().trap(TrapCode::User(!0));\n+        trap_unreachable(&mut fx.bcx);\n     }\n }\n "}, {"sha": "ab3dc7aa5bab9ae29e57097c83902b8047005e85", "filename": "src/base.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e83da7533cdabb4ac99e53495686135233b23f9d/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e83da7533cdabb4ac99e53495686135233b23f9d/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=e83da7533cdabb4ac99e53495686135233b23f9d", "patch": "@@ -202,7 +202,7 @@ fn codegen_fn_content<'a, 'tcx: 'a>(fx: &mut FunctionCx<'a, 'tcx, impl Backend>)\n                 } else {\n                     fx.bcx.ins().brz(cond, target, &[]);\n                 };\n-                fx.bcx.ins().trap(TrapCode::User(!0));\n+                trap_panic(&mut fx.bcx);\n             }\n \n             TerminatorKind::SwitchInt {\n@@ -230,7 +230,7 @@ fn codegen_fn_content<'a, 'tcx: 'a>(fx: &mut FunctionCx<'a, 'tcx, impl Backend>)\n                 crate::abi::codegen_terminator_call(fx, func, args, destination);\n             }\n             TerminatorKind::Resume | TerminatorKind::Abort | TerminatorKind::Unreachable => {\n-                fx.bcx.ins().trap(TrapCode::User(!0));\n+                trap_unreachable(&mut fx.bcx);\n             }\n             TerminatorKind::Yield { .. }\n             | TerminatorKind::FalseEdges { .. }\n@@ -680,7 +680,7 @@ pub fn trans_get_discriminant<'a, 'tcx: 'a>(\n     let layout = value.layout();\n \n     if layout.abi == layout::Abi::Uninhabited {\n-        fx.bcx.ins().trap(TrapCode::User(!0));\n+        trap_unreachable(&mut fx.bcx);\n     }\n     match layout.variants {\n         layout::Variants::Single { index } => {"}, {"sha": "fde28eb3e36d9e9350954311aa0bd63a1c4916ed", "filename": "src/intrinsics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e83da7533cdabb4ac99e53495686135233b23f9d/src%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e83da7533cdabb4ac99e53495686135233b23f9d/src%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics.rs?ref=e83da7533cdabb4ac99e53495686135233b23f9d", "patch": "@@ -101,10 +101,10 @@ pub fn codegen_intrinsic_call<'a, 'tcx: 'a>(\n             // Insert non returning intrinsics here\n             match intrinsic {\n                 \"abort\" => {\n-                    fx.bcx.ins().trap(TrapCode::User(!0 - 1));\n+                    trap_panic(&mut fx.bcx);\n                 }\n                 \"unreachable\" => {\n-                    fx.bcx.ins().trap(TrapCode::User(!0 - 1));\n+                    trap_unreachable(&mut fx.bcx);\n                 }\n                 _ => unimplemented!(\"unsupported instrinsic {}\", intrinsic),\n             }\n@@ -423,6 +423,6 @@ pub fn codegen_intrinsic_call<'a, 'tcx: 'a>(\n         let ret_ebb = fx.get_ebb(dest);\n         fx.bcx.ins().jump(ret_ebb, &[]);\n     } else {\n-        fx.bcx.ins().trap(TrapCode::User(!0));\n+        trap_unreachable(&mut fx.bcx);\n     }\n }"}, {"sha": "95cd7704e20c7462e30d89025b1b1be9a1084f6f", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e83da7533cdabb4ac99e53495686135233b23f9d/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e83da7533cdabb4ac99e53495686135233b23f9d/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=e83da7533cdabb4ac99e53495686135233b23f9d", "patch": "@@ -81,6 +81,7 @@ mod link_copied;\n mod main_shim;\n mod metadata;\n mod pretty_clif;\n+mod trap;\n mod vtable;\n \n mod prelude {\n@@ -121,6 +122,7 @@ mod prelude {\n     pub use crate::abi::*;\n     pub use crate::base::{trans_operand, trans_place};\n     pub use crate::common::*;\n+    pub use crate::trap::*;\n     pub use crate::{Caches, CodegenResults, CrateInfo};\n }\n "}, {"sha": "1d264b209986ec8fd0830db2f67f01cfbb652a2e", "filename": "src/trap.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e83da7533cdabb4ac99e53495686135233b23f9d/src%2Ftrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e83da7533cdabb4ac99e53495686135233b23f9d/src%2Ftrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftrap.rs?ref=e83da7533cdabb4ac99e53495686135233b23f9d", "patch": "@@ -0,0 +1,12 @@\n+use cranelift::prelude::*;\n+use cranelift::codegen::ir::TrapCode;\n+\n+/// Trap code: user0\n+pub fn trap_panic(bcx: &mut FunctionBuilder) {\n+    bcx.ins().trap(TrapCode::User(0));\n+}\n+\n+/// Trap code: user65535\n+pub fn trap_unreachable(bcx: &mut FunctionBuilder) {\n+    bcx.ins().trap(TrapCode::User(!0));\n+}"}]}