{"sha": "ebffaa427481935caac550c62458ee94917c3995", "node_id": "C_kwDOAAsO6NoAKGViZmZhYTQyNzQ4MTkzNWNhYWM1NTBjNjI0NThlZTk0OTE3YzM5OTU", "commit": {"author": {"name": "rainy-me", "email": "github@yue.coffee", "date": "2021-11-20T16:48:04Z"}, "committer": {"name": "rainy-me", "email": "github@yue.coffee", "date": "2021-11-20T16:48:04Z"}, "message": "fix: check inline left of binary_expression", "tree": {"sha": "2c2601749dc66a8e9f585822c7b60a83f76bd6f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c2601749dc66a8e9f585822c7b60a83f76bd6f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebffaa427481935caac550c62458ee94917c3995", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebffaa427481935caac550c62458ee94917c3995", "html_url": "https://github.com/rust-lang/rust/commit/ebffaa427481935caac550c62458ee94917c3995", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebffaa427481935caac550c62458ee94917c3995/comments", "author": {"login": "yue4u", "id": 26110087, "node_id": "MDQ6VXNlcjI2MTEwMDg3", "avatar_url": "https://avatars.githubusercontent.com/u/26110087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yue4u", "html_url": "https://github.com/yue4u", "followers_url": "https://api.github.com/users/yue4u/followers", "following_url": "https://api.github.com/users/yue4u/following{/other_user}", "gists_url": "https://api.github.com/users/yue4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/yue4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yue4u/subscriptions", "organizations_url": "https://api.github.com/users/yue4u/orgs", "repos_url": "https://api.github.com/users/yue4u/repos", "events_url": "https://api.github.com/users/yue4u/events{/privacy}", "received_events_url": "https://api.github.com/users/yue4u/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yue4u", "id": 26110087, "node_id": "MDQ6VXNlcjI2MTEwMDg3", "avatar_url": "https://avatars.githubusercontent.com/u/26110087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yue4u", "html_url": "https://github.com/yue4u", "followers_url": "https://api.github.com/users/yue4u/followers", "following_url": "https://api.github.com/users/yue4u/following{/other_user}", "gists_url": "https://api.github.com/users/yue4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/yue4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yue4u/subscriptions", "organizations_url": "https://api.github.com/users/yue4u/orgs", "repos_url": "https://api.github.com/users/yue4u/repos", "events_url": "https://api.github.com/users/yue4u/events{/privacy}", "received_events_url": "https://api.github.com/users/yue4u/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0da9406bcbde1bc727242b481d8de825e84f59a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0da9406bcbde1bc727242b481d8de825e84f59a", "html_url": "https://github.com/rust-lang/rust/commit/f0da9406bcbde1bc727242b481d8de825e84f59a"}], "stats": {"total": 68, "additions": 67, "deletions": 1}, "files": [{"sha": "d88e3fdcd32ae6d51973cb9007fc6b7cd0276f0a", "filename": "crates/ide_assists/src/handlers/inline_call.rs", "status": "modified", "additions": 67, "deletions": 1, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/ebffaa427481935caac550c62458ee94917c3995/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebffaa427481935caac550c62458ee94917c3995/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_call.rs?ref=ebffaa427481935caac550c62458ee94917c3995", "patch": "@@ -407,7 +407,17 @@ fn inline(\n \n     match body.tail_expr() {\n         Some(expr) if body.statements().next().is_none() => expr,\n-        _ => ast::Expr::BlockExpr(body),\n+        _ => match node\n+            .syntax()\n+            .parent()\n+            .and_then(ast::BinExpr::cast)\n+            .and_then(|bin_expr| bin_expr.lhs())\n+        {\n+            Some(lhs) if lhs.syntax() == node.syntax() => {\n+                make::expr_paren(ast::Expr::BlockExpr(body)).clone_for_update()\n+            }\n+            _ => ast::Expr::BlockExpr(body),\n+        },\n     }\n }\n \n@@ -1076,4 +1086,60 @@ fn main() {\n \"#,\n         );\n     }\n+\n+    #[test]\n+    fn inline_callers_wrapped_in_parentheses() {\n+        check_assist(\n+            inline_into_callers,\n+            r#\"\n+fn foo$0() -> u32 {\n+    let x = 0;\n+    x\n+}\n+fn bar() -> u32 {\n+    foo() + foo()\n+}\n+\"#,\n+            r#\"\n+\n+fn bar() -> u32 {\n+    ({\n+        let x = 0;\n+        x\n+    }) + {\n+        let x = 0;\n+        x\n+    }\n+}\n+\"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn inline_call_wrapped_in_parentheses() {\n+        check_assist(\n+            inline_call,\n+            r#\"\n+fn foo() -> u32 {\n+    let x = 0;\n+    x\n+}\n+fn bar() -> u32 {\n+    foo$0() + foo()\n+}\n+\"#,\n+            r#\"\n+fn foo() -> u32 {\n+    let x = 0;\n+    x\n+}\n+fn bar() -> u32 {\n+    ({\n+        let x = 0;\n+        x\n+    }) + foo()\n+}\n+\"#,\n+        )\n+    }\n }"}]}