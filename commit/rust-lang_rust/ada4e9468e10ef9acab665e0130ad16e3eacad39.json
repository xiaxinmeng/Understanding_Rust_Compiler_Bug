{"sha": "ada4e9468e10ef9acab665e0130ad16e3eacad39", "node_id": "C_kwDOAAsO6NoAKGFkYTRlOTQ2OGUxMGVmOWFjYWI2NjVlMDEzMGFkMTZlM2VhY2FkMzk", "commit": {"author": {"name": "Tshepang Mbambo", "email": "tshepang@gmail.com", "date": "2023-02-22T23:50:38Z"}, "committer": {"name": "Tshepang Mbambo", "email": "tshepang@gmail.com", "date": "2023-02-22T23:50:38Z"}, "message": "hir-analysis: make where-clause-on-main diagnostic translatable", "tree": {"sha": "d8f2433e223ac739715d784955c12f30ff1010b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8f2433e223ac739715d784955c12f30ff1010b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ada4e9468e10ef9acab665e0130ad16e3eacad39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ada4e9468e10ef9acab665e0130ad16e3eacad39", "html_url": "https://github.com/rust-lang/rust/commit/ada4e9468e10ef9acab665e0130ad16e3eacad39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ada4e9468e10ef9acab665e0130ad16e3eacad39/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdbc4329cb781c7768ffa6d76c8fa2d032d3fe20", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdbc4329cb781c7768ffa6d76c8fa2d032d3fe20", "html_url": "https://github.com/rust-lang/rust/commit/fdbc4329cb781c7768ffa6d76c8fa2d032d3fe20"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "7e3a31f335558d2dc1db5634f0491ff7d49f1ed2", "filename": "compiler/rustc_hir_analysis/locales/en-US.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ada4e9468e10ef9acab665e0130ad16e3eacad39/compiler%2Frustc_hir_analysis%2Flocales%2Fen-US.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/ada4e9468e10ef9acab665e0130ad16e3eacad39/compiler%2Frustc_hir_analysis%2Flocales%2Fen-US.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Flocales%2Fen-US.ftl?ref=ada4e9468e10ef9acab665e0130ad16e3eacad39", "patch": "@@ -127,5 +127,8 @@ hir_analysis_auto_deref_reached_recursion_limit = reached the recursion limit wh\n     .label = deref recursion limit reached\n     .help = consider increasing the recursion limit by adding a `#![recursion_limit = \"{$suggested_limit}\"]` attribute to your crate (`{$crate_name}`)\n \n+hir_analysis_where_clause_on_main = `main` function is not allowed to have a `where` clause\n+    .label = `main` cannot have a `where` clause\n+\n hir_analysis_track_caller_on_main = `main` function is not allowed to be `#[track_caller]`\n     .label = `main` function is not allowed to be `#[track_caller]`"}, {"sha": "d0fb7aff30eaa67df8beb2b9daf2ece5fa4360be", "filename": "compiler/rustc_hir_analysis/src/errors.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ada4e9468e10ef9acab665e0130ad16e3eacad39/compiler%2Frustc_hir_analysis%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ada4e9468e10ef9acab665e0130ad16e3eacad39/compiler%2Frustc_hir_analysis%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Ferrors.rs?ref=ada4e9468e10ef9acab665e0130ad16e3eacad39", "patch": "@@ -316,6 +316,15 @@ pub struct AutoDerefReachedRecursionLimit<'a> {\n     pub crate_name: Symbol,\n }\n \n+#[derive(Diagnostic)]\n+#[diag(hir_analysis_where_clause_on_main, code = \"E0646\")]\n+pub(crate) struct WhereClauseOnMain {\n+    #[primary_span]\n+    pub span: Span,\n+    #[label]\n+    pub generics_span: Option<Span>,\n+}\n+\n #[derive(Diagnostic)]\n #[diag(hir_analysis_track_caller_on_main)]\n pub(crate) struct TrackCallerOnMain {"}, {"sha": "9a43ca685e3f3b8aae037c767985ea96228e0d2b", "filename": "compiler/rustc_hir_analysis/src/lib.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ada4e9468e10ef9acab665e0130ad16e3eacad39/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ada4e9468e10ef9acab665e0130ad16e3eacad39/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs?ref=ada4e9468e10ef9acab665e0130ad16e3eacad39", "patch": "@@ -271,16 +271,10 @@ fn check_main_fn_ty(tcx: TyCtxt<'_>, main_def_id: DefId) {\n     } else if !main_fn_predicates.predicates.is_empty() {\n         // generics may bring in implicit predicates, so we skip this check if generics is present.\n         let generics_where_clauses_span = main_fn_where_clauses_span(tcx, main_def_id);\n-        let mut diag = struct_span_err!(\n-            tcx.sess,\n-            generics_where_clauses_span.unwrap_or(main_span),\n-            E0646,\n-            \"`main` function is not allowed to have a `where` clause\"\n-        );\n-        if let Some(generics_where_clauses_span) = generics_where_clauses_span {\n-            diag.span_label(generics_where_clauses_span, \"`main` cannot have a `where` clause\");\n-        }\n-        diag.emit();\n+        tcx.sess.emit_err(errors::WhereClauseOnMain {\n+            span: generics_where_clauses_span.unwrap_or(main_span),\n+            generics_span: generics_where_clauses_span,\n+        });\n         error = true;\n     }\n "}]}