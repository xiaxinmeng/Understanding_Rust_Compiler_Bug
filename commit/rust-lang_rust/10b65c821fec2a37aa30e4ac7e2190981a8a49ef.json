{"sha": "10b65c821fec2a37aa30e4ac7e2190981a8a49ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwYjY1YzgyMWZlYzJhMzdhYTMwZTRhYzdlMjE5MDk4MWE4YTQ5ZWY=", "commit": {"author": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2020-11-18T17:19:38Z"}, "committer": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2021-07-12T20:48:14Z"}, "message": "Make BTreeSet::split_off name elements like other set methods do", "tree": {"sha": "70c87f16e688d4476016e3960aedbb3373d872ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70c87f16e688d4476016e3960aedbb3373d872ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10b65c821fec2a37aa30e4ac7e2190981a8a49ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10b65c821fec2a37aa30e4ac7e2190981a8a49ef", "html_url": "https://github.com/rust-lang/rust/commit/10b65c821fec2a37aa30e4ac7e2190981a8a49ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10b65c821fec2a37aa30e4ac7e2190981a8a49ef/comments", "author": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5a2ccee81406303324016d03399fac68ceb6718", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5a2ccee81406303324016d03399fac68ceb6718", "html_url": "https://github.com/rust-lang/rust/commit/b5a2ccee81406303324016d03399fac68ceb6718"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "be740b05fb8ee78b96fce064f7337e63797c45bc", "filename": "library/alloc/src/collections/btree/set.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/10b65c821fec2a37aa30e4ac7e2190981a8a49ef/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10b65c821fec2a37aa30e4ac7e2190981a8a49ef/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs?ref=10b65c821fec2a37aa30e4ac7e2190981a8a49ef", "patch": "@@ -903,8 +903,8 @@ impl<T> BTreeSet<T> {\n         self.map.append(&mut other.map);\n     }\n \n-    /// Splits the collection into two at the given key. Returns everything after the given key,\n-    /// including the key.\n+    /// Splits the collection into two at the given value. Returns everything after the given value,\n+    /// including the value.\n     ///\n     /// # Examples\n     ///\n@@ -933,11 +933,11 @@ impl<T> BTreeSet<T> {\n     /// assert!(b.contains(&41));\n     /// ```\n     #[stable(feature = \"btree_split_off\", since = \"1.11.0\")]\n-    pub fn split_off<Q: ?Sized + Ord>(&mut self, key: &Q) -> Self\n+    pub fn split_off<Q: ?Sized + Ord>(&mut self, value: &Q) -> Self\n     where\n         T: Borrow<Q> + Ord,\n     {\n-        BTreeSet { map: self.map.split_off(key) }\n+        BTreeSet { map: self.map.split_off(value) }\n     }\n \n     /// Creates an iterator that visits all values in ascending order and uses a closure"}]}