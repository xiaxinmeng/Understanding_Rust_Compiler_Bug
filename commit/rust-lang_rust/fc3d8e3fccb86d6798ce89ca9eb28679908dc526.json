{"sha": "fc3d8e3fccb86d6798ce89ca9eb28679908dc526", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjM2Q4ZTNmY2NiODZkNjc5OGNlODljYTllYjI4Njc5OTA4ZGM1MjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-09T08:09:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-09T08:09:32Z"}, "message": "Auto merge of #77687 - est31:hash_shorter_path, r=davidtwco\n\nUse shorter path for std::hash::Hash", "tree": {"sha": "32518193920ac945a536d6863dc1f2bf75e62a39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32518193920ac945a536d6863dc1f2bf75e62a39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc3d8e3fccb86d6798ce89ca9eb28679908dc526", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc3d8e3fccb86d6798ce89ca9eb28679908dc526", "html_url": "https://github.com/rust-lang/rust/commit/fc3d8e3fccb86d6798ce89ca9eb28679908dc526", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc3d8e3fccb86d6798ce89ca9eb28679908dc526/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a74fb726ec40be398c55bce66c6d0b1a91d106c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a74fb726ec40be398c55bce66c6d0b1a91d106c", "html_url": "https://github.com/rust-lang/rust/commit/9a74fb726ec40be398c55bce66c6d0b1a91d106c"}, {"sha": "7367cfef598acb81a5e09b3bb28f55d01e35b4a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/7367cfef598acb81a5e09b3bb28f55d01e35b4a3", "html_url": "https://github.com/rust-lang/rust/commit/7367cfef598acb81a5e09b3bb28f55d01e35b4a3"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "925f1bd33cb7aa27f0583cb3ececdc2019b0807f", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fc3d8e3fccb86d6798ce89ca9eb28679908dc526/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc3d8e3fccb86d6798ce89ca9eb28679908dc526/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=fc3d8e3fccb86d6798ce89ca9eb28679908dc526", "patch": "@@ -1861,7 +1861,7 @@ where\n         }\n \n         if *self == DUMMY_SP {\n-            std::hash::Hash::hash(&TAG_INVALID_SPAN, hasher);\n+            Hash::hash(&TAG_INVALID_SPAN, hasher);\n             return;\n         }\n \n@@ -1872,28 +1872,28 @@ where\n         let (file_lo, line_lo, col_lo) = match ctx.byte_pos_to_line_and_col(span.lo) {\n             Some(pos) => pos,\n             None => {\n-                std::hash::Hash::hash(&TAG_INVALID_SPAN, hasher);\n+                Hash::hash(&TAG_INVALID_SPAN, hasher);\n                 span.ctxt.hash_stable(ctx, hasher);\n                 return;\n             }\n         };\n \n         if !file_lo.contains(span.hi) {\n-            std::hash::Hash::hash(&TAG_INVALID_SPAN, hasher);\n+            Hash::hash(&TAG_INVALID_SPAN, hasher);\n             span.ctxt.hash_stable(ctx, hasher);\n             return;\n         }\n \n-        std::hash::Hash::hash(&TAG_VALID_SPAN, hasher);\n+        Hash::hash(&TAG_VALID_SPAN, hasher);\n         // We truncate the stable ID hash and line and column numbers. The chances\n         // of causing a collision this way should be minimal.\n-        std::hash::Hash::hash(&(file_lo.name_hash as u64), hasher);\n+        Hash::hash(&(file_lo.name_hash as u64), hasher);\n \n         let col = (col_lo.0 as u64) & 0xFF;\n         let line = ((line_lo as u64) & 0xFF_FF_FF) << 8;\n         let len = ((span.hi - span.lo).0 as u64) << 32;\n         let line_col_len = col | line | len;\n-        std::hash::Hash::hash(&line_col_len, hasher);\n+        Hash::hash(&line_col_len, hasher);\n         span.ctxt.hash_stable(ctx, hasher);\n     }\n }"}]}