{"sha": "71b94c9a5d68bcbb4667efb6edc054eda8be5665", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxYjk0YzlhNWQ2OGJjYmI0NjY3ZWZiNmVkYzA1NGVkYThiZTU2NjU=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-28T23:59:48Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-28T23:59:48Z"}, "message": "Add a basic test for specialization.", "tree": {"sha": "fec93c8047d528e43d08e72a1aa9df670a96c745", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fec93c8047d528e43d08e72a1aa9df670a96c745"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71b94c9a5d68bcbb4667efb6edc054eda8be5665", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71b94c9a5d68bcbb4667efb6edc054eda8be5665", "html_url": "https://github.com/rust-lang/rust/commit/71b94c9a5d68bcbb4667efb6edc054eda8be5665", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71b94c9a5d68bcbb4667efb6edc054eda8be5665/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1861dbc2aba60ccd378baa112d74bcc4f5052d9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1861dbc2aba60ccd378baa112d74bcc4f5052d9f", "html_url": "https://github.com/rust-lang/rust/commit/1861dbc2aba60ccd378baa112d74bcc4f5052d9f"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "ac510ec4cb4da542c8140f7d4abc7c0aa3291c19", "filename": "test/specialization.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/71b94c9a5d68bcbb4667efb6edc054eda8be5665/test%2Fspecialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71b94c9a5d68bcbb4667efb6edc054eda8be5665/test%2Fspecialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test%2Fspecialization.rs?ref=71b94c9a5d68bcbb4667efb6edc054eda8be5665", "patch": "@@ -0,0 +1,19 @@\n+#![feature(custom_attribute, specialization)]\n+#![allow(dead_code, unused_attributes)]\n+\n+trait IsUnit {\n+    fn is_unit() -> bool;\n+}\n+\n+impl<T> IsUnit for T {\n+    default fn is_unit() -> bool { false }\n+}\n+\n+impl IsUnit for () {\n+    fn is_unit() -> bool { true }\n+}\n+\n+#[miri_run]\n+fn specialization() -> (bool, bool) {\n+    (i32::is_unit(), <()>::is_unit())\n+}"}]}