{"sha": "31f6d45a181859e10595ee1de43dfaee9f16963d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxZjZkNDVhMTgxODU5ZTEwNTk1ZWUxZGU0M2RmYWVlOWYxNjk2M2Q=", "commit": {"author": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-09-20T04:09:59Z"}, "committer": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-09-20T07:18:08Z"}, "message": "Do not attempt to autoderef `!`\n\nThis prevents error spam when attempting to look up overload traits.", "tree": {"sha": "95483afe324b976e5d30f2953345c61f3777cf3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95483afe324b976e5d30f2953345c61f3777cf3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31f6d45a181859e10595ee1de43dfaee9f16963d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31f6d45a181859e10595ee1de43dfaee9f16963d", "html_url": "https://github.com/rust-lang/rust/commit/31f6d45a181859e10595ee1de43dfaee9f16963d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31f6d45a181859e10595ee1de43dfaee9f16963d/comments", "author": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b6e880fffb8e09b15bc6fc41d5b23f21bf5056d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b6e880fffb8e09b15bc6fc41d5b23f21bf5056d", "html_url": "https://github.com/rust-lang/rust/commit/3b6e880fffb8e09b15bc6fc41d5b23f21bf5056d"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "8d67c04f687bf9a81290080d6cff8485f488f07c", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/31f6d45a181859e10595ee1de43dfaee9f16963d/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31f6d45a181859e10595ee1de43dfaee9f16963d/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=31f6d45a181859e10595ee1de43dfaee9f16963d", "patch": "@@ -2156,6 +2156,10 @@ pub fn autoderef<T>(fcx: &FnCtxt, sp: Span, base_ty: ty::t,\n     for autoderefs in range(0, fcx.tcx().sess.recursion_limit.get()) {\n         let resolved_t = structurally_resolved_type(fcx, sp, t);\n \n+        if ty::type_is_bot(resolved_t) {\n+            return (resolved_t, autoderefs, None);\n+        }\n+\n         match should_stop(resolved_t, autoderefs) {\n             Some(x) => return (resolved_t, autoderefs, Some(x)),\n             None => {}"}]}