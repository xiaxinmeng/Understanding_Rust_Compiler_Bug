{"sha": "67de38ec7d5c235dec209fe859d6bf6b0dbe497a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3ZGUzOGVjN2Q1YzIzNWRlYzIwOWZlODU5ZDZiZjZiMGRiZTQ5N2E=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-27T20:40:23Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-27T20:40:23Z"}, "message": "move resolve_local_scope", "tree": {"sha": "4b4a9bc0f37af7311aa4604b4f6280ff292f64bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b4a9bc0f37af7311aa4604b4f6280ff292f64bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67de38ec7d5c235dec209fe859d6bf6b0dbe497a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67de38ec7d5c235dec209fe859d6bf6b0dbe497a", "html_url": "https://github.com/rust-lang/rust/commit/67de38ec7d5c235dec209fe859d6bf6b0dbe497a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67de38ec7d5c235dec209fe859d6bf6b0dbe497a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93fae0826194b1590013c9bb0d977e60bd135918", "url": "https://api.github.com/repos/rust-lang/rust/commits/93fae0826194b1590013c9bb0d977e60bd135918", "html_url": "https://github.com/rust-lang/rust/commit/93fae0826194b1590013c9bb0d977e60bd135918"}], "stats": {"total": 54, "additions": 27, "deletions": 27}, "files": [{"sha": "5bf8c37257574647af49b8c7b45cb48048402545", "filename": "crates/ra_analysis/src/completion/reference_completion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/67de38ec7d5c235dec209fe859d6bf6b0dbe497a/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Freference_completion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67de38ec7d5c235dec209fe859d6bf6b0dbe497a/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Freference_completion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Freference_completion.rs?ref=67de38ec7d5c235dec209fe859d6bf6b0dbe497a", "patch": "@@ -12,7 +12,7 @@ use crate::{\n     completion::CompletionItem,\n     hir::{\n         ModuleDescriptor,\n-        function::FnScopes,\n+        FnScopes,\n         Def,\n         Path,\n     },"}, {"sha": "8161a604f68028843cff947e54152fcacbffabb3", "filename": "crates/ra_analysis/src/hir/function/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/67de38ec7d5c235dec209fe859d6bf6b0dbe497a/crates%2Fra_analysis%2Fsrc%2Fhir%2Ffunction%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67de38ec7d5c235dec209fe859d6bf6b0dbe497a/crates%2Fra_analysis%2Fsrc%2Fhir%2Ffunction%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhir%2Ffunction%2Fmod.rs?ref=67de38ec7d5c235dec209fe859d6bf6b0dbe497a", "patch": "@@ -15,7 +15,7 @@ use crate::{\n     syntax_ptr::SyntaxPtr, FileId,\n };\n \n-pub(crate) use self::scope::{resolve_local_name, FnScopes};\n+pub(crate) use self::scope::FnScopes;\n pub(crate) use crate::loc2id::FnId;\n \n impl FnId {"}, {"sha": "b8bdebe47379a8b7cea7f3434a3b61a157247c46", "filename": "crates/ra_analysis/src/hir/function/scope.rs", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/67de38ec7d5c235dec209fe859d6bf6b0dbe497a/crates%2Fra_analysis%2Fsrc%2Fhir%2Ffunction%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67de38ec7d5c235dec209fe859d6bf6b0dbe497a/crates%2Fra_analysis%2Fsrc%2Fhir%2Ffunction%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhir%2Ffunction%2Fscope.rs?ref=67de38ec7d5c235dec209fe859d6bf6b0dbe497a", "patch": "@@ -57,6 +57,19 @@ impl FnScopes {\n             self.scopes[scope].parent\n         })\n     }\n+    pub(crate) fn resolve_local_name<'a>(\n+        &'a self,\n+        name_ref: ast::NameRef,\n+    ) -> Option<&'a ScopeEntry> {\n+        let mut shadowed = FxHashSet::default();\n+        let ret = self\n+            .scope_chain(name_ref.syntax())\n+            .flat_map(|scope| self.entries(scope).iter())\n+            .filter(|entry| shadowed.insert(entry.name()))\n+            .filter(|entry| entry.name() == &name_ref.text())\n+            .nth(0);\n+        ret\n+    }\n     fn root_scope(&mut self) -> ScopeId {\n         self.scopes.alloc(ScopeData {\n             parent: None,\n@@ -249,20 +262,6 @@ fn compute_expr_scopes(expr: ast::Expr, scopes: &mut FnScopes, scope: ScopeId) {\n     }\n }\n \n-pub fn resolve_local_name<'a>(\n-    name_ref: ast::NameRef,\n-    scopes: &'a FnScopes,\n-) -> Option<&'a ScopeEntry> {\n-    let mut shadowed = FxHashSet::default();\n-    let ret = scopes\n-        .scope_chain(name_ref.syntax())\n-        .flat_map(|scope| scopes.entries(scope).iter())\n-        .filter(|entry| shadowed.insert(entry.name()))\n-        .filter(|entry| entry.name() == &name_ref.text())\n-        .nth(0);\n-    ret\n-}\n-\n #[cfg(test)]\n mod tests {\n     use ra_editor::find_node_at_offset;\n@@ -376,7 +375,7 @@ mod tests {\n \n         let scopes = FnScopes::new(fn_def);\n \n-        let local_name_entry = resolve_local_name(name_ref, &scopes).unwrap();\n+        let local_name_entry = scopes.resolve_local_name(name_ref).unwrap();\n         let local_name = local_name_entry.ptr().resolve(&file);\n         let expected_name =\n             find_node_at_offset::<ast::Name>(file.syntax(), expected_offset.into()).unwrap();"}, {"sha": "1d37fae32b43cd0d26f99892aa83a2acfa39b137", "filename": "crates/ra_analysis/src/hir/mod.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/67de38ec7d5c235dec209fe859d6bf6b0dbe497a/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67de38ec7d5c235dec209fe859d6bf6b0dbe497a/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmod.rs?ref=67de38ec7d5c235dec209fe859d6bf6b0dbe497a", "patch": "@@ -5,11 +5,11 @@\n //! to a particular crate instance. That is, it has cfg flags and features\n //! applied. So, there relation between syntax and HIR is many-to-one.\n \n-pub(crate) mod function;\n-mod module;\n pub(crate) mod db;\n-mod path;\n mod query_definitions;\n+mod function;\n+mod module;\n+mod path;\n \n use ra_syntax::{\n     ast::{self, AstNode},\n@@ -18,7 +18,6 @@ use ra_syntax::{\n \n use crate::{\n     hir::db::HirDatabase,\n-    hir::function::{resolve_local_name, FnScopes},\n     loc2id::{DefId, DefLoc},\n     syntax_ptr::LocalSyntaxPtr,\n     Cancelable,\n@@ -27,9 +26,12 @@ use crate::{\n pub(crate) use self::{\n     path::{Path, PathKind},\n     module::{ModuleDescriptor, ModuleId, Problem, nameres::FileItemId},\n-    function::FunctionDescriptor,\n+    function::{FunctionDescriptor, FnScopes},\n };\n \n+//TODO: FIXME\n+pub use self::function::FnDescriptor;\n+\n pub(crate) enum Def {\n     Module(ModuleDescriptor),\n     Item,\n@@ -82,7 +84,7 @@ impl<'a> DeclarationDescriptor<'a> {\n             .syntax()\n             .descendants()\n             .filter_map(ast::NameRef::cast)\n-            .filter(|name_ref| match resolve_local_name(*name_ref, &fn_scopes) {\n+            .filter(|name_ref| match fn_scopes.resolve_local_name(*name_ref) {\n                 None => false,\n                 Some(entry) => entry.ptr() == name_ptr,\n             })"}, {"sha": "347d4463801c62949e3035884965a47862f979b8", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/67de38ec7d5c235dec209fe859d6bf6b0dbe497a/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67de38ec7d5c235dec209fe859d6bf6b0dbe497a/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=67de38ec7d5c235dec209fe859d6bf6b0dbe497a", "patch": "@@ -20,8 +20,7 @@ use crate::{\n     completion::{completions, CompletionItem},\n     db::{self, FileSyntaxQuery, SyntaxDatabase},\n     hir::{\n-        FunctionDescriptor, ModuleDescriptor,\n-        function::FnDescriptor,\n+        FnDescriptor, FunctionDescriptor, ModuleDescriptor,\n         Problem,\n         DeclarationDescriptor,\n     },\n@@ -590,7 +589,7 @@ fn resolve_local_name(\n     let fn_def = name_ref.syntax().ancestors().find_map(ast::FnDef::cast)?;\n     let function = FunctionDescriptor::guess_from_source(db, file_id, fn_def);\n     let scopes = function.scope(db);\n-    let scope_entry = crate::hir::function::resolve_local_name(name_ref, &scopes)?;\n+    let scope_entry = scopes.resolve_local_name(name_ref)?;\n     let syntax = db.resolve_syntax_ptr(scope_entry.ptr().into_global(file_id));\n     Some((scope_entry.name().clone(), syntax.range()))\n }"}, {"sha": "a3088c5ade771c9051ab3068a2a028a866daa66b", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/67de38ec7d5c235dec209fe859d6bf6b0dbe497a/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67de38ec7d5c235dec209fe859d6bf6b0dbe497a/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=67de38ec7d5c235dec209fe859d6bf6b0dbe497a", "patch": "@@ -42,7 +42,7 @@ use crate::{\n \n pub use crate::{\n     completion::CompletionItem,\n-    hir::function::FnDescriptor,\n+    hir::FnDescriptor,\n     input::{CrateGraph, CrateId, FileId, FileResolver},\n };\n pub use ra_editor::{"}]}