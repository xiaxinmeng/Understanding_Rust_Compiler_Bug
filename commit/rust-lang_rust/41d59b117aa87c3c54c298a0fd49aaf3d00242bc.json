{"sha": "41d59b117aa87c3c54c298a0fd49aaf3d00242bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxZDU5YjExN2FhODdjM2M1NGMyOThhMGZkNDlhYWYzZDAwMjQyYmM=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-03-07T11:49:56Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-03-07T11:49:56Z"}, "message": "Rustup to rustc 1.17.0-nightly (b1e31766d 2017-03-03)", "tree": {"sha": "f39a11c6590dfdbbde92ab1963cfb1685e110f12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f39a11c6590dfdbbde92ab1963cfb1685e110f12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41d59b117aa87c3c54c298a0fd49aaf3d00242bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41d59b117aa87c3c54c298a0fd49aaf3d00242bc", "html_url": "https://github.com/rust-lang/rust/commit/41d59b117aa87c3c54c298a0fd49aaf3d00242bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41d59b117aa87c3c54c298a0fd49aaf3d00242bc/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8405770b5196914dd397877c0447756a6b41fb2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8405770b5196914dd397877c0447756a6b41fb2b", "html_url": "https://github.com/rust-lang/rust/commit/8405770b5196914dd397877c0447756a6b41fb2b"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "efa415679328c46461ed4b090c6bdb049383c126", "filename": "src/terminator/drop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41d59b117aa87c3c54c298a0fd49aaf3d00242bc/src%2Fterminator%2Fdrop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41d59b117aa87c3c54c298a0fd49aaf3d00242bc/src%2Fterminator%2Fdrop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fdrop.rs?ref=41d59b117aa87c3c54c298a0fd49aaf3d00242bc", "patch": "@@ -97,7 +97,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 let (adt_ptr, extra) = lval.to_ptr_and_extra();\n \n                 // run drop impl before the fields' drop impls\n-                if let Some(drop_def_id) = adt_def.destructor(self.tcx) {\n+                if let Some(destructor) = adt_def.destructor(self.tcx) {\n                     let trait_ref = ty::Binder(ty::TraitRef {\n                         def_id: self.tcx.lang_items.drop_trait().unwrap(),\n                         substs: self.tcx.mk_substs_trait(ty, &[]),\n@@ -112,7 +112,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                         LvalueExtra::Length(n) => Value::ByValPair(PrimVal::Ptr(adt_ptr), PrimVal::from_u128(n as u128)),\n                         LvalueExtra::Vtable(vtable) => Value::ByValPair(PrimVal::Ptr(adt_ptr), PrimVal::Ptr(vtable)),\n                     };\n-                    drop.push((drop_def_id, val, vtable.substs));\n+                    drop.push((destructor.did, val, vtable.substs));\n                 }\n \n                 let layout = self.type_layout(ty)?;"}, {"sha": "e4f9e4a24aa582c63be912398bbcb0d7d1e84561", "filename": "src/traits.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41d59b117aa87c3c54c298a0fd49aaf3d00242bc/src%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41d59b117aa87c3c54c298a0fd49aaf3d00242bc/src%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftraits.rs?ref=41d59b117aa87c3c54c298a0fd49aaf3d00242bc", "patch": "@@ -275,8 +275,8 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         // in case there is no drop function to be called, this still needs to be initialized\n         self.memory.write_usize(vtable, 0)?;\n         if let ty::TyAdt(adt_def, substs) = trait_ref.self_ty().sty {\n-            if let Some(drop_def_id) = adt_def.destructor(self.tcx) {\n-                let fn_ty = match self.tcx.item_type(drop_def_id).sty {\n+            if let Some(destructor) = adt_def.destructor(self.tcx) {\n+                let fn_ty = match self.tcx.item_type(destructor.did).sty {\n                     ty::TyFnDef(_, _, fn_ty) => self.tcx.erase_regions(&fn_ty),\n                     _ => bug!(\"drop method is not a TyFnDef\"),\n                 };"}]}