{"sha": "0fab2b95354f519e89e07d4e4d723c24372e75fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmYWIyYjk1MzU0ZjUxOWU4OWUwN2Q0ZTRkNzIzYzI0MzcyZTc1ZmQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-23T09:14:12Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-23T17:58:46Z"}, "message": "Rollup merge of #22556 - brson:str, r=steveklabnik\n\n Clarify that `to_string` is how you make `String`. Use a coercion in an example.\n\nr? @steveklabnik", "tree": {"sha": "48e5ae682aa609ccc3d50ff895b8b037986d918d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48e5ae682aa609ccc3d50ff895b8b037986d918d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fab2b95354f519e89e07d4e4d723c24372e75fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fab2b95354f519e89e07d4e4d723c24372e75fd", "html_url": "https://github.com/rust-lang/rust/commit/0fab2b95354f519e89e07d4e4d723c24372e75fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fab2b95354f519e89e07d4e4d723c24372e75fd/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59726953cc5d27d73df1d024801394126b0854fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/59726953cc5d27d73df1d024801394126b0854fa", "html_url": "https://github.com/rust-lang/rust/commit/59726953cc5d27d73df1d024801394126b0854fa"}, {"sha": "96be55376ecdc13b0e711fe9398c70cd932af166", "url": "https://api.github.com/repos/rust-lang/rust/commits/96be55376ecdc13b0e711fe9398c70cd932af166", "html_url": "https://github.com/rust-lang/rust/commit/96be55376ecdc13b0e711fe9398c70cd932af166"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "f3c0195855c3436baecae176038888e748f96b96", "filename": "src/doc/trpl/crates-and-modules.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0fab2b95354f519e89e07d4e4d723c24372e75fd/src%2Fdoc%2Ftrpl%2Fcrates-and-modules.md", "raw_url": "https://github.com/rust-lang/rust/raw/0fab2b95354f519e89e07d4e4d723c24372e75fd/src%2Fdoc%2Ftrpl%2Fcrates-and-modules.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fcrates-and-modules.md?ref=0fab2b95354f519e89e07d4e4d723c24372e75fd", "patch": "@@ -12,7 +12,7 @@ Rust has two distinct terms that relate to the module system: *crate* and\n *module*. A crate is synonymous with a *library* or *package* in other\n languages. Hence \"Cargo\" as the name of Rust's package management tool: you\n ship your crates to others with Cargo. Crates can produce an executable or a\n-shared library, depending on the project.\n+library, depending on the project.\n \n Each crate has an implicit *root module* that contains the code for that crate.\n You can then define a tree of sub-modules under that root module. Modules allow"}, {"sha": "a2a558094e1963c8f4b0c46423f3f69ef0eea45e", "filename": "src/doc/trpl/more-strings.md", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0fab2b95354f519e89e07d4e4d723c24372e75fd/src%2Fdoc%2Ftrpl%2Fmore-strings.md", "raw_url": "https://github.com/rust-lang/rust/raw/0fab2b95354f519e89e07d4e4d723c24372e75fd/src%2Fdoc%2Ftrpl%2Fmore-strings.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fmore-strings.md?ref=0fab2b95354f519e89e07d4e4d723c24372e75fd", "patch": "@@ -38,8 +38,9 @@ string literal or a `String`.\n \n # String\n \n-A `String` is a heap-allocated string. This string is growable, and is also\n-guaranteed to be UTF-8.\n+A `String` is a heap-allocated string. This string is growable, and is\n+also guaranteed to be UTF-8. `String`s are commonly created by\n+converting from a string slice using the `to_string` method.\n \n ```\n let mut s = \"Hello\".to_string();\n@@ -49,7 +50,7 @@ s.push_str(\", world.\");\n println!(\"{}\", s);\n ```\n \n-You can coerce a `String` into a `&str` by dereferencing it:\n+A reference to a `String` will automatically coerce to a string slice:\n \n ```\n fn takes_slice(slice: &str) {\n@@ -58,7 +59,7 @@ fn takes_slice(slice: &str) {\n \n fn main() {\n     let s = \"Hello\".to_string();\n-    takes_slice(&*s);\n+    takes_slice(&s);\n }\n ```\n "}, {"sha": "2c2e6a8c7c5acdf8079163bf675163a0ea7aff84", "filename": "src/doc/trpl/strings.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0fab2b95354f519e89e07d4e4d723c24372e75fd/src%2Fdoc%2Ftrpl%2Fstrings.md", "raw_url": "https://github.com/rust-lang/rust/raw/0fab2b95354f519e89e07d4e4d723c24372e75fd/src%2Fdoc%2Ftrpl%2Fstrings.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fstrings.md?ref=0fab2b95354f519e89e07d4e4d723c24372e75fd", "patch": "@@ -25,8 +25,10 @@ compiled program, and exists for the entire duration it runs. The `string`\n binding is a reference to this statically allocated string. String slices\n have a fixed size, and cannot be mutated.\n \n-A `String`, on the other hand, is an in-memory string.  This string is\n-growable, and is also guaranteed to be UTF-8.\n+A `String`, on the other hand, is a heap-allocated string. This string\n+is growable, and is also guaranteed to be UTF-8. `String`s are\n+commonly created by converting from a string slice using the\n+`to_string` method.\n \n ```{rust}\n let mut s = \"Hello\".to_string(); // mut s: String"}]}