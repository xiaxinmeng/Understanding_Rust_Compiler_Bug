{"sha": "8acae671c70825f65bddaa5076e8d595b6721f46", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhY2FlNjcxYzcwODI1ZjY1YmRkYWE1MDc2ZThkNTk1YjY3MjFmNDY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-18T00:17:47Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-18T03:41:05Z"}, "message": "rustc: Allow std to be built as a test runner", "tree": {"sha": "db5f6829713d8a59240339c831abd064f2a4276c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db5f6829713d8a59240339c831abd064f2a4276c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8acae671c70825f65bddaa5076e8d595b6721f46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8acae671c70825f65bddaa5076e8d595b6721f46", "html_url": "https://github.com/rust-lang/rust/commit/8acae671c70825f65bddaa5076e8d595b6721f46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8acae671c70825f65bddaa5076e8d595b6721f46/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "050083a5e65e77ba843d6f06d576599b111da818", "url": "https://api.github.com/repos/rust-lang/rust/commits/050083a5e65e77ba843d6f06d576599b111da818", "html_url": "https://github.com/rust-lang/rust/commit/050083a5e65e77ba843d6f06d576599b111da818"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "bbe08b7316575fb16a268c58f4f3a87bbf3158f8", "filename": "src/comp/front/test.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/8acae671c70825f65bddaa5076e8d595b6721f46/src%2Fcomp%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8acae671c70825f65bddaa5076e8d595b6721f46/src%2Fcomp%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Ftest.rs?ref=8acae671c70825f65bddaa5076e8d595b6721f46", "patch": "@@ -234,20 +234,33 @@ fn mk_tests(cx: test_ctxt) -> @ast::item {\n     ret @item;\n }\n \n+fn mk_path(cx: test_ctxt, path: [ast::ident]) -> [ast::ident] {\n+    // For tests that are inside of std we don't want to prefix\n+    // the paths with std::\n+    let is_std = {\n+        let items = attr::find_linkage_metas(cx.crate.node.attrs);\n+        alt attr::meta_item_value_from_list(items, \"name\") {\n+          some(\"std\") { true }\n+          _ { false }\n+        }\n+    };\n+    (is_std ? [] : [\"std\"]) + path\n+}\n+\n // The ast::ty of [std::test::test_desc]\n fn mk_test_desc_vec_ty(cx: test_ctxt) -> @ast::ty {\n     let test_fn_ty: ast::ty = nospan(\n         ast::ty_path(\n             @nospan({\n                 global: false,\n-                idents: [\"std\", \"test\", \"default_test_fn\"],\n+                idents: mk_path(cx, [\"test\", \"default_test_fn\"]),\n                 types: []\n             }),\n             cx.sess.next_node_id()));\n \n     let test_desc_ty_path =\n         @nospan({global: false,\n-                 idents: [\"std\", \"test\", \"test_desc\"],\n+                 idents: mk_path(cx, [\"test\", \"test_desc\"]),\n                  types: [@test_fn_ty]});\n \n     let test_desc_ty: ast::ty =\n@@ -437,7 +450,7 @@ fn mk_test_main_call(cx: test_ctxt) -> @ast::expr {\n     // Call std::test::test_main\n     let test_main_path =\n         @nospan({global: false,\n-                 idents: [\"std\", \"test\", \"test_main\"],\n+                 idents: mk_path(cx, [\"test\", \"test_main\"]),\n                  types: []});\n \n     let test_main_path_expr_: ast::expr_ = ast::expr_path(test_main_path);"}]}