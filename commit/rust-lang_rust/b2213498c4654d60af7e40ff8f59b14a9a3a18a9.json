{"sha": "b2213498c4654d60af7e40ff8f59b14a9a3a18a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyMjEzNDk4YzQ2NTRkNjBhZjdlNDBmZjhmNTliMTRhOWEzYTE4YTk=", "commit": {"author": {"name": "Eli Friedman", "email": "eli.friedman@gmail.com", "date": "2015-06-26T06:13:03Z"}, "committer": {"name": "Eli Friedman", "email": "eli.friedman@gmail.com", "date": "2015-07-23T05:37:20Z"}, "message": "Resolve lifetime parameters for foreign functions.\n\nPretty straightforward; just need to make sure to explicitly handle\nthe generic parameters of each ast::ForeignItemFn.\n\nFixes #26587.", "tree": {"sha": "fd68a7ad3445fb74870f5412f29025a0de6d8bbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd68a7ad3445fb74870f5412f29025a0de6d8bbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2213498c4654d60af7e40ff8f59b14a9a3a18a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2213498c4654d60af7e40ff8f59b14a9a3a18a9", "html_url": "https://github.com/rust-lang/rust/commit/b2213498c4654d60af7e40ff8f59b14a9a3a18a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2213498c4654d60af7e40ff8f59b14a9a3a18a9/comments", "author": {"login": "eefriedman", "id": 12769964, "node_id": "MDQ6VXNlcjEyNzY5OTY0", "avatar_url": "https://avatars.githubusercontent.com/u/12769964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eefriedman", "html_url": "https://github.com/eefriedman", "followers_url": "https://api.github.com/users/eefriedman/followers", "following_url": "https://api.github.com/users/eefriedman/following{/other_user}", "gists_url": "https://api.github.com/users/eefriedman/gists{/gist_id}", "starred_url": "https://api.github.com/users/eefriedman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eefriedman/subscriptions", "organizations_url": "https://api.github.com/users/eefriedman/orgs", "repos_url": "https://api.github.com/users/eefriedman/repos", "events_url": "https://api.github.com/users/eefriedman/events{/privacy}", "received_events_url": "https://api.github.com/users/eefriedman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eefriedman", "id": 12769964, "node_id": "MDQ6VXNlcjEyNzY5OTY0", "avatar_url": "https://avatars.githubusercontent.com/u/12769964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eefriedman", "html_url": "https://github.com/eefriedman", "followers_url": "https://api.github.com/users/eefriedman/followers", "following_url": "https://api.github.com/users/eefriedman/following{/other_user}", "gists_url": "https://api.github.com/users/eefriedman/gists{/gist_id}", "starred_url": "https://api.github.com/users/eefriedman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eefriedman/subscriptions", "organizations_url": "https://api.github.com/users/eefriedman/orgs", "repos_url": "https://api.github.com/users/eefriedman/repos", "events_url": "https://api.github.com/users/eefriedman/events{/privacy}", "received_events_url": "https://api.github.com/users/eefriedman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55428306657c5b42a26183c90fcd06e1ee7b94f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/55428306657c5b42a26183c90fcd06e1ee7b94f5", "html_url": "https://github.com/rust-lang/rust/commit/55428306657c5b42a26183c90fcd06e1ee7b94f5"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "76edc8c9b20fe1f78e0429ff094d7b2cfbfcdaa9", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b2213498c4654d60af7e40ff8f59b14a9a3a18a9/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2213498c4654d60af7e40ff8f59b14a9a3a18a9/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=b2213498c4654d60af7e40ff8f59b14a9a3a18a9", "patch": "@@ -109,7 +109,7 @@ pub fn krate(sess: &Session, krate: &ast::Crate, def_map: &DefMap) -> NamedRegio\n \n impl<'a, 'v> Visitor<'v> for LifetimeContext<'a> {\n     fn visit_item(&mut self, item: &ast::Item) {\n-        // Items save/restore the set of labels. This way innner items\n+        // Items save/restore the set of labels. This way inner items\n         // can freely reuse names, be they loop labels or lifetimes.\n         let saved = replace(&mut self.labels_in_fn, vec![]);\n \n@@ -151,6 +151,29 @@ impl<'a, 'v> Visitor<'v> for LifetimeContext<'a> {\n         replace(&mut self.labels_in_fn, saved);\n     }\n \n+    fn visit_foreign_item(&mut self, item: &ast::ForeignItem) {\n+        // Items save/restore the set of labels. This way inner items\n+        // can freely reuse names, be they loop labels or lifetimes.\n+        let saved = replace(&mut self.labels_in_fn, vec![]);\n+\n+        // Items always introduce a new root scope\n+        self.with(RootScope, |_, this| {\n+            match item.node {\n+                ast::ForeignItemFn(_, ref generics) => {\n+                    this.visit_early_late(subst::FnSpace, generics, |this| {\n+                        visit::walk_foreign_item(this, item);\n+                    })\n+                }\n+                ast::ForeignItemStatic(..) => {\n+                    visit::walk_foreign_item(this, item);\n+                }\n+            }\n+        });\n+\n+        // Done traversing the item; restore saved set of labels.\n+        replace(&mut self.labels_in_fn, saved);\n+    }\n+\n     fn visit_fn(&mut self, fk: visit::FnKind<'v>, fd: &'v ast::FnDecl,\n                 b: &'v ast::Block, s: Span, _: ast::NodeId) {\n         match fk {"}, {"sha": "fa2d474393786e97f2a15791d7c9a1e393d17e81", "filename": "src/test/compile-fail/generic-extern-lifetime.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b2213498c4654d60af7e40ff8f59b14a9a3a18a9/src%2Ftest%2Fcompile-fail%2Fgeneric-extern-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2213498c4654d60af7e40ff8f59b14a9a3a18a9/src%2Ftest%2Fcompile-fail%2Fgeneric-extern-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgeneric-extern-lifetime.rs?ref=b2213498c4654d60af7e40ff8f59b14a9a3a18a9", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test to make sure the names of the lifetimes are correctly resolved\n+// in extern blocks.\n+\n+extern {\n+   pub fn life<'a>(x:&'a i32);\n+   pub fn life2<'b>(x:&'a i32, y:&'b i32); //~ ERROR use of undeclared lifetime name `'a`\n+   pub fn life3<'a>(x:&'a i32, y:&i32) -> &'a i32;\n+   pub fn life4<'b>(x: for<'c> fn(&'a i32)); //~ ERROR use of undeclared lifetime name `'a`\n+   pub fn life5<'b>(x: for<'c> fn(&'b i32));\n+   pub fn life6<'b>(x: for<'c> fn(&'c i32));\n+   pub fn life7<'b>() -> for<'c> fn(&'a i32); //~ ERROR use of undeclared lifetime name `'a`\n+   pub fn life8<'b>() -> for<'c> fn(&'b i32);\n+   pub fn life9<'b>() -> for<'c> fn(&'c i32);\n+}\n+fn main() {}"}]}