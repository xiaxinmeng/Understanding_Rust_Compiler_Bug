{"sha": "828aebfe3a2a4beef1dd149f61ce26057d52ce70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyOGFlYmZlM2EyYTRiZWVmMWRkMTQ5ZjYxY2UyNjA1N2Q1MmNlNzA=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-08-03T10:40:03Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-08-03T10:40:03Z"}, "message": "Unify API of `Scalar` and `ScalarMaybeUndef`", "tree": {"sha": "c0a1df5ff2a67f5d1a7019b30a83b77d3353874e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0a1df5ff2a67f5d1a7019b30a83b77d3353874e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/828aebfe3a2a4beef1dd149f61ce26057d52ce70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/828aebfe3a2a4beef1dd149f61ce26057d52ce70", "html_url": "https://github.com/rust-lang/rust/commit/828aebfe3a2a4beef1dd149f61ce26057d52ce70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/828aebfe3a2a4beef1dd149f61ce26057d52ce70/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "481909403167d88ecc61ebe16d7065ea002bae84", "url": "https://api.github.com/repos/rust-lang/rust/commits/481909403167d88ecc61ebe16d7065ea002bae84", "html_url": "https://github.com/rust-lang/rust/commit/481909403167d88ecc61ebe16d7065ea002bae84"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "f569f4def143f8dd6af8c2b71b4cbc27ae4a6219", "filename": "src/librustc/mir/interpret/value.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/828aebfe3a2a4beef1dd149f61ce26057d52ce70/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828aebfe3a2a4beef1dd149f61ce26057d52ce70/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs?ref=828aebfe3a2a4beef1dd149f61ce26057d52ce70", "patch": "@@ -103,6 +103,10 @@ impl<'tcx> Scalar {\n         ScalarMaybeUndef::Scalar(self).to_value_with_len(len, cx)\n     }\n \n+    pub fn to_value_with_vtable(self, vtable: Pointer) -> Value {\n+        ScalarMaybeUndef::Scalar(self).to_value_with_vtable(vtable)\n+    }\n+\n     pub fn ptr_signed_offset<C: HasDataLayout>(self, i: i64, cx: C) -> EvalResult<'tcx, Self> {\n         let layout = cx.data_layout();\n         match self {\n@@ -207,14 +211,14 @@ impl ScalarMaybeUndef {\n     }\n \n     pub fn to_value_with_len<C: HasDataLayout>(self, len: u64, cx: C) -> Value {\n-        Value::ScalarPair(self.into(), Scalar::Bits {\n+        Value::ScalarPair(self, Scalar::Bits {\n             bits: len as u128,\n             size: cx.data_layout().pointer_size.bytes() as u8,\n         }.into())\n     }\n \n     pub fn to_value_with_vtable(self, vtable: Pointer) -> Value {\n-        Value::ScalarPair(self.into(), Scalar::Ptr(vtable).into())\n+        Value::ScalarPair(self, Scalar::Ptr(vtable).into())\n     }\n \n     pub fn ptr_offset<C: HasDataLayout>(self, i: Size, cx: C) -> EvalResult<'tcx, Self> {"}]}