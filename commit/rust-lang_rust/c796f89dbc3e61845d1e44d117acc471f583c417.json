{"sha": "c796f89dbc3e61845d1e44d117acc471f583c417", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3OTZmODlkYmMzZTYxODQ1ZDFlNDRkMTE3YWNjNDcxZjU4M2M0MTc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-03-24T19:03:47Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-03-24T21:29:20Z"}, "message": "mk: Fix prepare.mk\n\nThe way it was formulated you could only 'prepare' one directory per build.", "tree": {"sha": "0d6d9520ccbaac17e387cb683383a5b4c9fcfbad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d6d9520ccbaac17e387cb683383a5b4c9fcfbad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c796f89dbc3e61845d1e44d117acc471f583c417", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c796f89dbc3e61845d1e44d117acc471f583c417", "html_url": "https://github.com/rust-lang/rust/commit/c796f89dbc3e61845d1e44d117acc471f583c417", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c796f89dbc3e61845d1e44d117acc471f583c417/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70a10758de83a3ccc677d53127fe66eb7d06b10c", "url": "https://api.github.com/repos/rust-lang/rust/commits/70a10758de83a3ccc677d53127fe66eb7d06b10c", "html_url": "https://github.com/rust-lang/rust/commit/70a10758de83a3ccc677d53127fe66eb7d06b10c"}], "stats": {"total": 138, "additions": 74, "deletions": 64}, "files": [{"sha": "9dd54e3ebe2e084ff606d845921fcf613dc7a239", "filename": "mk/dist.mk", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c796f89dbc3e61845d1e44d117acc471f583c417/mk%2Fdist.mk", "raw_url": "https://github.com/rust-lang/rust/raw/c796f89dbc3e61845d1e44d117acc471f583c417/mk%2Fdist.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdist.mk?ref=c796f89dbc3e61845d1e44d117acc471f583c417", "patch": "@@ -123,6 +123,8 @@ $(PKG_EXE): rust.iss modpath.iss LICENSE.txt rust-logo.ico \\\n \t@$(call E, ISCC: $@)\n \t$(Q)\"$(CFG_ISCC)\" $<\n \n+$(eval $(call DEF_PREPARE,win))\n+\n dist-prepare-win: PREPARE_HOST=$(CFG_BUILD)\n dist-prepare-win: PREPARE_TARGETS=$(CFG_BUILD)\n dist-prepare-win: PREPARE_DEST_DIR=tmp/dist/win\n@@ -131,7 +133,7 @@ dist-prepare-win: PREPARE_BIN_CMD=$(DEFAULT_PREPARE_BIN_CMD)\n dist-prepare-win: PREPARE_LIB_CMD=$(DEFAULT_PREPARE_LIB_CMD)\n dist-prepare-win: PREPARE_MAN_CMD=$(DEFAULT_PREPARE_MAN_CMD)\n dist-prepare-win: PREPARE_CLEAN=true\n-dist-prepare-win: prepare-base\n+dist-prepare-win: prepare-base-win\n \n endif\n \n@@ -146,14 +148,17 @@ distcheck-win: dist-win\n ifeq ($(CFG_OSTYPE), apple-darwin)\n \n define DEF_OSX_PKG\n+\n+$$(eval $$(call DEF_PREPARE,osx-$(1)))\n+\n dist-prepare-osx-$(1): PREPARE_HOST=$(1)\n dist-prepare-osx-$(1): PREPARE_TARGETS=$(1)\n dist-prepare-osx-$(1): PREPARE_DEST_DIR=tmp/dist/pkgroot-$(1)\n dist-prepare-osx-$(1): PREPARE_DIR_CMD=$(DEFAULT_PREPARE_DIR_CMD)\n dist-prepare-osx-$(1): PREPARE_BIN_CMD=$(DEFAULT_PREPARE_BIN_CMD)\n dist-prepare-osx-$(1): PREPARE_LIB_CMD=$(DEFAULT_PREPARE_LIB_CMD)\n dist-prepare-osx-$(1): PREPARE_MAN_CMD=$(DEFAULT_PREPARE_MAN_CMD)\n-dist-prepare-osx-$(1): prepare-base\n+dist-prepare-osx-$(1): prepare-base-osx-$(1)\n \n dist/$(PKG_NAME)-$(1).pkg: $(S)src/etc/pkg/Distribution.xml LICENSE.txt dist-prepare-osx-$(1)\n \t@$$(call E, making OS X pkg)\n@@ -182,6 +187,9 @@ distcheck-osx: dist-osx\n ######################################################################\n \n define DEF_INSTALLER\n+\n+$$(eval $$(call DEF_PREPARE,dir-$(1)))\n+\n dist-install-dir-$(1): PREPARE_HOST=$(1)\n dist-install-dir-$(1): PREPARE_TARGETS=$(1)\n dist-install-dir-$(1): PREPARE_DEST_DIR=tmp/dist/$$(PKG_NAME)-$(1)\n@@ -190,7 +198,7 @@ dist-install-dir-$(1): PREPARE_BIN_CMD=$(DEFAULT_PREPARE_BIN_CMD)\n dist-install-dir-$(1): PREPARE_LIB_CMD=$(DEFAULT_PREPARE_LIB_CMD)\n dist-install-dir-$(1): PREPARE_MAN_CMD=$(DEFAULT_PREPARE_MAN_CMD)\n dist-install-dir-$(1): PREPARE_CLEAN=true\n-dist-install-dir-$(1): prepare-base\n+dist-install-dir-$(1): prepare-base-dir-$(1)\n \t$$(Q)(cd $$(PREPARE_DEST_DIR)/ && find -type f) \\\n       > $$(PREPARE_DEST_DIR)/$$(CFG_LIBDIR_RELATIVE)/$$(CFG_RUSTLIBDIR)/manifest\n \t$$(Q)$$(PREPARE_MAN_CMD) $$(S)COPYRIGHT $$(PREPARE_DEST_DIR)"}, {"sha": "a4197fdb04508a5c67d479a84289df5c9c371580", "filename": "mk/prepare.mk", "status": "modified", "additions": 63, "deletions": 61, "changes": 124, "blob_url": "https://github.com/rust-lang/rust/blob/c796f89dbc3e61845d1e44d117acc471f583c417/mk%2Fprepare.mk", "raw_url": "https://github.com/rust-lang/rust/raw/c796f89dbc3e61845d1e44d117acc471f583c417/mk%2Fprepare.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fprepare.mk?ref=c796f89dbc3e61845d1e44d117acc471f583c417", "patch": "@@ -28,23 +28,6 @@ else\n PREPARE_STAGE=2\n endif\n \n-prepare: PREPARE_DIR_CMD=$(DEFAULT_PREPARE_DIR_CMD)\n-prepare: PREPARE_BIN_CMD=$(DEFAULT_PREPARE_BIN_CMD)\n-prepare: PREPARE_LIB_CMD=$(DEFAULT_PREPARE_LIB_CMD)\n-prepare: PREPARE_MAN_CMD=$(DEFAULT_PREPARE_MAN_CMD)\n-prepare: prepare-base\n-\n-prepare-base: PREPARE_SOURCE_DIR=$(PREPARE_HOST)/stage$(PREPARE_STAGE)\n-prepare-base: PREPARE_SOURCE_BIN_DIR=$(PREPARE_SOURCE_DIR)/bin\n-prepare-base: PREPARE_SOURCE_LIB_DIR=$(PREPARE_SOURCE_DIR)/$(CFG_LIBDIR_RELATIVE)\n-prepare-base: PREPARE_SOURCE_MAN_DIR=$(S)/man\n-prepare-base: PREPARE_DEST_BIN_DIR=$(PREPARE_DEST_DIR)/bin\n-prepare-base: PREPARE_DEST_LIB_DIR=$(PREPARE_DEST_DIR)/$(CFG_LIBDIR_RELATIVE)\n-prepare-base: PREPARE_DEST_MAN_DIR=$(PREPARE_DEST_DIR)/share/man/man1\n-prepare-base: prepare-host prepare-targets\n-\n-prepare-everything: prepare-host prepare-targets\n-\n DEFAULT_PREPARE_DIR_CMD = umask 022 && mkdir -p\n DEFAULT_PREPARE_BIN_CMD = install -m755\n DEFAULT_PREPARE_LIB_CMD = install -m644\n@@ -93,29 +76,17 @@ define PREPARE_MAN\n \t$(Q)$(PREPARE_MAN_CMD) $(PREPARE_SOURCE_MAN_DIR)/$(1) $(PREPARE_DEST_MAN_DIR)/$(1)\n endef\n \n-\n PREPARE_TOOLS = $(filter-out compiletest, $(TOOLS))\n \n-prepare-host: prepare-host-tools\n-\n-prepare-host-tools: \\\n-        $(foreach tool, $(PREPARE_TOOLS),\\\n-          $(foreach host,$(CFG_HOST),\\\n-            prepare-host-tool-$(tool)-$(PREPARE_STAGE)-$(host)))\n-\n-prepare-host-dirs: prepare-maybe-clean\n-\t$(call PREPARE_DIR,$(PREPARE_DEST_BIN_DIR))\n-\t$(call PREPARE_DIR,$(PREPARE_DEST_LIB_DIR))\n-\t$(call PREPARE_DIR,$(PREPARE_DEST_MAN_DIR))\n \n # $(1) is tool\n # $(2) is stage\n # $(3) is host\n+# $(4) tag\n define DEF_PREPARE_HOST_TOOL\n-prepare-host-tool-$(1)-$(2)-$(3): prepare-maybe-clean \\\n-                                  $$(foreach dep,$$(TOOL_DEPS_$(1)),prepare-host-lib-$$(dep)-$(2)-$(3)) \\\n-                                  $$(HBIN$(2)_H_$(3))/$(1)$$(X_$(3)) \\\n-                                  prepare-host-dirs\n+prepare-host-tool-$(1)-$(2)-$(3)-$(4): prepare-maybe-clean-$(4) \\\n+                                  $$(foreach dep,$$(TOOL_DEPS_$(1)),prepare-host-lib-$$(dep)-$(2)-$(3)-$(4)) \\\n+                                  prepare-host-dirs-$(4)\n \t$$(if $$(findstring $(2), $$(PREPARE_STAGE)),\\\n       $$(if $$(findstring $(3), $$(PREPARE_HOST)),\\\n         $$(call PREPARE_BIN,$(1)$$(X_$$(PREPARE_HOST))),),)\n@@ -124,45 +95,35 @@ prepare-host-tool-$(1)-$(2)-$(3): prepare-maybe-clean \\\n         $$(call PREPARE_MAN,$(1).1),),)\n endef\n \n-$(foreach tool,$(PREPARE_TOOLS),\\\n-  $(foreach host,$(CFG_HOST),\\\n-      $(eval $(call DEF_PREPARE_HOST_TOOL,$(tool),$(PREPARE_STAGE),$(host)))))\n-\n # For host libraries only install dylibs, not rlibs since the host libs are only\n # used to support rustc and rustc uses dynamic linking\n #\n # $(1) is tool\n # $(2) is stage\n # $(3) is host\n+# $(4) tag\n define DEF_PREPARE_HOST_LIB\n-prepare-host-lib-$(1)-$(2)-$(3): PREPARE_WORKING_SOURCE_LIB_DIR=$$(PREPARE_SOURCE_LIB_DIR)\n-prepare-host-lib-$(1)-$(2)-$(3): PREPARE_WORKING_DEST_LIB_DIR=$$(PREPARE_DEST_LIB_DIR)\n-prepare-host-lib-$(1)-$(2)-$(3): prepare-maybe-clean \\\n-                                 $$(foreach dep,$$(RUST_DEPS_$(1)),prepare-host-lib-$$(dep)-$(2)-$(3))\\\n+prepare-host-lib-$(1)-$(2)-$(3)-$(4): PREPARE_WORKING_SOURCE_LIB_DIR=$$(PREPARE_SOURCE_LIB_DIR)\n+prepare-host-lib-$(1)-$(2)-$(3)-$(4): PREPARE_WORKING_DEST_LIB_DIR=$$(PREPARE_DEST_LIB_DIR)\n+prepare-host-lib-$(1)-$(2)-$(3)-$(4): prepare-maybe-clean-$(4) \\\n+                                 $$(foreach dep,$$(RUST_DEPS_$(1)),prepare-host-lib-$$(dep)-$(2)-$(3)-$(4))\\\n                                  $$(HLIB$(2)_H_$(3))/stamp.$(1) \\\n-                                 prepare-host-dirs\n+                                 prepare-host-dirs-$(4)\n \t$$(if $$(findstring $(2), $$(PREPARE_STAGE)),\\\n       $$(if $$(findstring $(3), $$(PREPARE_HOST)),\\\n         $$(call PREPARE_LIB,$$(call CFG_LIB_GLOB_$$(PREPARE_HOST),$(1))),),)\n endef\n \n-$(foreach lib,$(CRATES),\\\n-  $(foreach host,$(CFG_HOST),\\\n-    $(eval $(call DEF_PREPARE_HOST_LIB,$(lib),$(PREPARE_STAGE),$(host)))))\n-\n-prepare-targets:\\\n-        $(foreach host,$(CFG_HOST),\\\n-           $(foreach target,$(CFG_TARGET),\\\n-             prepare-target-$(target)-host-$(host)-$(PREPARE_STAGE)))\n \n # $(1) is stage\n # $(2) is target\n # $(3) is host\n+# $(4) tag\n define DEF_PREPARE_TARGET_N\n # Rebind PREPARE_*_LIB_DIR to point to rustlib, then install the libs for the targets\n-prepare-target-$(2)-host-$(3)-$(1): PREPARE_WORKING_SOURCE_LIB_DIR=$$(PREPARE_SOURCE_LIB_DIR)/$$(CFG_RUSTLIBDIR)/$(2)/lib\n-prepare-target-$(2)-host-$(3)-$(1): PREPARE_WORKING_DEST_LIB_DIR=$$(PREPARE_DEST_LIB_DIR)/$$(CFG_RUSTLIBDIR)/$(2)/lib\n-prepare-target-$(2)-host-$(3)-$(1): prepare-maybe-clean \\\n+prepare-target-$(2)-host-$(3)-$(1)-$(4): PREPARE_WORKING_SOURCE_LIB_DIR=$$(PREPARE_SOURCE_LIB_DIR)/$$(CFG_RUSTLIBDIR)/$(2)/lib\n+prepare-target-$(2)-host-$(3)-$(1)-$(4): PREPARE_WORKING_DEST_LIB_DIR=$$(PREPARE_DEST_LIB_DIR)/$$(CFG_RUSTLIBDIR)/$(2)/lib\n+prepare-target-$(2)-host-$(3)-$(1)-$(4): prepare-maybe-clean-$(4) \\\n         $$(foreach crate,$$(TARGET_CRATES), \\\n           $$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$$(crate)) \\\n         $$(if $$(findstring $(2),$$(CFG_HOST)), \\\n@@ -186,12 +147,53 @@ prepare-target-$(2)-host-$(3)-$(1): prepare-maybe-clean \\\n           $$(call PREPARE_LIB,libcompiler-rt.a),),),)\n endef\n \n-$(foreach host,$(CFG_HOST),\\\n-  $(foreach target,$(CFG_TARGET), \\\n-    $(eval $(call DEF_PREPARE_TARGET_N,$(PREPARE_STAGE),$(target),$(host)))))\n+define DEF_PREPARE\n+\n+prepare-base-$(1): PREPARE_SOURCE_DIR=$$(PREPARE_HOST)/stage$$(PREPARE_STAGE)\n+prepare-base-$(1): PREPARE_SOURCE_BIN_DIR=$$(PREPARE_SOURCE_DIR)/bin\n+prepare-base-$(1): PREPARE_SOURCE_LIB_DIR=$$(PREPARE_SOURCE_DIR)/$$(CFG_LIBDIR_RELATIVE)\n+prepare-base-$(1): PREPARE_SOURCE_MAN_DIR=$$(S)/man\n+prepare-base-$(1): PREPARE_DEST_BIN_DIR=$$(PREPARE_DEST_DIR)/bin\n+prepare-base-$(1): PREPARE_DEST_LIB_DIR=$$(PREPARE_DEST_DIR)/$$(CFG_LIBDIR_RELATIVE)\n+prepare-base-$(1): PREPARE_DEST_MAN_DIR=$$(PREPARE_DEST_DIR)/share/man/man1\n+prepare-base-$(1): prepare-host-$(1) prepare-targets-$(1)\n+\n+prepare-host-$(1): prepare-host-tools-$(1)\n+\n+prepare-host-tools-$(1): \\\n+        $$(foreach tool, $$(PREPARE_TOOLS),\\\n+          $$(foreach host,$$(CFG_HOST),\\\n+            prepare-host-tool-$$(tool)-$$(PREPARE_STAGE)-$$(host)-$(1)))\n+\n+prepare-host-dirs-$(1): prepare-maybe-clean-$(1)\n+\t$$(call PREPARE_DIR,$$(PREPARE_DEST_BIN_DIR))\n+\t$$(call PREPARE_DIR,$$(PREPARE_DEST_LIB_DIR))\n+\t$$(call PREPARE_DIR,$$(PREPARE_DEST_MAN_DIR))\n+\n+$$(foreach tool,$$(PREPARE_TOOLS),\\\n+  $$(foreach host,$$(CFG_HOST),\\\n+      $$(eval $$(call DEF_PREPARE_HOST_TOOL,$$(tool),$$(PREPARE_STAGE),$$(host),$(1)))))\n+\n+$$(foreach lib,$$(CRATES),\\\n+  $$(foreach host,$$(CFG_HOST),\\\n+    $$(eval $$(call DEF_PREPARE_HOST_LIB,$$(lib),$$(PREPARE_STAGE),$$(host),$(1)))))\n+\n+prepare-targets-$(1):\\\n+        $$(foreach host,$$(CFG_HOST),\\\n+           $$(foreach target,$$(CFG_TARGET),\\\n+             prepare-target-$$(target)-host-$$(host)-$$(PREPARE_STAGE)-$(1)))\n+\n+$$(foreach host,$$(CFG_HOST),\\\n+  $$(foreach target,$$(CFG_TARGET), \\\n+    $$(eval $$(call DEF_PREPARE_TARGET_N,$$(PREPARE_STAGE),$$(target),$$(host),$(1)))))\n+\n+prepare-maybe-clean-$(1):\n+\t$$(if $$(findstring true,$$(PREPARE_CLEAN)),\\\n+      @$$(call E, cleaning destination $$(PREPARE_DEST_DIR)),)\n+\t$$(if $$(findstring true,$$(PREPARE_CLEAN)),\\\n+      $$(Q)rm -rf $$(PREPARE_DEST_DIR),)\n+\n+\n+endef\n+\n \n-prepare-maybe-clean:\n-\t$(if $(findstring true,$(PREPARE_CLEAN)),\\\n-      @$(call E, cleaning destination $(PREPARE_DEST_DIR)),)\n-\t$(if $(findstring true,$(PREPARE_CLEAN)),\\\n-      $(Q)rm -rf $(PREPARE_DEST_DIR),)"}]}