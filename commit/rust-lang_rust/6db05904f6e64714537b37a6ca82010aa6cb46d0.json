{"sha": "6db05904f6e64714537b37a6ca82010aa6cb46d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkYjA1OTA0ZjZlNjQ3MTQ1MzdiMzdhNmNhODIwMTBhYTZjYjQ2ZDA=", "commit": {"author": {"name": "Raoul Strackx", "email": "raoul.strackx@fortanix.com", "date": "2020-03-26T09:51:14Z"}, "committer": {"name": "Raoul Strackx", "email": "raoul.strackx@fortanix.com", "date": "2020-09-25T13:02:14Z"}, "message": "LVI test std lib", "tree": {"sha": "1d0664f5d1aee9a1f34f9ef1d7a4fd8bab3b8b6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d0664f5d1aee9a1f34f9ef1d7a4fd8bab3b8b6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6db05904f6e64714537b37a6ca82010aa6cb46d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6db05904f6e64714537b37a6ca82010aa6cb46d0", "html_url": "https://github.com/rust-lang/rust/commit/6db05904f6e64714537b37a6ca82010aa6cb46d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6db05904f6e64714537b37a6ca82010aa6cb46d0/comments", "author": {"login": "raoulstrackx", "id": 56830709, "node_id": "MDQ6VXNlcjU2ODMwNzA5", "avatar_url": "https://avatars.githubusercontent.com/u/56830709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raoulstrackx", "html_url": "https://github.com/raoulstrackx", "followers_url": "https://api.github.com/users/raoulstrackx/followers", "following_url": "https://api.github.com/users/raoulstrackx/following{/other_user}", "gists_url": "https://api.github.com/users/raoulstrackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/raoulstrackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raoulstrackx/subscriptions", "organizations_url": "https://api.github.com/users/raoulstrackx/orgs", "repos_url": "https://api.github.com/users/raoulstrackx/repos", "events_url": "https://api.github.com/users/raoulstrackx/events{/privacy}", "received_events_url": "https://api.github.com/users/raoulstrackx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "raoulstrackx", "id": 56830709, "node_id": "MDQ6VXNlcjU2ODMwNzA5", "avatar_url": "https://avatars.githubusercontent.com/u/56830709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raoulstrackx", "html_url": "https://github.com/raoulstrackx", "followers_url": "https://api.github.com/users/raoulstrackx/followers", "following_url": "https://api.github.com/users/raoulstrackx/following{/other_user}", "gists_url": "https://api.github.com/users/raoulstrackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/raoulstrackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raoulstrackx/subscriptions", "organizations_url": "https://api.github.com/users/raoulstrackx/orgs", "repos_url": "https://api.github.com/users/raoulstrackx/repos", "events_url": "https://api.github.com/users/raoulstrackx/events{/privacy}", "received_events_url": "https://api.github.com/users/raoulstrackx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "947d7238e0db03146d33d6b3354231d7e3384735", "url": "https://api.github.com/repos/rust-lang/rust/commits/947d7238e0db03146d33d6b3354231d7e3384735", "html_url": "https://github.com/rust-lang/rust/commit/947d7238e0db03146d33d6b3354231d7e3384735"}], "stats": {"total": 94, "additions": 78, "deletions": 16}, "files": [{"sha": "6a04d343910357dcf494cca7326f6a997fbef048", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/Makefile", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6db05904f6e64714537b37a6ca82010aa6cb46d0/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/6db05904f6e64714537b37a6ca82010aa6cb46d0/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2FMakefile?ref=6db05904f6e64714537b37a6ca82010aa6cb46d0", "patch": "@@ -2,16 +2,22 @@\n \n #only-x86_64-fortanix-unknown-sgx\n \n-OBJDUMP=\"${S}/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-objdump\"\n-FILECHECK=\"${S}/build/x86_64-unknown-linux-gnu/llvm/build/bin/FileCheck\"\n+# For cargo setting\n+export RUSTC := $(RUSTC_ORIGINAL)\n+export LD_LIBRARY_PATH := $(HOST_RPATH_DIR)\n+# We need to be outside of 'src' dir in order to run cargo\n+export WORK_DIR := $(TMPDIR)\n+export TEST_DIR := $(shell pwd)\n \n-all:\n-\t$(RUSTC) --target ${TARGET} enclave.rs\n-\n-\t#TODO: re-enable check when newly compiled libunwind is used\n-\t#${OBJDUMP} --disassemble-symbols=unw_getcontext --demangle $(TMPDIR)/enclave > $(TMPDIR)/unw_getcontext.asm\n-\t#${FILECHECK} --input-file $(TMPDIR)/unw_getcontext.asm unw_getcontext.checks\n+## clean up unused env variables which might cause harm.\n+unexport RUSTC_LINKER\n+unexport RUSTC_BOOTSTRAP\n+unexport RUST_BUILD_STAGE\n+unexport RUST_TEST_THREADS\n+unexport RUST_TEST_TMPDIR\n+unexport AR\n+unexport CC\n+unexport CXX\n \n-\t#TODO: re-enable check when newly compiled libunwind is used\n-\t${OBJDUMP} --disassemble-symbols=\"libunwind::Registers_x86_64::jumpto()\" --demangle $(TMPDIR)/enclave > $(TMPDIR)/jumpto.asm\n-\t${FILECHECK} --input-file $(TMPDIR)/jumpto.asm jumpto.checks\n+all:\n+\tbash script.sh"}, {"sha": "66c8ead3e0ff41395b2819496e6e7ac50b526f9a", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/enclave.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/947d7238e0db03146d33d6b3354231d7e3384735/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave.rs", "raw_url": "https://github.com/rust-lang/rust/raw/947d7238e0db03146d33d6b3354231d7e3384735/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave.rs?ref=947d7238e0db03146d33d6b3354231d7e3384735", "patch": "@@ -1,5 +0,0 @@\n-\n-pub fn main() {\n-    println!(\"Hello, World!\");\n-}\n-"}, {"sha": "723cd7c3cc23282257940bd5c0ba2c38a9abec55", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/enclave/Cargo.toml", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6db05904f6e64714537b37a6ca82010aa6cb46d0/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6db05904f6e64714537b37a6ca82010aa6cb46d0/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2FCargo.toml?ref=6db05904f6e64714537b37a6ca82010aa6cb46d0", "patch": "@@ -0,0 +1,9 @@\n+[package]\n+name = \"enclave\"\n+version = \"0.1.0\"\n+authors = [\"Raoul Strackx <raoul.strackx@fortanix.com>\"]\n+edition = \"2018\"\n+\n+# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\n+\n+[dependencies]"}, {"sha": "e7a11a969c037e00a796aafeff6258501ec15e9a", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/enclave/src/main.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6db05904f6e64714537b37a6ca82010aa6cb46d0/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6db05904f6e64714537b37a6ca82010aa6cb46d0/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Fsrc%2Fmain.rs?ref=6db05904f6e64714537b37a6ca82010aa6cb46d0", "patch": "@@ -0,0 +1,3 @@\n+fn main() {\n+    println!(\"Hello, world!\");\n+}"}, {"sha": "0fe88141b24739f2c4b075befcc5f7ca961c1d64", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/print.checks", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6db05904f6e64714537b37a6ca82010aa6cb46d0/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fprint.checks", "raw_url": "https://github.com/rust-lang/rust/raw/6db05904f6e64714537b37a6ca82010aa6cb46d0/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fprint.checks", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fprint.checks?ref=6db05904f6e64714537b37a6ca82010aa6cb46d0", "patch": "@@ -0,0 +1,7 @@\n+CHECK: print\n+CHECK:      lfence\n+CHECK:      lfence\n+CHECK:      lfence\n+CHECK:      popq\n+CHECK:      callq 0x{{[[:xdigit:]]*}} <_Unwind_Resume>\n+CHECK-NEXT: ud2"}, {"sha": "98e5284aadcbea0a452fce06beab92a0122ffa6a", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/script.sh", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/6db05904f6e64714537b37a6ca82010aa6cb46d0/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fscript.sh", "raw_url": "https://github.com/rust-lang/rust/raw/6db05904f6e64714537b37a6ca82010aa6cb46d0/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fscript.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fscript.sh?ref=6db05904f6e64714537b37a6ca82010aa6cb46d0", "patch": "@@ -0,0 +1,42 @@\n+set -exuo pipefail\n+\n+function build {\n+    CRATE=enclave\n+\n+    mkdir -p $WORK_DIR\n+    pushd $WORK_DIR\n+        rm -rf $CRATE\n+        cp -a $TEST_DIR/enclave .\n+        pushd $CRATE\n+            echo ${WORK_DIR}\n+            # HACK(eddyb) sets `RUSTC_BOOTSTRAP=1` so Cargo can accept nightly features.\n+            # These come from the top-level Rust workspace, that this crate is not a\n+            # member of, but Cargo tries to load the workspace `Cargo.toml` anyway.\n+            env RUSTC_BOOTSTRAP=1  \\\n+                cargo -v run --target $TARGET\n+            env RUSTC_BOOTSTRAP=1  \\\n+                cargo -v run --target $TARGET --release \n+        popd\n+    popd\n+}\n+\n+function check {\n+    local func=$1\n+    local checks=\"${TEST_DIR}/$2\"\n+    local asm=$(mktemp)\n+    local objdump=\"${BUILD_DIR}/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-objdump\"\n+    local filecheck=\"${BUILD_DIR}/x86_64-unknown-linux-gnu/llvm/build/bin/FileCheck\"\n+    \n+    ${objdump} --disassemble-symbols=${func} --demangle ${WORK_DIR}/enclave/target/x86_64-fortanix-unknown-sgx/debug/enclave > ${asm}\n+    ${filecheck} --input-file ${asm} ${checks}\n+}\n+\n+build\n+\n+#TODO: re-enable check when newly compiled libunwind is used\n+#check unw_getcontext unw_getcontext.checks\n+\n+#TODO: re-enable check when newly compiled libunwind is used\n+#check \"libunwind::Registers_x86_64::jumpto()\" jumpto.checks\n+\n+check \"std::io::stdio::_print::h87f0c238421c45bc\" print.checks"}]}