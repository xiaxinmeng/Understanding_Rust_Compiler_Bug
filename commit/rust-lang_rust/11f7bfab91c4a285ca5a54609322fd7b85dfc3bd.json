{"sha": "11f7bfab91c4a285ca5a54609322fd7b85dfc3bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExZjdiZmFiOTFjNGEyODVjYTVhNTQ2MDkzMjJmZDdiODVkZmMzYmQ=", "commit": {"author": {"name": "ecstatic-morse", "email": "ecstaticmorse@gmail.com", "date": "2020-09-22T03:40:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-22T03:40:37Z"}, "message": "Rollup merge of #72734 - pickfire:liballoc, r=KodrAus\n\nReduce duplicate in liballoc reserve error handling\n\nNot sure if it affects compilation time.", "tree": {"sha": "449be10bd5fb5653459929e1aa4c159cd8a455b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/449be10bd5fb5653459929e1aa4c159cd8a455b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11f7bfab91c4a285ca5a54609322fd7b85dfc3bd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfaXI2CRBK7hj4Ov3rIwAAdHIIALKKlK+3UHrnCDEn69inb9m/\nGM9CR0HM0ZP6wBbWd4DI3agZQ6WEFsk2IhUE6M+ZBbMTr4wRo4nsZ4CrsO3kVH9q\nIDjaPa3VLOvK8AbSClPmk36Z3Uy1ek7cW8QtKHM6cMYAYUTmi2tMDMN0mzR5PQMo\njyVuZg3/oybWOiOBtNPSNmRFqxCj0yTUlrftZMMfZ6uB/hedX5Z+S3zQAGq1bZYf\nsLDdXTmDgy/0oUzh3LQATlHs1R8ITgNYLn/FvF3qo81rpLYXaS4Qqm9Zwyg2XxGn\nGmMMuvOF+2L88oM13vDpbOWKmjY2Ghuio5YYLOSou7XLIIWqqZbBTYSEz39+Ssw=\n=Lyfs\n-----END PGP SIGNATURE-----\n", "payload": "tree 449be10bd5fb5653459929e1aa4c159cd8a455b9\nparent 45198456be60a6906d24abdc3c67a31b9206188e\nparent c5975e9b6c5781b3b7300b7921c14b060086e1c1\nauthor ecstatic-morse <ecstaticmorse@gmail.com> 1600746037 -0700\ncommitter GitHub <noreply@github.com> 1600746037 -0700\n\nRollup merge of #72734 - pickfire:liballoc, r=KodrAus\n\nReduce duplicate in liballoc reserve error handling\n\nNot sure if it affects compilation time.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11f7bfab91c4a285ca5a54609322fd7b85dfc3bd", "html_url": "https://github.com/rust-lang/rust/commit/11f7bfab91c4a285ca5a54609322fd7b85dfc3bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11f7bfab91c4a285ca5a54609322fd7b85dfc3bd/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45198456be60a6906d24abdc3c67a31b9206188e", "url": "https://api.github.com/repos/rust-lang/rust/commits/45198456be60a6906d24abdc3c67a31b9206188e", "html_url": "https://github.com/rust-lang/rust/commit/45198456be60a6906d24abdc3c67a31b9206188e"}, {"sha": "c5975e9b6c5781b3b7300b7921c14b060086e1c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5975e9b6c5781b3b7300b7921c14b060086e1c1", "html_url": "https://github.com/rust-lang/rust/commit/c5975e9b6c5781b3b7300b7921c14b060086e1c1"}], "stats": {"total": 28, "additions": 13, "deletions": 15}, "files": [{"sha": "e33dddc4f984183730d669885632f07828704c0d", "filename": "library/alloc/src/raw_vec.rs", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/11f7bfab91c4a285ca5a54609322fd7b85dfc3bd/library%2Falloc%2Fsrc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11f7bfab91c4a285ca5a54609322fd7b85dfc3bd/library%2Falloc%2Fsrc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fraw_vec.rs?ref=11f7bfab91c4a285ca5a54609322fd7b85dfc3bd", "patch": "@@ -306,11 +306,7 @@ impl<T, A: AllocRef> RawVec<T, A> {\n     /// # }\n     /// ```\n     pub fn reserve(&mut self, len: usize, additional: usize) {\n-        match self.try_reserve(len, additional) {\n-            Err(CapacityOverflow) => capacity_overflow(),\n-            Err(AllocError { layout, .. }) => handle_alloc_error(layout),\n-            Ok(()) => { /* yay */ }\n-        }\n+        handle_reserve(self.try_reserve(len, additional));\n     }\n \n     /// The same as `reserve`, but returns on errors instead of panicking or aborting.\n@@ -340,11 +336,7 @@ impl<T, A: AllocRef> RawVec<T, A> {\n     ///\n     /// Aborts on OOM.\n     pub fn reserve_exact(&mut self, len: usize, additional: usize) {\n-        match self.try_reserve_exact(len, additional) {\n-            Err(CapacityOverflow) => capacity_overflow(),\n-            Err(AllocError { layout, .. }) => handle_alloc_error(layout),\n-            Ok(()) => { /* yay */ }\n-        }\n+        handle_reserve(self.try_reserve_exact(len, additional));\n     }\n \n     /// The same as `reserve_exact`, but returns on errors instead of panicking or aborting.\n@@ -367,11 +359,7 @@ impl<T, A: AllocRef> RawVec<T, A> {\n     ///\n     /// Aborts on OOM.\n     pub fn shrink_to_fit(&mut self, amount: usize) {\n-        match self.shrink(amount) {\n-            Err(CapacityOverflow) => capacity_overflow(),\n-            Err(AllocError { layout, .. }) => handle_alloc_error(layout),\n-            Ok(()) => { /* yay */ }\n-        }\n+        handle_reserve(self.shrink(amount));\n     }\n }\n \n@@ -517,6 +505,16 @@ unsafe impl<#[may_dangle] T, A: AllocRef> Drop for RawVec<T, A> {\n     }\n }\n \n+// Central function for reserve error handling.\n+#[inline]\n+fn handle_reserve(result: Result<(), TryReserveError>) {\n+    match result {\n+        Err(CapacityOverflow) => capacity_overflow(),\n+        Err(AllocError { layout, .. }) => handle_alloc_error(layout),\n+        Ok(()) => { /* yay */ }\n+    }\n+}\n+\n // We need to guarantee the following:\n // * We don't ever allocate `> isize::MAX` byte-size objects.\n // * We don't overflow `usize::MAX` and actually allocate too little."}]}