{"sha": "2920e7b28b58400a9026e92f28fc0304d71c7376", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5MjBlN2IyOGI1ODQwMGE5MDI2ZTkyZjI4ZmMwMzA0ZDcxYzczNzY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-02-17T09:43:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-17T09:43:13Z"}, "message": "Merge #7701\n\n7701: Remove semantic tokens workaround r=SomeoneToIgnore a=kjeremy\n\nLet's try this again.\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>", "tree": {"sha": "89e7a25214a5b823ad62308a48e454cf63f93e11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89e7a25214a5b823ad62308a48e454cf63f93e11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2920e7b28b58400a9026e92f28fc0304d71c7376", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgLOUxCRBK7hj4Ov3rIwAAdHIIACkdPj1ZMk5z8y9htuJM4JZ0\nGbjIUIbyLc3Zu4iV49xasfhT2qFT8oVxBi+WMJwEm/+NvPfAI0Z5lZwkHx6N76pI\niX2rmH99YYJ1PG2SV6nEOUPrzbWRIrBscjlq5wKYTq4I8fnZv/2N2BlGbSkqB07k\nO18LYCF3E8k7viSCxpUe8NuKJuiLQKRE0Qn1DxOCwYvQb7/E3SUdxnfaXyxJofNk\nLl3Ee1Xj7sJAAyNmQiThnkDZcfsSw5JF5i4ko+ZQ/tHXJ56uYXFeOASE3D/yh0OT\naLNtepDdwqG6rSy0aiKw72rKawLWjdTBnuxHrcNGn08OSb0Gt0LeoMuUDvc4lkM=\n=ntkn\n-----END PGP SIGNATURE-----\n", "payload": "tree 89e7a25214a5b823ad62308a48e454cf63f93e11\nparent b3c848ee286ddb643fb2d857060cd618a7dc25a7\nparent a403be6456a0f579e5536e19aa230a425e7ea71b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1613554993 +0000\ncommitter GitHub <noreply@github.com> 1613554993 +0000\n\nMerge #7701\n\n7701: Remove semantic tokens workaround r=SomeoneToIgnore a=kjeremy\n\nLet's try this again.\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2920e7b28b58400a9026e92f28fc0304d71c7376", "html_url": "https://github.com/rust-lang/rust/commit/2920e7b28b58400a9026e92f28fc0304d71c7376", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2920e7b28b58400a9026e92f28fc0304d71c7376/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3c848ee286ddb643fb2d857060cd618a7dc25a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3c848ee286ddb643fb2d857060cd618a7dc25a7", "html_url": "https://github.com/rust-lang/rust/commit/b3c848ee286ddb643fb2d857060cd618a7dc25a7"}, {"sha": "a403be6456a0f579e5536e19aa230a425e7ea71b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a403be6456a0f579e5536e19aa230a425e7ea71b", "html_url": "https://github.com/rust-lang/rust/commit/a403be6456a0f579e5536e19aa230a425e7ea71b"}], "stats": {"total": 45, "additions": 14, "deletions": 31}, "files": [{"sha": "af3035db918477af68db77b6f88670960e54c224", "filename": "editors/code/package-lock.json", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2920e7b28b58400a9026e92f28fc0304d71c7376/editors%2Fcode%2Fpackage-lock.json", "raw_url": "https://github.com/rust-lang/rust/raw/2920e7b28b58400a9026e92f28fc0304d71c7376/editors%2Fcode%2Fpackage-lock.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage-lock.json?ref=2920e7b28b58400a9026e92f28fc0304d71c7376", "patch": "@@ -2931,22 +2931,22 @@\n             }\n         },\n         \"node_modules/vscode-languageclient\": {\n-            \"version\": \"7.1.0-next.1\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-languageclient/-/vscode-languageclient-7.1.0-next.1.tgz\",\n-            \"integrity\": \"sha512-pMdMyJ5e3CfdyvtDsj6ytTO+WcmrvtrFJWvBk4rZnIKmA3aCjrqTYI0XSWN/Cf4kcaV1J2+fTZf/2RcP2SzDiQ==\",\n+            \"version\": \"7.1.0-next.2\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-languageclient/-/vscode-languageclient-7.1.0-next.2.tgz\",\n+            \"integrity\": \"sha512-LhSxbPcUDzlBRCp5vRo4ZRk75CrfXZ2FF1soXIlbHp9TeGQI1M3YD8ECAe0VvfYD/STemMzJrj4cHA2oWiOg0w==\",\n             \"dependencies\": {\n                 \"minimatch\": \"^3.0.4\",\n                 \"semver\": \"^7.3.4\",\n-                \"vscode-languageserver-protocol\": \"3.17.0-next.1\"\n+                \"vscode-languageserver-protocol\": \"3.17.0-next.3\"\n             },\n             \"engines\": {\n                 \"vscode\": \"^1.53.0\"\n             }\n         },\n         \"node_modules/vscode-languageserver-protocol\": {\n-            \"version\": \"3.17.0-next.1\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-protocol/-/vscode-languageserver-protocol-3.17.0-next.1.tgz\",\n-            \"integrity\": \"sha512-cbFKGk+Q7HQ5RDdf6qiQrRv9qxR/87hBm/GrfLcQ5rmHPJOXg//ZYCXEQF+wSJNmcc6IrnET2cHJUxlZYHUEXA==\",\n+            \"version\": \"3.17.0-next.3\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-protocol/-/vscode-languageserver-protocol-3.17.0-next.3.tgz\",\n+            \"integrity\": \"sha512-II+BN3BqsGXyasN8BDgLFlELxkRLLWkafFzRZMEfMTqJ6oNMINTbMDZgZ6YpbMLHwfoq+h3Q04zLOZqF4YW6bg==\",\n             \"dependencies\": {\n                 \"vscode-jsonrpc\": \"6.1.0-next.1\",\n                 \"vscode-languageserver-types\": \"3.17.0-next.1\"\n@@ -5629,19 +5629,19 @@\n             \"integrity\": \"sha512-2s1qEg8N97p8pooHnA8xgR4vnslCTJuE3rQqSQeJuSDklFcQSn9yW8gOinH/1vKeWiPuzHTG9FFty91v4v9Pag==\"\n         },\n         \"vscode-languageclient\": {\n-            \"version\": \"7.1.0-next.1\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-languageclient/-/vscode-languageclient-7.1.0-next.1.tgz\",\n-            \"integrity\": \"sha512-pMdMyJ5e3CfdyvtDsj6ytTO+WcmrvtrFJWvBk4rZnIKmA3aCjrqTYI0XSWN/Cf4kcaV1J2+fTZf/2RcP2SzDiQ==\",\n+            \"version\": \"7.1.0-next.2\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-languageclient/-/vscode-languageclient-7.1.0-next.2.tgz\",\n+            \"integrity\": \"sha512-LhSxbPcUDzlBRCp5vRo4ZRk75CrfXZ2FF1soXIlbHp9TeGQI1M3YD8ECAe0VvfYD/STemMzJrj4cHA2oWiOg0w==\",\n             \"requires\": {\n                 \"minimatch\": \"^3.0.4\",\n                 \"semver\": \"^7.3.4\",\n-                \"vscode-languageserver-protocol\": \"3.17.0-next.1\"\n+                \"vscode-languageserver-protocol\": \"3.17.0-next.3\"\n             }\n         },\n         \"vscode-languageserver-protocol\": {\n-            \"version\": \"3.17.0-next.1\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-protocol/-/vscode-languageserver-protocol-3.17.0-next.1.tgz\",\n-            \"integrity\": \"sha512-cbFKGk+Q7HQ5RDdf6qiQrRv9qxR/87hBm/GrfLcQ5rmHPJOXg//ZYCXEQF+wSJNmcc6IrnET2cHJUxlZYHUEXA==\",\n+            \"version\": \"3.17.0-next.3\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-protocol/-/vscode-languageserver-protocol-3.17.0-next.3.tgz\",\n+            \"integrity\": \"sha512-II+BN3BqsGXyasN8BDgLFlELxkRLLWkafFzRZMEfMTqJ6oNMINTbMDZgZ6YpbMLHwfoq+h3Q04zLOZqF4YW6bg==\",\n             \"requires\": {\n                 \"vscode-jsonrpc\": \"6.1.0-next.1\",\n                 \"vscode-languageserver-types\": \"3.17.0-next.1\""}, {"sha": "0771ca3b69a7cf2e2a442df1627973b59febef58", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2920e7b28b58400a9026e92f28fc0304d71c7376/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/2920e7b28b58400a9026e92f28fc0304d71c7376/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=2920e7b28b58400a9026e92f28fc0304d71c7376", "patch": "@@ -2,7 +2,6 @@ import * as lc from 'vscode-languageclient/node';\n import * as vscode from 'vscode';\n import * as ra from '../src/lsp_ext';\n import * as Is from 'vscode-languageclient/lib/common/utils/is';\n-import { DocumentSemanticsTokensSignature, DocumentSemanticsTokensEditsSignature, DocumentRangeSemanticTokensSignature } from 'vscode-languageclient/lib/common/semanticTokens';\n import { assert } from './util';\n import { WorkspaceEdit } from 'vscode';\n \n@@ -24,13 +23,6 @@ function renderHoverActions(actions: ra.CommandLinkGroup[]): vscode.MarkdownStri\n     return result;\n }\n \n-// Workaround for https://github.com/microsoft/vscode-languageserver-node/issues/576\n-async function semanticHighlightingWorkaround<R, F extends (...args: any[]) => vscode.ProviderResult<R>>(next: F, ...args: Parameters<F>): Promise<R> {\n-    const res = await next(...args);\n-    if (res == null) throw new Error('busy');\n-    return res;\n-}\n-\n export function createClient(serverPath: string, cwd: string, extraEnv: Env): lc.LanguageClient {\n     // '.' Is the fallback if no folder is open\n     // TODO?: Workspace folders support Uri's (eg: file://test.txt).\n@@ -57,15 +49,6 @@ export function createClient(serverPath: string, cwd: string, extraEnv: Env): lc\n         diagnosticCollectionName: \"rustc\",\n         traceOutputChannel,\n         middleware: {\n-            provideDocumentSemanticTokens(document: vscode.TextDocument, token: vscode.CancellationToken, next: DocumentSemanticsTokensSignature): vscode.ProviderResult<vscode.SemanticTokens> {\n-                return semanticHighlightingWorkaround(next, document, token);\n-            },\n-            provideDocumentSemanticTokensEdits(document: vscode.TextDocument, previousResultId: string, token: vscode.CancellationToken, next: DocumentSemanticsTokensEditsSignature): vscode.ProviderResult<vscode.SemanticTokensEdits | vscode.SemanticTokens> {\n-                return semanticHighlightingWorkaround(next, document, previousResultId, token);\n-            },\n-            provideDocumentRangeSemanticTokens(document: vscode.TextDocument, range: vscode.Range, token: vscode.CancellationToken, next: DocumentRangeSemanticTokensSignature): vscode.ProviderResult<vscode.SemanticTokens> {\n-                return semanticHighlightingWorkaround(next, document, range, token);\n-            },\n             async provideHover(document: vscode.TextDocument, position: vscode.Position, token: vscode.CancellationToken, _next: lc.ProvideHoverSignature) {\n                 return client.sendRequest(lc.HoverRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(\n                     (result) => {"}]}