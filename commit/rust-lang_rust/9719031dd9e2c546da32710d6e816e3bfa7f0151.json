{"sha": "9719031dd9e2c546da32710d6e816e3bfa7f0151", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3MTkwMzFkZDllMmM1NDZkYTMyNzEwZDZlODE2ZTNiZmE3ZjAxNTE=", "commit": {"author": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2021-05-15T14:05:06Z"}, "committer": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2021-05-15T14:05:06Z"}, "message": "bootstrap: ensure host std when cross-compiling tools, fixes #85320", "tree": {"sha": "b23e1f39a3ae392986135bd8d94989aee8988095", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b23e1f39a3ae392986135bd8d94989aee8988095"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9719031dd9e2c546da32710d6e816e3bfa7f0151", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9719031dd9e2c546da32710d6e816e3bfa7f0151", "html_url": "https://github.com/rust-lang/rust/commit/9719031dd9e2c546da32710d6e816e3bfa7f0151", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9719031dd9e2c546da32710d6e816e3bfa7f0151/comments", "author": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75da570d784a798a34ff1e5048cd9a6a2fb23170", "url": "https://api.github.com/repos/rust-lang/rust/commits/75da570d784a798a34ff1e5048cd9a6a2fb23170", "html_url": "https://github.com/rust-lang/rust/commit/75da570d784a798a34ff1e5048cd9a6a2fb23170"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "a99bacfb6168997851c7a827eabc4e7df1b5c728", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9719031dd9e2c546da32710d6e816e3bfa7f0151/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9719031dd9e2c546da32710d6e816e3bfa7f0151/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=9719031dd9e2c546da32710d6e816e3bfa7f0151", "patch": "@@ -52,7 +52,10 @@ impl Step for ToolBuild {\n         let is_optional_tool = self.is_optional_tool;\n \n         match self.mode {\n-            Mode::ToolRustc => builder.ensure(compile::Rustc { compiler, target }),\n+            Mode::ToolRustc => {\n+                builder.ensure(compile::Std { compiler, target: compiler.host });\n+                builder.ensure(compile::Rustc { compiler, target });\n+            }\n             Mode::ToolStd => builder.ensure(compile::Std { compiler, target }),\n             Mode::ToolBootstrap => {} // uses downloaded stage0 compiler libs\n             _ => panic!(\"unexpected Mode for tool build\"),"}]}