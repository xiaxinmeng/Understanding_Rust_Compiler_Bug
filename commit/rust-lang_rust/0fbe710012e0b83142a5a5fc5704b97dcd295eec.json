{"sha": "0fbe710012e0b83142a5a5fc5704b97dcd295eec", "node_id": "C_kwDOAAsO6NoAKDBmYmU3MTAwMTJlMGI4MzE0MmE1YTVmYzU3MDRiOTdkY2QyOTVlZWM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-05T16:38:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-05T16:38:53Z"}, "message": "Auto merge of #2194 - RalfJung:race, r=RalfJung\n\nadd interesting data race test\n\nThis interesting testcase came up in https://github.com/rust-lang/miri/issues/2192.", "tree": {"sha": "96813ef5e8590a90ec9dc910e2d937e0577a8223", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96813ef5e8590a90ec9dc910e2d937e0577a8223"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fbe710012e0b83142a5a5fc5704b97dcd295eec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fbe710012e0b83142a5a5fc5704b97dcd295eec", "html_url": "https://github.com/rust-lang/rust/commit/0fbe710012e0b83142a5a5fc5704b97dcd295eec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fbe710012e0b83142a5a5fc5704b97dcd295eec/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d312b34feb70ebd45cecceb325454101e7bad985", "url": "https://api.github.com/repos/rust-lang/rust/commits/d312b34feb70ebd45cecceb325454101e7bad985", "html_url": "https://github.com/rust-lang/rust/commit/d312b34feb70ebd45cecceb325454101e7bad985"}, {"sha": "b2832008e236d20fdb1ba7d724d389295d1d2493", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2832008e236d20fdb1ba7d724d389295d1d2493", "html_url": "https://github.com/rust-lang/rust/commit/b2832008e236d20fdb1ba7d724d389295d1d2493"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "b381715933866625109f3ade204090e4352a5efd", "filename": "tests/fail/data_race/fence_after_load.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/0fbe710012e0b83142a5a5fc5704b97dcd295eec/tests%2Ffail%2Fdata_race%2Ffence_after_load.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fbe710012e0b83142a5a5fc5704b97dcd295eec/tests%2Ffail%2Fdata_race%2Ffence_after_load.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Ffence_after_load.rs?ref=0fbe710012e0b83142a5a5fc5704b97dcd295eec", "patch": "@@ -0,0 +1,24 @@\n+// compile-flags: -Zmiri-disable-isolation\n+// ignore-windows: Concurrency on Windows is not supported yet.\n+use std::sync::Arc;\n+use std::sync::atomic::{AtomicUsize, Ordering, fence};\n+use std::time::Duration;\n+use std::thread;\n+\n+fn main() {\n+    static mut V: u32 = 0;\n+    let a = Arc::new(AtomicUsize::default());\n+    let b = a.clone();\n+    thread::spawn(move || {\n+        unsafe { V = 1 }\n+        b.store(1, Ordering::SeqCst);\n+    });\n+    thread::sleep(Duration::from_millis(100));\n+    fence(Ordering::SeqCst);\n+    // Imagine the other thread's actions happening here.\n+    assert_eq!(a.load(Ordering::Relaxed), 1);\n+    // The fence is useless, since it did not happen-after the `store` in the other thread.\n+    // Hence this is a data race.\n+    // Also see https://github.com/rust-lang/miri/issues/2192.\n+    unsafe { V = 2 } //~ERROR Data race detected\n+}"}, {"sha": "14452391327a10e006cb795758d36fb7c90dbb04", "filename": "tests/fail/data_race/fence_after_load.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0fbe710012e0b83142a5a5fc5704b97dcd295eec/tests%2Ffail%2Fdata_race%2Ffence_after_load.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fbe710012e0b83142a5a5fc5704b97dcd295eec/tests%2Ffail%2Fdata_race%2Ffence_after_load.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Ffence_after_load.stderr?ref=0fbe710012e0b83142a5a5fc5704b97dcd295eec", "patch": "@@ -0,0 +1,17 @@\n+warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+\n+error: Undefined Behavior: Data race detected between Write on Thread(id = 0, name = \"main\") and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n+  --> $DIR/fence_after_load.rs:LL:CC\n+   |\n+LL |     unsafe { V = 2 }\n+   |              ^^^^^ Data race detected between Write on Thread(id = 0, name = \"main\") and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n+   |\n+   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n+   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n+           \n+   = note: inside `main` at $DIR/fence_after_load.rs:LL:CC\n+\n+note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n+\n+error: aborting due to previous error; 1 warning emitted\n+"}]}