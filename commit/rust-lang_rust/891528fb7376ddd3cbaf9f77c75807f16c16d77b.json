{"sha": "891528fb7376ddd3cbaf9f77c75807f16c16d77b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MTUyOGZiNzM3NmRkZDNjYmFmOWY3N2M3NTgwN2YxNmMxNmQ3N2I=", "commit": {"author": {"name": "Stefan Plantikow", "email": "stefan.plantikow@googlemail.com", "date": "2011-11-24T19:43:33Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-25T00:21:14Z"}, "message": "std: math: renaming and documentation fixes", "tree": {"sha": "4e67bd5ce75f5408e6f7933006e6e773dac2fba5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e67bd5ce75f5408e6f7933006e6e773dac2fba5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/891528fb7376ddd3cbaf9f77c75807f16c16d77b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/891528fb7376ddd3cbaf9f77c75807f16c16d77b", "html_url": "https://github.com/rust-lang/rust/commit/891528fb7376ddd3cbaf9f77c75807f16c16d77b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/891528fb7376ddd3cbaf9f77c75807f16c16d77b/comments", "author": {"login": "boggle", "id": 50886, "node_id": "MDQ6VXNlcjUwODg2", "avatar_url": "https://avatars.githubusercontent.com/u/50886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boggle", "html_url": "https://github.com/boggle", "followers_url": "https://api.github.com/users/boggle/followers", "following_url": "https://api.github.com/users/boggle/following{/other_user}", "gists_url": "https://api.github.com/users/boggle/gists{/gist_id}", "starred_url": "https://api.github.com/users/boggle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boggle/subscriptions", "organizations_url": "https://api.github.com/users/boggle/orgs", "repos_url": "https://api.github.com/users/boggle/repos", "events_url": "https://api.github.com/users/boggle/events{/privacy}", "received_events_url": "https://api.github.com/users/boggle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97fc39b214a559d5525199512d81a6e0476c28bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/97fc39b214a559d5525199512d81a6e0476c28bc", "html_url": "https://github.com/rust-lang/rust/commit/97fc39b214a559d5525199512d81a6e0476c28bc"}], "stats": {"total": 43, "additions": 35, "deletions": 8}, "files": [{"sha": "7b4308668b48a290c4baf0cbf5760267070bbb7f", "filename": "src/lib/math.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/891528fb7376ddd3cbaf9f77c75807f16c16d77b/src%2Flib%2Fmath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/891528fb7376ddd3cbaf9f77c75807f16c16d77b/src%2Flib%2Fmath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fmath.rs?ref=891528fb7376ddd3cbaf9f77c75807f16c16d77b", "patch": "@@ -1,4 +1,9 @@\n-/* Module: math */\n+/*\n+\n+Module: math\n+\n+Floating point operations and constants for `float`s\n+*/\n \n export consts;\n export min, max;\n@@ -15,7 +20,7 @@ export\n \n import ctypes::c_float;\n import ctypes::c_int;\n-import c_float = f64;\n+import c_float = math_f64;\n \n // FIXME replace with redirect to c_float::consts::FOO as soon as it works\n mod consts {"}, {"sha": "2172c9f8a99c19049f38aa799ce5c0424c29de94", "filename": "src/lib/math_f32.rs", "status": "renamed", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/891528fb7376ddd3cbaf9f77c75807f16c16d77b/src%2Flib%2Fmath_f32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/891528fb7376ddd3cbaf9f77c75807f16c16d77b/src%2Flib%2Fmath_f32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fmath_f32.rs?ref=891528fb7376ddd3cbaf9f77c75807f16c16d77b", "patch": "@@ -1,3 +1,13 @@\n+\n+/*\n+Module: math_f32\n+\n+Floating point operations and constants for `f32`\n+\n+This exposes the same operations as `math`, just for `f32` even though\n+they do not show up in the docs right now!\n+*/\n+\n import cmath::f32::*;\n \n export", "previous_filename": "src/lib/f32.rs"}, {"sha": "639dc4a29b25f5f0ca7fa5668c267ffee1743b1d", "filename": "src/lib/math_f64.rs", "status": "renamed", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/891528fb7376ddd3cbaf9f77c75807f16c16d77b/src%2Flib%2Fmath_f64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/891528fb7376ddd3cbaf9f77c75807f16c16d77b/src%2Flib%2Fmath_f64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fmath_f64.rs?ref=891528fb7376ddd3cbaf9f77c75807f16c16d77b", "patch": "@@ -1,3 +1,13 @@\n+\n+/*\n+Module: math_f64\n+\n+Floating point operations and constants for `f64`s\n+\n+This exposes the same operations as `math`, just for `f64` even though\n+they do not show up in the docs right now!\n+*/\n+\n import cmath::f64::*;\n \n export", "previous_filename": "src/lib/f64.rs"}, {"sha": "342e3fe394d17d07367c43b676152d81cd7876db", "filename": "src/lib/std.rc", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/891528fb7376ddd3cbaf9f77c75807f16c16d77b/src%2Flib%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/891528fb7376ddd3cbaf9f77c75807f16c16d77b/src%2Flib%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fstd.rc?ref=891528fb7376ddd3cbaf9f77c75807f16c16d77b", "patch": "@@ -7,13 +7,14 @@\n #[license = \"BSD\"];\n \n \n-export box, char, float, f32, f64, int, str, ptr;\n-export  uint, u8, u32, u64, vec, bool;\n+export box, char, float, int, str, ptr;\n+export uint, u8, u32, u64, vec, bool;\n export comm, fs, io, net, run, sys, task;\n export ctypes, either, option, result, four, tri, util;\n export bitv, deque, fun_treemap, list, map, smallintmap, sort, treemap, ufind;\n export rope;\n-export ebml, dbg, getopts, json, math, rand, sha1, term, time, unsafe;\n+export math, math_f32, math_f64;\n+export ebml, dbg, getopts, json, rand, sha1, term, time, unsafe;\n export extfmt, test, tempfile;\n // FIXME: generic_os and os_fs shouldn't be exported\n export generic_os, os, os_fs;\n@@ -24,8 +25,6 @@ export generic_os, os, os_fs;\n mod box;\n mod char;\n mod float;\n-mod f32;\n-mod f64;\n mod int;\n mod str;\n mod ptr;\n@@ -82,6 +81,8 @@ mod dbg;\n mod getopts;\n mod json;\n mod math;\n+mod math_f32;\n+mod math_f64;\n mod rand;\n mod sha1;\n mod tempfile;"}, {"sha": "39b72e680782f7b6279ce6ca780f4fc961bcc751", "filename": "src/test/stdtest/math.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/891528fb7376ddd3cbaf9f77c75807f16c16d77b/src%2Ftest%2Fstdtest%2Fmath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/891528fb7376ddd3cbaf9f77c75807f16c16d77b/src%2Ftest%2Fstdtest%2Fmath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fmath.rs?ref=891528fb7376ddd3cbaf9f77c75807f16c16d77b", "patch": "@@ -20,6 +20,7 @@ fn test_max_min() {\n fn test_trig() {\n     assert sin(0.0) == 0.0;\n     assert sin(-0.0) == 0.0;\n+\n     assert float::isNaN(sin(float::infinity));\n     assert float::isNaN(sin(float::neg_infinity));\n \n@@ -259,7 +260,7 @@ fn test_log_functions() {\n     assert log10(1.0) == 0.0;\n \n     // FIXME remove round-up due to valgrind weirdness\n-    assert ceil(ln(consts::e)) /* ln(e) == 0.999.. under valgrind */\n+    assert ceil(ln(consts::e)) == 1.0; /* ln(e) == 0.999.. under valgrind */\n     assert log2(2.0) == 1.0;\n     assert log10(10.0) == 1.0;\n "}]}