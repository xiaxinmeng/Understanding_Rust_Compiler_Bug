{"sha": "4f252f1a91e8c46508443ea92c6f221e6de5beb1", "node_id": "C_kwDOAAsO6NoAKDRmMjUyZjFhOTFlOGM0NjUwODQ0M2VhOTJjNmYyMjFlNmRlNWJlYjE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-01T09:50:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-01T09:50:23Z"}, "message": "Rollup merge of #91404 - nnethercote:fix-bad-NodeId-limit-checking, r=dtolnay\n\nFix bad `NodeId` limit checking.\n\n`Resolver::next_node_id` converts a `u32` to a `usize` (which is\npossibly bigger), does a checked add, and then converts the result back\nto a `u32`. The `usize` conversion completely subverts the checked add!\n\nThis commit removes the conversion to/from `usize`.", "tree": {"sha": "78397810624b52cc485ce911abfbc6ab50561579", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78397810624b52cc485ce911abfbc6ab50561579"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f252f1a91e8c46508443ea92c6f221e6de5beb1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhp0VfCRBK7hj4Ov3rIwAArBYIAHFMJYTA1QGd0bqfima+9Wq8\ntfjnktwd/1+ymziFBD+5XN4o3wI3vpVZyk7rFkn9SVKjG3Pg93ztgvoL4pdq4PEF\ng5a2+iCpyEBays3HwQp3qgpm++7wrAJrsbQXEGYjRoVMOUGGu9NeGrtfBfikXP0X\nQ7SFHB8S8dSok7gkC5BdIBBacVa+R7UZ9U6Tj/wWZdkw6RPq5sqj1WwCo8Q6SE3E\nOlgOEXvdsxShBdq8qZW/VFljrfYr4ffj6s1Gc0r0rp6X6ZGSjVi5wBYkDc+hRNEP\nf8xHB5X3kzlB9AqA+A+gnwetdDfbsiZLps0SBj/oCmzmooFcLXdhXhFvcT8KqQg=\n=1dBD\n-----END PGP SIGNATURE-----\n", "payload": "tree 78397810624b52cc485ce911abfbc6ab50561579\nparent ce197e2bceca00372c172a02a966b96287476c55\nparent e7ee8230ced7c14043ca51191063c13e7fbc7212\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1638352223 +0100\ncommitter GitHub <noreply@github.com> 1638352223 +0100\n\nRollup merge of #91404 - nnethercote:fix-bad-NodeId-limit-checking, r=dtolnay\n\nFix bad `NodeId` limit checking.\n\n`Resolver::next_node_id` converts a `u32` to a `usize` (which is\npossibly bigger), does a checked add, and then converts the result back\nto a `u32`. The `usize` conversion completely subverts the checked add!\n\nThis commit removes the conversion to/from `usize`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f252f1a91e8c46508443ea92c6f221e6de5beb1", "html_url": "https://github.com/rust-lang/rust/commit/4f252f1a91e8c46508443ea92c6f221e6de5beb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f252f1a91e8c46508443ea92c6f221e6de5beb1/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce197e2bceca00372c172a02a966b96287476c55", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce197e2bceca00372c172a02a966b96287476c55", "html_url": "https://github.com/rust-lang/rust/commit/ce197e2bceca00372c172a02a966b96287476c55"}, {"sha": "e7ee8230ced7c14043ca51191063c13e7fbc7212", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7ee8230ced7c14043ca51191063c13e7fbc7212", "html_url": "https://github.com/rust-lang/rust/commit/e7ee8230ced7c14043ca51191063c13e7fbc7212"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "a8ae4736c040295a39c84686ffd3ddbef4afd832", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4f252f1a91e8c46508443ea92c6f221e6de5beb1/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f252f1a91e8c46508443ea92c6f221e6de5beb1/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=4f252f1a91e8c46508443ea92c6f221e6de5beb1", "patch": "@@ -1430,12 +1430,9 @@ impl<'a> Resolver<'a> {\n     }\n \n     pub fn next_node_id(&mut self) -> NodeId {\n-        let next = self\n-            .next_node_id\n-            .as_usize()\n-            .checked_add(1)\n-            .expect(\"input too large; ran out of NodeIds\");\n-        self.next_node_id = ast::NodeId::from_usize(next);\n+        let next =\n+            self.next_node_id.as_u32().checked_add(1).expect(\"input too large; ran out of NodeIds\");\n+        self.next_node_id = ast::NodeId::from_u32(next);\n         self.next_node_id\n     }\n "}]}