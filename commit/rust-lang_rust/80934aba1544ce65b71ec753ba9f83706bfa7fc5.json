{"sha": "80934aba1544ce65b71ec753ba9f83706bfa7fc5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwOTM0YWJhMTU0NGNlNjViNzFlYzc1M2JhOWY4MzcwNmJmYTdmYzU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-12-28T13:13:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-28T13:13:21Z"}, "message": "Rollup merge of #80411 - petrochenkov:nosymwith, r=matthewjasper\n\nrustc_span: Remove `Symbol::with`\n\nA subset of https://github.com/rust-lang/rust/pull/79425 that is a pure refactoring.", "tree": {"sha": "80be5af55d14e3bd20d590940b788b1618b9f804", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80be5af55d14e3bd20d590940b788b1618b9f804"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80934aba1544ce65b71ec753ba9f83706bfa7fc5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf6dnxCRBK7hj4Ov3rIwAAdHIIADQoZvNfS8cButK1QTPrRSNA\nZvGyQR4cfCXJY3NKyR977svAydHoahKiNdtjMaoUy8P0vi/tVSB6U4TjfL5TgMo1\nQ+XaEsQE5su3nYvxHb9C6h079vBk2Q8llOXXycqDRmctveXfydqXzR0Xy7WHFUJj\nhgm1VwOFoWBjEuW0Gt/KaR9GydUDuP57lsw/KDshMCrKado/8Mjr6u7g29ALXXDD\n5Uo6ME52STWqbI0p1baCx0ROADxU44pMbCiXliNyv9ATeD1q7OcVdnYFOJBuhSvc\nHQ3YnQ+LvOt6sQDmjnUnHgYoP8Vt1LVBsooAk1ItQQj8R3Mi7ZXtnds4vJaZT3o=\n=Uhml\n-----END PGP SIGNATURE-----\n", "payload": "tree 80be5af55d14e3bd20d590940b788b1618b9f804\nparent 55b52ee33908f0ede42c549417093750530f9b1e\nparent 0ae998e122d6e2cf00b55e109e4817860c468925\nauthor Dylan DPC <dylan.dpc@gmail.com> 1609161201 +0100\ncommitter GitHub <noreply@github.com> 1609161201 +0100\n\nRollup merge of #80411 - petrochenkov:nosymwith, r=matthewjasper\n\nrustc_span: Remove `Symbol::with`\n\nA subset of https://github.com/rust-lang/rust/pull/79425 that is a pure refactoring.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80934aba1544ce65b71ec753ba9f83706bfa7fc5", "html_url": "https://github.com/rust-lang/rust/commit/80934aba1544ce65b71ec753ba9f83706bfa7fc5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80934aba1544ce65b71ec753ba9f83706bfa7fc5/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55b52ee33908f0ede42c549417093750530f9b1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/55b52ee33908f0ede42c549417093750530f9b1e", "html_url": "https://github.com/rust-lang/rust/commit/55b52ee33908f0ede42c549417093750530f9b1e"}, {"sha": "0ae998e122d6e2cf00b55e109e4817860c468925", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ae998e122d6e2cf00b55e109e4817860c468925", "html_url": "https://github.com/rust-lang/rust/commit/0ae998e122d6e2cf00b55e109e4817860c468925"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "1f4bd00c3e297f5191f3202b1f5eee99063cd188", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/80934aba1544ce65b71ec753ba9f83706bfa7fc5/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80934aba1544ce65b71ec753ba9f83706bfa7fc5/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=80934aba1544ce65b71ec753ba9f83706bfa7fc5", "patch": "@@ -2416,7 +2416,10 @@ impl<'a> Resolver<'a> {\n                     } else if i == 0 {\n                         if ident\n                             .name\n-                            .with(|n| n.chars().next().map_or(false, |c| c.is_ascii_uppercase()))\n+                            .as_str()\n+                            .chars()\n+                            .next()\n+                            .map_or(false, |c| c.is_ascii_uppercase())\n                         {\n                             (format!(\"use of undeclared type `{}`\", ident), None)\n                         } else {"}, {"sha": "bc57a00e31b17983a0535c748f03efdf522f81f5", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/80934aba1544ce65b71ec753ba9f83706bfa7fc5/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80934aba1544ce65b71ec753ba9f83706bfa7fc5/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=80934aba1544ce65b71ec753ba9f83706bfa7fc5", "patch": "@@ -1451,12 +1451,6 @@ impl Symbol {\n         with_interner(|interner| interner.intern(string))\n     }\n \n-    /// Access the symbol's chars. This is a slowish operation because it\n-    /// requires locking the symbol interner.\n-    pub fn with<F: FnOnce(&str) -> R, R>(self, f: F) -> R {\n-        with_interner(|interner| f(interner.get(self)))\n-    }\n-\n     /// Convert to a `SymbolStr`. This is a slowish operation because it\n     /// requires locking the symbol interner.\n     pub fn as_str(self) -> SymbolStr {\n@@ -1484,19 +1478,19 @@ impl Symbol {\n \n impl fmt::Debug for Symbol {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        self.with(|str| fmt::Debug::fmt(&str, f))\n+        fmt::Debug::fmt(&self.as_str(), f)\n     }\n }\n \n impl fmt::Display for Symbol {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        self.with(|str| fmt::Display::fmt(&str, f))\n+        fmt::Display::fmt(&self.as_str(), f)\n     }\n }\n \n impl<S: Encoder> Encodable<S> for Symbol {\n     fn encode(&self, s: &mut S) -> Result<(), S::Error> {\n-        self.with(|string| s.emit_str(string))\n+        s.emit_str(&self.as_str())\n     }\n }\n "}]}