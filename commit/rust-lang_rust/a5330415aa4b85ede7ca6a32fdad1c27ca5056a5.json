{"sha": "a5330415aa4b85ede7ca6a32fdad1c27ca5056a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1MzMwNDE1YWE0Yjg1ZWRlN2NhNmEzMmZkYWQxYzI3Y2E1MDU2YTU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-06-23T15:23:04Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-07-07T08:56:06Z"}, "message": "Only use coresimd when codegen_backend is LLVM", "tree": {"sha": "d63387b7125b5c33ac6bb4b69223a23001de62a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d63387b7125b5c33ac6bb4b69223a23001de62a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5330415aa4b85ede7ca6a32fdad1c27ca5056a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5330415aa4b85ede7ca6a32fdad1c27ca5056a5", "html_url": "https://github.com/rust-lang/rust/commit/a5330415aa4b85ede7ca6a32fdad1c27ca5056a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5330415aa4b85ede7ca6a32fdad1c27ca5056a5/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7c534fa0ed1e34c26122de5258b057d15a4ec68", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7c534fa0ed1e34c26122de5258b057d15a4ec68", "html_url": "https://github.com/rust-lang/rust/commit/c7c534fa0ed1e34c26122de5258b057d15a4ec68"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "98fec4c4861f4cc22d23c8dd2220890329bc4605", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a5330415aa4b85ede7ca6a32fdad1c27ca5056a5/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5330415aa4b85ede7ca6a32fdad1c27ca5056a5/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=a5330415aa4b85ede7ca6a32fdad1c27ca5056a5", "patch": "@@ -107,6 +107,13 @@ fn main() {\n              env::join_paths(&dylib_path).unwrap());\n     let mut maybe_crate = None;\n \n+    // Don't use metadata only backend for snapshot compiler, because it may be broken\n+    if env::var(\"RUSTC_SHOULD_USE_METADATA_ONLY_BACKEND\").is_ok() && stage != \"0\" {\n+        //cmd.arg(\"-Zcodegen-backend=metadata_only\");\n+    } else {\n+        cmd.arg(\"--cfg\").arg(\"codegen_backend=\\\"llvm\\\"\");\n+    }\n+\n     // Print backtrace in case of ICE\n     if env::var(\"RUSTC_BACKTRACE_ON_ICE\").is_ok() && env::var(\"RUST_BACKTRACE\").is_err() {\n         cmd.env(\"RUST_BACKTRACE\", \"1\");"}, {"sha": "7e4a12f7310f64eb092e8b9dedae1f62ffee4f82", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a5330415aa4b85ede7ca6a32fdad1c27ca5056a5/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5330415aa4b85ede7ca6a32fdad1c27ca5056a5/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=a5330415aa4b85ede7ca6a32fdad1c27ca5056a5", "patch": "@@ -747,6 +747,10 @@ impl<'a> Builder<'a> {\n             stage = compiler.stage;\n         }\n \n+        if self.config.rust_codegen_backends.is_empty() {\n+            cargo.env(\"RUSTC_SHOULD_USE_METADATA_ONLY_BACKEND\", \"1\");\n+        }\n+\n         let mut extra_args = env::var(&format!(\"RUSTFLAGS_STAGE_{}\", stage)).unwrap_or_default();\n         if stage != 0 {\n             let s = env::var(\"RUSTFLAGS_STAGE_NOT_0\").unwrap_or_default();"}, {"sha": "0971f50913cb618c58cdde6b2fc9a8b664e77c22", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a5330415aa4b85ede7ca6a32fdad1c27ca5056a5/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5330415aa4b85ede7ca6a32fdad1c27ca5056a5/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=a5330415aa4b85ede7ca6a32fdad1c27ca5056a5", "patch": "@@ -241,12 +241,13 @@ macro_rules! vector_impl { ($([$f:ident, $($args:tt)*]),*) => { $($f!($($args)*)\n #[path = \"../stdsimd/coresimd/mod.rs\"]\n #[allow(missing_docs, missing_debug_implementations, dead_code, unused_imports)]\n #[unstable(feature = \"stdsimd\", issue = \"48556\")]\n-#[cfg(not(stage0))] // allow changes to how stdsimd works in stage0\n+// allow changes to how stdsimd works in stage0 and don't use whithout LLVM\n+#[cfg(all(not(stage0), codegen_backend=\"llvm\"))]\n mod coresimd;\n \n #[unstable(feature = \"stdsimd\", issue = \"48556\")]\n-#[cfg(not(stage0))]\n+#[cfg(all(not(stage0), codegen_backend=\"llvm\"))]\n pub use coresimd::simd;\n #[stable(feature = \"simd_arch\", since = \"1.27.0\")]\n-#[cfg(not(stage0))]\n+#[cfg(all(not(stage0), codegen_backend=\"llvm\"))]\n pub use coresimd::arch;"}, {"sha": "05e08cb7973accaa066122ff252cd93349dcd058", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a5330415aa4b85ede7ca6a32fdad1c27ca5056a5/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5330415aa4b85ede7ca6a32fdad1c27ca5056a5/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=a5330415aa4b85ede7ca6a32fdad1c27ca5056a5", "patch": "@@ -1418,6 +1418,18 @@ pub fn default_configuration(sess: &Session) -> ast::CrateConfig {\n     if sess.opts.crate_types.contains(&CrateTypeProcMacro) {\n         ret.insert((Symbol::intern(\"proc_macro\"), None));\n     }\n+    /*if nightly_options::is_nightly_build() {\n+        let backend_name = sess.opts\n+            .debugging_opts\n+            .codegen_backend\n+            .as_ref()\n+            .map(|s| s as &str)\n+            .unwrap_or(\"llvm\");\n+        ret.insert((\n+            Symbol::intern(\"codegen_backend\"),\n+            Some(Symbol::intern(backend_name)),\n+        ));\n+    }*/\n     return ret;\n }\n "}, {"sha": "d79f851a3d7641c0d078cde8acf06c6ebfb4f66c", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a5330415aa4b85ede7ca6a32fdad1c27ca5056a5/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5330415aa4b85ede7ca6a32fdad1c27ca5056a5/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=a5330415aa4b85ede7ca6a32fdad1c27ca5056a5", "patch": "@@ -523,22 +523,22 @@ pub mod rt;\n #[path = \"../stdsimd/stdsimd/mod.rs\"]\n #[allow(missing_debug_implementations, missing_docs, dead_code)]\n #[unstable(feature = \"stdsimd\", issue = \"48556\")]\n-#[cfg(all(not(stage0), not(test)))]\n+#[cfg(all(not(stage0), not(test), codegen_backend=\"llvm\"))]\n mod stdsimd;\n \n // A \"fake\" module needed by the `stdsimd` module to compile, not actually\n // exported though.\n-#[cfg(not(stage0))]\n+#[cfg(all(not(stage0), codegen_backend=\"llvm\"))]\n mod coresimd {\n     pub use core::arch;\n     pub use core::simd;\n }\n \n #[unstable(feature = \"stdsimd\", issue = \"48556\")]\n-#[cfg(all(not(stage0), not(test)))]\n+#[cfg(all(not(stage0), not(test), codegen_backend=\"llvm\"))]\n pub use stdsimd::simd;\n #[stable(feature = \"simd_arch\", since = \"1.27.0\")]\n-#[cfg(all(not(stage0), not(test)))]\n+#[cfg(all(not(stage0), not(test), codegen_backend=\"llvm\"))]\n pub use stdsimd::arch;\n \n // Include a number of private modules that exist solely to provide"}]}