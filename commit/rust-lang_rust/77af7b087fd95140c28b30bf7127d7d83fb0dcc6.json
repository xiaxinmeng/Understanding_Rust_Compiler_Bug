{"sha": "77af7b087fd95140c28b30bf7127d7d83fb0dcc6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3YWY3YjA4N2ZkOTUxNDBjMjhiMzBiZjcxMjdkN2Q4M2ZiMGRjYzY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-20T13:11:49Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-20T13:12:14Z"}, "message": "Fix highlighting for field init shorthand", "tree": {"sha": "c68aed5ec9f8f18d2da79e9ebbb26eddc2f35168", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c68aed5ec9f8f18d2da79e9ebbb26eddc2f35168"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77af7b087fd95140c28b30bf7127d7d83fb0dcc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77af7b087fd95140c28b30bf7127d7d83fb0dcc6", "html_url": "https://github.com/rust-lang/rust/commit/77af7b087fd95140c28b30bf7127d7d83fb0dcc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77af7b087fd95140c28b30bf7127d7d83fb0dcc6/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d057afb945b34cbefc1f0722f4dd0ff2758b760b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d057afb945b34cbefc1f0722f4dd0ff2758b760b", "html_url": "https://github.com/rust-lang/rust/commit/d057afb945b34cbefc1f0722f4dd0ff2758b760b"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "a097cf8e84dfa55738853a0d72ac6f5f022be91e", "filename": "crates/ra_ide/src/snapshots/highlighting.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77af7b087fd95140c28b30bf7127d7d83fb0dcc6/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/77af7b087fd95140c28b30bf7127d7d83fb0dcc6/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html?ref=77af7b087fd95140c28b30bf7127d7d83fb0dcc6", "patch": "@@ -41,7 +41,7 @@\n     <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable.mut\">vec</span> = <span class=\"text\">Vec</span>::<span class=\"text\">new</span>();\n     <span class=\"keyword.control\">if</span> <span class=\"keyword\">true</span> {\n         <span class=\"keyword\">let</span> <span class=\"variable\">x</span> = <span class=\"literal.numeric\">92</span>;\n-        <span class=\"variable.mut\">vec</span>.<span class=\"text\">push</span>(<span class=\"type\">Foo</span> { <span class=\"text\">x</span>, <span class=\"field\">y</span>: <span class=\"literal.numeric\">1</span> });\n+        <span class=\"variable.mut\">vec</span>.<span class=\"text\">push</span>(<span class=\"type\">Foo</span> { <span class=\"field\">x</span>, <span class=\"field\">y</span>: <span class=\"literal.numeric\">1</span> });\n     }\n     <span class=\"keyword.unsafe\">unsafe</span> { <span class=\"variable.mut\">vec</span>.<span class=\"text\">set_len</span>(<span class=\"literal.numeric\">0</span>); }\n "}, {"sha": "657c7b21a568817663d2886358016b260c683620", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/77af7b087fd95140c28b30bf7127d7d83fb0dcc6/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77af7b087fd95140c28b30bf7127d7d83fb0dcc6/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=77af7b087fd95140c28b30bf7127d7d83fb0dcc6", "patch": "@@ -102,11 +102,10 @@ pub(crate) fn highlight(db: &RootDatabase, file_id: FileId) -> Vec<HighlightedRa\n             COMMENT => tags::LITERAL_COMMENT,\n             STRING | RAW_STRING | RAW_BYTE_STRING | BYTE_STRING => tags::LITERAL_STRING,\n             ATTR => tags::LITERAL_ATTRIBUTE,\n+            // Special-case field init shorthand\n+            NAME_REF if node.parent().and_then(ast::RecordField::cast).is_some() => tags::FIELD,\n+            NAME_REF if node.ancestors().any(|it| it.kind() == ATTR) => continue,\n             NAME_REF => {\n-                if node.ancestors().any(|it| it.kind() == ATTR) {\n-                    continue;\n-                }\n-\n                 let name_ref = node.as_node().cloned().and_then(ast::NameRef::cast).unwrap();\n                 let name_kind =\n                     classify_name_ref(db, InFile::new(file_id.into(), &name_ref)).map(|d| d.kind);"}]}