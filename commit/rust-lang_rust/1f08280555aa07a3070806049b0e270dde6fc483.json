{"sha": "1f08280555aa07a3070806049b0e270dde6fc483", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmMDgyODA1NTVhYTA3YTMwNzA4MDYwNDliMGUyNzBkZGU2ZmM0ODM=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2018-12-20T09:03:40Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-01-04T02:58:57Z"}, "message": "More tidy fixes", "tree": {"sha": "f4297f36eed434423ec0635e768495349f1e1928", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4297f36eed434423ec0635e768495349f1e1928"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f08280555aa07a3070806049b0e270dde6fc483", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAlwuy/EACgkQtAh+UQ6Y\nsWRDng//V6jxyxf4LECedQ/D/bgE0d3X+MN46mY47BQ8FxJm8cdYWgblW73PP1EH\nUXsZKK9LuxrXUdC16xp0Kr6cDm0EWhX4APq1YHBiGI8B9SeHMesfzdq/ZPBYJhRM\n7quhSqkZ9lyL1EczAhs3wjVdRZxNGjmOQgfJd2fQEFwo0WH3ItqoPWzQzphG47Rl\nCF2aqnfYyYGfdX2iD6oGX6K9+c7BvhiXXqgiOXPI1E1ad0awEUnrDGA6xZ3n41l5\ny9vXpGdqVZGyW1UoivlVVZvfdZgl8p5Cxeo87IW0/5XRx50i2FbtdMLE2ENbYKVq\ndDi4ilE2RMUHIpAdjQ/vvBAwqguv/kGhx0fj+iDGxwBuyysCLK94f9Y2jzyZ/c8H\n0hhCbOa6qz+hZ2hTnuOzNFO0jI758FOsHQymweQO5m3s9UoVuLI38FLs7MpIiwon\n5MmkkgHUVtFELJzmAuP9PLCGaNPfqJVqTITugUd4G+xYwa2dBiZMBx9vLT7JasK0\nwoproQ9MpHoO5XKVUA1AMCcwIEdk2Klhs/F/Tx4K0k8p59/yy9XysYdRod/STbAq\nmIEu437VvCOWcvOV3hpUfR15yCvi3/023ubpvslG5i42bbJrlDxVsiw8BH6NlMKA\nLBm15ODNUTPJGYxkjWLCDy9p7wzpTNGNq0I7Xqoe5leak1/Uu5U=\n=JY4Y\n-----END PGP SIGNATURE-----", "payload": "tree f4297f36eed434423ec0635e768495349f1e1928\nparent 03cd934ba9f7ceb1a1b048b6ed9caa0956a1bd8d\nauthor Aaron Hill <aa1ronham@gmail.com> 1545296620 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1546570737 -0500\n\nMore tidy fixes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f08280555aa07a3070806049b0e270dde6fc483", "html_url": "https://github.com/rust-lang/rust/commit/1f08280555aa07a3070806049b0e270dde6fc483", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f08280555aa07a3070806049b0e270dde6fc483/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03cd934ba9f7ceb1a1b048b6ed9caa0956a1bd8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/03cd934ba9f7ceb1a1b048b6ed9caa0956a1bd8d", "html_url": "https://github.com/rust-lang/rust/commit/03cd934ba9f7ceb1a1b048b6ed9caa0956a1bd8d"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "0c0d68c9b36b1aac21f16029bef548070532e593", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1f08280555aa07a3070806049b0e270dde6fc483/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f08280555aa07a3070806049b0e270dde6fc483/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=1f08280555aa07a3070806049b0e270dde6fc483", "patch": "@@ -629,7 +629,8 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n         obligation: &PredicateObligation<'tcx>,\n     ) -> Result<EvaluationResult, OverflowError> {\n         self.evaluation_probe(|this| {\n-            this.evaluate_predicate_recursively(TraitObligationStackList::empty(), obligation.clone())\n+            this.evaluate_predicate_recursively(TraitObligationStackList::empty(),\n+                obligation.clone())\n         })\n     }\n \n@@ -699,7 +700,7 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n                 {\n                     Some(Ok(InferOk { mut obligations, .. })) => {\n                         self.add_depth(obligations.iter_mut(), obligation.recursion_depth);\n-                        self.evaluate_predicates_recursively(previous_stack, obligations.into_iter())\n+                        self.evaluate_predicates_recursively(previous_stack,obligations.into_iter())\n                     }\n                     Some(Err(_)) => Ok(EvaluatedToErr),\n                     None => Ok(EvaluatedToAmbig),\n@@ -1098,7 +1099,7 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n     //\n     // The weird return type of this function allows it to be used with the 'try' (?)\n     // operator within certain functions\n-    fn check_recursion_limit<T: Display + TypeFoldable<'tcx>>(&self, obligation: &Obligation<'tcx, T>,\n+    fn check_recursion_limit<T: Display + TypeFoldable<'tcx>>(&self,obligation:&Obligation<'tcx, T>,\n     ) -> Result<(), OverflowError>  {\n         let recursion_limit = *self.infcx.tcx.sess.recursion_limit.get();\n         if obligation.recursion_depth >= recursion_limit {"}]}