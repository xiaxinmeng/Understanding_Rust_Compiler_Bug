{"sha": "37e838f759b99dd3ac042a61f60a4f14272b99c2", "node_id": "C_kwDOAAsO6NoAKDM3ZTgzOGY3NTliOTlkZDNhYzA0MmE2MWY2MGE0ZjE0MjcyYjk5YzI", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-04-13T05:13:47Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-08-08T01:52:27Z"}, "message": "Use new util function in `suspicious_else_formatting`", "tree": {"sha": "79914a31d9a3f41ef8fb5e5cf5c1902cf63b8778", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79914a31d9a3f41ef8fb5e5cf5c1902cf63b8778"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37e838f759b99dd3ac042a61f60a4f14272b99c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37e838f759b99dd3ac042a61f60a4f14272b99c2", "html_url": "https://github.com/rust-lang/rust/commit/37e838f759b99dd3ac042a61f60a4f14272b99c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37e838f759b99dd3ac042a61f60a4f14272b99c2/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ae8b300a7f55f5cf132b640ad6a5727ba282d1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ae8b300a7f55f5cf132b640ad6a5727ba282d1e", "html_url": "https://github.com/rust-lang/rust/commit/2ae8b300a7f55f5cf132b640ad6a5727ba282d1e"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "01cefe4af8532638a5179eba0c26fde9599fcdbe", "filename": "clippy_lints/src/formatting.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/37e838f759b99dd3ac042a61f60a4f14272b99c2/clippy_lints%2Fsrc%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37e838f759b99dd3ac042a61f60a4f14272b99c2/clippy_lints%2Fsrc%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformatting.rs?ref=37e838f759b99dd3ac042a61f60a4f14272b99c2", "patch": "@@ -1,4 +1,5 @@\n use clippy_utils::diagnostics::{span_lint_and_help, span_lint_and_note};\n+use clippy_utils::is_span_if;\n use clippy_utils::source::snippet_opt;\n use if_chain::if_chain;\n use rustc_ast::ast::{BinOpKind, Block, Expr, ExprKind, StmtKind, UnOp};\n@@ -297,12 +298,11 @@ fn check_array(cx: &EarlyContext<'_>, expr: &Expr) {\n fn check_missing_else(cx: &EarlyContext<'_>, first: &Expr, second: &Expr) {\n     if_chain! {\n         if !first.span.from_expansion() && !second.span.from_expansion();\n-        if let ExprKind::If(cond_expr, ..) = &first.kind;\n+        if matches!(first.kind, ExprKind::If(..));\n         if is_block(second) || is_if(second);\n \n         // Proc-macros can give weird spans. Make sure this is actually an `if`.\n-        if let Some(if_snip) = snippet_opt(cx, first.span.until(cond_expr.span));\n-        if if_snip.starts_with(\"if\");\n+        if is_span_if(cx, first.span);\n \n         // If there is a line break between the two expressions, don't lint.\n         // If there is a non-whitespace character, this span came from a proc-macro."}, {"sha": "51cd70f5e7c8f223f7a8c3fdef92c1853eb5f0a9", "filename": "clippy_utils/src/check_proc_macro.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/37e838f759b99dd3ac042a61f60a4f14272b99c2/clippy_utils%2Fsrc%2Fcheck_proc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37e838f759b99dd3ac042a61f60a4f14272b99c2/clippy_utils%2Fsrc%2Fcheck_proc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fcheck_proc_macro.rs?ref=37e838f759b99dd3ac042a61f60a4f14272b99c2", "patch": "@@ -162,6 +162,11 @@ pub fn is_expr_from_proc_macro(cx: &LateContext<'_>, e: &Expr<'_>) -> bool {\n }\n \n /// Checks if the span actually refers to a match expression\n-pub fn is_span_match(cx: &LateContext<'_>, span: Span) -> bool {\n+pub fn is_span_match(cx: &impl LintContext, span: Span) -> bool {\n     span_matches_pat(cx.sess(), span, Pat::Str(\"match\"), Pat::Str(\"}\"))\n }\n+\n+/// Checks if the span actually refers to an if expression\n+pub fn is_span_if(cx: &impl LintContext, span: Span) -> bool {\n+    span_matches_pat(cx.sess(), span, Pat::Str(\"if\"), Pat::Str(\"}\"))\n+}"}, {"sha": "086e6d6e3a2b7f0450d489036e59bfb032e9e744", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37e838f759b99dd3ac042a61f60a4f14272b99c2/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37e838f759b99dd3ac042a61f60a4f14272b99c2/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=37e838f759b99dd3ac042a61f60a4f14272b99c2", "patch": "@@ -59,7 +59,7 @@ pub mod usage;\n pub mod visitors;\n \n pub use self::attrs::*;\n-pub use self::check_proc_macro::{is_expr_from_proc_macro, is_span_match};\n+pub use self::check_proc_macro::{is_expr_from_proc_macro, is_span_if, is_span_match};\n pub use self::hir_utils::{\n     both, count_eq, eq_expr_value, hash_expr, hash_stmt, over, HirEqInterExpr, SpanlessEq, SpanlessHash,\n };"}]}