{"sha": "de26d5e712e679c3930e0f1b14f82f429eee9cb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMjZkNWU3MTJlNjc5YzM5MzBlMGYxYjE0ZjgyZjQyOWVlZTljYjU=", "commit": {"author": {"name": "Alisdair Owens", "email": "awo101@zepler.net", "date": "2015-08-14T19:21:24Z"}, "committer": {"name": "Alisdair Owens", "email": "awo101@zepler.net", "date": "2015-08-14T19:21:24Z"}, "message": "add diagnostics for E0221", "tree": {"sha": "1f674cef66d6cfed07c4311df7ecf7c80f9c1f5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f674cef66d6cfed07c4311df7ecf7c80f9c1f5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de26d5e712e679c3930e0f1b14f82f429eee9cb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de26d5e712e679c3930e0f1b14f82f429eee9cb5", "html_url": "https://github.com/rust-lang/rust/commit/de26d5e712e679c3930e0f1b14f82f429eee9cb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de26d5e712e679c3930e0f1b14f82f429eee9cb5/comments", "author": {"login": "AlisdairO", "id": 6296622, "node_id": "MDQ6VXNlcjYyOTY2MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6296622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlisdairO", "html_url": "https://github.com/AlisdairO", "followers_url": "https://api.github.com/users/AlisdairO/followers", "following_url": "https://api.github.com/users/AlisdairO/following{/other_user}", "gists_url": "https://api.github.com/users/AlisdairO/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlisdairO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlisdairO/subscriptions", "organizations_url": "https://api.github.com/users/AlisdairO/orgs", "repos_url": "https://api.github.com/users/AlisdairO/repos", "events_url": "https://api.github.com/users/AlisdairO/events{/privacy}", "received_events_url": "https://api.github.com/users/AlisdairO/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AlisdairO", "id": 6296622, "node_id": "MDQ6VXNlcjYyOTY2MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6296622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlisdairO", "html_url": "https://github.com/AlisdairO", "followers_url": "https://api.github.com/users/AlisdairO/followers", "following_url": "https://api.github.com/users/AlisdairO/following{/other_user}", "gists_url": "https://api.github.com/users/AlisdairO/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlisdairO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlisdairO/subscriptions", "organizations_url": "https://api.github.com/users/AlisdairO/orgs", "repos_url": "https://api.github.com/users/AlisdairO/repos", "events_url": "https://api.github.com/users/AlisdairO/events{/privacy}", "received_events_url": "https://api.github.com/users/AlisdairO/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7261f3ab60e0d1e6c808004ecd25c88e04f3683", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7261f3ab60e0d1e6c808004ecd25c88e04f3683", "html_url": "https://github.com/rust-lang/rust/commit/e7261f3ab60e0d1e6c808004ecd25c88e04f3683"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "c24c9e9a255a7d8b4a4b83603f38674c34061ddd", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/de26d5e712e679c3930e0f1b14f82f429eee9cb5/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de26d5e712e679c3930e0f1b14f82f429eee9cb5/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=de26d5e712e679c3930e0f1b14f82f429eee9cb5", "patch": "@@ -2229,6 +2229,42 @@ type Foo = Trait<Bar=i32>; // ok!\n ```\n \"##,\n \n+E0221: r##\"\n+An attempt was made to retrieve an associated type, but the type was ambiguous.\n+For example:\n+\n+```\n+trait T1 {}\n+trait T2 {}\n+\n+trait Foo {\n+    type A: T1;\n+}\n+\n+trait Bar : Foo {\n+    type A: T2;\n+    fn do_something() {\n+        let _: Self::A;\n+    }\n+}\n+```\n+\n+In this example, `Foo` defines an associated type `A`. `Bar` inherits that type\n+from `Foo`, and defines another associated type of the same name. As a result,\n+when we attempt to use `Self::A`, it's ambiguous whether we mean the `A` defined\n+by `Foo` or the one defined by `Bar`.\n+\n+There are two options to work around this issue. The first is simply to rename\n+one of the types. Alternatively, one can specify the intended type using the\n+following syntax:\n+\n+```\n+fn do_something() {\n+    let _: <Self as Bar>::A;\n+}\n+```\n+\"##,\n+\n E0223: r##\"\n An attempt was made to retrieve an associated type, but the type was ambiguous.\n For example:\n@@ -2698,7 +2734,6 @@ register_diagnostics! {\n     E0217, // ambiguous associated type, defined in multiple supertraits\n     E0218, // no associated type defined\n     E0219, // associated type defined in higher-ranked supertrait\n-    E0221, // ambiguous associated type in bounds\n //  E0222, // Error code E0045 (variadic function must have C calling\n            // convention) duplicate\n     E0224, // at least one non-builtin train is required for an object type"}]}