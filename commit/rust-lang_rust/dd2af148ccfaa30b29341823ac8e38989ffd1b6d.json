{"sha": "dd2af148ccfaa30b29341823ac8e38989ffd1b6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkMmFmMTQ4Y2NmYWEzMGIyOTM0MTgyM2FjOGUzODk4OWZmZDFiNmQ=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-11-27T08:41:53Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-03-09T18:23:08Z"}, "message": "Remove hir::TraitItem::attrs.", "tree": {"sha": "413f063f1455c9ed120d6fdbf8bb8deac315ee7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/413f063f1455c9ed120d6fdbf8bb8deac315ee7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd2af148ccfaa30b29341823ac8e38989ffd1b6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd2af148ccfaa30b29341823ac8e38989ffd1b6d", "html_url": "https://github.com/rust-lang/rust/commit/dd2af148ccfaa30b29341823ac8e38989ffd1b6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd2af148ccfaa30b29341823ac8e38989ffd1b6d/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3a17dba6ccd0dee7e175d178203e930c04c3f03", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3a17dba6ccd0dee7e175d178203e930c04c3f03", "html_url": "https://github.com/rust-lang/rust/commit/c3a17dba6ccd0dee7e175d178203e930c04c3f03"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "5ca67507a3d47635d9d0ab3b7282066b09f5703f", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dd2af148ccfaa30b29341823ac8e38989ffd1b6d/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd2af148ccfaa30b29341823ac8e38989ffd1b6d/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=dd2af148ccfaa30b29341823ac8e38989ffd1b6d", "patch": "@@ -359,7 +359,7 @@ impl<'tcx> LateLintPass<'tcx> for Attributes {\n \n     fn check_trait_item(&mut self, cx: &LateContext<'tcx>, item: &'tcx TraitItem<'_>) {\n         if is_relevant_trait(cx, item) {\n-            check_attrs(cx, item.span, item.ident.name, &item.attrs)\n+            check_attrs(cx, item.span, item.ident.name, cx.tcx.hir().attrs(item.hir_id()))\n         }\n     }\n }"}, {"sha": "5299b192f501e736ab8e48a61a623894038fddae", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dd2af148ccfaa30b29341823ac8e38989ffd1b6d/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd2af148ccfaa30b29341823ac8e38989ffd1b6d/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=dd2af148ccfaa30b29341823ac8e38989ffd1b6d", "patch": "@@ -250,7 +250,8 @@ impl<'tcx> LateLintPass<'tcx> for DocMarkdown {\n     }\n \n     fn check_trait_item(&mut self, cx: &LateContext<'tcx>, item: &'tcx hir::TraitItem<'_>) {\n-        let headers = check_attrs(cx, &self.valid_idents, &item.attrs);\n+        let attrs = cx.tcx.hir().attrs(item.hir_id());\n+        let headers = check_attrs(cx, &self.valid_idents, attrs);\n         if let hir::TraitItemKind::Fn(ref sig, ..) = item.kind {\n             if !in_external_macro(cx.tcx.sess, item.span) {\n                 lint_for_missing_headers(cx, item.hir_id(), item.span, sig, headers, None, None);"}, {"sha": "4a10f9abce4b724b485f5efc0c8de9f7fef11c89", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dd2af148ccfaa30b29341823ac8e38989ffd1b6d/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd2af148ccfaa30b29341823ac8e38989ffd1b6d/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=dd2af148ccfaa30b29341823ac8e38989ffd1b6d", "patch": "@@ -344,15 +344,16 @@ impl<'tcx> LateLintPass<'tcx> for Functions {\n                 check_result_unit_err(cx, &sig.decl, item.span, fn_header_span);\n             }\n \n-            let attr = must_use_attr(&item.attrs);\n+            let attrs = cx.tcx.hir().attrs(item.hir_id());\n+            let attr = must_use_attr(attrs);\n             if let Some(attr) = attr {\n                 check_needless_must_use(cx, &sig.decl, item.hir_id(), item.span, fn_header_span, attr);\n             }\n             if let hir::TraitFn::Provided(eid) = *eid {\n                 let body = cx.tcx.hir().body(eid);\n                 Self::check_raw_ptr(cx, sig.header.unsafety, &sig.decl, body, item.hir_id());\n \n-                if attr.is_none() && is_public && !is_proc_macro(cx.sess(), &item.attrs) {\n+                if attr.is_none() && is_public && !is_proc_macro(cx.sess(), attrs) {\n                     check_must_use_candidate(\n                         cx,\n                         &sig.decl,"}, {"sha": "00acbd6cc3f7694525ebba2802f5883207b8a5bc", "filename": "clippy_lints/src/inline_fn_without_body.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dd2af148ccfaa30b29341823ac8e38989ffd1b6d/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd2af148ccfaa30b29341823ac8e38989ffd1b6d/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finline_fn_without_body.rs?ref=dd2af148ccfaa30b29341823ac8e38989ffd1b6d", "patch": "@@ -34,7 +34,8 @@ declare_lint_pass!(InlineFnWithoutBody => [INLINE_FN_WITHOUT_BODY]);\n impl<'tcx> LateLintPass<'tcx> for InlineFnWithoutBody {\n     fn check_trait_item(&mut self, cx: &LateContext<'tcx>, item: &'tcx TraitItem<'_>) {\n         if let TraitItemKind::Fn(_, TraitFn::Required(_)) = item.kind {\n-            check_attrs(cx, item.ident.name, &item.attrs);\n+            let attrs = cx.tcx.hir().attrs(item.hir_id());\n+            check_attrs(cx, item.ident.name, attrs);\n         }\n     }\n }"}, {"sha": "0a75b47e2c65f73f4c2f14bcb6a304ae72d19fd3", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dd2af148ccfaa30b29341823ac8e38989ffd1b6d/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd2af148ccfaa30b29341823ac8e38989ffd1b6d/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=dd2af148ccfaa30b29341823ac8e38989ffd1b6d", "patch": "@@ -167,7 +167,8 @@ impl<'tcx> LateLintPass<'tcx> for MissingDoc {\n     fn check_trait_item(&mut self, cx: &LateContext<'tcx>, trait_item: &'tcx hir::TraitItem<'_>) {\n         let (article, desc) = cx.tcx.article_and_description(trait_item.def_id.to_def_id());\n \n-        self.check_missing_docs_attrs(cx, &trait_item.attrs, trait_item.span, article, desc);\n+        let attrs = cx.tcx.hir().attrs(trait_item.hir_id());\n+        self.check_missing_docs_attrs(cx, attrs, trait_item.span, article, desc);\n     }\n \n     fn check_impl_item(&mut self, cx: &LateContext<'tcx>, impl_item: &'tcx hir::ImplItem<'_>) {"}, {"sha": "74afc292f018126bb9076d514f948bfd84d05c9a", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dd2af148ccfaa30b29341823ac8e38989ffd1b6d/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd2af148ccfaa30b29341823ac8e38989ffd1b6d/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=dd2af148ccfaa30b29341823ac8e38989ffd1b6d", "patch": "@@ -108,7 +108,8 @@ impl<'tcx> LateLintPass<'tcx> for MissingInline {\n                                 // an impl is not provided\n                                 let desc = \"a default trait method\";\n                                 let item = cx.tcx.hir().trait_item(tit.id);\n-                                check_missing_inline_attrs(cx, &item.attrs, item.span, desc);\n+                                let attrs = cx.tcx.hir().attrs(item.hir_id());\n+                                check_missing_inline_attrs(cx, attrs, item.span, desc);\n                             }\n                         },\n                     }"}]}