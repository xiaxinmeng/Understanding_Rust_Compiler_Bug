{"sha": "71128e75b083c9e5915d4fe1aa99f3abeee8f043", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxMTI4ZTc1YjA4M2M5ZTU5MTVkNGZlMWFhOTlmM2FiZWVlOGYwNDM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-04-21T17:26:51Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-04-23T15:02:59Z"}, "message": "moderate comment, remove some dead regions code", "tree": {"sha": "33f9537d13ce03c07c057b1debc8a88a4ea85302", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33f9537d13ce03c07c057b1debc8a88a4ea85302"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71128e75b083c9e5915d4fe1aa99f3abeee8f043", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71128e75b083c9e5915d4fe1aa99f3abeee8f043", "html_url": "https://github.com/rust-lang/rust/commit/71128e75b083c9e5915d4fe1aa99f3abeee8f043", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71128e75b083c9e5915d4fe1aa99f3abeee8f043/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7113a2c30b4ba5e7105879f6b5d683813eebc722", "url": "https://api.github.com/repos/rust-lang/rust/commits/7113a2c30b4ba5e7105879f6b5d683813eebc722", "html_url": "https://github.com/rust-lang/rust/commit/7113a2c30b4ba5e7105879f6b5d683813eebc722"}], "stats": {"total": 21, "additions": 7, "deletions": 14}, "files": [{"sha": "64d3c4f869b628069b4610f914f6a11cb887cf8d", "filename": "src/rustc/middle/typeck.rs", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/71128e75b083c9e5915d4fe1aa99f3abeee8f043/src%2Frustc%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71128e75b083c9e5915d4fe1aa99f3abeee8f043/src%2Frustc%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck.rs?ref=71128e75b083c9e5915d4fe1aa99f3abeee8f043", "patch": "@@ -2646,13 +2646,13 @@ impl methods for lookup {\n                           tps: self_substs.tps + m_substs};\n         self.fcx.write_ty_substs(self.node_id, fty, all_substs);\n \n-        // FIXME--this treatment of self and regions seems wrong.  As a rule\n-        // of thumb, one ought to substitute all type parameters at once, and\n-        // we are not doing so here.  The danger you open up has to do with\n-        // the possibility that one of the substs in `all_substs` maps to a\n-        // self type.  Right now I think this is impossible but it may not be\n-        // forever, and it's just sloppy to substitute in multiple steps.\n-        // Probably the self parameter ought to be part of the all_substs.\n+        // n.b. This treatment of self is risky but ok.  As a rule of thumb,\n+        // one ought to substitute all type parameters at once, and we are not\n+        // doing so here.  The danger you open up has to do with the\n+        // possibility that one of the substs in `all_substs` maps to a self\n+        // type.  However, right now I think it is safe because the types in\n+        // `all_substs` may not refer to self.  This may not stay true\n+        // forever, though.\n \n         if has_self && !option::is_none(self_ty_sub) {\n             let fty = self.fcx.node_ty(self.node_id);\n@@ -2662,13 +2662,6 @@ impl methods for lookup {\n             self.fcx.write_ty(self.node_id, fty);\n         }\n \n-        if ty::type_has_regions(ty::ty_fn_ret(fty)) {\n-            let fty = self.fcx.node_ty(self.node_id);\n-            let self_region = region_of(self.fcx, self.expr);\n-            let fty = replace_self_region(self.tcx(), self_region, fty);\n-            self.fcx.write_ty(self.node_id, fty);\n-        }\n-\n         ret origin;\n     }\n }"}]}