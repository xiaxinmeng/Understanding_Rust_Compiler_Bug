{"sha": "009bbadd9202b12dcf3aa779129cd7e42005695c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwOWJiYWRkOTIwMmIxMmRjZjNhYTc3OTEyOWNkN2U0MjAwNTY5NWM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-19T21:14:47Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-19T21:14:49Z"}, "message": "core: Remove a FIXME. Closes #2002\n\nIt works for negative integers", "tree": {"sha": "1288945b3426daaa80b88287584cb43c14cb379b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1288945b3426daaa80b88287584cb43c14cb379b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/009bbadd9202b12dcf3aa779129cd7e42005695c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/009bbadd9202b12dcf3aa779129cd7e42005695c", "html_url": "https://github.com/rust-lang/rust/commit/009bbadd9202b12dcf3aa779129cd7e42005695c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/009bbadd9202b12dcf3aa779129cd7e42005695c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cec1a9b8592b573e40d81ba52d658bdcd9acacb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/cec1a9b8592b573e40d81ba52d658bdcd9acacb3", "html_url": "https://github.com/rust-lang/rust/commit/cec1a9b8592b573e40d81ba52d658bdcd9acacb3"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "5aed338bd6bff584cecbf78e9d312388cf3e3c24", "filename": "src/libcore/int.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/009bbadd9202b12dcf3aa779129cd7e42005695c/src%2Flibcore%2Fint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/009bbadd9202b12dcf3aa779129cd7e42005695c/src%2Flibcore%2Fint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fint.rs?ref=009bbadd9202b12dcf3aa779129cd7e42005695c", "patch": "@@ -35,9 +35,6 @@ pure fn negative(x: int) -> bool { ret x < 0; }\n pure fn nonpositive(x: int) -> bool { ret x <= 0; }\n pure fn nonnegative(x: int) -> bool { ret x >= 0; }\n \n-\n-// FIXME: Make sure this works with negative integers.\n-// See Issue #2002\n #[doc = \"Produce a uint suitable for use in a hash table\"]\n pure fn hash(x: int) -> uint { ret x as uint; }\n "}]}