{"sha": "64d4f4255880bbfb400551db38b76871276eaca6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0ZDRmNDI1NTg4MGJiZmI0MDA1NTFkYjM4Yjc2ODcxMjc2ZWFjYTY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-25T11:25:30Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-25T11:25:30Z"}, "message": "reduce visibility", "tree": {"sha": "d85e49c985b92a9ccf1303a089dccdd4c805db1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d85e49c985b92a9ccf1303a089dccdd4c805db1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64d4f4255880bbfb400551db38b76871276eaca6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64d4f4255880bbfb400551db38b76871276eaca6", "html_url": "https://github.com/rust-lang/rust/commit/64d4f4255880bbfb400551db38b76871276eaca6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64d4f4255880bbfb400551db38b76871276eaca6/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87ac5f5b36602922bb45b3a5343010fa305089eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/87ac5f5b36602922bb45b3a5343010fa305089eb", "html_url": "https://github.com/rust-lang/rust/commit/87ac5f5b36602922bb45b3a5343010fa305089eb"}], "stats": {"total": 13, "additions": 3, "deletions": 10}, "files": [{"sha": "ec6a10353ab47ca57ea18482e60f2e45f328b384", "filename": "crates/ra_hir/src/adt.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/64d4f4255880bbfb400551db38b76871276eaca6/crates%2Fra_hir%2Fsrc%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64d4f4255880bbfb400551db38b76871276eaca6/crates%2Fra_hir%2Fsrc%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fadt.rs?ref=64d4f4255880bbfb400551db38b76871276eaca6", "patch": "@@ -111,9 +111,9 @@ pub(crate) struct EnumVariantId(RawId);\n impl_arena_id!(EnumVariantId);\n \n #[derive(Debug, Clone, PartialEq, Eq)]\n-pub struct EnumVariantData {\n+pub(crate) struct EnumVariantData {\n     pub(crate) name: Option<Name>,\n-    pub(crate) variant_data: Arc<VariantData>,\n+    variant_data: Arc<VariantData>,\n }\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n@@ -129,7 +129,7 @@ pub struct StructFieldData {\n \n /// Fields of an enum variant or struct\n #[derive(Debug, Clone, PartialEq, Eq)]\n-pub struct VariantData(VariantDataInner);\n+pub(crate) struct VariantData(VariantDataInner);\n \n #[derive(Debug, Clone, PartialEq, Eq)]\n enum VariantDataInner {\n@@ -175,11 +175,4 @@ impl VariantData {\n         };\n         VariantData(inner)\n     }\n-\n-    // pub(crate) fn get_field_type_ref(&self, field_name: &Name) -> Option<&TypeRef> {\n-    //     self.fields()\n-    //         .iter()\n-    //         .find(|f| f.name == *field_name)\n-    //         .map(|f| &f.type_ref)\n-    // }\n }"}]}