{"sha": "5b2b310827e83547ff1e1325229db1e01cb0513b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViMmIzMTA4MjdlODM1NDdmZjFlMTMyNTIyOWRiMWUwMWNiMDUxM2I=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-03-09T09:02:20Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-03-09T09:02:20Z"}, "message": "Clarify that all caps are experimental", "tree": {"sha": "28d27c7480018140ae7d06e04a0aa6391d8fbb17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28d27c7480018140ae7d06e04a0aa6391d8fbb17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b2b310827e83547ff1e1325229db1e01cb0513b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b2b310827e83547ff1e1325229db1e01cb0513b", "html_url": "https://github.com/rust-lang/rust/commit/5b2b310827e83547ff1e1325229db1e01cb0513b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b2b310827e83547ff1e1325229db1e01cb0513b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fdf26a6fcaa557e9c3652cca5c0e0802956ee3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fdf26a6fcaa557e9c3652cca5c0e0802956ee3f", "html_url": "https://github.com/rust-lang/rust/commit/3fdf26a6fcaa557e9c3652cca5c0e0802956ee3f"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "dd3ecc18d4c14a23dc84762f023113d88fb0cff7", "filename": "docs/dev/lsp-extensions.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5b2b310827e83547ff1e1325229db1e01cb0513b/docs%2Fdev%2Flsp-extensions.md", "raw_url": "https://github.com/rust-lang/rust/raw/5b2b310827e83547ff1e1325229db1e01cb0513b/docs%2Fdev%2Flsp-extensions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Flsp-extensions.md?ref=5b2b310827e83547ff1e1325229db1e01cb0513b", "patch": "@@ -39,7 +39,7 @@ If a language client does not know about `rust-analyzer`'s configuration options\n \n **Issue:** https://github.com/microsoft/language-server-protocol/issues/724\n \n-**Client Capability:** `{ \"snippetTextEdit\": boolean }`\n+**Experimental Client Capability:** `{ \"snippetTextEdit\": boolean }`\n \n If this capability is set, `WorkspaceEdit`s returned from `codeAction` requests might contain `SnippetTextEdit`s instead of usual `TextEdit`s:\n \n@@ -72,7 +72,7 @@ At the moment, rust-analyzer guarantees that only a single edit will have `Inser\n \n **Issue:** https://github.com/microsoft/language-server-protocol/issues/994\n \n-**Client Capability:** `{ \"codeActionGroup\": boolean }`\n+**Experimental Client Capability:** `{ \"codeActionGroup\": boolean }`\n \n If this capability is set, `CodeAction` returned from the server contain an additional field, `group`:\n \n@@ -119,7 +119,7 @@ Invoking code action at this position will yield two code actions for importing\n \n **Issue:** https://github.com/microsoft/language-server-protocol/issues/1002\n \n-**Server Capability:** `{ \"parentModule\": boolean }`\n+**Experimental Server Capability:** `{ \"parentModule\": boolean }`\n \n This request is sent from client to server to handle \"Goto Parent Module\" editor action.\n \n@@ -153,7 +153,7 @@ mod foo;\n \n **Issue:** https://github.com/microsoft/language-server-protocol/issues/992\n \n-**Server Capability:** `{ \"joinLines\": boolean }`\n+**Experimental Server Capability:** `{ \"joinLines\": boolean }`\n \n This request is sent from client to server to handle \"Join Lines\" editor action.\n \n@@ -200,7 +200,7 @@ fn main() {\n \n **Issue:** https://github.com/microsoft/language-server-protocol/issues/1001\n \n-**Server Capability:** `{ \"onEnter\": boolean }`\n+**Experimental Server Capability:** `{ \"onEnter\": boolean }`\n \n This request is sent from client to server to handle <kbd>Enter</kbd> keypress.\n \n@@ -251,7 +251,7 @@ As proper cursor positioning is raison-d'etat for `onEnter`, it uses `SnippetTex\n \n ## Structural Search Replace (SSR)\n \n-**Server Capability:** `{ \"ssr\": boolean }`\n+**Experimental Server Capability:** `{ \"ssr\": boolean }`\n \n This request is sent from client to server to handle structural search replace -- automated syntax tree based transformation of the source.\n \n@@ -293,7 +293,7 @@ SSR with query `foo($a, $b) ==>> ($a).foo($b)` will transform, eg `foo(y + 5, z)\n \n **Issue:** https://github.com/microsoft/language-server-protocol/issues/999\n \n-**Server Capability:** `{ \"matchingBrace\": boolean }`\n+**Experimental Server Capability:** `{ \"matchingBrace\": boolean }`\n \n This request is sent from client to server to handle \"Matching Brace\" editor action.\n \n@@ -338,7 +338,7 @@ Moreover, it would be cool if editors didn't need to implement even basic langua\n \n **Issue:** https://github.com/microsoft/language-server-protocol/issues/944\n \n-**Server Capability:** `{ \"runnables\": { \"kinds\": string[] } }`\n+**Experimental Server Capability:** `{ \"runnables\": { \"kinds\": string[] } }`\n \n This request is sent from client to server to get the list of things that can be run (tests, binaries, `cargo check -p`).\n \n@@ -421,7 +421,7 @@ Reloads project information (that is, re-executes `cargo metadata`).\n \n ## Status Notification\n \n-**Client Capability:** `{ \"statusNotification\": boolean }`\n+**Experimental Client Capability:** `{ \"statusNotification\": boolean }`\n \n **Method:** `rust-analyzer/status`\n \n@@ -519,7 +519,7 @@ interface InlayHint {\n \n ## Hover Actions\n \n-**Client Capability:** `{ \"hoverActions\": boolean }`\n+**Experimental Client Capability:** `{ \"hoverActions\": boolean }`\n \n If this capability is set, `Hover` request returned from the server might contain an additional field, `actions`:\n "}]}