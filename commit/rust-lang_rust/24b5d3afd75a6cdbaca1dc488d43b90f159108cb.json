{"sha": "24b5d3afd75a6cdbaca1dc488d43b90f159108cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0YjVkM2FmZDc1YTZjZGJhY2ExZGM0ODhkNDNiOTBmMTU5MTA4Y2I=", "commit": {"author": {"name": "Simon Mazur", "email": "semmaz.box@gmail.com", "date": "2015-09-23T23:03:47Z"}, "committer": {"name": "Simon Mazur", "email": "semmaz.box@gmail.com", "date": "2015-09-29T12:24:04Z"}, "message": "Improve speed of `fmt::Debug` for `str` and `char`\n\nfixes #26920", "tree": {"sha": "e69f8b7a786f7129690606def441cabadb8b9a89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e69f8b7a786f7129690606def441cabadb8b9a89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24b5d3afd75a6cdbaca1dc488d43b90f159108cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24b5d3afd75a6cdbaca1dc488d43b90f159108cb", "html_url": "https://github.com/rust-lang/rust/commit/24b5d3afd75a6cdbaca1dc488d43b90f159108cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24b5d3afd75a6cdbaca1dc488d43b90f159108cb/comments", "author": {"login": "semmaz", "id": 3989426, "node_id": "MDQ6VXNlcjM5ODk0MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/3989426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semmaz", "html_url": "https://github.com/semmaz", "followers_url": "https://api.github.com/users/semmaz/followers", "following_url": "https://api.github.com/users/semmaz/following{/other_user}", "gists_url": "https://api.github.com/users/semmaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/semmaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semmaz/subscriptions", "organizations_url": "https://api.github.com/users/semmaz/orgs", "repos_url": "https://api.github.com/users/semmaz/repos", "events_url": "https://api.github.com/users/semmaz/events{/privacy}", "received_events_url": "https://api.github.com/users/semmaz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semmaz", "id": 3989426, "node_id": "MDQ6VXNlcjM5ODk0MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/3989426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semmaz", "html_url": "https://github.com/semmaz", "followers_url": "https://api.github.com/users/semmaz/followers", "following_url": "https://api.github.com/users/semmaz/following{/other_user}", "gists_url": "https://api.github.com/users/semmaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/semmaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semmaz/subscriptions", "organizations_url": "https://api.github.com/users/semmaz/orgs", "repos_url": "https://api.github.com/users/semmaz/repos", "events_url": "https://api.github.com/users/semmaz/events{/privacy}", "received_events_url": "https://api.github.com/users/semmaz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ca60d94316bd56f412ef4c13292237e206babf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ca60d94316bd56f412ef4c13292237e206babf1", "html_url": "https://github.com/rust-lang/rust/commit/5ca60d94316bd56f412ef4c13292237e206babf1"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "a697c8c320e30895593588161c592c68c4429680", "filename": "src/libcore/char.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/24b5d3afd75a6cdbaca1dc488d43b90f159108cb/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24b5d3afd75a6cdbaca1dc488d43b90f159108cb/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=24b5d3afd75a6cdbaca1dc488d43b90f159108cb", "patch": "@@ -147,6 +147,7 @@ pub trait CharExt {\n     fn to_digit(self, radix: u32) -> Option<u32>;\n     fn escape_unicode(self) -> EscapeUnicode;\n     fn escape_default(self) -> EscapeDefault;\n+    fn needs_escape_default(self) -> bool;\n     fn len_utf8(self) -> usize;\n     fn len_utf16(self) -> usize;\n     fn encode_utf8(self, dst: &mut [u8]) -> Option<usize>;\n@@ -194,6 +195,15 @@ impl CharExt for char {\n         EscapeDefault { state: init_state }\n     }\n \n+    #[inline]\n+    fn needs_escape_default(self) -> bool {\n+        match self {\n+            '\\\\' | '\\'' | '\"' => true,\n+            '\\x20' ... '\\x7e' => false,\n+            _ => true\n+        }\n+    }\n+\n     #[inline]\n     fn len_utf8(self) -> usize {\n         let code = self as u32;"}, {"sha": "cbcb3026a8e4c4b9c8031a6d0674540a1051248d", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/24b5d3afd75a6cdbaca1dc488d43b90f159108cb/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24b5d3afd75a6cdbaca1dc488d43b90f159108cb/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=24b5d3afd75a6cdbaca1dc488d43b90f159108cb", "patch": "@@ -1310,11 +1310,20 @@ impl Display for bool {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Debug for str {\n     fn fmt(&self, f: &mut Formatter) -> Result {\n-        try!(write!(f, \"\\\"\"));\n-        for c in self.chars().flat_map(|c| c.escape_default()) {\n-            try!(f.write_char(c))\n+        try!(f.write_char('\"'));\n+        let mut from = 0;\n+        for (i, c) in self.char_indices() {\n+            // If char needs escaping, flush backlog so far and write, else skip\n+            if c.needs_escape_default() {\n+                try!(f.write_str(&self[from..i]));\n+                for e in c.escape_default() {\n+                    try!(f.write_char(e));\n+                }\n+                from = i + c.len_utf8();\n+            }\n         }\n-        write!(f, \"\\\"\")\n+        try!(f.write_str(&self[from..]));\n+        f.write_char('\"')\n     }\n }\n \n@@ -1328,12 +1337,11 @@ impl Display for str {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Debug for char {\n     fn fmt(&self, f: &mut Formatter) -> Result {\n-        use char::CharExt;\n-        try!(write!(f, \"'\"));\n+        try!(f.write_char('\\''));\n         for c in self.escape_default() {\n             try!(f.write_char(c))\n         }\n-        write!(f, \"'\")\n+        f.write_char('\\'')\n     }\n }\n "}]}