{"sha": "deeae2fce46cba99a2dcce835b85f7d42238c3c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlZWFlMmZjZTQ2Y2JhOTlhMmRjY2U4MzViODVmN2Q0MjIzOGMzYzg=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-30T10:42:18Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-30T10:42:24Z"}, "message": "Small change", "tree": {"sha": "2252488d601aad7b78e43fc515710b420b2b8462", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2252488d601aad7b78e43fc515710b420b2b8462"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/deeae2fce46cba99a2dcce835b85f7d42238c3c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/deeae2fce46cba99a2dcce835b85f7d42238c3c8", "html_url": "https://github.com/rust-lang/rust/commit/deeae2fce46cba99a2dcce835b85f7d42238c3c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/deeae2fce46cba99a2dcce835b85f7d42238c3c8/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16593d264c7803b78156c02b2ac596f6d98333c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/16593d264c7803b78156c02b2ac596f6d98333c7", "html_url": "https://github.com/rust-lang/rust/commit/16593d264c7803b78156c02b2ac596f6d98333c7"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "dc6bac0e426be48c435588b355de0330fa070b03", "filename": "src/abi/mod.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/deeae2fce46cba99a2dcce835b85f7d42238c3c8/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deeae2fce46cba99a2dcce835b85f7d42238c3c8/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=deeae2fce46cba99a2dcce835b85f7d42238c3c8", "patch": "@@ -49,12 +49,7 @@ fn clif_sig_from_fn_sig<'tcx>(tcx: TyCtxt<'tcx>, sig: FnSig<'tcx>, is_vtable_fn:\n                 // See https://github.com/rust-lang/rust/blob/37b6a5e5e82497caf5353d9d856e4eb5d14cbe06/src/librustc/ty/layout.rs#L2519-L2572 for more info\n                 layout = tcx.layout_of(ParamEnv::reveal_all().and(tcx.mk_mut_ptr(tcx.mk_unit()))).unwrap();\n             }\n-            match get_pass_mode(tcx, layout) {\n-                PassMode::NoPass => Empty,\n-                PassMode::ByVal(clif_ty) => Single(clif_ty),\n-                PassMode::ByValPair(clif_ty_a, clif_ty_b) => Pair(clif_ty_a, clif_ty_b),\n-                PassMode::ByRef => Single(pointer_ty(tcx)),\n-            }.into_iter()\n+            get_pass_mode(tcx, layout).get_param_ty(tcx).into_iter()\n         }).flatten();\n \n     let (params, returns) = match get_pass_mode(tcx, tcx.layout_of(ParamEnv::reveal_all().and(output)).unwrap()) {"}, {"sha": "4608562e993e38b61a307ea5c53c95b0bd4c34ed", "filename": "src/abi/pass_mode.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/deeae2fce46cba99a2dcce835b85f7d42238c3c8/src%2Fabi%2Fpass_mode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deeae2fce46cba99a2dcce835b85f7d42238c3c8/src%2Fabi%2Fpass_mode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fpass_mode.rs?ref=deeae2fce46cba99a2dcce835b85f7d42238c3c8", "patch": "@@ -65,12 +65,12 @@ impl<T: std::fmt::Debug> EmptySinglePair<T> {\n pub use EmptySinglePair::*;\n \n impl PassMode {\n-    pub fn get_param_ty(self, fx: &FunctionCx<impl Backend>) -> EmptySinglePair<Type> {\n+    pub fn get_param_ty(self, tcx: TyCtxt<'_>) -> EmptySinglePair<Type> {\n         match self {\n             PassMode::NoPass => Empty,\n             PassMode::ByVal(clif_type) => Single(clif_type),\n             PassMode::ByValPair(a, b) => Pair(a, b),\n-            PassMode::ByRef => Single(fx.pointer_type),\n+            PassMode::ByRef => Single(pointer_ty(tcx)),\n         }\n     }\n }\n@@ -141,7 +141,7 @@ pub fn cvalue_for_param<'tcx>(\n         return None;\n     }\n \n-    let clif_types = pass_mode.get_param_ty(fx);\n+    let clif_types = pass_mode.get_param_ty(fx.tcx);\n     let ebb_params = clif_types.map(|t| fx.bcx.append_ebb_param(start_ebb, t));\n \n     #[cfg(debug_assertions)]"}]}