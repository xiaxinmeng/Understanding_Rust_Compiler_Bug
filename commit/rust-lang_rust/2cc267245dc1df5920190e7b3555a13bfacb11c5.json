{"sha": "2cc267245dc1df5920190e7b3555a13bfacb11c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYzI2NzI0NWRjMWRmNTkyMDE5MGU3YjM1NTVhMTNiZmFjYjExYzU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-06-13T14:47:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-13T14:47:40Z"}, "message": "Rollup merge of #72932 - poliorcetics:pattern-contains-behaviour, r=hanna-kruppe\n\nClarify the behaviour of Pattern when used with methods like str::contains\n\nFixes #45507.\n\nI used the previous work by @Emerentius (thanks !), added a paragraph and checked the links (they work for me but I'm not against someone else checking them too).", "tree": {"sha": "15092a1a447669651d4d1d4656c5f2f95b01495d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15092a1a447669651d4d1d4656c5f2f95b01495d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cc267245dc1df5920190e7b3555a13bfacb11c5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe5OcMCRBK7hj4Ov3rIwAAdHIIAHimbyrYRZQlL1gQPkVe6mQP\nmztLNg4MYnQN+DYxfYiVRyny3yZsr5D7Vit2dliUz4O+Z4mMPJeb7rB430hdkpoY\npKo4AQ5b44NAjJYPd/v3G4qPfJJNz1GajzIIkKwn5rW4vuw9t5slFOHF//4ao5Lm\nD+IYp5ccJwZ2VjwmlRw5sepqdPGiiuE01aaV7KgHD8mGfpOG4VWPPYzxxW2rMnwb\nICeHrJrKXwEwVziDZDJaf/rG1KF9cTbTi7cbUDzOHn1JYXNStjsiWGAlTM3+PKFi\nN0B8rEDCyQ/+LiX7rsG7kCeGkP4QdfrH4cgFq4WyYBxxbAQRn3FgYmzj1dYIUR4=\n=GMRc\n-----END PGP SIGNATURE-----\n", "payload": "tree 15092a1a447669651d4d1d4656c5f2f95b01495d\nparent 1fb612bd15bb3ef098fd24c20d0727de573b4410\nparent 4548eb8fcfa0a3d5dfd2766ee12736f67aca0234\nauthor Dylan DPC <dylan.dpc@gmail.com> 1592059660 +0200\ncommitter GitHub <noreply@github.com> 1592059660 +0200\n\nRollup merge of #72932 - poliorcetics:pattern-contains-behaviour, r=hanna-kruppe\n\nClarify the behaviour of Pattern when used with methods like str::contains\n\nFixes #45507.\n\nI used the previous work by @Emerentius (thanks !), added a paragraph and checked the links (they work for me but I'm not against someone else checking them too).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cc267245dc1df5920190e7b3555a13bfacb11c5", "html_url": "https://github.com/rust-lang/rust/commit/2cc267245dc1df5920190e7b3555a13bfacb11c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cc267245dc1df5920190e7b3555a13bfacb11c5/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fb612bd15bb3ef098fd24c20d0727de573b4410", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fb612bd15bb3ef098fd24c20d0727de573b4410", "html_url": "https://github.com/rust-lang/rust/commit/1fb612bd15bb3ef098fd24c20d0727de573b4410"}, {"sha": "4548eb8fcfa0a3d5dfd2766ee12736f67aca0234", "url": "https://api.github.com/repos/rust-lang/rust/commits/4548eb8fcfa0a3d5dfd2766ee12736f67aca0234", "html_url": "https://github.com/rust-lang/rust/commit/4548eb8fcfa0a3d5dfd2766ee12736f67aca0234"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "263d6b5efdff94ccac0cd2a3e511a87a272e066a", "filename": "src/libcore/str/pattern.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/2cc267245dc1df5920190e7b3555a13bfacb11c5/src%2Flibcore%2Fstr%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cc267245dc1df5920190e7b3555a13bfacb11c5/src%2Flibcore%2Fstr%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fpattern.rs?ref=2cc267245dc1df5920190e7b3555a13bfacb11c5", "patch": "@@ -60,6 +60,43 @@ use crate::slice::memchr;\n /// The trait itself acts as a builder for an associated\n /// `Searcher` type, which does the actual work of finding\n /// occurrences of the pattern in a string.\n+///\n+/// Depending on the type of the pattern, the behaviour of methods like\n+/// [`str::find`] and [`str::contains`] can change. The table below describes\n+/// some of those behaviours.\n+///\n+/// | Pattern type             | Match condition                           |\n+/// |--------------------------|-------------------------------------------|\n+/// | `&str`                   | is substring                              |\n+/// | `char`                   | is contained in string                    |\n+/// | `&[char]                 | any char in slice is contained in string  |\n+/// | `F: FnMut(char) -> bool` | `F` returns `true` for a char in string   |\n+/// | `&&str`                  | is substring                              |\n+/// | `&String`                | is substring                              |\n+///\n+/// # Examples\n+/// ```\n+/// // &str\n+/// assert_eq!(\"abaaa\".find(\"ba\"), Some(1));\n+/// assert_eq!(\"abaaa\".find(\"bac\"), None);\n+///\n+/// // char\n+/// assert_eq!(\"abaaa\".find('a'), Some(0));\n+/// assert_eq!(\"abaaa\".find('b'), Some(1));\n+/// assert_eq!(\"abaaa\".find('c'), None);\n+///\n+/// // &[char]\n+/// assert_eq!(\"ab\".find(&['b', 'a'][..]), Some(0));\n+/// assert_eq!(\"abaaa\".find(&['a', 'z'][..]), Some(0));\n+/// assert_eq!(\"abaaa\".find(&['c', 'd'][..]), None);\n+///\n+/// // FnMut(char) -> bool\n+/// assert_eq!(\"abcdef_z\".find(|ch| ch > 'd' && ch < 'y'), Some(4));\n+/// assert_eq!(\"abcddd_z\".find(|ch| ch > 'd' && ch < 'y'), None);\n+/// ```\n+///\n+/// [`str::find`]: ../../../std/primitive.str.html#method.find\n+/// [`str::contains`]: ../../../std/primitive.str.html#method.contains\n pub trait Pattern<'a>: Sized {\n     /// Associated searcher for this pattern\n     type Searcher: Searcher<'a>;"}]}