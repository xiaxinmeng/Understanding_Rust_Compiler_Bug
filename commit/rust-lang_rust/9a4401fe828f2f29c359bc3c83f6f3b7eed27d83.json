{"sha": "9a4401fe828f2f29c359bc3c83f6f3b7eed27d83", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhNDQwMWZlODI4ZjJmMjljMzU5YmMzYzgzZjZmM2I3ZWVkMjdkODM=", "commit": {"author": {"name": "Michael Sproul", "email": "micsproul@gmail.com", "date": "2015-01-18T01:20:24Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-01-20T19:27:51Z"}, "message": "Add some extended errors.", "tree": {"sha": "51e15a8b3a157c986bf21c5e86c20f45f635b952", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51e15a8b3a157c986bf21c5e86c20f45f635b952"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a4401fe828f2f29c359bc3c83f6f3b7eed27d83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a4401fe828f2f29c359bc3c83f6f3b7eed27d83", "html_url": "https://github.com/rust-lang/rust/commit/9a4401fe828f2f29c359bc3c83f6f3b7eed27d83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a4401fe828f2f29c359bc3c83f6f3b7eed27d83/comments", "author": {"login": "michaelsproul", "id": 4452260, "node_id": "MDQ6VXNlcjQ0NTIyNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelsproul", "html_url": "https://github.com/michaelsproul", "followers_url": "https://api.github.com/users/michaelsproul/followers", "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}", "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions", "organizations_url": "https://api.github.com/users/michaelsproul/orgs", "repos_url": "https://api.github.com/users/michaelsproul/repos", "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelsproul/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f59f7e0525ad44a11fb0614ef1626274ddaa918", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f59f7e0525ad44a11fb0614ef1626274ddaa918", "html_url": "https://github.com/rust-lang/rust/commit/9f59f7e0525ad44a11fb0614ef1626274ddaa918"}], "stats": {"total": 46, "additions": 40, "deletions": 6}, "files": [{"sha": "b48df36a6793118c72b1526bd6ed3ad6d02260bc", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 34, "deletions": 6, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/9a4401fe828f2f29c359bc3c83f6f3b7eed27d83/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a4401fe828f2f29c359bc3c83f6f3b7eed27d83/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=9a4401fe828f2f29c359bc3c83f6f3b7eed27d83", "patch": "@@ -10,21 +10,49 @@\n \n #![allow(non_snake_case)]\n \n-register_diagnostic! { E0001, r##\"\n+register_long_diagnostics! {\n+    E0001: r##\"\n     This error suggests that the expression arm corresponding to the noted pattern\n     will never be reached as for all possible values of the expression being matched,\n     one of the preceeding patterns will match.\n \n     This means that perhaps some of the preceeding patterns are too general, this\n     one is too specific or the ordering is incorrect.\n-\"## }\n+\"##,\n+\n+    E0003: r##\"\n+    Not-a-Number (NaN) values can not be compared for equality and hence can never match\n+    the input to a match expression. To match against NaN values, you should instead use\n+    the `is_nan` method in a guard, as in: x if x.is_nan() => ...\n+\"##,\n+\n+    E0004: r##\"\n+    This error indicates that the compiler can not guarantee a matching pattern for one\n+    or more possible inputs to a match expression. Guaranteed matches are required in order\n+    to assign values to match expressions, or alternatively, determine the flow of execution.\n+\n+    If you encounter this error you must alter your patterns so that every possible value of\n+    the input type is matched. For types with a small number of variants (like enums) you\n+    should probably cover all cases explicitly. Alternatively, the underscore `_` wildcard\n+    pattern can be added after all other patterns to match \"anything else\".\n+\"##,\n+\n+    // FIXME: Remove duplication here?\n+    E0005: r##\"\n+    Patterns used to bind names must be irrefutable, that is, they must guarantee that a\n+    name will be extracted in all cases. If you encounter this error you probably need\n+    to use a `match` or `if let` to deal with the possibility of failure.\n+\"##,\n+\n+    E0006: r##\"\n+    Patterns used to bind names must be irrefutable, that is, they must guarantee that a\n+    name will be extracted in all cases. If you encounter this error you probably need\n+    to use a `match` or `if let` to deal with the possibility of failure.\n+\"##\n+}\n \n register_diagnostics! {\n     E0002,\n-    E0003,\n-    E0004,\n-    E0005,\n-    E0006,\n     E0007,\n     E0008,\n     E0009,"}, {"sha": "9321d3ca3df1141196a45917db933c208d3fb56d", "filename": "src/libsyntax/diagnostics/macros.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9a4401fe828f2f29c359bc3c83f6f3b7eed27d83/src%2Flibsyntax%2Fdiagnostics%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a4401fe828f2f29c359bc3c83f6f3b7eed27d83/src%2Flibsyntax%2Fdiagnostics%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostics%2Fmacros.rs?ref=9a4401fe828f2f29c359bc3c83f6f3b7eed27d83", "patch": "@@ -59,3 +59,9 @@ macro_rules! register_diagnostics {\n     )\n }\n \n+#[macro_export]\n+macro_rules! register_long_diagnostics {\n+    ($($code:tt: $description:tt),*) => (\n+        $(register_diagnostic! { $code, $description })*\n+    )\n+}"}]}