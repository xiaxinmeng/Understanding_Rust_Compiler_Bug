{"sha": "cb81dc535c453ed6e0368fe7b8336ba177950a2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiODFkYzUzNWM0NTNlZDZlMDM2OGZlN2I4MzM2YmExNzc5NTBhMmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-23T02:48:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-23T02:48:13Z"}, "message": "Auto merge of #82585 - TrolledWoods:master, r=dtolnay\n\nAdded CharIndices::offset function\n\nThe CharIndices iterator has a field internally called front_offset, that I think would be very useful to have access to.\n\nYou can already do something like ``char_indices.next().map(|(offset, _)| offset)``, but that is wordy, in addition to not handling the case where the iterator has ended, where you'd want the offset to be equal to the length.\n\nI'm very new to the open source world and the rust repository, so I'm sorry if I missed a step or did something weird.", "tree": {"sha": "30f499a1cd5d6aee4cc4ea5285ca61d5f35ffb60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30f499a1cd5d6aee4cc4ea5285ca61d5f35ffb60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb81dc535c453ed6e0368fe7b8336ba177950a2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb81dc535c453ed6e0368fe7b8336ba177950a2d", "html_url": "https://github.com/rust-lang/rust/commit/cb81dc535c453ed6e0368fe7b8336ba177950a2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb81dc535c453ed6e0368fe7b8336ba177950a2d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4a8cf0a00580eeb093774681db74e5f2ba57c85", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4a8cf0a00580eeb093774681db74e5f2ba57c85", "html_url": "https://github.com/rust-lang/rust/commit/f4a8cf0a00580eeb093774681db74e5f2ba57c85"}, {"sha": "fa1624cf135b141c1e4a524d7e001a727b305755", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa1624cf135b141c1e4a524d7e001a727b305755", "html_url": "https://github.com/rust-lang/rust/commit/fa1624cf135b141c1e4a524d7e001a727b305755"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "9f8a6f3d3b54fbd40397bacd8f34cc48120b4dd6", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cb81dc535c453ed6e0368fe7b8336ba177950a2d/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb81dc535c453ed6e0368fe7b8336ba177950a2d/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=cb81dc535c453ed6e0368fe7b8336ba177950a2d", "patch": "@@ -137,6 +137,7 @@\n #![feature(stmt_expr_attributes)]\n #![feature(str_split_as_str)]\n #![feature(str_split_inclusive_as_str)]\n+#![feature(char_indices_offset)]\n #![feature(trait_alias)]\n #![feature(transparent_unions)]\n #![feature(try_blocks)]"}, {"sha": "724137aba9f3c57696bbd6dff4baf58719ad13a9", "filename": "library/core/src/str/iter.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/cb81dc535c453ed6e0368fe7b8336ba177950a2d/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb81dc535c453ed6e0368fe7b8336ba177950a2d/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs?ref=cb81dc535c453ed6e0368fe7b8336ba177950a2d", "patch": "@@ -189,6 +189,30 @@ impl<'a> CharIndices<'a> {\n     pub fn as_str(&self) -> &'a str {\n         self.iter.as_str()\n     }\n+\n+    /// Returns the byte position of the next character, or the length\n+    /// of the underlying string if there are no more characters.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(char_indices_offset)]\n+    /// let mut chars = \"a\u697d\".char_indices();\n+    ///\n+    /// assert_eq!(chars.offset(), 0);\n+    /// assert_eq!(chars.next(), Some((0, 'a')));\n+    ///\n+    /// assert_eq!(chars.offset(), 1);\n+    /// assert_eq!(chars.next(), Some((1, '\u697d')));\n+    ///\n+    /// assert_eq!(chars.offset(), 4);\n+    /// assert_eq!(chars.next(), None);\n+    /// ```\n+    #[inline]\n+    #[unstable(feature = \"char_indices_offset\", issue = \"83871\")]\n+    pub fn offset(&self) -> usize {\n+        self.front_offset\n+    }\n }\n \n /// An iterator over the bytes of a string slice."}]}