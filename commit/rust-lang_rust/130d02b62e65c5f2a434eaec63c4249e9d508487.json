{"sha": "130d02b62e65c5f2a434eaec63c4249e9d508487", "node_id": "C_kwDOAAsO6NoAKDEzMGQwMmI2MmU2NWM1ZjJhNDM0ZWFlYzYzYzQyNDllOWQ1MDg0ODc", "commit": {"author": {"name": "Nick Lamb", "email": "git@tree.tlrmx.org", "date": "2023-01-14T14:51:17Z"}, "committer": {"name": "Nick Lamb", "email": "git@tree.tlrmx.org", "date": "2023-01-14T21:27:14Z"}, "message": "Improve E0308: suggest user meant to use byte literal, w/ tests and fix\nsuggested by Nilstrieb\n\nCo-authored-by: nils <48135649+Nilstrieb@users.noreply.github.com>", "tree": {"sha": "00831f01020403ed503ca559cd8abeb15a2c1085", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00831f01020403ed503ca559cd8abeb15a2c1085"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/130d02b62e65c5f2a434eaec63c4249e9d508487", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/130d02b62e65c5f2a434eaec63c4249e9d508487", "html_url": "https://github.com/rust-lang/rust/commit/130d02b62e65c5f2a434eaec63c4249e9d508487", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/130d02b62e65c5f2a434eaec63c4249e9d508487/comments", "author": {"login": "tialaramex", "id": 29710, "node_id": "MDQ6VXNlcjI5NzEw", "avatar_url": "https://avatars.githubusercontent.com/u/29710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tialaramex", "html_url": "https://github.com/tialaramex", "followers_url": "https://api.github.com/users/tialaramex/followers", "following_url": "https://api.github.com/users/tialaramex/following{/other_user}", "gists_url": "https://api.github.com/users/tialaramex/gists{/gist_id}", "starred_url": "https://api.github.com/users/tialaramex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tialaramex/subscriptions", "organizations_url": "https://api.github.com/users/tialaramex/orgs", "repos_url": "https://api.github.com/users/tialaramex/repos", "events_url": "https://api.github.com/users/tialaramex/events{/privacy}", "received_events_url": "https://api.github.com/users/tialaramex/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tialaramex", "id": 29710, "node_id": "MDQ6VXNlcjI5NzEw", "avatar_url": "https://avatars.githubusercontent.com/u/29710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tialaramex", "html_url": "https://github.com/tialaramex", "followers_url": "https://api.github.com/users/tialaramex/followers", "following_url": "https://api.github.com/users/tialaramex/following{/other_user}", "gists_url": "https://api.github.com/users/tialaramex/gists{/gist_id}", "starred_url": "https://api.github.com/users/tialaramex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tialaramex/subscriptions", "organizations_url": "https://api.github.com/users/tialaramex/orgs", "repos_url": "https://api.github.com/users/tialaramex/repos", "events_url": "https://api.github.com/users/tialaramex/events{/privacy}", "received_events_url": "https://api.github.com/users/tialaramex/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44a500c8c187b245638684748f54bd6ec67e0b25", "url": "https://api.github.com/repos/rust-lang/rust/commits/44a500c8c187b245638684748f54bd6ec67e0b25", "html_url": "https://github.com/rust-lang/rust/commit/44a500c8c187b245638684748f54bd6ec67e0b25"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "abd99fc74dacc323b664a50f396b4911f15a6be5", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/130d02b62e65c5f2a434eaec63c4249e9d508487/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/130d02b62e65c5f2a434eaec63c4249e9d508487/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=130d02b62e65c5f2a434eaec63c4249e9d508487", "patch": "@@ -1923,6 +1923,22 @@ impl<'tcx> TypeErrCtxt<'_, 'tcx> {\n                         (ty::Tuple(fields), _) => {\n                             self.emit_tuple_wrap_err(&mut err, span, found, fields)\n                         }\n+                        // If a byte was expected and the found expression is a char literal\n+                        // containing a single ASCII character, perhaps the user meant to write `b'c'` to\n+                        // specify a byte literal\n+                        (ty::Uint(ty::UintTy::U8), ty::Char) => {\n+                            if let Ok(code) = self.tcx.sess().source_map().span_to_snippet(span)\n+                                && let Some(code) = code.strip_prefix('\\'').and_then(|s| s.strip_suffix('\\''))\n+                                && code.chars().next().map_or(false, |c| c.is_ascii())\n+                            {\n+                                err.span_suggestion(\n+                                    span,\n+                                    \"if you meant to write a byte literal, prefix with `b`\",\n+                                    format!(\"b'{}'\", escape_literal(code)),\n+                                    Applicability::MachineApplicable,\n+                                );\n+                            }\n+                        }\n                         // If a character was expected and the found expression is a string literal\n                         // containing a single character, perhaps the user meant to write `'c'` to\n                         // specify a character literal (issue #92479)"}, {"sha": "34199f8c37c101d2d7236a45ece953407427910d", "filename": "tests/ui/suggestions/type-mismatch-byte-literal.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/130d02b62e65c5f2a434eaec63c4249e9d508487/tests%2Fui%2Fsuggestions%2Ftype-mismatch-byte-literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/130d02b62e65c5f2a434eaec63c4249e9d508487/tests%2Fui%2Fsuggestions%2Ftype-mismatch-byte-literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Ftype-mismatch-byte-literal.rs?ref=130d02b62e65c5f2a434eaec63c4249e9d508487", "patch": "@@ -0,0 +1,18 @@\n+// Tests that a suggestion is issued for type mismatch errors when a\n+// u8 is expected and a char literal which is ASCII is supplied.\n+\n+fn foo(_t: u8) {}\n+\n+fn main() {\n+    let _x: u8 = 'X';\n+    //~^ ERROR: mismatched types [E0308]\n+    //~| HELP: if you meant to write a byte literal, prefix with `b`\n+\n+    foo('#');\n+    //~^ ERROR: mismatched types [E0308]\n+    //~| HELP: if you meant to write a byte literal, prefix with `b`\n+\n+    // Do not issue the suggestion if the char literal isn't ASCII\n+    let _t: u8 = '\u20ac';\n+    //~^ ERROR: mismatched types [E0308]\n+}"}, {"sha": "c9c2e7498d058c7953160e03f43494977bfa6deb", "filename": "tests/ui/suggestions/type-mismatch-byte-literal.stderr", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/130d02b62e65c5f2a434eaec63c4249e9d508487/tests%2Fui%2Fsuggestions%2Ftype-mismatch-byte-literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/130d02b62e65c5f2a434eaec63c4249e9d508487/tests%2Fui%2Fsuggestions%2Ftype-mismatch-byte-literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Ftype-mismatch-byte-literal.stderr?ref=130d02b62e65c5f2a434eaec63c4249e9d508487", "patch": "@@ -0,0 +1,42 @@\n+error[E0308]: mismatched types\n+  --> $DIR/type-mismatch-byte-literal.rs:7:18\n+   |\n+LL |     let _x: u8 = 'X';\n+   |             --   ^^^ expected `u8`, found `char`\n+   |             |\n+   |             expected due to this\n+   |\n+help: if you meant to write a byte literal, prefix with `b`\n+   |\n+LL |     let _x: u8 = b'X';\n+   |                  ~~~~\n+\n+error[E0308]: mismatched types\n+  --> $DIR/type-mismatch-byte-literal.rs:11:9\n+   |\n+LL |     foo('#');\n+   |     --- ^^^ expected `u8`, found `char`\n+   |     |\n+   |     arguments to this function are incorrect\n+   |\n+note: function defined here\n+  --> $DIR/type-mismatch-byte-literal.rs:4:4\n+   |\n+LL | fn foo(_t: u8) {}\n+   |    ^^^ ------\n+help: if you meant to write a byte literal, prefix with `b`\n+   |\n+LL |     foo(b'#');\n+   |         ~~~~\n+\n+error[E0308]: mismatched types\n+  --> $DIR/type-mismatch-byte-literal.rs:16:18\n+   |\n+LL |     let _t: u8 = '\u20ac';\n+   |             --   ^^^ expected `u8`, found `char`\n+   |             |\n+   |             expected due to this\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}