{"sha": "6990b89b2650d8263dad348173f4f729d6753360", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5OTBiODliMjY1MGQ4MjYzZGFkMzQ4MTczZjRmNzI5ZDY3NTMzNjA=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-02-28T03:39:38Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-02-28T03:47:38Z"}, "message": "Restrict visibilities to the containing DefMap", "tree": {"sha": "81a4a09539f49b5993a2315625b704c0a51943f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81a4a09539f49b5993a2315625b704c0a51943f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6990b89b2650d8263dad348173f4f729d6753360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6990b89b2650d8263dad348173f4f729d6753360", "html_url": "https://github.com/rust-lang/rust/commit/6990b89b2650d8263dad348173f4f729d6753360", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6990b89b2650d8263dad348173f4f729d6753360/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f682627da4be4777fa0c1527398ef4136cd929b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f682627da4be4777fa0c1527398ef4136cd929b1", "html_url": "https://github.com/rust-lang/rust/commit/f682627da4be4777fa0c1527398ef4136cd929b1"}], "stats": {"total": 50, "additions": 46, "deletions": 4}, "files": [{"sha": "8bca72a175983dd4e8cc06fb11e513d887f46487", "filename": "crates/hir_def/src/body/tests/block.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/6990b89b2650d8263dad348173f4f729d6753360/crates%2Fhir_def%2Fsrc%2Fbody%2Ftests%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6990b89b2650d8263dad348173f4f729d6753360/crates%2Fhir_def%2Fsrc%2Fbody%2Ftests%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Ftests%2Fblock.rs?ref=6990b89b2650d8263dad348173f4f729d6753360", "patch": "@@ -259,3 +259,32 @@ fn main() {\n     \"#]],\n     );\n }\n+\n+#[test]\n+fn underscore_import() {\n+    // This used to panic, because the default (private) visibility inside block expressions would\n+    // point into the containing `DefMap`, which visibilities should never be able to do.\n+    mark::check!(adjust_vis_in_block_def_map);\n+    check_at(\n+        r#\"\n+mod m {\n+    fn main() {\n+        use Tr as _;\n+        trait Tr {}\n+        $0\n+    }\n+}\n+    \"#,\n+        expect![[r#\"\n+        block scope\n+        _: t\n+        Tr: t\n+\n+        crate\n+        m: t\n+\n+        crate::m\n+        main: v\n+    \"#]],\n+    );\n+}"}, {"sha": "dd1db0094b67abb64eff6bff1b096027141e4023", "filename": "crates/hir_def/src/nameres/path_resolution.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6990b89b2650d8263dad348173f4f729d6753360/crates%2Fhir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6990b89b2650d8263dad348173f4f729d6753360/crates%2Fhir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs?ref=6990b89b2650d8263dad348173f4f729d6753360", "patch": "@@ -77,7 +77,7 @@ impl DefMap {\n         original_module: LocalModuleId,\n         visibility: &RawVisibility,\n     ) -> Option<Visibility> {\n-        match visibility {\n+        let mut vis = match visibility {\n             RawVisibility::Module(path) => {\n                 let (result, remaining) =\n                     self.resolve_path(db, original_module, &path, BuiltinShadowMode::Module);\n@@ -86,15 +86,28 @@ impl DefMap {\n                 }\n                 let types = result.take_types()?;\n                 match types {\n-                    ModuleDefId::ModuleId(m) => Some(Visibility::Module(m)),\n+                    ModuleDefId::ModuleId(m) => Visibility::Module(m),\n                     _ => {\n                         // error: visibility needs to refer to module\n-                        None\n+                        return None;\n                     }\n                 }\n             }\n-            RawVisibility::Public => Some(Visibility::Public),\n+            RawVisibility::Public => Visibility::Public,\n+        };\n+\n+        // In block expressions, `self` normally refers to the containing non-block module, and\n+        // `super` to its parent (etc.). However, visibilities must only refer to a module in the\n+        // DefMap they're written in, so we restrict them when that happens.\n+        if let Visibility::Module(m) = vis {\n+            if self.block_id() != m.block {\n+                mark::hit!(adjust_vis_in_block_def_map);\n+                vis = Visibility::Module(self.module_id(self.root()));\n+                log::debug!(\"visibility {:?} points outside DefMap, adjusting to {:?}\", m, vis);\n+            }\n         }\n+\n+        Some(vis)\n     }\n \n     // Returns Yes if we are sure that additions to `ItemMap` wouldn't change"}]}