{"sha": "f14b5d9ee6327967fdb69d32fc3c1b7c989acda7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNGI1ZDllZTYzMjc5NjdmZGI2OWQzMmZjM2MxYjdjOTg5YWNkYTc=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2018-06-06T23:33:24Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2018-06-07T10:32:12Z"}, "message": "Inline `process_obligation`.\n\nIt's very hot, and this speeds things up.", "tree": {"sha": "b09585a099f9983288a83b9bce3b5e234772d3f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b09585a099f9983288a83b9bce3b5e234772d3f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f14b5d9ee6327967fdb69d32fc3c1b7c989acda7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f14b5d9ee6327967fdb69d32fc3c1b7c989acda7", "html_url": "https://github.com/rust-lang/rust/commit/f14b5d9ee6327967fdb69d32fc3c1b7c989acda7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f14b5d9ee6327967fdb69d32fc3c1b7c989acda7/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b18a22a384001afe1c72b7182406bb44b815e9cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/b18a22a384001afe1c72b7182406bb44b815e9cf", "html_url": "https://github.com/rust-lang/rust/commit/b18a22a384001afe1c72b7182406bb44b815e9cf"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "68ad1e665adc334f39f4bd0671f0461416310dce", "filename": "src/librustc/traits/fulfill.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f14b5d9ee6327967fdb69d32fc3c1b7c989acda7/src%2Flibrustc%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f14b5d9ee6327967fdb69d32fc3c1b7c989acda7/src%2Flibrustc%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ffulfill.rs?ref=f14b5d9ee6327967fdb69d32fc3c1b7c989acda7", "patch": "@@ -266,6 +266,10 @@ impl<'a, 'b, 'gcx, 'tcx> ObligationProcessor for FulfillProcessor<'a, 'b, 'gcx,\n     /// - `Ok(Some(v))` if the predicate is true, presuming that `v` are also true\n     /// - `Ok(None)` if we don't have enough info to be sure\n     /// - `Err` if the predicate does not hold\n+    ///\n+    /// This is always inlined, despite its size, because it has a single\n+    /// callsite and it is called *very* frequently.\n+    #[inline(always)]\n     fn process_obligation(&mut self,\n                           pending_obligation: &mut Self::Obligation)\n                           -> Result<Option<Vec<Self::Obligation>>, Self::Error>"}]}